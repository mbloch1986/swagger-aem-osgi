package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties._

case class ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties (
  syncTranslationStateSchedulingFormat: Option[ConfigNodePropertyString],
schedulingRepeatTranslationSchedulingFormat: Option[ConfigNodePropertyString],
syncTranslationStateLockTimeoutInMinutes: Option[ConfigNodePropertyString],
exportFormat: Option[ConfigNodePropertyDropDown])

object ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplPropertiesCodecJson: CodecJson[ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties] = CodecJson.derive[ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties]
  implicit val ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplPropertiesDecoder: EntityDecoder[ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties] = jsonOf[ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties]
  implicit val ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplPropertiesEncoder: EntityEncoder[ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties] = jsonEncoderOf[ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties]
}
