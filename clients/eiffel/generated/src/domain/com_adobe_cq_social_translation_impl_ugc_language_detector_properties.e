note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_ADOBE_CQ_SOCIAL_TRANSLATION_IMPL_UGC_LANGUAGE_DETECTOR_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    event_topics: detachable CONFIG_NODE_PROPERTY_STRING 
      
    event_filter: detachable CONFIG_NODE_PROPERTY_STRING 
      
    translate_listener_type: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    translate_property_list: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    pool_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    max_pool_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    queue_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    keep_alive_time: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_event_topics (a_name: like event_topics)
        -- Set 'event_topics' with 'a_name'.
      do
        event_topics := a_name
      ensure
        event_topics_set: event_topics = a_name		
      end

    set_event_filter (a_name: like event_filter)
        -- Set 'event_filter' with 'a_name'.
      do
        event_filter := a_name
      ensure
        event_filter_set: event_filter = a_name		
      end

    set_translate_listener_type (a_name: like translate_listener_type)
        -- Set 'translate_listener_type' with 'a_name'.
      do
        translate_listener_type := a_name
      ensure
        translate_listener_type_set: translate_listener_type = a_name		
      end

    set_translate_property_list (a_name: like translate_property_list)
        -- Set 'translate_property_list' with 'a_name'.
      do
        translate_property_list := a_name
      ensure
        translate_property_list_set: translate_property_list = a_name		
      end

    set_pool_size (a_name: like pool_size)
        -- Set 'pool_size' with 'a_name'.
      do
        pool_size := a_name
      ensure
        pool_size_set: pool_size = a_name		
      end

    set_max_pool_size (a_name: like max_pool_size)
        -- Set 'max_pool_size' with 'a_name'.
      do
        max_pool_size := a_name
      ensure
        max_pool_size_set: max_pool_size = a_name		
      end

    set_queue_size (a_name: like queue_size)
        -- Set 'queue_size' with 'a_name'.
      do
        queue_size := a_name
      ensure
        queue_size_set: queue_size = a_name		
      end

    set_keep_alive_time (a_name: like keep_alive_time)
        -- Set 'keep_alive_time' with 'a_name'.
      do
        keep_alive_time := a_name
      ensure
        keep_alive_time_set: keep_alive_time = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_ADOBE_CQ_SOCIAL_TRANSLATION_IMPL_UGC_LANGUAGE_DETECTOR_PROPERTIES%N")
        if attached event_topics as l_event_topics then
          Result.append ("%Nevent_topics:")
          Result.append (l_event_topics.out)
          Result.append ("%N")    
        end  
        if attached event_filter as l_event_filter then
          Result.append ("%Nevent_filter:")
          Result.append (l_event_filter.out)
          Result.append ("%N")    
        end  
        if attached translate_listener_type as l_translate_listener_type then
          Result.append ("%Ntranslate_listener_type:")
          Result.append (l_translate_listener_type.out)
          Result.append ("%N")    
        end  
        if attached translate_property_list as l_translate_property_list then
          Result.append ("%Ntranslate_property_list:")
          Result.append (l_translate_property_list.out)
          Result.append ("%N")    
        end  
        if attached pool_size as l_pool_size then
          Result.append ("%Npool_size:")
          Result.append (l_pool_size.out)
          Result.append ("%N")    
        end  
        if attached max_pool_size as l_max_pool_size then
          Result.append ("%Nmax_pool_size:")
          Result.append (l_max_pool_size.out)
          Result.append ("%N")    
        end  
        if attached queue_size as l_queue_size then
          Result.append ("%Nqueue_size:")
          Result.append (l_queue_size.out)
          Result.append ("%N")    
        end  
        if attached keep_alive_time as l_keep_alive_time then
          Result.append ("%Nkeep_alive_time:")
          Result.append (l_keep_alive_time.out)
          Result.append ("%N")    
        end  
      end
end


