/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties
    /// </summary>
    [DataContract]
    public partial class ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties :  IEquatable<ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties" /> class.
        /// </summary>
        /// <param name="nuiEnabled">nuiEnabled.</param>
        /// <param name="nuiServiceUrl">nuiServiceUrl.</param>
        /// <param name="nuiApiKey">nuiApiKey.</param>
        public ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties(ConfigNodePropertyBoolean nuiEnabled = default(ConfigNodePropertyBoolean), ConfigNodePropertyString nuiServiceUrl = default(ConfigNodePropertyString), ConfigNodePropertyString nuiApiKey = default(ConfigNodePropertyString))
        {
            this.NuiEnabled = nuiEnabled;
            this.NuiServiceUrl = nuiServiceUrl;
            this.NuiApiKey = nuiApiKey;
        }
        
        /// <summary>
        /// Gets or Sets NuiEnabled
        /// </summary>
        [DataMember(Name="nuiEnabled", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean NuiEnabled { get; set; }

        /// <summary>
        /// Gets or Sets NuiServiceUrl
        /// </summary>
        [DataMember(Name="nuiServiceUrl", EmitDefaultValue=false)]
        public ConfigNodePropertyString NuiServiceUrl { get; set; }

        /// <summary>
        /// Gets or Sets NuiApiKey
        /// </summary>
        [DataMember(Name="nuiApiKey", EmitDefaultValue=false)]
        public ConfigNodePropertyString NuiApiKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties {\n");
            sb.Append("  NuiEnabled: ").Append(NuiEnabled).Append("\n");
            sb.Append("  NuiServiceUrl: ").Append(NuiServiceUrl).Append("\n");
            sb.Append("  NuiApiKey: ").Append(NuiApiKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties);
        }

        /// <summary>
        /// Returns true if ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.NuiEnabled == input.NuiEnabled ||
                    (this.NuiEnabled != null &&
                    this.NuiEnabled.Equals(input.NuiEnabled))
                ) && 
                (
                    this.NuiServiceUrl == input.NuiServiceUrl ||
                    (this.NuiServiceUrl != null &&
                    this.NuiServiceUrl.Equals(input.NuiServiceUrl))
                ) && 
                (
                    this.NuiApiKey == input.NuiApiKey ||
                    (this.NuiApiKey != null &&
                    this.NuiApiKey.Equals(input.NuiApiKey))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NuiEnabled != null)
                    hashCode = hashCode * 59 + this.NuiEnabled.GetHashCode();
                if (this.NuiServiceUrl != null)
                    hashCode = hashCode * 59 + this.NuiServiceUrl.GetHashCode();
                if (this.NuiApiKey != null)
                    hashCode = hashCode * 59 + this.NuiApiKey.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
