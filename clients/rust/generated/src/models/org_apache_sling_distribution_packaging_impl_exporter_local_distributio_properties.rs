/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingDistributionPackagingImplExporterLocalDistributioProperties {
  #[serde(rename = "name")]
  name: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "packageBuilder.target")]
  package_builder_target: Option<::models::ConfigNodePropertyString>
}

impl OrgApacheSlingDistributionPackagingImplExporterLocalDistributioProperties {
  pub fn new() -> OrgApacheSlingDistributionPackagingImplExporterLocalDistributioProperties {
    OrgApacheSlingDistributionPackagingImplExporterLocalDistributioProperties {
      name: None,
      package_builder_target: None
    }
  }

  pub fn set_name(&mut self, name: ::models::ConfigNodePropertyString) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: ::models::ConfigNodePropertyString) -> OrgApacheSlingDistributionPackagingImplExporterLocalDistributioProperties {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

  pub fn set_package_builder_target(&mut self, package_builder_target: ::models::ConfigNodePropertyString) {
    self.package_builder_target = Some(package_builder_target);
  }

  pub fn with_package_builder_target(mut self, package_builder_target: ::models::ConfigNodePropertyString) -> OrgApacheSlingDistributionPackagingImplExporterLocalDistributioProperties {
    self.package_builder_target = Some(package_builder_target);
    self
  }

  pub fn package_builder_target(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.package_builder_target.as_ref()
  }

  pub fn reset_package_builder_target(&mut self) {
    self.package_builder_target = None;
  }

}



