/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties {
  #[serde(rename = "syncTranslationState.schedulingFormat")]
  sync_translation_state_scheduling_format: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "schedulingRepeatTranslation.schedulingFormat")]
  scheduling_repeat_translation_scheduling_format: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "syncTranslationState.lockTimeoutInMinutes")]
  sync_translation_state_lock_timeout_in_minutes: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "export.format")]
  export_format: Option<::models::ConfigNodePropertyDropDown>
}

impl ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties {
  pub fn new() -> ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties {
    ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties {
      sync_translation_state_scheduling_format: None,
      scheduling_repeat_translation_scheduling_format: None,
      sync_translation_state_lock_timeout_in_minutes: None,
      export_format: None
    }
  }

  pub fn set_sync_translation_state_scheduling_format(&mut self, sync_translation_state_scheduling_format: ::models::ConfigNodePropertyString) {
    self.sync_translation_state_scheduling_format = Some(sync_translation_state_scheduling_format);
  }

  pub fn with_sync_translation_state_scheduling_format(mut self, sync_translation_state_scheduling_format: ::models::ConfigNodePropertyString) -> ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties {
    self.sync_translation_state_scheduling_format = Some(sync_translation_state_scheduling_format);
    self
  }

  pub fn sync_translation_state_scheduling_format(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.sync_translation_state_scheduling_format.as_ref()
  }

  pub fn reset_sync_translation_state_scheduling_format(&mut self) {
    self.sync_translation_state_scheduling_format = None;
  }

  pub fn set_scheduling_repeat_translation_scheduling_format(&mut self, scheduling_repeat_translation_scheduling_format: ::models::ConfigNodePropertyString) {
    self.scheduling_repeat_translation_scheduling_format = Some(scheduling_repeat_translation_scheduling_format);
  }

  pub fn with_scheduling_repeat_translation_scheduling_format(mut self, scheduling_repeat_translation_scheduling_format: ::models::ConfigNodePropertyString) -> ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties {
    self.scheduling_repeat_translation_scheduling_format = Some(scheduling_repeat_translation_scheduling_format);
    self
  }

  pub fn scheduling_repeat_translation_scheduling_format(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.scheduling_repeat_translation_scheduling_format.as_ref()
  }

  pub fn reset_scheduling_repeat_translation_scheduling_format(&mut self) {
    self.scheduling_repeat_translation_scheduling_format = None;
  }

  pub fn set_sync_translation_state_lock_timeout_in_minutes(&mut self, sync_translation_state_lock_timeout_in_minutes: ::models::ConfigNodePropertyString) {
    self.sync_translation_state_lock_timeout_in_minutes = Some(sync_translation_state_lock_timeout_in_minutes);
  }

  pub fn with_sync_translation_state_lock_timeout_in_minutes(mut self, sync_translation_state_lock_timeout_in_minutes: ::models::ConfigNodePropertyString) -> ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties {
    self.sync_translation_state_lock_timeout_in_minutes = Some(sync_translation_state_lock_timeout_in_minutes);
    self
  }

  pub fn sync_translation_state_lock_timeout_in_minutes(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.sync_translation_state_lock_timeout_in_minutes.as_ref()
  }

  pub fn reset_sync_translation_state_lock_timeout_in_minutes(&mut self) {
    self.sync_translation_state_lock_timeout_in_minutes = None;
  }

  pub fn set_export_format(&mut self, export_format: ::models::ConfigNodePropertyDropDown) {
    self.export_format = Some(export_format);
  }

  pub fn with_export_format(mut self, export_format: ::models::ConfigNodePropertyDropDown) -> ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties {
    self.export_format = Some(export_format);
    self
  }

  pub fn export_format(&self) -> Option<&::models::ConfigNodePropertyDropDown> {
    self.export_format.as_ref()
  }

  pub fn reset_export_format(&mut self) {
    self.export_format = None;
  }

}



