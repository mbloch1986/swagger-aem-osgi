package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import OrgApacheSlingHcCoreImplCompositeHealthCheckProperties._

case class OrgApacheSlingHcCoreImplCompositeHealthCheckProperties (
  hcName: Option[ConfigNodePropertyString],
hcTags: Option[ConfigNodePropertyArray],
hcMbeanName: Option[ConfigNodePropertyString],
filterTags: Option[ConfigNodePropertyArray],
filterCombineTagsWithOr: Option[ConfigNodePropertyBoolean])

object OrgApacheSlingHcCoreImplCompositeHealthCheckProperties {
  import DateTimeCodecs._

  implicit val OrgApacheSlingHcCoreImplCompositeHealthCheckPropertiesCodecJson: CodecJson[OrgApacheSlingHcCoreImplCompositeHealthCheckProperties] = CodecJson.derive[OrgApacheSlingHcCoreImplCompositeHealthCheckProperties]
  implicit val OrgApacheSlingHcCoreImplCompositeHealthCheckPropertiesDecoder: EntityDecoder[OrgApacheSlingHcCoreImplCompositeHealthCheckProperties] = jsonOf[OrgApacheSlingHcCoreImplCompositeHealthCheckProperties]
  implicit val OrgApacheSlingHcCoreImplCompositeHealthCheckPropertiesEncoder: EntityEncoder[OrgApacheSlingHcCoreImplCompositeHealthCheckProperties] = jsonEncoderOf[OrgApacheSlingHcCoreImplCompositeHealthCheckProperties]
}
