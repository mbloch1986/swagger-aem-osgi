package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties._

case class ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties (
  threshold: Option[ConfigNodePropertyInteger],
jobTopicName: Option[ConfigNodePropertyString],
emailEnabled: Option[ConfigNodePropertyBoolean])

object ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServicePropertiesCodecJson: CodecJson[ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties] = CodecJson.derive[ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties]
  implicit val ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServicePropertiesDecoder: EntityDecoder[ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties] = jsonOf[ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties]
  implicit val ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServicePropertiesEncoder: EntityEncoder[ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties] = jsonEncoderOf[ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties]
}
