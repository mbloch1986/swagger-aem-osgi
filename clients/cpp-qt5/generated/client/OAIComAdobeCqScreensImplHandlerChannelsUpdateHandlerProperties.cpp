/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties() {
    init();
}

OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::~OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties() {
    this->cleanup();
}

void
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::init() {
    cq_pagesupdatehandler_imageresourcetypes = new OAIConfigNodePropertyArray();
    m_cq_pagesupdatehandler_imageresourcetypes_isSet = false;
    cq_pagesupdatehandler_productresourcetypes = new OAIConfigNodePropertyArray();
    m_cq_pagesupdatehandler_productresourcetypes_isSet = false;
    cq_pagesupdatehandler_videoresourcetypes = new OAIConfigNodePropertyArray();
    m_cq_pagesupdatehandler_videoresourcetypes_isSet = false;
    cq_pagesupdatehandler_dynamicsequenceresourcetypes = new OAIConfigNodePropertyArray();
    m_cq_pagesupdatehandler_dynamicsequenceresourcetypes_isSet = false;
    cq_pagesupdatehandler_previewmodepaths = new OAIConfigNodePropertyArray();
    m_cq_pagesupdatehandler_previewmodepaths_isSet = false;
}

void
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::cleanup() {
    if(cq_pagesupdatehandler_imageresourcetypes != nullptr) { 
        delete cq_pagesupdatehandler_imageresourcetypes;
    }
    if(cq_pagesupdatehandler_productresourcetypes != nullptr) { 
        delete cq_pagesupdatehandler_productresourcetypes;
    }
    if(cq_pagesupdatehandler_videoresourcetypes != nullptr) { 
        delete cq_pagesupdatehandler_videoresourcetypes;
    }
    if(cq_pagesupdatehandler_dynamicsequenceresourcetypes != nullptr) { 
        delete cq_pagesupdatehandler_dynamicsequenceresourcetypes;
    }
    if(cq_pagesupdatehandler_previewmodepaths != nullptr) { 
        delete cq_pagesupdatehandler_previewmodepaths;
    }
}

OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties*
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_pagesupdatehandler_imageresourcetypes, pJson["cq.pagesupdatehandler.imageresourcetypes"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_pagesupdatehandler_productresourcetypes, pJson["cq.pagesupdatehandler.productresourcetypes"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_pagesupdatehandler_videoresourcetypes, pJson["cq.pagesupdatehandler.videoresourcetypes"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_pagesupdatehandler_dynamicsequenceresourcetypes, pJson["cq.pagesupdatehandler.dynamicsequenceresourcetypes"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_pagesupdatehandler_previewmodepaths, pJson["cq.pagesupdatehandler.previewmodepaths"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_pagesupdatehandler_imageresourcetypes != nullptr) && (cq_pagesupdatehandler_imageresourcetypes->isSet())){
        toJsonValue(QString("cq.pagesupdatehandler.imageresourcetypes"), cq_pagesupdatehandler_imageresourcetypes, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_pagesupdatehandler_productresourcetypes != nullptr) && (cq_pagesupdatehandler_productresourcetypes->isSet())){
        toJsonValue(QString("cq.pagesupdatehandler.productresourcetypes"), cq_pagesupdatehandler_productresourcetypes, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_pagesupdatehandler_videoresourcetypes != nullptr) && (cq_pagesupdatehandler_videoresourcetypes->isSet())){
        toJsonValue(QString("cq.pagesupdatehandler.videoresourcetypes"), cq_pagesupdatehandler_videoresourcetypes, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_pagesupdatehandler_dynamicsequenceresourcetypes != nullptr) && (cq_pagesupdatehandler_dynamicsequenceresourcetypes->isSet())){
        toJsonValue(QString("cq.pagesupdatehandler.dynamicsequenceresourcetypes"), cq_pagesupdatehandler_dynamicsequenceresourcetypes, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_pagesupdatehandler_previewmodepaths != nullptr) && (cq_pagesupdatehandler_previewmodepaths->isSet())){
        toJsonValue(QString("cq.pagesupdatehandler.previewmodepaths"), cq_pagesupdatehandler_previewmodepaths, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::getCqPagesupdatehandlerImageresourcetypes() {
    return cq_pagesupdatehandler_imageresourcetypes;
}
void
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::setCqPagesupdatehandlerImageresourcetypes(OAIConfigNodePropertyArray* cq_pagesupdatehandler_imageresourcetypes) {
    this->cq_pagesupdatehandler_imageresourcetypes = cq_pagesupdatehandler_imageresourcetypes;
    this->m_cq_pagesupdatehandler_imageresourcetypes_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::getCqPagesupdatehandlerProductresourcetypes() {
    return cq_pagesupdatehandler_productresourcetypes;
}
void
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::setCqPagesupdatehandlerProductresourcetypes(OAIConfigNodePropertyArray* cq_pagesupdatehandler_productresourcetypes) {
    this->cq_pagesupdatehandler_productresourcetypes = cq_pagesupdatehandler_productresourcetypes;
    this->m_cq_pagesupdatehandler_productresourcetypes_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::getCqPagesupdatehandlerVideoresourcetypes() {
    return cq_pagesupdatehandler_videoresourcetypes;
}
void
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::setCqPagesupdatehandlerVideoresourcetypes(OAIConfigNodePropertyArray* cq_pagesupdatehandler_videoresourcetypes) {
    this->cq_pagesupdatehandler_videoresourcetypes = cq_pagesupdatehandler_videoresourcetypes;
    this->m_cq_pagesupdatehandler_videoresourcetypes_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::getCqPagesupdatehandlerDynamicsequenceresourcetypes() {
    return cq_pagesupdatehandler_dynamicsequenceresourcetypes;
}
void
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::setCqPagesupdatehandlerDynamicsequenceresourcetypes(OAIConfigNodePropertyArray* cq_pagesupdatehandler_dynamicsequenceresourcetypes) {
    this->cq_pagesupdatehandler_dynamicsequenceresourcetypes = cq_pagesupdatehandler_dynamicsequenceresourcetypes;
    this->m_cq_pagesupdatehandler_dynamicsequenceresourcetypes_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::getCqPagesupdatehandlerPreviewmodepaths() {
    return cq_pagesupdatehandler_previewmodepaths;
}
void
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::setCqPagesupdatehandlerPreviewmodepaths(OAIConfigNodePropertyArray* cq_pagesupdatehandler_previewmodepaths) {
    this->cq_pagesupdatehandler_previewmodepaths = cq_pagesupdatehandler_previewmodepaths;
    this->m_cq_pagesupdatehandler_previewmodepaths_isSet = true;
}


bool
OAIComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_pagesupdatehandler_imageresourcetypes != nullptr && cq_pagesupdatehandler_imageresourcetypes->isSet()){ isObjectUpdated = true; break;}
        if(cq_pagesupdatehandler_productresourcetypes != nullptr && cq_pagesupdatehandler_productresourcetypes->isSet()){ isObjectUpdated = true; break;}
        if(cq_pagesupdatehandler_videoresourcetypes != nullptr && cq_pagesupdatehandler_videoresourcetypes->isSet()){ isObjectUpdated = true; break;}
        if(cq_pagesupdatehandler_dynamicsequenceresourcetypes != nullptr && cq_pagesupdatehandler_dynamicsequenceresourcetypes->isSet()){ isObjectUpdated = true; break;}
        if(cq_pagesupdatehandler_previewmodepaths != nullptr && cq_pagesupdatehandler_previewmodepaths->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

