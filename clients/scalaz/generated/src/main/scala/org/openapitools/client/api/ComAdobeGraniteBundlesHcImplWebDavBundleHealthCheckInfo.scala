package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo._

case class ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckProperties])

object ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfoCodecJson: CodecJson[ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo] = CodecJson.derive[ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo]
  implicit val ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfoDecoder: EntityDecoder[ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo] = jsonOf[ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo]
  implicit val ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfoEncoder: EntityEncoder[ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo] = jsonEncoderOf[ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo]
}
