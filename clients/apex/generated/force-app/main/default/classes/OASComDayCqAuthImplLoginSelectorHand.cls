/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComDayCqAuthImplLoginSelectorHand
 */
public class OASComDayCqAuthImplLoginSelectorHand implements OAS.MappedProperties {
    /**
     * Get path
     * @return path
     */
    public OASConfigNodePropertyString path { get; set; }

    /**
     * Get serviceRanking
     * @return serviceRanking
     */
    public OASConfigNodePropertyInteger serviceRanking { get; set; }

    /**
     * Get authLoginselectorMappings
     * @return authLoginselectorMappings
     */
    public OASConfigNodePropertyArray authLoginselectorMappings { get; set; }

    /**
     * Get authLoginselectorChangepwMappings
     * @return authLoginselectorChangepwMappings
     */
    public OASConfigNodePropertyArray authLoginselectorChangepwMappings { get; set; }

    /**
     * Get authLoginselectorDefaultloginpage
     * @return authLoginselectorDefaultloginpage
     */
    public OASConfigNodePropertyString authLoginselectorDefaultloginpage { get; set; }

    /**
     * Get authLoginselectorDefaultchangepwpage
     * @return authLoginselectorDefaultchangepwpage
     */
    public OASConfigNodePropertyString authLoginselectorDefaultchangepwpage { get; set; }

    /**
     * Get authLoginselectorHandle
     * @return authLoginselectorHandle
     */
    public OASConfigNodePropertyArray authLoginselectorHandle { get; set; }

    /**
     * Get authLoginselectorHandleAllExtensions
     * @return authLoginselectorHandleAllExtensions
     */
    public OASConfigNodePropertyBoolean authLoginselectorHandleAllExtensions { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'service.ranking' => 'serviceRanking',
        'auth.loginselector.mappings' => 'authLoginselectorMappings',
        'auth.loginselector.changepw.mappings' => 'authLoginselectorChangepwMappings',
        'auth.loginselector.defaultloginpage' => 'authLoginselectorDefaultloginpage',
        'auth.loginselector.defaultchangepwpage' => 'authLoginselectorDefaultchangepwpage',
        'auth.loginselector.handle' => 'authLoginselectorHandle',
        'auth.loginselector.handle.all.extensions' => 'authLoginselectorHandleAllExtensions'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComDayCqAuthImplLoginSelectorHand getExample() {
        OASComDayCqAuthImplLoginSelectorHand comDayCqAuthImplLoginSelectorHandlerProperties = new OASComDayCqAuthImplLoginSelectorHand();
          comDayCqAuthImplLoginSelectorHandlerProperties.path = OASConfigNodePropertyString.getExample();
          comDayCqAuthImplLoginSelectorHandlerProperties.serviceRanking = OASConfigNodePropertyInteger.getExample();
          comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorMappings = OASConfigNodePropertyArray.getExample();
          comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorChangepwMappings = OASConfigNodePropertyArray.getExample();
          comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorDefaultloginpage = OASConfigNodePropertyString.getExample();
          comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorDefaultchangepwpage = OASConfigNodePropertyString.getExample();
          comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorHandle = OASConfigNodePropertyArray.getExample();
          comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorHandleAllExtensions = OASConfigNodePropertyBoolean.getExample();
        return comDayCqAuthImplLoginSelectorHandlerProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComDayCqAuthImplLoginSelectorHand) {           
            OASComDayCqAuthImplLoginSelectorHand comDayCqAuthImplLoginSelectorHandlerProperties = (OASComDayCqAuthImplLoginSelectorHand) obj;
            return this.path == comDayCqAuthImplLoginSelectorHandlerProperties.path
                && this.serviceRanking == comDayCqAuthImplLoginSelectorHandlerProperties.serviceRanking
                && this.authLoginselectorMappings == comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorMappings
                && this.authLoginselectorChangepwMappings == comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorChangepwMappings
                && this.authLoginselectorDefaultloginpage == comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorDefaultloginpage
                && this.authLoginselectorDefaultchangepwpage == comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorDefaultchangepwpage
                && this.authLoginselectorHandle == comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorHandle
                && this.authLoginselectorHandleAllExtensions == comDayCqAuthImplLoginSelectorHandlerProperties.authLoginselectorHandleAllExtensions;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (path == null ? 0 : System.hashCode(path));
        hashCode = (17 * hashCode) + (serviceRanking == null ? 0 : System.hashCode(serviceRanking));
        hashCode = (17 * hashCode) + (authLoginselectorMappings == null ? 0 : System.hashCode(authLoginselectorMappings));
        hashCode = (17 * hashCode) + (authLoginselectorChangepwMappings == null ? 0 : System.hashCode(authLoginselectorChangepwMappings));
        hashCode = (17 * hashCode) + (authLoginselectorDefaultloginpage == null ? 0 : System.hashCode(authLoginselectorDefaultloginpage));
        hashCode = (17 * hashCode) + (authLoginselectorDefaultchangepwpage == null ? 0 : System.hashCode(authLoginselectorDefaultchangepwpage));
        hashCode = (17 * hashCode) + (authLoginselectorHandle == null ? 0 : System.hashCode(authLoginselectorHandle));
        hashCode = (17 * hashCode) + (authLoginselectorHandleAllExtensions == null ? 0 : System.hashCode(authLoginselectorHandleAllExtensions));
        return hashCode;
    }
}

