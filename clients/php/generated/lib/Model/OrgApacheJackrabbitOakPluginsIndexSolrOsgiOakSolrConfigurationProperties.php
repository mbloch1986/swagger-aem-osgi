<?php
/**
 * OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'path_desc_field' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'path_child_field' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'path_parent_field' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'path_exact_field' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'catch_all_field' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'collapsed_path_field' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'path_depth_field' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'commit_policy' => '\OpenAPI\Client\Model\ConfigNodePropertyDropDown',
        'rows' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'path_restrictions' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'property_restrictions' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'primarytypes_restrictions' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'ignored_properties' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'used_properties' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'type_mappings' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'property_mappings' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'collapse_jcrcontent_nodes' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'path_desc_field' => null,
        'path_child_field' => null,
        'path_parent_field' => null,
        'path_exact_field' => null,
        'catch_all_field' => null,
        'collapsed_path_field' => null,
        'path_depth_field' => null,
        'commit_policy' => null,
        'rows' => null,
        'path_restrictions' => null,
        'property_restrictions' => null,
        'primarytypes_restrictions' => null,
        'ignored_properties' => null,
        'used_properties' => null,
        'type_mappings' => null,
        'property_mappings' => null,
        'collapse_jcrcontent_nodes' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'path_desc_field' => 'path.desc.field',
        'path_child_field' => 'path.child.field',
        'path_parent_field' => 'path.parent.field',
        'path_exact_field' => 'path.exact.field',
        'catch_all_field' => 'catch.all.field',
        'collapsed_path_field' => 'collapsed.path.field',
        'path_depth_field' => 'path.depth.field',
        'commit_policy' => 'commit.policy',
        'rows' => 'rows',
        'path_restrictions' => 'path.restrictions',
        'property_restrictions' => 'property.restrictions',
        'primarytypes_restrictions' => 'primarytypes.restrictions',
        'ignored_properties' => 'ignored.properties',
        'used_properties' => 'used.properties',
        'type_mappings' => 'type.mappings',
        'property_mappings' => 'property.mappings',
        'collapse_jcrcontent_nodes' => 'collapse.jcrcontent.nodes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'path_desc_field' => 'setPathDescField',
        'path_child_field' => 'setPathChildField',
        'path_parent_field' => 'setPathParentField',
        'path_exact_field' => 'setPathExactField',
        'catch_all_field' => 'setCatchAllField',
        'collapsed_path_field' => 'setCollapsedPathField',
        'path_depth_field' => 'setPathDepthField',
        'commit_policy' => 'setCommitPolicy',
        'rows' => 'setRows',
        'path_restrictions' => 'setPathRestrictions',
        'property_restrictions' => 'setPropertyRestrictions',
        'primarytypes_restrictions' => 'setPrimarytypesRestrictions',
        'ignored_properties' => 'setIgnoredProperties',
        'used_properties' => 'setUsedProperties',
        'type_mappings' => 'setTypeMappings',
        'property_mappings' => 'setPropertyMappings',
        'collapse_jcrcontent_nodes' => 'setCollapseJcrcontentNodes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'path_desc_field' => 'getPathDescField',
        'path_child_field' => 'getPathChildField',
        'path_parent_field' => 'getPathParentField',
        'path_exact_field' => 'getPathExactField',
        'catch_all_field' => 'getCatchAllField',
        'collapsed_path_field' => 'getCollapsedPathField',
        'path_depth_field' => 'getPathDepthField',
        'commit_policy' => 'getCommitPolicy',
        'rows' => 'getRows',
        'path_restrictions' => 'getPathRestrictions',
        'property_restrictions' => 'getPropertyRestrictions',
        'primarytypes_restrictions' => 'getPrimarytypesRestrictions',
        'ignored_properties' => 'getIgnoredProperties',
        'used_properties' => 'getUsedProperties',
        'type_mappings' => 'getTypeMappings',
        'property_mappings' => 'getPropertyMappings',
        'collapse_jcrcontent_nodes' => 'getCollapseJcrcontentNodes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['path_desc_field'] = isset($data['path_desc_field']) ? $data['path_desc_field'] : null;
        $this->container['path_child_field'] = isset($data['path_child_field']) ? $data['path_child_field'] : null;
        $this->container['path_parent_field'] = isset($data['path_parent_field']) ? $data['path_parent_field'] : null;
        $this->container['path_exact_field'] = isset($data['path_exact_field']) ? $data['path_exact_field'] : null;
        $this->container['catch_all_field'] = isset($data['catch_all_field']) ? $data['catch_all_field'] : null;
        $this->container['collapsed_path_field'] = isset($data['collapsed_path_field']) ? $data['collapsed_path_field'] : null;
        $this->container['path_depth_field'] = isset($data['path_depth_field']) ? $data['path_depth_field'] : null;
        $this->container['commit_policy'] = isset($data['commit_policy']) ? $data['commit_policy'] : null;
        $this->container['rows'] = isset($data['rows']) ? $data['rows'] : null;
        $this->container['path_restrictions'] = isset($data['path_restrictions']) ? $data['path_restrictions'] : null;
        $this->container['property_restrictions'] = isset($data['property_restrictions']) ? $data['property_restrictions'] : null;
        $this->container['primarytypes_restrictions'] = isset($data['primarytypes_restrictions']) ? $data['primarytypes_restrictions'] : null;
        $this->container['ignored_properties'] = isset($data['ignored_properties']) ? $data['ignored_properties'] : null;
        $this->container['used_properties'] = isset($data['used_properties']) ? $data['used_properties'] : null;
        $this->container['type_mappings'] = isset($data['type_mappings']) ? $data['type_mappings'] : null;
        $this->container['property_mappings'] = isset($data['property_mappings']) ? $data['property_mappings'] : null;
        $this->container['collapse_jcrcontent_nodes'] = isset($data['collapse_jcrcontent_nodes']) ? $data['collapse_jcrcontent_nodes'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets path_desc_field
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getPathDescField()
    {
        return $this->container['path_desc_field'];
    }

    /**
     * Sets path_desc_field
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $path_desc_field path_desc_field
     *
     * @return $this
     */
    public function setPathDescField($path_desc_field)
    {
        $this->container['path_desc_field'] = $path_desc_field;

        return $this;
    }

    /**
     * Gets path_child_field
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getPathChildField()
    {
        return $this->container['path_child_field'];
    }

    /**
     * Sets path_child_field
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $path_child_field path_child_field
     *
     * @return $this
     */
    public function setPathChildField($path_child_field)
    {
        $this->container['path_child_field'] = $path_child_field;

        return $this;
    }

    /**
     * Gets path_parent_field
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getPathParentField()
    {
        return $this->container['path_parent_field'];
    }

    /**
     * Sets path_parent_field
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $path_parent_field path_parent_field
     *
     * @return $this
     */
    public function setPathParentField($path_parent_field)
    {
        $this->container['path_parent_field'] = $path_parent_field;

        return $this;
    }

    /**
     * Gets path_exact_field
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getPathExactField()
    {
        return $this->container['path_exact_field'];
    }

    /**
     * Sets path_exact_field
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $path_exact_field path_exact_field
     *
     * @return $this
     */
    public function setPathExactField($path_exact_field)
    {
        $this->container['path_exact_field'] = $path_exact_field;

        return $this;
    }

    /**
     * Gets catch_all_field
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getCatchAllField()
    {
        return $this->container['catch_all_field'];
    }

    /**
     * Sets catch_all_field
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $catch_all_field catch_all_field
     *
     * @return $this
     */
    public function setCatchAllField($catch_all_field)
    {
        $this->container['catch_all_field'] = $catch_all_field;

        return $this;
    }

    /**
     * Gets collapsed_path_field
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getCollapsedPathField()
    {
        return $this->container['collapsed_path_field'];
    }

    /**
     * Sets collapsed_path_field
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $collapsed_path_field collapsed_path_field
     *
     * @return $this
     */
    public function setCollapsedPathField($collapsed_path_field)
    {
        $this->container['collapsed_path_field'] = $collapsed_path_field;

        return $this;
    }

    /**
     * Gets path_depth_field
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getPathDepthField()
    {
        return $this->container['path_depth_field'];
    }

    /**
     * Sets path_depth_field
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $path_depth_field path_depth_field
     *
     * @return $this
     */
    public function setPathDepthField($path_depth_field)
    {
        $this->container['path_depth_field'] = $path_depth_field;

        return $this;
    }

    /**
     * Gets commit_policy
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyDropDown|null
     */
    public function getCommitPolicy()
    {
        return $this->container['commit_policy'];
    }

    /**
     * Sets commit_policy
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyDropDown|null $commit_policy commit_policy
     *
     * @return $this
     */
    public function setCommitPolicy($commit_policy)
    {
        $this->container['commit_policy'] = $commit_policy;

        return $this;
    }

    /**
     * Gets rows
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getRows()
    {
        return $this->container['rows'];
    }

    /**
     * Sets rows
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $rows rows
     *
     * @return $this
     */
    public function setRows($rows)
    {
        $this->container['rows'] = $rows;

        return $this;
    }

    /**
     * Gets path_restrictions
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getPathRestrictions()
    {
        return $this->container['path_restrictions'];
    }

    /**
     * Sets path_restrictions
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $path_restrictions path_restrictions
     *
     * @return $this
     */
    public function setPathRestrictions($path_restrictions)
    {
        $this->container['path_restrictions'] = $path_restrictions;

        return $this;
    }

    /**
     * Gets property_restrictions
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getPropertyRestrictions()
    {
        return $this->container['property_restrictions'];
    }

    /**
     * Sets property_restrictions
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $property_restrictions property_restrictions
     *
     * @return $this
     */
    public function setPropertyRestrictions($property_restrictions)
    {
        $this->container['property_restrictions'] = $property_restrictions;

        return $this;
    }

    /**
     * Gets primarytypes_restrictions
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getPrimarytypesRestrictions()
    {
        return $this->container['primarytypes_restrictions'];
    }

    /**
     * Sets primarytypes_restrictions
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $primarytypes_restrictions primarytypes_restrictions
     *
     * @return $this
     */
    public function setPrimarytypesRestrictions($primarytypes_restrictions)
    {
        $this->container['primarytypes_restrictions'] = $primarytypes_restrictions;

        return $this;
    }

    /**
     * Gets ignored_properties
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getIgnoredProperties()
    {
        return $this->container['ignored_properties'];
    }

    /**
     * Sets ignored_properties
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $ignored_properties ignored_properties
     *
     * @return $this
     */
    public function setIgnoredProperties($ignored_properties)
    {
        $this->container['ignored_properties'] = $ignored_properties;

        return $this;
    }

    /**
     * Gets used_properties
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getUsedProperties()
    {
        return $this->container['used_properties'];
    }

    /**
     * Sets used_properties
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $used_properties used_properties
     *
     * @return $this
     */
    public function setUsedProperties($used_properties)
    {
        $this->container['used_properties'] = $used_properties;

        return $this;
    }

    /**
     * Gets type_mappings
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getTypeMappings()
    {
        return $this->container['type_mappings'];
    }

    /**
     * Sets type_mappings
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $type_mappings type_mappings
     *
     * @return $this
     */
    public function setTypeMappings($type_mappings)
    {
        $this->container['type_mappings'] = $type_mappings;

        return $this;
    }

    /**
     * Gets property_mappings
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getPropertyMappings()
    {
        return $this->container['property_mappings'];
    }

    /**
     * Sets property_mappings
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $property_mappings property_mappings
     *
     * @return $this
     */
    public function setPropertyMappings($property_mappings)
    {
        $this->container['property_mappings'] = $property_mappings;

        return $this;
    }

    /**
     * Gets collapse_jcrcontent_nodes
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getCollapseJcrcontentNodes()
    {
        return $this->container['collapse_jcrcontent_nodes'];
    }

    /**
     * Sets collapse_jcrcontent_nodes
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $collapse_jcrcontent_nodes collapse_jcrcontent_nodes
     *
     * @return $this
     */
    public function setCollapseJcrcontentNodes($collapse_jcrcontent_nodes)
    {
        $this->container['collapse_jcrcontent_nodes'] = $collapse_jcrcontent_nodes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


