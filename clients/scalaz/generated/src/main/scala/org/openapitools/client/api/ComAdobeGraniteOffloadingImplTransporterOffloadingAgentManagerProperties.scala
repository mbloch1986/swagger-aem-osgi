package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties._

case class ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties (
  offloadingAgentmanagerEnabled: Option[ConfigNodePropertyBoolean])

object ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerPropertiesCodecJson: CodecJson[ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties] = CodecJson.derive[ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties]
  implicit val ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerPropertiesDecoder: EntityDecoder[ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties] = jsonOf[ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties]
  implicit val ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerPropertiesEncoder: EntityEncoder[ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties] = jsonEncoderOf[ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties]
}
