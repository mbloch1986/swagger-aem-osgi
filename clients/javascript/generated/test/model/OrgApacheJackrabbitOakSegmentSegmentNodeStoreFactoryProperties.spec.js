/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NodeSwaggerAemOsgi);
  }
}(this, function(expect, NodeSwaggerAemOsgi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties', function() {
    it('should create an instance of OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties', function() {
      // uncomment below and update the code to test OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be.a(NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties);
    });

    it('should have the property repositoryHome (base name: "repository.home")', function() {
      // uncomment below and update the code to test the property repositoryHome
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property tarmkMode (base name: "tarmk.mode")', function() {
      // uncomment below and update the code to test the property tarmkMode
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property tarmkSize (base name: "tarmk.size")', function() {
      // uncomment below and update the code to test the property tarmkSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property segmentCacheSize (base name: "segmentCache.size")', function() {
      // uncomment below and update the code to test the property segmentCacheSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property stringCacheSize (base name: "stringCache.size")', function() {
      // uncomment below and update the code to test the property stringCacheSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property templateCacheSize (base name: "templateCache.size")', function() {
      // uncomment below and update the code to test the property templateCacheSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property stringDeduplicationCacheSize (base name: "stringDeduplicationCache.size")', function() {
      // uncomment below and update the code to test the property stringDeduplicationCacheSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property templateDeduplicationCacheSize (base name: "templateDeduplicationCache.size")', function() {
      // uncomment below and update the code to test the property templateDeduplicationCacheSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property nodeDeduplicationCacheSize (base name: "nodeDeduplicationCache.size")', function() {
      // uncomment below and update the code to test the property nodeDeduplicationCacheSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property pauseCompaction (base name: "pauseCompaction")', function() {
      // uncomment below and update the code to test the property pauseCompaction
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property compactionRetryCount (base name: "compaction.retryCount")', function() {
      // uncomment below and update the code to test the property compactionRetryCount
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property compactionForceTimeout (base name: "compaction.force.timeout")', function() {
      // uncomment below and update the code to test the property compactionForceTimeout
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property compactionSizeDeltaEstimation (base name: "compaction.sizeDeltaEstimation")', function() {
      // uncomment below and update the code to test the property compactionSizeDeltaEstimation
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property compactionDisableEstimation (base name: "compaction.disableEstimation")', function() {
      // uncomment below and update the code to test the property compactionDisableEstimation
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property compactionRetainedGenerations (base name: "compaction.retainedGenerations")', function() {
      // uncomment below and update the code to test the property compactionRetainedGenerations
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property compactionMemoryThreshold (base name: "compaction.memoryThreshold")', function() {
      // uncomment below and update the code to test the property compactionMemoryThreshold
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property compactionProgressLog (base name: "compaction.progressLog")', function() {
      // uncomment below and update the code to test the property compactionProgressLog
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property standby (base name: "standby")', function() {
      // uncomment below and update the code to test the property standby
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property customBlobStore (base name: "customBlobStore")', function() {
      // uncomment below and update the code to test the property customBlobStore
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property customSegmentStore (base name: "customSegmentStore")', function() {
      // uncomment below and update the code to test the property customSegmentStore
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property splitPersistence (base name: "splitPersistence")', function() {
      // uncomment below and update the code to test the property splitPersistence
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property repositoryBackupDir (base name: "repository.backup.dir")', function() {
      // uncomment below and update the code to test the property repositoryBackupDir
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property blobGcMaxAgeInSecs (base name: "blobGcMaxAgeInSecs")', function() {
      // uncomment below and update the code to test the property blobGcMaxAgeInSecs
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property blobTrackSnapshotIntervalInSecs (base name: "blobTrackSnapshotIntervalInSecs")', function() {
      // uncomment below and update the code to test the property blobTrackSnapshotIntervalInSecs
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property role (base name: "role")', function() {
      // uncomment below and update the code to test the property role
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property registerDescriptors (base name: "registerDescriptors")', function() {
      // uncomment below and update the code to test the property registerDescriptors
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property dispatchChanges (base name: "dispatchChanges")', function() {
      // uncomment below and update the code to test the property dispatchChanges
      //var instane = new NodeSwaggerAemOsgi.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties();
      //expect(instance).to.be();
    });

  });

}));
