/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ConfigNodePropertyArray', 'model/ConfigNodePropertyBoolean', 'model/ConfigNodePropertyDropDown', 'model/ConfigNodePropertyString'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ConfigNodePropertyArray'), require('./ConfigNodePropertyBoolean'), require('./ConfigNodePropertyDropDown'), require('./ConfigNodePropertyString'));
  } else {
    // Browser globals (root is window)
    if (!root.NodeSwaggerAemOsgi) {
      root.NodeSwaggerAemOsgi = {};
    }
    root.NodeSwaggerAemOsgi.OrgApacheSlingCommonsLogLogManagerFactoryConfigProperties = factory(root.NodeSwaggerAemOsgi.ApiClient, root.NodeSwaggerAemOsgi.ConfigNodePropertyArray, root.NodeSwaggerAemOsgi.ConfigNodePropertyBoolean, root.NodeSwaggerAemOsgi.ConfigNodePropertyDropDown, root.NodeSwaggerAemOsgi.ConfigNodePropertyString);
  }
}(this, function(ApiClient, ConfigNodePropertyArray, ConfigNodePropertyBoolean, ConfigNodePropertyDropDown, ConfigNodePropertyString) {
  'use strict';




  /**
   * The OrgApacheSlingCommonsLogLogManagerFactoryConfigProperties model module.
   * @module model/OrgApacheSlingCommonsLogLogManagerFactoryConfigProperties
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>OrgApacheSlingCommonsLogLogManagerFactoryConfigProperties</code>.
   * @alias module:model/OrgApacheSlingCommonsLogLogManagerFactoryConfigProperties
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>OrgApacheSlingCommonsLogLogManagerFactoryConfigProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrgApacheSlingCommonsLogLogManagerFactoryConfigProperties} obj Optional instance to populate.
   * @return {module:model/OrgApacheSlingCommonsLogLogManagerFactoryConfigProperties} The populated <code>OrgApacheSlingCommonsLogLogManagerFactoryConfigProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('org.apache.sling.commons.log.level')) {
        obj['org.apache.sling.commons.log.level'] = ConfigNodePropertyDropDown.constructFromObject(data['org.apache.sling.commons.log.level']);
      }
      if (data.hasOwnProperty('org.apache.sling.commons.log.file')) {
        obj['org.apache.sling.commons.log.file'] = ConfigNodePropertyString.constructFromObject(data['org.apache.sling.commons.log.file']);
      }
      if (data.hasOwnProperty('org.apache.sling.commons.log.pattern')) {
        obj['org.apache.sling.commons.log.pattern'] = ConfigNodePropertyString.constructFromObject(data['org.apache.sling.commons.log.pattern']);
      }
      if (data.hasOwnProperty('org.apache.sling.commons.log.names')) {
        obj['org.apache.sling.commons.log.names'] = ConfigNodePropertyArray.constructFromObject(data['org.apache.sling.commons.log.names']);
      }
      if (data.hasOwnProperty('org.apache.sling.commons.log.additiv')) {
        obj['org.apache.sling.commons.log.additiv'] = ConfigNodePropertyBoolean.constructFromObject(data['org.apache.sling.commons.log.additiv']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ConfigNodePropertyDropDown} org.apache.sling.commons.log.level
   */
  exports.prototype['org.apache.sling.commons.log.level'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} org.apache.sling.commons.log.file
   */
  exports.prototype['org.apache.sling.commons.log.file'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} org.apache.sling.commons.log.pattern
   */
  exports.prototype['org.apache.sling.commons.log.pattern'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} org.apache.sling.commons.log.names
   */
  exports.prototype['org.apache.sling.commons.log.names'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} org.apache.sling.commons.log.additiv
   */
  exports.prototype['org.apache.sling.commons.log.additiv'] = undefined;



  return exports;
}));


