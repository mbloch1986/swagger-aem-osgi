/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties()
{
    m_Service_max_links_per_hostIsSet = false;
    m_Service_save_external_link_referencesIsSet = false;
    
}

ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::~ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties()
{
}

void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Service_max_links_per_hostIsSet)
    {
        val["service.max_links_per_host"] = ModelBase::toJson(m_Service_max_links_per_host);
    }
    if(m_Service_save_external_link_referencesIsSet)
    {
        val["service.save_external_link_references"] = ModelBase::toJson(m_Service_save_external_link_references);
    }
    

    return val;
}

void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("service.max_links_per_host") != val.end())
    {
        if(!val["service.max_links_per_host"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["service.max_links_per_host"]);
            setServiceMaxLinksPerHost( newItem );
        }
        
    }
    if(val.find("service.save_external_link_references") != val.end())
    {
        if(!val["service.save_external_link_references"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["service.save_external_link_references"]);
            setServiceSaveExternalLinkReferences( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::getServiceMaxLinksPerHost() const
{
    return m_Service_max_links_per_host;
}
void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::setServiceMaxLinksPerHost(ConfigNodePropertyInteger const& value)
{
    m_Service_max_links_per_host = value;
    m_Service_max_links_per_hostIsSet = true;
}
bool ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::serviceMaxLinksPerHostIsSet() const
{
    return m_Service_max_links_per_hostIsSet;
}
void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::unsetService_max_links_per_host()
{
    m_Service_max_links_per_hostIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::getServiceSaveExternalLinkReferences() const
{
    return m_Service_save_external_link_references;
}
void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::setServiceSaveExternalLinkReferences(ConfigNodePropertyBoolean const& value)
{
    m_Service_save_external_link_references = value;
    m_Service_save_external_link_referencesIsSet = true;
}
bool ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::serviceSaveExternalLinkReferencesIsSet() const
{
    return m_Service_save_external_link_referencesIsSet;
}
void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::unsetService_save_external_link_references()
{
    m_Service_save_external_link_referencesIsSet = false;
}

}
}
}
}

