package org.openapitools.api;

import org.openapitools.model.AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo;
import org.openapitools.model.AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo;
import org.openapitools.model.AnalyticsComponentQueryCacheServiceInfo;
import org.openapitools.model.ApacheSlingHealthCheckResultHTMLSerializerInfo;
import java.math.BigDecimal;
import org.openapitools.model.ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo;
import org.openapitools.model.ComAdobeAemTransactionCoreImplTransactionRecorderInfo;
import org.openapitools.model.ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo;
import org.openapitools.model.ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo;
import org.openapitools.model.ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo;
import org.openapitools.model.ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo;
import org.openapitools.model.ComAdobeCqAccountApiAccountManagementServiceInfo;
import org.openapitools.model.ComAdobeCqAccountImplAccountManagementServletInfo;
import org.openapitools.model.ComAdobeCqAddressImplLocationLocationListServletInfo;
import org.openapitools.model.ComAdobeCqAuditPurgeDamInfo;
import org.openapitools.model.ComAdobeCqAuditPurgePagesInfo;
import org.openapitools.model.ComAdobeCqAuditPurgeReplicationInfo;
import org.openapitools.model.ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo;
import org.openapitools.model.ComAdobeCqCdnRewriterImplCDNConfigServiceImplInfo;
import org.openapitools.model.ComAdobeCqCdnRewriterImplCDNRewriterInfo;
import org.openapitools.model.ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo;
import org.openapitools.model.ComAdobeCqCommerceImplAssetDynamicImageHandlerInfo;
import org.openapitools.model.ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo;
import org.openapitools.model.ComAdobeCqCommerceImplAssetStaticImageHandlerInfo;
import org.openapitools.model.ComAdobeCqCommerceImplAssetVideoHandlerInfo;
import org.openapitools.model.ComAdobeCqCommerceImplPromotionPromotionManagerImplInfo;
import org.openapitools.model.ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo;
import org.openapitools.model.ComAdobeCqCommercePimImplPageEventListenerInfo;
import org.openapitools.model.ComAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo;
import org.openapitools.model.ComAdobeCqContentinsightImplReportingServicesSettingsProviderInfo;
import org.openapitools.model.ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo;
import org.openapitools.model.ComAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo;
import org.openapitools.model.ComAdobeCqDamCfmImplComponentComponentConfigImplInfo;
import org.openapitools.model.ComAdobeCqDamCfmImplConfFeatureConfigImplInfo;
import org.openapitools.model.ComAdobeCqDamCfmImplContentRewriterAssetProcessorInfo;
import org.openapitools.model.ComAdobeCqDamCfmImplContentRewriterParRangeFilterInfo;
import org.openapitools.model.ComAdobeCqDamCfmImplContentRewriterPayloadFilterInfo;
import org.openapitools.model.ComAdobeCqDamDmProcessImagePTiffManagerImplInfo;
import org.openapitools.model.ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo;
import org.openapitools.model.ComAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo;
import org.openapitools.model.ComAdobeCqDamMacSyncImplDAMSyncServiceImplInfo;
import org.openapitools.model.ComAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo;
import org.openapitools.model.ComAdobeCqDamS7imagingImplIsImageServerComponentInfo;
import org.openapitools.model.ComAdobeCqDamS7imagingImplPsPlatformServerServletInfo;
import org.openapitools.model.ComAdobeCqDamWebdavImplIoAssetIOHandlerInfo;
import org.openapitools.model.ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo;
import org.openapitools.model.ComAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo;
import org.openapitools.model.ComAdobeCqDeserfwImplDeserializationFirewallImplInfo;
import org.openapitools.model.ComAdobeCqDtmImplServiceDTMWebServiceImplInfo;
import org.openapitools.model.ComAdobeCqDtmImplServletsDTMDeployHookServletInfo;
import org.openapitools.model.ComAdobeCqDtmReactorImplServiceWebServiceImplInfo;
import org.openapitools.model.ComAdobeCqExperiencelogImplExperienceLogConfigServletInfo;
import org.openapitools.model.ComAdobeCqHcContentPackagesHealthCheckInfo;
import org.openapitools.model.ComAdobeCqHistoryImplHistoryRequestFilterInfo;
import org.openapitools.model.ComAdobeCqHistoryImplHistoryServiceImplInfo;
import org.openapitools.model.ComAdobeCqInboxImplTypeproviderItemTypeProviderInfo;
import org.openapitools.model.ComAdobeCqProjectsImplServletProjectImageServletInfo;
import org.openapitools.model.ComAdobeCqProjectsPurgeSchedulerInfo;
import org.openapitools.model.ComAdobeCqScheduledExporterImplScheduledExporterImplInfo;
import org.openapitools.model.ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo;
import org.openapitools.model.ComAdobeCqScreensDeviceImplDeviceServiceInfo;
import org.openapitools.model.ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo;
import org.openapitools.model.ComAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo;
import org.openapitools.model.ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo;
import org.openapitools.model.ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo;
import org.openapitools.model.ComAdobeCqScreensImplScreensChannelPostProcessorInfo;
import org.openapitools.model.ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo;
import org.openapitools.model.ComAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo;
import org.openapitools.model.ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo;
import org.openapitools.model.ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo;
import org.openapitools.model.ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo;
import org.openapitools.model.ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo;
import org.openapitools.model.ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo;
import org.openapitools.model.ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo;
import org.openapitools.model.ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo;
import org.openapitools.model.ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo;
import org.openapitools.model.ComAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo;
import org.openapitools.model.ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo;
import org.openapitools.model.ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo;
import org.openapitools.model.ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo;
import org.openapitools.model.ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo;
import org.openapitools.model.ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo;
import org.openapitools.model.ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo;
import org.openapitools.model.ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo;
import org.openapitools.model.ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo;
import org.openapitools.model.ComAdobeCqSocialCalendarServletsTimeZoneServletInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo;
import org.openapitools.model.ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo;
import org.openapitools.model.ComAdobeCqSocialConnectOauthImplFacebookProviderImplInfo;
import org.openapitools.model.ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo;
import org.openapitools.model.ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo;
import org.openapitools.model.ComAdobeCqSocialConnectOauthImplTwitterProviderImplInfo;
import org.openapitools.model.ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo;
import org.openapitools.model.ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo;
import org.openapitools.model.ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo;
import org.openapitools.model.ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo;
import org.openapitools.model.ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo;
import org.openapitools.model.ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo;
import org.openapitools.model.ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo;
import org.openapitools.model.ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo;
import org.openapitools.model.ComAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo;
import org.openapitools.model.ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo;
import org.openapitools.model.ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo;
import org.openapitools.model.ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo;
import org.openapitools.model.ComAdobeCqSocialForumDispatcherImplFlushOperationsInfo;
import org.openapitools.model.ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo;
import org.openapitools.model.ComAdobeCqSocialGroupImplGroupServiceImplInfo;
import org.openapitools.model.ComAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo;
import org.openapitools.model.ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo;
import org.openapitools.model.ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo;
import org.openapitools.model.ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo;
import org.openapitools.model.ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo;
import org.openapitools.model.ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo;
import org.openapitools.model.ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo;
import org.openapitools.model.ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo;
import org.openapitools.model.ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo;
import org.openapitools.model.ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo;
import org.openapitools.model.ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo;
import org.openapitools.model.ComAdobeCqSocialNotificationsImplMentionsRouterInfo;
import org.openapitools.model.ComAdobeCqSocialNotificationsImplNotificationManagerImplInfo;
import org.openapitools.model.ComAdobeCqSocialNotificationsImplNotificationsRouterInfo;
import org.openapitools.model.ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo;
import org.openapitools.model.ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo;
import org.openapitools.model.ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo;
import org.openapitools.model.ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo;
import org.openapitools.model.ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo;
import org.openapitools.model.ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo;
import org.openapitools.model.ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo;
import org.openapitools.model.ComAdobeCqSocialScoringImplScoringEventListenerInfo;
import org.openapitools.model.ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo;
import org.openapitools.model.ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo;
import org.openapitools.model.ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo;
import org.openapitools.model.ComAdobeCqSocialSiteImplSiteConfiguratorImplInfo;
import org.openapitools.model.ComAdobeCqSocialSrpImplSocialSolrConnectorInfo;
import org.openapitools.model.ComAdobeCqSocialSyncImplDiffChangesObserverInfo;
import org.openapitools.model.ComAdobeCqSocialSyncImplGroupSyncListenerImplInfo;
import org.openapitools.model.ComAdobeCqSocialSyncImplPublisherSyncServiceImplInfo;
import org.openapitools.model.ComAdobeCqSocialSyncImplUserSyncListenerImplInfo;
import org.openapitools.model.ComAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo;
import org.openapitools.model.ComAdobeCqSocialTranslationImplUGCLanguageDetectorInfo;
import org.openapitools.model.ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo;
import org.openapitools.model.ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo;
import org.openapitools.model.ComAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo;
import org.openapitools.model.ComAdobeCqSocialUgcbaseImplSocialUtilsImplInfo;
import org.openapitools.model.ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo;
import org.openapitools.model.ComAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo;
import org.openapitools.model.ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo;
import org.openapitools.model.ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo;
import org.openapitools.model.ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo;
import org.openapitools.model.ComAdobeCqSocialUserImplTransportHttpToPublisherInfo;
import org.openapitools.model.ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo;
import org.openapitools.model.ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo;
import org.openapitools.model.ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo;
import org.openapitools.model.ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo;
import org.openapitools.model.ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo;
import org.openapitools.model.ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo;
import org.openapitools.model.ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo;
import org.openapitools.model.ComAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo;
import org.openapitools.model.ComAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo;
import org.openapitools.model.ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo;
import org.openapitools.model.ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo;
import org.openapitools.model.ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo;
import org.openapitools.model.ComAdobeFdFpConfigFormsPortalSchedulerServiceInfo;
import org.openapitools.model.ComAdobeFormsCommonServiceImplDefaultDataProviderInfo;
import org.openapitools.model.ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo;
import org.openapitools.model.ComAdobeFormsCommonServletTempCleanUpTaskInfo;
import org.openapitools.model.ComAdobeGraniteAcpPlatformPlatformServletInfo;
import org.openapitools.model.ComAdobeGraniteActivitystreamsImplActivityManagerImplInfo;
import org.openapitools.model.ComAdobeGraniteAnalyzerBaseSystemStatusServletInfo;
import org.openapitools.model.ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo;
import org.openapitools.model.ComAdobeGraniteApicontrollerFilterResolverHookFactoryInfo;
import org.openapitools.model.ComAdobeGraniteAuthCertImplClientCertAuthHandlerInfo;
import org.openapitools.model.ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo;
import org.openapitools.model.ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo;
import org.openapitools.model.ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo;
import org.openapitools.model.ComAdobeGraniteAuthImsImplIMSProviderImplInfo;
import org.openapitools.model.ComAdobeGraniteAuthImsImplImsConfigProviderImplInfo;
import org.openapitools.model.ComAdobeGraniteAuthImsInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthAccesstokenProviderInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthImplFacebookProviderImplInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthImplGithubProviderImplInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthImplGraniteProviderInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthImplTwitterProviderImplInfo;
import org.openapitools.model.ComAdobeGraniteAuthOauthProviderInfo;
import org.openapitools.model.ComAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo;
import org.openapitools.model.ComAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo;
import org.openapitools.model.ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplJobsHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo;
import org.openapitools.model.ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo;
import org.openapitools.model.ComAdobeGraniteCompatrouterImplRoutingConfigInfo;
import org.openapitools.model.ComAdobeGraniteCompatrouterImplSwitchMappingConfigInfo;
import org.openapitools.model.ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo;
import org.openapitools.model.ComAdobeGraniteContexthubImplContextHubImplInfo;
import org.openapitools.model.ComAdobeGraniteCorsImplCORSPolicyImplInfo;
import org.openapitools.model.ComAdobeGraniteCsrfImplCSRFFilterInfo;
import org.openapitools.model.ComAdobeGraniteCsrfImplCSRFServletInfo;
import org.openapitools.model.ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo;
import org.openapitools.model.ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo;
import org.openapitools.model.ComAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo;
import org.openapitools.model.ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo;
import org.openapitools.model.ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo;
import org.openapitools.model.ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo;
import org.openapitools.model.ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo;
import org.openapitools.model.ComAdobeGraniteFragsImplCheckHttpHeaderFlagInfo;
import org.openapitools.model.ComAdobeGraniteFragsImplRandomFeatureInfo;
import org.openapitools.model.ComAdobeGraniteHttpcacheFileFileCacheStoreInfo;
import org.openapitools.model.ComAdobeGraniteHttpcacheImplOuterCacheFilterInfo;
import org.openapitools.model.ComAdobeGraniteI18nImplBundlePseudoTranslationsInfo;
import org.openapitools.model.ComAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo;
import org.openapitools.model.ComAdobeGraniteInfocollectorInfoCollectorInfo;
import org.openapitools.model.ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo;
import org.openapitools.model.ComAdobeGraniteLicenseImplLicenseCheckFilterInfo;
import org.openapitools.model.ComAdobeGraniteLoggingImplLogAnalyserImplInfo;
import org.openapitools.model.ComAdobeGraniteLoggingImplLogErrorHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo;
import org.openapitools.model.ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo;
import org.openapitools.model.ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo;
import org.openapitools.model.ComAdobeGraniteMonitoringImplScriptConfigImplInfo;
import org.openapitools.model.ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo;
import org.openapitools.model.ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo;
import org.openapitools.model.ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo;
import org.openapitools.model.ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo;
import org.openapitools.model.ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo;
import org.openapitools.model.ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo;
import org.openapitools.model.ComAdobeGraniteOffloadingImplOffloadingConfiguratorInfo;
import org.openapitools.model.ComAdobeGraniteOffloadingImplOffloadingJobClonerInfo;
import org.openapitools.model.ComAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo;
import org.openapitools.model.ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo;
import org.openapitools.model.ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo;
import org.openapitools.model.ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo;
import org.openapitools.model.ComAdobeGraniteOptoutImplOptOutServiceImplInfo;
import org.openapitools.model.ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo;
import org.openapitools.model.ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo;
import org.openapitools.model.ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo;
import org.openapitools.model.ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo;
import org.openapitools.model.ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo;
import org.openapitools.model.ComAdobeGraniteRepositoryImplCommitStatsConfigInfo;
import org.openapitools.model.ComAdobeGraniteRepositoryServiceUserConfigurationInfo;
import org.openapitools.model.ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo;
import org.openapitools.model.ComAdobeGraniteResourcestatusImplCompositeStatusTypeInfo;
import org.openapitools.model.ComAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo;
import org.openapitools.model.ComAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo;
import org.openapitools.model.ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo;
import org.openapitools.model.ComAdobeGraniteRestImplServletDefaultGETServletInfo;
import org.openapitools.model.ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo;
import org.openapitools.model.ComAdobeGraniteSecurityUserUserPropertiesServiceInfo;
import org.openapitools.model.ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo;
import org.openapitools.model.ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo;
import org.openapitools.model.ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo;
import org.openapitools.model.ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo;
import org.openapitools.model.ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo;
import org.openapitools.model.ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo;
import org.openapitools.model.ComAdobeGraniteThreaddumpThreadDumpCollectorInfo;
import org.openapitools.model.ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo;
import org.openapitools.model.ComAdobeGraniteTranslationCoreImplTranslationManagerImplInfo;
import org.openapitools.model.ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowCoreJobJobHandlerInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowCorePayloadMapCacheInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowCoreWorkflowConfigInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo;
import org.openapitools.model.ComAdobeGraniteWorkflowPurgeSchedulerInfo;
import org.openapitools.model.ComAdobeOctopusNcommBootstrapInfo;
import org.openapitools.model.ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo;
import org.openapitools.model.ComAdobeXmpWorkerFilesNcommXMPFilesNCommInfo;
import org.openapitools.model.ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo;
import org.openapitools.model.ComDayCommonsHttpclientInfo;
import org.openapitools.model.ComDayCqAnalyticsImplStorePropertiesChangeListenerInfo;
import org.openapitools.model.ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo;
import org.openapitools.model.ComDayCqAnalyticsSitecatalystImplImporterReportImporterInfo;
import org.openapitools.model.ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo;
import org.openapitools.model.ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo;
import org.openapitools.model.ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo;
import org.openapitools.model.ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo;
import org.openapitools.model.ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo;
import org.openapitools.model.ComDayCqAnalyticsTestandtargetImplSegmentImporterInfo;
import org.openapitools.model.ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo;
import org.openapitools.model.ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo;
import org.openapitools.model.ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo;
import org.openapitools.model.ComDayCqAuthImplCugCugSupportImplInfo;
import org.openapitools.model.ComDayCqAuthImplLoginSelectorHandlerInfo;
import org.openapitools.model.ComDayCqCommonsImplExternalizerImplInfo;
import org.openapitools.model.ComDayCqCommonsServletsRootMappingServletInfo;
import org.openapitools.model.ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo;
import org.openapitools.model.ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo;
import org.openapitools.model.ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo;
import org.openapitools.model.ComDayCqContentsyncImplContentSyncManagerImplInfo;
import org.openapitools.model.ComDayCqDamCommonsHandlerStandardImageHandlerInfo;
import org.openapitools.model.ComDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo;
import org.openapitools.model.ComDayCqDamCommonsUtilImplAssetCacheImplInfo;
import org.openapitools.model.ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo;
import org.openapitools.model.ComDayCqDamCoreImplAssetMoveListenerInfo;
import org.openapitools.model.ComDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo;
import org.openapitools.model.ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplCacheCQBufferedImageCacheInfo;
import org.openapitools.model.ComDayCqDamCoreImplDamChangeEventListenerInfo;
import org.openapitools.model.ComDayCqDamCoreImplDamEventPurgeServiceInfo;
import org.openapitools.model.ComDayCqDamCoreImplDamEventRecorderImplInfo;
import org.openapitools.model.ComDayCqDamCoreImplEventDamEventAuditListenerInfo;
import org.openapitools.model.ComDayCqDamCoreImplExpiryNotificationJobImplInfo;
import org.openapitools.model.ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo;
import org.openapitools.model.ComDayCqDamCoreImplGfxCommonsGfxRendererInfo;
import org.openapitools.model.ComDayCqDamCoreImplHandlerEPSFormatHandlerInfo;
import org.openapitools.model.ComDayCqDamCoreImplHandlerIndesignFormatHandlerInfo;
import org.openapitools.model.ComDayCqDamCoreImplHandlerJpegHandlerInfo;
import org.openapitools.model.ComDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo;
import org.openapitools.model.ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo;
import org.openapitools.model.ComDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo;
import org.openapitools.model.ComDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo;
import org.openapitools.model.ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo;
import org.openapitools.model.ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo;
import org.openapitools.model.ComDayCqDamCoreImplLightboxLightboxServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo;
import org.openapitools.model.ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo;
import org.openapitools.model.ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo;
import org.openapitools.model.ComDayCqDamCoreImplMissingMetadataNotificationJobInfo;
import org.openapitools.model.ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo;
import org.openapitools.model.ComDayCqDamCoreImplProcessTextExtractionProcessInfo;
import org.openapitools.model.ComDayCqDamCoreImplRenditionMakerImplInfo;
import org.openapitools.model.ComDayCqDamCoreImplReportsReportExportServiceInfo;
import org.openapitools.model.ComDayCqDamCoreImplReportsReportPurgeServiceInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletAssetDownloadServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletAssetStatusServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletAssetXMPSearchServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletBatchMetadataServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletBinaryProviderServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletCollectionServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletCollectionsServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletCompanionServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletCreateAssetServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletDamContentDispositionFilterInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletGuidLookupFilterInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletHealthCheckServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletMetadataGetServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplServletResourceCollectionServletInfo;
import org.openapitools.model.ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo;
import org.openapitools.model.ComDayCqDamCoreImplUnzipUnzipConfigInfo;
import org.openapitools.model.ComDayCqDamCoreProcessExifToolExtractMetadataProcessInfo;
import org.openapitools.model.ComDayCqDamCoreProcessExtractMetadataProcessInfo;
import org.openapitools.model.ComDayCqDamCoreProcessMetadataProcessorProcessInfo;
import org.openapitools.model.ComDayCqDamHandlerFfmpegLocatorImplInfo;
import org.openapitools.model.ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo;
import org.openapitools.model.ComDayCqDamHandlerStandardPdfPdfHandlerInfo;
import org.openapitools.model.ComDayCqDamHandlerStandardPsPostScriptHandlerInfo;
import org.openapitools.model.ComDayCqDamHandlerStandardPsdPsdHandlerInfo;
import org.openapitools.model.ComDayCqDamIdsImplIDSJobProcessorInfo;
import org.openapitools.model.ComDayCqDamIdsImplIDSPoolManagerImplInfo;
import org.openapitools.model.ComDayCqDamInddImplHandlerIndesignXMPHandlerInfo;
import org.openapitools.model.ComDayCqDamInddImplServletSnippetCreationServletInfo;
import org.openapitools.model.ComDayCqDamInddProcessINDDMediaExtractProcessInfo;
import org.openapitools.model.ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo;
import org.openapitools.model.ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo;
import org.openapitools.model.ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo;
import org.openapitools.model.ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo;
import org.openapitools.model.ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo;
import org.openapitools.model.ComDayCqDamS7damCommonPostServletsSetCreateHandlerInfo;
import org.openapitools.model.ComDayCqDamS7damCommonPostServletsSetModifyHandlerInfo;
import org.openapitools.model.ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo;
import org.openapitools.model.ComDayCqDamS7damCommonS7damDamChangeEventListenerInfo;
import org.openapitools.model.ComDayCqDamS7damCommonServletsS7damProductInfoServletInfo;
import org.openapitools.model.ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo;
import org.openapitools.model.ComDayCqDamScene7ImplScene7APIClientImplInfo;
import org.openapitools.model.ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo;
import org.openapitools.model.ComDayCqDamScene7ImplScene7ConfigurationEventListenerInfo;
import org.openapitools.model.ComDayCqDamScene7ImplScene7DamChangeEventListenerInfo;
import org.openapitools.model.ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo;
import org.openapitools.model.ComDayCqDamScene7ImplScene7UploadServiceImplInfo;
import org.openapitools.model.ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo;
import org.openapitools.model.ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo;
import org.openapitools.model.ComDayCqDamVideoImplServletVideoTestServletInfo;
import org.openapitools.model.ComDayCqExtwidgetServletsImageSpriteServletInfo;
import org.openapitools.model.ComDayCqImageInternalFontFontHelperInfo;
import org.openapitools.model.ComDayCqJcrclustersupportClusterStartLevelControllerInfo;
import org.openapitools.model.ComDayCqMailerDefaultMailServiceInfo;
import org.openapitools.model.ComDayCqMailerImplCqMailingServiceInfo;
import org.openapitools.model.ComDayCqMailerImplEmailCqEmailTemplateFactoryInfo;
import org.openapitools.model.ComDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo;
import org.openapitools.model.ComDayCqMcmCampaignImplIntegrationConfigImplInfo;
import org.openapitools.model.ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo;
import org.openapitools.model.ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo;
import org.openapitools.model.ComDayCqMcmImplMCMConfigurationInfo;
import org.openapitools.model.ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo;
import org.openapitools.model.ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo;
import org.openapitools.model.ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo;
import org.openapitools.model.ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo;
import org.openapitools.model.ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo;
import org.openapitools.model.ComDayCqNotificationImplNotificationServiceImplInfo;
import org.openapitools.model.ComDayCqPersonalizationImplServletsTargetingConfigurationServletInfo;
import org.openapitools.model.ComDayCqPollingImporterImplManagedPollConfigImplInfo;
import org.openapitools.model.ComDayCqPollingImporterImplManagedPollingImporterImplInfo;
import org.openapitools.model.ComDayCqPollingImporterImplPollingImporterImplInfo;
import org.openapitools.model.ComDayCqReplicationAuditReplicationEventListenerInfo;
import org.openapitools.model.ComDayCqReplicationContentStaticContentBuilderInfo;
import org.openapitools.model.ComDayCqReplicationImplAgentManagerImplInfo;
import org.openapitools.model.ComDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo;
import org.openapitools.model.ComDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo;
import org.openapitools.model.ComDayCqReplicationImplReplicationContentFactoryProviderImplInfo;
import org.openapitools.model.ComDayCqReplicationImplReplicationReceiverImplInfo;
import org.openapitools.model.ComDayCqReplicationImplReplicatorImplInfo;
import org.openapitools.model.ComDayCqReplicationImplReverseReplicatorInfo;
import org.openapitools.model.ComDayCqReplicationImplTransportBinaryLessTransportHandlerInfo;
import org.openapitools.model.ComDayCqReplicationImplTransportHttpInfo;
import org.openapitools.model.ComDayCqReportingImplCacheCacheImplInfo;
import org.openapitools.model.ComDayCqReportingImplConfigServiceImplInfo;
import org.openapitools.model.ComDayCqReportingImplRLogAnalyzerInfo;
import org.openapitools.model.ComDayCqRewriterLinkcheckerImplLinkCheckerImplInfo;
import org.openapitools.model.ComDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo;
import org.openapitools.model.ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo;
import org.openapitools.model.ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo;
import org.openapitools.model.ComDayCqRewriterProcessorImplHtmlParserFactoryInfo;
import org.openapitools.model.ComDayCqSearchImplBuilderQueryBuilderImplInfo;
import org.openapitools.model.ComDayCqSearchSuggestImplSuggestionIndexManagerImplInfo;
import org.openapitools.model.ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo;
import org.openapitools.model.ComDayCqSearchpromoteImplSearchPromoteServiceImplInfo;
import org.openapitools.model.ComDayCqSecurityACLSetupInfo;
import org.openapitools.model.ComDayCqStatisticsImplStatisticsServiceImplInfo;
import org.openapitools.model.ComDayCqTaggingImplJcrTagManagerFactoryImplInfo;
import org.openapitools.model.ComDayCqTaggingImplSearchTagPredicateEvaluatorInfo;
import org.openapitools.model.ComDayCqTaggingImplTagGarbageCollectorInfo;
import org.openapitools.model.ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo;
import org.openapitools.model.ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo;
import org.openapitools.model.ComDayCqWcmCoreImplAuthoringUIModeServiceImplInfo;
import org.openapitools.model.ComDayCqWcmCoreImplCommandsWCMCommandServletInfo;
import org.openapitools.model.ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo;
import org.openapitools.model.ComDayCqWcmCoreImplEventPageEventAuditListenerInfo;
import org.openapitools.model.ComDayCqWcmCoreImplEventPagePostProcessorInfo;
import org.openapitools.model.ComDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo;
import org.openapitools.model.ComDayCqWcmCoreImplEventTemplatePostProcessorInfo;
import org.openapitools.model.ComDayCqWcmCoreImplLanguageManagerImplInfo;
import org.openapitools.model.ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo;
import org.openapitools.model.ComDayCqWcmCoreImplPagePageInfoAggregatorImplInfo;
import org.openapitools.model.ComDayCqWcmCoreImplPagePageManagerFactoryImplInfo;
import org.openapitools.model.ComDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo;
import org.openapitools.model.ComDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo;
import org.openapitools.model.ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo;
import org.openapitools.model.ComDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo;
import org.openapitools.model.ComDayCqWcmCoreImplServletsFindReplaceServletInfo;
import org.openapitools.model.ComDayCqWcmCoreImplServletsReferenceSearchServletInfo;
import org.openapitools.model.ComDayCqWcmCoreImplServletsThumbnailServletInfo;
import org.openapitools.model.ComDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo;
import org.openapitools.model.ComDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo;
import org.openapitools.model.ComDayCqWcmCoreImplVersionManagerImplInfo;
import org.openapitools.model.ComDayCqWcmCoreImplVersionPurgeTaskInfo;
import org.openapitools.model.ComDayCqWcmCoreImplWCMDebugFilterInfo;
import org.openapitools.model.ComDayCqWcmCoreImplWCMDeveloperModeFilterInfo;
import org.openapitools.model.ComDayCqWcmCoreImplWarpTimeWarpFilterInfo;
import org.openapitools.model.ComDayCqWcmCoreMvtMVTStatisticsImplInfo;
import org.openapitools.model.ComDayCqWcmCoreStatsPageViewStatisticsImplInfo;
import org.openapitools.model.ComDayCqWcmCoreWCMRequestFilterInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterDesignPackageImporterInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterImplCanvasBuilderImplInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterImplEntryPreprocessorImplInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo;
import org.openapitools.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo;
import org.openapitools.model.ComDayCqWcmFoundationFormsImplFormChooserServletInfo;
import org.openapitools.model.ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo;
import org.openapitools.model.ComDayCqWcmFoundationFormsImplFormsHandlingServletInfo;
import org.openapitools.model.ComDayCqWcmFoundationFormsImplMailServletInfo;
import org.openapitools.model.ComDayCqWcmFoundationImplAdaptiveImageComponentServletInfo;
import org.openapitools.model.ComDayCqWcmFoundationImplHTTPAuthHandlerInfo;
import org.openapitools.model.ComDayCqWcmFoundationImplPageImpressionsTrackerInfo;
import org.openapitools.model.ComDayCqWcmFoundationImplPageRedirectServletInfo;
import org.openapitools.model.ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo;
import org.openapitools.model.ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo;
import org.openapitools.model.ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo;
import org.openapitools.model.ComDayCqWcmMobileCoreImplRedirectRedirectFilterInfo;
import org.openapitools.model.ComDayCqWcmMsmImplActionsContentCopyActionFactoryInfo;
import org.openapitools.model.ComDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo;
import org.openapitools.model.ComDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo;
import org.openapitools.model.ComDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo;
import org.openapitools.model.ComDayCqWcmMsmImplActionsPageMoveActionFactoryInfo;
import org.openapitools.model.ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo;
import org.openapitools.model.ComDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo;
import org.openapitools.model.ComDayCqWcmMsmImplLiveRelationshipManagerImplInfo;
import org.openapitools.model.ComDayCqWcmMsmImplRolloutManagerImplInfo;
import org.openapitools.model.ComDayCqWcmMsmImplServletsAuditLogServletInfo;
import org.openapitools.model.ComDayCqWcmNotificationEmailImplEmailChannelInfo;
import org.openapitools.model.ComDayCqWcmNotificationImplNotificationManagerImplInfo;
import org.openapitools.model.ComDayCqWcmScriptingImplBVPManagerInfo;
import org.openapitools.model.ComDayCqWcmUndoUndoConfigInfo;
import org.openapitools.model.ComDayCqWcmWebservicesupportImplReplicationEventListenerInfo;
import org.openapitools.model.ComDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo;
import org.openapitools.model.ComDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo;
import org.openapitools.model.ComDayCqWidgetImplHtmlLibraryManagerImplInfo;
import org.openapitools.model.ComDayCqWidgetImplWidgetExtensionProviderImplInfo;
import org.openapitools.model.ComDayCqWorkflowImplEmailEMailNotificationServiceInfo;
import org.openapitools.model.ComDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo;
import org.openapitools.model.ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo;
import org.openapitools.model.ComDayCrxSecurityTokenImplTokenCleanupTaskInfo;
import org.openapitools.model.GuideLocalizationServiceInfo;
import org.openapitools.model.MessagingUserComponentFactoryInfo;
import org.openapitools.model.OrgApacheAriesJmxFrameworkStateConfigInfo;
import org.openapitools.model.OrgApacheFelixEventadminImplEventAdminInfo;
import org.openapitools.model.OrgApacheFelixHttpInfo;
import org.openapitools.model.OrgApacheFelixHttpSslfilterSslFilterInfo;
import org.openapitools.model.OrgApacheFelixJaasConfigurationFactoryInfo;
import org.openapitools.model.OrgApacheFelixJaasConfigurationSpiInfo;
import org.openapitools.model.OrgApacheFelixScrScrServiceInfo;
import org.openapitools.model.OrgApacheFelixSystemreadyImplComponentsCheckInfo;
import org.openapitools.model.OrgApacheFelixSystemreadyImplFrameworkStartCheckInfo;
import org.openapitools.model.OrgApacheFelixSystemreadyImplServicesCheckInfo;
import org.openapitools.model.OrgApacheFelixSystemreadyImplServletSystemAliveServletInfo;
import org.openapitools.model.OrgApacheFelixSystemreadyImplServletSystemReadyServletInfo;
import org.openapitools.model.OrgApacheFelixSystemreadySystemReadyMonitorInfo;
import org.openapitools.model.OrgApacheFelixWebconsoleInternalServletOsgiManagerInfo;
import org.openapitools.model.OrgApacheFelixWebconsolePluginsEventInternalPluginServletInfo;
import org.openapitools.model.OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo;
import org.openapitools.model.OrgApacheHttpProxyconfiguratorInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo;
import org.openapitools.model.OrgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo;
import org.openapitools.model.OrgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo;
import org.openapitools.model.OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo;
import org.openapitools.model.OrgApacheJackrabbitVaultPackagingImplPackagingImplInfo;
import org.openapitools.model.OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo;
import org.openapitools.model.OrgApacheSlingAuthCoreImplLogoutServletInfo;
import org.openapitools.model.OrgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo;
import org.openapitools.model.OrgApacheSlingCaconfigImplConfigurationResolverImplInfo;
import org.openapitools.model.OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo;
import org.openapitools.model.OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo;
import org.openapitools.model.OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo;
import org.openapitools.model.OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo;
import org.openapitools.model.OrgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo;
import org.openapitools.model.OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo;
import org.openapitools.model.OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo;
import org.openapitools.model.OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo;
import org.openapitools.model.OrgApacheSlingCommonsLogLogManagerFactoryConfigInfo;
import org.openapitools.model.OrgApacheSlingCommonsLogLogManagerFactoryWriterInfo;
import org.openapitools.model.OrgApacheSlingCommonsLogLogManagerInfo;
import org.openapitools.model.OrgApacheSlingCommonsMetricsInternalLogReporterInfo;
import org.openapitools.model.OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo;
import org.openapitools.model.OrgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo;
import org.openapitools.model.OrgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo;
import org.openapitools.model.OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo;
import org.openapitools.model.OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo;
import org.openapitools.model.OrgApacheSlingDatasourceDataSourceFactoryInfo;
import org.openapitools.model.OrgApacheSlingDatasourceJNDIDataSourceFactoryInfo;
import org.openapitools.model.OrgApacheSlingDiscoveryOakConfigInfo;
import org.openapitools.model.OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo;
import org.openapitools.model.OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo;
import org.openapitools.model.OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo;
import org.openapitools.model.OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo;
import org.openapitools.model.OrgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo;
import org.openapitools.model.OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo;
import org.openapitools.model.OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo;
import org.openapitools.model.OrgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo;
import org.openapitools.model.OrgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo;
import org.openapitools.model.OrgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo;
import org.openapitools.model.OrgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo;
import org.openapitools.model.OrgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo;
import org.openapitools.model.OrgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo;
import org.openapitools.model.OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo;
import org.openapitools.model.OrgApacheSlingDistributionResourcesImplDistributionConfigurationInfo;
import org.openapitools.model.OrgApacheSlingDistributionResourcesImplDistributionServiceResourInfo;
import org.openapitools.model.OrgApacheSlingDistributionSerializationImplDistributionPackageBuInfo;
import org.openapitools.model.OrgApacheSlingDistributionSerializationImplVltVaultDistributionInfo;
import org.openapitools.model.OrgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo;
import org.openapitools.model.OrgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo;
import org.openapitools.model.OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo;
import org.openapitools.model.OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo;
import org.openapitools.model.OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo;
import org.openapitools.model.OrgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo;
import org.openapitools.model.OrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo;
import org.openapitools.model.OrgApacheSlingEngineImplAuthSlingAuthenticatorInfo;
import org.openapitools.model.OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo;
import org.openapitools.model.OrgApacheSlingEngineImplLogRequestLoggerInfo;
import org.openapitools.model.OrgApacheSlingEngineImplLogRequestLoggerServiceInfo;
import org.openapitools.model.OrgApacheSlingEngineImplSlingMainServletInfo;
import org.openapitools.model.OrgApacheSlingEngineParametersInfo;
import org.openapitools.model.OrgApacheSlingEventImplEventingThreadPoolInfo;
import org.openapitools.model.OrgApacheSlingEventImplJobsDefaultJobManagerInfo;
import org.openapitools.model.OrgApacheSlingEventImplJobsJcrPersistenceHandlerInfo;
import org.openapitools.model.OrgApacheSlingEventImplJobsJobConsumerManagerInfo;
import org.openapitools.model.OrgApacheSlingEventJobsQueueConfigurationInfo;
import org.openapitools.model.OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo;
import org.openapitools.model.OrgApacheSlingFeatureflagsFeatureInfo;
import org.openapitools.model.OrgApacheSlingFeatureflagsImplConfiguredFeatureInfo;
import org.openapitools.model.OrgApacheSlingHapiImplHApiUtilImplInfo;
import org.openapitools.model.OrgApacheSlingHcCoreImplCompositeHealthCheckInfo;
import org.openapitools.model.OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo;
import org.openapitools.model.OrgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo;
import org.openapitools.model.OrgApacheSlingHcCoreImplScriptableHealthCheckInfo;
import org.openapitools.model.OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo;
import org.openapitools.model.OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo;
import org.openapitools.model.OrgApacheSlingI18nImplI18NFilterInfo;
import org.openapitools.model.OrgApacheSlingI18nImplJcrResourceBundleProviderInfo;
import org.openapitools.model.OrgApacheSlingInstallerProviderJcrImplJcrInstallerInfo;
import org.openapitools.model.OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo;
import org.openapitools.model.OrgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo;
import org.openapitools.model.OrgApacheSlingJcrDavexImplServletsSlingDavExServletInfo;
import org.openapitools.model.OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo;
import org.openapitools.model.OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo;
import org.openapitools.model.OrgApacheSlingJcrRepoinitImplRepositoryInitializerInfo;
import org.openapitools.model.OrgApacheSlingJcrRepoinitRepositoryInitializerInfo;
import org.openapitools.model.OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo;
import org.openapitools.model.OrgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo;
import org.openapitools.model.OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo;
import org.openapitools.model.OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo;
import org.openapitools.model.OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo;
import org.openapitools.model.OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo;
import org.openapitools.model.OrgApacheSlingJmxProviderImplJMXResourceProviderInfo;
import org.openapitools.model.OrgApacheSlingModelsImplModelAdapterFactoryInfo;
import org.openapitools.model.OrgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo;
import org.openapitools.model.OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo;
import org.openapitools.model.OrgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo;
import org.openapitools.model.OrgApacheSlingResourcemergerPickerOverridingInfo;
import org.openapitools.model.OrgApacheSlingScriptingCoreImplScriptCacheImplInfo;
import org.openapitools.model.OrgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo;
import org.openapitools.model.OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo;
import org.openapitools.model.OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo;
import org.openapitools.model.OrgApacheSlingScriptingJspJspScriptEngineFactoryInfo;
import org.openapitools.model.OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo;
import org.openapitools.model.OrgApacheSlingSecurityImplContentDispositionFilterInfo;
import org.openapitools.model.OrgApacheSlingSecurityImplReferrerFilterInfo;
import org.openapitools.model.OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo;
import org.openapitools.model.OrgApacheSlingServiceusermappingImplServiceUserMapperImplInfo;
import org.openapitools.model.OrgApacheSlingServletsGetDefaultGetServletInfo;
import org.openapitools.model.OrgApacheSlingServletsGetImplVersionVersionInfoServletInfo;
import org.openapitools.model.OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo;
import org.openapitools.model.OrgApacheSlingServletsPostImplSlingPostServletInfo;
import org.openapitools.model.OrgApacheSlingServletsResolverSlingServletResolverInfo;
import org.openapitools.model.OrgApacheSlingSettingsImplSlingSettingsServiceImplInfo;
import org.openapitools.model.OrgApacheSlingStartupfilterImplStartupFilterImplInfo;
import org.openapitools.model.OrgApacheSlingTenantInternalTenantProviderImplInfo;
import org.openapitools.model.OrgApacheSlingTracerInternalLogTracerInfo;
import org.openapitools.model.OrgApacheSlingXssImplXSSFilterImplInfo;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import javax.ws.rs.*;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;
import org.apache.cxf.jaxrs.ext.multipart.*;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.ApiResponse;
import io.swagger.jaxrs.PATCH;

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * <p>Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 */
@Path("/")
@Api(value = "/", description = "")
public interface ConfigmgrApi  {

    @POST
    @Path("/system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Configuration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo adaptiveFormAndInteractiveCommunicationWebChannelConfiguration(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("showPlaceholder")Boolean showPlaceholder, @QueryParam("maximumCacheEntries")Integer maximumCacheEntries, @QueryParam("af.scripting.compatversion")String afScriptingCompatversion, @QueryParam("makeFileNameUnique")Boolean makeFileNameUnique, @QueryParam("generatingCompliantData")Boolean generatingCompliantData);

    @POST
    @Path("/system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Theme Configuration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fontList")List<String> fontList);

    @POST
    @Path("/system/console/configMgr/Analytics Component Query Cache Service")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = AnalyticsComponentQueryCacheServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public AnalyticsComponentQueryCacheServiceInfo analyticsComponentQueryCacheService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.analytics.component.query.cache.size")Integer cqAnalyticsComponentQueryCacheSize);

    @POST
    @Path("/system/console/configMgr/Apache Sling Health Check Result HTML Serializer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ApacheSlingHealthCheckResultHTMLSerializerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ApacheSlingHealthCheckResultHTMLSerializerInfo apacheSlingHealthCheckResultHTMLSerializer(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("styleString")String styleString);

    @POST
    @Path("/system/console/configMgr/com.adobe.aem.formsndocuments.config.AEMFormsManagerConfiguration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo comAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("formsManagerConfig.includeOOTBTemplates")Boolean formsManagerConfigIncludeOOTBTemplates, @QueryParam("formsManagerConfig.includeDeprecatedTemplates")Boolean formsManagerConfigIncludeDeprecatedTemplates);

    @POST
    @Path("/system/console/configMgr/com.adobe.aem.transaction.core.impl.TransactionRecorder")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeAemTransactionCoreImplTransactionRecorderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeAemTransactionCoreImplTransactionRecorderInfo comAdobeAemTransactionCoreImplTransactionRecorder(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("isTransactionRecordingEnabled")Boolean isTransactionRecordingEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.DeprecateIndexesHC")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.name")String hcName, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("hc.mbean.name")String hcMbeanName);

    @POST
    @Path("/system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.ReplicationAgentsDisabledHC")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.name")String hcName, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("hc.mbean.name")String hcMbeanName);

    @POST
    @Path("/system/console/configMgr/com.adobe.aem.upgrade.prechecks.mbean.impl.PreUpgradeTasksMBeanImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("pre-upgrade.maintenance.tasks")List<String> preUpgradeMaintenanceTasks, @QueryParam("pre-upgrade.hc.tags")List<String> preUpgradeHcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.aem.upgrade.prechecks.tasks.impl.ConsistencyCheckTaskImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("root.path")String rootPath, @QueryParam("fix.inconsistencies")Boolean fixInconsistencies);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.account.api.AccountManagementService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqAccountApiAccountManagementServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqAccountApiAccountManagementServiceInfo comAdobeCqAccountApiAccountManagementService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.accountmanager.token.validity.period")Integer cqAccountmanagerTokenValidityPeriod, @QueryParam("cq.accountmanager.config.requestnewaccount.mail")String cqAccountmanagerConfigRequestnewaccountMail, @QueryParam("cq.accountmanager.config.requestnewpwd.mail")String cqAccountmanagerConfigRequestnewpwdMail);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.account.impl.AccountManagementServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqAccountImplAccountManagementServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqAccountImplAccountManagementServletInfo comAdobeCqAccountImplAccountManagementServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.accountmanager.config.informnewaccount.mail")String cqAccountmanagerConfigInformnewaccountMail, @QueryParam("cq.accountmanager.config.informnewpwd.mail")String cqAccountmanagerConfigInformnewpwdMail);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.address.impl.location.LocationListServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqAddressImplLocationLocationListServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqAddressImplLocationLocationListServletInfo comAdobeCqAddressImplLocationLocationListServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.address.location.default.maxResults")Integer cqAddressLocationDefaultMaxResults);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.audit.purge.Dam")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqAuditPurgeDamInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqAuditPurgeDamInfo comAdobeCqAuditPurgeDam(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("auditlog.rule.name")String auditlogRuleName, @QueryParam("auditlog.rule.contentpath")String auditlogRuleContentpath, @QueryParam("auditlog.rule.minimumage")Integer auditlogRuleMinimumage, @QueryParam("auditlog.rule.types")String auditlogRuleTypes);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.audit.purge.Pages")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqAuditPurgePagesInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqAuditPurgePagesInfo comAdobeCqAuditPurgePages(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("auditlog.rule.name")String auditlogRuleName, @QueryParam("auditlog.rule.contentpath")String auditlogRuleContentpath, @QueryParam("auditlog.rule.minimumage")Integer auditlogRuleMinimumage, @QueryParam("auditlog.rule.types")String auditlogRuleTypes);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.audit.purge.Replication")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqAuditPurgeReplicationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqAuditPurgeReplicationInfo comAdobeCqAuditPurgeReplication(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("auditlog.rule.name")String auditlogRuleName, @QueryParam("auditlog.rule.contentpath")String auditlogRuleContentpath, @QueryParam("auditlog.rule.minimumage")Integer auditlogRuleMinimumage, @QueryParam("auditlog.rule.types")String auditlogRuleTypes);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.AWSCloudFrontRewriter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo comAdobeCqCdnRewriterImplAWSCloudFrontRewriter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("keypair.id")String keypairId, @QueryParam("keypair.alias")String keypairAlias, @QueryParam("cdnrewriter.attributes")List<String> cdnrewriterAttributes, @QueryParam("cdn.rewriter.distribution.domain")String cdnRewriterDistributionDomain);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNConfigServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCdnRewriterImplCDNConfigServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCdnRewriterImplCDNConfigServiceImplInfo comAdobeCqCdnRewriterImplCDNConfigServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cdn.config.distribution.domain")String cdnConfigDistributionDomain, @QueryParam("cdn.config.enable.rewriting")Boolean cdnConfigEnableRewriting, @QueryParam("cdn.config.path.prefixes")List<String> cdnConfigPathPrefixes, @QueryParam("cdn.config.cdnttl")Integer cdnConfigCdnttl, @QueryParam("cdn.config.application.protocol")String cdnConfigApplicationProtocol);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNRewriter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCdnRewriterImplCDNRewriterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCdnRewriterImplCDNRewriterInfo comAdobeCqCdnRewriterImplCDNRewriter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("cdnrewriter.attributes")List<String> cdnrewriterAttributes, @QueryParam("cdn.rewriter.distribution.domain")String cdnRewriterDistributionDomain);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.cloudconfig.core.impl.ConfigurationReplicationEventHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("flush.agents")List<String> flushAgents);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.commerce.impl.asset.DynamicImageHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCommerceImplAssetDynamicImageHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCommerceImplAssetDynamicImageHandlerInfo comAdobeCqCommerceImplAssetDynamicImageHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.commerce.asset.handler.active")Boolean cqCommerceAssetHandlerActive, @QueryParam("cq.commerce.asset.handler.name")String cqCommerceAssetHandlerName);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.commerce.impl.asset.ProductAssetHandlerProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo comAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.commerce.asset.handler.fallback")String cqCommerceAssetHandlerFallback);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.commerce.impl.asset.StaticImageHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCommerceImplAssetStaticImageHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCommerceImplAssetStaticImageHandlerInfo comAdobeCqCommerceImplAssetStaticImageHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.commerce.asset.handler.active")Boolean cqCommerceAssetHandlerActive, @QueryParam("cq.commerce.asset.handler.name")String cqCommerceAssetHandlerName);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.commerce.impl.asset.VideoHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCommerceImplAssetVideoHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCommerceImplAssetVideoHandlerInfo comAdobeCqCommerceImplAssetVideoHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.commerce.asset.handler.active")Boolean cqCommerceAssetHandlerActive, @QueryParam("cq.commerce.asset.handler.name")String cqCommerceAssetHandlerName);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.commerce.impl.promotion.PromotionManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCommerceImplPromotionPromotionManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCommerceImplPromotionPromotionManagerImplInfo comAdobeCqCommerceImplPromotionPromotionManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.commerce.promotion.root")String cqCommercePromotionRoot);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.commerce.pim.impl.cataloggenerator.CatalogGeneratorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.commerce.cataloggenerator.bucketsize")Integer cqCommerceCataloggeneratorBucketsize, @QueryParam("cq.commerce.cataloggenerator.bucketname")String cqCommerceCataloggeneratorBucketname, @QueryParam("cq.commerce.cataloggenerator.excludedtemplateproperties")List<String> cqCommerceCataloggeneratorExcludedtemplateproperties);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.commerce.pim.impl.PageEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCommercePimImplPageEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCommercePimImplPageEventListenerInfo comAdobeCqCommercePimImplPageEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.commerce.pageeventlistener.enabled")Boolean cqCommercePageeventlistenerEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.commerce.pim.impl.productfeed.ProductFeedServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo comAdobeCqCommercePimImplProductfeedProductFeedServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("Feed generator algorithm")String feedGeneratorAlgorithm);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.contentinsight.impl.ReportingServicesSettingsProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqContentinsightImplReportingServicesSettingsProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqContentinsightImplReportingServicesSettingsProviderInfo comAdobeCqContentinsightImplReportingServicesSettingsProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("reportingservices.url")String reportingservicesUrl);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.BrightEdgeProxyServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo comAdobeCqContentinsightImplServletsBrightEdgeProxyServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("brightedge.url")String brightedgeUrl);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.ReportingServicesProxyServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo comAdobeCqContentinsightImplServletsReportingServicesProxyServle(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("reportingservices.proxy.whitelist")List<String> reportingservicesProxyWhitelist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.cfm.impl.component.ComponentConfigImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamCfmImplComponentComponentConfigImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamCfmImplComponentComponentConfigImplInfo comAdobeCqDamCfmImplComponentComponentConfigImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("dam.cfm.component.resourceType")String damCfmComponentResourceType, @QueryParam("dam.cfm.component.fileReferenceProp")String damCfmComponentFileReferenceProp, @QueryParam("dam.cfm.component.elementsProp")String damCfmComponentElementsProp, @QueryParam("dam.cfm.component.variationProp")String damCfmComponentVariationProp);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.cfm.impl.conf.FeatureConfigImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamCfmImplConfFeatureConfigImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamCfmImplConfFeatureConfigImplInfo comAdobeCqDamCfmImplConfFeatureConfigImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("dam.cfm.resourceTypes")List<String> damCfmResourceTypes, @QueryParam("dam.cfm.referenceProperties")List<String> damCfmReferenceProperties);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.AssetProcessor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamCfmImplContentRewriterAssetProcessorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamCfmImplContentRewriterAssetProcessorInfo comAdobeCqDamCfmImplContentRewriterAssetProcessor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("pipeline.type")String pipelineType);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.ParRangeFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamCfmImplContentRewriterParRangeFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamCfmImplContentRewriterParRangeFilterInfo comAdobeCqDamCfmImplContentRewriterParRangeFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("pipeline.type")String pipelineType);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.PayloadFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamCfmImplContentRewriterPayloadFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamCfmImplContentRewriterPayloadFilterInfo comAdobeCqDamCfmImplContentRewriterPayloadFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("pipeline.type")String pipelineType);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.dm.process.image.PTiffManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamDmProcessImagePTiffManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamDmProcessImagePTiffManagerImplInfo comAdobeCqDamDmProcessImagePTiffManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("maxMemory")Integer maxMemory);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.ips.impl.replication.trigger.ReplicateOnModifyWorker")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("dmreplicateonmodify.enabled")Boolean dmreplicateonmodifyEnabled, @QueryParam("dmreplicateonmodify.forcesyncdeletes")Boolean dmreplicateonmodifyForcesyncdeletes);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.mac.sync.helper.impl.MACSyncClientImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo comAdobeCqDamMacSyncHelperImplMACSyncClientImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.dam.mac.sync.client.so.timeout")Integer comAdobeDamMacSyncClientSoTimeout);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.mac.sync.impl.DAMSyncServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamMacSyncImplDAMSyncServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamMacSyncImplDAMSyncServiceImplInfo comAdobeCqDamMacSyncImplDAMSyncServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.cq.dam.mac.sync.damsyncservice.registered_paths")List<String> comAdobeCqDamMacSyncDamsyncserviceRegisteredPaths, @QueryParam("com.adobe.cq.dam.mac.sync.damsyncservice.sync.renditions")Boolean comAdobeCqDamMacSyncDamsyncserviceSyncRenditions, @QueryParam("com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms")Integer comAdobeCqDamMacSyncDamsyncserviceReplicateThreadWaitMs, @QueryParam("com.adobe.cq.dam.mac.sync.damsyncservice.platform")String comAdobeCqDamMacSyncDamsyncservicePlatform);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.processor.nui.impl.NuiAssetProcessor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo comAdobeCqDamProcessorNuiImplNuiAssetProcessor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("nuiEnabled")Boolean nuiEnabled, @QueryParam("nuiServiceUrl")String nuiServiceUrl, @QueryParam("nuiApiKey")String nuiApiKey);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.is.ImageServerComponent")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamS7imagingImplIsImageServerComponentInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamS7imagingImplIsImageServerComponentInfo comAdobeCqDamS7imagingImplIsImageServerComponent(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("TcpPort")String tcpPort, @QueryParam("AllowRemoteAccess")Boolean allowRemoteAccess, @QueryParam("MaxRenderRgnPixels")String maxRenderRgnPixels, @QueryParam("MaxMessageSize")String maxMessageSize, @QueryParam("RandomAccessUrlTimeout")Integer randomAccessUrlTimeout, @QueryParam("WorkerThreads")Integer workerThreads);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.ps.PlatformServerServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamS7imagingImplPsPlatformServerServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamS7imagingImplPsPlatformServerServletInfo comAdobeCqDamS7imagingImplPsPlatformServerServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cache.enable")Boolean cacheEnable, @QueryParam("cache.rootPaths")List<String> cacheRootPaths, @QueryParam("cache.maxSize")Integer cacheMaxSize, @QueryParam("cache.maxEntries")Integer cacheMaxEntries);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.AssetIOHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamWebdavImplIoAssetIOHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamWebdavImplIoAssetIOHandlerInfo comAdobeCqDamWebdavImplIoAssetIOHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("pathPrefix")String pathPrefix, @QueryParam("createVersion")Boolean createVersion);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.DamWebdavVersionLinkingJob")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.webdav.version.linking.enable")Boolean cqDamWebdavVersionLinkingEnable, @QueryParam("cq.dam.webdav.version.linking.scheduler.period")Integer cqDamWebdavVersionLinkingSchedulerPeriod, @QueryParam("cq.dam.webdav.version.linking.staging.timeout")Integer cqDamWebdavVersionLinkingStagingTimeout);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.SpecialFilesHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo comAdobeCqDamWebdavImplIoSpecialFilesHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters")List<String> comDayCqDamCoreImplIoSpecialFilesHandlerFilepatters);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.deserfw.impl.DeserializationFirewallImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDeserfwImplDeserializationFirewallImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDeserfwImplDeserializationFirewallImplInfo comAdobeCqDeserfwImplDeserializationFirewallImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("firewall.deserialization.whitelist")List<String> firewallDeserializationWhitelist, @QueryParam("firewall.deserialization.blacklist")List<String> firewallDeserializationBlacklist, @QueryParam("firewall.deserialization.diagnostics")String firewallDeserializationDiagnostics);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dtm.impl.service.DTMWebServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDtmImplServiceDTMWebServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDtmImplServiceDTMWebServiceImplInfo comAdobeCqDtmImplServiceDTMWebServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("connection.timeout")Integer connectionTimeout, @QueryParam("socket.timeout")Integer socketTimeout);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dtm.impl.servlets.DTMDeployHookServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDtmImplServletsDTMDeployHookServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDtmImplServletsDTMDeployHookServletInfo comAdobeCqDtmImplServletsDTMDeployHookServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("dtm.staging.ip.whitelist")List<String> dtmStagingIpWhitelist, @QueryParam("dtm.production.ip.whitelist")List<String> dtmProductionIpWhitelist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.dtm.reactor.impl.service.WebServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqDtmReactorImplServiceWebServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqDtmReactorImplServiceWebServiceImplInfo comAdobeCqDtmReactorImplServiceWebServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("endpointUri")String endpointUri, @QueryParam("connectionTimeout")Integer connectionTimeout, @QueryParam("socketTimeout")Integer socketTimeout);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.experiencelog.impl.ExperienceLogConfigServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqExperiencelogImplExperienceLogConfigServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqExperiencelogImplExperienceLogConfigServletInfo comAdobeCqExperiencelogImplExperienceLogConfigServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled, @QueryParam("disabledForGroups")List<String> disabledForGroups);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.hc.ContentPackagesHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqHcContentPackagesHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqHcContentPackagesHealthCheckInfo comAdobeCqHcContentPackagesHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.name")String hcName, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("hc.mbean.name")String hcMbeanName, @QueryParam("package.names")List<String> packageNames);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.history.impl.HistoryRequestFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqHistoryImplHistoryRequestFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqHistoryImplHistoryRequestFilterInfo comAdobeCqHistoryImplHistoryRequestFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("history.requestFilter.excludedSelectors")List<String> historyRequestFilterExcludedSelectors, @QueryParam("history.requestFilter.excludedExtensions")List<String> historyRequestFilterExcludedExtensions);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.history.impl.HistoryServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqHistoryImplHistoryServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqHistoryImplHistoryServiceImplInfo comAdobeCqHistoryImplHistoryServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("history.service.resourceTypes")List<String> historyServiceResourceTypes, @QueryParam("history.service.pathFilter")List<String> historyServicePathFilter);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.inbox.impl.typeprovider.ItemTypeProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqInboxImplTypeproviderItemTypeProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqInboxImplTypeproviderItemTypeProviderInfo comAdobeCqInboxImplTypeproviderItemTypeProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("inbox.impl.typeprovider.registrypaths")List<String> inboxImplTypeproviderRegistrypaths, @QueryParam("inbox.impl.typeprovider.legacypaths")List<String> inboxImplTypeproviderLegacypaths, @QueryParam("inbox.impl.typeprovider.defaulturl.failureitem")String inboxImplTypeproviderDefaulturlFailureitem, @QueryParam("inbox.impl.typeprovider.defaulturl.workitem")String inboxImplTypeproviderDefaulturlWorkitem, @QueryParam("inbox.impl.typeprovider.defaulturl.task")String inboxImplTypeproviderDefaulturlTask);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.projects.impl.servlet.ProjectImageServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqProjectsImplServletProjectImageServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqProjectsImplServletProjectImageServletInfo comAdobeCqProjectsImplServletProjectImageServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("image.quality")String imageQuality, @QueryParam("image.supported.resolutions")String imageSupportedResolutions);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.projects.purge.Scheduler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqProjectsPurgeSchedulerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqProjectsPurgeSchedulerInfo comAdobeCqProjectsPurgeScheduler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduledpurge.name")String scheduledpurgeName, @QueryParam("scheduledpurge.purgeActive")Boolean scheduledpurgePurgeActive, @QueryParam("scheduledpurge.templates")List<String> scheduledpurgeTemplates, @QueryParam("scheduledpurge.purgeGroups")Boolean scheduledpurgePurgeGroups, @QueryParam("scheduledpurge.purgeAssets")Boolean scheduledpurgePurgeAssets, @QueryParam("scheduledpurge.terminateRunningWorkflows")Boolean scheduledpurgeTerminateRunningWorkflows, @QueryParam("scheduledpurge.daysold")Integer scheduledpurgeDaysold, @QueryParam("scheduledpurge.saveThreshold")Integer scheduledpurgeSaveThreshold);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.scheduled.exporter.impl.ScheduledExporterImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScheduledExporterImplScheduledExporterImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScheduledExporterImplScheduledExporterImplInfo comAdobeCqScheduledExporterImplScheduledExporterImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("include.paths")List<String> includePaths, @QueryParam("exporter.user")String exporterUser);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.analytics.impl.ScreensAnalyticsServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.cq.screens.analytics.impl.url")String comAdobeCqScreensAnalyticsImplUrl, @QueryParam("com.adobe.cq.screens.analytics.impl.apikey")String comAdobeCqScreensAnalyticsImplApikey, @QueryParam("com.adobe.cq.screens.analytics.impl.project")String comAdobeCqScreensAnalyticsImplProject, @QueryParam("com.adobe.cq.screens.analytics.impl.environment")String comAdobeCqScreensAnalyticsImplEnvironment, @QueryParam("com.adobe.cq.screens.analytics.impl.sendFrequency")Integer comAdobeCqScreensAnalyticsImplSendFrequency);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.device.impl.DeviceService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensDeviceImplDeviceServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensDeviceImplDeviceServiceInfo comAdobeCqScreensDeviceImplDeviceService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.aem.screens.player.pingfrequency")Integer comAdobeAemScreensPlayerPingfrequency, @QueryParam("com.adobe.aem.screens.device.pasword.specialchars")String comAdobeAemScreensDevicePaswordSpecialchars, @QueryParam("com.adobe.aem.screens.device.pasword.minlowercasechars")Integer comAdobeAemScreensDevicePaswordMinlowercasechars, @QueryParam("com.adobe.aem.screens.device.pasword.minuppercasechars")Integer comAdobeAemScreensDevicePaswordMinuppercasechars, @QueryParam("com.adobe.aem.screens.device.pasword.minnumberchars")Integer comAdobeAemScreensDevicePaswordMinnumberchars, @QueryParam("com.adobe.aem.screens.device.pasword.minspecialchars")Integer comAdobeAemScreensDevicePaswordMinspecialchars, @QueryParam("com.adobe.aem.screens.device.pasword.minlength")Integer comAdobeAemScreensDevicePaswordMinlength);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.device.registration.impl.RegistrationServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("deviceRegistrationTimeout")Integer deviceRegistrationTimeout);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.impl.handler.ChannelsUpdateHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo comAdobeCqScreensImplHandlerChannelsUpdateHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.pagesupdatehandler.imageresourcetypes")List<String> cqPagesupdatehandlerImageresourcetypes, @QueryParam("cq.pagesupdatehandler.productresourcetypes")List<String> cqPagesupdatehandlerProductresourcetypes, @QueryParam("cq.pagesupdatehandler.videoresourcetypes")List<String> cqPagesupdatehandlerVideoresourcetypes, @QueryParam("cq.pagesupdatehandler.dynamicsequenceresourcetypes")List<String> cqPagesupdatehandlerDynamicsequenceresourcetypes, @QueryParam("cq.pagesupdatehandler.previewmodepaths")List<String> cqPagesupdatehandlerPreviewmodepaths);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.impl.jobs.DistributedDevicesStatiUpdateJob")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.impl.remote.impl.DistributedHttpClientImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo comAdobeCqScreensImplRemoteImplDistributedHttpClientImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.aem.screens.impl.remote.request_timeout")Integer comAdobeAemScreensImplRemoteRequestTimeout);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.impl.ScreensChannelPostProcessor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensImplScreensChannelPostProcessorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensImplScreensChannelPostProcessorInfo comAdobeCqScreensImplScreensChannelPostProcessor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("screens.channels.properties.to.remove")List<String> screensChannelsPropertiesToRemove);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo comAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath")List<String> comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath, @QueryParam("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency")String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency, @QueryParam("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout")Integer comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout, @QueryParam("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients")String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients, @QueryParam("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver")String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver, @QueryParam("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport")Integer comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport, @QueryParam("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls")Boolean comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls, @QueryParam("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username")String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername, @QueryParam("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password")String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.mq.activemq.impl.ArtemisJMSProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo comAdobeCqScreensMqActivemqImplArtemisJMSProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("global.size")Integer globalSize, @QueryParam("max.disk.usage")Integer maxDiskUsage, @QueryParam("persistence.enabled")Boolean persistenceEnabled, @QueryParam("thread.pool.max.size")Integer threadPoolMaxSize, @QueryParam("scheduled.thread.pool.max.size")Integer scheduledThreadPoolMaxSize, @QueryParam("graceful.shutdown.timeout")Integer gracefulShutdownTimeout, @QueryParam("queues")List<String> queues, @QueryParam("topics")List<String> topics, @QueryParam("addresses.max.delivery.attempts")Integer addressesMaxDeliveryAttempts, @QueryParam("addresses.expiry.delay")Integer addressesExpiryDelay, @QueryParam("addresses.address.full.message.policy")String addressesAddressFullMessagePolicy, @QueryParam("addresses.max.size.bytes")Integer addressesMaxSizeBytes, @QueryParam("addresses.page.size.bytes")Integer addressesPageSizeBytes, @QueryParam("addresses.page.cache.max.size")Integer addressesPageCacheMaxSize, @QueryParam("cluster.user")String clusterUser, @QueryParam("cluster.password")String clusterPassword, @QueryParam("cluster.call.timeout")Integer clusterCallTimeout, @QueryParam("cluster.call.failover.timeout")Integer clusterCallFailoverTimeout, @QueryParam("cluster.client.failure.check.period")Integer clusterClientFailureCheckPeriod, @QueryParam("cluster.notification.attempts")Integer clusterNotificationAttempts, @QueryParam("cluster.notification.interval")Integer clusterNotificationInterval, @QueryParam("id.cache.size")Integer idCacheSize, @QueryParam("cluster.confirmation.window.size")Integer clusterConfirmationWindowSize, @QueryParam("cluster.connection.ttl")Integer clusterConnectionTtl, @QueryParam("cluster.duplicate.detection")Boolean clusterDuplicateDetection, @QueryParam("cluster.initial.connect.attempts")Integer clusterInitialConnectAttempts, @QueryParam("cluster.max.retry.interval")Integer clusterMaxRetryInterval, @QueryParam("cluster.min.large.message.size")Integer clusterMinLargeMessageSize, @QueryParam("cluster.producer.window.size")Integer clusterProducerWindowSize, @QueryParam("cluster.reconnect.attempts")Integer clusterReconnectAttempts, @QueryParam("cluster.retry.interval")Integer clusterRetryInterval, @QueryParam("cluster.retry.interval.multiplier")BigDecimal clusterRetryIntervalMultiplier);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath")List<String> comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProjectPath, @QueryParam("com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency")String comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplScheduleFrequency);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.OfflineContentServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo comAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("disableSmartSync")Boolean disableSmartSync);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.screens.segmentation.impl.SegmentationFeatureFlag")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo comAdobeCqScreensSegmentationImplSegmentationFeatureFlag(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enableDataTriggeredContent")Boolean enableDataTriggeredContent);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.HtmlLibraryManagerConfigHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.WcmFilterHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.security.hc.dispatcher.impl.DispatcherAccessHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("dispatcher.address")String dispatcherAddress, @QueryParam("dispatcher.filter.allowed")List<String> dispatcherFilterAllowed, @QueryParam("dispatcher.filter.blocked")List<String> dispatcherFilterBlocked);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.security.hc.packages.impl.ExampleContentHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo comAdobeCqSecurityHcPackagesImplExampleContentHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.security.hc.webserver.impl.ClickjackingHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo comAdobeCqSecurityHcWebserverImplClickjackingHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("webserver.address")String webserverAddress);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.accountverification.impl.AccountManagementConfigImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo comAdobeCqSocialAccountverificationImplAccountManagementConfigIm(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enable")Boolean enable, @QueryParam("ttl1")Integer ttl1, @QueryParam("ttl2")Integer ttl2);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityComponentFactoryImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo comAdobeCqSocialActivitystreamsClientImplSocialActivityComponen(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityStreamComponentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.EventListenerHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo comAdobeCqSocialActivitystreamsListenerImplEventListenerHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.topics")String eventTopics, @QueryParam("event.filter")String eventFilter);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ModerationEventExtension")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo comAdobeCqSocialActivitystreamsListenerImplModerationEventExten(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("accepted")Boolean accepted, @QueryParam("ranked")Integer ranked);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.RatingEventActivitySuppressor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo comAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("ranking")Integer ranking, @QueryParam("enable")Boolean enable);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ResourceActivityStreamProviderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo comAdobeCqSocialActivitystreamsListenerImplResourceActivityStre(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("streamPath")String streamPath, @QueryParam("streamName")String streamName);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.calendar.client.endpoints.impl.CalendarOperationsImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("MaxRetry")Integer maxRetry, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.calendar.client.operationextensions.EventAttachment")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo comAdobeCqSocialCalendarClientOperationextensionsEventAttachmen(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("attachmentTypeBlacklist")String attachmentTypeBlacklist, @QueryParam("extension.order")Integer extensionOrder);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.calendar.servlets.TimeZoneServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCalendarServletsTimeZoneServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCalendarServletsTimeZoneServletInfo comAdobeCqSocialCalendarServletsTimeZoneServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("timezones.expirytime")Integer timezonesExpirytime);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentDeleteEventActivitySuppressor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("ranking")Integer ranking);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentOperationService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.TranslationOperationService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.comments.listing.impl.SearchCommentSocialComponentListProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("numUserLimit")Integer numUserLimit);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.comments.scheduler.impl.SearchScheduledPosts")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enableScheduledPostsSearch")Boolean enableScheduledPostsSearch, @QueryParam("numberOfMinutes")Integer numberOfMinutes, @QueryParam("maxSearchLimit")Integer maxSearchLimit);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.cors.CORSAuthenticationFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo comAdobeCqSocialCommonsCorsCORSAuthenticationFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cors.enabling")Boolean corsEnabling);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.AndroidEmailClientProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priorityOrder")Integer priorityOrder, @QueryParam("replyEmailPatterns")List<String> replyEmailPatterns);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailBuilderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("context.path")String contextPath);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.topics")String eventTopics);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CustomEmailClientProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priorityOrder")Integer priorityOrder, @QueryParam("replyEmailPatterns")List<String> replyEmailPatterns);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailQuotedTextPatternsImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("pattern.time")String patternTime, @QueryParam("pattern.newline")String patternNewline, @QueryParam("pattern.dayOfMonth")String patternDayOfMonth, @QueryParam("pattern.month")String patternMonth, @QueryParam("pattern.year")String patternYear, @QueryParam("pattern.date")String patternDate, @QueryParam("pattern.dateTime")String patternDateTime, @QueryParam("pattern.email")String patternEmail);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyConfigurationImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("email.name")String emailName, @QueryParam("email.createPostFromReply")Boolean emailCreatePostFromReply, @QueryParam("email.addCommentIdTo")String emailAddCommentIdTo, @QueryParam("email.subjectMaximumLength")Integer emailSubjectMaximumLength, @QueryParam("email.replyToAddress")String emailReplyToAddress, @QueryParam("email.replyToDelimiter")String emailReplyToDelimiter, @QueryParam("email.trackerIdPrefixInSubject")String emailTrackerIdPrefixInSubject, @QueryParam("email.trackerIdPrefixInBody")String emailTrackerIdPrefixInBody, @QueryParam("email.asHTML")Boolean emailAsHTML, @QueryParam("email.defaultUserName")String emailDefaultUserName, @QueryParam("email.templates.rootPath")String emailTemplatesRootPath);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyImporter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("connectProtocol")String connectProtocol);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.GmailEmailClientProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priorityOrder")Integer priorityOrder, @QueryParam("replyEmailPatterns")List<String> replyEmailPatterns);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.IOSEmailClientProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priorityOrder")Integer priorityOrder, @QueryParam("replyEmailPatterns")List<String> replyEmailPatterns);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.MacmailEmailClientProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priorityOrder")Integer priorityOrder, @QueryParam("replyEmailPatterns")List<String> replyEmailPatterns);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.OutLookEmailClientProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priorityOrder")Integer priorityOrder, @QueryParam("replyEmailPatterns")List<String> replyEmailPatterns);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.UnknownEmailClientProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("replyEmailPatterns")List<String> replyEmailPatterns, @QueryParam("priorityOrder")Integer priorityOrder);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.YahooEmailClientProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priorityOrder")Integer priorityOrder, @QueryParam("replyEmailPatterns")List<String> replyEmailPatterns);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.maintainance.impl.DeleteTempUGCImageUploads")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("numberOfDays")Integer numberOfDays, @QueryParam("ageOfFile")Integer ageOfFile);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.ugclimiter.impl.UGCLimiterServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.topics")String eventTopics, @QueryParam("event.filter")String eventFilter, @QueryParam("verbs")List<String> verbs);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.commons.ugclimitsconfig.impl.CommunityUserUGCLimitsConfigImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enable")Boolean enable, @QueryParam("UGCLimit")Integer ugCLimit, @QueryParam("ugcLimitDuration")Integer ugcLimitDuration, @QueryParam("domains")List<String> domains, @QueryParam("toList")List<String> toList);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.FacebookProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialConnectOauthImplFacebookProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialConnectOauthImplFacebookProviderImplInfo comAdobeCqSocialConnectOauthImplFacebookProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.provider.id")String oauthProviderId, @QueryParam("oauth.cloud.config.root")String oauthCloudConfigRoot, @QueryParam("provider.config.root")String providerConfigRoot, @QueryParam("provider.config.create.tags.enabled")Boolean providerConfigCreateTagsEnabled, @QueryParam("provider.config.user.folder")String providerConfigUserFolder, @QueryParam("provider.config.facebook.fetch.fields")Boolean providerConfigFacebookFetchFields, @QueryParam("provider.config.facebook.fields")List<String> providerConfigFacebookFields, @QueryParam("provider.config.refresh.userdata.enabled")Boolean providerConfigRefreshUserdataEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthAuthenticationHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")List<String> path, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthUserProfileMapper")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("facebook")List<String> facebook, @QueryParam("twitter")List<String> twitter, @QueryParam("provider.config.user.folder")String providerConfigUserFolder);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.TwitterProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialConnectOauthImplTwitterProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialConnectOauthImplTwitterProviderImplInfo comAdobeCqSocialConnectOauthImplTwitterProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.provider.id")String oauthProviderId, @QueryParam("oauth.cloud.config.root")String oauthCloudConfigRoot, @QueryParam("provider.config.root")String providerConfigRoot, @QueryParam("provider.config.user.folder")String providerConfigUserFolder, @QueryParam("provider.config.twitter.enable.params")Boolean providerConfigTwitterEnableParams, @QueryParam("provider.config.twitter.params")List<String> providerConfigTwitterParams, @QueryParam("provider.config.refresh.userdata.enabled")Boolean providerConfigRefreshUserdataEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.content.fragments.services.impl.CommunitiesFragmentCreationServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.social.content.fragments.services.enabled")Boolean cqSocialContentFragmentsServicesEnabled, @QueryParam("cq.social.content.fragments.services.waitTimeSeconds")Integer cqSocialContentFragmentsServicesWaitTimeSeconds);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.datastore.as.impl.ASResourceProviderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo comAdobeCqSocialDatastoreAsImplASResourceProviderFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("version.id")String versionId, @QueryParam("cache.on")Boolean cacheOn, @QueryParam("concurrency.level")Integer concurrencyLevel, @QueryParam("cache.start.size")Integer cacheStartSize, @QueryParam("cache.ttl")Integer cacheTtl, @QueryParam("cache.size")Integer cacheSize, @QueryParam("time.limit")Integer timeLimit);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.datastore.op.impl.SocialMSResourceProviderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("solr.zk.timeout")String solrZkTimeout, @QueryParam("solr.commit")String solrCommit, @QueryParam("cache.on")Boolean cacheOn, @QueryParam("concurrency.level")Integer concurrencyLevel, @QueryParam("cache.start.size")Integer cacheStartSize, @QueryParam("cache.ttl")Integer cacheTtl, @QueryParam("cache.size")Integer cacheSize);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.datastore.rdb.impl.SocialRDBResourceProviderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("solr.zk.timeout")String solrZkTimeout, @QueryParam("solr.commit")String solrCommit, @QueryParam("cache.on")Boolean cacheOn, @QueryParam("concurrency.level")Integer concurrencyLevel, @QueryParam("cache.start.size")Integer cacheStartSize, @QueryParam("cache.ttl")Integer cacheTtl, @QueryParam("cache.size")Integer cacheSize);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementLearningPathAdaptorFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("isMemberCheck")Boolean isMemberCheck);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementResourceAdaptorFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("isMemberCheck")Boolean isMemberCheck);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.enablement.learningpath.endpoints.impl.EnablementLearningPathModelOperationService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.enablement.resource.endpoints.impl.EnablementResourceModelOperationService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo comAdobeCqSocialEnablementResourceEndpointsImplEnablementResou(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.enablement.services.impl.AuthorMarkerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo comAdobeCqSocialEnablementServicesImplAuthorMarkerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.FilelibraryDownloadGetServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.selectors")String slingServletSelectors, @QueryParam("sling.servlet.extensions")String slingServletExtensions);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.impl.FileLibraryOperationsService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.forum.client.endpoints.impl.ForumOperationsService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo comAdobeCqSocialForumClientEndpointsImplForumOperationsService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.forum.dispatcher.impl.FlushOperations")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialForumDispatcherImplFlushOperationsInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialForumDispatcherImplFlushOperationsInfo comAdobeCqSocialForumDispatcherImplFlushOperations(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("extension.order")Integer extensionOrder, @QueryParam("flush.forumontopic")Boolean flushForumontopic);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.group.client.impl.CommunityGroupCollectionComponentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("group.listing.pagination.enable")Boolean groupListingPaginationEnable, @QueryParam("group.listing.lazyloading.enable")Boolean groupListingLazyloadingEnable, @QueryParam("page.size")Integer pageSize, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.group.impl.GroupServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialGroupImplGroupServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialGroupImplGroupServiceImplInfo comAdobeCqSocialGroupImplGroupServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("maxWaitTime")Integer maxWaitTime, @QueryParam("minWaitBetweenRetries")Integer minWaitBetweenRetries);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.handlebars.GuavaTemplateCacheImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo comAdobeCqSocialHandlebarsGuavaTemplateCacheImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("parameter.guava.cache.enabled")Boolean parameterGuavaCacheEnabled, @QueryParam("parameter.guava.cache.params")String parameterGuavaCacheParams, @QueryParam("parameter.guava.cache.reload")Boolean parameterGuavaCacheReload, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.ideation.client.endpoints.impl.IdeationOperationsService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.journal.client.endpoints.impl.JournalOperationsService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberGroupProfileOperationService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberUserProfileOperationService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.members.impl.CommunityMemberGroupProfileComponentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("everyoneLimit")Integer everyoneLimit, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.messaging.client.endpoints.impl.MessagingOperationsServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo comAdobeCqSocialMessagingClientEndpointsImplMessagingOperation(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("message.properties")List<String> messageProperties, @QueryParam("messageBoxSizeLimit")Integer messageBoxSizeLimit, @QueryParam("messageCountLimit")Integer messageCountLimit, @QueryParam("notifyFailure")Boolean notifyFailure, @QueryParam("failureMessageFrom")String failureMessageFrom, @QueryParam("failureTemplatePath")String failureTemplatePath, @QueryParam("maxRetries")Integer maxRetries, @QueryParam("minWaitBetweenRetries")Integer minWaitBetweenRetries, @QueryParam("countUpdatePoolSize")Integer countUpdatePoolSize, @QueryParam("inbox.path")String inboxPath, @QueryParam("sentitems.path")String sentitemsPath, @QueryParam("supportAttachments")Boolean supportAttachments, @QueryParam("supportGroupMessaging")Boolean supportGroupMessaging, @QueryParam("maxTotalRecipients")Integer maxTotalRecipients, @QueryParam("batchSize")Integer batchSize, @QueryParam("maxTotalAttachmentSize")Integer maxTotalAttachmentSize, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist, @QueryParam("allowedAttachmentTypes")List<String> allowedAttachmentTypes, @QueryParam("serviceSelector")String serviceSelector, @QueryParam("fieldWhitelist")List<String> fieldWhitelist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.FilterGroupSocialComponentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("resourceType.filters")List<String> resourceTypeFilters, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.ModerationDashboardSocialComponentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo comAdobeCqSocialModerationDashboardApiModerationDashboardSocial(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.UserDetailsSocialComponentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.internal.impl.FilterGroupSocialComponentFactoryV2")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo comAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("resourceType.filters")List<String> resourceTypeFilters, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.notifications.impl.MentionsRouter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialNotificationsImplMentionsRouterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialNotificationsImplMentionsRouterInfo comAdobeCqSocialNotificationsImplMentionsRouter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.topics")String eventTopics, @QueryParam("event.filter")String eventFilter);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialNotificationsImplNotificationManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialNotificationsImplNotificationManagerImplInfo comAdobeCqSocialNotificationsImplNotificationManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("max.unread.notification.count")Integer maxUnreadNotificationCount);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationsRouter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialNotificationsImplNotificationsRouterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialNotificationsImplNotificationsRouterInfo comAdobeCqSocialNotificationsImplNotificationsRouter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.topics")String eventTopics, @QueryParam("event.filter")String eventFilter);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.qna.client.endpoints.impl.QnaForumOperationsService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportImporterServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.social.reporting.analytics.polling.importer.interval")Integer cqSocialReportingAnalyticsPollingImporterInterval, @QueryParam("cq.social.reporting.analytics.polling.importer.pageSize")Integer cqSocialReportingAnalyticsPollingImporterPageSize);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportManagementServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("report.fetch.delay")Integer reportFetchDelay);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.SiteTrendReportSocialComponentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.social.console.analytics.sites.mapping")List<String> cqSocialConsoleAnalyticsSitesMapping, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.review.client.endpoints.impl.ReviewOperationsService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("attachmentTypeBlacklist")List<String> attachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.scf.core.operations.impl.SocialOperationsServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo comAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.selectors")String slingServletSelectors, @QueryParam("sling.servlet.extensions")String slingServletExtensions);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.scf.endpoints.impl.DefaultSocialGetServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo comAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.selectors")List<String> slingServletSelectors, @QueryParam("sling.servlet.extensions")String slingServletExtensions);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.scoring.impl.ScoringEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialScoringImplScoringEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialScoringImplScoringEventListenerInfo comAdobeCqSocialScoringImplScoringEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.topics")String eventTopics, @QueryParam("event.filter")String eventFilter);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.serviceusers.internal.impl.ServiceUserWrapperImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enableFallback")Boolean enableFallback);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.site.endpoints.impl.SiteOperationService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo comAdobeCqSocialSiteEndpointsImplSiteOperationService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fieldWhitelist")List<String> fieldWhitelist, @QueryParam("sitePathFilters")List<String> sitePathFilters, @QueryParam("sitePackageGroup")String sitePackageGroup);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.site.impl.AnalyticsComponentConfigurationServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.social.console.analytics.components")List<String> cqSocialConsoleAnalyticsComponents);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.site.impl.SiteConfiguratorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialSiteImplSiteConfiguratorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialSiteImplSiteConfiguratorImplInfo comAdobeCqSocialSiteImplSiteConfiguratorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("componentsUsingTags")List<String> componentsUsingTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.srp.impl.SocialSolrConnector")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialSrpImplSocialSolrConnectorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialSrpImplSocialSolrConnectorInfo comAdobeCqSocialSrpImplSocialSolrConnector(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("srp.type")String srpType);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.sync.impl.DiffChangesObserver")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialSyncImplDiffChangesObserverInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialSyncImplDiffChangesObserverInfo comAdobeCqSocialSyncImplDiffChangesObserver(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled, @QueryParam("agentName")String agentName, @QueryParam("diffPath")String diffPath, @QueryParam("propertyNames")String propertyNames);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.sync.impl.GroupSyncListenerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialSyncImplGroupSyncListenerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialSyncImplGroupSyncListenerImplInfo comAdobeCqSocialSyncImplGroupSyncListenerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("nodetypes")List<String> nodetypes, @QueryParam("ignorableprops")List<String> ignorableprops, @QueryParam("ignorablenodes")String ignorablenodes, @QueryParam("enabled")Boolean enabled, @QueryParam("distfolders")String distfolders);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.sync.impl.PublisherSyncServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialSyncImplPublisherSyncServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialSyncImplPublisherSyncServiceImplInfo comAdobeCqSocialSyncImplPublisherSyncServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("activeRunModes")List<String> activeRunModes);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.sync.impl.UserSyncListenerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialSyncImplUserSyncListenerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialSyncImplUserSyncListenerImplInfo comAdobeCqSocialSyncImplUserSyncListenerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("nodetypes")List<String> nodetypes, @QueryParam("ignorableprops")List<String> ignorableprops, @QueryParam("ignorablenodes")List<String> ignorablenodes, @QueryParam("enabled")Boolean enabled, @QueryParam("distfolders")List<String> distfolders);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.translation.impl.TranslationServiceConfigManager")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo comAdobeCqSocialTranslationImplTranslationServiceConfigManager(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("translate.language")String translateLanguage, @QueryParam("translate.display")String translateDisplay, @QueryParam("translate.attribution")Boolean translateAttribution, @QueryParam("translate.caching")String translateCaching, @QueryParam("translate.smart.rendering")String translateSmartRendering, @QueryParam("translate.caching.duration")String translateCachingDuration, @QueryParam("translate.session.save.interval")String translateSessionSaveInterval, @QueryParam("translate.session.save.batchLimit")String translateSessionSaveBatchLimit);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.translation.impl.UGCLanguageDetector")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialTranslationImplUGCLanguageDetectorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialTranslationImplUGCLanguageDetectorInfo comAdobeCqSocialTranslationImplUGCLanguageDetector(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.topics")String eventTopics, @QueryParam("event.filter")String eventFilter, @QueryParam("translate.listener.type")List<String> translateListenerType, @QueryParam("translate.property.list")List<String> translatePropertyList, @QueryParam("poolSize")Integer poolSize, @QueryParam("maxPoolSize")Integer maxPoolSize, @QueryParam("queueSize")Integer queueSize, @QueryParam("keepAliveTime")Integer keepAliveTime);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.ugcbase.dispatcher.impl.FlushServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("threadPoolSize")Integer threadPoolSize, @QueryParam("delayTime")Integer delayTime, @QueryParam("workerSleepTime")Integer workerSleepTime);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.AysncReverseReplicatorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("poolSize")Integer poolSize, @QueryParam("maxPoolSize")Integer maxPoolSize, @QueryParam("queueSize")Integer queueSize, @QueryParam("keepAliveTime")Integer keepAliveTime);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.PublisherConfigurationImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo comAdobeCqSocialUgcbaseImplPublisherConfigurationImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("isPrimaryPublisher")Boolean isPrimaryPublisher);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.SocialUtilsImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUgcbaseImplSocialUtilsImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUgcbaseImplSocialUtilsImplInfo comAdobeCqSocialUgcbaseImplSocialUtilsImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("legacyCloudUGCPathMapping")Boolean legacyCloudUGCPathMapping);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.AutoModerationImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo comAdobeCqSocialUgcbaseModerationImplAutoModerationImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("automoderation.sequence")List<String> automoderationSequence, @QueryParam("automoderation.onfailurestop")Boolean automoderationOnfailurestop);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.SentimentProcess")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo comAdobeCqSocialUgcbaseModerationImplSentimentProcess(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("watchwords.positive")List<String> watchwordsPositive, @QueryParam("watchwords.negative")List<String> watchwordsNegative, @QueryParam("watchwords.path")String watchwordsPath, @QueryParam("sentiment.path")String sentimentPath);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.DefaultAttachmentTypeBlacklistService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("default.attachment.type.blacklist")List<String> defaultAttachmentTypeBlacklist, @QueryParam("baseline.attachment.type.blacklist")List<String> baselineAttachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.SaferSlingPostValidatorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("parameter.whitelist")List<String> parameterWhitelist, @QueryParam("parameter.whitelist.prefixes")List<String> parameterWhitelistPrefixes, @QueryParam("binary.parameter.whitelist")List<String> binaryParameterWhitelist, @QueryParam("modifier.whitelist")List<String> modifierWhitelist, @QueryParam("operation.whitelist")List<String> operationWhitelist, @QueryParam("operation.whitelist.prefixes")List<String> operationWhitelistPrefixes, @QueryParam("typehint.whitelist")List<String> typehintWhitelist, @QueryParam("resourcetype.whitelist")List<String> resourcetypeWhitelist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.user.endpoints.impl.UsersGroupFromPublishServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.extensions")String slingServletExtensions, @QueryParam("sling.servlet.paths")String slingServletPaths, @QueryParam("sling.servlet.methods")String slingServletMethods);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.social.user.impl.transport.HttpToPublisher")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqSocialUserImplTransportHttpToPublisherInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqSocialUserImplTransportHttpToPublisherInfo comAdobeCqSocialUserImplTransportHttpToPublisher(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enable")Boolean enable, @QueryParam("agent.configuration")List<String> agentConfiguration, @QueryParam("context.path")String contextPath, @QueryParam("disabled.cipher.suites")List<String> disabledCipherSuites, @QueryParam("enabled.cipher.suites")List<String> enabledCipherSuites);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.ui.wcm.commons.internal.servlets.rte.RTEFilterServletFactory.amended")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("resource.types")List<String> resourceTypes);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeContentCleanup")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo comAdobeCqUpgradesCleanupImplUpgradeContentCleanup(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("delete.path.regexps")List<String> deletePathRegexps, @QueryParam("delete.sql2.query")String deleteSql2Query);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeInstallFolderCleanup")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("delete.name.regexps")List<String> deleteNameRegexps);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncDeleteConfigProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("threshold")Integer threshold, @QueryParam("jobTopicName")String jobTopicName, @QueryParam("emailEnabled")Boolean emailEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncJobCleanUpTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression, @QueryParam("job.purge.threshold")Integer jobPurgeThreshold, @QueryParam("job.purge.max.jobs")Integer jobPurgeMaxJobs);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncMoveConfigProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("threshold")Integer threshold, @QueryParam("jobTopicName")String jobTopicName, @QueryParam("emailEnabled")Boolean emailEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncPageMoveConfigProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("threshold")Integer threshold, @QueryParam("jobTopicName")String jobTopicName, @QueryParam("emailEnabled")Boolean emailEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.wcm.launches.impl.LaunchesEventHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo comAdobeCqWcmLaunchesImplLaunchesEventHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.filter")String eventFilter, @QueryParam("launches.eventhandler.threadpool.maxsize")Integer launchesEventhandlerThreadpoolMaxsize, @QueryParam("launches.eventhandler.threadpool.priority")String launchesEventhandlerThreadpoolPriority, @QueryParam("launches.eventhandler.updatelastmodification")Boolean launchesEventhandlerUpdatelastmodification);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.wcm.mobile.qrcode.servlet.QRCodeImageGenerator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo comAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.wcm.qrcode.servlet.whitelist")List<String> cqWcmQrcodeServletWhitelist);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.wcm.style.internal.ComponentStyleInfoCacheImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo comAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("size")Integer size);

    @POST
    @Path("/system/console/configMgr/com.adobe.cq.wcm.translation.impl.TranslationPlatformConfigurationImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("syncTranslationState.schedulingFormat")String syncTranslationStateSchedulingFormat, @QueryParam("schedulingRepeatTranslation.schedulingFormat")String schedulingRepeatTranslationSchedulingFormat, @QueryParam("syncTranslationState.lockTimeoutInMinutes")String syncTranslationStateLockTimeoutInMinutes, @QueryParam("export.format")String exportFormat);

    @POST
    @Path("/system/console/configMgr/com.adobe.fd.fp.config.FormsPortalDraftsandSubmissionConfigService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("portal.outboxes")List<String> portalOutboxes, @QueryParam("draft.data.service")String draftDataService, @QueryParam("draft.metadata.service")String draftMetadataService, @QueryParam("submit.data.service")String submitDataService, @QueryParam("submit.metadata.service")String submitMetadataService, @QueryParam("pendingSign.data.service")String pendingSignDataService, @QueryParam("pendingSign.metadata.service")String pendingSignMetadataService);

    @POST
    @Path("/system/console/configMgr/com.adobe.fd.fp.config.FormsPortalSchedulerService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeFdFpConfigFormsPortalSchedulerServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeFdFpConfigFormsPortalSchedulerServiceInfo comAdobeFdFpConfigFormsPortalSchedulerService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("formportal.interval")String formportalInterval);

    @POST
    @Path("/system/console/configMgr/com.adobe.forms.common.service.impl.DefaultDataProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeFormsCommonServiceImplDefaultDataProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeFormsCommonServiceImplDefaultDataProviderInfo comAdobeFormsCommonServiceImplDefaultDataProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("alloweddataFileLocations")List<String> alloweddataFileLocations);

    @POST
    @Path("/system/console/configMgr/com.adobe.forms.common.service.impl.FormsCommonConfigurationServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("tempStorageConfig")String tempStorageConfig);

    @POST
    @Path("/system/console/configMgr/com.adobe.forms.common.servlet.TempCleanUpTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeFormsCommonServletTempCleanUpTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeFormsCommonServletTempCleanUpTaskInfo comAdobeFormsCommonServletTempCleanUpTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression, @QueryParam("Duration for Temporary Storage")String durationForTemporaryStorage, @QueryParam("Duration for Anonymous Storage")String durationForAnonymousStorage);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.acp.platform.PlatformServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAcpPlatformPlatformServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAcpPlatformPlatformServletInfo comAdobeGraniteAcpPlatformPlatformServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("query.limit")Integer queryLimit, @QueryParam("file.type.extension.map")List<String> fileTypeExtensionMap);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.activitystreams.impl.ActivityManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteActivitystreamsImplActivityManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteActivitystreamsImplActivityManagerImplInfo comAdobeGraniteActivitystreamsImplActivityManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("aggregate.relationships")List<String> aggregateRelationships, @QueryParam("aggregate.descend.virtual")Boolean aggregateDescendVirtual);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.analyzer.base.SystemStatusServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAnalyzerBaseSystemStatusServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAnalyzerBaseSystemStatusServletInfo comAdobeGraniteAnalyzerBaseSystemStatusServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("disabled")Boolean disabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.analyzer.scripts.compile.AllScriptsCompilerServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("disabled")Boolean disabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.apicontroller.FilterResolverHookFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteApicontrollerFilterResolverHookFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteApicontrollerFilterResolverHookFactoryInfo comAdobeGraniteApicontrollerFilterResolverHookFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.cq.cdn.cdn-rewriter")String comAdobeCqCdnCdnRewriter, @QueryParam("com.adobe.cq.cloud-config.components")String comAdobeCqCloudConfigComponents, @QueryParam("com.adobe.cq.cloud-config.core")String comAdobeCqCloudConfigCore, @QueryParam("com.adobe.cq.cloud-config.ui")String comAdobeCqCloudConfigUi, @QueryParam("com.adobe.cq.com.adobe.cq.editor")String comAdobeCqComAdobeCqEditor, @QueryParam("com.adobe.cq.com.adobe.cq.projects.core")String comAdobeCqComAdobeCqProjectsCore, @QueryParam("com.adobe.cq.com.adobe.cq.projects.wcm.core")String comAdobeCqComAdobeCqProjectsWcmCore, @QueryParam("com.adobe.cq.com.adobe.cq.ui.commons")String comAdobeCqComAdobeCqUiCommons, @QueryParam("com.adobe.cq.com.adobe.cq.wcm.style")String comAdobeCqComAdobeCqWcmStyle, @QueryParam("com.adobe.cq.cq-activitymap-integration")String comAdobeCqCqActivitymapIntegration, @QueryParam("com.adobe.cq.cq-contexthub-commons")String comAdobeCqCqContexthubCommons, @QueryParam("com.adobe.cq.cq-dtm")String comAdobeCqCqDtm, @QueryParam("com.adobe.cq.cq-healthcheck")String comAdobeCqCqHealthcheck, @QueryParam("com.adobe.cq.cq-multisite-targeting")String comAdobeCqCqMultisiteTargeting, @QueryParam("com.adobe.cq.cq-pre-upgrade-cleanup")String comAdobeCqCqPreUpgradeCleanup, @QueryParam("com.adobe.cq.cq-product-info-provider")String comAdobeCqCqProductInfoProvider, @QueryParam("com.adobe.cq.cq-rest-sites")String comAdobeCqCqRestSites, @QueryParam("com.adobe.cq.cq-security-hc")String comAdobeCqCqSecurityHc, @QueryParam("com.adobe.cq.dam.cq-dam-svg-handler")String comAdobeCqDamCqDamSvgHandler, @QueryParam("com.adobe.cq.dam.cq-scene7-imaging")String comAdobeCqDamCqScene7Imaging, @QueryParam("com.adobe.cq.dtm-reactor.core")String comAdobeCqDtmReactorCore, @QueryParam("com.adobe.cq.dtm-reactor.ui")String comAdobeCqDtmReactorUi, @QueryParam("com.adobe.cq.exp-jspel-resolver")String comAdobeCqExpJspelResolver, @QueryParam("com.adobe.cq.inbox.cq-inbox")String comAdobeCqInboxCqInbox, @QueryParam("com.adobe.cq.json-schema-parser")String comAdobeCqJsonSchemaParser, @QueryParam("com.adobe.cq.media.cq-media-publishing-dps-fp-core")String comAdobeCqMediaCqMediaPublishingDpsFpCore, @QueryParam("com.adobe.cq.mobile.cq-mobile-caas")String comAdobeCqMobileCqMobileCaas, @QueryParam("com.adobe.cq.mobile.cq-mobile-index-builder")String comAdobeCqMobileCqMobileIndexBuilder, @QueryParam("com.adobe.cq.mobile.cq-mobile-phonegap-build")String comAdobeCqMobileCqMobilePhonegapBuild, @QueryParam("com.adobe.cq.myspell")String comAdobeCqMyspell, @QueryParam("com.adobe.cq.sample.we.retail.core")String comAdobeCqSampleWeRetailCore, @QueryParam("com.adobe.cq.screens.com.adobe.cq.screens.dcc")String comAdobeCqScreensComAdobeCqScreensDcc, @QueryParam("com.adobe.cq.screens.com.adobe.cq.screens.mq.core")String comAdobeCqScreensComAdobeCqScreensMqCore, @QueryParam("com.adobe.cq.social.cq-social-as-provider")String comAdobeCqSocialCqSocialAsProvider, @QueryParam("com.adobe.cq.social.cq-social-badging-basic-impl")String comAdobeCqSocialCqSocialBadgingBasicImpl, @QueryParam("com.adobe.cq.social.cq-social-badging-impl")String comAdobeCqSocialCqSocialBadgingImpl, @QueryParam("com.adobe.cq.social.cq-social-calendar-impl")String comAdobeCqSocialCqSocialCalendarImpl, @QueryParam("com.adobe.cq.social.cq-social-content-fragments-impl")String comAdobeCqSocialCqSocialContentFragmentsImpl, @QueryParam("com.adobe.cq.social.cq-social-enablement-impl")String comAdobeCqSocialCqSocialEnablementImpl, @QueryParam("com.adobe.cq.social.cq-social-graph-impl")String comAdobeCqSocialCqSocialGraphImpl, @QueryParam("com.adobe.cq.social.cq-social-ideation-impl")String comAdobeCqSocialCqSocialIdeationImpl, @QueryParam("com.adobe.cq.social.cq-social-jcr-provider")String comAdobeCqSocialCqSocialJcrProvider, @QueryParam("com.adobe.cq.social.cq-social-members-impl")String comAdobeCqSocialCqSocialMembersImpl, @QueryParam("com.adobe.cq.social.cq-social-ms-provider")String comAdobeCqSocialCqSocialMsProvider, @QueryParam("com.adobe.cq.social.cq-social-notifications-channels-web")String comAdobeCqSocialCqSocialNotificationsChannelsWeb, @QueryParam("com.adobe.cq.social.cq-social-notifications-impl")String comAdobeCqSocialCqSocialNotificationsImpl, @QueryParam("com.adobe.cq.social.cq-social-rdb-provider")String comAdobeCqSocialCqSocialRdbProvider, @QueryParam("com.adobe.cq.social.cq-social-scf-impl")String comAdobeCqSocialCqSocialScfImpl, @QueryParam("com.adobe.cq.social.cq-social-scoring-basic-impl")String comAdobeCqSocialCqSocialScoringBasicImpl, @QueryParam("com.adobe.cq.social.cq-social-scoring-impl")String comAdobeCqSocialCqSocialScoringImpl, @QueryParam("com.adobe.cq.social.cq-social-serviceusers-impl")String comAdobeCqSocialCqSocialServiceusersImpl, @QueryParam("com.adobe.cq.social.cq-social-srp-impl")String comAdobeCqSocialCqSocialSrpImpl, @QueryParam("com.adobe.cq.social.cq-social-ugcbase-impl")String comAdobeCqSocialCqSocialUgcbaseImpl, @QueryParam("com.adobe.dam.cq-dam-cfm-impl")String comAdobeDamCqDamCfmImpl, @QueryParam("com.adobe.forms.foundation-forms-foundation-base")String comAdobeFormsFoundationFormsFoundationBase, @QueryParam("com.adobe.granite.apicontroller")String comAdobeGraniteApicontroller, @QueryParam("com.adobe.granite.asset.core")String comAdobeGraniteAssetCore, @QueryParam("com.adobe.granite.auth.sso")String comAdobeGraniteAuthSso, @QueryParam("com.adobe.granite.bundles.hc.impl")String comAdobeGraniteBundlesHcImpl, @QueryParam("com.adobe.granite.compat-router")String comAdobeGraniteCompatRouter, @QueryParam("com.adobe.granite.conf")String comAdobeGraniteConf, @QueryParam("com.adobe.granite.conf.ui.core")String comAdobeGraniteConfUiCore, @QueryParam("com.adobe.granite.cors")String comAdobeGraniteCors, @QueryParam("com.adobe.granite.crx-explorer")String comAdobeGraniteCrxExplorer, @QueryParam("com.adobe.granite.crxde-lite")String comAdobeGraniteCrxdeLite, @QueryParam("com.adobe.granite.crypto.config")String comAdobeGraniteCryptoConfig, @QueryParam("com.adobe.granite.crypto.extension")String comAdobeGraniteCryptoExtension, @QueryParam("com.adobe.granite.crypto.file")String comAdobeGraniteCryptoFile, @QueryParam("com.adobe.granite.crypto.jcr")String comAdobeGraniteCryptoJcr, @QueryParam("com.adobe.granite.csrf")String comAdobeGraniteCsrf, @QueryParam("com.adobe.granite.distribution.core")String comAdobeGraniteDistributionCore, @QueryParam("com.adobe.granite.dropwizard.metrics")String comAdobeGraniteDropwizardMetrics, @QueryParam("com.adobe.granite.frags.impl")String comAdobeGraniteFragsImpl, @QueryParam("com.adobe.granite.gibson")String comAdobeGraniteGibson, @QueryParam("com.adobe.granite.infocollector")String comAdobeGraniteInfocollector, @QueryParam("com.adobe.granite.installer.factory.packages")String comAdobeGraniteInstallerFactoryPackages, @QueryParam("com.adobe.granite.jetty.ssl")String comAdobeGraniteJettySsl, @QueryParam("com.adobe.granite.jobs.async")String comAdobeGraniteJobsAsync, @QueryParam("com.adobe.granite.maintenance.oak")String comAdobeGraniteMaintenanceOak, @QueryParam("com.adobe.granite.monitoring.core")String comAdobeGraniteMonitoringCore, @QueryParam("com.adobe.granite.queries")String comAdobeGraniteQueries, @QueryParam("com.adobe.granite.replication.hc.impl")String comAdobeGraniteReplicationHcImpl, @QueryParam("com.adobe.granite.repository.checker")String comAdobeGraniteRepositoryChecker, @QueryParam("com.adobe.granite.repository.hc.impl")String comAdobeGraniteRepositoryHcImpl, @QueryParam("com.adobe.granite.rest.assets")String comAdobeGraniteRestAssets, @QueryParam("com.adobe.granite.security.ui")String comAdobeGraniteSecurityUi, @QueryParam("com.adobe.granite.startup")String comAdobeGraniteStartup, @QueryParam("com.adobe.granite.tagsoup")String comAdobeGraniteTagsoup, @QueryParam("com.adobe.granite.taskmanagement.core")String comAdobeGraniteTaskmanagementCore, @QueryParam("com.adobe.granite.taskmanagement.workflow")String comAdobeGraniteTaskmanagementWorkflow, @QueryParam("com.adobe.granite.ui.clientlibs.compiler.less")String comAdobeGraniteUiClientlibsCompilerLess, @QueryParam("com.adobe.granite.ui.clientlibs.processor.gcc")String comAdobeGraniteUiClientlibsProcessorGcc, @QueryParam("com.adobe.granite.webconsole.plugins")String comAdobeGraniteWebconsolePlugins, @QueryParam("com.adobe.granite.workflow.console")String comAdobeGraniteWorkflowConsole, @QueryParam("com.adobe.xmp.worker.files.native.fragment.linux")String comAdobeXmpWorkerFilesNativeFragmentLinux, @QueryParam("com.adobe.xmp.worker.files.native.fragment.macosx")String comAdobeXmpWorkerFilesNativeFragmentMacosx, @QueryParam("com.adobe.xmp.worker.files.native.fragment.win")String comAdobeXmpWorkerFilesNativeFragmentWin, @QueryParam("com.day.commons.osgi.wrapper.simple-jndi")String comDayCommonsOsgiWrapperSimpleJndi, @QueryParam("com.day.cq.cq-authhandler")String comDayCqCqAuthhandler, @QueryParam("com.day.cq.cq-compat-configupdate")String comDayCqCqCompatConfigupdate, @QueryParam("com.day.cq.cq-licensebranding")String comDayCqCqLicensebranding, @QueryParam("com.day.cq.cq-notifcation-impl")String comDayCqCqNotifcationImpl, @QueryParam("com.day.cq.cq-replication-audit")String comDayCqCqReplicationAudit, @QueryParam("com.day.cq.cq-search-ext")String comDayCqCqSearchExt, @QueryParam("com.day.cq.dam.cq-dam-annotation-print")String comDayCqDamCqDamAnnotationPrint, @QueryParam("com.day.cq.dam.cq-dam-asset-usage")String comDayCqDamCqDamAssetUsage, @QueryParam("com.day.cq.dam.cq-dam-s7dam")String comDayCqDamCqDamS7dam, @QueryParam("com.day.cq.dam.cq-dam-similaritysearch")String comDayCqDamCqDamSimilaritysearch, @QueryParam("com.day.cq.dam.dam-webdav-support")String comDayCqDamDamWebdavSupport, @QueryParam("com.day.cq.pre-upgrade-tasks")String comDayCqPreUpgradeTasks, @QueryParam("com.day.cq.replication.extensions")String comDayCqReplicationExtensions, @QueryParam("com.day.cq.wcm.cq-msm-core")String comDayCqWcmCqMsmCore, @QueryParam("com.day.cq.wcm.cq-wcm-translation")String comDayCqWcmCqWcmTranslation, @QueryParam("day-commons-jrawio")String dayCommonsJrawio, @QueryParam("org.apache.aries.jmx.whiteboard")String orgApacheAriesJmxWhiteboard, @QueryParam("org.apache.felix.http.sslfilter")String orgApacheFelixHttpSslfilter, @QueryParam("org.apache.felix.org.apache.felix.threaddump")String orgApacheFelixOrgApacheFelixThreaddump, @QueryParam("org.apache.felix.webconsole.plugins.ds")String orgApacheFelixWebconsolePluginsDs, @QueryParam("org.apache.felix.webconsole.plugins.event")String orgApacheFelixWebconsolePluginsEvent, @QueryParam("org.apache.felix.webconsole.plugins.memoryusage")String orgApacheFelixWebconsolePluginsMemoryusage, @QueryParam("org.apache.felix.webconsole.plugins.packageadmin")String orgApacheFelixWebconsolePluginsPackageadmin, @QueryParam("org.apache.jackrabbit.oak-auth-ldap")String orgApacheJackrabbitOakAuthLdap, @QueryParam("org.apache.jackrabbit.oak-segment-tar")String orgApacheJackrabbitOakSegmentTar, @QueryParam("org.apache.jackrabbit.oak-solr-osgi")String orgApacheJackrabbitOakSolrOsgi, @QueryParam("org.apache.sling.bundleresource.impl")String orgApacheSlingBundleresourceImpl, @QueryParam("org.apache.sling.commons.fsclassloader")String orgApacheSlingCommonsFsclassloader, @QueryParam("org.apache.sling.commons.log.webconsole")String orgApacheSlingCommonsLogWebconsole, @QueryParam("org.apache.sling.datasource")String orgApacheSlingDatasource, @QueryParam("org.apache.sling.discovery.base")String orgApacheSlingDiscoveryBase, @QueryParam("org.apache.sling.discovery.oak")String orgApacheSlingDiscoveryOak, @QueryParam("org.apache.sling.discovery.support")String orgApacheSlingDiscoverySupport, @QueryParam("org.apache.sling.distribution.api")String orgApacheSlingDistributionApi, @QueryParam("org.apache.sling.distribution.core")String orgApacheSlingDistributionCore, @QueryParam("org.apache.sling.extensions.webconsolesecurityprovider")String orgApacheSlingExtensionsWebconsolesecurityprovider, @QueryParam("org.apache.sling.hc.webconsole")String orgApacheSlingHcWebconsole, @QueryParam("org.apache.sling.installer.console")String orgApacheSlingInstallerConsole, @QueryParam("org.apache.sling.installer.provider.file")String orgApacheSlingInstallerProviderFile, @QueryParam("org.apache.sling.installer.provider.jcr")String orgApacheSlingInstallerProviderJcr, @QueryParam("org.apache.sling.jcr.davex")String orgApacheSlingJcrDavex, @QueryParam("org.apache.sling.jcr.resourcesecurity")String orgApacheSlingJcrResourcesecurity, @QueryParam("org.apache.sling.jmx.provider")String orgApacheSlingJmxProvider, @QueryParam("org.apache.sling.launchpad.installer")String orgApacheSlingLaunchpadInstaller, @QueryParam("org.apache.sling.models.impl")String orgApacheSlingModelsImpl, @QueryParam("org.apache.sling.repoinit.parser")String orgApacheSlingRepoinitParser, @QueryParam("org.apache.sling.resource.inventory")String orgApacheSlingResourceInventory, @QueryParam("org.apache.sling.resourceresolver")String orgApacheSlingResourceresolver, @QueryParam("org.apache.sling.scripting.javascript")String orgApacheSlingScriptingJavascript, @QueryParam("org.apache.sling.scripting.jst")String orgApacheSlingScriptingJst, @QueryParam("org.apache.sling.scripting.sightly.js.provider")String orgApacheSlingScriptingSightlyJsProvider, @QueryParam("org.apache.sling.scripting.sightly.models.provider")String orgApacheSlingScriptingSightlyModelsProvider, @QueryParam("org.apache.sling.security")String orgApacheSlingSecurity, @QueryParam("org.apache.sling.servlets.compat")String orgApacheSlingServletsCompat, @QueryParam("org.apache.sling.servlets.get")String orgApacheSlingServletsGet, @QueryParam("org.apache.sling.startupfilter.disabler")String orgApacheSlingStartupfilterDisabler, @QueryParam("org.apache.sling.tracer")String orgApacheSlingTracer, @QueryParam("we.retail.client.app.core")String weRetailClientAppCore);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.cert.impl.ClientCertAuthHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthCertImplClientCertAuthHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthCertImplClientCertAuthHandlerInfo comAdobeGraniteAuthCertImplClientCertAuthHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.ims")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthImsInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthImsInfo comAdobeGraniteAuthIms(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("configid")String configid, @QueryParam("scope")String scope);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.ims.impl.ExternalUserIdMappingProviderExtension")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.provider.id")String oauthProviderId);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSAccessTokenRequestCustomizerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("auth.ims.client.secret")String authImsClientSecret, @QueryParam("customizer.type")String customizerType);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSInstanceCredentialsValidator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.provider.id")String oauthProviderId);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthImsImplIMSProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthImsImplIMSProviderImplInfo comAdobeGraniteAuthImsImplIMSProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.provider.id")String oauthProviderId, @QueryParam("oauth.provider.ims.authorization.url")String oauthProviderImsAuthorizationUrl, @QueryParam("oauth.provider.ims.token.url")String oauthProviderImsTokenUrl, @QueryParam("oauth.provider.ims.profile.url")String oauthProviderImsProfileUrl, @QueryParam("oauth.provider.ims.extended.details.urls")List<String> oauthProviderImsExtendedDetailsUrls, @QueryParam("oauth.provider.ims.validate.token.url")String oauthProviderImsValidateTokenUrl, @QueryParam("oauth.provider.ims.session.property")String oauthProviderImsSessionProperty, @QueryParam("oauth.provider.ims.service.token.client.id")String oauthProviderImsServiceTokenClientId, @QueryParam("oauth.provider.ims.service.token.client.secret")String oauthProviderImsServiceTokenClientSecret, @QueryParam("oauth.provider.ims.service.token")String oauthProviderImsServiceToken, @QueryParam("ims.org.ref")String imsOrgRef, @QueryParam("ims.group.mapping")List<String> imsGroupMapping, @QueryParam("oauth.provider.ims.only.license.group")Boolean oauthProviderImsOnlyLicenseGroup);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.ims.impl.ImsConfigProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthImsImplImsConfigProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthImsImplImsConfigProviderImplInfo comAdobeGraniteAuthImsImplImsConfigProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.configmanager.ims.configid")String oauthConfigmanagerImsConfigid, @QueryParam("ims.owningEntity")String imsOwningEntity, @QueryParam("aem.instanceId")String aemInstanceId, @QueryParam("ims.serviceCode")String imsServiceCode);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.accesstoken.provider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthAccesstokenProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthAccesstokenProviderInfo comAdobeGraniteAuthOauthAccesstokenProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("auth.token.provider.title")String authTokenProviderTitle, @QueryParam("auth.token.provider.default.claims")List<String> authTokenProviderDefaultClaims, @QueryParam("auth.token.provider.endpoint")String authTokenProviderEndpoint, @QueryParam("auth.access.token.request")String authAccessTokenRequest, @QueryParam("auth.token.provider.keypair.alias")String authTokenProviderKeypairAlias, @QueryParam("auth.token.provider.conn.timeout")Integer authTokenProviderConnTimeout, @QueryParam("auth.token.provider.so.timeout")Integer authTokenProviderSoTimeout, @QueryParam("auth.token.provider.client.id")String authTokenProviderClientId, @QueryParam("auth.token.provider.scope")String authTokenProviderScope, @QueryParam("auth.token.provider.reuse.access.token")Boolean authTokenProviderReuseAccessToken, @QueryParam("auth.token.provider.relaxed.ssl")Boolean authTokenProviderRelaxedSsl, @QueryParam("token.request.customizer.type")String tokenRequestCustomizerType, @QueryParam("auth.token.validator.type")String authTokenValidatorType);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.impl.BearerAuthenticationHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo comAdobeGraniteAuthOauthImplBearerAuthenticationHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path, @QueryParam("oauth.clientIds.allowed")List<String> oauthClientIdsAllowed, @QueryParam("auth.bearer.sync.ims")Boolean authBearerSyncIms, @QueryParam("auth.tokenRequestParameter")String authTokenRequestParameter, @QueryParam("oauth.bearer.configid")String oauthBearerConfigid, @QueryParam("oauth.jwt.support")Boolean oauthJwtSupport);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.impl.DefaultTokenValidatorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo comAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("auth.token.validator.type")String authTokenValidatorType);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.impl.FacebookProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthImplFacebookProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthImplFacebookProviderImplInfo comAdobeGraniteAuthOauthImplFacebookProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.provider.id")String oauthProviderId);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.impl.GithubProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthImplGithubProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthImplGithubProviderImplInfo comAdobeGraniteAuthOauthImplGithubProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.provider.id")String oauthProviderId, @QueryParam("oauth.provider.github.authorization.url")String oauthProviderGithubAuthorizationUrl, @QueryParam("oauth.provider.github.token.url")String oauthProviderGithubTokenUrl, @QueryParam("oauth.provider.github.profile.url")String oauthProviderGithubProfileUrl);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.impl.GraniteProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthImplGraniteProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthImplGraniteProviderInfo comAdobeGraniteAuthOauthImplGraniteProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.provider.id")String oauthProviderId, @QueryParam("oauth.provider.granite.authorization.url")String oauthProviderGraniteAuthorizationUrl, @QueryParam("oauth.provider.granite.token.url")String oauthProviderGraniteTokenUrl, @QueryParam("oauth.provider.granite.profile.url")String oauthProviderGraniteProfileUrl, @QueryParam("oauth.provider.granite.extended.details.urls")String oauthProviderGraniteExtendedDetailsUrls);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManager")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo comAdobeGraniteAuthOauthImplHelperProviderConfigManager(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.cookie.login.timeout")String oauthCookieLoginTimeout, @QueryParam("oauth.cookie.max.age")String oauthCookieMaxAge);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManagerInternal")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.cookie.login.timeout")String oauthCookieLoginTimeout, @QueryParam("oauth.cookie.max.age")String oauthCookieMaxAge);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.impl.OAuthAuthenticationHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo comAdobeGraniteAuthOauthImplOAuthAuthenticationHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.impl.TwitterProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthImplTwitterProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthImplTwitterProviderImplInfo comAdobeGraniteAuthOauthImplTwitterProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.provider.id")String oauthProviderId);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.oauth.provider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthOauthProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthOauthProviderInfo comAdobeGraniteAuthOauthProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.config.id")String oauthConfigId, @QueryParam("oauth.client.id")String oauthClientId, @QueryParam("oauth.client.secret")String oauthClientSecret, @QueryParam("oauth.scope")List<String> oauthScope, @QueryParam("oauth.config.provider.id")String oauthConfigProviderId, @QueryParam("oauth.create.users")Boolean oauthCreateUsers, @QueryParam("oauth.userid.property")String oauthUseridProperty, @QueryParam("force.strict.username.matching")Boolean forceStrictUsernameMatching, @QueryParam("oauth.encode.userids")Boolean oauthEncodeUserids, @QueryParam("oauth.hash.userids")Boolean oauthHashUserids, @QueryParam("oauth.callBackUrl")String oauthCallBackUrl, @QueryParam("oauth.access.token.persist")Boolean oauthAccessTokenPersist, @QueryParam("oauth.access.token.persist.cookie")Boolean oauthAccessTokenPersistCookie, @QueryParam("oauth.csrf.state.protection")Boolean oauthCsrfStateProtection, @QueryParam("oauth.redirect.request.params")Boolean oauthRedirectRequestParams, @QueryParam("oauth.config.siblings.allow")Boolean oauthConfigSiblingsAllow);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.requirement.impl.DefaultRequirementHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo comAdobeGraniteAuthRequirementImplDefaultRequirementHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("supportedPaths")List<String> supportedPaths);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo comAdobeGraniteAuthSamlSamlAuthenticationHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")List<String> path, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("idpUrl")String idpUrl, @QueryParam("idpCertAlias")String idpCertAlias, @QueryParam("idpHttpRedirect")Boolean idpHttpRedirect, @QueryParam("serviceProviderEntityId")String serviceProviderEntityId, @QueryParam("assertionConsumerServiceURL")String assertionConsumerServiceURL, @QueryParam("spPrivateKeyAlias")String spPrivateKeyAlias, @QueryParam("keyStorePassword")String keyStorePassword, @QueryParam("defaultRedirectUrl")String defaultRedirectUrl, @QueryParam("userIDAttribute")String userIDAttribute, @QueryParam("useEncryption")Boolean useEncryption, @QueryParam("createUser")Boolean createUser, @QueryParam("userIntermediatePath")String userIntermediatePath, @QueryParam("addGroupMemberships")Boolean addGroupMemberships, @QueryParam("groupMembershipAttribute")String groupMembershipAttribute, @QueryParam("defaultGroups")List<String> defaultGroups, @QueryParam("nameIdFormat")String nameIdFormat, @QueryParam("synchronizeAttributes")List<String> synchronizeAttributes, @QueryParam("handleLogout")Boolean handleLogout, @QueryParam("logoutUrl")String logoutUrl, @QueryParam("clockTolerance")Integer clockTolerance, @QueryParam("digestMethod")String digestMethod, @QueryParam("signatureMethod")String signatureMethod, @QueryParam("identitySyncType")String identitySyncType, @QueryParam("idpIdentifier")String idpIdentifier);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.auth.sso.impl.SsoAuthenticationHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo comAdobeGraniteAuthSsoImplSsoAuthenticationHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("jaas.controlFlag")String jaasControlFlag, @QueryParam("jaas.realmName")String jaasRealmName, @QueryParam("jaas.ranking")Integer jaasRanking, @QueryParam("headers")List<String> headers, @QueryParam("cookies")List<String> cookies, @QueryParam("parameters")List<String> parameters, @QueryParam("usermap")List<String> usermap, @QueryParam("format")String format, @QueryParam("trustedCredentialsAttribute")String trustedCredentialsAttribute);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.CodeCacheHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo comAdobeGraniteBundlesHcImplCodeCacheHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("minimum.code.cache.size")Integer minimumCodeCacheSize);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.CrxdeSupportBundleHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.DavExBundleHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo comAdobeGraniteBundlesHcImplDavExBundleHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.InactiveBundlesHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("ignored.bundles")List<String> ignoredBundles);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.JobsHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplJobsHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplJobsHealthCheckInfo comAdobeGraniteBundlesHcImplJobsHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("max.queued.jobs")Integer maxQueuedJobs);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingGetServletHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo comAdobeGraniteBundlesHcImplSlingGetServletHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJavaScriptHandlerHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJspScriptHandlerHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingReferrerFilterHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.bundles.hc.impl.WebDavBundleHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo comAdobeGraniteBundlesHcImplWebDavBundleHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.comments.internal.CommentReplicationContentFilterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo comAdobeGraniteCommentsInternalCommentReplicationContentFilterFac(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("replicate.comment.resourceTypes")List<String> replicateCommentResourceTypes);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.compatrouter.impl.CompatSwitchingServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo comAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("compatgroups")List<String> compatgroups, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.compatrouter.impl.RoutingConfig")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteCompatrouterImplRoutingConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteCompatrouterImplRoutingConfigInfo comAdobeGraniteCompatrouterImplRoutingConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("id")String id, @QueryParam("compatPath")String compatPath, @QueryParam("newPath")String newPath);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.compatrouter.impl.SwitchMappingConfig")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteCompatrouterImplSwitchMappingConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteCompatrouterImplSwitchMappingConfigInfo comAdobeGraniteCompatrouterImplSwitchMappingConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("group")String group, @QueryParam("ids")List<String> ids);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.conf.impl.RuntimeAwareConfigurationResourceResolvingStrategy")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled, @QueryParam("fallbackPaths")List<String> fallbackPaths);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.contexthub.impl.ContextHubImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteContexthubImplContextHubImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteContexthubImplContextHubImplInfo comAdobeGraniteContexthubImplContextHubImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.granite.contexthub.silent_mode")Boolean comAdobeGraniteContexthubSilentMode, @QueryParam("com.adobe.granite.contexthub.show_ui")Boolean comAdobeGraniteContexthubShowUi);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.cors.impl.CORSPolicyImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteCorsImplCORSPolicyImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteCorsImplCORSPolicyImplInfo comAdobeGraniteCorsImplCORSPolicyImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("alloworigin")List<String> alloworigin, @QueryParam("alloworiginregexp")List<String> alloworiginregexp, @QueryParam("allowedpaths")List<String> allowedpaths, @QueryParam("exposedheaders")List<String> exposedheaders, @QueryParam("maxage")Integer maxage, @QueryParam("supportedheaders")List<String> supportedheaders, @QueryParam("supportedmethods")List<String> supportedmethods, @QueryParam("supportscredentials")Boolean supportscredentials);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.csrf.impl.CSRFFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteCsrfImplCSRFFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteCsrfImplCSRFFilterInfo comAdobeGraniteCsrfImplCSRFFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("filter.methods")List<String> filterMethods, @QueryParam("filter.enable.safe.user.agents")Boolean filterEnableSafeUserAgents, @QueryParam("filter.safe.user.agents")List<String> filterSafeUserAgents, @QueryParam("filter.excluded.paths")List<String> filterExcludedPaths);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.csrf.impl.CSRFServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteCsrfImplCSRFServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteCsrfImplCSRFServletInfo comAdobeGraniteCsrfImplCSRFServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("csrf.token.expires.in")Integer csrfTokenExpiresIn, @QueryParam("sling.auth.requirements")String slingAuthRequirements);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("username")String username, @QueryParam("encryptedPassword")String encryptedPassword);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo comAdobeGraniteDistributionCoreImplDiffDiffChangesObserver(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled, @QueryParam("agentName")String agentName, @QueryParam("diffPath")String diffPath, @QueryParam("observedPath")String observedPath, @QueryParam("serviceName")String serviceName, @QueryParam("propertyNames")String propertyNames, @QueryParam("distributionDelay")Integer distributionDelay, @QueryParam("serviceUser.target")String serviceUserTarget);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo comAdobeGraniteDistributionCoreImplDiffDiffEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("diffPath")String diffPath, @QueryParam("serviceName")String serviceName, @QueryParam("serviceUser.target")String serviceUserTarget);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.distribution.core.impl.DistributionToReplicationEventTransformer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo comAdobeGraniteDistributionCoreImplDistributionToReplicationEven(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("importer.name")List<String> importerName);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("providerName")String providerName, @QueryParam("forward.requests")Boolean forwardRequests);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.DistributionTransportHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo comAdobeGraniteDistributionCoreImplReplicationDistributionTrans(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("forward.requests")Boolean forwardRequests);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("serviceName")String serviceName, @QueryParam("userId")String userId, @QueryParam("accessTokenProvider.target")String accessTokenProviderTarget);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.frags.impl.CheckHttpHeaderFlag")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteFragsImplCheckHttpHeaderFlagInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteFragsImplCheckHttpHeaderFlagInfo comAdobeGraniteFragsImplCheckHttpHeaderFlag(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("feature.name")String featureName, @QueryParam("feature.description")String featureDescription, @QueryParam("http.header.name")String httpHeaderName, @QueryParam("http.header.valuepattern")String httpHeaderValuepattern);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.frags.impl.RandomFeature")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteFragsImplRandomFeatureInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteFragsImplRandomFeatureInfo comAdobeGraniteFragsImplRandomFeature(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("feature.name")String featureName, @QueryParam("feature.description")String featureDescription, @QueryParam("active.percentage")String activePercentage, @QueryParam("cookie.name")String cookieName, @QueryParam("cookie.maxAge")Integer cookieMaxAge);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.httpcache.file.FileCacheStore")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteHttpcacheFileFileCacheStoreInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteHttpcacheFileFileCacheStoreInfo comAdobeGraniteHttpcacheFileFileCacheStore(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.granite.httpcache.file.documentRoot")String comAdobeGraniteHttpcacheFileDocumentRoot, @QueryParam("com.adobe.granite.httpcache.file.includeHost")String comAdobeGraniteHttpcacheFileIncludeHost);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.httpcache.impl.OuterCacheFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteHttpcacheImplOuterCacheFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteHttpcacheImplOuterCacheFilterInfo comAdobeGraniteHttpcacheImplOuterCacheFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.granite.httpcache.url.paths")List<String> comAdobeGraniteHttpcacheUrlPaths);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.i18n.impl.bundle.PseudoTranslations")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteI18nImplBundlePseudoTranslationsInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteI18nImplBundlePseudoTranslationsInfo comAdobeGraniteI18nImplBundlePseudoTranslations(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("pseudo.patterns")List<String> pseudoPatterns);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.i18n.impl.PreferencesLocaleResolverService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo comAdobeGraniteI18nImplPreferencesLocaleResolverService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("security.preferences.name")String securityPreferencesName);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.infocollector.InfoCollector")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteInfocollectorInfoCollectorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteInfocollectorInfoCollectorInfo comAdobeGraniteInfocollectorInfoCollector(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("granite.infocollector.includeThreadDumps")Boolean graniteInfocollectorIncludeThreadDumps, @QueryParam("granite.infocollector.includeHeapDump")Boolean graniteInfocollectorIncludeHeapDump);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.jetty.ssl.internal.GraniteSslConnectorFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo comAdobeGraniteJettySslInternalGraniteSslConnectorFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.adobe.granite.jetty.ssl.port")Integer comAdobeGraniteJettySslPort, @QueryParam("com.adobe.granite.jetty.ssl.keystore.user")String comAdobeGraniteJettySslKeystoreUser, @QueryParam("com.adobe.granite.jetty.ssl.keystore.password")String comAdobeGraniteJettySslKeystorePassword, @QueryParam("com.adobe.granite.jetty.ssl.ciphersuites.excluded")List<String> comAdobeGraniteJettySslCiphersuitesExcluded, @QueryParam("com.adobe.granite.jetty.ssl.ciphersuites.included")List<String> comAdobeGraniteJettySslCiphersuitesIncluded, @QueryParam("com.adobe.granite.jetty.ssl.client.certificate")String comAdobeGraniteJettySslClientCertificate);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.license.impl.LicenseCheckFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteLicenseImplLicenseCheckFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteLicenseImplLicenseCheckFilterInfo comAdobeGraniteLicenseImplLicenseCheckFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("checkInternval")Integer checkInternval, @QueryParam("excludeIds")List<String> excludeIds, @QueryParam("encryptPing")Boolean encryptPing);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.logging.impl.LogAnalyserImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteLoggingImplLogAnalyserImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteLoggingImplLogAnalyserImplInfo comAdobeGraniteLoggingImplLogAnalyserImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("messages.queue.size")Integer messagesQueueSize, @QueryParam("logger.config")List<String> loggerConfig, @QueryParam("messages.size")Integer messagesSize);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.logging.impl.LogErrorHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteLoggingImplLogErrorHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteLoggingImplLogErrorHealthCheckInfo comAdobeGraniteLoggingImplLogErrorHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.DataStoreGarbageCollectionTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("granite.maintenance.mandatory")Boolean graniteMaintenanceMandatory, @QueryParam("job.topics")String jobTopics);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.LuceneBinariesCleanupTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("job.topics")String jobTopics);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.RevisionCleanupTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo comAdobeGraniteMaintenanceCrxImplRevisionCleanupTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("full.gc.days")List<String> fullGcDays);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.monitoring.impl.ScriptConfigImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteMonitoringImplScriptConfigImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteMonitoringImplScriptConfigImplInfo comAdobeGraniteMonitoringImplScriptConfigImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("script.filename")String scriptFilename, @QueryParam("script.display")String scriptDisplay, @QueryParam("script.path")String scriptPath, @QueryParam("script.platform")List<String> scriptPlatform, @QueryParam("interval")Integer interval, @QueryParam("jmxdomain")String jmxdomain);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.oauth.server.auth.impl.OAuth2ServerAuthenticationHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path, @QueryParam("jaas.controlFlag")String jaasControlFlag, @QueryParam("jaas.realmName")String jaasRealmName, @QueryParam("jaas.ranking")Integer jaasRanking, @QueryParam("oauth.offline.validation")Boolean oauthOfflineValidation);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.oauth.server.impl.AccessTokenCleanupTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo comAdobeGraniteOauthServerImplAccessTokenCleanupTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2ClientRevocationServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo comAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.client.revocation.active")Boolean oauthClientRevocationActive);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2RevocationEndpointServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.paths")String slingServletPaths, @QueryParam("oauth.revocation.active")Boolean oauthRevocationActive);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenEndpointServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo comAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.issuer")String oauthIssuer, @QueryParam("oauth.access.token.expires.in")String oauthAccessTokenExpiresIn, @QueryParam("osgi.http.whiteboard.servlet.pattern")String osgiHttpWhiteboardServletPattern, @QueryParam("osgi.http.whiteboard.context.select")String osgiHttpWhiteboardContextSelect);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenRevocationServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo comAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("oauth.token.revocation.active")Boolean oauthTokenRevocationActive);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingConfigurator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOffloadingImplOffloadingConfiguratorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOffloadingImplOffloadingConfiguratorInfo comAdobeGraniteOffloadingImplOffloadingConfigurator(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("offloading.transporter")String offloadingTransporter, @QueryParam("offloading.cleanup.payload")Boolean offloadingCleanupPayload);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobCloner")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOffloadingImplOffloadingJobClonerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOffloadingImplOffloadingJobClonerInfo comAdobeGraniteOffloadingImplOffloadingJobCloner(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("offloading.jobcloner.enabled")Boolean offloadingJobclonerEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobOffloader")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo comAdobeGraniteOffloadingImplOffloadingJobOffloader(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("offloading.offloader.enabled")Boolean offloadingOffloaderEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingAgentManager")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo comAdobeGraniteOffloadingImplTransporterOffloadingAgentManager(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("offloading.agentmanager.enabled")Boolean offloadingAgentmanagerEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingDefaultTransporter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("default.transport.agent-to-worker.prefix")String defaultTransportAgentToWorkerPrefix, @QueryParam("default.transport.agent-to-master.prefix")String defaultTransportAgentToMasterPrefix, @QueryParam("default.transport.input.package")String defaultTransportInputPackage, @QueryParam("default.transport.output.package")String defaultTransportOutputPackage, @QueryParam("default.transport.replication.synchronous")Boolean defaultTransportReplicationSynchronous, @QueryParam("default.transport.contentpackage")Boolean defaultTransportContentpackage, @QueryParam("offloading.transporter.default.enabled")Boolean offloadingTransporterDefaultEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.omnisearch.impl.core.OmniSearchServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("omnisearch.suggestion.requiretext.min")Integer omnisearchSuggestionRequiretextMin, @QueryParam("omnisearch.suggestion.spellcheck.require")Boolean omnisearchSuggestionSpellcheckRequire);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.optout.impl.OptOutServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteOptoutImplOptOutServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteOptoutImplOptOutServiceImplInfo comAdobeGraniteOptoutImplOptOutServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("optout.cookies")List<String> optoutCookies, @QueryParam("optout.headers")List<String> optoutHeaders, @QueryParam("optout.whitelist.cookies")List<String> optoutWhitelistCookies);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.queries.impl.hc.AsyncIndexHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo comAdobeGraniteQueriesImplHcAsyncIndexHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("indexing.critical.threshold")Integer indexingCriticalThreshold, @QueryParam("indexing.warn.threshold")Integer indexingWarnThreshold, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.queries.impl.hc.LargeIndexHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo comAdobeGraniteQueriesImplHcLargeIndexHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("large.index.critical.threshold")Integer largeIndexCriticalThreshold, @QueryParam("large.index.warn.threshold")Integer largeIndexWarnThreshold, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueriesStatusHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo comAdobeGraniteQueriesImplHcQueriesStatusHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryHealthCheckMetrics")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo comAdobeGraniteQueriesImplHcQueryHealthCheckMetrics(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("getPeriod")Integer getPeriod);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryLimitsHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo comAdobeGraniteQueriesImplHcQueryLimitsHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationQueueHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo comAdobeGraniteReplicationHcImplReplicationQueueHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("number.of.retries.allowed")Integer numberOfRetriesAllowed, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationTransportUsersHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.repository.hc.impl.AuthorizableNodeNameHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.repository.hc.impl.content.sling.SlingContentHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("exclude.search.path")List<String> excludeSearchPath);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.repository.hc.impl.ContinuousRGCHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultAccessUserProfileHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultLoginsHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("account.logins")List<String> accountLogins, @QueryParam("console.logins")List<String> consoleLogins);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.repository.hc.impl.DiskSpaceHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("disk.space.warn.threshold")Integer diskSpaceWarnThreshold, @QueryParam("disk.space.error.threshold")Integer diskSpaceErrorThreshold);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.repository.hc.impl.ObservationQueueLengthHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.repository.impl.CommitStatsConfig")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRepositoryImplCommitStatsConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRepositoryImplCommitStatsConfigInfo comAdobeGraniteRepositoryImplCommitStatsConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled, @QueryParam("intervalSeconds")Integer intervalSeconds, @QueryParam("commitsPerIntervalThreshold")Integer commitsPerIntervalThreshold, @QueryParam("maxLocationLength")Integer maxLocationLength, @QueryParam("maxDetailsShown")Integer maxDetailsShown, @QueryParam("minDetailsPercentage")Integer minDetailsPercentage, @QueryParam("threadMatchers")List<String> threadMatchers, @QueryParam("maxGreedyDepth")Integer maxGreedyDepth, @QueryParam("greedyStackMatchers")String greedyStackMatchers, @QueryParam("stackFilters")List<String> stackFilters, @QueryParam("stackMatchers")List<String> stackMatchers, @QueryParam("stackCategorizers")List<String> stackCategorizers, @QueryParam("stackShorteners")List<String> stackShorteners);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.repository.ServiceUserConfiguration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRepositoryServiceUserConfigurationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRepositoryServiceUserConfigurationInfo comAdobeGraniteRepositoryServiceUserConfiguration(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("serviceusers.simpleSubjectPopulation")Boolean serviceusersSimpleSubjectPopulation, @QueryParam("serviceusers.list")List<String> serviceusersList);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.requests.logging.impl.hc.RequestsStatusHealthCheckImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.resourcestatus.impl.CompositeStatusType")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteResourcestatusImplCompositeStatusTypeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteResourcestatusImplCompositeStatusTypeInfo comAdobeGraniteResourcestatusImplCompositeStatusType(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("types")List<String> types);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.resourcestatus.impl.StatusResourceProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo comAdobeGraniteResourcestatusImplStatusResourceProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("provider.root")String providerRoot);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.rest.assets.impl.AssetContentDispositionFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo comAdobeGraniteRestAssetsImplAssetContentDispositionFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("mime.allowEmpty")Boolean mimeAllowEmpty, @QueryParam("mime.allowed")List<String> mimeAllowed);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.rest.impl.ApiEndpointResourceProviderFactoryImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("provider.roots")String providerRoots);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.rest.impl.servlet.DefaultGETServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteRestImplServletDefaultGETServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteRestImplServletDefaultGETServletInfo comAdobeGraniteRestImplServletDefaultGETServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("default.limit")Integer defaultLimit, @QueryParam("use.absolute.uri")Boolean useAbsoluteUri);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.security.user.ui.internal.servlets.SSLConfigurationServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.tags")List<String> hcTags);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.security.user.UserPropertiesService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteSecurityUserUserPropertiesServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteSecurityUserUserPropertiesServiceInfo comAdobeGraniteSecurityUserUserPropertiesService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("adapter.condition")String adapterCondition, @QueryParam("granite.userproperties.nodetypes")List<String> graniteUserpropertiesNodetypes, @QueryParam("granite.userproperties.resourcetypes")List<String> graniteUserpropertiesResourcetypes);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.socialgraph.impl.SocialGraphFactoryImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo comAdobeGraniteSocialgraphImplSocialGraphFactoryImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("group2member.relationship.outgoing")String group2memberRelationshipOutgoing, @QueryParam("group2member.excluded.outgoing")List<String> group2memberExcludedOutgoing, @QueryParam("group2member.relationship.incoming")String group2memberRelationshipIncoming, @QueryParam("group2member.excluded.incoming")List<String> group2memberExcludedIncoming);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.system.monitoring.impl.SystemStatsMBeanImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression, @QueryParam("jmx.objectname")String jmxObjectname);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskAdapterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("adapter.condition")String adapterCondition);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskArchiveService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo comAdobeGraniteTaskmanagementImplJcrTaskArchiveService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("archiving.enabled")Boolean archivingEnabled, @QueryParam("scheduler.expression")String schedulerExpression, @QueryParam("archive.since.days.completed")Integer archiveSinceDaysCompleted);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.taskmanagement.impl.purge.TaskPurgeMaintenanceTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("purgeCompleted")Boolean purgeCompleted, @QueryParam("completedAge")Integer completedAge, @QueryParam("purgeActive")Boolean purgeActive, @QueryParam("activeAge")Integer activeAge, @QueryParam("saveThreshold")Integer saveThreshold);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.taskmanagement.impl.service.TaskManagerAdapterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("adapter.condition")String adapterCondition, @QueryParam("taskmanager.admingroups")List<String> taskmanagerAdmingroups);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.threaddump.ThreadDumpCollector")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteThreaddumpThreadDumpCollectorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteThreaddumpThreadDumpCollectorInfo comAdobeGraniteThreaddumpThreadDumpCollector(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.period")Integer schedulerPeriod, @QueryParam("scheduler.runOn")String schedulerRunOn, @QueryParam("granite.threaddump.enabled")Boolean graniteThreaddumpEnabled, @QueryParam("granite.threaddump.dumpsPerFile")Integer graniteThreaddumpDumpsPerFile, @QueryParam("granite.threaddump.enableGzipCompression")Boolean graniteThreaddumpEnableGzipCompression, @QueryParam("granite.threaddump.enableDirectoriesCompression")Boolean graniteThreaddumpEnableDirectoriesCompression, @QueryParam("granite.threaddump.enableJStack")Boolean graniteThreaddumpEnableJStack, @QueryParam("granite.threaddump.maxBackupDays")Integer graniteThreaddumpMaxBackupDays, @QueryParam("granite.threaddump.backupCleanTrigger")String graniteThreaddumpBackupCleanTrigger);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.translation.connector.msft.core.impl.MicrosoftTranslationServiceFactoryImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("translationFactory")String translationFactory, @QueryParam("defaultConnectorLabel")String defaultConnectorLabel, @QueryParam("defaultConnectorAttribution")String defaultConnectorAttribution, @QueryParam("defaultConnectorWorkspaceId")String defaultConnectorWorkspaceId, @QueryParam("defaultConnectorSubscriptionKey")String defaultConnectorSubscriptionKey, @QueryParam("languageMapLocation")String languageMapLocation, @QueryParam("categoryMapLocation")String categoryMapLocation, @QueryParam("retryAttempts")Integer retryAttempts, @QueryParam("timeoutCount")Integer timeoutCount);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.translation.core.impl.TranslationManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteTranslationCoreImplTranslationManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteTranslationCoreImplTranslationManagerImplInfo comAdobeGraniteTranslationCoreImplTranslationManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("defaultConnectorName")String defaultConnectorName, @QueryParam("defaultCategory")String defaultCategory);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.ui.clientlibs.impl.HtmlLibraryManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("htmllibmanager.timing")Boolean htmllibmanagerTiming, @QueryParam("htmllibmanager.debug.init.js")String htmllibmanagerDebugInitJs, @QueryParam("htmllibmanager.minify")Boolean htmllibmanagerMinify, @QueryParam("htmllibmanager.debug")Boolean htmllibmanagerDebug, @QueryParam("htmllibmanager.gzip")Boolean htmllibmanagerGzip, @QueryParam("htmllibmanager.maxDataUriSize")Integer htmllibmanagerMaxDataUriSize, @QueryParam("htmllibmanager.maxage")Integer htmllibmanagerMaxage, @QueryParam("htmllibmanager.forceCQUrlInfo")Boolean htmllibmanagerForceCQUrlInfo, @QueryParam("htmllibmanager.defaultthemename")String htmllibmanagerDefaultthemename, @QueryParam("htmllibmanager.defaultuserthemename")String htmllibmanagerDefaultuserthemename, @QueryParam("htmllibmanager.clientmanager")String htmllibmanagerClientmanager, @QueryParam("htmllibmanager.path.list")List<String> htmllibmanagerPathList, @QueryParam("htmllibmanager.excluded.path.list")List<String> htmllibmanagerExcludedPathList, @QueryParam("htmllibmanager.processor.js")List<String> htmllibmanagerProcessorJs, @QueryParam("htmllibmanager.processor.css")List<String> htmllibmanagerProcessorCss, @QueryParam("htmllibmanager.longcache.patterns")List<String> htmllibmanagerLongcachePatterns, @QueryParam("htmllibmanager.longcache.format")String htmllibmanagerLongcacheFormat, @QueryParam("htmllibmanager.useFileSystemOutputCache")Boolean htmllibmanagerUseFileSystemOutputCache, @QueryParam("htmllibmanager.fileSystemOutputCacheLocation")String htmllibmanagerFileSystemOutputCacheLocation, @QueryParam("htmllibmanager.disable.replacement")List<String> htmllibmanagerDisableReplacement);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.console.frags.WorkflowWithdrawFeature")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.console.publish.WorkflowPublishEventService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("granite.workflow.WorkflowPublishEventService.enabled")Boolean graniteWorkflowWorkflowPublishEventServiceEnabled);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.core.jcr.WorkflowBucketManager")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo comAdobeGraniteWorkflowCoreJcrWorkflowBucketManager(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("bucketSize")Integer bucketSize);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.core.job.ExternalProcessJobHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo comAdobeGraniteWorkflowCoreJobExternalProcessJobHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("default.timeout")Integer defaultTimeout, @QueryParam("max.timeout")Integer maxTimeout, @QueryParam("default.period")Integer defaultPeriod);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.core.job.JobHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowCoreJobJobHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowCoreJobJobHandlerInfo comAdobeGraniteWorkflowCoreJobJobHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("job.topics")List<String> jobTopics, @QueryParam("allow.self.process.termination")Boolean allowSelfProcessTermination);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.core.offloading.WorkflowOffloadingJobConsumer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("job.topics")String jobTopics);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.core.PayloadMapCache")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowCorePayloadMapCacheInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowCorePayloadMapCacheInfo comAdobeGraniteWorkflowCorePayloadMapCache(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("getSystemWorkflowModels")List<String> getSystemWorkflowModels, @QueryParam("getPackageRootPath")String getPackageRootPath);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.core.payloadmap.PayloadMoveListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("payload.move.white.list")List<String> payloadMoveWhiteList, @QueryParam("payload.move.handle.from.workflow.process")Boolean payloadMoveHandleFromWorkflowProcess);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.core.WorkflowConfig")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowCoreWorkflowConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowCoreWorkflowConfigInfo comAdobeGraniteWorkflowCoreWorkflowConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.workflow.config.workflow.packages.root.path")List<String> cqWorkflowConfigWorkflowPackagesRootPath, @QueryParam("cq.workflow.config.workflow.process.legacy.mode")Boolean cqWorkflowConfigWorkflowProcessLegacyMode, @QueryParam("cq.workflow.config.allow.locking")Boolean cqWorkflowConfigAllowLocking);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.core.WorkflowSessionFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo comAdobeGraniteWorkflowCoreWorkflowSessionFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("granite.workflowinbox.sort.propertyName")String graniteWorkflowinboxSortPropertyName, @QueryParam("granite.workflowinbox.sort.order")String graniteWorkflowinboxSortOrder, @QueryParam("cq.workflow.job.retry")Integer cqWorkflowJobRetry, @QueryParam("cq.workflow.superuser")List<String> cqWorkflowSuperuser, @QueryParam("granite.workflow.inboxQuerySize")Integer graniteWorkflowInboxQuerySize, @QueryParam("granite.workflow.adminUserGroupFilter")Boolean graniteWorkflowAdminUserGroupFilter, @QueryParam("granite.workflow.enforceWorkitemAssigneePermissions")Boolean graniteWorkflowEnforceWorkitemAssigneePermissions, @QueryParam("granite.workflow.enforceWorkflowInitiatorPermissions")Boolean graniteWorkflowEnforceWorkflowInitiatorPermissions, @QueryParam("granite.workflow.injectTenantIdInJobTopics")Boolean graniteWorkflowInjectTenantIdInJobTopics, @QueryParam("granite.workflow.maxPurgeSaveThreshold")Integer graniteWorkflowMaxPurgeSaveThreshold, @QueryParam("granite.workflow.maxPurgeQueryCount")Integer graniteWorkflowMaxPurgeQueryCount);

    @POST
    @Path("/system/console/configMgr/com.adobe.granite.workflow.purge.Scheduler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeGraniteWorkflowPurgeSchedulerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeGraniteWorkflowPurgeSchedulerInfo comAdobeGraniteWorkflowPurgeScheduler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduledpurge.name")String scheduledpurgeName, @QueryParam("scheduledpurge.workflowStatus")String scheduledpurgeWorkflowStatus, @QueryParam("scheduledpurge.modelIds")List<String> scheduledpurgeModelIds, @QueryParam("scheduledpurge.daysold")Integer scheduledpurgeDaysold);

    @POST
    @Path("/system/console/configMgr/com.adobe.octopus.ncomm.bootstrap")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeOctopusNcommBootstrapInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeOctopusNcommBootstrapInfo comAdobeOctopusNcommBootstrap(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("maxConnections")Integer maxConnections, @QueryParam("maxRequests")Integer maxRequests, @QueryParam("requestTimeout")Integer requestTimeout, @QueryParam("requestRetries")Integer requestRetries, @QueryParam("launchTimeout")Integer launchTimeout);

    @POST
    @Path("/system/console/configMgr/com.adobe.social.integrations.livefyre.user.pingforpull.impl.PingPullServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("communities.integration.livefyre.sling.event.filter")String communitiesIntegrationLivefyreSlingEventFilter);

    @POST
    @Path("/system/console/configMgr/com.adobe.xmp.worker.files.ncomm.XMPFilesNComm")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComAdobeXmpWorkerFilesNcommXMPFilesNCommInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComAdobeXmpWorkerFilesNcommXMPFilesNCommInfo comAdobeXmpWorkerFilesNcommXMPFilesNComm(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("maxConnections")String maxConnections, @QueryParam("maxRequests")String maxRequests, @QueryParam("requestTimeout")String requestTimeout, @QueryParam("logDir")String logDir);

    @POST
    @Path("/system/console/configMgr/com.day.commons.datasource.jdbcpool.JdbcPoolService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo comDayCommonsDatasourceJdbcpoolJdbcPoolService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("jdbc.driver.class")String jdbcDriverClass, @QueryParam("jdbc.connection.uri")String jdbcConnectionUri, @QueryParam("jdbc.username")String jdbcUsername, @QueryParam("jdbc.password")String jdbcPassword, @QueryParam("jdbc.validation.query")String jdbcValidationQuery, @QueryParam("default.readonly")Boolean defaultReadonly, @QueryParam("default.autocommit")Boolean defaultAutocommit, @QueryParam("pool.size")Integer poolSize, @QueryParam("pool.max.wait.msec")Integer poolMaxWaitMsec, @QueryParam("datasource.name")String datasourceName, @QueryParam("datasource.svc.properties")List<String> datasourceSvcProperties);

    @POST
    @Path("/system/console/configMgr/com.day.commons.httpclient")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCommonsHttpclientInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCommonsHttpclientInfo comDayCommonsHttpclient(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("proxy.enabled")Boolean proxyEnabled, @QueryParam("proxy.host")String proxyHost, @QueryParam("proxy.user")String proxyUser, @QueryParam("proxy.password")String proxyPassword, @QueryParam("proxy.ntlm.host")String proxyNtlmHost, @QueryParam("proxy.ntlm.domain")String proxyNtlmDomain, @QueryParam("proxy.exceptions")List<String> proxyExceptions);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.impl.StorePropertiesChangeListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsImplStorePropertiesChangeListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsImplStorePropertiesChangeListenerInfo comDayCqAnalyticsImplStorePropertiesChangeListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.store.listener.additionalStorePaths")List<String> cqStoreListenerAdditionalStorePaths);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.exporter.ClassificationsExporter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo comDayCqAnalyticsSitecatalystImplExporterClassificationsExporte(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("allowed.paths")List<String> allowedPaths, @QueryParam("cq.analytics.saint.exporter.pagesize")Integer cqAnalyticsSaintExporterPagesize);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.importer.ReportImporter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsSitecatalystImplImporterReportImporterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsSitecatalystImplImporterReportImporterInfo comDayCqAnalyticsSitecatalystImplImporterReportImporter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("report.fetch.attempts")Integer reportFetchAttempts, @QueryParam("report.fetch.delay")Integer reportFetchDelay);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystAdapterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.analytics.adapterfactory.contextstores")List<String> cqAnalyticsAdapterfactoryContextstores);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystHttpClientImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.analytics.sitecatalyst.service.datacenter.url")List<String> cqAnalyticsSitecatalystServiceDatacenterUrl, @QueryParam("devhostnamepatterns")List<String> devhostnamepatterns, @QueryParam("connection.timeout")Integer connectionTimeout, @QueryParam("socket.timeout")Integer socketTimeout);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.AccountOptionsUpdater")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo comDayCqAnalyticsTestandtargetImplAccountOptionsUpdater(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.analytics.testandtarget.accountoptionsupdater.enabled")Boolean cqAnalyticsTestandtargetAccountoptionsupdaterEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.DeleteAuthorActivityListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.analytics.testandtarget.deleteauthoractivitylistener.enabled")Boolean cqAnalyticsTestandtargetDeleteauthoractivitylistenerEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.PushAuthorCampaignPageListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.analytics.testandtarget.pushauthorcampaignpagelistener.enabled")Boolean cqAnalyticsTestandtargetPushauthorcampaignpagelistenerEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.SegmentImporter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsTestandtargetImplSegmentImporterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsTestandtargetImplSegmentImporterInfo comDayCqAnalyticsTestandtargetImplSegmentImporter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.analytics.testandtarget.segmentimporter.enabled")Boolean cqAnalyticsTestandtargetSegmentimporterEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.service.WebServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo comDayCqAnalyticsTestandtargetImplServiceWebServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("endpointUri")String endpointUri, @QueryParam("connectionTimeout")Integer connectionTimeout, @QueryParam("socketTimeout")Integer socketTimeout);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.servlets.AdminServerServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo comDayCqAnalyticsTestandtargetImplServletsAdminServerServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("testandtarget.endpoint.url")String testandtargetEndpointUrl);

    @POST
    @Path("/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.TestandtargetHttpClientImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.analytics.testandtarget.api.url")String cqAnalyticsTestandtargetApiUrl, @QueryParam("cq.analytics.testandtarget.timeout")Integer cqAnalyticsTestandtargetTimeout, @QueryParam("cq.analytics.testandtarget.sockettimeout")Integer cqAnalyticsTestandtargetSockettimeout, @QueryParam("cq.analytics.testandtarget.recommendations.url.replace")String cqAnalyticsTestandtargetRecommendationsUrlReplace, @QueryParam("cq.analytics.testandtarget.recommendations.url.replacewith")String cqAnalyticsTestandtargetRecommendationsUrlReplacewith);

    @POST
    @Path("/system/console/configMgr/com.day.cq.auth.impl.cug.CugSupportImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAuthImplCugCugSupportImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAuthImplCugCugSupportImplInfo comDayCqAuthImplCugCugSupportImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cug.exempted.principals")List<String> cugExemptedPrincipals, @QueryParam("cug.enabled")Boolean cugEnabled, @QueryParam("cug.principals.regex")String cugPrincipalsRegex, @QueryParam("cug.principals.replacement")String cugPrincipalsReplacement);

    @POST
    @Path("/system/console/configMgr/com.day.cq.auth.impl.LoginSelectorHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqAuthImplLoginSelectorHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqAuthImplLoginSelectorHandlerInfo comDayCqAuthImplLoginSelectorHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("auth.loginselector.mappings")List<String> authLoginselectorMappings, @QueryParam("auth.loginselector.changepw.mappings")List<String> authLoginselectorChangepwMappings, @QueryParam("auth.loginselector.defaultloginpage")String authLoginselectorDefaultloginpage, @QueryParam("auth.loginselector.defaultchangepwpage")String authLoginselectorDefaultchangepwpage, @QueryParam("auth.loginselector.handle")List<String> authLoginselectorHandle, @QueryParam("auth.loginselector.handle.all.extensions")Boolean authLoginselectorHandleAllExtensions);

    @POST
    @Path("/system/console/configMgr/com.day.cq.commons.impl.ExternalizerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqCommonsImplExternalizerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqCommonsImplExternalizerImplInfo comDayCqCommonsImplExternalizerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("externalizer.domains")List<String> externalizerDomains, @QueryParam("externalizer.host")String externalizerHost, @QueryParam("externalizer.contextpath")String externalizerContextpath, @QueryParam("externalizer.encodedpath")Boolean externalizerEncodedpath);

    @POST
    @Path("/system/console/configMgr/com.day.cq.commons.servlets.RootMappingServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqCommonsServletsRootMappingServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqCommonsServletsRootMappingServletInfo comDayCqCommonsServletsRootMappingServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("rootmapping.target")String rootmappingTarget);

    @POST
    @Path("/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.CodeUpgradeExecutionConditionChecker")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("codeupgradetasks")List<String> codeupgradetasks, @QueryParam("codeupgradetaskfilters")List<String> codeupgradetaskfilters);

    @POST
    @Path("/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.UpgradeTaskIgnoreList")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("upgradeTaskIgnoreList")List<String> upgradeTaskIgnoreList);

    @POST
    @Path("/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.VersionRangeTaskIgnorelist")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("effectiveBundleListPath")String effectiveBundleListPath);

    @POST
    @Path("/system/console/configMgr/com.day.cq.contentsync.impl.ContentSyncManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqContentsyncImplContentSyncManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqContentsyncImplContentSyncManagerImplInfo comDayCqContentsyncImplContentSyncManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("contentsync.fallback.authorizable")String contentsyncFallbackAuthorizable, @QueryParam("contentsync.fallback.updateuser")String contentsyncFallbackUpdateuser);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.commons.handler.StandardImageHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCommonsHandlerStandardImageHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCommonsHandlerStandardImageHandlerInfo comDayCqDamCommonsHandlerStandardImageHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("large_file_threshold")Integer largeFileThreshold, @QueryParam("large_comment_threshold")Integer largeCommentThreshold, @QueryParam("cq.dam.enable.ext.meta.extraction")Boolean cqDamEnableExtMetaExtraction);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.commons.metadata.XmpFilterBlackWhite")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo comDayCqDamCommonsMetadataXmpFilterBlackWhite(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("xmp.filter.apply_whitelist")Boolean xmpFilterApplyWhitelist, @QueryParam("xmp.filter.whitelist")List<String> xmpFilterWhitelist, @QueryParam("xmp.filter.apply_blacklist")Boolean xmpFilterApplyBlacklist, @QueryParam("xmp.filter.blacklist")List<String> xmpFilterBlacklist);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.commons.util.impl.AssetCacheImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCommonsUtilImplAssetCacheImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCommonsUtilImplAssetCacheImplInfo comDayCqDamCommonsUtilImplAssetCacheImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("large.file.min")Integer largeFileMin, @QueryParam("cache.apply")Boolean cacheApply, @QueryParam("mime.types")List<String> mimeTypes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.annotation.pdf.AnnotationPdfConfig")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.config.annotation.pdf.document.width")Integer cqDamConfigAnnotationPdfDocumentWidth, @QueryParam("cq.dam.config.annotation.pdf.document.height")Integer cqDamConfigAnnotationPdfDocumentHeight, @QueryParam("cq.dam.config.annotation.pdf.document.padding.horizontal")Integer cqDamConfigAnnotationPdfDocumentPaddingHorizontal, @QueryParam("cq.dam.config.annotation.pdf.document.padding.vertical")Integer cqDamConfigAnnotationPdfDocumentPaddingVertical, @QueryParam("cq.dam.config.annotation.pdf.font.size")Integer cqDamConfigAnnotationPdfFontSize, @QueryParam("cq.dam.config.annotation.pdf.font.color")String cqDamConfigAnnotationPdfFontColor, @QueryParam("cq.dam.config.annotation.pdf.font.family")String cqDamConfigAnnotationPdfFontFamily, @QueryParam("cq.dam.config.annotation.pdf.font.light")String cqDamConfigAnnotationPdfFontLight, @QueryParam("cq.dam.config.annotation.pdf.marginTextImage")Integer cqDamConfigAnnotationPdfMarginTextImage, @QueryParam("cq.dam.config.annotation.pdf.minImageHeight")Integer cqDamConfigAnnotationPdfMinImageHeight, @QueryParam("cq.dam.config.annotation.pdf.reviewStatus.width")Integer cqDamConfigAnnotationPdfReviewStatusWidth, @QueryParam("cq.dam.config.annotation.pdf.reviewStatus.color.approved")String cqDamConfigAnnotationPdfReviewStatusColorApproved, @QueryParam("cq.dam.config.annotation.pdf.reviewStatus.color.rejected")String cqDamConfigAnnotationPdfReviewStatusColorRejected, @QueryParam("cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested")String cqDamConfigAnnotationPdfReviewStatusColorChangesRequested, @QueryParam("cq.dam.config.annotation.pdf.annotationMarker.width")Integer cqDamConfigAnnotationPdfAnnotationMarkerWidth, @QueryParam("cq.dam.config.annotation.pdf.asset.minheight")Integer cqDamConfigAnnotationPdfAssetMinheight);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.AssetMoveListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplAssetMoveListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplAssetMoveListenerInfo comDayCqDamCoreImplAssetMoveListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.assethome.AssetHomePageConfiguration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo comDayCqDamCoreImplAssethomeAssetHomePageConfiguration(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("isEnabled")Boolean isEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.assetlinkshare.AdhocAssetShareProxyServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.adhoc.asset.share.prezip.maxcontentsize")Integer cqDamAdhocAssetSharePrezipMaxcontentsize);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.cache.CQBufferedImageCache")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplCacheCQBufferedImageCacheInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplCacheCQBufferedImageCacheInfo comDayCqDamCoreImplCacheCQBufferedImageCache(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.image.cache.max.memory")Integer cqDamImageCacheMaxMemory, @QueryParam("cq.dam.image.cache.max.age")Integer cqDamImageCacheMaxAge, @QueryParam("cq.dam.image.cache.max.dimension")String cqDamImageCacheMaxDimension);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.DamChangeEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplDamChangeEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplDamChangeEventListenerInfo comDayCqDamCoreImplDamChangeEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("changeeventlistener.observed.paths")List<String> changeeventlistenerObservedPaths);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.DamEventPurgeService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplDamEventPurgeServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplDamEventPurgeServiceInfo comDayCqDamCoreImplDamEventPurgeService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression, @QueryParam("maxSavedActivities")Integer maxSavedActivities, @QueryParam("saveInterval")Integer saveInterval, @QueryParam("enableActivityPurge")Boolean enableActivityPurge, @QueryParam("eventTypes")String eventTypes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.DamEventRecorderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplDamEventRecorderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplDamEventRecorderImplInfo comDayCqDamCoreImplDamEventRecorderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.filter")String eventFilter, @QueryParam("event.queue.length")Integer eventQueueLength, @QueryParam("eventrecorder.enabled")Boolean eventrecorderEnabled, @QueryParam("eventrecorder.blacklist")List<String> eventrecorderBlacklist, @QueryParam("eventrecorder.eventtypes")String eventrecorderEventtypes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.event.DamEventAuditListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplEventDamEventAuditListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplEventDamEventAuditListenerInfo comDayCqDamCoreImplEventDamEventAuditListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.filter")String eventFilter, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.ExpiryNotificationJobImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplExpiryNotificationJobImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplExpiryNotificationJobImplInfo comDayCqDamCoreImplExpiryNotificationJobImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.expiry.notification.scheduler.istimebased")Boolean cqDamExpiryNotificationSchedulerIstimebased, @QueryParam("cq.dam.expiry.notification.scheduler.timebased.rule")String cqDamExpiryNotificationSchedulerTimebasedRule, @QueryParam("cq.dam.expiry.notification.scheduler.period.rule")Integer cqDamExpiryNotificationSchedulerPeriodRule, @QueryParam("send_email")Boolean sendEmail, @QueryParam("asset_expired_limit")Integer assetExpiredLimit, @QueryParam("prior_notification_seconds")Integer priorNotificationSeconds, @QueryParam("cq.dam.expiry.notification.url.protocol")String cqDamExpiryNotificationUrlProtocol);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.foldermetadataschema.FolderMetadataSchemaFeatureFlag")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("isEnabled")Boolean isEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.gfx.CommonsGfxRenderer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplGfxCommonsGfxRendererInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplGfxCommonsGfxRendererInfo comDayCqDamCoreImplGfxCommonsGfxRenderer(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("skip.bufferedcache")Boolean skipBufferedcache);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.handler.EPSFormatHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplHandlerEPSFormatHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplHandlerEPSFormatHandlerInfo comDayCqDamCoreImplHandlerEPSFormatHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("mimetype")String mimetype);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.handler.IndesignFormatHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplHandlerIndesignFormatHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplHandlerIndesignFormatHandlerInfo comDayCqDamCoreImplHandlerIndesignFormatHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("mimetype")List<String> mimetype);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.handler.JpegHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplHandlerJpegHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplHandlerJpegHandlerInfo comDayCqDamCoreImplHandlerJpegHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.enable.ext.meta.extraction")Boolean cqDamEnableExtMetaExtraction, @QueryParam("large_file_threshold")Integer largeFileThreshold, @QueryParam("large_comment_threshold")Integer largeCommentThreshold);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.handler.xmp.NCommXMPHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo comDayCqDamCoreImplHandlerXmpNCommXMPHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("xmphandler.cq.formats")List<String> xmphandlerCqFormats);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetIndexUpdateMonitor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo comDayCqDamCoreImplJmxAssetIndexUpdateMonitor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("jmx.objectname")String jmxObjectname, @QueryParam("property.measure.enabled")Boolean propertyMeasureEnabled, @QueryParam("property.name")String propertyName, @QueryParam("property.max.wait.ms")Integer propertyMaxWaitMs, @QueryParam("property.max.rate")BigDecimal propertyMaxRate, @QueryParam("fulltext.measure.enabled")Boolean fulltextMeasureEnabled, @QueryParam("fulltext.name")String fulltextName, @QueryParam("fulltext.max.wait.ms")Integer fulltextMaxWaitMs, @QueryParam("fulltext.max.rate")BigDecimal fulltextMaxRate);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetMigrationMBeanImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo comDayCqDamCoreImplJmxAssetMigrationMBeanImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("jmx.objectname")String jmxObjectname);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetUpdateMonitorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo comDayCqDamCoreImplJmxAssetUpdateMonitorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("jmx.objectname")String jmxObjectname, @QueryParam("active")Boolean active);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataexport.AsyncMetadataExportConfigProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("operation")String operation, @QueryParam("emailEnabled")Boolean emailEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataimport.AsyncMetadataImportConfigProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("operation")String operation, @QueryParam("operationIcon")String operationIcon, @QueryParam("topicName")String topicName, @QueryParam("emailEnabled")Boolean emailEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.lightbox.LightboxServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplLightboxLightboxServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplLightboxLightboxServletInfo comDayCqDamCoreImplLightboxLightboxServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.paths")String slingServletPaths, @QueryParam("sling.servlet.methods")List<String> slingServletMethods, @QueryParam("cq.dam.enable.anonymous")Boolean cqDamEnableAnonymous);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.metadata.editor.SelectComponentHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo comDayCqDamCoreImplMetadataEditorSelectComponentHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("granite:data")List<String> graniteColonData);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.mimeType.AssetUploadRestrictionHelper")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.allow.all.mime")Boolean cqDamAllowAllMime, @QueryParam("cq.dam.allowed.asset.mimes")List<String> cqDamAllowedAssetMimes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.mimeType.DamMimeTypeServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.detect.asset.mime.from.content")Boolean cqDamDetectAssetMimeFromContent);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.MissingMetadataNotificationJob")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplMissingMetadataNotificationJobInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplMissingMetadataNotificationJobInfo comDayCqDamCoreImplMissingMetadataNotificationJob(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.missingmetadata.notification.scheduler.istimebased")Boolean cqDamMissingmetadataNotificationSchedulerIstimebased, @QueryParam("cq.dam.missingmetadata.notification.scheduler.timebased.rule")String cqDamMissingmetadataNotificationSchedulerTimebasedRule, @QueryParam("cq.dam.missingmetadata.notification.scheduler.period.rule")Integer cqDamMissingmetadataNotificationSchedulerPeriodRule, @QueryParam("cq.dam.missingmetadata.notification.recipient")String cqDamMissingmetadataNotificationRecipient);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.process.SendTransientWorkflowCompletedEmailProcess")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("process.label")String processLabel, @QueryParam("Notify on Complete")Boolean notifyOnComplete);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.process.TextExtractionProcess")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplProcessTextExtractionProcessInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplProcessTextExtractionProcessInfo comDayCqDamCoreImplProcessTextExtractionProcess(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("mimeTypes")List<String> mimeTypes, @QueryParam("maxExtract")Integer maxExtract);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.RenditionMakerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplRenditionMakerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplRenditionMakerImplInfo comDayCqDamCoreImplRenditionMakerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("xmp.propagate")Boolean xmpPropagate, @QueryParam("xmp.excludes")List<String> xmpExcludes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportExportService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplReportsReportExportServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplReportsReportExportServiceInfo comDayCqDamCoreImplReportsReportExportService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("queryBatchSize")Integer queryBatchSize);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportPurgeService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplReportsReportPurgeServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplReportsReportPurgeServiceInfo comDayCqDamCoreImplReportsReportPurgeService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression, @QueryParam("maxSavedReports")Integer maxSavedReports, @QueryParam("timeDuration")Integer timeDuration, @QueryParam("enableReportPurge")Boolean enableReportPurge);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetDownloadServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletAssetDownloadServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletAssetDownloadServletInfo comDayCqDamCoreImplServletAssetDownloadServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetStatusServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletAssetStatusServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletAssetStatusServletInfo comDayCqDamCoreImplServletAssetStatusServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.batch.status.maxassets")Integer cqDamBatchStatusMaxassets);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetXMPSearchServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletAssetXMPSearchServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletAssetXMPSearchServletInfo comDayCqDamCoreImplServletAssetXMPSearchServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.batch.indesign.maxassets")Integer cqDamBatchIndesignMaxassets);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.BatchMetadataServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletBatchMetadataServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletBatchMetadataServletInfo comDayCqDamCoreImplServletBatchMetadataServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.batch.metadata.asset.default")List<String> cqDamBatchMetadataAssetDefault, @QueryParam("cq.dam.batch.metadata.collection.default")List<String> cqDamBatchMetadataCollectionDefault, @QueryParam("cq.dam.batch.metadata.maxresources")Integer cqDamBatchMetadataMaxresources);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.BinaryProviderServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletBinaryProviderServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletBinaryProviderServletInfo comDayCqDamCoreImplServletBinaryProviderServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.resourceTypes")List<String> slingServletResourceTypes, @QueryParam("sling.servlet.methods")List<String> slingServletMethods, @QueryParam("cq.dam.drm.enable")Boolean cqDamDrmEnable);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletCollectionServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletCollectionServletInfo comDayCqDamCoreImplServletCollectionServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.batch.collection.properties")List<String> cqDamBatchCollectionProperties, @QueryParam("cq.dam.batch.collection.maxcollections")Integer cqDamBatchCollectionMaxcollections);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionsServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletCollectionsServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletCollectionsServletInfo comDayCqDamCoreImplServletCollectionsServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.batch.collections.properties")List<String> cqDamBatchCollectionsProperties, @QueryParam("cq.dam.batch.collections.limit")Integer cqDamBatchCollectionsLimit);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CompanionServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletCompanionServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletCompanionServletInfo comDayCqDamCoreImplServletCompanionServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("More Info")String moreInfo, @QueryParam("/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path}")String slashMntSlashOverlaySlashDamSlashGuiSlashContentSlashAssetsSlashMoreinfoHtmlSlash$LeftCurlyBracketPathRightCurlyBracket);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CreateAssetServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletCreateAssetServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletCreateAssetServletInfo comDayCqDamCoreImplServletCreateAssetServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("detect_duplicate")Boolean detectDuplicate);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.DamContentDispositionFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletDamContentDispositionFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletDamContentDispositionFilterInfo comDayCqDamCoreImplServletDamContentDispositionFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.mime.type.blacklist")List<String> cqMimeTypeBlacklist, @QueryParam("cq.dam.empty.mime")Boolean cqDamEmptyMime);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.GuidLookupFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletGuidLookupFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletGuidLookupFilterInfo comDayCqDamCoreImplServletGuidLookupFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.core.guidlookupfilter.enabled")Boolean cqDamCoreGuidlookupfilterEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.HealthCheckServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletHealthCheckServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletHealthCheckServletInfo comDayCqDamCoreImplServletHealthCheckServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.sync.workflow.id")String cqDamSyncWorkflowId, @QueryParam("cq.dam.sync.folder.types")List<String> cqDamSyncFolderTypes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.MetadataGetServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletMetadataGetServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletMetadataGetServletInfo comDayCqDamCoreImplServletMetadataGetServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.resourceTypes")String slingServletResourceTypes, @QueryParam("sling.servlet.methods")String slingServletMethods, @QueryParam("sling.servlet.extensions")String slingServletExtensions, @QueryParam("sling.servlet.selectors")String slingServletSelectors);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.MultipleLicenseAcceptServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo comDayCqDamCoreImplServletMultipleLicenseAcceptServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.drm.enable")Boolean cqDamDrmEnable);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.servlet.ResourceCollectionServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplServletResourceCollectionServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplServletResourceCollectionServletInfo comDayCqDamCoreImplServletResourceCollectionServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.resourceTypes")List<String> slingServletResourceTypes, @QueryParam("sling.servlet.methods")String slingServletMethods, @QueryParam("sling.servlet.selectors")String slingServletSelectors, @QueryParam("download.config")String downloadConfig, @QueryParam("view.selector")String viewSelector, @QueryParam("send_email")Boolean sendEmail);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.ui.preview.FolderPreviewUpdaterImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("createPreviewEnabled")Boolean createPreviewEnabled, @QueryParam("updatePreviewEnabled")Boolean updatePreviewEnabled, @QueryParam("queueSize")Integer queueSize, @QueryParam("folderPreviewRenditionRegex")String folderPreviewRenditionRegex);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.impl.unzip.UnzipConfig")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreImplUnzipUnzipConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreImplUnzipUnzipConfigInfo comDayCqDamCoreImplUnzipUnzipConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.config.unzip.maxuncompressedsize")Integer cqDamConfigUnzipMaxuncompressedsize, @QueryParam("cq.dam.config.unzip.encoding")String cqDamConfigUnzipEncoding);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.process.ExifToolExtractMetadataProcess")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreProcessExifToolExtractMetadataProcessInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreProcessExifToolExtractMetadataProcessInfo comDayCqDamCoreProcessExifToolExtractMetadataProcess(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("process.label")String processLabel, @QueryParam("cq.dam.enable.sha1")Boolean cqDamEnableSha1);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.process.ExtractMetadataProcess")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreProcessExtractMetadataProcessInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreProcessExtractMetadataProcessInfo comDayCqDamCoreProcessExtractMetadataProcess(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("process.label")String processLabel, @QueryParam("cq.dam.enable.sha1")Boolean cqDamEnableSha1);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.core.process.MetadataProcessorProcess")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamCoreProcessMetadataProcessorProcessInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamCoreProcessMetadataProcessorProcessInfo comDayCqDamCoreProcessMetadataProcessorProcess(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("process.label")String processLabel, @QueryParam("cq.dam.enable.sha1")Boolean cqDamEnableSha1, @QueryParam("cq.dam.metadata.xssprotected.properties")List<String> cqDamMetadataXssprotectedProperties);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.handler.ffmpeg.LocatorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamHandlerFfmpegLocatorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamHandlerFfmpegLocatorImplInfo comDayCqDamHandlerFfmpegLocatorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("executable.searchpath")List<String> executableSearchpath);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.handler.gibson.fontmanager.impl.FontManagerServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.filter")String eventFilter, @QueryParam("fontmgr.system.font.dir")List<String> fontmgrSystemFontDir, @QueryParam("fontmgr.adobe.font.dir")String fontmgrAdobeFontDir, @QueryParam("fontmgr.customer.font.dir")String fontmgrCustomerFontDir);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.handler.standard.pdf.PdfHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamHandlerStandardPdfPdfHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamHandlerStandardPdfPdfHandlerInfo comDayCqDamHandlerStandardPdfPdfHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("raster.annotation")Boolean rasterAnnotation);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.handler.standard.ps.PostScriptHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamHandlerStandardPsPostScriptHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamHandlerStandardPsPostScriptHandlerInfo comDayCqDamHandlerStandardPsPostScriptHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("raster.annotation")Boolean rasterAnnotation);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.handler.standard.psd.PsdHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamHandlerStandardPsdPsdHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamHandlerStandardPsdPsdHandlerInfo comDayCqDamHandlerStandardPsdPsdHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("large_file_threshold")Integer largeFileThreshold);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.ids.impl.IDSJobProcessor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamIdsImplIDSJobProcessorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamIdsImplIDSJobProcessorInfo comDayCqDamIdsImplIDSJobProcessor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enable.multisession")Boolean enableMultisession, @QueryParam("ids.cc.enable")Boolean idsCcEnable, @QueryParam("enable.retry")Boolean enableRetry, @QueryParam("enable.retry.scripterror")Boolean enableRetryScripterror, @QueryParam("externalizer.domain.cqhost")String externalizerDomainCqhost, @QueryParam("externalizer.domain.http")String externalizerDomainHttp);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.ids.impl.IDSPoolManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamIdsImplIDSPoolManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamIdsImplIDSPoolManagerImplInfo comDayCqDamIdsImplIDSPoolManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("max.errors.to.blacklist")Integer maxErrorsToBlacklist, @QueryParam("retry.interval.to.whitelist")Integer retryIntervalToWhitelist, @QueryParam("connect.timeout")Integer connectTimeout, @QueryParam("socket.timeout")Integer socketTimeout, @QueryParam("process.label")String processLabel, @QueryParam("connection.use.max")Integer connectionUseMax);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.indd.impl.handler.IndesignXMPHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamInddImplHandlerIndesignXMPHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamInddImplHandlerIndesignXMPHandlerInfo comDayCqDamInddImplHandlerIndesignXMPHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("process.label")String processLabel, @QueryParam("extract.pages")Boolean extractPages);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.indd.impl.servlet.SnippetCreationServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamInddImplServletSnippetCreationServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamInddImplServletSnippetCreationServletInfo comDayCqDamInddImplServletSnippetCreationServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("snippetcreation.maxcollections")Integer snippetcreationMaxcollections);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.indd.process.INDDMediaExtractProcess")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamInddProcessINDDMediaExtractProcessInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamInddProcessINDDMediaExtractProcessInfo comDayCqDamInddProcessINDDMediaExtractProcess(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("process.label")String processLabel, @QueryParam("cq.dam.indd.pages.regex")String cqDamInddPagesRegex, @QueryParam("ids.job.decoupled")Boolean idsJobDecoupled, @QueryParam("ids.job.workflow.model")String idsJobWorkflowModel);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceDataHandlerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("batch.commit.size")Integer batchCommitSize);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceReportSyncJob")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo comDayCqDamPerformanceInternalAssetPerformanceReportSyncJob(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.pim.impl.sourcing.upload.process.ProductAssetsUploadProcess")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("delete.zip.file")Boolean deleteZipFile);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.S7damDynamicMediaConfigEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled")Boolean cqDamS7damDynamicmediaconfigeventlistenerEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.SiteCatalystReportRunner")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression, @QueryParam("scheduler.concurrent")Boolean schedulerConcurrent);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetCreateHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamS7damCommonPostServletsSetCreateHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamS7damCommonPostServletsSetCreateHandlerInfo comDayCqDamS7damCommonPostServletsSetCreateHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.post.operation")String slingPostOperation, @QueryParam("sling.servlet.methods")String slingServletMethods);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetModifyHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamS7damCommonPostServletsSetModifyHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamS7damCommonPostServletsSetModifyHandlerInfo comDayCqDamS7damCommonPostServletsSetModifyHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.post.operation")String slingPostOperation, @QueryParam("sling.servlet.methods")String slingServletMethods);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.s7dam.common.process.VideoThumbnailDownloadProcess")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("process.label")String processLabel);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.s7dam.common.S7damDamChangeEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamS7damCommonS7damDamChangeEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamS7damCommonS7damDamChangeEventListenerInfo comDayCqDamS7damCommonS7damDamChangeEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.s7dam.damchangeeventlistener.enabled")Boolean cqDamS7damDamchangeeventlistenerEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.s7dam.common.servlets.S7damProductInfoServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamS7damCommonServletsS7damProductInfoServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamS7damCommonServletsS7damProductInfoServletInfo comDayCqDamS7damCommonServletsS7damProductInfoServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.paths")String slingServletPaths, @QueryParam("sling.servlet.methods")String slingServletMethods);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.s7dam.common.video.impl.VideoProxyClientServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name")Integer cqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName, @QueryParam("cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name")Integer cqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName, @QueryParam("cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name")Integer cqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName, @QueryParam("cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name")Integer cqDamS7damVideoproxyclientserviceHttpReadtimeoutName, @QueryParam("cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name")Integer cqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName, @QueryParam("cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name")Integer cqDamS7damVideoproxyclientserviceHttpMaxretrycountName, @QueryParam("cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name")Integer cqDamS7damVideoproxyclientserviceUploadprogressIntervalName);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7APIClientImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamScene7ImplScene7APIClientImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamScene7ImplScene7APIClientImplInfo comDayCqDamScene7ImplScene7APIClientImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.scene7.apiclient.recordsperpage.nofilter.name")Integer cqDamScene7ApiclientRecordsperpageNofilterName, @QueryParam("cq.dam.scene7.apiclient.recordsperpage.withfilter.name")Integer cqDamScene7ApiclientRecordsperpageWithfilterName);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7AssetMimeTypeServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo comDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.scene7.assetmimetypeservice.mapping")List<String> cqDamScene7AssetmimetypeserviceMapping);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7ConfigurationEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamScene7ImplScene7ConfigurationEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamScene7ImplScene7ConfigurationEventListenerInfo comDayCqDamScene7ImplScene7ConfigurationEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.scene7.configurationeventlistener.enabled")Boolean cqDamScene7ConfigurationeventlistenerEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7DamChangeEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamScene7ImplScene7DamChangeEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamScene7ImplScene7DamChangeEventListenerInfo comDayCqDamScene7ImplScene7DamChangeEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.scene7.damchangeeventlistener.enabled")Boolean cqDamScene7DamchangeeventlistenerEnabled, @QueryParam("cq.dam.scene7.damchangeeventlistener.observed.paths")List<String> cqDamScene7DamchangeeventlistenerObservedPaths);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7FlashTemplatesServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo comDayCqDamScene7ImplScene7FlashTemplatesServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scene7FlashTemplates.rti")String scene7FlashTemplatesRti, @QueryParam("scene7FlashTemplates.rsi")String scene7FlashTemplatesRsi, @QueryParam("scene7FlashTemplates.rb")String scene7FlashTemplatesRb, @QueryParam("scene7FlashTemplates.rurl")String scene7FlashTemplatesRurl, @QueryParam("scene7FlashTemplate.urlFormatParameter")String scene7FlashTemplateUrlFormatParameter);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7UploadServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamScene7ImplScene7UploadServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamScene7ImplScene7UploadServiceImplInfo comDayCqDamScene7ImplScene7UploadServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.dam.scene7.uploadservice.activejobtimeout.label")Integer cqDamScene7UploadserviceActivejobtimeoutLabel, @QueryParam("cq.dam.scene7.uploadservice.connectionmaxperroute.label")Integer cqDamScene7UploadserviceConnectionmaxperrouteLabel);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.stock.integration.impl.cache.StockCacheConfigurationServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("getCacheExpirationUnit")String getCacheExpirationUnit, @QueryParam("getCacheExpirationValue")Integer getCacheExpirationValue);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.stock.integration.impl.configuration.StockConfigurationImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo comDayCqDamStockIntegrationImplConfigurationStockConfiguration(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("locale")String locale, @QueryParam("imsConfig")String imsConfig);

    @POST
    @Path("/system/console/configMgr/com.day.cq.dam.video.impl.servlet.VideoTestServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqDamVideoImplServletVideoTestServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqDamVideoImplServletVideoTestServletInfo comDayCqDamVideoImplServletVideoTestServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.extwidget.servlets.ImageSpriteServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqExtwidgetServletsImageSpriteServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqExtwidgetServletsImageSpriteServletInfo comDayCqExtwidgetServletsImageSpriteServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("maxWidth")Integer maxWidth, @QueryParam("maxHeight")Integer maxHeight);

    @POST
    @Path("/system/console/configMgr/com.day.cq.image.internal.font.FontHelper")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqImageInternalFontFontHelperInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqImageInternalFontFontHelperInfo comDayCqImageInternalFontFontHelper(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("fontpath")List<String> fontpath, @QueryParam("oversamplingFactor")Integer oversamplingFactor);

    @POST
    @Path("/system/console/configMgr/com.day.cq.jcrclustersupport.ClusterStartLevelController")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqJcrclustersupportClusterStartLevelControllerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqJcrclustersupportClusterStartLevelControllerInfo comDayCqJcrclustersupportClusterStartLevelController(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cluster.level.enable")Boolean clusterLevelEnable, @QueryParam("cluster.master.level")Integer clusterMasterLevel, @QueryParam("cluster.slave.level")Integer clusterSlaveLevel);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mailer.DefaultMailService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMailerDefaultMailServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMailerDefaultMailServiceInfo comDayCqMailerDefaultMailService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("smtp.host")String smtpHost, @QueryParam("smtp.port")Integer smtpPort, @QueryParam("smtp.user")String smtpUser, @QueryParam("smtp.password")String smtpPassword, @QueryParam("from.address")String fromAddress, @QueryParam("smtp.ssl")Boolean smtpSsl, @QueryParam("smtp.starttls")Boolean smtpStarttls, @QueryParam("debug.email")Boolean debugEmail);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mailer.impl.CqMailingService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMailerImplCqMailingServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMailerImplCqMailingServiceInfo comDayCqMailerImplCqMailingService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("max.recipient.count")String maxRecipientCount);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mailer.impl.email.CqEmailTemplateFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMailerImplEmailCqEmailTemplateFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMailerImplEmailCqEmailTemplateFactoryInfo comDayCqMailerImplEmailCqEmailTemplateFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("mailer.email.charset")String mailerEmailCharset);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mailer.impl.email.CqRetrieverTemplateFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo comDayCqMailerImplEmailCqRetrieverTemplateFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("mailer.email.embed")Boolean mailerEmailEmbed, @QueryParam("mailer.email.charset")String mailerEmailCharset, @QueryParam("mailer.email.retrieverUserID")String mailerEmailRetrieverUserID, @QueryParam("mailer.email.retrieverUserPWD")String mailerEmailRetrieverUserPWD);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mcm.campaign.impl.IntegrationConfigImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMcmCampaignImplIntegrationConfigImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMcmCampaignImplIntegrationConfigImplInfo comDayCqMcmCampaignImplIntegrationConfigImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("aem.mcm.campaign.formConstraints")List<String> aemMcmCampaignFormConstraints, @QueryParam("aem.mcm.campaign.publicUrl")String aemMcmCampaignPublicUrl, @QueryParam("aem.mcm.campaign.relaxedSSL")Boolean aemMcmCampaignRelaxedSSL);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mcm.campaign.importer.PersonalizedTextHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo comDayCqMcmCampaignImporterPersonalizedTextHandlerFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mcm.core.newsletter.NewsletterEmailServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo comDayCqMcmCoreNewsletterNewsletterEmailServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("from.address")String fromAddress, @QueryParam("sender.host")String senderHost, @QueryParam("max.bounce.count")String maxBounceCount);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mcm.impl.MCMConfiguration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMcmImplMCMConfigurationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMcmImplMCMConfigurationInfo comDayCqMcmImplMCMConfiguration(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("experience.indirection")List<String> experienceIndirection, @QueryParam("touchpoint.indirection")List<String> touchpointIndirection);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.ClickThroughComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern, @QueryParam("component.resourceType")String componentResourceType);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.GraphicalClickThroughComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern, @QueryParam("component.resourceType")String componentResourceType);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.LeadFormCTAComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.MBoxExperienceTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.TargetComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern, @QueryParam("component.resourceType")String componentResourceType);

    @POST
    @Path("/system/console/configMgr/com.day.cq.notification.impl.NotificationServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqNotificationImplNotificationServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqNotificationImplNotificationServiceImplInfo comDayCqNotificationImplNotificationServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.filter")String eventFilter);

    @POST
    @Path("/system/console/configMgr/com.day.cq.personalization.impl.servlets.TargetingConfigurationServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqPersonalizationImplServletsTargetingConfigurationServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqPersonalizationImplServletsTargetingConfigurationServletInfo comDayCqPersonalizationImplServletsTargetingConfigurationServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("forcelocation")Boolean forcelocation);

    @POST
    @Path("/system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollConfigImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqPollingImporterImplManagedPollConfigImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqPollingImporterImplManagedPollConfigImplInfo comDayCqPollingImporterImplManagedPollConfigImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("id")String id, @QueryParam("enabled")Boolean enabled, @QueryParam("reference")Boolean reference, @QueryParam("interval")Integer interval, @QueryParam("expression")String expression, @QueryParam("source")String source, @QueryParam("target")String target, @QueryParam("login")String login, @QueryParam("password")String password);

    @POST
    @Path("/system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollingImporterImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqPollingImporterImplManagedPollingImporterImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqPollingImporterImplManagedPollingImporterImplInfo comDayCqPollingImporterImplManagedPollingImporterImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("importer.user")String importerUser);

    @POST
    @Path("/system/console/configMgr/com.day.cq.polling.importer.impl.PollingImporterImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqPollingImporterImplPollingImporterImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqPollingImporterImplPollingImporterImplInfo comDayCqPollingImporterImplPollingImporterImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("importer.min.interval")Integer importerMinInterval, @QueryParam("importer.user")String importerUser, @QueryParam("exclude.paths")List<String> excludePaths, @QueryParam("include.paths")List<String> includePaths);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.audit.ReplicationEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationAuditReplicationEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationAuditReplicationEventListenerInfo comDayCqReplicationAuditReplicationEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.content.StaticContentBuilder")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationContentStaticContentBuilderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationContentStaticContentBuilderInfo comDayCqReplicationContentStaticContentBuilder(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("host")String host, @QueryParam("port")Integer port);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.impl.AgentManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationImplAgentManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationImplAgentManagerImplInfo comDayCqReplicationImplAgentManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("job.topics")String jobTopics, @QueryParam("serviceUser.target")String serviceUserTarget, @QueryParam("agentProvider.target")String agentProviderTarget);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.impl.content.durbo.BinaryLessContentBuilder")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo comDayCqReplicationImplContentDurboBinaryLessContentBuilder(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("binary.threshold")Integer binaryThreshold);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.impl.content.durbo.DurboImportConfigurationProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo comDayCqReplicationImplContentDurboDurboImportConfigurationProv(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("preserve.hierarchy.nodes")Boolean preserveHierarchyNodes, @QueryParam("ignore.versioning")Boolean ignoreVersioning, @QueryParam("import.acl")Boolean importAcl, @QueryParam("save.threshold")Integer saveThreshold, @QueryParam("preserve.user.paths")Boolean preserveUserPaths, @QueryParam("preserve.uuid")Boolean preserveUuid, @QueryParam("preserve.uuid.nodetypes")List<String> preserveUuidNodetypes, @QueryParam("preserve.uuid.subtrees")List<String> preserveUuidSubtrees, @QueryParam("auto.commit")Boolean autoCommit);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.impl.ReplicationContentFactoryProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationImplReplicationContentFactoryProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationImplReplicationContentFactoryProviderImplInfo comDayCqReplicationImplReplicationContentFactoryProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("replication.content.useFileStorage")Boolean replicationContentUseFileStorage, @QueryParam("replication.content.maxCommitAttempts")Integer replicationContentMaxCommitAttempts);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.impl.ReplicationReceiverImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationImplReplicationReceiverImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationImplReplicationReceiverImplInfo comDayCqReplicationImplReplicationReceiverImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("receiver.tmpfile.threshold")Integer receiverTmpfileThreshold, @QueryParam("receiver.packages.use.install")Boolean receiverPackagesUseInstall);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.impl.ReplicatorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationImplReplicatorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationImplReplicatorImplInfo comDayCqReplicationImplReplicatorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("distribute_events")Boolean distributeEvents);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.impl.ReverseReplicator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationImplReverseReplicatorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationImplReverseReplicatorInfo comDayCqReplicationImplReverseReplicator(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.period")Integer schedulerPeriod);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.impl.transport.BinaryLessTransportHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationImplTransportBinaryLessTransportHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationImplTransportBinaryLessTransportHandlerInfo comDayCqReplicationImplTransportBinaryLessTransportHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("disabled.cipher.suites")List<String> disabledCipherSuites, @QueryParam("enabled.cipher.suites")List<String> enabledCipherSuites);

    @POST
    @Path("/system/console/configMgr/com.day.cq.replication.impl.transport.Http")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReplicationImplTransportHttpInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReplicationImplTransportHttpInfo comDayCqReplicationImplTransportHttp(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("disabled.cipher.suites")List<String> disabledCipherSuites, @QueryParam("enabled.cipher.suites")List<String> enabledCipherSuites);

    @POST
    @Path("/system/console/configMgr/com.day.cq.reporting.impl.cache.CacheImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReportingImplCacheCacheImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReportingImplCacheCacheImplInfo comDayCqReportingImplCacheCacheImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("repcache.enable")Boolean repcacheEnable, @QueryParam("repcache.ttl")Integer repcacheTtl, @QueryParam("repcache.max")Integer repcacheMax);

    @POST
    @Path("/system/console/configMgr/com.day.cq.reporting.impl.ConfigServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReportingImplConfigServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReportingImplConfigServiceImplInfo comDayCqReportingImplConfigServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("repconf.timezone")String repconfTimezone, @QueryParam("repconf.locale")String repconfLocale, @QueryParam("repconf.snapshots")String repconfSnapshots, @QueryParam("repconf.repdir")String repconfRepdir, @QueryParam("repconf.hourofday")Integer repconfHourofday, @QueryParam("repconf.minofhour")Integer repconfMinofhour, @QueryParam("repconf.maxrows")Integer repconfMaxrows, @QueryParam("repconf.fakedata")Boolean repconfFakedata, @QueryParam("repconf.snapshotuser")String repconfSnapshotuser, @QueryParam("repconf.enforcesnapshotuser")Boolean repconfEnforcesnapshotuser);

    @POST
    @Path("/system/console/configMgr/com.day.cq.reporting.impl.RLogAnalyzer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqReportingImplRLogAnalyzerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqReportingImplRLogAnalyzerInfo comDayCqReportingImplRLogAnalyzer(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("request.log.output")String requestLogOutput);

    @POST
    @Path("/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqRewriterLinkcheckerImplLinkCheckerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqRewriterLinkcheckerImplLinkCheckerImplInfo comDayCqRewriterLinkcheckerImplLinkCheckerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.period")Integer schedulerPeriod, @QueryParam("scheduler.concurrent")Boolean schedulerConcurrent, @QueryParam("service.bad_link_tolerance_interval")Integer serviceBadLinkToleranceInterval, @QueryParam("service.check_override_patterns")List<String> serviceCheckOverridePatterns, @QueryParam("service.cache_broken_internal_links")Boolean serviceCacheBrokenInternalLinks, @QueryParam("service.special_link_prefix")List<String> serviceSpecialLinkPrefix, @QueryParam("service.special_link_patterns")List<String> serviceSpecialLinkPatterns);

    @POST
    @Path("/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo comDayCqRewriterLinkcheckerImplLinkCheckerTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.period")Integer schedulerPeriod, @QueryParam("scheduler.concurrent")Boolean schedulerConcurrent, @QueryParam("good_link_test_interval")Integer goodLinkTestInterval, @QueryParam("bad_link_test_interval")Integer badLinkTestInterval, @QueryParam("link_unused_interval")Integer linkUnusedInterval, @QueryParam("connection.timeout")Integer connectionTimeout);

    @POST
    @Path("/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTransformerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("linkcheckertransformer.disableRewriting")Boolean linkcheckertransformerDisableRewriting, @QueryParam("linkcheckertransformer.disableChecking")Boolean linkcheckertransformerDisableChecking, @QueryParam("linkcheckertransformer.mapCacheSize")Integer linkcheckertransformerMapCacheSize, @QueryParam("linkcheckertransformer.strictExtensionCheck")Boolean linkcheckertransformerStrictExtensionCheck, @QueryParam("linkcheckertransformer.stripHtmltExtension")Boolean linkcheckertransformerStripHtmltExtension, @QueryParam("linkcheckertransformer.rewriteElements")List<String> linkcheckertransformerRewriteElements, @QueryParam("linkcheckertransformer.stripExtensionPathBlacklist")List<String> linkcheckertransformerStripExtensionPathBlacklist);

    @POST
    @Path("/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkInfoStorageImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo comDayCqRewriterLinkcheckerImplLinkInfoStorageImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.max_links_per_host")Integer serviceMaxLinksPerHost, @QueryParam("service.save_external_link_references")Boolean serviceSaveExternalLinkReferences);

    @POST
    @Path("/system/console/configMgr/com.day.cq.rewriter.processor.impl.HtmlParserFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqRewriterProcessorImplHtmlParserFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqRewriterProcessorImplHtmlParserFactoryInfo comDayCqRewriterProcessorImplHtmlParserFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("htmlparser.processTags")List<String> htmlparserProcessTags, @QueryParam("htmlparser.preserveCamelCase")Boolean htmlparserPreserveCamelCase);

    @POST
    @Path("/system/console/configMgr/com.day.cq.search.impl.builder.QueryBuilderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqSearchImplBuilderQueryBuilderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqSearchImplBuilderQueryBuilderImplInfo comDayCqSearchImplBuilderQueryBuilderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("excerpt.properties")List<String> excerptProperties, @QueryParam("cache.max.entries")Integer cacheMaxEntries, @QueryParam("cache.entry.lifetime")Integer cacheEntryLifetime, @QueryParam("xpath.union")Boolean xpathUnion);

    @POST
    @Path("/system/console/configMgr/com.day.cq.search.suggest.impl.SuggestionIndexManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqSearchSuggestImplSuggestionIndexManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqSearchSuggestImplSuggestionIndexManagerImplInfo comDayCqSearchSuggestImplSuggestionIndexManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("pathBuilder.target")String pathBuilderTarget, @QueryParam("suggest.basepath")String suggestBasepath);

    @POST
    @Path("/system/console/configMgr/com.day.cq.searchpromote.impl.PublishSearchPromoteConfigHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo comDayCqSearchpromoteImplPublishSearchPromoteConfigHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.searchpromote.confighandler.enabled")Boolean cqSearchpromoteConfighandlerEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.searchpromote.impl.SearchPromoteServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqSearchpromoteImplSearchPromoteServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqSearchpromoteImplSearchPromoteServiceImplInfo comDayCqSearchpromoteImplSearchPromoteServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.searchpromote.configuration.server.uri")String cqSearchpromoteConfigurationServerUri, @QueryParam("cq.searchpromote.configuration.environment")String cqSearchpromoteConfigurationEnvironment, @QueryParam("connection.timeout")Integer connectionTimeout, @QueryParam("socket.timeout")Integer socketTimeout);

    @POST
    @Path("/system/console/configMgr/com.day.cq.security.ACLSetup")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqSecurityACLSetupInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqSecurityACLSetupInfo comDayCqSecurityACLSetup(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.aclsetup.rules")List<String> cqAclsetupRules);

    @POST
    @Path("/system/console/configMgr/com.day.cq.statistics.impl.StatisticsServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqStatisticsImplStatisticsServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqStatisticsImplStatisticsServiceImplInfo comDayCqStatisticsImplStatisticsServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.period")Integer schedulerPeriod, @QueryParam("scheduler.concurrent")Boolean schedulerConcurrent, @QueryParam("path")String path, @QueryParam("workspace")String workspace, @QueryParam("keywordsPath")String keywordsPath, @QueryParam("asyncEntries")Boolean asyncEntries);

    @POST
    @Path("/system/console/configMgr/com.day.cq.tagging.impl.JcrTagManagerFactoryImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqTaggingImplJcrTagManagerFactoryImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqTaggingImplJcrTagManagerFactoryImplInfo comDayCqTaggingImplJcrTagManagerFactoryImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("validation.enabled")Boolean validationEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.tagging.impl.search.TagPredicateEvaluator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqTaggingImplSearchTagPredicateEvaluatorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqTaggingImplSearchTagPredicateEvaluatorInfo comDayCqTaggingImplSearchTagPredicateEvaluator(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("ignore_path")Boolean ignorePath);

    @POST
    @Path("/system/console/configMgr/com.day.cq.tagging.impl.TagGarbageCollector")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqTaggingImplTagGarbageCollectorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqTaggingImplTagGarbageCollectorInfo comDayCqTaggingImplTagGarbageCollector(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.contentsync.impl.handler.PagesUpdateHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo comDayCqWcmContentsyncImplHandlerPagesUpdateHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.pagesupdatehandler.imageresourcetypes")List<String> cqPagesupdatehandlerImageresourcetypes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.contentsync.impl.rewriter.PathRewriterTransformerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.contentsync.pathrewritertransformer.mapping.links")List<String> cqContentsyncPathrewritertransformerMappingLinks, @QueryParam("cq.contentsync.pathrewritertransformer.mapping.clientlibs")List<String> cqContentsyncPathrewritertransformerMappingClientlibs, @QueryParam("cq.contentsync.pathrewritertransformer.mapping.images")List<String> cqContentsyncPathrewritertransformerMappingImages, @QueryParam("cq.contentsync.pathrewritertransformer.attribute.pattern")String cqContentsyncPathrewritertransformerAttributePattern, @QueryParam("cq.contentsync.pathrewritertransformer.clientlibrary.pattern")String cqContentsyncPathrewritertransformerClientlibraryPattern, @QueryParam("cq.contentsync.pathrewritertransformer.clientlibrary.replace")String cqContentsyncPathrewritertransformerClientlibraryReplace);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.AuthoringUIModeServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplAuthoringUIModeServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplAuthoringUIModeServiceImplInfo comDayCqWcmCoreImplAuthoringUIModeServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("authoringUIModeService.default")String authoringUIModeServiceDefault);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.commands.WCMCommandServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplCommandsWCMCommandServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplCommandsWCMCommandServletInfo comDayCqWcmCoreImplCommandsWCMCommandServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("wcmcommandservlet.delete_whitelist")List<String> wcmcommandservletDeleteWhitelist);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.devicedetection.DeviceIdentificationModeImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("dim.default.mode")String dimDefaultMode, @QueryParam("dim.appcache.enabled")Boolean dimAppcacheEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.event.PageEventAuditListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplEventPageEventAuditListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplEventPageEventAuditListenerInfo comDayCqWcmCoreImplEventPageEventAuditListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("configured")String configured);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.event.PagePostProcessor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplEventPagePostProcessorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplEventPagePostProcessorInfo comDayCqWcmCoreImplEventPagePostProcessor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("paths")List<String> paths);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.event.RepositoryChangeEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo comDayCqWcmCoreImplEventRepositoryChangeEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("paths")List<String> paths, @QueryParam("excludedPaths")List<String> excludedPaths);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.event.TemplatePostProcessor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplEventTemplatePostProcessorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplEventTemplatePostProcessorInfo comDayCqWcmCoreImplEventTemplatePostProcessor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("paths")String paths);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.LanguageManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplLanguageManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplLanguageManagerImplInfo comDayCqWcmCoreImplLanguageManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("langmgr.list.path")String langmgrListPath, @QueryParam("langmgr.country.default")List<String> langmgrCountryDefault);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.LinkCheckerConfigurationFactoryImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("link.expired.prefix")String linkExpiredPrefix, @QueryParam("link.expired.remove")Boolean linkExpiredRemove, @QueryParam("link.expired.suffix")String linkExpiredSuffix, @QueryParam("link.invalid.prefix")String linkInvalidPrefix, @QueryParam("link.invalid.remove")Boolean linkInvalidRemove, @QueryParam("link.invalid.suffix")String linkInvalidSuffix, @QueryParam("link.predated.prefix")String linkPredatedPrefix, @QueryParam("link.predated.remove")Boolean linkPredatedRemove, @QueryParam("link.predated.suffix")String linkPredatedSuffix, @QueryParam("link.wcmmodes")List<String> linkWcmmodes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.page.PageInfoAggregatorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplPagePageInfoAggregatorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplPagePageInfoAggregatorImplInfo comDayCqWcmCoreImplPagePageInfoAggregatorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("page.info.provider.property.regex.default")String pageInfoProviderPropertyRegexDefault, @QueryParam("page.info.provider.property.name")String pageInfoProviderPropertyName);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.page.PageManagerFactoryImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplPagePageManagerFactoryImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplPagePageManagerFactoryImplInfo comDayCqWcmCoreImplPagePageManagerFactoryImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("illegalCharMapping")String illegalCharMapping, @QueryParam("pageSubTreeActivationCheck")Boolean pageSubTreeActivationCheck);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.references.content.ContentReferenceConfig")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo comDayCqWcmCoreImplReferencesContentContentReferenceConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("contentReferenceConfig.resourceTypes")List<String> contentReferenceConfigResourceTypes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.AssetViewHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo comDayCqWcmCoreImplServletsContentfinderAssetViewHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("dam.showexpired")Boolean damShowexpired, @QueryParam("dam.showhidden")Boolean damShowhidden, @QueryParam("tagTitleSearch")Boolean tagTitleSearch, @QueryParam("guessTotal")String guessTotal, @QueryParam("dam.expiryProperty")String damExpiryProperty);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.connector.ConnectorViewHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("item.resource.types")List<String> itemResourceTypes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.PageViewHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo comDayCqWcmCoreImplServletsContentfinderPageViewHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("guessTotal")String guessTotal, @QueryParam("tagTitleSearch")Boolean tagTitleSearch);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.FindReplaceServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplServletsFindReplaceServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplServletsFindReplaceServletInfo comDayCqWcmCoreImplServletsFindReplaceServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scope")List<String> scope);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ReferenceSearchServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplServletsReferenceSearchServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplServletsReferenceSearchServletInfo comDayCqWcmCoreImplServletsReferenceSearchServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("referencesearchservlet.maxReferencesPerPage")Integer referencesearchservletMaxReferencesPerPage, @QueryParam("referencesearchservlet.maxPages")Integer referencesearchservletMaxPages);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ThumbnailServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplServletsThumbnailServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplServletsThumbnailServletInfo comDayCqWcmCoreImplServletsThumbnailServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("workspace")String workspace, @QueryParam("dimensions")List<String> dimensions);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.utils.DefaultPageNameValidator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo comDayCqWcmCoreImplUtilsDefaultPageNameValidator(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("nonValidChars")String nonValidChars);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.variants.PageVariantsProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo comDayCqWcmCoreImplVariantsPageVariantsProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("default.externalizer.domain")String defaultExternalizerDomain);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.VersionManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplVersionManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplVersionManagerImplInfo comDayCqWcmCoreImplVersionManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("versionmanager.createVersionOnActivation")Boolean versionmanagerCreateVersionOnActivation, @QueryParam("versionmanager.purgingEnabled")Boolean versionmanagerPurgingEnabled, @QueryParam("versionmanager.purgePaths")List<String> versionmanagerPurgePaths, @QueryParam("versionmanager.ivPaths")List<String> versionmanagerIvPaths, @QueryParam("versionmanager.maxAgeDays")Integer versionmanagerMaxAgeDays, @QueryParam("versionmanager.maxNumberVersions")Integer versionmanagerMaxNumberVersions, @QueryParam("versionmanager.minNumberVersions")Integer versionmanagerMinNumberVersions);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.VersionPurgeTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplVersionPurgeTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplVersionPurgeTaskInfo comDayCqWcmCoreImplVersionPurgeTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("versionpurge.paths")List<String> versionpurgePaths, @QueryParam("versionpurge.recursive")Boolean versionpurgeRecursive, @QueryParam("versionpurge.maxVersions")Integer versionpurgeMaxVersions, @QueryParam("versionpurge.minVersions")Integer versionpurgeMinVersions, @QueryParam("versionpurge.maxAgeDays")Integer versionpurgeMaxAgeDays);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.WCMDebugFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplWCMDebugFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplWCMDebugFilterInfo comDayCqWcmCoreImplWCMDebugFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("wcmdbgfilter.enabled")Boolean wcmdbgfilterEnabled, @QueryParam("wcmdbgfilter.jspDebug")Boolean wcmdbgfilterJspDebug);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.WCMDeveloperModeFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplWCMDeveloperModeFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplWCMDeveloperModeFilterInfo comDayCqWcmCoreImplWCMDeveloperModeFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("wcmdevmodefilter.enabled")Boolean wcmdevmodefilterEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.impl.warp.TimeWarpFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreImplWarpTimeWarpFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreImplWarpTimeWarpFilterInfo comDayCqWcmCoreImplWarpTimeWarpFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("filter.order")String filterOrder, @QueryParam("filter.scope")String filterScope);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.mvt.MVTStatisticsImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreMvtMVTStatisticsImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreMvtMVTStatisticsImplInfo comDayCqWcmCoreMvtMVTStatisticsImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("mvtstatistics.trackingurl")String mvtstatisticsTrackingurl);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.stats.PageViewStatisticsImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreStatsPageViewStatisticsImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreStatsPageViewStatisticsImplInfo comDayCqWcmCoreStatsPageViewStatisticsImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("pageviewstatistics.trackingurl")String pageviewstatisticsTrackingurl, @QueryParam("pageviewstatistics.trackingscript.enabled")String pageviewstatisticsTrackingscriptEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.core.WCMRequestFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmCoreWCMRequestFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmCoreWCMRequestFilterInfo comDayCqWcmCoreWCMRequestFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("wcmfilter.mode")String wcmfilterMode);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.DesignPackageImporter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterDesignPackageImporterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterDesignPackageImporterInfo comDayCqWcmDesignimporterDesignPackageImporter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("extract.filter")List<String> extractFilter);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasBuilderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterImplCanvasBuilderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterImplCanvasBuilderImplInfo comDayCqWcmDesignimporterImplCanvasBuilderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("filepattern")String filepattern, @QueryParam("build.page.nodes")Boolean buildPageNodes, @QueryParam("build.client.libs")Boolean buildClientLibs, @QueryParam("build.canvas.component")Boolean buildCanvasComponent);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasPageDeleteHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo comDayCqWcmDesignimporterImplCanvasPageDeleteHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("minThreadPoolSize")Integer minThreadPoolSize, @QueryParam("maxThreadPoolSize")Integer maxThreadPoolSize);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.impl.EntryPreprocessorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterImplEntryPreprocessorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterImplEntryPreprocessorImplInfo comDayCqWcmDesignimporterImplEntryPreprocessorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("search.pattern")String searchPattern, @QueryParam("replace.pattern")String replacePattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.impl.MobileCanvasBuilderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo comDayCqWcmDesignimporterImplMobileCanvasBuilderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("filepattern")String filepattern, @QueryParam("device.groups")List<String> deviceGroups, @QueryParam("build.page.nodes")Boolean buildPageNodes, @QueryParam("build.client.libs")Boolean buildClientLibs, @QueryParam("build.canvas.component")Boolean buildCanvasComponent);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.CanvasComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.HeadTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.IFrameTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImageComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern, @QueryParam("component.resourceType")String componentResourceType);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImgTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.InlineScriptTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.LinkTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.MetaTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.NonScriptTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ParsysComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo comDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern, @QueryParam("component.resourceType")String componentResourceType);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ScriptTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.StyleTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TextComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern, @QueryParam("component.resourceType")String componentResourceType);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleComponentTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern, @QueryParam("component.resourceType")String componentResourceType);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleTagHandlerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("tagpattern")String tagpattern);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormChooserServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationFormsImplFormChooserServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationFormsImplFormChooserServletInfo comDayCqWcmFoundationFormsImplFormChooserServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.name")String serviceName, @QueryParam("sling.servlet.resourceTypes")String slingServletResourceTypes, @QueryParam("sling.servlet.selectors")String slingServletSelectors, @QueryParam("sling.servlet.methods")List<String> slingServletMethods, @QueryParam("forms.formchooserservlet.advansesearch.require")Boolean formsFormchooserservletAdvansesearchRequire);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormParagraphPostProcessor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo comDayCqWcmFoundationFormsImplFormParagraphPostProcessor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("forms.formparagraphpostprocessor.enabled")Boolean formsFormparagraphpostprocessorEnabled, @QueryParam("forms.formparagraphpostprocessor.formresourcetypes")List<String> formsFormparagraphpostprocessorFormresourcetypes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormsHandlingServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationFormsImplFormsHandlingServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationFormsImplFormsHandlingServletInfo comDayCqWcmFoundationFormsImplFormsHandlingServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name.whitelist")String nameWhitelist, @QueryParam("allow.expressions")Boolean allowExpressions);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.MailServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationFormsImplMailServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationFormsImplMailServletInfo comDayCqWcmFoundationFormsImplMailServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.resourceTypes")String slingServletResourceTypes, @QueryParam("sling.servlet.selectors")String slingServletSelectors, @QueryParam("resource.whitelist")List<String> resourceWhitelist, @QueryParam("resource.blacklist")String resourceBlacklist);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.impl.AdaptiveImageComponentServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationImplAdaptiveImageComponentServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationImplAdaptiveImageComponentServletInfo comDayCqWcmFoundationImplAdaptiveImageComponentServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("adapt.supported.widths")List<String> adaptSupportedWidths);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.impl.HTTPAuthHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationImplHTTPAuthHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationImplHTTPAuthHandlerInfo comDayCqWcmFoundationImplHTTPAuthHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path, @QueryParam("auth.http.nologin")Boolean authHttpNologin, @QueryParam("auth.http.realm")String authHttpRealm, @QueryParam("auth.default.loginpage")String authDefaultLoginpage, @QueryParam("auth.cred.form")List<String> authCredForm, @QueryParam("auth.cred.utf8")List<String> authCredUtf8);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.impl.PageImpressionsTracker")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationImplPageImpressionsTrackerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationImplPageImpressionsTrackerInfo comDayCqWcmFoundationImplPageImpressionsTracker(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.auth.requirements")String slingAuthRequirements);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.impl.PageRedirectServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationImplPageRedirectServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationImplPageRedirectServletInfo comDayCqWcmFoundationImplPageRedirectServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("excluded.resource.types")List<String> excludedResourceTypes);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.security.impl.DefaultAttachmentTypeBlacklistService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("default.attachment.type.blacklist")List<String> defaultAttachmentTypeBlacklist, @QueryParam("baseline.attachment.type.blacklist")List<String> baselineAttachmentTypeBlacklist);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.foundation.security.impl.SaferSlingPostValidatorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("parameter.whitelist")List<String> parameterWhitelist, @QueryParam("parameter.whitelist.prefixes")List<String> parameterWhitelistPrefixes, @QueryParam("binary.parameter.whitelist")List<String> binaryParameterWhitelist, @QueryParam("modifier.whitelist")List<String> modifierWhitelist, @QueryParam("operation.whitelist")List<String> operationWhitelist, @QueryParam("operation.whitelist.prefixes")List<String> operationWhitelistPrefixes, @QueryParam("typehint.whitelist")List<String> typehintWhitelist, @QueryParam("resourcetype.whitelist")List<String> resourcetypeWhitelist);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.mobile.core.impl.device.DeviceInfoTransformerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("device.info.transformer.enabled")Boolean deviceInfoTransformerEnabled, @QueryParam("device.info.transformer.css.style")String deviceInfoTransformerCssStyle);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.mobile.core.impl.redirect.RedirectFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMobileCoreImplRedirectRedirectFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMobileCoreImplRedirectRedirectFilterInfo comDayCqWcmMobileCoreImplRedirectRedirectFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("redirect.enabled")Boolean redirectEnabled, @QueryParam("redirect.stats.enabled")Boolean redirectStatsEnabled, @QueryParam("redirect.extensions")List<String> redirectExtensions, @QueryParam("redirect.paths")List<String> redirectPaths);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentCopyActionFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplActionsContentCopyActionFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplActionsContentCopyActionFactoryInfo comDayCqWcmMsmImplActionsContentCopyActionFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.wcm.msm.action.excludednodetypes")List<String> cqWcmMsmActionExcludednodetypes, @QueryParam("cq.wcm.msm.action.excludedparagraphitems")List<String> cqWcmMsmActionExcludedparagraphitems, @QueryParam("cq.wcm.msm.action.excludedprops")List<String> cqWcmMsmActionExcludedprops, @QueryParam("contentcopyaction.order.style")String contentcopyactionOrderStyle);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentDeleteActionFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo comDayCqWcmMsmImplActionsContentDeleteActionFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.wcm.msm.action.excludednodetypes")List<String> cqWcmMsmActionExcludednodetypes, @QueryParam("cq.wcm.msm.action.excludedparagraphitems")List<String> cqWcmMsmActionExcludedparagraphitems, @QueryParam("cq.wcm.msm.action.excludedprops")List<String> cqWcmMsmActionExcludedprops);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentUpdateActionFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo comDayCqWcmMsmImplActionsContentUpdateActionFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.wcm.msm.action.excludednodetypes")List<String> cqWcmMsmActionExcludednodetypes, @QueryParam("cq.wcm.msm.action.excludedparagraphitems")List<String> cqWcmMsmActionExcludedparagraphitems, @QueryParam("cq.wcm.msm.action.excludedprops")List<String> cqWcmMsmActionExcludedprops, @QueryParam("cq.wcm.msm.action.ignoredMixin")List<String> cqWcmMsmActionIgnoredMixin);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.OrderChildrenActionFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo comDayCqWcmMsmImplActionsOrderChildrenActionFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.wcm.msm.action.excludednodetypes")List<String> cqWcmMsmActionExcludednodetypes, @QueryParam("cq.wcm.msm.action.excludedparagraphitems")List<String> cqWcmMsmActionExcludedparagraphitems, @QueryParam("cq.wcm.msm.action.excludedprops")List<String> cqWcmMsmActionExcludedprops);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.PageMoveActionFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplActionsPageMoveActionFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplActionsPageMoveActionFactoryInfo comDayCqWcmMsmImplActionsPageMoveActionFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.wcm.msm.action.excludednodetypes")List<String> cqWcmMsmActionExcludednodetypes, @QueryParam("cq.wcm.msm.action.excludedparagraphitems")List<String> cqWcmMsmActionExcludedparagraphitems, @QueryParam("cq.wcm.msm.action.excludedprops")List<String> cqWcmMsmActionExcludedprops, @QueryParam("cq.wcm.msm.impl.actions.pagemove.prop_referenceUpdate")Boolean cqWcmMsmImplActionsPagemovePropReferenceUpdate);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ReferencesUpdateActionFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo comDayCqWcmMsmImplActionsReferencesUpdateActionFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.wcm.msm.action.excludednodetypes")List<String> cqWcmMsmActionExcludednodetypes, @QueryParam("cq.wcm.msm.action.excludedparagraphitems")List<String> cqWcmMsmActionExcludedparagraphitems, @QueryParam("cq.wcm.msm.action.excludedprops")List<String> cqWcmMsmActionExcludedprops, @QueryParam("cq.wcm.msm.impl.action.referencesupdate.prop_updateNested")Boolean cqWcmMsmImplActionReferencesupdatePropUpdateNested);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.VersionCopyActionFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo comDayCqWcmMsmImplActionsVersionCopyActionFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.wcm.msm.action.excludednodetypes")List<String> cqWcmMsmActionExcludednodetypes, @QueryParam("cq.wcm.msm.action.excludedparagraphitems")List<String> cqWcmMsmActionExcludedparagraphitems, @QueryParam("cq.wcm.msm.action.excludedprops")List<String> cqWcmMsmActionExcludedprops);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.LiveRelationshipManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplLiveRelationshipManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplLiveRelationshipManagerImplInfo comDayCqWcmMsmImplLiveRelationshipManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("liverelationshipmgr.relationsconfig.default")String liverelationshipmgrRelationsconfigDefault);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.RolloutManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplRolloutManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplRolloutManagerImplInfo comDayCqWcmMsmImplRolloutManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.filter")String eventFilter, @QueryParam("rolloutmgr.excludedprops.default")List<String> rolloutmgrExcludedpropsDefault, @QueryParam("rolloutmgr.excludedparagraphprops.default")List<String> rolloutmgrExcludedparagraphpropsDefault, @QueryParam("rolloutmgr.excludednodetypes.default")List<String> rolloutmgrExcludednodetypesDefault, @QueryParam("rolloutmgr.threadpool.maxsize")Integer rolloutmgrThreadpoolMaxsize, @QueryParam("rolloutmgr.threadpool.maxshutdowntime")Integer rolloutmgrThreadpoolMaxshutdowntime, @QueryParam("rolloutmgr.threadpool.priority")String rolloutmgrThreadpoolPriority, @QueryParam("rolloutmgr.commit.size")Integer rolloutmgrCommitSize, @QueryParam("rolloutmgr.conflicthandling.enabled")Boolean rolloutmgrConflicthandlingEnabled);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.msm.impl.servlets.AuditLogServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmMsmImplServletsAuditLogServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmMsmImplServletsAuditLogServletInfo comDayCqWcmMsmImplServletsAuditLogServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("auditlogservlet.default.events.count")Integer auditlogservletDefaultEventsCount, @QueryParam("auditlogservlet.default.path")String auditlogservletDefaultPath);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.notification.email.impl.EmailChannel")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmNotificationEmailImplEmailChannelInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmNotificationEmailImplEmailChannelInfo comDayCqWcmNotificationEmailImplEmailChannel(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("email.from")String emailFrom);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.notification.impl.NotificationManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmNotificationImplNotificationManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmNotificationImplNotificationManagerImplInfo comDayCqWcmNotificationImplNotificationManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.topics")List<String> eventTopics);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.scripting.impl.BVPManager")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmScriptingImplBVPManagerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmScriptingImplBVPManagerInfo comDayCqWcmScriptingImplBVPManager(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("com.day.cq.wcm.scripting.bvp.script.engines")List<String> comDayCqWcmScriptingBvpScriptEngines);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.undo.UndoConfig")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmUndoUndoConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmUndoUndoConfigInfo comDayCqWcmUndoUndoConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cq.wcm.undo.enabled")Boolean cqWcmUndoEnabled, @QueryParam("cq.wcm.undo.path")String cqWcmUndoPath, @QueryParam("cq.wcm.undo.validity")Integer cqWcmUndoValidity, @QueryParam("cq.wcm.undo.steps")Integer cqWcmUndoSteps, @QueryParam("cq.wcm.undo.persistence")String cqWcmUndoPersistence, @QueryParam("cq.wcm.undo.persistence.mode")Boolean cqWcmUndoPersistenceMode, @QueryParam("cq.wcm.undo.markermode")String cqWcmUndoMarkermode, @QueryParam("cq.wcm.undo.whitelist")List<String> cqWcmUndoWhitelist, @QueryParam("cq.wcm.undo.blacklist")List<String> cqWcmUndoBlacklist);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.webservicesupport.impl.ReplicationEventListener")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmWebservicesupportImplReplicationEventListenerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmWebservicesupportImplReplicationEventListenerInfo comDayCqWcmWebservicesupportImplReplicationEventListener(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("Flush agents")List<String> flushAgents);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.workflow.impl.WcmWorkflowServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo comDayCqWcmWorkflowImplWcmWorkflowServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("event.filter")String eventFilter, @QueryParam("minThreadPoolSize")Integer minThreadPoolSize, @QueryParam("maxThreadPoolSize")Integer maxThreadPoolSize, @QueryParam("cq.wcm.workflow.terminate.on.activate")Boolean cqWcmWorkflowTerminateOnActivate, @QueryParam("cq.wcm.worklfow.terminate.exclusion.list")List<String> cqWcmWorklfowTerminateExclusionList);

    @POST
    @Path("/system/console/configMgr/com.day.cq.wcm.workflow.impl.WorkflowPackageInfoProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo comDayCqWcmWorkflowImplWorkflowPackageInfoProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("workflowpackageinfoprovider.filter")List<String> workflowpackageinfoproviderFilter, @QueryParam("workflowpackageinfoprovider.filter.rootpath")String workflowpackageinfoproviderFilterRootpath);

    @POST
    @Path("/system/console/configMgr/com.day.cq.widget.impl.HtmlLibraryManagerImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWidgetImplHtmlLibraryManagerImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWidgetImplHtmlLibraryManagerImplInfo comDayCqWidgetImplHtmlLibraryManagerImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("htmllibmanager.clientmanager")String htmllibmanagerClientmanager, @QueryParam("htmllibmanager.debug")Boolean htmllibmanagerDebug, @QueryParam("htmllibmanager.debug.console")Boolean htmllibmanagerDebugConsole, @QueryParam("htmllibmanager.debug.init.js")String htmllibmanagerDebugInitJs, @QueryParam("htmllibmanager.defaultthemename")String htmllibmanagerDefaultthemename, @QueryParam("htmllibmanager.defaultuserthemename")String htmllibmanagerDefaultuserthemename, @QueryParam("htmllibmanager.firebuglite.path")String htmllibmanagerFirebuglitePath, @QueryParam("htmllibmanager.forceCQUrlInfo")Boolean htmllibmanagerForceCQUrlInfo, @QueryParam("htmllibmanager.gzip")Boolean htmllibmanagerGzip, @QueryParam("htmllibmanager.maxage")Integer htmllibmanagerMaxage, @QueryParam("htmllibmanager.maxDataUriSize")Integer htmllibmanagerMaxDataUriSize, @QueryParam("htmllibmanager.minify")Boolean htmllibmanagerMinify, @QueryParam("htmllibmanager.path.list")List<String> htmllibmanagerPathList, @QueryParam("htmllibmanager.timing")Boolean htmllibmanagerTiming);

    @POST
    @Path("/system/console/configMgr/com.day.cq.widget.impl.WidgetExtensionProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWidgetImplWidgetExtensionProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWidgetImplWidgetExtensionProviderImplInfo comDayCqWidgetImplWidgetExtensionProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("extendable.widgets")List<String> extendableWidgets, @QueryParam("widgetextensionprovider.debug")Boolean widgetextensionproviderDebug);

    @POST
    @Path("/system/console/configMgr/com.day.cq.workflow.impl.email.EMailNotificationService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWorkflowImplEmailEMailNotificationServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWorkflowImplEmailEMailNotificationServiceInfo comDayCqWorkflowImplEmailEMailNotificationService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("from.address")String fromAddress, @QueryParam("host.prefix")String hostPrefix, @QueryParam("notify.onabort")Boolean notifyOnabort, @QueryParam("notify.oncomplete")Boolean notifyOncomplete, @QueryParam("notify.oncontainercomplete")Boolean notifyOncontainercomplete, @QueryParam("notify.useronly")Boolean notifyUseronly);

    @POST
    @Path("/system/console/configMgr/com.day.cq.workflow.impl.email.TaskEMailNotificationService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo comDayCqWorkflowImplEmailTaskEMailNotificationService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("notify.onupdate")Boolean notifyOnupdate, @QueryParam("notify.oncomplete")Boolean notifyOncomplete);

    @POST
    @Path("/system/console/configMgr/com.day.crx.security.token.impl.impl.TokenAuthenticationHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo comDayCrxSecurityTokenImplImplTokenAuthenticationHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path, @QueryParam("token.required.attr")String tokenRequiredAttr, @QueryParam("token.alternate.url")String tokenAlternateUrl, @QueryParam("token.encapsulated")Boolean tokenEncapsulated, @QueryParam("skip.token.refresh")List<String> skipTokenRefresh);

    @POST
    @Path("/system/console/configMgr/com.day.crx.security.token.impl.TokenCleanupTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = ComDayCrxSecurityTokenImplTokenCleanupTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public ComDayCrxSecurityTokenImplTokenCleanupTaskInfo comDayCrxSecurityTokenImplTokenCleanupTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enable.token.cleanup.task")Boolean enableTokenCleanupTask, @QueryParam("scheduler.expression")String schedulerExpression, @QueryParam("batch.size")Integer batchSize);

    @POST
    @Path("/system/console/configMgr/Guide Localization Service")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = GuideLocalizationServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public GuideLocalizationServiceInfo guideLocalizationService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("supportedLocales")List<String> supportedLocales, @QueryParam("Localizable Properties")List<String> localizableProperties);

    @POST
    @Path("/system/console/configMgr/MessagingUserComponentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = MessagingUserComponentFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public MessagingUserComponentFactoryInfo messagingUserComponentFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("priority")Integer priority);

    @POST
    @Path("/system/console/configMgr/org.apache.aries.jmx.framework.StateConfig")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheAriesJmxFrameworkStateConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheAriesJmxFrameworkStateConfigInfo orgApacheAriesJmxFrameworkStateConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("attributeChangeNotificationEnabled")Boolean attributeChangeNotificationEnabled);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.eventadmin.impl.EventAdmin")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixEventadminImplEventAdminInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixEventadminImplEventAdminInfo orgApacheFelixEventadminImplEventAdmin(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.felix.eventadmin.ThreadPoolSize")Integer orgApacheFelixEventadminThreadPoolSize, @QueryParam("org.apache.felix.eventadmin.AsyncToSyncThreadRatio")BigDecimal orgApacheFelixEventadminAsyncToSyncThreadRatio, @QueryParam("org.apache.felix.eventadmin.Timeout")Integer orgApacheFelixEventadminTimeout, @QueryParam("org.apache.felix.eventadmin.RequireTopic")Boolean orgApacheFelixEventadminRequireTopic, @QueryParam("org.apache.felix.eventadmin.IgnoreTimeout")List<String> orgApacheFelixEventadminIgnoreTimeout, @QueryParam("org.apache.felix.eventadmin.IgnoreTopic")List<String> orgApacheFelixEventadminIgnoreTopic);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.http")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixHttpInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixHttpInfo orgApacheFelixHttp(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.felix.http.host")String orgApacheFelixHttpHost, @QueryParam("org.apache.felix.http.enable")Boolean orgApacheFelixHttpEnable, @QueryParam("org.osgi.service.http.port")Integer orgOsgiServiceHttpPort, @QueryParam("org.apache.felix.http.timeout")Integer orgApacheFelixHttpTimeout, @QueryParam("org.apache.felix.https.enable")Boolean orgApacheFelixHttpsEnable, @QueryParam("org.osgi.service.http.port.secure")Integer orgOsgiServiceHttpPortSecure, @QueryParam("org.apache.felix.https.keystore")String orgApacheFelixHttpsKeystore, @QueryParam("org.apache.felix.https.keystore.password")String orgApacheFelixHttpsKeystorePassword, @QueryParam("org.apache.felix.https.keystore.key.password")String orgApacheFelixHttpsKeystoreKeyPassword, @QueryParam("org.apache.felix.https.truststore")String orgApacheFelixHttpsTruststore, @QueryParam("org.apache.felix.https.truststore.password")String orgApacheFelixHttpsTruststorePassword, @QueryParam("org.apache.felix.https.clientcertificate")String orgApacheFelixHttpsClientcertificate, @QueryParam("org.apache.felix.http.context_path")String orgApacheFelixHttpContextPath, @QueryParam("org.apache.felix.http.mbeans")Boolean orgApacheFelixHttpMbeans, @QueryParam("org.apache.felix.http.session.timeout")Integer orgApacheFelixHttpSessionTimeout, @QueryParam("org.apache.felix.http.jetty.threadpool.max")Integer orgApacheFelixHttpJettyThreadpoolMax, @QueryParam("org.apache.felix.http.jetty.acceptors")Integer orgApacheFelixHttpJettyAcceptors, @QueryParam("org.apache.felix.http.jetty.selectors")Integer orgApacheFelixHttpJettySelectors, @QueryParam("org.apache.felix.http.jetty.headerBufferSize")Integer orgApacheFelixHttpJettyHeaderBufferSize, @QueryParam("org.apache.felix.http.jetty.requestBufferSize")Integer orgApacheFelixHttpJettyRequestBufferSize, @QueryParam("org.apache.felix.http.jetty.responseBufferSize")Integer orgApacheFelixHttpJettyResponseBufferSize, @QueryParam("org.apache.felix.http.jetty.maxFormSize")Integer orgApacheFelixHttpJettyMaxFormSize, @QueryParam("org.apache.felix.http.path_exclusions")List<String> orgApacheFelixHttpPathExclusions, @QueryParam("org.apache.felix.https.jetty.ciphersuites.excluded")List<String> orgApacheFelixHttpsJettyCiphersuitesExcluded, @QueryParam("org.apache.felix.https.jetty.ciphersuites.included")List<String> orgApacheFelixHttpsJettyCiphersuitesIncluded, @QueryParam("org.apache.felix.http.jetty.sendServerHeader")Boolean orgApacheFelixHttpJettySendServerHeader, @QueryParam("org.apache.felix.https.jetty.protocols.included")List<String> orgApacheFelixHttpsJettyProtocolsIncluded, @QueryParam("org.apache.felix.https.jetty.protocols.excluded")List<String> orgApacheFelixHttpsJettyProtocolsExcluded, @QueryParam("org.apache.felix.proxy.load.balancer.connection.enable")Boolean orgApacheFelixProxyLoadBalancerConnectionEnable, @QueryParam("org.apache.felix.https.jetty.renegotiateAllowed")Boolean orgApacheFelixHttpsJettyRenegotiateAllowed, @QueryParam("org.apache.felix.https.jetty.session.cookie.httpOnly")Boolean orgApacheFelixHttpsJettySessionCookieHttpOnly, @QueryParam("org.apache.felix.https.jetty.session.cookie.secure")Boolean orgApacheFelixHttpsJettySessionCookieSecure, @QueryParam("org.eclipse.jetty.servlet.SessionIdPathParameterName")String orgEclipseJettyServletSessionIdPathParameterName, @QueryParam("org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding")Boolean orgEclipseJettyServletCheckingRemoteSessionIdEncoding, @QueryParam("org.eclipse.jetty.servlet.SessionCookie")String orgEclipseJettyServletSessionCookie, @QueryParam("org.eclipse.jetty.servlet.SessionDomain")String orgEclipseJettyServletSessionDomain, @QueryParam("org.eclipse.jetty.servlet.SessionPath")String orgEclipseJettyServletSessionPath, @QueryParam("org.eclipse.jetty.servlet.MaxAge")Integer orgEclipseJettyServletMaxAge, @QueryParam("org.apache.felix.http.name")String orgApacheFelixHttpName, @QueryParam("org.apache.felix.jetty.gziphandler.enable")Boolean orgApacheFelixJettyGziphandlerEnable, @QueryParam("org.apache.felix.jetty.gzip.minGzipSize")Integer orgApacheFelixJettyGzipMinGzipSize, @QueryParam("org.apache.felix.jetty.gzip.compressionLevel")Integer orgApacheFelixJettyGzipCompressionLevel, @QueryParam("org.apache.felix.jetty.gzip.inflateBufferSize")Integer orgApacheFelixJettyGzipInflateBufferSize, @QueryParam("org.apache.felix.jetty.gzip.syncFlush")Boolean orgApacheFelixJettyGzipSyncFlush, @QueryParam("org.apache.felix.jetty.gzip.excludedUserAgents")List<String> orgApacheFelixJettyGzipExcludedUserAgents, @QueryParam("org.apache.felix.jetty.gzip.includedMethods")List<String> orgApacheFelixJettyGzipIncludedMethods, @QueryParam("org.apache.felix.jetty.gzip.excludedMethods")List<String> orgApacheFelixJettyGzipExcludedMethods, @QueryParam("org.apache.felix.jetty.gzip.includedPaths")List<String> orgApacheFelixJettyGzipIncludedPaths, @QueryParam("org.apache.felix.jetty.gzip.excludedPaths")List<String> orgApacheFelixJettyGzipExcludedPaths, @QueryParam("org.apache.felix.jetty.gzip.includedMimeTypes")List<String> orgApacheFelixJettyGzipIncludedMimeTypes, @QueryParam("org.apache.felix.jetty.gzip.excludedMimeTypes")List<String> orgApacheFelixJettyGzipExcludedMimeTypes, @QueryParam("org.apache.felix.http.session.invalidate")Boolean orgApacheFelixHttpSessionInvalidate, @QueryParam("org.apache.felix.http.session.uniqueid")Boolean orgApacheFelixHttpSessionUniqueid);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.http.sslfilter.SslFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixHttpSslfilterSslFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixHttpSslfilterSslFilterInfo orgApacheFelixHttpSslfilterSslFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("ssl-forward.header")String sslForwardHeader, @QueryParam("ssl-forward.value")String sslForwardValue, @QueryParam("ssl-forward-cert.header")String sslForwardCertHeader, @QueryParam("rewrite.absolute.urls")Boolean rewriteAbsoluteUrls);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.jaas.Configuration.factory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixJaasConfigurationFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixJaasConfigurationFactoryInfo orgApacheFelixJaasConfigurationFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("jaas.controlFlag")String jaasControlFlag, @QueryParam("jaas.ranking")Integer jaasRanking, @QueryParam("jaas.realmName")String jaasRealmName, @QueryParam("jaas.classname")String jaasClassname, @QueryParam("jaas.options")List<String> jaasOptions);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.jaas.ConfigurationSpi")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixJaasConfigurationSpiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixJaasConfigurationSpiInfo orgApacheFelixJaasConfigurationSpi(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("jaas.defaultRealmName")String jaasDefaultRealmName, @QueryParam("jaas.configProviderName")String jaasConfigProviderName, @QueryParam("jaas.globalConfigPolicy")String jaasGlobalConfigPolicy);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.scr.ScrService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixScrScrServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixScrScrServiceInfo orgApacheFelixScrScrService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("ds.loglevel")Integer dsLoglevel, @QueryParam("ds.factory.enabled")Boolean dsFactoryEnabled, @QueryParam("ds.delayed.keepInstances")Boolean dsDelayedKeepInstances, @QueryParam("ds.lock.timeout.milliseconds")Integer dsLockTimeoutMilliseconds, @QueryParam("ds.stop.timeout.milliseconds")Integer dsStopTimeoutMilliseconds, @QueryParam("ds.global.extender")Boolean dsGlobalExtender);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.systemready.impl.ComponentsCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixSystemreadyImplComponentsCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixSystemreadyImplComponentsCheckInfo orgApacheFelixSystemreadyImplComponentsCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("components.list")List<String> componentsList, @QueryParam("type")String type);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.systemready.impl.FrameworkStartCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixSystemreadyImplFrameworkStartCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixSystemreadyImplFrameworkStartCheckInfo orgApacheFelixSystemreadyImplFrameworkStartCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("timeout")Integer timeout, @QueryParam("target.start.level")Integer targetStartLevel, @QueryParam("target.start.level.prop.name")String targetStartLevelPropName, @QueryParam("type")String type);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.systemready.impl.ServicesCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixSystemreadyImplServicesCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixSystemreadyImplServicesCheckInfo orgApacheFelixSystemreadyImplServicesCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("services.list")List<String> servicesList, @QueryParam("type")String type);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemAliveServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixSystemreadyImplServletSystemAliveServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixSystemreadyImplServletSystemAliveServletInfo orgApacheFelixSystemreadyImplServletSystemAliveServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("osgi.http.whiteboard.servlet.pattern")String osgiHttpWhiteboardServletPattern, @QueryParam("osgi.http.whiteboard.context.select")String osgiHttpWhiteboardContextSelect);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemReadyServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixSystemreadyImplServletSystemReadyServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixSystemreadyImplServletSystemReadyServletInfo orgApacheFelixSystemreadyImplServletSystemReadyServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("osgi.http.whiteboard.servlet.pattern")String osgiHttpWhiteboardServletPattern, @QueryParam("osgi.http.whiteboard.context.select")String osgiHttpWhiteboardContextSelect);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.systemready.SystemReadyMonitor")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixSystemreadySystemReadyMonitorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixSystemreadySystemReadyMonitorInfo orgApacheFelixSystemreadySystemReadyMonitor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("poll.interval")Integer pollInterval);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.webconsole.internal.servlet.OsgiManager")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixWebconsoleInternalServletOsgiManagerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixWebconsoleInternalServletOsgiManagerInfo orgApacheFelixWebconsoleInternalServletOsgiManager(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("manager.root")String managerRoot, @QueryParam("http.service.filter")String httpServiceFilter, @QueryParam("default.render")String defaultRender, @QueryParam("realm")String realm, @QueryParam("username")String username, @QueryParam("password")String password, @QueryParam("category")String category, @QueryParam("locale")String locale, @QueryParam("loglevel")Integer loglevel, @QueryParam("plugins")String plugins);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.webconsole.plugins.event.internal.PluginServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixWebconsolePluginsEventInternalPluginServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixWebconsolePluginsEventInternalPluginServletInfo orgApacheFelixWebconsolePluginsEventInternalPluginServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("max.size")Integer maxSize);

    @POST
    @Path("/system/console/configMgr/org.apache.felix.webconsole.plugins.memoryusage.internal.MemoryUsageConfigurator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("felix.memoryusage.dump.threshold")Integer felixMemoryusageDumpThreshold, @QueryParam("felix.memoryusage.dump.interval")Integer felixMemoryusageDumpInterval, @QueryParam("felix.memoryusage.dump.location")String felixMemoryusageDumpLocation);

    @POST
    @Path("/system/console/configMgr/org.apache.http.proxyconfigurator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheHttpProxyconfiguratorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheHttpProxyconfiguratorInfo orgApacheHttpProxyconfigurator(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("proxy.enabled")Boolean proxyEnabled, @QueryParam("proxy.host")String proxyHost, @QueryParam("proxy.port")Integer proxyPort, @QueryParam("proxy.user")String proxyUser, @QueryParam("proxy.password")String proxyPassword, @QueryParam("proxy.exceptions")List<String> proxyExceptions);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreTextProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("dir")String dir);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStore")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("mongouri")String mongouri, @QueryParam("db")String db, @QueryParam("socketKeepAlive")Boolean socketKeepAlive, @QueryParam("cache")Integer cache, @QueryParam("nodeCachePercentage")Integer nodeCachePercentage, @QueryParam("prevDocCachePercentage")Integer prevDocCachePercentage, @QueryParam("childrenCachePercentage")Integer childrenCachePercentage, @QueryParam("diffCachePercentage")Integer diffCachePercentage, @QueryParam("cacheSegmentCount")Integer cacheSegmentCount, @QueryParam("cacheStackMoveDistance")Integer cacheStackMoveDistance, @QueryParam("blobCacheSize")Integer blobCacheSize, @QueryParam("persistentCache")String persistentCache, @QueryParam("journalCache")String journalCache, @QueryParam("customBlobStore")Boolean customBlobStore, @QueryParam("journalGCInterval")Integer journalGCInterval, @QueryParam("journalGCMaxAge")Integer journalGCMaxAge, @QueryParam("prefetchExternalChanges")Boolean prefetchExternalChanges, @QueryParam("role")String role, @QueryParam("versionGcMaxAgeInSecs")Integer versionGcMaxAgeInSecs, @QueryParam("versionGCExpression")String versionGCExpression, @QueryParam("versionGCTimeLimitInSecs")Integer versionGCTimeLimitInSecs, @QueryParam("blobGcMaxAgeInSecs")Integer blobGcMaxAgeInSecs, @QueryParam("blobTrackSnapshotIntervalInSecs")Integer blobTrackSnapshotIntervalInSecs, @QueryParam("repository.home")String repositoryHome, @QueryParam("maxReplicationLagInSecs")Integer maxReplicationLagInSecs, @QueryParam("documentStoreType")String documentStoreType, @QueryParam("bundlingDisabled")Boolean bundlingDisabled, @QueryParam("updateLimit")Integer updateLimit, @QueryParam("persistentCacheIncludes")List<String> persistentCacheIncludes, @QueryParam("leaseCheckMode")String leaseCheckMode);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreServicePreset")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("persistentCacheIncludes")List<String> persistentCacheIncludes);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.secondary.SecondaryStoreCacheService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("includedPaths")List<String> includedPaths, @QueryParam("enableAsyncObserver")Boolean enableAsyncObserver, @QueryParam("observerQueueSize")Integer observerQueueSize);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.AsyncIndexerService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo orgApacheJackrabbitOakPluginsIndexAsyncIndexerService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("asyncConfigs")List<String> asyncConfigs, @QueryParam("leaseTimeOutMinutes")Integer leaseTimeOutMinutes, @QueryParam("failingIndexTimeoutSeconds")Integer failingIndexTimeoutSeconds, @QueryParam("errorWarnIntervalSeconds")Integer errorWarnIntervalSeconds);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("disabled")Boolean disabled, @QueryParam("debug")Boolean debug, @QueryParam("localIndexDir")String localIndexDir, @QueryParam("enableOpenIndexAsync")Boolean enableOpenIndexAsync, @QueryParam("threadPoolSize")Integer threadPoolSize, @QueryParam("prefetchIndexFiles")Boolean prefetchIndexFiles, @QueryParam("extractedTextCacheSizeInMB")Integer extractedTextCacheSizeInMB, @QueryParam("extractedTextCacheExpiryInSecs")Integer extractedTextCacheExpiryInSecs, @QueryParam("alwaysUsePreExtractedCache")Boolean alwaysUsePreExtractedCache, @QueryParam("booleanClauseLimit")Integer booleanClauseLimit, @QueryParam("enableHybridIndexing")Boolean enableHybridIndexing, @QueryParam("hybridQueueSize")Integer hybridQueueSize, @QueryParam("disableStoredIndexDefinition")Boolean disableStoredIndexDefinition, @QueryParam("deletedBlobsCollectionEnabled")Boolean deletedBlobsCollectionEnabled, @QueryParam("propIndexCleanerIntervalInSecs")Integer propIndexCleanerIntervalInSecs, @QueryParam("enableSingleBlobIndexFiles")Boolean enableSingleBlobIndexFiles);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("solr.home.path")String solrHomePath, @QueryParam("solr.core.name")String solrCoreName);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path.desc.field")String pathDescField, @QueryParam("path.child.field")String pathChildField, @QueryParam("path.parent.field")String pathParentField, @QueryParam("path.exact.field")String pathExactField, @QueryParam("catch.all.field")String catchAllField, @QueryParam("collapsed.path.field")String collapsedPathField, @QueryParam("path.depth.field")String pathDepthField, @QueryParam("commit.policy")String commitPolicy, @QueryParam("rows")Integer rows, @QueryParam("path.restrictions")Boolean pathRestrictions, @QueryParam("property.restrictions")Boolean propertyRestrictions, @QueryParam("primarytypes.restrictions")Boolean primarytypesRestrictions, @QueryParam("ignored.properties")List<String> ignoredProperties, @QueryParam("used.properties")List<String> usedProperties, @QueryParam("type.mappings")List<String> typeMappings, @QueryParam("property.mappings")List<String> propertyMappings, @QueryParam("collapse.jcrcontent.nodes")Boolean collapseJcrcontentNodes);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("solr.http.url")String solrHttpUrl, @QueryParam("solr.zk.host")String solrZkHost, @QueryParam("solr.collection")String solrCollection, @QueryParam("solr.socket.timeout")Integer solrSocketTimeout, @QueryParam("solr.connection.timeout")Integer solrConnectionTimeout, @QueryParam("solr.shards.no")Integer solrShardsNo, @QueryParam("solr.replication.factor")Integer solrReplicationFactor, @QueryParam("solr.conf.dir")String solrConfDir);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("query.aggregation")Boolean queryAggregation);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("server.type")String serverType);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.metric.StatisticsProviderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("providerType")String providerType);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.plugins.observation.ChangeCollectorProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo orgApacheJackrabbitOakPluginsObservationChangeCollectorProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("maxItems")Integer maxItems, @QueryParam("maxPathDepth")Integer maxPathDepth, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.query.QueryEngineSettingsService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo orgApacheJackrabbitOakQueryQueryEngineSettingsService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("queryLimitInMemory")Integer queryLimitInMemory, @QueryParam("queryLimitReads")Integer queryLimitReads, @QueryParam("queryFailTraversal")Boolean queryFailTraversal, @QueryParam("fastQuerySize")Boolean fastQuerySize);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.AuthenticationConfigurationImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.jackrabbit.oak.authentication.appName")String orgApacheJackrabbitOakAuthenticationAppName, @QueryParam("org.apache.jackrabbit.oak.authentication.configSpiName")String orgApacheJackrabbitOakAuthenticationConfigSpiName);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("provider.name")String providerName, @QueryParam("host.name")String hostName, @QueryParam("host.port")Integer hostPort, @QueryParam("host.ssl")Boolean hostSsl, @QueryParam("host.tls")Boolean hostTls, @QueryParam("host.noCertCheck")Boolean hostNoCertCheck, @QueryParam("bind.dn")String bindDn, @QueryParam("bind.password")String bindPassword, @QueryParam("searchTimeout")String searchTimeout, @QueryParam("adminPool.maxActive")Integer adminPoolMaxActive, @QueryParam("adminPool.lookupOnValidate")Boolean adminPoolLookupOnValidate, @QueryParam("userPool.maxActive")Integer userPoolMaxActive, @QueryParam("userPool.lookupOnValidate")Boolean userPoolLookupOnValidate, @QueryParam("user.baseDN")String userBaseDN, @QueryParam("user.objectclass")List<String> userObjectclass, @QueryParam("user.idAttribute")String userIdAttribute, @QueryParam("user.extraFilter")String userExtraFilter, @QueryParam("user.makeDnPath")Boolean userMakeDnPath, @QueryParam("group.baseDN")String groupBaseDN, @QueryParam("group.objectclass")List<String> groupObjectclass, @QueryParam("group.nameAttribute")String groupNameAttribute, @QueryParam("group.extraFilter")String groupExtraFilter, @QueryParam("group.makeDnPath")Boolean groupMakeDnPath, @QueryParam("group.memberAttribute")String groupMemberAttribute, @QueryParam("useUidForExtId")Boolean useUidForExtId, @QueryParam("customattributes")List<String> customattributes);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("tokenExpiration")String tokenExpiration, @QueryParam("tokenLength")String tokenLength, @QueryParam("tokenRefresh")Boolean tokenRefresh, @QueryParam("tokenCleanupThreshold")Integer tokenCleanupThreshold, @QueryParam("passwordHashAlgorithm")String passwordHashAlgorithm, @QueryParam("passwordHashIterations")Integer passwordHashIterations, @QueryParam("passwordSaltSize")Integer passwordSaltSize);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.security.authorization.AuthorizationConfigurationImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("permissionsJr2")String permissionsJr2, @QueryParam("importBehavior")String importBehavior, @QueryParam("readPaths")List<String> readPaths, @QueryParam("administrativePrincipals")List<String> administrativePrincipals, @QueryParam("configurationRanking")Integer configurationRanking);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.security.internal.SecurityProviderRegistration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("requiredServicePids")List<String> requiredServicePids, @QueryParam("authorizationCompositionType")String authorizationCompositionType);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.security.user.RandomAuthorizableNodeName")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("length")Integer length);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.security.user.UserConfigurationImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo orgApacheJackrabbitOakSecurityUserUserConfigurationImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("usersPath")String usersPath, @QueryParam("groupsPath")String groupsPath, @QueryParam("systemRelativePath")String systemRelativePath, @QueryParam("defaultDepth")Integer defaultDepth, @QueryParam("importBehavior")String importBehavior, @QueryParam("passwordHashAlgorithm")String passwordHashAlgorithm, @QueryParam("passwordHashIterations")Integer passwordHashIterations, @QueryParam("passwordSaltSize")Integer passwordSaltSize, @QueryParam("omitAdminPw")Boolean omitAdminPw, @QueryParam("supportAutoSave")Boolean supportAutoSave, @QueryParam("passwordMaxAge")Integer passwordMaxAge, @QueryParam("initialPasswordChange")Boolean initialPasswordChange, @QueryParam("passwordHistorySize")Integer passwordHistorySize, @QueryParam("passwordExpiryForAdmin")Boolean passwordExpiryForAdmin, @QueryParam("cacheExpiration")Integer cacheExpiration, @QueryParam("enableRFC7613UsercaseMappedProfile")Boolean enableRFC7613UsercaseMappedProfile);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.segment.azure.AzureSegmentStoreService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("accountName")String accountName, @QueryParam("containerName")String containerName, @QueryParam("accessKey")String accessKey, @QueryParam("rootPath")String rootPath, @QueryParam("connectionURL")String connectionURL);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo orgApacheJackrabbitOakSegmentSegmentNodeStoreFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("repository.home")String repositoryHome, @QueryParam("tarmk.mode")String tarmkMode, @QueryParam("tarmk.size")Integer tarmkSize, @QueryParam("segmentCache.size")Integer segmentCacheSize, @QueryParam("stringCache.size")Integer stringCacheSize, @QueryParam("templateCache.size")Integer templateCacheSize, @QueryParam("stringDeduplicationCache.size")Integer stringDeduplicationCacheSize, @QueryParam("templateDeduplicationCache.size")Integer templateDeduplicationCacheSize, @QueryParam("nodeDeduplicationCache.size")Integer nodeDeduplicationCacheSize, @QueryParam("pauseCompaction")Boolean pauseCompaction, @QueryParam("compaction.retryCount")Integer compactionRetryCount, @QueryParam("compaction.force.timeout")Integer compactionForceTimeout, @QueryParam("compaction.sizeDeltaEstimation")Integer compactionSizeDeltaEstimation, @QueryParam("compaction.disableEstimation")Boolean compactionDisableEstimation, @QueryParam("compaction.retainedGenerations")Integer compactionRetainedGenerations, @QueryParam("compaction.memoryThreshold")Integer compactionMemoryThreshold, @QueryParam("compaction.progressLog")Integer compactionProgressLog, @QueryParam("standby")Boolean standby, @QueryParam("customBlobStore")Boolean customBlobStore, @QueryParam("customSegmentStore")Boolean customSegmentStore, @QueryParam("splitPersistence")Boolean splitPersistence, @QueryParam("repository.backup.dir")String repositoryBackupDir, @QueryParam("blobGcMaxAgeInSecs")Integer blobGcMaxAgeInSecs, @QueryParam("blobTrackSnapshotIntervalInSecs")Integer blobTrackSnapshotIntervalInSecs, @QueryParam("role")String role, @QueryParam("registerDescriptors")Boolean registerDescriptors, @QueryParam("dispatchChanges")Boolean dispatchChanges);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreMonitorService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("commitsTrackerWriterGroups")List<String> commitsTrackerWriterGroups);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo orgApacheJackrabbitOakSegmentSegmentNodeStoreService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("repository.home")String repositoryHome, @QueryParam("tarmk.mode")String tarmkMode, @QueryParam("tarmk.size")Integer tarmkSize, @QueryParam("segmentCache.size")Integer segmentCacheSize, @QueryParam("stringCache.size")Integer stringCacheSize, @QueryParam("templateCache.size")Integer templateCacheSize, @QueryParam("stringDeduplicationCache.size")Integer stringDeduplicationCacheSize, @QueryParam("templateDeduplicationCache.size")Integer templateDeduplicationCacheSize, @QueryParam("nodeDeduplicationCache.size")Integer nodeDeduplicationCacheSize, @QueryParam("pauseCompaction")Boolean pauseCompaction, @QueryParam("compaction.retryCount")Integer compactionRetryCount, @QueryParam("compaction.force.timeout")Integer compactionForceTimeout, @QueryParam("compaction.sizeDeltaEstimation")Integer compactionSizeDeltaEstimation, @QueryParam("compaction.disableEstimation")Boolean compactionDisableEstimation, @QueryParam("compaction.retainedGenerations")Integer compactionRetainedGenerations, @QueryParam("compaction.memoryThreshold")Integer compactionMemoryThreshold, @QueryParam("compaction.progressLog")Integer compactionProgressLog, @QueryParam("standby")Boolean standby, @QueryParam("customBlobStore")Boolean customBlobStore, @QueryParam("customSegmentStore")Boolean customSegmentStore, @QueryParam("splitPersistence")Boolean splitPersistence, @QueryParam("repository.backup.dir")String repositoryBackupDir, @QueryParam("blobGcMaxAgeInSecs")Integer blobGcMaxAgeInSecs, @QueryParam("blobTrackSnapshotIntervalInSecs")Integer blobTrackSnapshotIntervalInSecs);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.segment.standby.store.StandbyStoreService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.sling.installer.configuration.persist")Boolean orgApacheSlingInstallerConfigurationPersist, @QueryParam("mode")String mode, @QueryParam("port")Integer port, @QueryParam("primary.host")String primaryHost, @QueryParam("interval")Integer interval, @QueryParam("primary.allowed-client-ip-ranges")List<String> primaryAllowedClientIpRanges, @QueryParam("secure")Boolean secure, @QueryParam("standby.readtimeout")Integer standbyReadtimeout, @QueryParam("standby.autoclean")Boolean standbyAutoclean);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.DefaultSyncHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("handler.name")String handlerName, @QueryParam("user.expirationTime")String userExpirationTime, @QueryParam("user.autoMembership")List<String> userAutoMembership, @QueryParam("user.propertyMapping")List<String> userPropertyMapping, @QueryParam("user.pathPrefix")String userPathPrefix, @QueryParam("user.membershipExpTime")String userMembershipExpTime, @QueryParam("user.membershipNestingDepth")Integer userMembershipNestingDepth, @QueryParam("user.dynamicMembership")Boolean userDynamicMembership, @QueryParam("user.disableMissing")Boolean userDisableMissing, @QueryParam("group.expirationTime")String groupExpirationTime, @QueryParam("group.autoMembership")List<String> groupAutoMembership, @QueryParam("group.propertyMapping")List<String> groupPropertyMapping, @QueryParam("group.pathPrefix")String groupPathPrefix, @QueryParam("enableRFC7613UsercaseMappedProfile")Boolean enableRFC7613UsercaseMappedProfile);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.ExternalLoginModuleFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("jaas.ranking")Integer jaasRanking, @QueryParam("jaas.controlFlag")String jaasControlFlag, @QueryParam("jaas.realmName")String jaasRealmName, @QueryParam("idp.name")String idpName, @QueryParam("sync.handlerName")String syncHandlerName);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.principal.ExternalPrincipalConfiguration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("protectExternalId")Boolean protectExternalId);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugConfiguration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("cugSupportedPaths")List<String> cugSupportedPaths, @QueryParam("cugEnabled")Boolean cugEnabled, @QueryParam("configurationRanking")Integer configurationRanking);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugExcludeImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("principalNames")List<String> principalNames);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabledActions")String enabledActions, @QueryParam("userPrivilegeNames")List<String> userPrivilegeNames, @QueryParam("groupPrivilegeNames")List<String> groupPrivilegeNames, @QueryParam("constraint")String constraint);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.vault.packaging.impl.PackagingImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitVaultPackagingImplPackagingImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitVaultPackagingImplPackagingImplInfo orgApacheJackrabbitVaultPackagingImplPackagingImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("packageRoots")List<String> packageRoots);

    @POST
    @Path("/system/console/configMgr/org.apache.jackrabbit.vault.packaging.registry.impl.FSPackageRegistry")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("homePath")String homePath);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.auth.core.impl.LogoutServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingAuthCoreImplLogoutServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingAuthCoreImplLogoutServletInfo orgApacheSlingAuthCoreImplLogoutServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.methods")List<String> slingServletMethods, @QueryParam("sling.servlet.paths")String slingServletPaths);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationBindingsValueProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo orgApacheSlingCaconfigImplConfigurationBindingsValueProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationResolverImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCaconfigImplConfigurationResolverImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCaconfigImplConfigurationResolverImplInfo orgApacheSlingCaconfigImplConfigurationResolverImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("configBucketNames")List<String> configBucketNames);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationInheritanceStrategy")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled, @QueryParam("configPropertyInheritancePropertyNames")List<String> configPropertyInheritancePropertyNames);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationPersistenceStrategy")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.caconfig.impl.override.OsgiConfigurationOverrideProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("description")String description, @QueryParam("overrides")List<String> overrides, @QueryParam("enabled")Boolean enabled, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.caconfig.impl.override.SystemPropertyConfigurationOverrideProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.caconfig.management.impl.ConfigurationManagementSettingsImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo orgApacheSlingCaconfigManagementImplConfigurationManagementSetti(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("ignorePropertyNameRegex")List<String> ignorePropertyNameRegex, @QueryParam("configCollectionPropertiesResourceNames")List<String> configCollectionPropertiesResourceNames);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultConfigurationResourceResolvingStrategy")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled, @QueryParam("configPath")String configPath, @QueryParam("fallbackPaths")List<String> fallbackPaths, @QueryParam("configCollectionInheritancePropertyNames")List<String> configCollectionInheritancePropertyNames);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultContextPathStrategy")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("enabled")Boolean enabled, @QueryParam("configRefResourceNames")List<String> configRefResourceNames, @QueryParam("configRefPropertyNames")List<String> configRefPropertyNames, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.html.internal.TagsoupHtmlParser")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo orgApacheSlingCommonsHtmlInternalTagsoupHtmlParser(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("parser.features")List<String> parserFeatures);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.log.LogManager")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsLogLogManagerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsLogLogManagerInfo orgApacheSlingCommonsLogLogManager(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.sling.commons.log.level")String orgApacheSlingCommonsLogLevel, @QueryParam("org.apache.sling.commons.log.file")String orgApacheSlingCommonsLogFile, @QueryParam("org.apache.sling.commons.log.file.number")Integer orgApacheSlingCommonsLogFileNumber, @QueryParam("org.apache.sling.commons.log.file.size")String orgApacheSlingCommonsLogFileSize, @QueryParam("org.apache.sling.commons.log.pattern")String orgApacheSlingCommonsLogPattern, @QueryParam("org.apache.sling.commons.log.configurationFile")String orgApacheSlingCommonsLogConfigurationFile, @QueryParam("org.apache.sling.commons.log.packagingDataEnabled")Boolean orgApacheSlingCommonsLogPackagingDataEnabled, @QueryParam("org.apache.sling.commons.log.maxCallerDataDepth")Integer orgApacheSlingCommonsLogMaxCallerDataDepth, @QueryParam("org.apache.sling.commons.log.maxOldFileCountInDump")Integer orgApacheSlingCommonsLogMaxOldFileCountInDump, @QueryParam("org.apache.sling.commons.log.numOfLines")Integer orgApacheSlingCommonsLogNumOfLines);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.config")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsLogLogManagerFactoryConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsLogLogManagerFactoryConfigInfo orgApacheSlingCommonsLogLogManagerFactoryConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.sling.commons.log.level")String orgApacheSlingCommonsLogLevel, @QueryParam("org.apache.sling.commons.log.file")String orgApacheSlingCommonsLogFile, @QueryParam("org.apache.sling.commons.log.pattern")String orgApacheSlingCommonsLogPattern, @QueryParam("org.apache.sling.commons.log.names")List<String> orgApacheSlingCommonsLogNames, @QueryParam("org.apache.sling.commons.log.additiv")Boolean orgApacheSlingCommonsLogAdditiv);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.writer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsLogLogManagerFactoryWriterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsLogLogManagerFactoryWriterInfo orgApacheSlingCommonsLogLogManagerFactoryWriter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.sling.commons.log.file")String orgApacheSlingCommonsLogFile, @QueryParam("org.apache.sling.commons.log.file.number")Integer orgApacheSlingCommonsLogFileNumber, @QueryParam("org.apache.sling.commons.log.file.size")String orgApacheSlingCommonsLogFileSize, @QueryParam("org.apache.sling.commons.log.file.buffered")Boolean orgApacheSlingCommonsLogFileBuffered);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.metrics.internal.LogReporter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsMetricsInternalLogReporterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsMetricsInternalLogReporterInfo orgApacheSlingCommonsMetricsInternalLogReporter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("period")Integer period, @QueryParam("timeUnit")String timeUnit, @QueryParam("level")String level, @QueryParam("loggerName")String loggerName, @QueryParam("prefix")String prefix, @QueryParam("pattern")String pattern, @QueryParam("registryName")String registryName);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.metrics.rrd4j.impl.CodahaleMetricsReporter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("datasources")List<String> datasources, @QueryParam("step")Integer step, @QueryParam("archives")List<String> archives, @QueryParam("path")String path);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.mime.internal.MimeTypeServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo orgApacheSlingCommonsMimeInternalMimeTypeServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("mime.types")List<String> mimeTypes);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.scheduler.impl.QuartzScheduler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo orgApacheSlingCommonsSchedulerImplQuartzScheduler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("poolName")String poolName, @QueryParam("allowedPoolNames")List<String> allowedPoolNames, @QueryParam("scheduler.useleaderforsingle")Boolean schedulerUseleaderforsingle, @QueryParam("metrics.filters")List<String> metricsFilters, @QueryParam("slowThresholdMillis")Integer slowThresholdMillis);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.scheduler.impl.SchedulerHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo orgApacheSlingCommonsSchedulerImplSchedulerHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("max.quartzJob.duration.acceptable")Integer maxQuartzJobDurationAcceptable);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.commons.threads.impl.DefaultThreadPool.factory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("minPoolSize")Integer minPoolSize, @QueryParam("maxPoolSize")Integer maxPoolSize, @QueryParam("queueSize")Integer queueSize, @QueryParam("maxThreadAge")Integer maxThreadAge, @QueryParam("keepAliveTime")Integer keepAliveTime, @QueryParam("blockPolicy")String blockPolicy, @QueryParam("shutdownGraceful")Boolean shutdownGraceful, @QueryParam("daemon")Boolean daemon, @QueryParam("shutdownWaitTime")Integer shutdownWaitTime, @QueryParam("priority")String priority);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.datasource.DataSourceFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDatasourceDataSourceFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDatasourceDataSourceFactoryInfo orgApacheSlingDatasourceDataSourceFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("datasource.name")String datasourceName, @QueryParam("datasource.svc.prop.name")String datasourceSvcPropName, @QueryParam("driverClassName")String driverClassName, @QueryParam("url")String url, @QueryParam("username")String username, @QueryParam("password")String password, @QueryParam("defaultAutoCommit")String defaultAutoCommit, @QueryParam("defaultReadOnly")String defaultReadOnly, @QueryParam("defaultTransactionIsolation")String defaultTransactionIsolation, @QueryParam("defaultCatalog")String defaultCatalog, @QueryParam("maxActive")Integer maxActive, @QueryParam("maxIdle")Integer maxIdle, @QueryParam("minIdle")Integer minIdle, @QueryParam("initialSize")Integer initialSize, @QueryParam("maxWait")Integer maxWait, @QueryParam("maxAge")Integer maxAge, @QueryParam("testOnBorrow")Boolean testOnBorrow, @QueryParam("testOnReturn")Boolean testOnReturn, @QueryParam("testWhileIdle")Boolean testWhileIdle, @QueryParam("validationQuery")String validationQuery, @QueryParam("validationQueryTimeout")Integer validationQueryTimeout, @QueryParam("timeBetweenEvictionRunsMillis")Integer timeBetweenEvictionRunsMillis, @QueryParam("minEvictableIdleTimeMillis")Integer minEvictableIdleTimeMillis, @QueryParam("connectionProperties")String connectionProperties, @QueryParam("initSQL")String initSQL, @QueryParam("jdbcInterceptors")String jdbcInterceptors, @QueryParam("validationInterval")Integer validationInterval, @QueryParam("logValidationErrors")Boolean logValidationErrors, @QueryParam("datasource.svc.properties")List<String> datasourceSvcProperties);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.datasource.JNDIDataSourceFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDatasourceJNDIDataSourceFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDatasourceJNDIDataSourceFactoryInfo orgApacheSlingDatasourceJNDIDataSourceFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("datasource.name")String datasourceName, @QueryParam("datasource.svc.prop.name")String datasourceSvcPropName, @QueryParam("datasource.jndi.name")String datasourceJndiName, @QueryParam("jndi.properties")List<String> jndiProperties);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.discovery.oak.Config")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDiscoveryOakConfigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDiscoveryOakConfigInfo orgApacheSlingDiscoveryOakConfig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("connectorPingTimeout")Integer connectorPingTimeout, @QueryParam("connectorPingInterval")Integer connectorPingInterval, @QueryParam("discoveryLiteCheckInterval")Integer discoveryLiteCheckInterval, @QueryParam("clusterSyncServiceTimeout")Integer clusterSyncServiceTimeout, @QueryParam("clusterSyncServiceInterval")Integer clusterSyncServiceInterval, @QueryParam("enableSyncToken")Boolean enableSyncToken, @QueryParam("minEventDelay")Integer minEventDelay, @QueryParam("socketConnectTimeout")Integer socketConnectTimeout, @QueryParam("soTimeout")Integer soTimeout, @QueryParam("topologyConnectorUrls")List<String> topologyConnectorUrls, @QueryParam("topologyConnectorWhitelist")List<String> topologyConnectorWhitelist, @QueryParam("autoStopLocalLoopEnabled")Boolean autoStopLocalLoopEnabled, @QueryParam("gzipConnectorRequestsEnabled")Boolean gzipConnectorRequestsEnabled, @QueryParam("hmacEnabled")Boolean hmacEnabled, @QueryParam("enableEncryption")Boolean enableEncryption, @QueryParam("sharedKey")String sharedKey, @QueryParam("hmacSharedKeyTTL")Integer hmacSharedKeyTTL, @QueryParam("backoffStandbyFactor")String backoffStandbyFactor, @QueryParam("backoffStableFactor")String backoffStableFactor);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.discovery.oak.SynchronizedClocksHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.name")String hcName, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("hc.mbean.name")String hcMbeanName);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.agent.impl.ForwardDistributionAgentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo orgApacheSlingDistributionAgentImplForwardDistributionAgentFacto(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("title")String title, @QueryParam("details")String details, @QueryParam("enabled")Boolean enabled, @QueryParam("serviceName")String serviceName, @QueryParam("log.level")String logLevel, @QueryParam("allowed.roots")List<String> allowedRoots, @QueryParam("queue.processing.enabled")Boolean queueProcessingEnabled, @QueryParam("packageImporter.endpoints")List<String> packageImporterEndpoints, @QueryParam("passiveQueues")List<String> passiveQueues, @QueryParam("priorityQueues")List<String> priorityQueues, @QueryParam("retry.strategy")String retryStrategy, @QueryParam("retry.attempts")Integer retryAttempts, @QueryParam("requestAuthorizationStrategy.target")String requestAuthorizationStrategyTarget, @QueryParam("transportSecretProvider.target")String transportSecretProviderTarget, @QueryParam("packageBuilder.target")String packageBuilderTarget, @QueryParam("triggers.target")String triggersTarget, @QueryParam("queue.provider")String queueProvider, @QueryParam("async.delivery")Boolean asyncDelivery, @QueryParam("http.conn.timeout")Integer httpConnTimeout);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.agent.impl.PrivilegeDistributionRequestAuthorizationStrategyFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("jcrPrivilege")String jcrPrivilege);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.agent.impl.QueueDistributionAgentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo orgApacheSlingDistributionAgentImplQueueDistributionAgentFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("title")String title, @QueryParam("details")String details, @QueryParam("enabled")Boolean enabled, @QueryParam("serviceName")String serviceName, @QueryParam("log.level")String logLevel, @QueryParam("allowed.roots")List<String> allowedRoots, @QueryParam("requestAuthorizationStrategy.target")String requestAuthorizationStrategyTarget, @QueryParam("queueProviderFactory.target")String queueProviderFactoryTarget, @QueryParam("packageBuilder.target")String packageBuilderTarget, @QueryParam("triggers.target")String triggersTarget, @QueryParam("priorityQueues")List<String> priorityQueues);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.agent.impl.ReverseDistributionAgentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo orgApacheSlingDistributionAgentImplReverseDistributionAgentFacto(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("title")String title, @QueryParam("details")String details, @QueryParam("enabled")Boolean enabled, @QueryParam("serviceName")String serviceName, @QueryParam("log.level")String logLevel, @QueryParam("queue.processing.enabled")Boolean queueProcessingEnabled, @QueryParam("packageExporter.endpoints")List<String> packageExporterEndpoints, @QueryParam("pull.items")Integer pullItems, @QueryParam("http.conn.timeout")Integer httpConnTimeout, @QueryParam("requestAuthorizationStrategy.target")String requestAuthorizationStrategyTarget, @QueryParam("transportSecretProvider.target")String transportSecretProviderTarget, @QueryParam("packageBuilder.target")String packageBuilderTarget, @QueryParam("triggers.target")String triggersTarget);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.agent.impl.SimpleDistributionAgentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("title")String title, @QueryParam("details")String details, @QueryParam("enabled")Boolean enabled, @QueryParam("serviceName")String serviceName, @QueryParam("log.level")String logLevel, @QueryParam("queue.processing.enabled")Boolean queueProcessingEnabled, @QueryParam("packageExporter.target")String packageExporterTarget, @QueryParam("packageImporter.target")String packageImporterTarget, @QueryParam("requestAuthorizationStrategy.target")String requestAuthorizationStrategyTarget, @QueryParam("triggers.target")String triggersTarget);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.agent.impl.SyncDistributionAgentFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo orgApacheSlingDistributionAgentImplSyncDistributionAgentFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("title")String title, @QueryParam("details")String details, @QueryParam("enabled")Boolean enabled, @QueryParam("serviceName")String serviceName, @QueryParam("log.level")String logLevel, @QueryParam("queue.processing.enabled")Boolean queueProcessingEnabled, @QueryParam("passiveQueues")List<String> passiveQueues, @QueryParam("packageExporter.endpoints")List<String> packageExporterEndpoints, @QueryParam("packageImporter.endpoints")List<String> packageImporterEndpoints, @QueryParam("retry.strategy")String retryStrategy, @QueryParam("retry.attempts")Integer retryAttempts, @QueryParam("pull.items")Integer pullItems, @QueryParam("http.conn.timeout")Integer httpConnTimeout, @QueryParam("requestAuthorizationStrategy.target")String requestAuthorizationStrategyTarget, @QueryParam("transportSecretProvider.target")String transportSecretProviderTarget, @QueryParam("packageBuilder.target")String packageBuilderTarget, @QueryParam("triggers.target")String triggersTarget);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.monitor.DistributionQueueHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo orgApacheSlingDistributionMonitorDistributionQueueHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.name")String hcName, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("hc.mbean.name")String hcMbeanName, @QueryParam("numberOfRetriesAllowed")Integer numberOfRetriesAllowed);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.AgentDistributionPackageExporterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo orgApacheSlingDistributionPackagingImplExporterAgentDistributio(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("queue")String queue, @QueryParam("drop.invalid.items")Boolean dropInvalidItems, @QueryParam("agent.target")String agentTarget);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.LocalDistributionPackageExporterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo orgApacheSlingDistributionPackagingImplExporterLocalDistributio(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("packageBuilder.target")String packageBuilderTarget);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.RemoteDistributionPackageExporterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo orgApacheSlingDistributionPackagingImplExporterRemoteDistributi(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("endpoints")List<String> endpoints, @QueryParam("pull.items")Integer pullItems, @QueryParam("packageBuilder.target")String packageBuilderTarget, @QueryParam("transportSecretProvider.target")String transportSecretProviderTarget);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.LocalDistributionPackageImporterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo orgApacheSlingDistributionPackagingImplImporterLocalDistributio(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("packageBuilder.target")String packageBuilderTarget);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RemoteDistributionPackageImporterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo orgApacheSlingDistributionPackagingImplImporterRemoteDistributi(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("endpoints")List<String> endpoints, @QueryParam("transportSecretProvider.target")String transportSecretProviderTarget);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RepositoryDistributionPackageImporterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo orgApacheSlingDistributionPackagingImplImporterRepositoryDistri(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("service.name")String serviceName, @QueryParam("path")String path, @QueryParam("privilege.name")String privilegeName);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionConfigurationResourceProviderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionResourcesImplDistributionConfigurationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionResourcesImplDistributionConfigurationInfo orgApacheSlingDistributionResourcesImplDistributionConfiguration(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("provider.roots")String providerRoots, @QueryParam("kind")String kind);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionServiceResourceProviderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionResourcesImplDistributionServiceResourInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionResourcesImplDistributionServiceResourInfo orgApacheSlingDistributionResourcesImplDistributionServiceResour(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("provider.roots")String providerRoots, @QueryParam("kind")String kind);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.serialization.impl.DistributionPackageBuilderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionSerializationImplDistributionPackageBuInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionSerializationImplDistributionPackageBuInfo orgApacheSlingDistributionSerializationImplDistributionPackageBu(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("type")String type, @QueryParam("format.target")String formatTarget, @QueryParam("tempFsFolder")String tempFsFolder, @QueryParam("fileThreshold")Integer fileThreshold, @QueryParam("memoryUnit")String memoryUnit, @QueryParam("useOffHeapMemory")Boolean useOffHeapMemory, @QueryParam("digestAlgorithm")String digestAlgorithm, @QueryParam("monitoringQueueSize")Integer monitoringQueueSize, @QueryParam("cleanupDelay")Integer cleanupDelay, @QueryParam("package.filters")List<String> packageFilters, @QueryParam("property.filters")List<String> propertyFilters);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.serialization.impl.vlt.VaultDistributionPackageBuilderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionSerializationImplVltVaultDistributionInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionSerializationImplVltVaultDistributionInfo orgApacheSlingDistributionSerializationImplVltVaultDistribution(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("type")String type, @QueryParam("importMode")String importMode, @QueryParam("aclHandling")String aclHandling, @QueryParam("package.roots")String packageRoots, @QueryParam("package.filters")List<String> packageFilters, @QueryParam("property.filters")List<String> propertyFilters, @QueryParam("tempFsFolder")String tempFsFolder, @QueryParam("useBinaryReferences")Boolean useBinaryReferences, @QueryParam("autoSaveThreshold")Integer autoSaveThreshold, @QueryParam("cleanupDelay")Integer cleanupDelay, @QueryParam("fileThreshold")Integer fileThreshold, @QueryParam("MEGA_BYTES")String MEGA_BYTES, @QueryParam("useOffHeapMemory")Boolean useOffHeapMemory, @QueryParam("digestAlgorithm")String digestAlgorithm, @QueryParam("monitoringQueueSize")Integer monitoringQueueSize, @QueryParam("pathsMapping")List<String> pathsMapping, @QueryParam("strictImport")Boolean strictImport);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.transport.impl.UserCredentialsDistributionTransportSecretProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo orgApacheSlingDistributionTransportImplUserCredentialsDistributi(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("username")String username, @QueryParam("password")String password);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.trigger.impl.DistributionEventDistributeDistributionTriggerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo orgApacheSlingDistributionTriggerImplDistributionEventDistribute(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("path")String path);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.trigger.impl.JcrEventDistributionTriggerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo orgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("path")String path, @QueryParam("ignoredPathsPatterns")List<String> ignoredPathsPatterns, @QueryParam("serviceName")String serviceName, @QueryParam("deep")Boolean deep);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.trigger.impl.PersistedJcrEventDistributionTriggerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("path")String path, @QueryParam("serviceName")String serviceName, @QueryParam("nuggetsPath")String nuggetsPath);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.trigger.impl.RemoteEventDistributionTriggerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("endpoint")String endpoint, @QueryParam("transportSecretProvider.target")String transportSecretProviderTarget);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.trigger.impl.ResourceEventDistributionTriggerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo orgApacheSlingDistributionTriggerImplResourceEventDistributionTr(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("path")String path);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.distribution.trigger.impl.ScheduledDistributionTriggerFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo orgApacheSlingDistributionTriggerImplScheduledDistributionTrigge(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("path")String path, @QueryParam("seconds")String seconds, @QueryParam("serviceName")String serviceName);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.engine.impl.auth.SlingAuthenticator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEngineImplAuthSlingAuthenticatorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEngineImplAuthSlingAuthenticatorInfo orgApacheSlingEngineImplAuthSlingAuthenticator(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("osgi.http.whiteboard.context.select")String osgiHttpWhiteboardContextSelect, @QueryParam("osgi.http.whiteboard.listener")String osgiHttpWhiteboardListener, @QueryParam("auth.sudo.cookie")String authSudoCookie, @QueryParam("auth.sudo.parameter")String authSudoParameter, @QueryParam("auth.annonymous")Boolean authAnnonymous, @QueryParam("sling.auth.requirements")List<String> slingAuthRequirements, @QueryParam("sling.auth.anonymous.user")String slingAuthAnonymousUser, @QueryParam("sling.auth.anonymous.password")String slingAuthAnonymousPassword, @QueryParam("auth.http")String authHttp, @QueryParam("auth.http.realm")String authHttpRealm, @QueryParam("auth.uri.suffix")List<String> authUriSuffix);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.engine.impl.debug.RequestProgressTrackerLogFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("extensions")List<String> extensions, @QueryParam("minDurationMs")Integer minDurationMs, @QueryParam("maxDurationMs")Integer maxDurationMs, @QueryParam("compactLogFormat")Boolean compactLogFormat);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.engine.impl.log.RequestLogger")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEngineImplLogRequestLoggerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEngineImplLogRequestLoggerInfo orgApacheSlingEngineImplLogRequestLogger(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("request.log.output")String requestLogOutput, @QueryParam("request.log.outputtype")Integer requestLogOutputtype, @QueryParam("request.log.enabled")Boolean requestLogEnabled, @QueryParam("access.log.output")String accessLogOutput, @QueryParam("access.log.outputtype")Integer accessLogOutputtype, @QueryParam("access.log.enabled")Boolean accessLogEnabled);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.engine.impl.log.RequestLoggerService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEngineImplLogRequestLoggerServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEngineImplLogRequestLoggerServiceInfo orgApacheSlingEngineImplLogRequestLoggerService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("request.log.service.format")String requestLogServiceFormat, @QueryParam("request.log.service.output")String requestLogServiceOutput, @QueryParam("request.log.service.outputtype")Integer requestLogServiceOutputtype, @QueryParam("request.log.service.onentry")Boolean requestLogServiceOnentry);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.engine.impl.SlingMainServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEngineImplSlingMainServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEngineImplSlingMainServletInfo orgApacheSlingEngineImplSlingMainServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.max.calls")Integer slingMaxCalls, @QueryParam("sling.max.inclusions")Integer slingMaxInclusions, @QueryParam("sling.trace.allow")Boolean slingTraceAllow, @QueryParam("sling.max.record.requests")Integer slingMaxRecordRequests, @QueryParam("sling.store.pattern.requests")List<String> slingStorePatternRequests, @QueryParam("sling.serverinfo")String slingServerinfo, @QueryParam("sling.additional.response.headers")List<String> slingAdditionalResponseHeaders);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.engine.parameters")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEngineParametersInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEngineParametersInfo orgApacheSlingEngineParameters(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.default.parameter.encoding")String slingDefaultParameterEncoding, @QueryParam("sling.default.max.parameters")Integer slingDefaultMaxParameters, @QueryParam("file.location")String fileLocation, @QueryParam("file.threshold")Integer fileThreshold, @QueryParam("file.max")Integer fileMax, @QueryParam("request.max")Integer requestMax, @QueryParam("sling.default.parameter.checkForAdditionalContainerParameters")Boolean slingDefaultParameterCheckForAdditionalContainerParameters);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.event.impl.EventingThreadPool")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEventImplEventingThreadPoolInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEventImplEventingThreadPoolInfo orgApacheSlingEventImplEventingThreadPool(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("minPoolSize")Integer minPoolSize);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.event.impl.jobs.DefaultJobManager")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEventImplJobsDefaultJobManagerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEventImplJobsDefaultJobManagerInfo orgApacheSlingEventImplJobsDefaultJobManager(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("queue.priority")String queuePriority, @QueryParam("queue.retries")Integer queueRetries, @QueryParam("queue.retrydelay")Integer queueRetrydelay, @QueryParam("queue.maxparallel")Integer queueMaxparallel);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.event.impl.jobs.jcr.PersistenceHandler")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEventImplJobsJcrPersistenceHandlerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEventImplJobsJcrPersistenceHandlerInfo orgApacheSlingEventImplJobsJcrPersistenceHandler(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("job.consumermanager.disableDistribution")Boolean jobConsumermanagerDisableDistribution, @QueryParam("startup.delay")Integer startupDelay, @QueryParam("cleanup.period")Integer cleanupPeriod);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.event.impl.jobs.JobConsumerManager")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEventImplJobsJobConsumerManagerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEventImplJobsJobConsumerManagerInfo orgApacheSlingEventImplJobsJobConsumerManager(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.sling.installer.configuration.persist")Boolean orgApacheSlingInstallerConfigurationPersist, @QueryParam("job.consumermanager.whitelist")List<String> jobConsumermanagerWhitelist, @QueryParam("job.consumermanager.blacklist")List<String> jobConsumermanagerBlacklist);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.event.jobs.QueueConfiguration")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingEventJobsQueueConfigurationInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingEventJobsQueueConfigurationInfo orgApacheSlingEventJobsQueueConfiguration(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("queue.name")String queueName, @QueryParam("queue.topics")List<String> queueTopics, @QueryParam("queue.type")String queueType, @QueryParam("queue.priority")String queuePriority, @QueryParam("queue.retries")Integer queueRetries, @QueryParam("queue.retrydelay")Integer queueRetrydelay, @QueryParam("queue.maxparallel")BigDecimal queueMaxparallel, @QueryParam("queue.keepJobs")Boolean queueKeepJobs, @QueryParam("queue.preferRunOnCreationInstance")Boolean queuePreferRunOnCreationInstance, @QueryParam("queue.threadPoolSize")Integer queueThreadPoolSize, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.extensions.webconsolesecurityprovider.internal.SlingWebConsoleSecurityProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("users")List<String> users, @QueryParam("groups")List<String> groups);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.featureflags.Feature")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingFeatureflagsFeatureInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingFeatureflagsFeatureInfo orgApacheSlingFeatureflagsFeature(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("description")String description, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.featureflags.impl.ConfiguredFeature")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingFeatureflagsImplConfiguredFeatureInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingFeatureflagsImplConfiguredFeatureInfo orgApacheSlingFeatureflagsImplConfiguredFeature(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("name")String name, @QueryParam("description")String description, @QueryParam("enabled")Boolean enabled);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.hapi.impl.HApiUtilImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingHapiImplHApiUtilImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingHapiImplHApiUtilImplInfo orgApacheSlingHapiImplHApiUtilImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.sling.hapi.tools.resourcetype")String orgApacheSlingHapiToolsResourcetype, @QueryParam("org.apache.sling.hapi.tools.collectionresourcetype")String orgApacheSlingHapiToolsCollectionresourcetype, @QueryParam("org.apache.sling.hapi.tools.searchpaths")List<String> orgApacheSlingHapiToolsSearchpaths, @QueryParam("org.apache.sling.hapi.tools.externalurl")String orgApacheSlingHapiToolsExternalurl, @QueryParam("org.apache.sling.hapi.tools.enabled")Boolean orgApacheSlingHapiToolsEnabled);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.hc.core.impl.CompositeHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingHcCoreImplCompositeHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingHcCoreImplCompositeHealthCheckInfo orgApacheSlingHcCoreImplCompositeHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.name")String hcName, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("hc.mbean.name")String hcMbeanName, @QueryParam("filter.tags")List<String> filterTags, @QueryParam("filter.combineTagsWithOr")Boolean filterCombineTagsWithOr);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.hc.core.impl.executor.HealthCheckExecutorImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("timeoutInMs")Integer timeoutInMs, @QueryParam("longRunningFutureThresholdForCriticalMs")Integer longRunningFutureThresholdForCriticalMs, @QueryParam("resultCacheTtlInMs")Integer resultCacheTtlInMs);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.hc.core.impl.JmxAttributeHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo orgApacheSlingHcCoreImplJmxAttributeHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.name")String hcName, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("hc.mbean.name")String hcMbeanName, @QueryParam("mbean.name")String mbeanName, @QueryParam("attribute.name")String attributeName, @QueryParam("attribute.value.constraint")String attributeValueConstraint);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.hc.core.impl.ScriptableHealthCheck")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingHcCoreImplScriptableHealthCheckInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingHcCoreImplScriptableHealthCheckInfo orgApacheSlingHcCoreImplScriptableHealthCheck(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("hc.name")String hcName, @QueryParam("hc.tags")List<String> hcTags, @QueryParam("hc.mbean.name")String hcMbeanName, @QueryParam("expression")String expression, @QueryParam("language.extension")String languageExtension);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.hc.core.impl.servlet.HealthCheckExecutorServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo orgApacheSlingHcCoreImplServletHealthCheckExecutorServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("servletPath")String servletPath, @QueryParam("disabled")Boolean disabled, @QueryParam("cors.accessControlAllowOrigin")String corsAccessControlAllowOrigin);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.hc.core.impl.servlet.ResultTxtVerboseSerializer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo orgApacheSlingHcCoreImplServletResultTxtVerboseSerializer(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("totalWidth")Integer totalWidth, @QueryParam("colWidthName")Integer colWidthName, @QueryParam("colWidthResult")Integer colWidthResult, @QueryParam("colWidthTiming")Integer colWidthTiming);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.i18n.impl.I18NFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingI18nImplI18NFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingI18nImplI18NFilterInfo orgApacheSlingI18nImplI18NFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("sling.filter.scope")List<String> slingFilterScope);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.i18n.impl.JcrResourceBundleProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingI18nImplJcrResourceBundleProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingI18nImplJcrResourceBundleProviderInfo orgApacheSlingI18nImplJcrResourceBundleProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("locale.default")String localeDefault, @QueryParam("preload.bundles")Boolean preloadBundles, @QueryParam("invalidation.delay")Integer invalidationDelay);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.installer.provider.jcr.impl.JcrInstaller")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingInstallerProviderJcrImplJcrInstallerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingInstallerProviderJcrImplJcrInstallerInfo orgApacheSlingInstallerProviderJcrImplJcrInstaller(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("handler.schemes")List<String> handlerSchemes, @QueryParam("sling.jcrinstall.folder.name.regexp")String slingJcrinstallFolderNameRegexp, @QueryParam("sling.jcrinstall.folder.max.depth")Integer slingJcrinstallFolderMaxDepth, @QueryParam("sling.jcrinstall.search.path")List<String> slingJcrinstallSearchPath, @QueryParam("sling.jcrinstall.new.config.path")String slingJcrinstallNewConfigPath, @QueryParam("sling.jcrinstall.signal.path")String slingJcrinstallSignalPath, @QueryParam("sling.jcrinstall.enable.writeback")Boolean slingJcrinstallEnableWriteback);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo orgApacheSlingJcrBaseInternalLoginAdminWhitelist(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("whitelist.bypass")Boolean whitelistBypass, @QueryParam("whitelist.bundles.regexp")String whitelistBundlesRegexp);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist.fragment")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("whitelist.name")String whitelistName, @QueryParam("whitelist.bundles")List<String> whitelistBundles);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrDavexImplServletsSlingDavExServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrDavexImplServletsSlingDavExServletInfo orgApacheSlingJcrDavexImplServletsSlingDavExServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("alias")String alias, @QueryParam("dav.create-absolute-uri")Boolean davCreateAbsoluteUri, @QueryParam("dav.protectedhandlers")String davProtectedhandlers);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.JndiRegistrationSupport")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo orgApacheSlingJcrJackrabbitServerJndiRegistrationSupport(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("java.naming.factory.initial")String javaNamingFactoryInitial, @QueryParam("java.naming.provider.url")String javaNamingProviderUrl);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.RmiRegistrationSupport")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo orgApacheSlingJcrJackrabbitServerRmiRegistrationSupport(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("port")Integer port);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.repoinit.impl.RepositoryInitializer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrRepoinitImplRepositoryInitializerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrRepoinitImplRepositoryInitializerInfo orgApacheSlingJcrRepoinitImplRepositoryInitializer(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("references")List<String> references);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.repoinit.RepositoryInitializer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrRepoinitRepositoryInitializerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrRepoinitRepositoryInitializerInfo orgApacheSlingJcrRepoinitRepositoryInitializer(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("references")List<String> references, @QueryParam("scripts")List<String> scripts);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrResourceResolverFactoryImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("resource.resolver.searchpath")List<String> resourceResolverSearchpath, @QueryParam("resource.resolver.manglenamespaces")Boolean resourceResolverManglenamespaces, @QueryParam("resource.resolver.allowDirect")Boolean resourceResolverAllowDirect, @QueryParam("resource.resolver.required.providers")List<String> resourceResolverRequiredProviders, @QueryParam("resource.resolver.required.providernames")List<String> resourceResolverRequiredProvidernames, @QueryParam("resource.resolver.virtual")List<String> resourceResolverVirtual, @QueryParam("resource.resolver.mapping")List<String> resourceResolverMapping, @QueryParam("resource.resolver.map.location")String resourceResolverMapLocation, @QueryParam("resource.resolver.map.observation")List<String> resourceResolverMapObservation, @QueryParam("resource.resolver.default.vanity.redirect.status")Integer resourceResolverDefaultVanityRedirectStatus, @QueryParam("resource.resolver.enable.vanitypath")Boolean resourceResolverEnableVanitypath, @QueryParam("resource.resolver.vanitypath.maxEntries")Integer resourceResolverVanitypathMaxEntries, @QueryParam("resource.resolver.vanitypath.maxEntries.startup")Boolean resourceResolverVanitypathMaxEntriesStartup, @QueryParam("resource.resolver.vanitypath.bloomfilter.maxBytes")Integer resourceResolverVanitypathBloomfilterMaxBytes, @QueryParam("resource.resolver.optimize.alias.resolution")Boolean resourceResolverOptimizeAliasResolution, @QueryParam("resource.resolver.vanitypath.whitelist")List<String> resourceResolverVanitypathWhitelist, @QueryParam("resource.resolver.vanitypath.blacklist")List<String> resourceResolverVanitypathBlacklist, @QueryParam("resource.resolver.vanity.precedence")Boolean resourceResolverVanityPrecedence, @QueryParam("resource.resolver.providerhandling.paranoid")Boolean resourceResolverProviderhandlingParanoid, @QueryParam("resource.resolver.log.closing")Boolean resourceResolverLogClosing, @QueryParam("resource.resolver.log.unclosed")Boolean resourceResolverLogUnclosed);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrSystemUserValidator")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo orgApacheSlingJcrResourceInternalJcrSystemUserValidator(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("allow.only.system.user")Boolean allowOnlySystemUser);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.resourcesecurity.impl.ResourceAccessGateFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("path")String path, @QueryParam("checkpath.prefix")String checkpathPrefix, @QueryParam("jcrPath")String jcrPath);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DefaultHandlerService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo orgApacheSlingJcrWebdavImplHandlerDefaultHandlerService(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("type.collections")String typeCollections, @QueryParam("type.noncollections")String typeNoncollections, @QueryParam("type.content")String typeContent);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DirListingExportHandlerService")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jcr.webdav.impl.servlets.SimpleWebDavServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo orgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("dav.root")String davRoot, @QueryParam("dav.create-absolute-uri")Boolean davCreateAbsoluteUri, @QueryParam("dav.realm")String davRealm, @QueryParam("collection.types")List<String> collectionTypes, @QueryParam("filter.prefixes")List<String> filterPrefixes, @QueryParam("filter.types")String filterTypes, @QueryParam("filter.uris")String filterUris, @QueryParam("type.collections")String typeCollections, @QueryParam("type.noncollections")String typeNoncollections, @QueryParam("type.content")String typeContent);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.jmx.provider.impl.JMXResourceProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingJmxProviderImplJMXResourceProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingJmxProviderImplJMXResourceProviderInfo orgApacheSlingJmxProviderImplJMXResourceProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("provider.roots")String providerRoots);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.models.impl.ModelAdapterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingModelsImplModelAdapterFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingModelsImplModelAdapterFactoryInfo orgApacheSlingModelsImplModelAdapterFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("osgi.http.whiteboard.listener")String osgiHttpWhiteboardListener, @QueryParam("osgi.http.whiteboard.context.select")String osgiHttpWhiteboardContextSelect, @QueryParam("max.recursion.depth")Integer maxRecursionDepth, @QueryParam("cleanup.job.period")Integer cleanupJobPeriod);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.models.jacksonexporter.impl.ResourceModuleProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo orgApacheSlingModelsJacksonexporterImplResourceModuleProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("max.recursion.levels")Integer maxRecursionLevels);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.resource.inventory.impl.ResourceInventoryPrinterFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo orgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("felix.inventory.printer.name")String felixInventoryPrinterName, @QueryParam("felix.inventory.printer.title")String felixInventoryPrinterTitle, @QueryParam("path")String path);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.resourcemerger.impl.MergedResourceProviderFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo orgApacheSlingResourcemergerImplMergedResourceProviderFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("merge.root")String mergeRoot, @QueryParam("merge.readOnly")Boolean mergeReadOnly);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.resourcemerger.picker.overriding")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingResourcemergerPickerOverridingInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingResourcemergerPickerOverridingInfo orgApacheSlingResourcemergerPickerOverriding(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("merge.root")String mergeRoot, @QueryParam("merge.readOnly")Boolean mergeReadOnly);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptCacheImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingScriptingCoreImplScriptCacheImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingScriptingCoreImplScriptCacheImplInfo orgApacheSlingScriptingCoreImplScriptCacheImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.sling.scripting.cache.size")Integer orgApacheSlingScriptingCacheSize, @QueryParam("org.apache.sling.scripting.cache.additional_extensions")List<String> orgApacheSlingScriptingCacheAdditionalExtensions);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptingResourceResolverProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo orgApacheSlingScriptingCoreImplScriptingResourceResolverProvider(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("log.stacktrace.onclose")Boolean logStacktraceOnclose);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.scripting.java.impl.JavaScriptEngineFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo orgApacheSlingScriptingJavaImplJavaScriptEngineFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("java.classdebuginfo")Boolean javaClassdebuginfo, @QueryParam("java.javaEncoding")String javaJavaEncoding, @QueryParam("java.compilerSourceVM")String javaCompilerSourceVM, @QueryParam("java.compilerTargetVM")String javaCompilerTargetVM);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.scripting.javascript.internal.RhinoJavaScriptEngineFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.sling.scripting.javascript.rhino.optLevel")Integer orgApacheSlingScriptingJavascriptRhinoOptLevel);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.scripting.jsp.JspScriptEngineFactory")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingScriptingJspJspScriptEngineFactoryInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingScriptingJspJspScriptEngineFactoryInfo orgApacheSlingScriptingJspJspScriptEngineFactory(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("jasper.compilerTargetVM")String jasperCompilerTargetVM, @QueryParam("jasper.compilerSourceVM")String jasperCompilerSourceVM, @QueryParam("jasper.classdebuginfo")Boolean jasperClassdebuginfo, @QueryParam("jasper.enablePooling")Boolean jasperEnablePooling, @QueryParam("jasper.ieClassId")String jasperIeClassId, @QueryParam("jasper.genStringAsCharArray")Boolean jasperGenStringAsCharArray, @QueryParam("jasper.keepgenerated")Boolean jasperKeepgenerated, @QueryParam("jasper.mappedfile")Boolean jasperMappedfile, @QueryParam("jasper.trimSpaces")Boolean jasperTrimSpaces, @QueryParam("jasper.displaySourceFragments")Boolean jasperDisplaySourceFragments, @QueryParam("default.is.session")Boolean defaultIsSession);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.scripting.sightly.js.impl.jsapi.SlyBindingsValuesProvider")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("org.apache.sling.scripting.sightly.js.bindings")List<String> orgApacheSlingScriptingSightlyJsBindings);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.security.impl.ContentDispositionFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingSecurityImplContentDispositionFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingSecurityImplContentDispositionFilterInfo orgApacheSlingSecurityImplContentDispositionFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.content.disposition.paths")List<String> slingContentDispositionPaths, @QueryParam("sling.content.disposition.excluded.paths")List<String> slingContentDispositionExcludedPaths, @QueryParam("sling.content.disposition.all.paths")Boolean slingContentDispositionAllPaths);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.security.impl.ReferrerFilter")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingSecurityImplReferrerFilterInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingSecurityImplReferrerFilterInfo orgApacheSlingSecurityImplReferrerFilter(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("allow.empty")Boolean allowEmpty, @QueryParam("allow.hosts")List<String> allowHosts, @QueryParam("allow.hosts.regexp")List<String> allowHostsRegexp, @QueryParam("filter.methods")List<String> filterMethods, @QueryParam("exclude.agents.regexp")List<String> excludeAgentsRegexp);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingServiceusermappingImplServiceUserMapperImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingServiceusermappingImplServiceUserMapperImplInfo orgApacheSlingServiceusermappingImplServiceUserMapperImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("user.mapping")List<String> userMapping, @QueryParam("user.default")String userDefault, @QueryParam("user.enable.default.mapping")Boolean userEnableDefaultMapping, @QueryParam("require.validation")Boolean requireValidation);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo orgApacheSlingServiceusermappingImplServiceUserMapperImplAmended(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("service.ranking")Integer serviceRanking, @QueryParam("user.mapping")List<String> userMapping);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.servlets.get.DefaultGetServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingServletsGetDefaultGetServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingServletsGetDefaultGetServletInfo orgApacheSlingServletsGetDefaultGetServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("aliases")List<String> aliases, @QueryParam("index")Boolean index, @QueryParam("index.files")List<String> indexFiles, @QueryParam("enable.html")Boolean enableHtml, @QueryParam("enable.json")Boolean enableJson, @QueryParam("enable.txt")Boolean enableTxt, @QueryParam("enable.xml")Boolean enableXml, @QueryParam("json.maximumresults")Integer jsonMaximumresults, @QueryParam("ecmaSuport")Boolean ecmaSuport);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.servlets.get.impl.version.VersionInfoServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingServletsGetImplVersionVersionInfoServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingServletsGetImplVersionVersionInfoServletInfo orgApacheSlingServletsGetImplVersionVersionInfoServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.servlet.selectors")List<String> slingServletSelectors, @QueryParam("ecmaSuport")Boolean ecmaSuport);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.servlets.post.impl.helper.ChunkCleanUpTask")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo orgApacheSlingServletsPostImplHelperChunkCleanUpTask(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("scheduler.expression")String schedulerExpression, @QueryParam("scheduler.concurrent")Boolean schedulerConcurrent, @QueryParam("chunk.cleanup.age")Integer chunkCleanupAge);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.servlets.post.impl.SlingPostServlet")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingServletsPostImplSlingPostServletInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingServletsPostImplSlingPostServletInfo orgApacheSlingServletsPostImplSlingPostServlet(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("servlet.post.dateFormats")List<String> servletPostDateFormats, @QueryParam("servlet.post.nodeNameHints")List<String> servletPostNodeNameHints, @QueryParam("servlet.post.nodeNameMaxLength")Integer servletPostNodeNameMaxLength, @QueryParam("servlet.post.checkinNewVersionableNodes")Boolean servletPostCheckinNewVersionableNodes, @QueryParam("servlet.post.autoCheckout")Boolean servletPostAutoCheckout, @QueryParam("servlet.post.autoCheckin")Boolean servletPostAutoCheckin, @QueryParam("servlet.post.ignorePattern")String servletPostIgnorePattern);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.servlets.resolver.SlingServletResolver")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingServletsResolverSlingServletResolverInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingServletsResolverSlingServletResolverInfo orgApacheSlingServletsResolverSlingServletResolver(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("servletresolver.servletRoot")String servletresolverServletRoot, @QueryParam("servletresolver.cacheSize")Integer servletresolverCacheSize, @QueryParam("servletresolver.paths")List<String> servletresolverPaths, @QueryParam("servletresolver.defaultExtensions")List<String> servletresolverDefaultExtensions);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.settings.impl.SlingSettingsServiceImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingSettingsImplSlingSettingsServiceImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingSettingsImplSlingSettingsServiceImplInfo orgApacheSlingSettingsImplSlingSettingsServiceImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("sling.name")String slingName, @QueryParam("sling.description")String slingDescription);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.startupfilter.impl.StartupFilterImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingStartupfilterImplStartupFilterImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingStartupfilterImplStartupFilterImplInfo orgApacheSlingStartupfilterImplStartupFilterImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("active.by.default")Boolean activeByDefault, @QueryParam("default.message")String defaultMessage);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.tenant.internal.TenantProviderImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingTenantInternalTenantProviderImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingTenantInternalTenantProviderImplInfo orgApacheSlingTenantInternalTenantProviderImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("tenant.root")String tenantRoot, @QueryParam("tenant.path.matcher")List<String> tenantPathMatcher);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.tracer.internal.LogTracer")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingTracerInternalLogTracerInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingTracerInternalLogTracerInfo orgApacheSlingTracerInternalLogTracer(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("tracerSets")List<String> tracerSets, @QueryParam("enabled")Boolean enabled, @QueryParam("servletEnabled")Boolean servletEnabled, @QueryParam("recordingCacheSizeInMB")Integer recordingCacheSizeInMB, @QueryParam("recordingCacheDurationInSecs")Integer recordingCacheDurationInSecs, @QueryParam("recordingCompressionEnabled")Boolean recordingCompressionEnabled, @QueryParam("gzipResponse")Boolean gzipResponse);

    @POST
    @Path("/system/console/configMgr/org.apache.sling.xss.impl.XSSFilterImpl")
    @Produces({ "application/json", "text/plain" })
    @ApiOperation(value = "", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully retrieved configuration parameters", response = OrgApacheSlingXssImplXSSFilterImplInfo.class),
        @ApiResponse(code = 302, message = "Default response", response = String.class),
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    public OrgApacheSlingXssImplXSSFilterImplInfo orgApacheSlingXssImplXSSFilterImpl(@QueryParam("post")Boolean post, @QueryParam("apply")Boolean apply, @QueryParam("delete")Boolean delete, @QueryParam("action")String action, @QueryParam("$location")String $location, @QueryParam("propertylist")List<String> propertylist, @QueryParam("policyPath")String policyPath);
}

