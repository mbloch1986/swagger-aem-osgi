package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteAuthOauthImplGraniteProviderProperties._

case class ComAdobeGraniteAuthOauthImplGraniteProviderProperties (
  oauthProviderId: Option[ConfigNodePropertyString],
oauthProviderGraniteAuthorizationUrl: Option[ConfigNodePropertyString],
oauthProviderGraniteTokenUrl: Option[ConfigNodePropertyString],
oauthProviderGraniteProfileUrl: Option[ConfigNodePropertyString],
oauthProviderGraniteExtendedDetailsUrls: Option[ConfigNodePropertyString])

object ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteAuthOauthImplGraniteProviderPropertiesCodecJson: CodecJson[ComAdobeGraniteAuthOauthImplGraniteProviderProperties] = CodecJson.derive[ComAdobeGraniteAuthOauthImplGraniteProviderProperties]
  implicit val ComAdobeGraniteAuthOauthImplGraniteProviderPropertiesDecoder: EntityDecoder[ComAdobeGraniteAuthOauthImplGraniteProviderProperties] = jsonOf[ComAdobeGraniteAuthOauthImplGraniteProviderProperties]
  implicit val ComAdobeGraniteAuthOauthImplGraniteProviderPropertiesEncoder: EntityEncoder[ComAdobeGraniteAuthOauthImplGraniteProviderProperties] = jsonEncoderOf[ComAdobeGraniteAuthOauthImplGraniteProviderProperties]
}
