package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties._

case class ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties (
  hcTags: Option[ConfigNodePropertyArray])

object ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckPropertiesCodecJson: CodecJson[ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties] = CodecJson.derive[ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties]
  implicit val ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckPropertiesDecoder: EntityDecoder[ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties] = jsonOf[ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties]
  implicit val ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckPropertiesEncoder: EntityEncoder[ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties] = jsonEncoderOf[ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties]
}
