//
// ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct ComAdobeCqSocialConnectOauthImplTwitterProviderImplProperties: Codable {

    public var oauthProviderId: ConfigNodePropertyString?
    public var oauthCloudConfigRoot: ConfigNodePropertyString?
    public var providerConfigRoot: ConfigNodePropertyString?
    public var providerConfigUserFolder: ConfigNodePropertyDropDown?
    public var providerConfigTwitterEnableParams: ConfigNodePropertyBoolean?
    public var providerConfigTwitterParams: ConfigNodePropertyArray?
    public var providerConfigRefreshUserdataEnabled: ConfigNodePropertyBoolean?

    public init(oauthProviderId: ConfigNodePropertyString?, oauthCloudConfigRoot: ConfigNodePropertyString?, providerConfigRoot: ConfigNodePropertyString?, providerConfigUserFolder: ConfigNodePropertyDropDown?, providerConfigTwitterEnableParams: ConfigNodePropertyBoolean?, providerConfigTwitterParams: ConfigNodePropertyArray?, providerConfigRefreshUserdataEnabled: ConfigNodePropertyBoolean?) {
        self.oauthProviderId = oauthProviderId
        self.oauthCloudConfigRoot = oauthCloudConfigRoot
        self.providerConfigRoot = providerConfigRoot
        self.providerConfigUserFolder = providerConfigUserFolder
        self.providerConfigTwitterEnableParams = providerConfigTwitterEnableParams
        self.providerConfigTwitterParams = providerConfigTwitterParams
        self.providerConfigRefreshUserdataEnabled = providerConfigRefreshUserdataEnabled
    }

    public enum CodingKeys: String, CodingKey { 
        case oauthProviderId = "oauth.provider.id"
        case oauthCloudConfigRoot = "oauth.cloud.config.root"
        case providerConfigRoot = "provider.config.root"
        case providerConfigUserFolder = "provider.config.user.folder"
        case providerConfigTwitterEnableParams = "provider.config.twitter.enable.params"
        case providerConfigTwitterParams = "provider.config.twitter.params"
        case providerConfigRefreshUserdataEnabled = "provider.config.refresh.userdata.enabled"
    }


}

