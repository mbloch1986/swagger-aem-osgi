<?php
/**
 * ComAdobeGraniteAuthImsImplIMSProviderImplProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ComAdobeGraniteAuthImsImplIMSProviderImplProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ComAdobeGraniteAuthImsImplIMSProviderImplProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'comAdobeGraniteAuthImsImplIMSProviderImplProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'oauth_provider_id' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_provider_ims_authorization_url' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_provider_ims_token_url' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_provider_ims_profile_url' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_provider_ims_extended_details_urls' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'oauth_provider_ims_validate_token_url' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_provider_ims_session_property' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_provider_ims_service_token_client_id' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_provider_ims_service_token_client_secret' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_provider_ims_service_token' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'ims_org_ref' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'ims_group_mapping' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'oauth_provider_ims_only_license_group' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'oauth_provider_id' => null,
        'oauth_provider_ims_authorization_url' => null,
        'oauth_provider_ims_token_url' => null,
        'oauth_provider_ims_profile_url' => null,
        'oauth_provider_ims_extended_details_urls' => null,
        'oauth_provider_ims_validate_token_url' => null,
        'oauth_provider_ims_session_property' => null,
        'oauth_provider_ims_service_token_client_id' => null,
        'oauth_provider_ims_service_token_client_secret' => null,
        'oauth_provider_ims_service_token' => null,
        'ims_org_ref' => null,
        'ims_group_mapping' => null,
        'oauth_provider_ims_only_license_group' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'oauth_provider_id' => 'oauth.provider.id',
        'oauth_provider_ims_authorization_url' => 'oauth.provider.ims.authorization.url',
        'oauth_provider_ims_token_url' => 'oauth.provider.ims.token.url',
        'oauth_provider_ims_profile_url' => 'oauth.provider.ims.profile.url',
        'oauth_provider_ims_extended_details_urls' => 'oauth.provider.ims.extended.details.urls',
        'oauth_provider_ims_validate_token_url' => 'oauth.provider.ims.validate.token.url',
        'oauth_provider_ims_session_property' => 'oauth.provider.ims.session.property',
        'oauth_provider_ims_service_token_client_id' => 'oauth.provider.ims.service.token.client.id',
        'oauth_provider_ims_service_token_client_secret' => 'oauth.provider.ims.service.token.client.secret',
        'oauth_provider_ims_service_token' => 'oauth.provider.ims.service.token',
        'ims_org_ref' => 'ims.org.ref',
        'ims_group_mapping' => 'ims.group.mapping',
        'oauth_provider_ims_only_license_group' => 'oauth.provider.ims.only.license.group'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'oauth_provider_id' => 'setOauthProviderId',
        'oauth_provider_ims_authorization_url' => 'setOauthProviderImsAuthorizationUrl',
        'oauth_provider_ims_token_url' => 'setOauthProviderImsTokenUrl',
        'oauth_provider_ims_profile_url' => 'setOauthProviderImsProfileUrl',
        'oauth_provider_ims_extended_details_urls' => 'setOauthProviderImsExtendedDetailsUrls',
        'oauth_provider_ims_validate_token_url' => 'setOauthProviderImsValidateTokenUrl',
        'oauth_provider_ims_session_property' => 'setOauthProviderImsSessionProperty',
        'oauth_provider_ims_service_token_client_id' => 'setOauthProviderImsServiceTokenClientId',
        'oauth_provider_ims_service_token_client_secret' => 'setOauthProviderImsServiceTokenClientSecret',
        'oauth_provider_ims_service_token' => 'setOauthProviderImsServiceToken',
        'ims_org_ref' => 'setImsOrgRef',
        'ims_group_mapping' => 'setImsGroupMapping',
        'oauth_provider_ims_only_license_group' => 'setOauthProviderImsOnlyLicenseGroup'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'oauth_provider_id' => 'getOauthProviderId',
        'oauth_provider_ims_authorization_url' => 'getOauthProviderImsAuthorizationUrl',
        'oauth_provider_ims_token_url' => 'getOauthProviderImsTokenUrl',
        'oauth_provider_ims_profile_url' => 'getOauthProviderImsProfileUrl',
        'oauth_provider_ims_extended_details_urls' => 'getOauthProviderImsExtendedDetailsUrls',
        'oauth_provider_ims_validate_token_url' => 'getOauthProviderImsValidateTokenUrl',
        'oauth_provider_ims_session_property' => 'getOauthProviderImsSessionProperty',
        'oauth_provider_ims_service_token_client_id' => 'getOauthProviderImsServiceTokenClientId',
        'oauth_provider_ims_service_token_client_secret' => 'getOauthProviderImsServiceTokenClientSecret',
        'oauth_provider_ims_service_token' => 'getOauthProviderImsServiceToken',
        'ims_org_ref' => 'getImsOrgRef',
        'ims_group_mapping' => 'getImsGroupMapping',
        'oauth_provider_ims_only_license_group' => 'getOauthProviderImsOnlyLicenseGroup'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['oauth_provider_id'] = isset($data['oauth_provider_id']) ? $data['oauth_provider_id'] : null;
        $this->container['oauth_provider_ims_authorization_url'] = isset($data['oauth_provider_ims_authorization_url']) ? $data['oauth_provider_ims_authorization_url'] : null;
        $this->container['oauth_provider_ims_token_url'] = isset($data['oauth_provider_ims_token_url']) ? $data['oauth_provider_ims_token_url'] : null;
        $this->container['oauth_provider_ims_profile_url'] = isset($data['oauth_provider_ims_profile_url']) ? $data['oauth_provider_ims_profile_url'] : null;
        $this->container['oauth_provider_ims_extended_details_urls'] = isset($data['oauth_provider_ims_extended_details_urls']) ? $data['oauth_provider_ims_extended_details_urls'] : null;
        $this->container['oauth_provider_ims_validate_token_url'] = isset($data['oauth_provider_ims_validate_token_url']) ? $data['oauth_provider_ims_validate_token_url'] : null;
        $this->container['oauth_provider_ims_session_property'] = isset($data['oauth_provider_ims_session_property']) ? $data['oauth_provider_ims_session_property'] : null;
        $this->container['oauth_provider_ims_service_token_client_id'] = isset($data['oauth_provider_ims_service_token_client_id']) ? $data['oauth_provider_ims_service_token_client_id'] : null;
        $this->container['oauth_provider_ims_service_token_client_secret'] = isset($data['oauth_provider_ims_service_token_client_secret']) ? $data['oauth_provider_ims_service_token_client_secret'] : null;
        $this->container['oauth_provider_ims_service_token'] = isset($data['oauth_provider_ims_service_token']) ? $data['oauth_provider_ims_service_token'] : null;
        $this->container['ims_org_ref'] = isset($data['ims_org_ref']) ? $data['ims_org_ref'] : null;
        $this->container['ims_group_mapping'] = isset($data['ims_group_mapping']) ? $data['ims_group_mapping'] : null;
        $this->container['oauth_provider_ims_only_license_group'] = isset($data['oauth_provider_ims_only_license_group']) ? $data['oauth_provider_ims_only_license_group'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets oauth_provider_id
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthProviderId()
    {
        return $this->container['oauth_provider_id'];
    }

    /**
     * Sets oauth_provider_id
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_provider_id oauth_provider_id
     *
     * @return $this
     */
    public function setOauthProviderId($oauth_provider_id)
    {
        $this->container['oauth_provider_id'] = $oauth_provider_id;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_authorization_url
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthProviderImsAuthorizationUrl()
    {
        return $this->container['oauth_provider_ims_authorization_url'];
    }

    /**
     * Sets oauth_provider_ims_authorization_url
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_provider_ims_authorization_url oauth_provider_ims_authorization_url
     *
     * @return $this
     */
    public function setOauthProviderImsAuthorizationUrl($oauth_provider_ims_authorization_url)
    {
        $this->container['oauth_provider_ims_authorization_url'] = $oauth_provider_ims_authorization_url;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_token_url
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthProviderImsTokenUrl()
    {
        return $this->container['oauth_provider_ims_token_url'];
    }

    /**
     * Sets oauth_provider_ims_token_url
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_provider_ims_token_url oauth_provider_ims_token_url
     *
     * @return $this
     */
    public function setOauthProviderImsTokenUrl($oauth_provider_ims_token_url)
    {
        $this->container['oauth_provider_ims_token_url'] = $oauth_provider_ims_token_url;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_profile_url
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthProviderImsProfileUrl()
    {
        return $this->container['oauth_provider_ims_profile_url'];
    }

    /**
     * Sets oauth_provider_ims_profile_url
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_provider_ims_profile_url oauth_provider_ims_profile_url
     *
     * @return $this
     */
    public function setOauthProviderImsProfileUrl($oauth_provider_ims_profile_url)
    {
        $this->container['oauth_provider_ims_profile_url'] = $oauth_provider_ims_profile_url;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_extended_details_urls
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getOauthProviderImsExtendedDetailsUrls()
    {
        return $this->container['oauth_provider_ims_extended_details_urls'];
    }

    /**
     * Sets oauth_provider_ims_extended_details_urls
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $oauth_provider_ims_extended_details_urls oauth_provider_ims_extended_details_urls
     *
     * @return $this
     */
    public function setOauthProviderImsExtendedDetailsUrls($oauth_provider_ims_extended_details_urls)
    {
        $this->container['oauth_provider_ims_extended_details_urls'] = $oauth_provider_ims_extended_details_urls;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_validate_token_url
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthProviderImsValidateTokenUrl()
    {
        return $this->container['oauth_provider_ims_validate_token_url'];
    }

    /**
     * Sets oauth_provider_ims_validate_token_url
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_provider_ims_validate_token_url oauth_provider_ims_validate_token_url
     *
     * @return $this
     */
    public function setOauthProviderImsValidateTokenUrl($oauth_provider_ims_validate_token_url)
    {
        $this->container['oauth_provider_ims_validate_token_url'] = $oauth_provider_ims_validate_token_url;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_session_property
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthProviderImsSessionProperty()
    {
        return $this->container['oauth_provider_ims_session_property'];
    }

    /**
     * Sets oauth_provider_ims_session_property
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_provider_ims_session_property oauth_provider_ims_session_property
     *
     * @return $this
     */
    public function setOauthProviderImsSessionProperty($oauth_provider_ims_session_property)
    {
        $this->container['oauth_provider_ims_session_property'] = $oauth_provider_ims_session_property;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_service_token_client_id
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthProviderImsServiceTokenClientId()
    {
        return $this->container['oauth_provider_ims_service_token_client_id'];
    }

    /**
     * Sets oauth_provider_ims_service_token_client_id
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_provider_ims_service_token_client_id oauth_provider_ims_service_token_client_id
     *
     * @return $this
     */
    public function setOauthProviderImsServiceTokenClientId($oauth_provider_ims_service_token_client_id)
    {
        $this->container['oauth_provider_ims_service_token_client_id'] = $oauth_provider_ims_service_token_client_id;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_service_token_client_secret
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthProviderImsServiceTokenClientSecret()
    {
        return $this->container['oauth_provider_ims_service_token_client_secret'];
    }

    /**
     * Sets oauth_provider_ims_service_token_client_secret
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_provider_ims_service_token_client_secret oauth_provider_ims_service_token_client_secret
     *
     * @return $this
     */
    public function setOauthProviderImsServiceTokenClientSecret($oauth_provider_ims_service_token_client_secret)
    {
        $this->container['oauth_provider_ims_service_token_client_secret'] = $oauth_provider_ims_service_token_client_secret;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_service_token
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthProviderImsServiceToken()
    {
        return $this->container['oauth_provider_ims_service_token'];
    }

    /**
     * Sets oauth_provider_ims_service_token
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_provider_ims_service_token oauth_provider_ims_service_token
     *
     * @return $this
     */
    public function setOauthProviderImsServiceToken($oauth_provider_ims_service_token)
    {
        $this->container['oauth_provider_ims_service_token'] = $oauth_provider_ims_service_token;

        return $this;
    }

    /**
     * Gets ims_org_ref
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getImsOrgRef()
    {
        return $this->container['ims_org_ref'];
    }

    /**
     * Sets ims_org_ref
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $ims_org_ref ims_org_ref
     *
     * @return $this
     */
    public function setImsOrgRef($ims_org_ref)
    {
        $this->container['ims_org_ref'] = $ims_org_ref;

        return $this;
    }

    /**
     * Gets ims_group_mapping
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getImsGroupMapping()
    {
        return $this->container['ims_group_mapping'];
    }

    /**
     * Sets ims_group_mapping
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $ims_group_mapping ims_group_mapping
     *
     * @return $this
     */
    public function setImsGroupMapping($ims_group_mapping)
    {
        $this->container['ims_group_mapping'] = $ims_group_mapping;

        return $this;
    }

    /**
     * Gets oauth_provider_ims_only_license_group
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOauthProviderImsOnlyLicenseGroup()
    {
        return $this->container['oauth_provider_ims_only_license_group'];
    }

    /**
     * Sets oauth_provider_ims_only_license_group
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $oauth_provider_ims_only_license_group oauth_provider_ims_only_license_group
     *
     * @return $this
     */
    public function setOauthProviderImsOnlyLicenseGroup($oauth_provider_ims_only_license_group)
    {
        $this->container['oauth_provider_ims_only_license_group'] = $oauth_provider_ims_only_license_group;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


