<?php
/**
 * ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'comAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'granite_workflowinbox_sort_property_name' => '\OpenAPI\Client\Model\ConfigNodePropertyDropDown',
        'granite_workflowinbox_sort_order' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'cq_workflow_job_retry' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'cq_workflow_superuser' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'granite_workflow_inbox_query_size' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'granite_workflow_admin_user_group_filter' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'granite_workflow_enforce_workitem_assignee_permissions' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'granite_workflow_enforce_workflow_initiator_permissions' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'granite_workflow_inject_tenant_id_in_job_topics' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'granite_workflow_max_purge_save_threshold' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'granite_workflow_max_purge_query_count' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'granite_workflowinbox_sort_property_name' => null,
        'granite_workflowinbox_sort_order' => null,
        'cq_workflow_job_retry' => null,
        'cq_workflow_superuser' => null,
        'granite_workflow_inbox_query_size' => null,
        'granite_workflow_admin_user_group_filter' => null,
        'granite_workflow_enforce_workitem_assignee_permissions' => null,
        'granite_workflow_enforce_workflow_initiator_permissions' => null,
        'granite_workflow_inject_tenant_id_in_job_topics' => null,
        'granite_workflow_max_purge_save_threshold' => null,
        'granite_workflow_max_purge_query_count' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'granite_workflowinbox_sort_property_name' => 'granite.workflowinbox.sort.propertyName',
        'granite_workflowinbox_sort_order' => 'granite.workflowinbox.sort.order',
        'cq_workflow_job_retry' => 'cq.workflow.job.retry',
        'cq_workflow_superuser' => 'cq.workflow.superuser',
        'granite_workflow_inbox_query_size' => 'granite.workflow.inboxQuerySize',
        'granite_workflow_admin_user_group_filter' => 'granite.workflow.adminUserGroupFilter',
        'granite_workflow_enforce_workitem_assignee_permissions' => 'granite.workflow.enforceWorkitemAssigneePermissions',
        'granite_workflow_enforce_workflow_initiator_permissions' => 'granite.workflow.enforceWorkflowInitiatorPermissions',
        'granite_workflow_inject_tenant_id_in_job_topics' => 'granite.workflow.injectTenantIdInJobTopics',
        'granite_workflow_max_purge_save_threshold' => 'granite.workflow.maxPurgeSaveThreshold',
        'granite_workflow_max_purge_query_count' => 'granite.workflow.maxPurgeQueryCount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'granite_workflowinbox_sort_property_name' => 'setGraniteWorkflowinboxSortPropertyName',
        'granite_workflowinbox_sort_order' => 'setGraniteWorkflowinboxSortOrder',
        'cq_workflow_job_retry' => 'setCqWorkflowJobRetry',
        'cq_workflow_superuser' => 'setCqWorkflowSuperuser',
        'granite_workflow_inbox_query_size' => 'setGraniteWorkflowInboxQuerySize',
        'granite_workflow_admin_user_group_filter' => 'setGraniteWorkflowAdminUserGroupFilter',
        'granite_workflow_enforce_workitem_assignee_permissions' => 'setGraniteWorkflowEnforceWorkitemAssigneePermissions',
        'granite_workflow_enforce_workflow_initiator_permissions' => 'setGraniteWorkflowEnforceWorkflowInitiatorPermissions',
        'granite_workflow_inject_tenant_id_in_job_topics' => 'setGraniteWorkflowInjectTenantIdInJobTopics',
        'granite_workflow_max_purge_save_threshold' => 'setGraniteWorkflowMaxPurgeSaveThreshold',
        'granite_workflow_max_purge_query_count' => 'setGraniteWorkflowMaxPurgeQueryCount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'granite_workflowinbox_sort_property_name' => 'getGraniteWorkflowinboxSortPropertyName',
        'granite_workflowinbox_sort_order' => 'getGraniteWorkflowinboxSortOrder',
        'cq_workflow_job_retry' => 'getCqWorkflowJobRetry',
        'cq_workflow_superuser' => 'getCqWorkflowSuperuser',
        'granite_workflow_inbox_query_size' => 'getGraniteWorkflowInboxQuerySize',
        'granite_workflow_admin_user_group_filter' => 'getGraniteWorkflowAdminUserGroupFilter',
        'granite_workflow_enforce_workitem_assignee_permissions' => 'getGraniteWorkflowEnforceWorkitemAssigneePermissions',
        'granite_workflow_enforce_workflow_initiator_permissions' => 'getGraniteWorkflowEnforceWorkflowInitiatorPermissions',
        'granite_workflow_inject_tenant_id_in_job_topics' => 'getGraniteWorkflowInjectTenantIdInJobTopics',
        'granite_workflow_max_purge_save_threshold' => 'getGraniteWorkflowMaxPurgeSaveThreshold',
        'granite_workflow_max_purge_query_count' => 'getGraniteWorkflowMaxPurgeQueryCount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['granite_workflowinbox_sort_property_name'] = isset($data['granite_workflowinbox_sort_property_name']) ? $data['granite_workflowinbox_sort_property_name'] : null;
        $this->container['granite_workflowinbox_sort_order'] = isset($data['granite_workflowinbox_sort_order']) ? $data['granite_workflowinbox_sort_order'] : null;
        $this->container['cq_workflow_job_retry'] = isset($data['cq_workflow_job_retry']) ? $data['cq_workflow_job_retry'] : null;
        $this->container['cq_workflow_superuser'] = isset($data['cq_workflow_superuser']) ? $data['cq_workflow_superuser'] : null;
        $this->container['granite_workflow_inbox_query_size'] = isset($data['granite_workflow_inbox_query_size']) ? $data['granite_workflow_inbox_query_size'] : null;
        $this->container['granite_workflow_admin_user_group_filter'] = isset($data['granite_workflow_admin_user_group_filter']) ? $data['granite_workflow_admin_user_group_filter'] : null;
        $this->container['granite_workflow_enforce_workitem_assignee_permissions'] = isset($data['granite_workflow_enforce_workitem_assignee_permissions']) ? $data['granite_workflow_enforce_workitem_assignee_permissions'] : null;
        $this->container['granite_workflow_enforce_workflow_initiator_permissions'] = isset($data['granite_workflow_enforce_workflow_initiator_permissions']) ? $data['granite_workflow_enforce_workflow_initiator_permissions'] : null;
        $this->container['granite_workflow_inject_tenant_id_in_job_topics'] = isset($data['granite_workflow_inject_tenant_id_in_job_topics']) ? $data['granite_workflow_inject_tenant_id_in_job_topics'] : null;
        $this->container['granite_workflow_max_purge_save_threshold'] = isset($data['granite_workflow_max_purge_save_threshold']) ? $data['granite_workflow_max_purge_save_threshold'] : null;
        $this->container['granite_workflow_max_purge_query_count'] = isset($data['granite_workflow_max_purge_query_count']) ? $data['granite_workflow_max_purge_query_count'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets granite_workflowinbox_sort_property_name
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyDropDown|null
     */
    public function getGraniteWorkflowinboxSortPropertyName()
    {
        return $this->container['granite_workflowinbox_sort_property_name'];
    }

    /**
     * Sets granite_workflowinbox_sort_property_name
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyDropDown|null $granite_workflowinbox_sort_property_name granite_workflowinbox_sort_property_name
     *
     * @return $this
     */
    public function setGraniteWorkflowinboxSortPropertyName($granite_workflowinbox_sort_property_name)
    {
        $this->container['granite_workflowinbox_sort_property_name'] = $granite_workflowinbox_sort_property_name;

        return $this;
    }

    /**
     * Gets granite_workflowinbox_sort_order
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getGraniteWorkflowinboxSortOrder()
    {
        return $this->container['granite_workflowinbox_sort_order'];
    }

    /**
     * Sets granite_workflowinbox_sort_order
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $granite_workflowinbox_sort_order granite_workflowinbox_sort_order
     *
     * @return $this
     */
    public function setGraniteWorkflowinboxSortOrder($granite_workflowinbox_sort_order)
    {
        $this->container['granite_workflowinbox_sort_order'] = $granite_workflowinbox_sort_order;

        return $this;
    }

    /**
     * Gets cq_workflow_job_retry
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getCqWorkflowJobRetry()
    {
        return $this->container['cq_workflow_job_retry'];
    }

    /**
     * Sets cq_workflow_job_retry
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $cq_workflow_job_retry cq_workflow_job_retry
     *
     * @return $this
     */
    public function setCqWorkflowJobRetry($cq_workflow_job_retry)
    {
        $this->container['cq_workflow_job_retry'] = $cq_workflow_job_retry;

        return $this;
    }

    /**
     * Gets cq_workflow_superuser
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getCqWorkflowSuperuser()
    {
        return $this->container['cq_workflow_superuser'];
    }

    /**
     * Sets cq_workflow_superuser
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $cq_workflow_superuser cq_workflow_superuser
     *
     * @return $this
     */
    public function setCqWorkflowSuperuser($cq_workflow_superuser)
    {
        $this->container['cq_workflow_superuser'] = $cq_workflow_superuser;

        return $this;
    }

    /**
     * Gets granite_workflow_inbox_query_size
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getGraniteWorkflowInboxQuerySize()
    {
        return $this->container['granite_workflow_inbox_query_size'];
    }

    /**
     * Sets granite_workflow_inbox_query_size
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $granite_workflow_inbox_query_size granite_workflow_inbox_query_size
     *
     * @return $this
     */
    public function setGraniteWorkflowInboxQuerySize($granite_workflow_inbox_query_size)
    {
        $this->container['granite_workflow_inbox_query_size'] = $granite_workflow_inbox_query_size;

        return $this;
    }

    /**
     * Gets granite_workflow_admin_user_group_filter
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getGraniteWorkflowAdminUserGroupFilter()
    {
        return $this->container['granite_workflow_admin_user_group_filter'];
    }

    /**
     * Sets granite_workflow_admin_user_group_filter
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $granite_workflow_admin_user_group_filter granite_workflow_admin_user_group_filter
     *
     * @return $this
     */
    public function setGraniteWorkflowAdminUserGroupFilter($granite_workflow_admin_user_group_filter)
    {
        $this->container['granite_workflow_admin_user_group_filter'] = $granite_workflow_admin_user_group_filter;

        return $this;
    }

    /**
     * Gets granite_workflow_enforce_workitem_assignee_permissions
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getGraniteWorkflowEnforceWorkitemAssigneePermissions()
    {
        return $this->container['granite_workflow_enforce_workitem_assignee_permissions'];
    }

    /**
     * Sets granite_workflow_enforce_workitem_assignee_permissions
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $granite_workflow_enforce_workitem_assignee_permissions granite_workflow_enforce_workitem_assignee_permissions
     *
     * @return $this
     */
    public function setGraniteWorkflowEnforceWorkitemAssigneePermissions($granite_workflow_enforce_workitem_assignee_permissions)
    {
        $this->container['granite_workflow_enforce_workitem_assignee_permissions'] = $granite_workflow_enforce_workitem_assignee_permissions;

        return $this;
    }

    /**
     * Gets granite_workflow_enforce_workflow_initiator_permissions
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getGraniteWorkflowEnforceWorkflowInitiatorPermissions()
    {
        return $this->container['granite_workflow_enforce_workflow_initiator_permissions'];
    }

    /**
     * Sets granite_workflow_enforce_workflow_initiator_permissions
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $granite_workflow_enforce_workflow_initiator_permissions granite_workflow_enforce_workflow_initiator_permissions
     *
     * @return $this
     */
    public function setGraniteWorkflowEnforceWorkflowInitiatorPermissions($granite_workflow_enforce_workflow_initiator_permissions)
    {
        $this->container['granite_workflow_enforce_workflow_initiator_permissions'] = $granite_workflow_enforce_workflow_initiator_permissions;

        return $this;
    }

    /**
     * Gets granite_workflow_inject_tenant_id_in_job_topics
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getGraniteWorkflowInjectTenantIdInJobTopics()
    {
        return $this->container['granite_workflow_inject_tenant_id_in_job_topics'];
    }

    /**
     * Sets granite_workflow_inject_tenant_id_in_job_topics
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $granite_workflow_inject_tenant_id_in_job_topics granite_workflow_inject_tenant_id_in_job_topics
     *
     * @return $this
     */
    public function setGraniteWorkflowInjectTenantIdInJobTopics($granite_workflow_inject_tenant_id_in_job_topics)
    {
        $this->container['granite_workflow_inject_tenant_id_in_job_topics'] = $granite_workflow_inject_tenant_id_in_job_topics;

        return $this;
    }

    /**
     * Gets granite_workflow_max_purge_save_threshold
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getGraniteWorkflowMaxPurgeSaveThreshold()
    {
        return $this->container['granite_workflow_max_purge_save_threshold'];
    }

    /**
     * Sets granite_workflow_max_purge_save_threshold
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $granite_workflow_max_purge_save_threshold granite_workflow_max_purge_save_threshold
     *
     * @return $this
     */
    public function setGraniteWorkflowMaxPurgeSaveThreshold($granite_workflow_max_purge_save_threshold)
    {
        $this->container['granite_workflow_max_purge_save_threshold'] = $granite_workflow_max_purge_save_threshold;

        return $this;
    }

    /**
     * Gets granite_workflow_max_purge_query_count
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getGraniteWorkflowMaxPurgeQueryCount()
    {
        return $this->container['granite_workflow_max_purge_query_count'];
    }

    /**
     * Sets granite_workflow_max_purge_query_count
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $granite_workflow_max_purge_query_count granite_workflow_max_purge_query_count
     *
     * @return $this
     */
    public function setGraniteWorkflowMaxPurgeQueryCount($granite_workflow_max_purge_query_count)
    {
        $this->container['granite_workflow_max_purge_query_count'] = $granite_workflow_max_purge_query_count;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


