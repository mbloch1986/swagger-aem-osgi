/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties() {
    init();
}

OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::~OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties() {
    this->cleanup();
}

void
OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::init() {
    max_unread_notification_count = new OAIConfigNodePropertyInteger();
    m_max_unread_notification_count_isSet = false;
}

void
OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::cleanup() {
    if(max_unread_notification_count != nullptr) { 
        delete max_unread_notification_count;
    }
}

OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties*
OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&max_unread_notification_count, pJson["max.unread.notification.count"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::asJsonObject() {
    QJsonObject obj;
    if((max_unread_notification_count != nullptr) && (max_unread_notification_count->isSet())){
        toJsonValue(QString("max.unread.notification.count"), max_unread_notification_count, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::getMaxUnreadNotificationCount() {
    return max_unread_notification_count;
}
void
OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::setMaxUnreadNotificationCount(OAIConfigNodePropertyInteger* max_unread_notification_count) {
    this->max_unread_notification_count = max_unread_notification_count;
    this->m_max_unread_notification_count_isSet = true;
}


bool
OAIComAdobeCqSocialNotificationsImplNotificationManagerImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(max_unread_notification_count != nullptr && max_unread_notification_count->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

