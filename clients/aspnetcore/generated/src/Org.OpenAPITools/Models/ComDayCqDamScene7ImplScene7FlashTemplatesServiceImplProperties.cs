/*
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties : IEquatable<ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties>
    { 
        /// <summary>
        /// Gets or Sets Scene7FlashTemplatesRti
        /// </summary>
        [DataMember(Name="scene7FlashTemplates.rti")]
        public ConfigNodePropertyString Scene7FlashTemplatesRti { get; set; }

        /// <summary>
        /// Gets or Sets Scene7FlashTemplatesRsi
        /// </summary>
        [DataMember(Name="scene7FlashTemplates.rsi")]
        public ConfigNodePropertyString Scene7FlashTemplatesRsi { get; set; }

        /// <summary>
        /// Gets or Sets Scene7FlashTemplatesRb
        /// </summary>
        [DataMember(Name="scene7FlashTemplates.rb")]
        public ConfigNodePropertyString Scene7FlashTemplatesRb { get; set; }

        /// <summary>
        /// Gets or Sets Scene7FlashTemplatesRurl
        /// </summary>
        [DataMember(Name="scene7FlashTemplates.rurl")]
        public ConfigNodePropertyString Scene7FlashTemplatesRurl { get; set; }

        /// <summary>
        /// Gets or Sets Scene7FlashTemplateUrlFormatParameter
        /// </summary>
        [DataMember(Name="scene7FlashTemplate.urlFormatParameter")]
        public ConfigNodePropertyString Scene7FlashTemplateUrlFormatParameter { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties {\n");
            sb.Append("  Scene7FlashTemplatesRti: ").Append(Scene7FlashTemplatesRti).Append("\n");
            sb.Append("  Scene7FlashTemplatesRsi: ").Append(Scene7FlashTemplatesRsi).Append("\n");
            sb.Append("  Scene7FlashTemplatesRb: ").Append(Scene7FlashTemplatesRb).Append("\n");
            sb.Append("  Scene7FlashTemplatesRurl: ").Append(Scene7FlashTemplatesRurl).Append("\n");
            sb.Append("  Scene7FlashTemplateUrlFormatParameter: ").Append(Scene7FlashTemplateUrlFormatParameter).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties)obj);
        }

        /// <summary>
        /// Returns true if ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Scene7FlashTemplatesRti == other.Scene7FlashTemplatesRti ||
                    Scene7FlashTemplatesRti != null &&
                    Scene7FlashTemplatesRti.Equals(other.Scene7FlashTemplatesRti)
                ) && 
                (
                    Scene7FlashTemplatesRsi == other.Scene7FlashTemplatesRsi ||
                    Scene7FlashTemplatesRsi != null &&
                    Scene7FlashTemplatesRsi.Equals(other.Scene7FlashTemplatesRsi)
                ) && 
                (
                    Scene7FlashTemplatesRb == other.Scene7FlashTemplatesRb ||
                    Scene7FlashTemplatesRb != null &&
                    Scene7FlashTemplatesRb.Equals(other.Scene7FlashTemplatesRb)
                ) && 
                (
                    Scene7FlashTemplatesRurl == other.Scene7FlashTemplatesRurl ||
                    Scene7FlashTemplatesRurl != null &&
                    Scene7FlashTemplatesRurl.Equals(other.Scene7FlashTemplatesRurl)
                ) && 
                (
                    Scene7FlashTemplateUrlFormatParameter == other.Scene7FlashTemplateUrlFormatParameter ||
                    Scene7FlashTemplateUrlFormatParameter != null &&
                    Scene7FlashTemplateUrlFormatParameter.Equals(other.Scene7FlashTemplateUrlFormatParameter)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Scene7FlashTemplatesRti != null)
                    hashCode = hashCode * 59 + Scene7FlashTemplatesRti.GetHashCode();
                    if (Scene7FlashTemplatesRsi != null)
                    hashCode = hashCode * 59 + Scene7FlashTemplatesRsi.GetHashCode();
                    if (Scene7FlashTemplatesRb != null)
                    hashCode = hashCode * 59 + Scene7FlashTemplatesRb.GetHashCode();
                    if (Scene7FlashTemplatesRurl != null)
                    hashCode = hashCode * 59 + Scene7FlashTemplatesRurl.GetHashCode();
                    if (Scene7FlashTemplateUrlFormatParameter != null)
                    hashCode = hashCode * 59 + Scene7FlashTemplateUrlFormatParameter.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties left, ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties left, ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
