/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComAdobeGraniteRepositoryServiceUserConfigurationProperties
    /// </summary>
    [DataContract]
    public partial class ComAdobeGraniteRepositoryServiceUserConfigurationProperties :  IEquatable<ComAdobeGraniteRepositoryServiceUserConfigurationProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAdobeGraniteRepositoryServiceUserConfigurationProperties" /> class.
        /// </summary>
        /// <param name="serviceRanking">serviceRanking.</param>
        /// <param name="serviceusersSimpleSubjectPopulation">serviceusersSimpleSubjectPopulation.</param>
        /// <param name="serviceusersList">serviceusersList.</param>
        public ComAdobeGraniteRepositoryServiceUserConfigurationProperties(ConfigNodePropertyInteger serviceRanking = default(ConfigNodePropertyInteger), ConfigNodePropertyBoolean serviceusersSimpleSubjectPopulation = default(ConfigNodePropertyBoolean), ConfigNodePropertyArray serviceusersList = default(ConfigNodePropertyArray))
        {
            this.ServiceRanking = serviceRanking;
            this.ServiceusersSimpleSubjectPopulation = serviceusersSimpleSubjectPopulation;
            this.ServiceusersList = serviceusersList;
        }
        
        /// <summary>
        /// Gets or Sets ServiceRanking
        /// </summary>
        [DataMember(Name="service.ranking", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger ServiceRanking { get; set; }

        /// <summary>
        /// Gets or Sets ServiceusersSimpleSubjectPopulation
        /// </summary>
        [DataMember(Name="serviceusers.simpleSubjectPopulation", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean ServiceusersSimpleSubjectPopulation { get; set; }

        /// <summary>
        /// Gets or Sets ServiceusersList
        /// </summary>
        [DataMember(Name="serviceusers.list", EmitDefaultValue=false)]
        public ConfigNodePropertyArray ServiceusersList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeGraniteRepositoryServiceUserConfigurationProperties {\n");
            sb.Append("  ServiceRanking: ").Append(ServiceRanking).Append("\n");
            sb.Append("  ServiceusersSimpleSubjectPopulation: ").Append(ServiceusersSimpleSubjectPopulation).Append("\n");
            sb.Append("  ServiceusersList: ").Append(ServiceusersList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComAdobeGraniteRepositoryServiceUserConfigurationProperties);
        }

        /// <summary>
        /// Returns true if ComAdobeGraniteRepositoryServiceUserConfigurationProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComAdobeGraniteRepositoryServiceUserConfigurationProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeGraniteRepositoryServiceUserConfigurationProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ServiceRanking == input.ServiceRanking ||
                    (this.ServiceRanking != null &&
                    this.ServiceRanking.Equals(input.ServiceRanking))
                ) && 
                (
                    this.ServiceusersSimpleSubjectPopulation == input.ServiceusersSimpleSubjectPopulation ||
                    (this.ServiceusersSimpleSubjectPopulation != null &&
                    this.ServiceusersSimpleSubjectPopulation.Equals(input.ServiceusersSimpleSubjectPopulation))
                ) && 
                (
                    this.ServiceusersList == input.ServiceusersList ||
                    (this.ServiceusersList != null &&
                    this.ServiceusersList.Equals(input.ServiceusersList))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ServiceRanking != null)
                    hashCode = hashCode * 59 + this.ServiceRanking.GetHashCode();
                if (this.ServiceusersSimpleSubjectPopulation != null)
                    hashCode = hashCode * 59 + this.ServiceusersSimpleSubjectPopulation.GetHashCode();
                if (this.ServiceusersList != null)
                    hashCode = hashCode * 59 + this.ServiceusersList.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
