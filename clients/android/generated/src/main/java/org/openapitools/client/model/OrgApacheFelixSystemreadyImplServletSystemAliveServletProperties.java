/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheFelixSystemreadyImplServletSystemAliveServletProperties {
  
  @SerializedName("osgi.http.whiteboard.servlet.pattern")
  private ConfigNodePropertyString osgiHttpWhiteboardServletPattern = null;
  @SerializedName("osgi.http.whiteboard.context.select")
  private ConfigNodePropertyString osgiHttpWhiteboardContextSelect = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getOsgiHttpWhiteboardServletPattern() {
    return osgiHttpWhiteboardServletPattern;
  }
  public void setOsgiHttpWhiteboardServletPattern(ConfigNodePropertyString osgiHttpWhiteboardServletPattern) {
    this.osgiHttpWhiteboardServletPattern = osgiHttpWhiteboardServletPattern;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getOsgiHttpWhiteboardContextSelect() {
    return osgiHttpWhiteboardContextSelect;
  }
  public void setOsgiHttpWhiteboardContextSelect(ConfigNodePropertyString osgiHttpWhiteboardContextSelect) {
    this.osgiHttpWhiteboardContextSelect = osgiHttpWhiteboardContextSelect;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheFelixSystemreadyImplServletSystemAliveServletProperties orgApacheFelixSystemreadyImplServletSystemAliveServletProperties = (OrgApacheFelixSystemreadyImplServletSystemAliveServletProperties) o;
    return (this.osgiHttpWhiteboardServletPattern == null ? orgApacheFelixSystemreadyImplServletSystemAliveServletProperties.osgiHttpWhiteboardServletPattern == null : this.osgiHttpWhiteboardServletPattern.equals(orgApacheFelixSystemreadyImplServletSystemAliveServletProperties.osgiHttpWhiteboardServletPattern)) &&
        (this.osgiHttpWhiteboardContextSelect == null ? orgApacheFelixSystemreadyImplServletSystemAliveServletProperties.osgiHttpWhiteboardContextSelect == null : this.osgiHttpWhiteboardContextSelect.equals(orgApacheFelixSystemreadyImplServletSystemAliveServletProperties.osgiHttpWhiteboardContextSelect));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.osgiHttpWhiteboardServletPattern == null ? 0: this.osgiHttpWhiteboardServletPattern.hashCode());
    result = 31 * result + (this.osgiHttpWhiteboardContextSelect == null ? 0: this.osgiHttpWhiteboardContextSelect.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheFelixSystemreadyImplServletSystemAliveServletProperties {\n");
    
    sb.append("  osgiHttpWhiteboardServletPattern: ").append(osgiHttpWhiteboardServletPattern).append("\n");
    sb.append("  osgiHttpWhiteboardContextSelect: ").append(osgiHttpWhiteboardContextSelect).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
