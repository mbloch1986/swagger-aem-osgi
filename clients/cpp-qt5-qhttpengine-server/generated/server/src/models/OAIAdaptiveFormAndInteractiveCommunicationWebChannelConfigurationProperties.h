/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.h
 *
 * 
 */

#ifndef OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties_H
#define OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyInteger.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties: public OAIObject {
public:
    OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties();
    OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties(QString json);
    ~OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyBoolean getShowPlaceholder() const;
    void setShowPlaceholder(const OAIConfigNodePropertyBoolean &show_placeholder);

    OAIConfigNodePropertyInteger getMaximumCacheEntries() const;
    void setMaximumCacheEntries(const OAIConfigNodePropertyInteger &maximum_cache_entries);

    OAIConfigNodePropertyDropDown getAfScriptingCompatversion() const;
    void setAfScriptingCompatversion(const OAIConfigNodePropertyDropDown &af_scripting_compatversion);

    OAIConfigNodePropertyBoolean getMakeFileNameUnique() const;
    void setMakeFileNameUnique(const OAIConfigNodePropertyBoolean &make_file_name_unique);

    OAIConfigNodePropertyBoolean getGeneratingCompliantData() const;
    void setGeneratingCompliantData(const OAIConfigNodePropertyBoolean &generating_compliant_data);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyBoolean show_placeholder;
    bool m_show_placeholder_isSet;

    OAIConfigNodePropertyInteger maximum_cache_entries;
    bool m_maximum_cache_entries_isSet;

    OAIConfigNodePropertyDropDown af_scripting_compatversion;
    bool m_af_scripting_compatversion_isSet;

    OAIConfigNodePropertyBoolean make_file_name_unique;
    bool m_make_file_name_unique_isSet;

    OAIConfigNodePropertyBoolean generating_compliant_data;
    bool m_generating_compliant_data_isSet;

};

}

#endif // OAIAdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties_H
