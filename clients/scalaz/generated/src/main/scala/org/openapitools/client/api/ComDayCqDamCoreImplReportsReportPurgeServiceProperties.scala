package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComDayCqDamCoreImplReportsReportPurgeServiceProperties._

case class ComDayCqDamCoreImplReportsReportPurgeServiceProperties (
  schedulerExpression: Option[ConfigNodePropertyString],
maxSavedReports: Option[ConfigNodePropertyInteger],
timeDuration: Option[ConfigNodePropertyInteger],
enableReportPurge: Option[ConfigNodePropertyBoolean])

object ComDayCqDamCoreImplReportsReportPurgeServiceProperties {
  import DateTimeCodecs._

  implicit val ComDayCqDamCoreImplReportsReportPurgeServicePropertiesCodecJson: CodecJson[ComDayCqDamCoreImplReportsReportPurgeServiceProperties] = CodecJson.derive[ComDayCqDamCoreImplReportsReportPurgeServiceProperties]
  implicit val ComDayCqDamCoreImplReportsReportPurgeServicePropertiesDecoder: EntityDecoder[ComDayCqDamCoreImplReportsReportPurgeServiceProperties] = jsonOf[ComDayCqDamCoreImplReportsReportPurgeServiceProperties]
  implicit val ComDayCqDamCoreImplReportsReportPurgeServicePropertiesEncoder: EntityEncoder[ComDayCqDamCoreImplReportsReportPurgeServiceProperties] = jsonEncoderOf[ComDayCqDamCoreImplReportsReportPurgeServiceProperties]
}
