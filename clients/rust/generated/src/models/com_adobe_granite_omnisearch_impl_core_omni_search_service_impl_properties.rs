/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties {
  #[serde(rename = "omnisearch.suggestion.requiretext.min")]
  omnisearch_suggestion_requiretext_min: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "omnisearch.suggestion.spellcheck.require")]
  omnisearch_suggestion_spellcheck_require: Option<::models::ConfigNodePropertyBoolean>
}

impl ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties {
  pub fn new() -> ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties {
    ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties {
      omnisearch_suggestion_requiretext_min: None,
      omnisearch_suggestion_spellcheck_require: None
    }
  }

  pub fn set_omnisearch_suggestion_requiretext_min(&mut self, omnisearch_suggestion_requiretext_min: ::models::ConfigNodePropertyInteger) {
    self.omnisearch_suggestion_requiretext_min = Some(omnisearch_suggestion_requiretext_min);
  }

  pub fn with_omnisearch_suggestion_requiretext_min(mut self, omnisearch_suggestion_requiretext_min: ::models::ConfigNodePropertyInteger) -> ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties {
    self.omnisearch_suggestion_requiretext_min = Some(omnisearch_suggestion_requiretext_min);
    self
  }

  pub fn omnisearch_suggestion_requiretext_min(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.omnisearch_suggestion_requiretext_min.as_ref()
  }

  pub fn reset_omnisearch_suggestion_requiretext_min(&mut self) {
    self.omnisearch_suggestion_requiretext_min = None;
  }

  pub fn set_omnisearch_suggestion_spellcheck_require(&mut self, omnisearch_suggestion_spellcheck_require: ::models::ConfigNodePropertyBoolean) {
    self.omnisearch_suggestion_spellcheck_require = Some(omnisearch_suggestion_spellcheck_require);
  }

  pub fn with_omnisearch_suggestion_spellcheck_require(mut self, omnisearch_suggestion_spellcheck_require: ::models::ConfigNodePropertyBoolean) -> ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties {
    self.omnisearch_suggestion_spellcheck_require = Some(omnisearch_suggestion_spellcheck_require);
    self
  }

  pub fn omnisearch_suggestion_spellcheck_require(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.omnisearch_suggestion_spellcheck_require.as_ref()
  }

  pub fn reset_omnisearch_suggestion_spellcheck_require(&mut self) {
    self.omnisearch_suggestion_spellcheck_require = None;
  }

}



