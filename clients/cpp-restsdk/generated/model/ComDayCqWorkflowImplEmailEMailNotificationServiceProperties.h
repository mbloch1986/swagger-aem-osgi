/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComDayCqWorkflowImplEmailEMailNotificationServiceProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqWorkflowImplEmailEMailNotificationServiceProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqWorkflowImplEmailEMailNotificationServiceProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqWorkflowImplEmailEMailNotificationServiceProperties
    : public ModelBase
{
public:
    ComDayCqWorkflowImplEmailEMailNotificationServiceProperties();
    virtual ~ComDayCqWorkflowImplEmailEMailNotificationServiceProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComDayCqWorkflowImplEmailEMailNotificationServiceProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getFromAddress() const;
    bool fromAddressIsSet() const;
    void unsetFrom_address();
    void setFromAddress(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getHostPrefix() const;
    bool hostPrefixIsSet() const;
    void unsetHost_prefix();
    void setHostPrefix(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getNotifyOnabort() const;
    bool notifyOnabortIsSet() const;
    void unsetNotify_onabort();
    void setNotifyOnabort(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getNotifyOncomplete() const;
    bool notifyOncompleteIsSet() const;
    void unsetNotify_oncomplete();
    void setNotifyOncomplete(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getNotifyOncontainercomplete() const;
    bool notifyOncontainercompleteIsSet() const;
    void unsetNotify_oncontainercomplete();
    void setNotifyOncontainercomplete(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getNotifyUseronly() const;
    bool notifyUseronlyIsSet() const;
    void unsetNotify_useronly();
    void setNotifyUseronly(std::shared_ptr<ConfigNodePropertyBoolean> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_From_address;
    bool m_From_addressIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Host_prefix;
    bool m_Host_prefixIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Notify_onabort;
    bool m_Notify_onabortIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Notify_oncomplete;
    bool m_Notify_oncompleteIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Notify_oncontainercomplete;
    bool m_Notify_oncontainercompleteIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Notify_useronly;
    bool m_Notify_useronlyIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqWorkflowImplEmailEMailNotificationServiceProperties_H_ */
