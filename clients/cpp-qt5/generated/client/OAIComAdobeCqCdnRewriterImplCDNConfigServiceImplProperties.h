/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplProperties_H_
#define OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplProperties: public OAIObject {
public:
    OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplProperties();
    OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplProperties(QString json);
    ~OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getCdnConfigDistributionDomain();
    void setCdnConfigDistributionDomain(OAIConfigNodePropertyString* cdn_config_distribution_domain);

    OAIConfigNodePropertyBoolean* getCdnConfigEnableRewriting();
    void setCdnConfigEnableRewriting(OAIConfigNodePropertyBoolean* cdn_config_enable_rewriting);

    OAIConfigNodePropertyArray* getCdnConfigPathPrefixes();
    void setCdnConfigPathPrefixes(OAIConfigNodePropertyArray* cdn_config_path_prefixes);

    OAIConfigNodePropertyInteger* getCdnConfigCdnttl();
    void setCdnConfigCdnttl(OAIConfigNodePropertyInteger* cdn_config_cdnttl);

    OAIConfigNodePropertyString* getCdnConfigApplicationProtocol();
    void setCdnConfigApplicationProtocol(OAIConfigNodePropertyString* cdn_config_application_protocol);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* cdn_config_distribution_domain;
    bool m_cdn_config_distribution_domain_isSet;

    OAIConfigNodePropertyBoolean* cdn_config_enable_rewriting;
    bool m_cdn_config_enable_rewriting_isSet;

    OAIConfigNodePropertyArray* cdn_config_path_prefixes;
    bool m_cdn_config_path_prefixes_isSet;

    OAIConfigNodePropertyInteger* cdn_config_cdnttl;
    bool m_cdn_config_cdnttl_isSet;

    OAIConfigNodePropertyString* cdn_config_application_protocol;
    bool m_cdn_config_application_protocol_isSet;

};

}

#endif /* OAIComAdobeCqCdnRewriterImplCDNConfigServiceImplProperties_H_ */
