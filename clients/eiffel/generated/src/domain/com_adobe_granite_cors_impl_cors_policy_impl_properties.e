note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_ADOBE_GRANITE_CORS_IMPL_CORS_POLICY_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    alloworigin: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    alloworiginregexp: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    allowedpaths: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    exposedheaders: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    maxage: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    supportedheaders: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    supportedmethods: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    supportscredentials: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_alloworigin (a_name: like alloworigin)
        -- Set 'alloworigin' with 'a_name'.
      do
        alloworigin := a_name
      ensure
        alloworigin_set: alloworigin = a_name		
      end

    set_alloworiginregexp (a_name: like alloworiginregexp)
        -- Set 'alloworiginregexp' with 'a_name'.
      do
        alloworiginregexp := a_name
      ensure
        alloworiginregexp_set: alloworiginregexp = a_name		
      end

    set_allowedpaths (a_name: like allowedpaths)
        -- Set 'allowedpaths' with 'a_name'.
      do
        allowedpaths := a_name
      ensure
        allowedpaths_set: allowedpaths = a_name		
      end

    set_exposedheaders (a_name: like exposedheaders)
        -- Set 'exposedheaders' with 'a_name'.
      do
        exposedheaders := a_name
      ensure
        exposedheaders_set: exposedheaders = a_name		
      end

    set_maxage (a_name: like maxage)
        -- Set 'maxage' with 'a_name'.
      do
        maxage := a_name
      ensure
        maxage_set: maxage = a_name		
      end

    set_supportedheaders (a_name: like supportedheaders)
        -- Set 'supportedheaders' with 'a_name'.
      do
        supportedheaders := a_name
      ensure
        supportedheaders_set: supportedheaders = a_name		
      end

    set_supportedmethods (a_name: like supportedmethods)
        -- Set 'supportedmethods' with 'a_name'.
      do
        supportedmethods := a_name
      ensure
        supportedmethods_set: supportedmethods = a_name		
      end

    set_supportscredentials (a_name: like supportscredentials)
        -- Set 'supportscredentials' with 'a_name'.
      do
        supportscredentials := a_name
      ensure
        supportscredentials_set: supportscredentials = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_ADOBE_GRANITE_CORS_IMPL_CORS_POLICY_IMPL_PROPERTIES%N")
        if attached alloworigin as l_alloworigin then
          Result.append ("%Nalloworigin:")
          Result.append (l_alloworigin.out)
          Result.append ("%N")    
        end  
        if attached alloworiginregexp as l_alloworiginregexp then
          Result.append ("%Nalloworiginregexp:")
          Result.append (l_alloworiginregexp.out)
          Result.append ("%N")    
        end  
        if attached allowedpaths as l_allowedpaths then
          Result.append ("%Nallowedpaths:")
          Result.append (l_allowedpaths.out)
          Result.append ("%N")    
        end  
        if attached exposedheaders as l_exposedheaders then
          Result.append ("%Nexposedheaders:")
          Result.append (l_exposedheaders.out)
          Result.append ("%N")    
        end  
        if attached maxage as l_maxage then
          Result.append ("%Nmaxage:")
          Result.append (l_maxage.out)
          Result.append ("%N")    
        end  
        if attached supportedheaders as l_supportedheaders then
          Result.append ("%Nsupportedheaders:")
          Result.append (l_supportedheaders.out)
          Result.append ("%N")    
        end  
        if attached supportedmethods as l_supportedmethods then
          Result.append ("%Nsupportedmethods:")
          Result.append (l_supportedmethods.out)
          Result.append ("%N")    
        end  
        if attached supportscredentials as l_supportscredentials then
          Result.append ("%Nsupportscredentials:")
          Result.append (l_supportscredentials.out)
          Result.append ("%N")    
        end  
      end
end


