/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties_H_
#define OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties
    : public ModelBase
{
public:
    OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties();
    virtual ~OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSchedulerExpression() const;
    void setSchedulerExpression(ConfigNodePropertyString const& value);
    bool schedulerExpressionIsSet() const;
    void unsetScheduler_expression();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getSchedulerConcurrent() const;
    void setSchedulerConcurrent(ConfigNodePropertyBoolean const& value);
    bool schedulerConcurrentIsSet() const;
    void unsetScheduler_concurrent();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getChunkCleanupAge() const;
    void setChunkCleanupAge(ConfigNodePropertyInteger const& value);
    bool chunkCleanupAgeIsSet() const;
    void unsetChunk_cleanup_age();

protected:
    ConfigNodePropertyString m_Scheduler_expression;
    bool m_Scheduler_expressionIsSet;
    ConfigNodePropertyBoolean m_Scheduler_concurrent;
    bool m_Scheduler_concurrentIsSet;
    ConfigNodePropertyInteger m_Chunk_cleanup_age;
    bool m_Chunk_cleanup_ageIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties_H_ */
