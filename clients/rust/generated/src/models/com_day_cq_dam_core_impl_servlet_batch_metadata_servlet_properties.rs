/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamCoreImplServletBatchMetadataServletProperties {
  #[serde(rename = "cq.dam.batch.metadata.asset.default")]
  cq_dam_batch_metadata_asset_default: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "cq.dam.batch.metadata.collection.default")]
  cq_dam_batch_metadata_collection_default: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "cq.dam.batch.metadata.maxresources")]
  cq_dam_batch_metadata_maxresources: Option<::models::ConfigNodePropertyInteger>
}

impl ComDayCqDamCoreImplServletBatchMetadataServletProperties {
  pub fn new() -> ComDayCqDamCoreImplServletBatchMetadataServletProperties {
    ComDayCqDamCoreImplServletBatchMetadataServletProperties {
      cq_dam_batch_metadata_asset_default: None,
      cq_dam_batch_metadata_collection_default: None,
      cq_dam_batch_metadata_maxresources: None
    }
  }

  pub fn set_cq_dam_batch_metadata_asset_default(&mut self, cq_dam_batch_metadata_asset_default: ::models::ConfigNodePropertyArray) {
    self.cq_dam_batch_metadata_asset_default = Some(cq_dam_batch_metadata_asset_default);
  }

  pub fn with_cq_dam_batch_metadata_asset_default(mut self, cq_dam_batch_metadata_asset_default: ::models::ConfigNodePropertyArray) -> ComDayCqDamCoreImplServletBatchMetadataServletProperties {
    self.cq_dam_batch_metadata_asset_default = Some(cq_dam_batch_metadata_asset_default);
    self
  }

  pub fn cq_dam_batch_metadata_asset_default(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.cq_dam_batch_metadata_asset_default.as_ref()
  }

  pub fn reset_cq_dam_batch_metadata_asset_default(&mut self) {
    self.cq_dam_batch_metadata_asset_default = None;
  }

  pub fn set_cq_dam_batch_metadata_collection_default(&mut self, cq_dam_batch_metadata_collection_default: ::models::ConfigNodePropertyArray) {
    self.cq_dam_batch_metadata_collection_default = Some(cq_dam_batch_metadata_collection_default);
  }

  pub fn with_cq_dam_batch_metadata_collection_default(mut self, cq_dam_batch_metadata_collection_default: ::models::ConfigNodePropertyArray) -> ComDayCqDamCoreImplServletBatchMetadataServletProperties {
    self.cq_dam_batch_metadata_collection_default = Some(cq_dam_batch_metadata_collection_default);
    self
  }

  pub fn cq_dam_batch_metadata_collection_default(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.cq_dam_batch_metadata_collection_default.as_ref()
  }

  pub fn reset_cq_dam_batch_metadata_collection_default(&mut self) {
    self.cq_dam_batch_metadata_collection_default = None;
  }

  pub fn set_cq_dam_batch_metadata_maxresources(&mut self, cq_dam_batch_metadata_maxresources: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_batch_metadata_maxresources = Some(cq_dam_batch_metadata_maxresources);
  }

  pub fn with_cq_dam_batch_metadata_maxresources(mut self, cq_dam_batch_metadata_maxresources: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplServletBatchMetadataServletProperties {
    self.cq_dam_batch_metadata_maxresources = Some(cq_dam_batch_metadata_maxresources);
    self
  }

  pub fn cq_dam_batch_metadata_maxresources(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_batch_metadata_maxresources.as_ref()
  }

  pub fn reset_cq_dam_batch_metadata_maxresources(&mut self) {
    self.cq_dam_batch_metadata_maxresources = None;
  }

}



