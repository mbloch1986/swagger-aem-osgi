/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamCoreImplServletCollectionServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreImplServletCollectionServletProperties::ComDayCqDamCoreImplServletCollectionServletProperties()
{
    m_Cq_dam_batch_collection_propertiesIsSet = false;
    m_Cq_dam_batch_collection_maxcollectionsIsSet = false;
    
}

ComDayCqDamCoreImplServletCollectionServletProperties::~ComDayCqDamCoreImplServletCollectionServletProperties()
{
}

void ComDayCqDamCoreImplServletCollectionServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamCoreImplServletCollectionServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cq_dam_batch_collection_propertiesIsSet)
    {
        val["cq.dam.batch.collection.properties"] = ModelBase::toJson(m_Cq_dam_batch_collection_properties);
    }
    if(m_Cq_dam_batch_collection_maxcollectionsIsSet)
    {
        val["cq.dam.batch.collection.maxcollections"] = ModelBase::toJson(m_Cq_dam_batch_collection_maxcollections);
    }
    

    return val;
}

void ComDayCqDamCoreImplServletCollectionServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cq.dam.batch.collection.properties") != val.end())
    {
        if(!val["cq.dam.batch.collection.properties"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cq.dam.batch.collection.properties"]);
            setCqDamBatchCollectionProperties( newItem );
        }
        
    }
    if(val.find("cq.dam.batch.collection.maxcollections") != val.end())
    {
        if(!val["cq.dam.batch.collection.maxcollections"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.dam.batch.collection.maxcollections"]);
            setCqDamBatchCollectionMaxcollections( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqDamCoreImplServletCollectionServletProperties::getCqDamBatchCollectionProperties() const
{
    return m_Cq_dam_batch_collection_properties;
}
void ComDayCqDamCoreImplServletCollectionServletProperties::setCqDamBatchCollectionProperties(ConfigNodePropertyArray const& value)
{
    m_Cq_dam_batch_collection_properties = value;
    m_Cq_dam_batch_collection_propertiesIsSet = true;
}
bool ComDayCqDamCoreImplServletCollectionServletProperties::cqDamBatchCollectionPropertiesIsSet() const
{
    return m_Cq_dam_batch_collection_propertiesIsSet;
}
void ComDayCqDamCoreImplServletCollectionServletProperties::unsetCq_dam_batch_collection_properties()
{
    m_Cq_dam_batch_collection_propertiesIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamCoreImplServletCollectionServletProperties::getCqDamBatchCollectionMaxcollections() const
{
    return m_Cq_dam_batch_collection_maxcollections;
}
void ComDayCqDamCoreImplServletCollectionServletProperties::setCqDamBatchCollectionMaxcollections(ConfigNodePropertyInteger const& value)
{
    m_Cq_dam_batch_collection_maxcollections = value;
    m_Cq_dam_batch_collection_maxcollectionsIsSet = true;
}
bool ComDayCqDamCoreImplServletCollectionServletProperties::cqDamBatchCollectionMaxcollectionsIsSet() const
{
    return m_Cq_dam_batch_collection_maxcollectionsIsSet;
}
void ComDayCqDamCoreImplServletCollectionServletProperties::unsetCq_dam_batch_collection_maxcollections()
{
    m_Cq_dam_batch_collection_maxcollectionsIsSet = false;
}

}
}
}
}

