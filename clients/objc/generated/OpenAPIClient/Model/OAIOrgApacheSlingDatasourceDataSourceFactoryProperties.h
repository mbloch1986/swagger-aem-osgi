#import <Foundation/Foundation.h>
#import "OAIObject.h"

/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#import "OAIConfigNodePropertyArray.h"
#import "OAIConfigNodePropertyBoolean.h"
#import "OAIConfigNodePropertyDropDown.h"
#import "OAIConfigNodePropertyInteger.h"
#import "OAIConfigNodePropertyString.h"
@protocol OAIConfigNodePropertyArray;
@class OAIConfigNodePropertyArray;
@protocol OAIConfigNodePropertyBoolean;
@class OAIConfigNodePropertyBoolean;
@protocol OAIConfigNodePropertyDropDown;
@class OAIConfigNodePropertyDropDown;
@protocol OAIConfigNodePropertyInteger;
@class OAIConfigNodePropertyInteger;
@protocol OAIConfigNodePropertyString;
@class OAIConfigNodePropertyString;



@protocol OAIOrgApacheSlingDatasourceDataSourceFactoryProperties
@end

@interface OAIOrgApacheSlingDatasourceDataSourceFactoryProperties : OAIObject


@property(nonatomic) OAIConfigNodePropertyString* datasourceName;

@property(nonatomic) OAIConfigNodePropertyString* datasourceSvcPropName;

@property(nonatomic) OAIConfigNodePropertyString* driverClassName;

@property(nonatomic) OAIConfigNodePropertyString* url;

@property(nonatomic) OAIConfigNodePropertyString* username;

@property(nonatomic) OAIConfigNodePropertyString* password;

@property(nonatomic) OAIConfigNodePropertyDropDown* defaultAutoCommit;

@property(nonatomic) OAIConfigNodePropertyDropDown* defaultReadOnly;

@property(nonatomic) OAIConfigNodePropertyDropDown* defaultTransactionIsolation;

@property(nonatomic) OAIConfigNodePropertyString* defaultCatalog;

@property(nonatomic) OAIConfigNodePropertyInteger* maxActive;

@property(nonatomic) OAIConfigNodePropertyInteger* maxIdle;

@property(nonatomic) OAIConfigNodePropertyInteger* minIdle;

@property(nonatomic) OAIConfigNodePropertyInteger* initialSize;

@property(nonatomic) OAIConfigNodePropertyInteger* maxWait;

@property(nonatomic) OAIConfigNodePropertyInteger* maxAge;

@property(nonatomic) OAIConfigNodePropertyBoolean* testOnBorrow;

@property(nonatomic) OAIConfigNodePropertyBoolean* testOnReturn;

@property(nonatomic) OAIConfigNodePropertyBoolean* testWhileIdle;

@property(nonatomic) OAIConfigNodePropertyString* validationQuery;

@property(nonatomic) OAIConfigNodePropertyInteger* validationQueryTimeout;

@property(nonatomic) OAIConfigNodePropertyInteger* timeBetweenEvictionRunsMillis;

@property(nonatomic) OAIConfigNodePropertyInteger* minEvictableIdleTimeMillis;

@property(nonatomic) OAIConfigNodePropertyString* connectionProperties;

@property(nonatomic) OAIConfigNodePropertyString* initSQL;

@property(nonatomic) OAIConfigNodePropertyString* jdbcInterceptors;

@property(nonatomic) OAIConfigNodePropertyInteger* validationInterval;

@property(nonatomic) OAIConfigNodePropertyBoolean* logValidationErrors;

@property(nonatomic) OAIConfigNodePropertyArray* datasourceSvcProperties;

@end
