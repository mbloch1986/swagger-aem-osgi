<?php
/**
 * ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("enableScheduledPostsSearch")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $enableScheduledPostsSearch;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("numberOfMinutes")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $numberOfMinutes;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("maxSearchLimit")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $maxSearchLimit;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->enableScheduledPostsSearch = isset($data['enableScheduledPostsSearch']) ? $data['enableScheduledPostsSearch'] : null;
        $this->numberOfMinutes = isset($data['numberOfMinutes']) ? $data['numberOfMinutes'] : null;
        $this->maxSearchLimit = isset($data['maxSearchLimit']) ? $data['maxSearchLimit'] : null;
    }

    /**
     * Gets enableScheduledPostsSearch.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getEnableScheduledPostsSearch()
    {
        return $this->enableScheduledPostsSearch;
    }

    /**
     * Sets enableScheduledPostsSearch.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $enableScheduledPostsSearch
     *
     * @return $this
     */
    public function setEnableScheduledPostsSearch(ConfigNodePropertyBoolean $enableScheduledPostsSearch = null)
    {
        $this->enableScheduledPostsSearch = $enableScheduledPostsSearch;

        return $this;
    }

    /**
     * Gets numberOfMinutes.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getNumberOfMinutes()
    {
        return $this->numberOfMinutes;
    }

    /**
     * Sets numberOfMinutes.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $numberOfMinutes
     *
     * @return $this
     */
    public function setNumberOfMinutes(ConfigNodePropertyInteger $numberOfMinutes = null)
    {
        $this->numberOfMinutes = $numberOfMinutes;

        return $this;
    }

    /**
     * Gets maxSearchLimit.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMaxSearchLimit()
    {
        return $this->maxSearchLimit;
    }

    /**
     * Sets maxSearchLimit.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $maxSearchLimit
     *
     * @return $this
     */
    public function setMaxSearchLimit(ConfigNodePropertyInteger $maxSearchLimit = null)
    {
        $this->maxSearchLimit = $maxSearchLimit;

        return $this;
    }
}


