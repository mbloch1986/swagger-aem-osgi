/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheFelixHttpProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheFelixHttpProperties::OAIOrgApacheFelixHttpProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheFelixHttpProperties::OAIOrgApacheFelixHttpProperties() {
    init();
}

OAIOrgApacheFelixHttpProperties::~OAIOrgApacheFelixHttpProperties() {
    this->cleanup();
}

void
OAIOrgApacheFelixHttpProperties::init() {
    org_apache_felix_http_host = new OAIConfigNodePropertyString();
    m_org_apache_felix_http_host_isSet = false;
    org_apache_felix_http_enable = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_http_enable_isSet = false;
    org_osgi_service_http_port = new OAIConfigNodePropertyInteger();
    m_org_osgi_service_http_port_isSet = false;
    org_apache_felix_http_timeout = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_http_timeout_isSet = false;
    org_apache_felix_https_enable = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_https_enable_isSet = false;
    org_osgi_service_http_port_secure = new OAIConfigNodePropertyInteger();
    m_org_osgi_service_http_port_secure_isSet = false;
    org_apache_felix_https_keystore = new OAIConfigNodePropertyString();
    m_org_apache_felix_https_keystore_isSet = false;
    org_apache_felix_https_keystore_password = new OAIConfigNodePropertyString();
    m_org_apache_felix_https_keystore_password_isSet = false;
    org_apache_felix_https_keystore_key_password = new OAIConfigNodePropertyString();
    m_org_apache_felix_https_keystore_key_password_isSet = false;
    org_apache_felix_https_truststore = new OAIConfigNodePropertyString();
    m_org_apache_felix_https_truststore_isSet = false;
    org_apache_felix_https_truststore_password = new OAIConfigNodePropertyString();
    m_org_apache_felix_https_truststore_password_isSet = false;
    org_apache_felix_https_clientcertificate = new OAIConfigNodePropertyDropDown();
    m_org_apache_felix_https_clientcertificate_isSet = false;
    org_apache_felix_http_context_path = new OAIConfigNodePropertyString();
    m_org_apache_felix_http_context_path_isSet = false;
    org_apache_felix_http_mbeans = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_http_mbeans_isSet = false;
    org_apache_felix_http_session_timeout = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_http_session_timeout_isSet = false;
    org_apache_felix_http_jetty_threadpool_max = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_http_jetty_threadpool_max_isSet = false;
    org_apache_felix_http_jetty_acceptors = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_http_jetty_acceptors_isSet = false;
    org_apache_felix_http_jetty_selectors = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_http_jetty_selectors_isSet = false;
    org_apache_felix_http_jetty_header_buffer_size = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_http_jetty_header_buffer_size_isSet = false;
    org_apache_felix_http_jetty_request_buffer_size = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_http_jetty_request_buffer_size_isSet = false;
    org_apache_felix_http_jetty_response_buffer_size = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_http_jetty_response_buffer_size_isSet = false;
    org_apache_felix_http_jetty_max_form_size = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_http_jetty_max_form_size_isSet = false;
    org_apache_felix_http_path_exclusions = new OAIConfigNodePropertyArray();
    m_org_apache_felix_http_path_exclusions_isSet = false;
    org_apache_felix_https_jetty_ciphersuites_excluded = new OAIConfigNodePropertyArray();
    m_org_apache_felix_https_jetty_ciphersuites_excluded_isSet = false;
    org_apache_felix_https_jetty_ciphersuites_included = new OAIConfigNodePropertyArray();
    m_org_apache_felix_https_jetty_ciphersuites_included_isSet = false;
    org_apache_felix_http_jetty_send_server_header = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_http_jetty_send_server_header_isSet = false;
    org_apache_felix_https_jetty_protocols_included = new OAIConfigNodePropertyArray();
    m_org_apache_felix_https_jetty_protocols_included_isSet = false;
    org_apache_felix_https_jetty_protocols_excluded = new OAIConfigNodePropertyArray();
    m_org_apache_felix_https_jetty_protocols_excluded_isSet = false;
    org_apache_felix_proxy_load_balancer_connection_enable = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_proxy_load_balancer_connection_enable_isSet = false;
    org_apache_felix_https_jetty_renegotiate_allowed = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_https_jetty_renegotiate_allowed_isSet = false;
    org_apache_felix_https_jetty_session_cookie_http_only = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_https_jetty_session_cookie_http_only_isSet = false;
    org_apache_felix_https_jetty_session_cookie_secure = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_https_jetty_session_cookie_secure_isSet = false;
    org_eclipse_jetty_servlet_session_id_path_parameter_name = new OAIConfigNodePropertyString();
    m_org_eclipse_jetty_servlet_session_id_path_parameter_name_isSet = false;
    org_eclipse_jetty_servlet_checking_remote_session_id_encoding = new OAIConfigNodePropertyBoolean();
    m_org_eclipse_jetty_servlet_checking_remote_session_id_encoding_isSet = false;
    org_eclipse_jetty_servlet_session_cookie = new OAIConfigNodePropertyString();
    m_org_eclipse_jetty_servlet_session_cookie_isSet = false;
    org_eclipse_jetty_servlet_session_domain = new OAIConfigNodePropertyString();
    m_org_eclipse_jetty_servlet_session_domain_isSet = false;
    org_eclipse_jetty_servlet_session_path = new OAIConfigNodePropertyString();
    m_org_eclipse_jetty_servlet_session_path_isSet = false;
    org_eclipse_jetty_servlet_max_age = new OAIConfigNodePropertyInteger();
    m_org_eclipse_jetty_servlet_max_age_isSet = false;
    org_apache_felix_http_name = new OAIConfigNodePropertyString();
    m_org_apache_felix_http_name_isSet = false;
    org_apache_felix_jetty_gziphandler_enable = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_jetty_gziphandler_enable_isSet = false;
    org_apache_felix_jetty_gzip_min_gzip_size = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_jetty_gzip_min_gzip_size_isSet = false;
    org_apache_felix_jetty_gzip_compression_level = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_jetty_gzip_compression_level_isSet = false;
    org_apache_felix_jetty_gzip_inflate_buffer_size = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_jetty_gzip_inflate_buffer_size_isSet = false;
    org_apache_felix_jetty_gzip_sync_flush = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_jetty_gzip_sync_flush_isSet = false;
    org_apache_felix_jetty_gzip_excluded_user_agents = new OAIConfigNodePropertyArray();
    m_org_apache_felix_jetty_gzip_excluded_user_agents_isSet = false;
    org_apache_felix_jetty_gzip_included_methods = new OAIConfigNodePropertyArray();
    m_org_apache_felix_jetty_gzip_included_methods_isSet = false;
    org_apache_felix_jetty_gzip_excluded_methods = new OAIConfigNodePropertyArray();
    m_org_apache_felix_jetty_gzip_excluded_methods_isSet = false;
    org_apache_felix_jetty_gzip_included_paths = new OAIConfigNodePropertyArray();
    m_org_apache_felix_jetty_gzip_included_paths_isSet = false;
    org_apache_felix_jetty_gzip_excluded_paths = new OAIConfigNodePropertyArray();
    m_org_apache_felix_jetty_gzip_excluded_paths_isSet = false;
    org_apache_felix_jetty_gzip_included_mime_types = new OAIConfigNodePropertyArray();
    m_org_apache_felix_jetty_gzip_included_mime_types_isSet = false;
    org_apache_felix_jetty_gzip_excluded_mime_types = new OAIConfigNodePropertyArray();
    m_org_apache_felix_jetty_gzip_excluded_mime_types_isSet = false;
    org_apache_felix_http_session_invalidate = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_http_session_invalidate_isSet = false;
    org_apache_felix_http_session_uniqueid = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_http_session_uniqueid_isSet = false;
}

void
OAIOrgApacheFelixHttpProperties::cleanup() {
    if(org_apache_felix_http_host != nullptr) { 
        delete org_apache_felix_http_host;
    }
    if(org_apache_felix_http_enable != nullptr) { 
        delete org_apache_felix_http_enable;
    }
    if(org_osgi_service_http_port != nullptr) { 
        delete org_osgi_service_http_port;
    }
    if(org_apache_felix_http_timeout != nullptr) { 
        delete org_apache_felix_http_timeout;
    }
    if(org_apache_felix_https_enable != nullptr) { 
        delete org_apache_felix_https_enable;
    }
    if(org_osgi_service_http_port_secure != nullptr) { 
        delete org_osgi_service_http_port_secure;
    }
    if(org_apache_felix_https_keystore != nullptr) { 
        delete org_apache_felix_https_keystore;
    }
    if(org_apache_felix_https_keystore_password != nullptr) { 
        delete org_apache_felix_https_keystore_password;
    }
    if(org_apache_felix_https_keystore_key_password != nullptr) { 
        delete org_apache_felix_https_keystore_key_password;
    }
    if(org_apache_felix_https_truststore != nullptr) { 
        delete org_apache_felix_https_truststore;
    }
    if(org_apache_felix_https_truststore_password != nullptr) { 
        delete org_apache_felix_https_truststore_password;
    }
    if(org_apache_felix_https_clientcertificate != nullptr) { 
        delete org_apache_felix_https_clientcertificate;
    }
    if(org_apache_felix_http_context_path != nullptr) { 
        delete org_apache_felix_http_context_path;
    }
    if(org_apache_felix_http_mbeans != nullptr) { 
        delete org_apache_felix_http_mbeans;
    }
    if(org_apache_felix_http_session_timeout != nullptr) { 
        delete org_apache_felix_http_session_timeout;
    }
    if(org_apache_felix_http_jetty_threadpool_max != nullptr) { 
        delete org_apache_felix_http_jetty_threadpool_max;
    }
    if(org_apache_felix_http_jetty_acceptors != nullptr) { 
        delete org_apache_felix_http_jetty_acceptors;
    }
    if(org_apache_felix_http_jetty_selectors != nullptr) { 
        delete org_apache_felix_http_jetty_selectors;
    }
    if(org_apache_felix_http_jetty_header_buffer_size != nullptr) { 
        delete org_apache_felix_http_jetty_header_buffer_size;
    }
    if(org_apache_felix_http_jetty_request_buffer_size != nullptr) { 
        delete org_apache_felix_http_jetty_request_buffer_size;
    }
    if(org_apache_felix_http_jetty_response_buffer_size != nullptr) { 
        delete org_apache_felix_http_jetty_response_buffer_size;
    }
    if(org_apache_felix_http_jetty_max_form_size != nullptr) { 
        delete org_apache_felix_http_jetty_max_form_size;
    }
    if(org_apache_felix_http_path_exclusions != nullptr) { 
        delete org_apache_felix_http_path_exclusions;
    }
    if(org_apache_felix_https_jetty_ciphersuites_excluded != nullptr) { 
        delete org_apache_felix_https_jetty_ciphersuites_excluded;
    }
    if(org_apache_felix_https_jetty_ciphersuites_included != nullptr) { 
        delete org_apache_felix_https_jetty_ciphersuites_included;
    }
    if(org_apache_felix_http_jetty_send_server_header != nullptr) { 
        delete org_apache_felix_http_jetty_send_server_header;
    }
    if(org_apache_felix_https_jetty_protocols_included != nullptr) { 
        delete org_apache_felix_https_jetty_protocols_included;
    }
    if(org_apache_felix_https_jetty_protocols_excluded != nullptr) { 
        delete org_apache_felix_https_jetty_protocols_excluded;
    }
    if(org_apache_felix_proxy_load_balancer_connection_enable != nullptr) { 
        delete org_apache_felix_proxy_load_balancer_connection_enable;
    }
    if(org_apache_felix_https_jetty_renegotiate_allowed != nullptr) { 
        delete org_apache_felix_https_jetty_renegotiate_allowed;
    }
    if(org_apache_felix_https_jetty_session_cookie_http_only != nullptr) { 
        delete org_apache_felix_https_jetty_session_cookie_http_only;
    }
    if(org_apache_felix_https_jetty_session_cookie_secure != nullptr) { 
        delete org_apache_felix_https_jetty_session_cookie_secure;
    }
    if(org_eclipse_jetty_servlet_session_id_path_parameter_name != nullptr) { 
        delete org_eclipse_jetty_servlet_session_id_path_parameter_name;
    }
    if(org_eclipse_jetty_servlet_checking_remote_session_id_encoding != nullptr) { 
        delete org_eclipse_jetty_servlet_checking_remote_session_id_encoding;
    }
    if(org_eclipse_jetty_servlet_session_cookie != nullptr) { 
        delete org_eclipse_jetty_servlet_session_cookie;
    }
    if(org_eclipse_jetty_servlet_session_domain != nullptr) { 
        delete org_eclipse_jetty_servlet_session_domain;
    }
    if(org_eclipse_jetty_servlet_session_path != nullptr) { 
        delete org_eclipse_jetty_servlet_session_path;
    }
    if(org_eclipse_jetty_servlet_max_age != nullptr) { 
        delete org_eclipse_jetty_servlet_max_age;
    }
    if(org_apache_felix_http_name != nullptr) { 
        delete org_apache_felix_http_name;
    }
    if(org_apache_felix_jetty_gziphandler_enable != nullptr) { 
        delete org_apache_felix_jetty_gziphandler_enable;
    }
    if(org_apache_felix_jetty_gzip_min_gzip_size != nullptr) { 
        delete org_apache_felix_jetty_gzip_min_gzip_size;
    }
    if(org_apache_felix_jetty_gzip_compression_level != nullptr) { 
        delete org_apache_felix_jetty_gzip_compression_level;
    }
    if(org_apache_felix_jetty_gzip_inflate_buffer_size != nullptr) { 
        delete org_apache_felix_jetty_gzip_inflate_buffer_size;
    }
    if(org_apache_felix_jetty_gzip_sync_flush != nullptr) { 
        delete org_apache_felix_jetty_gzip_sync_flush;
    }
    if(org_apache_felix_jetty_gzip_excluded_user_agents != nullptr) { 
        delete org_apache_felix_jetty_gzip_excluded_user_agents;
    }
    if(org_apache_felix_jetty_gzip_included_methods != nullptr) { 
        delete org_apache_felix_jetty_gzip_included_methods;
    }
    if(org_apache_felix_jetty_gzip_excluded_methods != nullptr) { 
        delete org_apache_felix_jetty_gzip_excluded_methods;
    }
    if(org_apache_felix_jetty_gzip_included_paths != nullptr) { 
        delete org_apache_felix_jetty_gzip_included_paths;
    }
    if(org_apache_felix_jetty_gzip_excluded_paths != nullptr) { 
        delete org_apache_felix_jetty_gzip_excluded_paths;
    }
    if(org_apache_felix_jetty_gzip_included_mime_types != nullptr) { 
        delete org_apache_felix_jetty_gzip_included_mime_types;
    }
    if(org_apache_felix_jetty_gzip_excluded_mime_types != nullptr) { 
        delete org_apache_felix_jetty_gzip_excluded_mime_types;
    }
    if(org_apache_felix_http_session_invalidate != nullptr) { 
        delete org_apache_felix_http_session_invalidate;
    }
    if(org_apache_felix_http_session_uniqueid != nullptr) { 
        delete org_apache_felix_http_session_uniqueid;
    }
}

OAIOrgApacheFelixHttpProperties*
OAIOrgApacheFelixHttpProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheFelixHttpProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&org_apache_felix_http_host, pJson["org.apache.felix.http.host"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_felix_http_enable, pJson["org.apache.felix.http.enable"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_osgi_service_http_port, pJson["org.osgi.service.http.port"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_timeout, pJson["org.apache.felix.http.timeout"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_https_enable, pJson["org.apache.felix.https.enable"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_osgi_service_http_port_secure, pJson["org.osgi.service.http.port.secure"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_https_keystore, pJson["org.apache.felix.https.keystore"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_felix_https_keystore_password, pJson["org.apache.felix.https.keystore.password"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_felix_https_keystore_key_password, pJson["org.apache.felix.https.keystore.key.password"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_felix_https_truststore, pJson["org.apache.felix.https.truststore"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_felix_https_truststore_password, pJson["org.apache.felix.https.truststore.password"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_felix_https_clientcertificate, pJson["org.apache.felix.https.clientcertificate"], "OAIConfigNodePropertyDropDown", "OAIConfigNodePropertyDropDown");
    
    ::OpenAPI::setValue(&org_apache_felix_http_context_path, pJson["org.apache.felix.http.context_path"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_felix_http_mbeans, pJson["org.apache.felix.http.mbeans"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_felix_http_session_timeout, pJson["org.apache.felix.http.session.timeout"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_jetty_threadpool_max, pJson["org.apache.felix.http.jetty.threadpool.max"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_jetty_acceptors, pJson["org.apache.felix.http.jetty.acceptors"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_jetty_selectors, pJson["org.apache.felix.http.jetty.selectors"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_jetty_header_buffer_size, pJson["org.apache.felix.http.jetty.headerBufferSize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_jetty_request_buffer_size, pJson["org.apache.felix.http.jetty.requestBufferSize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_jetty_response_buffer_size, pJson["org.apache.felix.http.jetty.responseBufferSize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_jetty_max_form_size, pJson["org.apache.felix.http.jetty.maxFormSize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_path_exclusions, pJson["org.apache.felix.http.path_exclusions"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_https_jetty_ciphersuites_excluded, pJson["org.apache.felix.https.jetty.ciphersuites.excluded"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_https_jetty_ciphersuites_included, pJson["org.apache.felix.https.jetty.ciphersuites.included"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_http_jetty_send_server_header, pJson["org.apache.felix.http.jetty.sendServerHeader"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_felix_https_jetty_protocols_included, pJson["org.apache.felix.https.jetty.protocols.included"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_https_jetty_protocols_excluded, pJson["org.apache.felix.https.jetty.protocols.excluded"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_proxy_load_balancer_connection_enable, pJson["org.apache.felix.proxy.load.balancer.connection.enable"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_felix_https_jetty_renegotiate_allowed, pJson["org.apache.felix.https.jetty.renegotiateAllowed"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_felix_https_jetty_session_cookie_http_only, pJson["org.apache.felix.https.jetty.session.cookie.httpOnly"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_felix_https_jetty_session_cookie_secure, pJson["org.apache.felix.https.jetty.session.cookie.secure"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_eclipse_jetty_servlet_session_id_path_parameter_name, pJson["org.eclipse.jetty.servlet.SessionIdPathParameterName"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_eclipse_jetty_servlet_checking_remote_session_id_encoding, pJson["org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_eclipse_jetty_servlet_session_cookie, pJson["org.eclipse.jetty.servlet.SessionCookie"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_eclipse_jetty_servlet_session_domain, pJson["org.eclipse.jetty.servlet.SessionDomain"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_eclipse_jetty_servlet_session_path, pJson["org.eclipse.jetty.servlet.SessionPath"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_eclipse_jetty_servlet_max_age, pJson["org.eclipse.jetty.servlet.MaxAge"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_http_name, pJson["org.apache.felix.http.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gziphandler_enable, pJson["org.apache.felix.jetty.gziphandler.enable"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_min_gzip_size, pJson["org.apache.felix.jetty.gzip.minGzipSize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_compression_level, pJson["org.apache.felix.jetty.gzip.compressionLevel"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_inflate_buffer_size, pJson["org.apache.felix.jetty.gzip.inflateBufferSize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_sync_flush, pJson["org.apache.felix.jetty.gzip.syncFlush"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_excluded_user_agents, pJson["org.apache.felix.jetty.gzip.excludedUserAgents"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_included_methods, pJson["org.apache.felix.jetty.gzip.includedMethods"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_excluded_methods, pJson["org.apache.felix.jetty.gzip.excludedMethods"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_included_paths, pJson["org.apache.felix.jetty.gzip.includedPaths"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_excluded_paths, pJson["org.apache.felix.jetty.gzip.excludedPaths"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_included_mime_types, pJson["org.apache.felix.jetty.gzip.includedMimeTypes"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_jetty_gzip_excluded_mime_types, pJson["org.apache.felix.jetty.gzip.excludedMimeTypes"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_http_session_invalidate, pJson["org.apache.felix.http.session.invalidate"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_felix_http_session_uniqueid, pJson["org.apache.felix.http.session.uniqueid"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIOrgApacheFelixHttpProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheFelixHttpProperties::asJsonObject() {
    QJsonObject obj;
    if((org_apache_felix_http_host != nullptr) && (org_apache_felix_http_host->isSet())){
        toJsonValue(QString("org.apache.felix.http.host"), org_apache_felix_http_host, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_felix_http_enable != nullptr) && (org_apache_felix_http_enable->isSet())){
        toJsonValue(QString("org.apache.felix.http.enable"), org_apache_felix_http_enable, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_osgi_service_http_port != nullptr) && (org_osgi_service_http_port->isSet())){
        toJsonValue(QString("org.osgi.service.http.port"), org_osgi_service_http_port, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_timeout != nullptr) && (org_apache_felix_http_timeout->isSet())){
        toJsonValue(QString("org.apache.felix.http.timeout"), org_apache_felix_http_timeout, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_https_enable != nullptr) && (org_apache_felix_https_enable->isSet())){
        toJsonValue(QString("org.apache.felix.https.enable"), org_apache_felix_https_enable, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_osgi_service_http_port_secure != nullptr) && (org_osgi_service_http_port_secure->isSet())){
        toJsonValue(QString("org.osgi.service.http.port.secure"), org_osgi_service_http_port_secure, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_https_keystore != nullptr) && (org_apache_felix_https_keystore->isSet())){
        toJsonValue(QString("org.apache.felix.https.keystore"), org_apache_felix_https_keystore, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_felix_https_keystore_password != nullptr) && (org_apache_felix_https_keystore_password->isSet())){
        toJsonValue(QString("org.apache.felix.https.keystore.password"), org_apache_felix_https_keystore_password, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_felix_https_keystore_key_password != nullptr) && (org_apache_felix_https_keystore_key_password->isSet())){
        toJsonValue(QString("org.apache.felix.https.keystore.key.password"), org_apache_felix_https_keystore_key_password, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_felix_https_truststore != nullptr) && (org_apache_felix_https_truststore->isSet())){
        toJsonValue(QString("org.apache.felix.https.truststore"), org_apache_felix_https_truststore, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_felix_https_truststore_password != nullptr) && (org_apache_felix_https_truststore_password->isSet())){
        toJsonValue(QString("org.apache.felix.https.truststore.password"), org_apache_felix_https_truststore_password, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_felix_https_clientcertificate != nullptr) && (org_apache_felix_https_clientcertificate->isSet())){
        toJsonValue(QString("org.apache.felix.https.clientcertificate"), org_apache_felix_https_clientcertificate, obj, QString("OAIConfigNodePropertyDropDown"));
    }
    if((org_apache_felix_http_context_path != nullptr) && (org_apache_felix_http_context_path->isSet())){
        toJsonValue(QString("org.apache.felix.http.context_path"), org_apache_felix_http_context_path, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_felix_http_mbeans != nullptr) && (org_apache_felix_http_mbeans->isSet())){
        toJsonValue(QString("org.apache.felix.http.mbeans"), org_apache_felix_http_mbeans, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_felix_http_session_timeout != nullptr) && (org_apache_felix_http_session_timeout->isSet())){
        toJsonValue(QString("org.apache.felix.http.session.timeout"), org_apache_felix_http_session_timeout, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_jetty_threadpool_max != nullptr) && (org_apache_felix_http_jetty_threadpool_max->isSet())){
        toJsonValue(QString("org.apache.felix.http.jetty.threadpool.max"), org_apache_felix_http_jetty_threadpool_max, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_jetty_acceptors != nullptr) && (org_apache_felix_http_jetty_acceptors->isSet())){
        toJsonValue(QString("org.apache.felix.http.jetty.acceptors"), org_apache_felix_http_jetty_acceptors, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_jetty_selectors != nullptr) && (org_apache_felix_http_jetty_selectors->isSet())){
        toJsonValue(QString("org.apache.felix.http.jetty.selectors"), org_apache_felix_http_jetty_selectors, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_jetty_header_buffer_size != nullptr) && (org_apache_felix_http_jetty_header_buffer_size->isSet())){
        toJsonValue(QString("org.apache.felix.http.jetty.headerBufferSize"), org_apache_felix_http_jetty_header_buffer_size, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_jetty_request_buffer_size != nullptr) && (org_apache_felix_http_jetty_request_buffer_size->isSet())){
        toJsonValue(QString("org.apache.felix.http.jetty.requestBufferSize"), org_apache_felix_http_jetty_request_buffer_size, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_jetty_response_buffer_size != nullptr) && (org_apache_felix_http_jetty_response_buffer_size->isSet())){
        toJsonValue(QString("org.apache.felix.http.jetty.responseBufferSize"), org_apache_felix_http_jetty_response_buffer_size, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_jetty_max_form_size != nullptr) && (org_apache_felix_http_jetty_max_form_size->isSet())){
        toJsonValue(QString("org.apache.felix.http.jetty.maxFormSize"), org_apache_felix_http_jetty_max_form_size, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_path_exclusions != nullptr) && (org_apache_felix_http_path_exclusions->isSet())){
        toJsonValue(QString("org.apache.felix.http.path_exclusions"), org_apache_felix_http_path_exclusions, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_https_jetty_ciphersuites_excluded != nullptr) && (org_apache_felix_https_jetty_ciphersuites_excluded->isSet())){
        toJsonValue(QString("org.apache.felix.https.jetty.ciphersuites.excluded"), org_apache_felix_https_jetty_ciphersuites_excluded, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_https_jetty_ciphersuites_included != nullptr) && (org_apache_felix_https_jetty_ciphersuites_included->isSet())){
        toJsonValue(QString("org.apache.felix.https.jetty.ciphersuites.included"), org_apache_felix_https_jetty_ciphersuites_included, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_http_jetty_send_server_header != nullptr) && (org_apache_felix_http_jetty_send_server_header->isSet())){
        toJsonValue(QString("org.apache.felix.http.jetty.sendServerHeader"), org_apache_felix_http_jetty_send_server_header, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_felix_https_jetty_protocols_included != nullptr) && (org_apache_felix_https_jetty_protocols_included->isSet())){
        toJsonValue(QString("org.apache.felix.https.jetty.protocols.included"), org_apache_felix_https_jetty_protocols_included, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_https_jetty_protocols_excluded != nullptr) && (org_apache_felix_https_jetty_protocols_excluded->isSet())){
        toJsonValue(QString("org.apache.felix.https.jetty.protocols.excluded"), org_apache_felix_https_jetty_protocols_excluded, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_proxy_load_balancer_connection_enable != nullptr) && (org_apache_felix_proxy_load_balancer_connection_enable->isSet())){
        toJsonValue(QString("org.apache.felix.proxy.load.balancer.connection.enable"), org_apache_felix_proxy_load_balancer_connection_enable, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_felix_https_jetty_renegotiate_allowed != nullptr) && (org_apache_felix_https_jetty_renegotiate_allowed->isSet())){
        toJsonValue(QString("org.apache.felix.https.jetty.renegotiateAllowed"), org_apache_felix_https_jetty_renegotiate_allowed, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_felix_https_jetty_session_cookie_http_only != nullptr) && (org_apache_felix_https_jetty_session_cookie_http_only->isSet())){
        toJsonValue(QString("org.apache.felix.https.jetty.session.cookie.httpOnly"), org_apache_felix_https_jetty_session_cookie_http_only, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_felix_https_jetty_session_cookie_secure != nullptr) && (org_apache_felix_https_jetty_session_cookie_secure->isSet())){
        toJsonValue(QString("org.apache.felix.https.jetty.session.cookie.secure"), org_apache_felix_https_jetty_session_cookie_secure, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_eclipse_jetty_servlet_session_id_path_parameter_name != nullptr) && (org_eclipse_jetty_servlet_session_id_path_parameter_name->isSet())){
        toJsonValue(QString("org.eclipse.jetty.servlet.SessionIdPathParameterName"), org_eclipse_jetty_servlet_session_id_path_parameter_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_eclipse_jetty_servlet_checking_remote_session_id_encoding != nullptr) && (org_eclipse_jetty_servlet_checking_remote_session_id_encoding->isSet())){
        toJsonValue(QString("org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding"), org_eclipse_jetty_servlet_checking_remote_session_id_encoding, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_eclipse_jetty_servlet_session_cookie != nullptr) && (org_eclipse_jetty_servlet_session_cookie->isSet())){
        toJsonValue(QString("org.eclipse.jetty.servlet.SessionCookie"), org_eclipse_jetty_servlet_session_cookie, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_eclipse_jetty_servlet_session_domain != nullptr) && (org_eclipse_jetty_servlet_session_domain->isSet())){
        toJsonValue(QString("org.eclipse.jetty.servlet.SessionDomain"), org_eclipse_jetty_servlet_session_domain, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_eclipse_jetty_servlet_session_path != nullptr) && (org_eclipse_jetty_servlet_session_path->isSet())){
        toJsonValue(QString("org.eclipse.jetty.servlet.SessionPath"), org_eclipse_jetty_servlet_session_path, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_eclipse_jetty_servlet_max_age != nullptr) && (org_eclipse_jetty_servlet_max_age->isSet())){
        toJsonValue(QString("org.eclipse.jetty.servlet.MaxAge"), org_eclipse_jetty_servlet_max_age, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_http_name != nullptr) && (org_apache_felix_http_name->isSet())){
        toJsonValue(QString("org.apache.felix.http.name"), org_apache_felix_http_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_felix_jetty_gziphandler_enable != nullptr) && (org_apache_felix_jetty_gziphandler_enable->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gziphandler.enable"), org_apache_felix_jetty_gziphandler_enable, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_felix_jetty_gzip_min_gzip_size != nullptr) && (org_apache_felix_jetty_gzip_min_gzip_size->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.minGzipSize"), org_apache_felix_jetty_gzip_min_gzip_size, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_jetty_gzip_compression_level != nullptr) && (org_apache_felix_jetty_gzip_compression_level->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.compressionLevel"), org_apache_felix_jetty_gzip_compression_level, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_jetty_gzip_inflate_buffer_size != nullptr) && (org_apache_felix_jetty_gzip_inflate_buffer_size->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.inflateBufferSize"), org_apache_felix_jetty_gzip_inflate_buffer_size, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_jetty_gzip_sync_flush != nullptr) && (org_apache_felix_jetty_gzip_sync_flush->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.syncFlush"), org_apache_felix_jetty_gzip_sync_flush, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_felix_jetty_gzip_excluded_user_agents != nullptr) && (org_apache_felix_jetty_gzip_excluded_user_agents->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.excludedUserAgents"), org_apache_felix_jetty_gzip_excluded_user_agents, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_jetty_gzip_included_methods != nullptr) && (org_apache_felix_jetty_gzip_included_methods->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.includedMethods"), org_apache_felix_jetty_gzip_included_methods, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_jetty_gzip_excluded_methods != nullptr) && (org_apache_felix_jetty_gzip_excluded_methods->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.excludedMethods"), org_apache_felix_jetty_gzip_excluded_methods, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_jetty_gzip_included_paths != nullptr) && (org_apache_felix_jetty_gzip_included_paths->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.includedPaths"), org_apache_felix_jetty_gzip_included_paths, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_jetty_gzip_excluded_paths != nullptr) && (org_apache_felix_jetty_gzip_excluded_paths->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.excludedPaths"), org_apache_felix_jetty_gzip_excluded_paths, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_jetty_gzip_included_mime_types != nullptr) && (org_apache_felix_jetty_gzip_included_mime_types->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.includedMimeTypes"), org_apache_felix_jetty_gzip_included_mime_types, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_jetty_gzip_excluded_mime_types != nullptr) && (org_apache_felix_jetty_gzip_excluded_mime_types->isSet())){
        toJsonValue(QString("org.apache.felix.jetty.gzip.excludedMimeTypes"), org_apache_felix_jetty_gzip_excluded_mime_types, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_http_session_invalidate != nullptr) && (org_apache_felix_http_session_invalidate->isSet())){
        toJsonValue(QString("org.apache.felix.http.session.invalidate"), org_apache_felix_http_session_invalidate, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_felix_http_session_uniqueid != nullptr) && (org_apache_felix_http_session_uniqueid->isSet())){
        toJsonValue(QString("org.apache.felix.http.session.uniqueid"), org_apache_felix_http_session_uniqueid, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpHost() {
    return org_apache_felix_http_host;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpHost(OAIConfigNodePropertyString* org_apache_felix_http_host) {
    this->org_apache_felix_http_host = org_apache_felix_http_host;
    this->m_org_apache_felix_http_host_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpEnable() {
    return org_apache_felix_http_enable;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpEnable(OAIConfigNodePropertyBoolean* org_apache_felix_http_enable) {
    this->org_apache_felix_http_enable = org_apache_felix_http_enable;
    this->m_org_apache_felix_http_enable_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgOsgiServiceHttpPort() {
    return org_osgi_service_http_port;
}
void
OAIOrgApacheFelixHttpProperties::setOrgOsgiServiceHttpPort(OAIConfigNodePropertyInteger* org_osgi_service_http_port) {
    this->org_osgi_service_http_port = org_osgi_service_http_port;
    this->m_org_osgi_service_http_port_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpTimeout() {
    return org_apache_felix_http_timeout;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpTimeout(OAIConfigNodePropertyInteger* org_apache_felix_http_timeout) {
    this->org_apache_felix_http_timeout = org_apache_felix_http_timeout;
    this->m_org_apache_felix_http_timeout_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsEnable() {
    return org_apache_felix_https_enable;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsEnable(OAIConfigNodePropertyBoolean* org_apache_felix_https_enable) {
    this->org_apache_felix_https_enable = org_apache_felix_https_enable;
    this->m_org_apache_felix_https_enable_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgOsgiServiceHttpPortSecure() {
    return org_osgi_service_http_port_secure;
}
void
OAIOrgApacheFelixHttpProperties::setOrgOsgiServiceHttpPortSecure(OAIConfigNodePropertyInteger* org_osgi_service_http_port_secure) {
    this->org_osgi_service_http_port_secure = org_osgi_service_http_port_secure;
    this->m_org_osgi_service_http_port_secure_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsKeystore() {
    return org_apache_felix_https_keystore;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsKeystore(OAIConfigNodePropertyString* org_apache_felix_https_keystore) {
    this->org_apache_felix_https_keystore = org_apache_felix_https_keystore;
    this->m_org_apache_felix_https_keystore_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsKeystorePassword() {
    return org_apache_felix_https_keystore_password;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsKeystorePassword(OAIConfigNodePropertyString* org_apache_felix_https_keystore_password) {
    this->org_apache_felix_https_keystore_password = org_apache_felix_https_keystore_password;
    this->m_org_apache_felix_https_keystore_password_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsKeystoreKeyPassword() {
    return org_apache_felix_https_keystore_key_password;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsKeystoreKeyPassword(OAIConfigNodePropertyString* org_apache_felix_https_keystore_key_password) {
    this->org_apache_felix_https_keystore_key_password = org_apache_felix_https_keystore_key_password;
    this->m_org_apache_felix_https_keystore_key_password_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsTruststore() {
    return org_apache_felix_https_truststore;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsTruststore(OAIConfigNodePropertyString* org_apache_felix_https_truststore) {
    this->org_apache_felix_https_truststore = org_apache_felix_https_truststore;
    this->m_org_apache_felix_https_truststore_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsTruststorePassword() {
    return org_apache_felix_https_truststore_password;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsTruststorePassword(OAIConfigNodePropertyString* org_apache_felix_https_truststore_password) {
    this->org_apache_felix_https_truststore_password = org_apache_felix_https_truststore_password;
    this->m_org_apache_felix_https_truststore_password_isSet = true;
}

OAIConfigNodePropertyDropDown*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsClientcertificate() {
    return org_apache_felix_https_clientcertificate;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsClientcertificate(OAIConfigNodePropertyDropDown* org_apache_felix_https_clientcertificate) {
    this->org_apache_felix_https_clientcertificate = org_apache_felix_https_clientcertificate;
    this->m_org_apache_felix_https_clientcertificate_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpContextPath() {
    return org_apache_felix_http_context_path;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpContextPath(OAIConfigNodePropertyString* org_apache_felix_http_context_path) {
    this->org_apache_felix_http_context_path = org_apache_felix_http_context_path;
    this->m_org_apache_felix_http_context_path_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpMbeans() {
    return org_apache_felix_http_mbeans;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpMbeans(OAIConfigNodePropertyBoolean* org_apache_felix_http_mbeans) {
    this->org_apache_felix_http_mbeans = org_apache_felix_http_mbeans;
    this->m_org_apache_felix_http_mbeans_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpSessionTimeout() {
    return org_apache_felix_http_session_timeout;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpSessionTimeout(OAIConfigNodePropertyInteger* org_apache_felix_http_session_timeout) {
    this->org_apache_felix_http_session_timeout = org_apache_felix_http_session_timeout;
    this->m_org_apache_felix_http_session_timeout_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyThreadpoolMax() {
    return org_apache_felix_http_jetty_threadpool_max;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyThreadpoolMax(OAIConfigNodePropertyInteger* org_apache_felix_http_jetty_threadpool_max) {
    this->org_apache_felix_http_jetty_threadpool_max = org_apache_felix_http_jetty_threadpool_max;
    this->m_org_apache_felix_http_jetty_threadpool_max_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyAcceptors() {
    return org_apache_felix_http_jetty_acceptors;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyAcceptors(OAIConfigNodePropertyInteger* org_apache_felix_http_jetty_acceptors) {
    this->org_apache_felix_http_jetty_acceptors = org_apache_felix_http_jetty_acceptors;
    this->m_org_apache_felix_http_jetty_acceptors_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettySelectors() {
    return org_apache_felix_http_jetty_selectors;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettySelectors(OAIConfigNodePropertyInteger* org_apache_felix_http_jetty_selectors) {
    this->org_apache_felix_http_jetty_selectors = org_apache_felix_http_jetty_selectors;
    this->m_org_apache_felix_http_jetty_selectors_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyHeaderBufferSize() {
    return org_apache_felix_http_jetty_header_buffer_size;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyHeaderBufferSize(OAIConfigNodePropertyInteger* org_apache_felix_http_jetty_header_buffer_size) {
    this->org_apache_felix_http_jetty_header_buffer_size = org_apache_felix_http_jetty_header_buffer_size;
    this->m_org_apache_felix_http_jetty_header_buffer_size_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyRequestBufferSize() {
    return org_apache_felix_http_jetty_request_buffer_size;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyRequestBufferSize(OAIConfigNodePropertyInteger* org_apache_felix_http_jetty_request_buffer_size) {
    this->org_apache_felix_http_jetty_request_buffer_size = org_apache_felix_http_jetty_request_buffer_size;
    this->m_org_apache_felix_http_jetty_request_buffer_size_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyResponseBufferSize() {
    return org_apache_felix_http_jetty_response_buffer_size;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyResponseBufferSize(OAIConfigNodePropertyInteger* org_apache_felix_http_jetty_response_buffer_size) {
    this->org_apache_felix_http_jetty_response_buffer_size = org_apache_felix_http_jetty_response_buffer_size;
    this->m_org_apache_felix_http_jetty_response_buffer_size_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyMaxFormSize() {
    return org_apache_felix_http_jetty_max_form_size;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyMaxFormSize(OAIConfigNodePropertyInteger* org_apache_felix_http_jetty_max_form_size) {
    this->org_apache_felix_http_jetty_max_form_size = org_apache_felix_http_jetty_max_form_size;
    this->m_org_apache_felix_http_jetty_max_form_size_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpPathExclusions() {
    return org_apache_felix_http_path_exclusions;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpPathExclusions(OAIConfigNodePropertyArray* org_apache_felix_http_path_exclusions) {
    this->org_apache_felix_http_path_exclusions = org_apache_felix_http_path_exclusions;
    this->m_org_apache_felix_http_path_exclusions_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyCiphersuitesExcluded() {
    return org_apache_felix_https_jetty_ciphersuites_excluded;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyCiphersuitesExcluded(OAIConfigNodePropertyArray* org_apache_felix_https_jetty_ciphersuites_excluded) {
    this->org_apache_felix_https_jetty_ciphersuites_excluded = org_apache_felix_https_jetty_ciphersuites_excluded;
    this->m_org_apache_felix_https_jetty_ciphersuites_excluded_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyCiphersuitesIncluded() {
    return org_apache_felix_https_jetty_ciphersuites_included;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyCiphersuitesIncluded(OAIConfigNodePropertyArray* org_apache_felix_https_jetty_ciphersuites_included) {
    this->org_apache_felix_https_jetty_ciphersuites_included = org_apache_felix_https_jetty_ciphersuites_included;
    this->m_org_apache_felix_https_jetty_ciphersuites_included_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettySendServerHeader() {
    return org_apache_felix_http_jetty_send_server_header;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettySendServerHeader(OAIConfigNodePropertyBoolean* org_apache_felix_http_jetty_send_server_header) {
    this->org_apache_felix_http_jetty_send_server_header = org_apache_felix_http_jetty_send_server_header;
    this->m_org_apache_felix_http_jetty_send_server_header_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyProtocolsIncluded() {
    return org_apache_felix_https_jetty_protocols_included;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyProtocolsIncluded(OAIConfigNodePropertyArray* org_apache_felix_https_jetty_protocols_included) {
    this->org_apache_felix_https_jetty_protocols_included = org_apache_felix_https_jetty_protocols_included;
    this->m_org_apache_felix_https_jetty_protocols_included_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyProtocolsExcluded() {
    return org_apache_felix_https_jetty_protocols_excluded;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyProtocolsExcluded(OAIConfigNodePropertyArray* org_apache_felix_https_jetty_protocols_excluded) {
    this->org_apache_felix_https_jetty_protocols_excluded = org_apache_felix_https_jetty_protocols_excluded;
    this->m_org_apache_felix_https_jetty_protocols_excluded_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixProxyLoadBalancerConnectionEnable() {
    return org_apache_felix_proxy_load_balancer_connection_enable;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixProxyLoadBalancerConnectionEnable(OAIConfigNodePropertyBoolean* org_apache_felix_proxy_load_balancer_connection_enable) {
    this->org_apache_felix_proxy_load_balancer_connection_enable = org_apache_felix_proxy_load_balancer_connection_enable;
    this->m_org_apache_felix_proxy_load_balancer_connection_enable_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyRenegotiateAllowed() {
    return org_apache_felix_https_jetty_renegotiate_allowed;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyRenegotiateAllowed(OAIConfigNodePropertyBoolean* org_apache_felix_https_jetty_renegotiate_allowed) {
    this->org_apache_felix_https_jetty_renegotiate_allowed = org_apache_felix_https_jetty_renegotiate_allowed;
    this->m_org_apache_felix_https_jetty_renegotiate_allowed_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettySessionCookieHttpOnly() {
    return org_apache_felix_https_jetty_session_cookie_http_only;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettySessionCookieHttpOnly(OAIConfigNodePropertyBoolean* org_apache_felix_https_jetty_session_cookie_http_only) {
    this->org_apache_felix_https_jetty_session_cookie_http_only = org_apache_felix_https_jetty_session_cookie_http_only;
    this->m_org_apache_felix_https_jetty_session_cookie_http_only_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettySessionCookieSecure() {
    return org_apache_felix_https_jetty_session_cookie_secure;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettySessionCookieSecure(OAIConfigNodePropertyBoolean* org_apache_felix_https_jetty_session_cookie_secure) {
    this->org_apache_felix_https_jetty_session_cookie_secure = org_apache_felix_https_jetty_session_cookie_secure;
    this->m_org_apache_felix_https_jetty_session_cookie_secure_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgEclipseJettyServletSessionIdPathParameterName() {
    return org_eclipse_jetty_servlet_session_id_path_parameter_name;
}
void
OAIOrgApacheFelixHttpProperties::setOrgEclipseJettyServletSessionIdPathParameterName(OAIConfigNodePropertyString* org_eclipse_jetty_servlet_session_id_path_parameter_name) {
    this->org_eclipse_jetty_servlet_session_id_path_parameter_name = org_eclipse_jetty_servlet_session_id_path_parameter_name;
    this->m_org_eclipse_jetty_servlet_session_id_path_parameter_name_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgEclipseJettyServletCheckingRemoteSessionIdEncoding() {
    return org_eclipse_jetty_servlet_checking_remote_session_id_encoding;
}
void
OAIOrgApacheFelixHttpProperties::setOrgEclipseJettyServletCheckingRemoteSessionIdEncoding(OAIConfigNodePropertyBoolean* org_eclipse_jetty_servlet_checking_remote_session_id_encoding) {
    this->org_eclipse_jetty_servlet_checking_remote_session_id_encoding = org_eclipse_jetty_servlet_checking_remote_session_id_encoding;
    this->m_org_eclipse_jetty_servlet_checking_remote_session_id_encoding_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgEclipseJettyServletSessionCookie() {
    return org_eclipse_jetty_servlet_session_cookie;
}
void
OAIOrgApacheFelixHttpProperties::setOrgEclipseJettyServletSessionCookie(OAIConfigNodePropertyString* org_eclipse_jetty_servlet_session_cookie) {
    this->org_eclipse_jetty_servlet_session_cookie = org_eclipse_jetty_servlet_session_cookie;
    this->m_org_eclipse_jetty_servlet_session_cookie_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgEclipseJettyServletSessionDomain() {
    return org_eclipse_jetty_servlet_session_domain;
}
void
OAIOrgApacheFelixHttpProperties::setOrgEclipseJettyServletSessionDomain(OAIConfigNodePropertyString* org_eclipse_jetty_servlet_session_domain) {
    this->org_eclipse_jetty_servlet_session_domain = org_eclipse_jetty_servlet_session_domain;
    this->m_org_eclipse_jetty_servlet_session_domain_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgEclipseJettyServletSessionPath() {
    return org_eclipse_jetty_servlet_session_path;
}
void
OAIOrgApacheFelixHttpProperties::setOrgEclipseJettyServletSessionPath(OAIConfigNodePropertyString* org_eclipse_jetty_servlet_session_path) {
    this->org_eclipse_jetty_servlet_session_path = org_eclipse_jetty_servlet_session_path;
    this->m_org_eclipse_jetty_servlet_session_path_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgEclipseJettyServletMaxAge() {
    return org_eclipse_jetty_servlet_max_age;
}
void
OAIOrgApacheFelixHttpProperties::setOrgEclipseJettyServletMaxAge(OAIConfigNodePropertyInteger* org_eclipse_jetty_servlet_max_age) {
    this->org_eclipse_jetty_servlet_max_age = org_eclipse_jetty_servlet_max_age;
    this->m_org_eclipse_jetty_servlet_max_age_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpName() {
    return org_apache_felix_http_name;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpName(OAIConfigNodePropertyString* org_apache_felix_http_name) {
    this->org_apache_felix_http_name = org_apache_felix_http_name;
    this->m_org_apache_felix_http_name_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGziphandlerEnable() {
    return org_apache_felix_jetty_gziphandler_enable;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGziphandlerEnable(OAIConfigNodePropertyBoolean* org_apache_felix_jetty_gziphandler_enable) {
    this->org_apache_felix_jetty_gziphandler_enable = org_apache_felix_jetty_gziphandler_enable;
    this->m_org_apache_felix_jetty_gziphandler_enable_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipMinGzipSize() {
    return org_apache_felix_jetty_gzip_min_gzip_size;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipMinGzipSize(OAIConfigNodePropertyInteger* org_apache_felix_jetty_gzip_min_gzip_size) {
    this->org_apache_felix_jetty_gzip_min_gzip_size = org_apache_felix_jetty_gzip_min_gzip_size;
    this->m_org_apache_felix_jetty_gzip_min_gzip_size_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipCompressionLevel() {
    return org_apache_felix_jetty_gzip_compression_level;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipCompressionLevel(OAIConfigNodePropertyInteger* org_apache_felix_jetty_gzip_compression_level) {
    this->org_apache_felix_jetty_gzip_compression_level = org_apache_felix_jetty_gzip_compression_level;
    this->m_org_apache_felix_jetty_gzip_compression_level_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipInflateBufferSize() {
    return org_apache_felix_jetty_gzip_inflate_buffer_size;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipInflateBufferSize(OAIConfigNodePropertyInteger* org_apache_felix_jetty_gzip_inflate_buffer_size) {
    this->org_apache_felix_jetty_gzip_inflate_buffer_size = org_apache_felix_jetty_gzip_inflate_buffer_size;
    this->m_org_apache_felix_jetty_gzip_inflate_buffer_size_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipSyncFlush() {
    return org_apache_felix_jetty_gzip_sync_flush;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipSyncFlush(OAIConfigNodePropertyBoolean* org_apache_felix_jetty_gzip_sync_flush) {
    this->org_apache_felix_jetty_gzip_sync_flush = org_apache_felix_jetty_gzip_sync_flush;
    this->m_org_apache_felix_jetty_gzip_sync_flush_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipExcludedUserAgents() {
    return org_apache_felix_jetty_gzip_excluded_user_agents;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipExcludedUserAgents(OAIConfigNodePropertyArray* org_apache_felix_jetty_gzip_excluded_user_agents) {
    this->org_apache_felix_jetty_gzip_excluded_user_agents = org_apache_felix_jetty_gzip_excluded_user_agents;
    this->m_org_apache_felix_jetty_gzip_excluded_user_agents_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipIncludedMethods() {
    return org_apache_felix_jetty_gzip_included_methods;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipIncludedMethods(OAIConfigNodePropertyArray* org_apache_felix_jetty_gzip_included_methods) {
    this->org_apache_felix_jetty_gzip_included_methods = org_apache_felix_jetty_gzip_included_methods;
    this->m_org_apache_felix_jetty_gzip_included_methods_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipExcludedMethods() {
    return org_apache_felix_jetty_gzip_excluded_methods;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipExcludedMethods(OAIConfigNodePropertyArray* org_apache_felix_jetty_gzip_excluded_methods) {
    this->org_apache_felix_jetty_gzip_excluded_methods = org_apache_felix_jetty_gzip_excluded_methods;
    this->m_org_apache_felix_jetty_gzip_excluded_methods_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipIncludedPaths() {
    return org_apache_felix_jetty_gzip_included_paths;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipIncludedPaths(OAIConfigNodePropertyArray* org_apache_felix_jetty_gzip_included_paths) {
    this->org_apache_felix_jetty_gzip_included_paths = org_apache_felix_jetty_gzip_included_paths;
    this->m_org_apache_felix_jetty_gzip_included_paths_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipExcludedPaths() {
    return org_apache_felix_jetty_gzip_excluded_paths;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipExcludedPaths(OAIConfigNodePropertyArray* org_apache_felix_jetty_gzip_excluded_paths) {
    this->org_apache_felix_jetty_gzip_excluded_paths = org_apache_felix_jetty_gzip_excluded_paths;
    this->m_org_apache_felix_jetty_gzip_excluded_paths_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipIncludedMimeTypes() {
    return org_apache_felix_jetty_gzip_included_mime_types;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipIncludedMimeTypes(OAIConfigNodePropertyArray* org_apache_felix_jetty_gzip_included_mime_types) {
    this->org_apache_felix_jetty_gzip_included_mime_types = org_apache_felix_jetty_gzip_included_mime_types;
    this->m_org_apache_felix_jetty_gzip_included_mime_types_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipExcludedMimeTypes() {
    return org_apache_felix_jetty_gzip_excluded_mime_types;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipExcludedMimeTypes(OAIConfigNodePropertyArray* org_apache_felix_jetty_gzip_excluded_mime_types) {
    this->org_apache_felix_jetty_gzip_excluded_mime_types = org_apache_felix_jetty_gzip_excluded_mime_types;
    this->m_org_apache_felix_jetty_gzip_excluded_mime_types_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpSessionInvalidate() {
    return org_apache_felix_http_session_invalidate;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpSessionInvalidate(OAIConfigNodePropertyBoolean* org_apache_felix_http_session_invalidate) {
    this->org_apache_felix_http_session_invalidate = org_apache_felix_http_session_invalidate;
    this->m_org_apache_felix_http_session_invalidate_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixHttpProperties::getOrgApacheFelixHttpSessionUniqueid() {
    return org_apache_felix_http_session_uniqueid;
}
void
OAIOrgApacheFelixHttpProperties::setOrgApacheFelixHttpSessionUniqueid(OAIConfigNodePropertyBoolean* org_apache_felix_http_session_uniqueid) {
    this->org_apache_felix_http_session_uniqueid = org_apache_felix_http_session_uniqueid;
    this->m_org_apache_felix_http_session_uniqueid_isSet = true;
}


bool
OAIOrgApacheFelixHttpProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(org_apache_felix_http_host != nullptr && org_apache_felix_http_host->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_enable != nullptr && org_apache_felix_http_enable->isSet()){ isObjectUpdated = true; break;}
        if(org_osgi_service_http_port != nullptr && org_osgi_service_http_port->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_timeout != nullptr && org_apache_felix_http_timeout->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_enable != nullptr && org_apache_felix_https_enable->isSet()){ isObjectUpdated = true; break;}
        if(org_osgi_service_http_port_secure != nullptr && org_osgi_service_http_port_secure->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_keystore != nullptr && org_apache_felix_https_keystore->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_keystore_password != nullptr && org_apache_felix_https_keystore_password->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_keystore_key_password != nullptr && org_apache_felix_https_keystore_key_password->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_truststore != nullptr && org_apache_felix_https_truststore->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_truststore_password != nullptr && org_apache_felix_https_truststore_password->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_clientcertificate != nullptr && org_apache_felix_https_clientcertificate->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_context_path != nullptr && org_apache_felix_http_context_path->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_mbeans != nullptr && org_apache_felix_http_mbeans->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_session_timeout != nullptr && org_apache_felix_http_session_timeout->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_jetty_threadpool_max != nullptr && org_apache_felix_http_jetty_threadpool_max->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_jetty_acceptors != nullptr && org_apache_felix_http_jetty_acceptors->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_jetty_selectors != nullptr && org_apache_felix_http_jetty_selectors->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_jetty_header_buffer_size != nullptr && org_apache_felix_http_jetty_header_buffer_size->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_jetty_request_buffer_size != nullptr && org_apache_felix_http_jetty_request_buffer_size->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_jetty_response_buffer_size != nullptr && org_apache_felix_http_jetty_response_buffer_size->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_jetty_max_form_size != nullptr && org_apache_felix_http_jetty_max_form_size->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_path_exclusions != nullptr && org_apache_felix_http_path_exclusions->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_jetty_ciphersuites_excluded != nullptr && org_apache_felix_https_jetty_ciphersuites_excluded->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_jetty_ciphersuites_included != nullptr && org_apache_felix_https_jetty_ciphersuites_included->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_jetty_send_server_header != nullptr && org_apache_felix_http_jetty_send_server_header->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_jetty_protocols_included != nullptr && org_apache_felix_https_jetty_protocols_included->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_jetty_protocols_excluded != nullptr && org_apache_felix_https_jetty_protocols_excluded->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_proxy_load_balancer_connection_enable != nullptr && org_apache_felix_proxy_load_balancer_connection_enable->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_jetty_renegotiate_allowed != nullptr && org_apache_felix_https_jetty_renegotiate_allowed->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_jetty_session_cookie_http_only != nullptr && org_apache_felix_https_jetty_session_cookie_http_only->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_https_jetty_session_cookie_secure != nullptr && org_apache_felix_https_jetty_session_cookie_secure->isSet()){ isObjectUpdated = true; break;}
        if(org_eclipse_jetty_servlet_session_id_path_parameter_name != nullptr && org_eclipse_jetty_servlet_session_id_path_parameter_name->isSet()){ isObjectUpdated = true; break;}
        if(org_eclipse_jetty_servlet_checking_remote_session_id_encoding != nullptr && org_eclipse_jetty_servlet_checking_remote_session_id_encoding->isSet()){ isObjectUpdated = true; break;}
        if(org_eclipse_jetty_servlet_session_cookie != nullptr && org_eclipse_jetty_servlet_session_cookie->isSet()){ isObjectUpdated = true; break;}
        if(org_eclipse_jetty_servlet_session_domain != nullptr && org_eclipse_jetty_servlet_session_domain->isSet()){ isObjectUpdated = true; break;}
        if(org_eclipse_jetty_servlet_session_path != nullptr && org_eclipse_jetty_servlet_session_path->isSet()){ isObjectUpdated = true; break;}
        if(org_eclipse_jetty_servlet_max_age != nullptr && org_eclipse_jetty_servlet_max_age->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_name != nullptr && org_apache_felix_http_name->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gziphandler_enable != nullptr && org_apache_felix_jetty_gziphandler_enable->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_min_gzip_size != nullptr && org_apache_felix_jetty_gzip_min_gzip_size->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_compression_level != nullptr && org_apache_felix_jetty_gzip_compression_level->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_inflate_buffer_size != nullptr && org_apache_felix_jetty_gzip_inflate_buffer_size->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_sync_flush != nullptr && org_apache_felix_jetty_gzip_sync_flush->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_excluded_user_agents != nullptr && org_apache_felix_jetty_gzip_excluded_user_agents->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_included_methods != nullptr && org_apache_felix_jetty_gzip_included_methods->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_excluded_methods != nullptr && org_apache_felix_jetty_gzip_excluded_methods->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_included_paths != nullptr && org_apache_felix_jetty_gzip_included_paths->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_excluded_paths != nullptr && org_apache_felix_jetty_gzip_excluded_paths->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_included_mime_types != nullptr && org_apache_felix_jetty_gzip_included_mime_types->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_jetty_gzip_excluded_mime_types != nullptr && org_apache_felix_jetty_gzip_excluded_mime_types->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_session_invalidate != nullptr && org_apache_felix_http_session_invalidate->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_http_session_uniqueid != nullptr && org_apache_felix_http_session_uniqueid->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

