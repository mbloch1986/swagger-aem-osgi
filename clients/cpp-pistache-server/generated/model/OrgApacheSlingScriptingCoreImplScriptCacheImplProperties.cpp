/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingScriptingCoreImplScriptCacheImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::OrgApacheSlingScriptingCoreImplScriptCacheImplProperties()
{
    m_Org_apache_sling_scripting_cache_sizeIsSet = false;
    m_Org_apache_sling_scripting_cache_additional_extensionsIsSet = false;
    
}

OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::~OrgApacheSlingScriptingCoreImplScriptCacheImplProperties()
{
}

void OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Org_apache_sling_scripting_cache_sizeIsSet)
    {
        val["org.apache.sling.scripting.cache.size"] = ModelBase::toJson(m_Org_apache_sling_scripting_cache_size);
    }
    if(m_Org_apache_sling_scripting_cache_additional_extensionsIsSet)
    {
        val["org.apache.sling.scripting.cache.additional_extensions"] = ModelBase::toJson(m_Org_apache_sling_scripting_cache_additional_extensions);
    }
    

    return val;
}

void OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("org.apache.sling.scripting.cache.size") != val.end())
    {
        if(!val["org.apache.sling.scripting.cache.size"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["org.apache.sling.scripting.cache.size"]);
            setOrgApacheSlingScriptingCacheSize( newItem );
        }
        
    }
    if(val.find("org.apache.sling.scripting.cache.additional_extensions") != val.end())
    {
        if(!val["org.apache.sling.scripting.cache.additional_extensions"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["org.apache.sling.scripting.cache.additional_extensions"]);
            setOrgApacheSlingScriptingCacheAdditionalExtensions( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::getOrgApacheSlingScriptingCacheSize() const
{
    return m_Org_apache_sling_scripting_cache_size;
}
void OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::setOrgApacheSlingScriptingCacheSize(ConfigNodePropertyInteger const& value)
{
    m_Org_apache_sling_scripting_cache_size = value;
    m_Org_apache_sling_scripting_cache_sizeIsSet = true;
}
bool OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::orgApacheSlingScriptingCacheSizeIsSet() const
{
    return m_Org_apache_sling_scripting_cache_sizeIsSet;
}
void OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::unsetOrg_apache_sling_scripting_cache_size()
{
    m_Org_apache_sling_scripting_cache_sizeIsSet = false;
}
ConfigNodePropertyArray OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::getOrgApacheSlingScriptingCacheAdditionalExtensions() const
{
    return m_Org_apache_sling_scripting_cache_additional_extensions;
}
void OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::setOrgApacheSlingScriptingCacheAdditionalExtensions(ConfigNodePropertyArray const& value)
{
    m_Org_apache_sling_scripting_cache_additional_extensions = value;
    m_Org_apache_sling_scripting_cache_additional_extensionsIsSet = true;
}
bool OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::orgApacheSlingScriptingCacheAdditionalExtensionsIsSet() const
{
    return m_Org_apache_sling_scripting_cache_additional_extensionsIsSet;
}
void OrgApacheSlingScriptingCoreImplScriptCacheImplProperties::unsetOrg_apache_sling_scripting_cache_additional_extensions()
{
    m_Org_apache_sling_scripting_cache_additional_extensionsIsSet = false;
}

}
}
}
}

