/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASOrgApacheSlingEventJobsQueueConfi
 */
public class OASOrgApacheSlingEventJobsQueueConfi implements OAS.MappedProperties {
    /**
     * Get queueName
     * @return queueName
     */
    public OASConfigNodePropertyString queueName { get; set; }

    /**
     * Get queueTopics
     * @return queueTopics
     */
    public OASConfigNodePropertyArray queueTopics { get; set; }

    /**
     * Get queueType
     * @return queueType
     */
    public OASConfigNodePropertyDropDown queueType { get; set; }

    /**
     * Get queuePriority
     * @return queuePriority
     */
    public OASConfigNodePropertyDropDown queuePriority { get; set; }

    /**
     * Get queueRetries
     * @return queueRetries
     */
    public OASConfigNodePropertyInteger queueRetries { get; set; }

    /**
     * Get queueRetrydelay
     * @return queueRetrydelay
     */
    public OASConfigNodePropertyInteger queueRetrydelay { get; set; }

    /**
     * Get queueMaxparallel
     * @return queueMaxparallel
     */
    public OASConfigNodePropertyFloat queueMaxparallel { get; set; }

    /**
     * Get queueKeepJobs
     * @return queueKeepJobs
     */
    public OASConfigNodePropertyBoolean queueKeepJobs { get; set; }

    /**
     * Get queuePreferRunOnCreationInstance
     * @return queuePreferRunOnCreationInstance
     */
    public OASConfigNodePropertyBoolean queuePreferRunOnCreationInstance { get; set; }

    /**
     * Get queueThreadPoolSize
     * @return queueThreadPoolSize
     */
    public OASConfigNodePropertyInteger queueThreadPoolSize { get; set; }

    /**
     * Get serviceRanking
     * @return serviceRanking
     */
    public OASConfigNodePropertyInteger serviceRanking { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'queue.name' => 'queueName',
        'queue.topics' => 'queueTopics',
        'queue.type' => 'queueType',
        'queue.priority' => 'queuePriority',
        'queue.retries' => 'queueRetries',
        'queue.retrydelay' => 'queueRetrydelay',
        'queue.maxparallel' => 'queueMaxparallel',
        'queue.keepJobs' => 'queueKeepJobs',
        'queue.preferRunOnCreationInstance' => 'queuePreferRunOnCreationInstance',
        'queue.threadPoolSize' => 'queueThreadPoolSize',
        'service.ranking' => 'serviceRanking'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrgApacheSlingEventJobsQueueConfi getExample() {
        OASOrgApacheSlingEventJobsQueueConfi orgApacheSlingEventJobsQueueConfigurationProperties = new OASOrgApacheSlingEventJobsQueueConfi();
          orgApacheSlingEventJobsQueueConfigurationProperties.queueName = OASConfigNodePropertyString.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.queueTopics = OASConfigNodePropertyArray.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.queueType = OASConfigNodePropertyDropDown.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.queuePriority = OASConfigNodePropertyDropDown.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.queueRetries = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.queueRetrydelay = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.queueMaxparallel = OASConfigNodePropertyFloat.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.queueKeepJobs = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.queuePreferRunOnCreationInstance = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.queueThreadPoolSize = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingEventJobsQueueConfigurationProperties.serviceRanking = OASConfigNodePropertyInteger.getExample();
        return orgApacheSlingEventJobsQueueConfigurationProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgApacheSlingEventJobsQueueConfi) {           
            OASOrgApacheSlingEventJobsQueueConfi orgApacheSlingEventJobsQueueConfigurationProperties = (OASOrgApacheSlingEventJobsQueueConfi) obj;
            return this.queueName == orgApacheSlingEventJobsQueueConfigurationProperties.queueName
                && this.queueTopics == orgApacheSlingEventJobsQueueConfigurationProperties.queueTopics
                && this.queueType == orgApacheSlingEventJobsQueueConfigurationProperties.queueType
                && this.queuePriority == orgApacheSlingEventJobsQueueConfigurationProperties.queuePriority
                && this.queueRetries == orgApacheSlingEventJobsQueueConfigurationProperties.queueRetries
                && this.queueRetrydelay == orgApacheSlingEventJobsQueueConfigurationProperties.queueRetrydelay
                && this.queueMaxparallel == orgApacheSlingEventJobsQueueConfigurationProperties.queueMaxparallel
                && this.queueKeepJobs == orgApacheSlingEventJobsQueueConfigurationProperties.queueKeepJobs
                && this.queuePreferRunOnCreationInstance == orgApacheSlingEventJobsQueueConfigurationProperties.queuePreferRunOnCreationInstance
                && this.queueThreadPoolSize == orgApacheSlingEventJobsQueueConfigurationProperties.queueThreadPoolSize
                && this.serviceRanking == orgApacheSlingEventJobsQueueConfigurationProperties.serviceRanking;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (queueName == null ? 0 : System.hashCode(queueName));
        hashCode = (17 * hashCode) + (queueTopics == null ? 0 : System.hashCode(queueTopics));
        hashCode = (17 * hashCode) + (queueType == null ? 0 : System.hashCode(queueType));
        hashCode = (17 * hashCode) + (queuePriority == null ? 0 : System.hashCode(queuePriority));
        hashCode = (17 * hashCode) + (queueRetries == null ? 0 : System.hashCode(queueRetries));
        hashCode = (17 * hashCode) + (queueRetrydelay == null ? 0 : System.hashCode(queueRetrydelay));
        hashCode = (17 * hashCode) + (queueMaxparallel == null ? 0 : System.hashCode(queueMaxparallel));
        hashCode = (17 * hashCode) + (queueKeepJobs == null ? 0 : System.hashCode(queueKeepJobs));
        hashCode = (17 * hashCode) + (queuePreferRunOnCreationInstance == null ? 0 : System.hashCode(queuePreferRunOnCreationInstance));
        hashCode = (17 * hashCode) + (queueThreadPoolSize == null ? 0 : System.hashCode(queueThreadPoolSize));
        hashCode = (17 * hashCode) + (serviceRanking == null ? 0 : System.hashCode(serviceRanking));
        return hashCode;
    }
}

