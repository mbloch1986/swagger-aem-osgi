/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheSlingEngineParametersProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingEngineParametersProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingEngineParametersProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingEngineParametersProperties
    : public ModelBase
{
public:
    OrgApacheSlingEngineParametersProperties();
    virtual ~OrgApacheSlingEngineParametersProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingEngineParametersProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getSlingDefaultParameterEncoding() const;
    bool slingDefaultParameterEncodingIsSet() const;
    void unsetSling_default_parameter_encoding();
    void setSlingDefaultParameterEncoding(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getSlingDefaultMaxParameters() const;
    bool slingDefaultMaxParametersIsSet() const;
    void unsetSling_default_max_parameters();
    void setSlingDefaultMaxParameters(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getFileLocation() const;
    bool fileLocationIsSet() const;
    void unsetFile_location();
    void setFileLocation(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getFileThreshold() const;
    bool fileThresholdIsSet() const;
    void unsetFile_threshold();
    void setFileThreshold(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getFileMax() const;
    bool fileMaxIsSet() const;
    void unsetFile_max();
    void setFileMax(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getRequestMax() const;
    bool requestMaxIsSet() const;
    void unsetRequest_max();
    void setRequestMax(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getSlingDefaultParameterCheckForAdditionalContainerParameters() const;
    bool slingDefaultParameterCheckForAdditionalContainerParametersIsSet() const;
    void unsetSling_default_parameter_checkForAdditionalContainerParameters();
    void setSlingDefaultParameterCheckForAdditionalContainerParameters(std::shared_ptr<ConfigNodePropertyBoolean> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Sling_default_parameter_encoding;
    bool m_Sling_default_parameter_encodingIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Sling_default_max_parameters;
    bool m_Sling_default_max_parametersIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_File_location;
    bool m_File_locationIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_File_threshold;
    bool m_File_thresholdIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_File_max;
    bool m_File_maxIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Request_max;
    bool m_Request_maxIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Sling_default_parameter_checkForAdditionalContainerParameters;
    bool m_Sling_default_parameter_checkForAdditionalContainerParametersIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingEngineParametersProperties_H_ */
