# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_drop_down import ConfigNodePropertyDropDown  # noqa: F401,E501
from openapi_server import util


class OrgApacheFelixSystemreadyImplComponentsCheckProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, components_list: ConfigNodePropertyArray=None, type: ConfigNodePropertyDropDown=None):  # noqa: E501
        """OrgApacheFelixSystemreadyImplComponentsCheckProperties - a model defined in OpenAPI

        :param components_list: The components_list of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.  # noqa: E501
        :type components_list: ConfigNodePropertyArray
        :param type: The type of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.  # noqa: E501
        :type type: ConfigNodePropertyDropDown
        """
        self.openapi_types = {
            'components_list': ConfigNodePropertyArray,
            'type': ConfigNodePropertyDropDown
        }

        self.attribute_map = {
            'components_list': 'components.list',
            'type': 'type'
        }

        self._components_list = components_list
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheFelixSystemreadyImplComponentsCheckProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheFelixSystemreadyImplComponentsCheckProperties of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.  # noqa: E501
        :rtype: OrgApacheFelixSystemreadyImplComponentsCheckProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def components_list(self) -> ConfigNodePropertyArray:
        """Gets the components_list of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.


        :return: The components_list of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._components_list

    @components_list.setter
    def components_list(self, components_list: ConfigNodePropertyArray):
        """Sets the components_list of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.


        :param components_list: The components_list of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.
        :type components_list: ConfigNodePropertyArray
        """

        self._components_list = components_list

    @property
    def type(self) -> ConfigNodePropertyDropDown:
        """Gets the type of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.


        :return: The type of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.
        :rtype: ConfigNodePropertyDropDown
        """
        return self._type

    @type.setter
    def type(self, type: ConfigNodePropertyDropDown):
        """Sets the type of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.


        :param type: The type of this OrgApacheFelixSystemreadyImplComponentsCheckProperties.
        :type type: ConfigNodePropertyDropDown
        """

        self._type = type
