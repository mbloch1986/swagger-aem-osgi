/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties() {
    this->init();
}

OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::~OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties() {
    
}

void
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::init() {
    m_components_list_isSet = false;
    m_type_isSet = false;
}

void
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(components_list, json[QString("components.list")]);
    
    ::OpenAPI::fromJsonValue(type, json[QString("type")]);
    
}

QString
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::asJsonObject() const {
    QJsonObject obj;
	if(components_list.isSet()){
        obj.insert(QString("components.list"), ::OpenAPI::toJsonValue(components_list));
    }
	if(type.isSet()){
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(type));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::getComponentsList() const {
    return components_list;
}
void
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::setComponentsList(const OAIConfigNodePropertyArray &components_list) {
    this->components_list = components_list;
    this->m_components_list_isSet = true;
}

OAIConfigNodePropertyDropDown
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::getType() const {
    return type;
}
void
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::setType(const OAIConfigNodePropertyDropDown &type) {
    this->type = type;
    this->m_type_isSet = true;
}


bool
OAIOrgApacheFelixSystemreadyImplComponentsCheckProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(components_list.isSet()){ isObjectUpdated = true; break;}
    
        if(type.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

