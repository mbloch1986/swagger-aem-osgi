/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties()
{
    m_Granite_workflowinbox_sort_propertyNameIsSet = false;
    m_Granite_workflowinbox_sort_orderIsSet = false;
    m_Cq_workflow_job_retryIsSet = false;
    m_Cq_workflow_superuserIsSet = false;
    m_Granite_workflow_inboxQuerySizeIsSet = false;
    m_Granite_workflow_adminUserGroupFilterIsSet = false;
    m_Granite_workflow_enforceWorkitemAssigneePermissionsIsSet = false;
    m_Granite_workflow_enforceWorkflowInitiatorPermissionsIsSet = false;
    m_Granite_workflow_injectTenantIdInJobTopicsIsSet = false;
    m_Granite_workflow_maxPurgeSaveThresholdIsSet = false;
    m_Granite_workflow_maxPurgeQueryCountIsSet = false;
    
}

ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::~ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties()
{
}

void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Granite_workflowinbox_sort_propertyNameIsSet)
    {
        val["granite.workflowinbox.sort.propertyName"] = ModelBase::toJson(m_Granite_workflowinbox_sort_propertyName);
    }
    if(m_Granite_workflowinbox_sort_orderIsSet)
    {
        val["granite.workflowinbox.sort.order"] = ModelBase::toJson(m_Granite_workflowinbox_sort_order);
    }
    if(m_Cq_workflow_job_retryIsSet)
    {
        val["cq.workflow.job.retry"] = ModelBase::toJson(m_Cq_workflow_job_retry);
    }
    if(m_Cq_workflow_superuserIsSet)
    {
        val["cq.workflow.superuser"] = ModelBase::toJson(m_Cq_workflow_superuser);
    }
    if(m_Granite_workflow_inboxQuerySizeIsSet)
    {
        val["granite.workflow.inboxQuerySize"] = ModelBase::toJson(m_Granite_workflow_inboxQuerySize);
    }
    if(m_Granite_workflow_adminUserGroupFilterIsSet)
    {
        val["granite.workflow.adminUserGroupFilter"] = ModelBase::toJson(m_Granite_workflow_adminUserGroupFilter);
    }
    if(m_Granite_workflow_enforceWorkitemAssigneePermissionsIsSet)
    {
        val["granite.workflow.enforceWorkitemAssigneePermissions"] = ModelBase::toJson(m_Granite_workflow_enforceWorkitemAssigneePermissions);
    }
    if(m_Granite_workflow_enforceWorkflowInitiatorPermissionsIsSet)
    {
        val["granite.workflow.enforceWorkflowInitiatorPermissions"] = ModelBase::toJson(m_Granite_workflow_enforceWorkflowInitiatorPermissions);
    }
    if(m_Granite_workflow_injectTenantIdInJobTopicsIsSet)
    {
        val["granite.workflow.injectTenantIdInJobTopics"] = ModelBase::toJson(m_Granite_workflow_injectTenantIdInJobTopics);
    }
    if(m_Granite_workflow_maxPurgeSaveThresholdIsSet)
    {
        val["granite.workflow.maxPurgeSaveThreshold"] = ModelBase::toJson(m_Granite_workflow_maxPurgeSaveThreshold);
    }
    if(m_Granite_workflow_maxPurgeQueryCountIsSet)
    {
        val["granite.workflow.maxPurgeQueryCount"] = ModelBase::toJson(m_Granite_workflow_maxPurgeQueryCount);
    }
    

    return val;
}

void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::fromJson(nlohmann::json& val)
{
    if(val.find("granite.workflowinbox.sort.propertyName") != val.end())
    {
        if(!val["granite.workflowinbox.sort.propertyName"].is_null())
        {
            ConfigNodePropertyDropDown newItem;
            newItem.fromJson(val["granite.workflowinbox.sort.propertyName"]);
            setGraniteWorkflowinboxSortPropertyName( newItem );
        }
        
    }
    if(val.find("granite.workflowinbox.sort.order") != val.end())
    {
        if(!val["granite.workflowinbox.sort.order"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["granite.workflowinbox.sort.order"]);
            setGraniteWorkflowinboxSortOrder( newItem );
        }
        
    }
    if(val.find("cq.workflow.job.retry") != val.end())
    {
        if(!val["cq.workflow.job.retry"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.workflow.job.retry"]);
            setCqWorkflowJobRetry( newItem );
        }
        
    }
    if(val.find("cq.workflow.superuser") != val.end())
    {
        if(!val["cq.workflow.superuser"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cq.workflow.superuser"]);
            setCqWorkflowSuperuser( newItem );
        }
        
    }
    if(val.find("granite.workflow.inboxQuerySize") != val.end())
    {
        if(!val["granite.workflow.inboxQuerySize"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["granite.workflow.inboxQuerySize"]);
            setGraniteWorkflowInboxQuerySize( newItem );
        }
        
    }
    if(val.find("granite.workflow.adminUserGroupFilter") != val.end())
    {
        if(!val["granite.workflow.adminUserGroupFilter"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["granite.workflow.adminUserGroupFilter"]);
            setGraniteWorkflowAdminUserGroupFilter( newItem );
        }
        
    }
    if(val.find("granite.workflow.enforceWorkitemAssigneePermissions") != val.end())
    {
        if(!val["granite.workflow.enforceWorkitemAssigneePermissions"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["granite.workflow.enforceWorkitemAssigneePermissions"]);
            setGraniteWorkflowEnforceWorkitemAssigneePermissions( newItem );
        }
        
    }
    if(val.find("granite.workflow.enforceWorkflowInitiatorPermissions") != val.end())
    {
        if(!val["granite.workflow.enforceWorkflowInitiatorPermissions"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["granite.workflow.enforceWorkflowInitiatorPermissions"]);
            setGraniteWorkflowEnforceWorkflowInitiatorPermissions( newItem );
        }
        
    }
    if(val.find("granite.workflow.injectTenantIdInJobTopics") != val.end())
    {
        if(!val["granite.workflow.injectTenantIdInJobTopics"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["granite.workflow.injectTenantIdInJobTopics"]);
            setGraniteWorkflowInjectTenantIdInJobTopics( newItem );
        }
        
    }
    if(val.find("granite.workflow.maxPurgeSaveThreshold") != val.end())
    {
        if(!val["granite.workflow.maxPurgeSaveThreshold"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["granite.workflow.maxPurgeSaveThreshold"]);
            setGraniteWorkflowMaxPurgeSaveThreshold( newItem );
        }
        
    }
    if(val.find("granite.workflow.maxPurgeQueryCount") != val.end())
    {
        if(!val["granite.workflow.maxPurgeQueryCount"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["granite.workflow.maxPurgeQueryCount"]);
            setGraniteWorkflowMaxPurgeQueryCount( newItem );
        }
        
    }
    
}


ConfigNodePropertyDropDown ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowinboxSortPropertyName() const
{
    return m_Granite_workflowinbox_sort_propertyName;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowinboxSortPropertyName(ConfigNodePropertyDropDown const& value)
{
    m_Granite_workflowinbox_sort_propertyName = value;
    m_Granite_workflowinbox_sort_propertyNameIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::graniteWorkflowinboxSortPropertyNameIsSet() const
{
    return m_Granite_workflowinbox_sort_propertyNameIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetGranite_workflowinbox_sort_propertyName()
{
    m_Granite_workflowinbox_sort_propertyNameIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowinboxSortOrder() const
{
    return m_Granite_workflowinbox_sort_order;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowinboxSortOrder(ConfigNodePropertyString const& value)
{
    m_Granite_workflowinbox_sort_order = value;
    m_Granite_workflowinbox_sort_orderIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::graniteWorkflowinboxSortOrderIsSet() const
{
    return m_Granite_workflowinbox_sort_orderIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetGranite_workflowinbox_sort_order()
{
    m_Granite_workflowinbox_sort_orderIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getCqWorkflowJobRetry() const
{
    return m_Cq_workflow_job_retry;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setCqWorkflowJobRetry(ConfigNodePropertyInteger const& value)
{
    m_Cq_workflow_job_retry = value;
    m_Cq_workflow_job_retryIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::cqWorkflowJobRetryIsSet() const
{
    return m_Cq_workflow_job_retryIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetCq_workflow_job_retry()
{
    m_Cq_workflow_job_retryIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getCqWorkflowSuperuser() const
{
    return m_Cq_workflow_superuser;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setCqWorkflowSuperuser(ConfigNodePropertyArray const& value)
{
    m_Cq_workflow_superuser = value;
    m_Cq_workflow_superuserIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::cqWorkflowSuperuserIsSet() const
{
    return m_Cq_workflow_superuserIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetCq_workflow_superuser()
{
    m_Cq_workflow_superuserIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowInboxQuerySize() const
{
    return m_Granite_workflow_inboxQuerySize;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowInboxQuerySize(ConfigNodePropertyInteger const& value)
{
    m_Granite_workflow_inboxQuerySize = value;
    m_Granite_workflow_inboxQuerySizeIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::graniteWorkflowInboxQuerySizeIsSet() const
{
    return m_Granite_workflow_inboxQuerySizeIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetGranite_workflow_inboxQuerySize()
{
    m_Granite_workflow_inboxQuerySizeIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowAdminUserGroupFilter() const
{
    return m_Granite_workflow_adminUserGroupFilter;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowAdminUserGroupFilter(ConfigNodePropertyBoolean const& value)
{
    m_Granite_workflow_adminUserGroupFilter = value;
    m_Granite_workflow_adminUserGroupFilterIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::graniteWorkflowAdminUserGroupFilterIsSet() const
{
    return m_Granite_workflow_adminUserGroupFilterIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetGranite_workflow_adminUserGroupFilter()
{
    m_Granite_workflow_adminUserGroupFilterIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowEnforceWorkitemAssigneePermissions() const
{
    return m_Granite_workflow_enforceWorkitemAssigneePermissions;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowEnforceWorkitemAssigneePermissions(ConfigNodePropertyBoolean const& value)
{
    m_Granite_workflow_enforceWorkitemAssigneePermissions = value;
    m_Granite_workflow_enforceWorkitemAssigneePermissionsIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::graniteWorkflowEnforceWorkitemAssigneePermissionsIsSet() const
{
    return m_Granite_workflow_enforceWorkitemAssigneePermissionsIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetGranite_workflow_enforceWorkitemAssigneePermissions()
{
    m_Granite_workflow_enforceWorkitemAssigneePermissionsIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowEnforceWorkflowInitiatorPermissions() const
{
    return m_Granite_workflow_enforceWorkflowInitiatorPermissions;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowEnforceWorkflowInitiatorPermissions(ConfigNodePropertyBoolean const& value)
{
    m_Granite_workflow_enforceWorkflowInitiatorPermissions = value;
    m_Granite_workflow_enforceWorkflowInitiatorPermissionsIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::graniteWorkflowEnforceWorkflowInitiatorPermissionsIsSet() const
{
    return m_Granite_workflow_enforceWorkflowInitiatorPermissionsIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetGranite_workflow_enforceWorkflowInitiatorPermissions()
{
    m_Granite_workflow_enforceWorkflowInitiatorPermissionsIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowInjectTenantIdInJobTopics() const
{
    return m_Granite_workflow_injectTenantIdInJobTopics;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowInjectTenantIdInJobTopics(ConfigNodePropertyBoolean const& value)
{
    m_Granite_workflow_injectTenantIdInJobTopics = value;
    m_Granite_workflow_injectTenantIdInJobTopicsIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::graniteWorkflowInjectTenantIdInJobTopicsIsSet() const
{
    return m_Granite_workflow_injectTenantIdInJobTopicsIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetGranite_workflow_injectTenantIdInJobTopics()
{
    m_Granite_workflow_injectTenantIdInJobTopicsIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowMaxPurgeSaveThreshold() const
{
    return m_Granite_workflow_maxPurgeSaveThreshold;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowMaxPurgeSaveThreshold(ConfigNodePropertyInteger const& value)
{
    m_Granite_workflow_maxPurgeSaveThreshold = value;
    m_Granite_workflow_maxPurgeSaveThresholdIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::graniteWorkflowMaxPurgeSaveThresholdIsSet() const
{
    return m_Granite_workflow_maxPurgeSaveThresholdIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetGranite_workflow_maxPurgeSaveThreshold()
{
    m_Granite_workflow_maxPurgeSaveThresholdIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::getGraniteWorkflowMaxPurgeQueryCount() const
{
    return m_Granite_workflow_maxPurgeQueryCount;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::setGraniteWorkflowMaxPurgeQueryCount(ConfigNodePropertyInteger const& value)
{
    m_Granite_workflow_maxPurgeQueryCount = value;
    m_Granite_workflow_maxPurgeQueryCountIsSet = true;
}
bool ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::graniteWorkflowMaxPurgeQueryCountIsSet() const
{
    return m_Granite_workflow_maxPurgeQueryCountIsSet;
}
void ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties::unsetGranite_workflow_maxPurgeQueryCount()
{
    m_Granite_workflow_maxPurgeQueryCountIsSet = false;
}

}
}
}
}

