/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerProperties_H_
#define OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerProperties: public OAIObject {
public:
    OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerProperties();
    OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerProperties(QString json);
    ~OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getManagerRoot();
    void setManagerRoot(OAIConfigNodePropertyString* manager_root);

    OAIConfigNodePropertyString* getHttpServiceFilter();
    void setHttpServiceFilter(OAIConfigNodePropertyString* http_service_filter);

    OAIConfigNodePropertyString* getDefaultRender();
    void setDefaultRender(OAIConfigNodePropertyString* default_render);

    OAIConfigNodePropertyString* getRealm();
    void setRealm(OAIConfigNodePropertyString* realm);

    OAIConfigNodePropertyString* getUsername();
    void setUsername(OAIConfigNodePropertyString* username);

    OAIConfigNodePropertyString* getPassword();
    void setPassword(OAIConfigNodePropertyString* password);

    OAIConfigNodePropertyString* getCategory();
    void setCategory(OAIConfigNodePropertyString* category);

    OAIConfigNodePropertyString* getLocale();
    void setLocale(OAIConfigNodePropertyString* locale);

    OAIConfigNodePropertyDropDown* getLoglevel();
    void setLoglevel(OAIConfigNodePropertyDropDown* loglevel);

    OAIConfigNodePropertyDropDown* getPlugins();
    void setPlugins(OAIConfigNodePropertyDropDown* plugins);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* manager_root;
    bool m_manager_root_isSet;

    OAIConfigNodePropertyString* http_service_filter;
    bool m_http_service_filter_isSet;

    OAIConfigNodePropertyString* default_render;
    bool m_default_render_isSet;

    OAIConfigNodePropertyString* realm;
    bool m_realm_isSet;

    OAIConfigNodePropertyString* username;
    bool m_username_isSet;

    OAIConfigNodePropertyString* password;
    bool m_password_isSet;

    OAIConfigNodePropertyString* category;
    bool m_category_isSet;

    OAIConfigNodePropertyString* locale;
    bool m_locale_isSet;

    OAIConfigNodePropertyDropDown* loglevel;
    bool m_loglevel_isSet;

    OAIConfigNodePropertyDropDown* plugins;
    bool m_plugins_isSet;

};

}

#endif /* OAIOrgApacheFelixWebconsoleInternalServletOsgiManagerProperties_H_ */
