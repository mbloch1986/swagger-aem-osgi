/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties() {
    init();
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::~OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties() {
    this->cleanup();
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::init() {
    cug_supported_paths = new OAIConfigNodePropertyArray();
    m_cug_supported_paths_isSet = false;
    cug_enabled = new OAIConfigNodePropertyBoolean();
    m_cug_enabled_isSet = false;
    configuration_ranking = new OAIConfigNodePropertyInteger();
    m_configuration_ranking_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::cleanup() {
    if(cug_supported_paths != nullptr) { 
        delete cug_supported_paths;
    }
    if(cug_enabled != nullptr) { 
        delete cug_enabled;
    }
    if(configuration_ranking != nullptr) { 
        delete configuration_ranking;
    }
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties*
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cug_supported_paths, pJson["cugSupportedPaths"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cug_enabled, pJson["cugEnabled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&configuration_ranking, pJson["configurationRanking"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::asJsonObject() {
    QJsonObject obj;
    if((cug_supported_paths != nullptr) && (cug_supported_paths->isSet())){
        toJsonValue(QString("cugSupportedPaths"), cug_supported_paths, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cug_enabled != nullptr) && (cug_enabled->isSet())){
        toJsonValue(QString("cugEnabled"), cug_enabled, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((configuration_ranking != nullptr) && (configuration_ranking->isSet())){
        toJsonValue(QString("configurationRanking"), configuration_ranking, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::getCugSupportedPaths() {
    return cug_supported_paths;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::setCugSupportedPaths(OAIConfigNodePropertyArray* cug_supported_paths) {
    this->cug_supported_paths = cug_supported_paths;
    this->m_cug_supported_paths_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::getCugEnabled() {
    return cug_enabled;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::setCugEnabled(OAIConfigNodePropertyBoolean* cug_enabled) {
    this->cug_enabled = cug_enabled;
    this->m_cug_enabled_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::getConfigurationRanking() {
    return configuration_ranking;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::setConfigurationRanking(OAIConfigNodePropertyInteger* configuration_ranking) {
    this->configuration_ranking = configuration_ranking;
    this->m_configuration_ranking_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cug_supported_paths != nullptr && cug_supported_paths->isSet()){ isObjectUpdated = true; break;}
        if(cug_enabled != nullptr && cug_enabled->isSet()){ isObjectUpdated = true; break;}
        if(configuration_ranking != nullptr && configuration_ranking->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

