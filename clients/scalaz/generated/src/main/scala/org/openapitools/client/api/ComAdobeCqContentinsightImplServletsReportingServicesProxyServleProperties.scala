package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqContentinsightImplServletsReportingServicesProxyServleProperties._

case class ComAdobeCqContentinsightImplServletsReportingServicesProxyServleProperties (
  reportingservicesProxyWhitelist: Option[ConfigNodePropertyArray])

object ComAdobeCqContentinsightImplServletsReportingServicesProxyServleProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqContentinsightImplServletsReportingServicesProxyServlePropertiesCodecJson: CodecJson[ComAdobeCqContentinsightImplServletsReportingServicesProxyServleProperties] = CodecJson.derive[ComAdobeCqContentinsightImplServletsReportingServicesProxyServleProperties]
  implicit val ComAdobeCqContentinsightImplServletsReportingServicesProxyServlePropertiesDecoder: EntityDecoder[ComAdobeCqContentinsightImplServletsReportingServicesProxyServleProperties] = jsonOf[ComAdobeCqContentinsightImplServletsReportingServicesProxyServleProperties]
  implicit val ComAdobeCqContentinsightImplServletsReportingServicesProxyServlePropertiesEncoder: EntityEncoder[ComAdobeCqContentinsightImplServletsReportingServicesProxyServleProperties] = jsonEncoderOf[ComAdobeCqContentinsightImplServletsReportingServicesProxyServleProperties]
}
