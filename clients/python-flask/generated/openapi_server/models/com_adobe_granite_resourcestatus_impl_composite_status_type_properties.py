# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: ConfigNodePropertyString=None, types: ConfigNodePropertyArray=None):  # noqa: E501
        """ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties - a model defined in OpenAPI

        :param name: The name of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.  # noqa: E501
        :type name: ConfigNodePropertyString
        :param types: The types of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.  # noqa: E501
        :type types: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'name': ConfigNodePropertyString,
            'types': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'name': 'name',
            'types': 'types'
        }

        self._name = name
        self._types = types

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeGraniteResourcestatusImplCompositeStatusTypeProperties of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.  # noqa: E501
        :rtype: ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> ConfigNodePropertyString:
        """Gets the name of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.


        :return: The name of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._name

    @name.setter
    def name(self, name: ConfigNodePropertyString):
        """Sets the name of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.


        :param name: The name of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.
        :type name: ConfigNodePropertyString
        """

        self._name = name

    @property
    def types(self) -> ConfigNodePropertyArray:
        """Gets the types of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.


        :return: The types of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._types

    @types.setter
    def types(self, types: ConfigNodePropertyArray):
        """Sets the types of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.


        :param types: The types of this ComAdobeGraniteResourcestatusImplCompositeStatusTypeProperties.
        :type types: ConfigNodePropertyArray
        """

        self._types = types
