/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteWorkflowCorePayloadMapCacheProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::ComAdobeGraniteWorkflowCorePayloadMapCacheProperties()
{
    m_GetSystemWorkflowModelsIsSet = false;
    m_GetPackageRootPathIsSet = false;
    
}

ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::~ComAdobeGraniteWorkflowCorePayloadMapCacheProperties()
{
}

void ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_GetSystemWorkflowModelsIsSet)
    {
        val["getSystemWorkflowModels"] = ModelBase::toJson(m_GetSystemWorkflowModels);
    }
    if(m_GetPackageRootPathIsSet)
    {
        val["getPackageRootPath"] = ModelBase::toJson(m_GetPackageRootPath);
    }
    

    return val;
}

void ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::fromJson(nlohmann::json& val)
{
    if(val.find("getSystemWorkflowModels") != val.end())
    {
        if(!val["getSystemWorkflowModels"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["getSystemWorkflowModels"]);
            setGetSystemWorkflowModels( newItem );
        }
        
    }
    if(val.find("getPackageRootPath") != val.end())
    {
        if(!val["getPackageRootPath"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["getPackageRootPath"]);
            setGetPackageRootPath( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::getGetSystemWorkflowModels() const
{
    return m_GetSystemWorkflowModels;
}
void ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::setGetSystemWorkflowModels(ConfigNodePropertyArray const& value)
{
    m_GetSystemWorkflowModels = value;
    m_GetSystemWorkflowModelsIsSet = true;
}
bool ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::getSystemWorkflowModelsIsSet() const
{
    return m_GetSystemWorkflowModelsIsSet;
}
void ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::unsetGetSystemWorkflowModels()
{
    m_GetSystemWorkflowModelsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::getGetPackageRootPath() const
{
    return m_GetPackageRootPath;
}
void ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::setGetPackageRootPath(ConfigNodePropertyString const& value)
{
    m_GetPackageRootPath = value;
    m_GetPackageRootPathIsSet = true;
}
bool ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::getPackageRootPathIsSet() const
{
    return m_GetPackageRootPathIsSet;
}
void ComAdobeGraniteWorkflowCorePayloadMapCacheProperties::unsetGetPackageRootPath()
{
    m_GetPackageRootPathIsSet = false;
}

}
}
}
}

