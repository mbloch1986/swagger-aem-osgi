/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteAuthImsImplIMSProviderImplProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteAuthImsImplIMSProviderImplProperties_H_
#define OAIComAdobeGraniteAuthImsImplIMSProviderImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteAuthImsImplIMSProviderImplProperties: public OAIObject {
public:
    OAIComAdobeGraniteAuthImsImplIMSProviderImplProperties();
    OAIComAdobeGraniteAuthImsImplIMSProviderImplProperties(QString json);
    ~OAIComAdobeGraniteAuthImsImplIMSProviderImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeGraniteAuthImsImplIMSProviderImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getOauthProviderId();
    void setOauthProviderId(OAIConfigNodePropertyString* oauth_provider_id);

    OAIConfigNodePropertyString* getOauthProviderImsAuthorizationUrl();
    void setOauthProviderImsAuthorizationUrl(OAIConfigNodePropertyString* oauth_provider_ims_authorization_url);

    OAIConfigNodePropertyString* getOauthProviderImsTokenUrl();
    void setOauthProviderImsTokenUrl(OAIConfigNodePropertyString* oauth_provider_ims_token_url);

    OAIConfigNodePropertyString* getOauthProviderImsProfileUrl();
    void setOauthProviderImsProfileUrl(OAIConfigNodePropertyString* oauth_provider_ims_profile_url);

    OAIConfigNodePropertyArray* getOauthProviderImsExtendedDetailsUrls();
    void setOauthProviderImsExtendedDetailsUrls(OAIConfigNodePropertyArray* oauth_provider_ims_extended_details_urls);

    OAIConfigNodePropertyString* getOauthProviderImsValidateTokenUrl();
    void setOauthProviderImsValidateTokenUrl(OAIConfigNodePropertyString* oauth_provider_ims_validate_token_url);

    OAIConfigNodePropertyString* getOauthProviderImsSessionProperty();
    void setOauthProviderImsSessionProperty(OAIConfigNodePropertyString* oauth_provider_ims_session_property);

    OAIConfigNodePropertyString* getOauthProviderImsServiceTokenClientId();
    void setOauthProviderImsServiceTokenClientId(OAIConfigNodePropertyString* oauth_provider_ims_service_token_client_id);

    OAIConfigNodePropertyString* getOauthProviderImsServiceTokenClientSecret();
    void setOauthProviderImsServiceTokenClientSecret(OAIConfigNodePropertyString* oauth_provider_ims_service_token_client_secret);

    OAIConfigNodePropertyString* getOauthProviderImsServiceToken();
    void setOauthProviderImsServiceToken(OAIConfigNodePropertyString* oauth_provider_ims_service_token);

    OAIConfigNodePropertyString* getImsOrgRef();
    void setImsOrgRef(OAIConfigNodePropertyString* ims_org_ref);

    OAIConfigNodePropertyArray* getImsGroupMapping();
    void setImsGroupMapping(OAIConfigNodePropertyArray* ims_group_mapping);

    OAIConfigNodePropertyBoolean* getOauthProviderImsOnlyLicenseGroup();
    void setOauthProviderImsOnlyLicenseGroup(OAIConfigNodePropertyBoolean* oauth_provider_ims_only_license_group);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* oauth_provider_id;
    bool m_oauth_provider_id_isSet;

    OAIConfigNodePropertyString* oauth_provider_ims_authorization_url;
    bool m_oauth_provider_ims_authorization_url_isSet;

    OAIConfigNodePropertyString* oauth_provider_ims_token_url;
    bool m_oauth_provider_ims_token_url_isSet;

    OAIConfigNodePropertyString* oauth_provider_ims_profile_url;
    bool m_oauth_provider_ims_profile_url_isSet;

    OAIConfigNodePropertyArray* oauth_provider_ims_extended_details_urls;
    bool m_oauth_provider_ims_extended_details_urls_isSet;

    OAIConfigNodePropertyString* oauth_provider_ims_validate_token_url;
    bool m_oauth_provider_ims_validate_token_url_isSet;

    OAIConfigNodePropertyString* oauth_provider_ims_session_property;
    bool m_oauth_provider_ims_session_property_isSet;

    OAIConfigNodePropertyString* oauth_provider_ims_service_token_client_id;
    bool m_oauth_provider_ims_service_token_client_id_isSet;

    OAIConfigNodePropertyString* oauth_provider_ims_service_token_client_secret;
    bool m_oauth_provider_ims_service_token_client_secret_isSet;

    OAIConfigNodePropertyString* oauth_provider_ims_service_token;
    bool m_oauth_provider_ims_service_token_isSet;

    OAIConfigNodePropertyString* ims_org_ref;
    bool m_ims_org_ref_isSet;

    OAIConfigNodePropertyArray* ims_group_mapping;
    bool m_ims_group_mapping_isSet;

    OAIConfigNodePropertyBoolean* oauth_provider_ims_only_license_group;
    bool m_oauth_provider_ims_only_license_group_isSet;

};

}

#endif /* OAIComAdobeGraniteAuthImsImplIMSProviderImplProperties_H_ */
