/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties()
{
    
}

OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::~OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties()
{
}

std::string OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getRepositoryHome() const
{
    return m_Repository_home;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setRepositoryHome(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Repository_home = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getTarmkMode() const
{
    return m_Tarmk_mode;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setTarmkMode(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Tarmk_mode = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getTarmkSize() const
{
    return m_Tarmk_size;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setTarmkSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Tarmk_size = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getSegmentCacheSize() const
{
    return m_SegmentCache_size;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setSegmentCacheSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_SegmentCache_size = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getStringCacheSize() const
{
    return m_StringCache_size;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setStringCacheSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_StringCache_size = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getTemplateCacheSize() const
{
    return m_TemplateCache_size;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setTemplateCacheSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_TemplateCache_size = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getStringDeduplicationCacheSize() const
{
    return m_StringDeduplicationCache_size;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setStringDeduplicationCacheSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_StringDeduplicationCache_size = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getTemplateDeduplicationCacheSize() const
{
    return m_TemplateDeduplicationCache_size;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setTemplateDeduplicationCacheSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_TemplateDeduplicationCache_size = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getNodeDeduplicationCacheSize() const
{
    return m_NodeDeduplicationCache_size;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setNodeDeduplicationCacheSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_NodeDeduplicationCache_size = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getPauseCompaction() const
{
    return m_PauseCompaction;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setPauseCompaction(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_PauseCompaction = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getCompactionRetryCount() const
{
    return m_Compaction_retryCount;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setCompactionRetryCount(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Compaction_retryCount = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getCompactionForceTimeout() const
{
    return m_Compaction_force_timeout;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setCompactionForceTimeout(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Compaction_force_timeout = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getCompactionSizeDeltaEstimation() const
{
    return m_Compaction_sizeDeltaEstimation;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setCompactionSizeDeltaEstimation(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Compaction_sizeDeltaEstimation = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getCompactionDisableEstimation() const
{
    return m_Compaction_disableEstimation;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setCompactionDisableEstimation(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Compaction_disableEstimation = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getCompactionRetainedGenerations() const
{
    return m_Compaction_retainedGenerations;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setCompactionRetainedGenerations(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Compaction_retainedGenerations = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getCompactionMemoryThreshold() const
{
    return m_Compaction_memoryThreshold;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setCompactionMemoryThreshold(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Compaction_memoryThreshold = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getCompactionProgressLog() const
{
    return m_Compaction_progressLog;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setCompactionProgressLog(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Compaction_progressLog = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getStandby() const
{
    return m_Standby;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setStandby(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Standby = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getCustomBlobStore() const
{
    return m_CustomBlobStore;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setCustomBlobStore(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_CustomBlobStore = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getCustomSegmentStore() const
{
    return m_CustomSegmentStore;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setCustomSegmentStore(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_CustomSegmentStore = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getSplitPersistence() const
{
    return m_SplitPersistence;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setSplitPersistence(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_SplitPersistence = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getRepositoryBackupDir() const
{
    return m_Repository_backup_dir;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setRepositoryBackupDir(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Repository_backup_dir = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getBlobGcMaxAgeInSecs() const
{
    return m_BlobGcMaxAgeInSecs;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setBlobGcMaxAgeInSecs(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_BlobGcMaxAgeInSecs = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getBlobTrackSnapshotIntervalInSecs() const
{
    return m_BlobTrackSnapshotIntervalInSecs;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setBlobTrackSnapshotIntervalInSecs(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_BlobTrackSnapshotIntervalInSecs = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getRole() const
{
    return m_Role;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setRole(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Role = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getRegisterDescriptors() const
{
    return m_RegisterDescriptors;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setRegisterDescriptors(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_RegisterDescriptors = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::getDispatchChanges() const
{
    return m_DispatchChanges;
}
void OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties::setDispatchChanges(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_DispatchChanges = value;
}

}
}
}
}

