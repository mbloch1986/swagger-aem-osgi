/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqHistoryImplHistoryRequestFilterProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqHistoryImplHistoryRequestFilterProperties::ComAdobeCqHistoryImplHistoryRequestFilterProperties()
{
    m_History_requestFilter_excludedSelectorsIsSet = false;
    m_History_requestFilter_excludedExtensionsIsSet = false;
    
}

ComAdobeCqHistoryImplHistoryRequestFilterProperties::~ComAdobeCqHistoryImplHistoryRequestFilterProperties()
{
}

void ComAdobeCqHistoryImplHistoryRequestFilterProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqHistoryImplHistoryRequestFilterProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_History_requestFilter_excludedSelectorsIsSet)
    {
        val["history.requestFilter.excludedSelectors"] = ModelBase::toJson(m_History_requestFilter_excludedSelectors);
    }
    if(m_History_requestFilter_excludedExtensionsIsSet)
    {
        val["history.requestFilter.excludedExtensions"] = ModelBase::toJson(m_History_requestFilter_excludedExtensions);
    }
    

    return val;
}

void ComAdobeCqHistoryImplHistoryRequestFilterProperties::fromJson(nlohmann::json& val)
{
    if(val.find("history.requestFilter.excludedSelectors") != val.end())
    {
        if(!val["history.requestFilter.excludedSelectors"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["history.requestFilter.excludedSelectors"]);
            setHistoryRequestFilterExcludedSelectors( newItem );
        }
        
    }
    if(val.find("history.requestFilter.excludedExtensions") != val.end())
    {
        if(!val["history.requestFilter.excludedExtensions"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["history.requestFilter.excludedExtensions"]);
            setHistoryRequestFilterExcludedExtensions( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqHistoryImplHistoryRequestFilterProperties::getHistoryRequestFilterExcludedSelectors() const
{
    return m_History_requestFilter_excludedSelectors;
}
void ComAdobeCqHistoryImplHistoryRequestFilterProperties::setHistoryRequestFilterExcludedSelectors(ConfigNodePropertyArray const& value)
{
    m_History_requestFilter_excludedSelectors = value;
    m_History_requestFilter_excludedSelectorsIsSet = true;
}
bool ComAdobeCqHistoryImplHistoryRequestFilterProperties::historyRequestFilterExcludedSelectorsIsSet() const
{
    return m_History_requestFilter_excludedSelectorsIsSet;
}
void ComAdobeCqHistoryImplHistoryRequestFilterProperties::unsetHistory_requestFilter_excludedSelectors()
{
    m_History_requestFilter_excludedSelectorsIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqHistoryImplHistoryRequestFilterProperties::getHistoryRequestFilterExcludedExtensions() const
{
    return m_History_requestFilter_excludedExtensions;
}
void ComAdobeCqHistoryImplHistoryRequestFilterProperties::setHistoryRequestFilterExcludedExtensions(ConfigNodePropertyArray const& value)
{
    m_History_requestFilter_excludedExtensions = value;
    m_History_requestFilter_excludedExtensionsIsSet = true;
}
bool ComAdobeCqHistoryImplHistoryRequestFilterProperties::historyRequestFilterExcludedExtensionsIsSet() const
{
    return m_History_requestFilter_excludedExtensionsIsSet;
}
void ComAdobeCqHistoryImplHistoryRequestFilterProperties::unsetHistory_requestFilter_excludedExtensions()
{
    m_History_requestFilter_excludedExtensionsIsSet = false;
}

}
}
}
}

