# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ranking: ConfigNodePropertyInteger=None, enable: ConfigNodePropertyBoolean=None):  # noqa: E501
        """ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties - a model defined in OpenAPI

        :param ranking: The ranking of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.  # noqa: E501
        :type ranking: ConfigNodePropertyInteger
        :param enable: The enable of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.  # noqa: E501
        :type enable: ConfigNodePropertyBoolean
        """
        self.openapi_types = {
            'ranking': ConfigNodePropertyInteger,
            'enable': ConfigNodePropertyBoolean
        }

        self.attribute_map = {
            'ranking': 'ranking',
            'enable': 'enable'
        }

        self._ranking = ranking
        self._enable = enable

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.  # noqa: E501
        :rtype: ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ranking(self) -> ConfigNodePropertyInteger:
        """Gets the ranking of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.


        :return: The ranking of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._ranking

    @ranking.setter
    def ranking(self, ranking: ConfigNodePropertyInteger):
        """Sets the ranking of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.


        :param ranking: The ranking of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.
        :type ranking: ConfigNodePropertyInteger
        """

        self._ranking = ranking

    @property
    def enable(self) -> ConfigNodePropertyBoolean:
        """Gets the enable of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.


        :return: The enable of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._enable

    @enable.setter
    def enable(self, enable: ConfigNodePropertyBoolean):
        """Sets the enable of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.


        :param enable: The enable of this ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySProperties.
        :type enable: ConfigNodePropertyBoolean
        """

        self._enable = enable
