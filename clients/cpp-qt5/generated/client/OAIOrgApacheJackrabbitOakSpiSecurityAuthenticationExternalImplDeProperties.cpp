/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties() {
    init();
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::~OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties() {
    this->cleanup();
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::init() {
    handler_name = new OAIConfigNodePropertyString();
    m_handler_name_isSet = false;
    user_expiration_time = new OAIConfigNodePropertyString();
    m_user_expiration_time_isSet = false;
    user_auto_membership = new OAIConfigNodePropertyArray();
    m_user_auto_membership_isSet = false;
    user_property_mapping = new OAIConfigNodePropertyArray();
    m_user_property_mapping_isSet = false;
    user_path_prefix = new OAIConfigNodePropertyString();
    m_user_path_prefix_isSet = false;
    user_membership_exp_time = new OAIConfigNodePropertyString();
    m_user_membership_exp_time_isSet = false;
    user_membership_nesting_depth = new OAIConfigNodePropertyInteger();
    m_user_membership_nesting_depth_isSet = false;
    user_dynamic_membership = new OAIConfigNodePropertyBoolean();
    m_user_dynamic_membership_isSet = false;
    user_disable_missing = new OAIConfigNodePropertyBoolean();
    m_user_disable_missing_isSet = false;
    group_expiration_time = new OAIConfigNodePropertyString();
    m_group_expiration_time_isSet = false;
    group_auto_membership = new OAIConfigNodePropertyArray();
    m_group_auto_membership_isSet = false;
    group_property_mapping = new OAIConfigNodePropertyArray();
    m_group_property_mapping_isSet = false;
    group_path_prefix = new OAIConfigNodePropertyString();
    m_group_path_prefix_isSet = false;
    enable_rfc7613_usercase_mapped_profile = new OAIConfigNodePropertyBoolean();
    m_enable_rfc7613_usercase_mapped_profile_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::cleanup() {
    if(handler_name != nullptr) { 
        delete handler_name;
    }
    if(user_expiration_time != nullptr) { 
        delete user_expiration_time;
    }
    if(user_auto_membership != nullptr) { 
        delete user_auto_membership;
    }
    if(user_property_mapping != nullptr) { 
        delete user_property_mapping;
    }
    if(user_path_prefix != nullptr) { 
        delete user_path_prefix;
    }
    if(user_membership_exp_time != nullptr) { 
        delete user_membership_exp_time;
    }
    if(user_membership_nesting_depth != nullptr) { 
        delete user_membership_nesting_depth;
    }
    if(user_dynamic_membership != nullptr) { 
        delete user_dynamic_membership;
    }
    if(user_disable_missing != nullptr) { 
        delete user_disable_missing;
    }
    if(group_expiration_time != nullptr) { 
        delete group_expiration_time;
    }
    if(group_auto_membership != nullptr) { 
        delete group_auto_membership;
    }
    if(group_property_mapping != nullptr) { 
        delete group_property_mapping;
    }
    if(group_path_prefix != nullptr) { 
        delete group_path_prefix;
    }
    if(enable_rfc7613_usercase_mapped_profile != nullptr) { 
        delete enable_rfc7613_usercase_mapped_profile;
    }
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&handler_name, pJson["handler.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&user_expiration_time, pJson["user.expirationTime"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&user_auto_membership, pJson["user.autoMembership"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&user_property_mapping, pJson["user.propertyMapping"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&user_path_prefix, pJson["user.pathPrefix"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&user_membership_exp_time, pJson["user.membershipExpTime"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&user_membership_nesting_depth, pJson["user.membershipNestingDepth"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&user_dynamic_membership, pJson["user.dynamicMembership"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&user_disable_missing, pJson["user.disableMissing"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&group_expiration_time, pJson["group.expirationTime"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&group_auto_membership, pJson["group.autoMembership"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&group_property_mapping, pJson["group.propertyMapping"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&group_path_prefix, pJson["group.pathPrefix"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&enable_rfc7613_usercase_mapped_profile, pJson["enableRFC7613UsercaseMappedProfile"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::asJsonObject() {
    QJsonObject obj;
    if((handler_name != nullptr) && (handler_name->isSet())){
        toJsonValue(QString("handler.name"), handler_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((user_expiration_time != nullptr) && (user_expiration_time->isSet())){
        toJsonValue(QString("user.expirationTime"), user_expiration_time, obj, QString("OAIConfigNodePropertyString"));
    }
    if((user_auto_membership != nullptr) && (user_auto_membership->isSet())){
        toJsonValue(QString("user.autoMembership"), user_auto_membership, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((user_property_mapping != nullptr) && (user_property_mapping->isSet())){
        toJsonValue(QString("user.propertyMapping"), user_property_mapping, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((user_path_prefix != nullptr) && (user_path_prefix->isSet())){
        toJsonValue(QString("user.pathPrefix"), user_path_prefix, obj, QString("OAIConfigNodePropertyString"));
    }
    if((user_membership_exp_time != nullptr) && (user_membership_exp_time->isSet())){
        toJsonValue(QString("user.membershipExpTime"), user_membership_exp_time, obj, QString("OAIConfigNodePropertyString"));
    }
    if((user_membership_nesting_depth != nullptr) && (user_membership_nesting_depth->isSet())){
        toJsonValue(QString("user.membershipNestingDepth"), user_membership_nesting_depth, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((user_dynamic_membership != nullptr) && (user_dynamic_membership->isSet())){
        toJsonValue(QString("user.dynamicMembership"), user_dynamic_membership, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((user_disable_missing != nullptr) && (user_disable_missing->isSet())){
        toJsonValue(QString("user.disableMissing"), user_disable_missing, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((group_expiration_time != nullptr) && (group_expiration_time->isSet())){
        toJsonValue(QString("group.expirationTime"), group_expiration_time, obj, QString("OAIConfigNodePropertyString"));
    }
    if((group_auto_membership != nullptr) && (group_auto_membership->isSet())){
        toJsonValue(QString("group.autoMembership"), group_auto_membership, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((group_property_mapping != nullptr) && (group_property_mapping->isSet())){
        toJsonValue(QString("group.propertyMapping"), group_property_mapping, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((group_path_prefix != nullptr) && (group_path_prefix->isSet())){
        toJsonValue(QString("group.pathPrefix"), group_path_prefix, obj, QString("OAIConfigNodePropertyString"));
    }
    if((enable_rfc7613_usercase_mapped_profile != nullptr) && (enable_rfc7613_usercase_mapped_profile->isSet())){
        toJsonValue(QString("enableRFC7613UsercaseMappedProfile"), enable_rfc7613_usercase_mapped_profile, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getHandlerName() {
    return handler_name;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setHandlerName(OAIConfigNodePropertyString* handler_name) {
    this->handler_name = handler_name;
    this->m_handler_name_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserExpirationTime() {
    return user_expiration_time;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserExpirationTime(OAIConfigNodePropertyString* user_expiration_time) {
    this->user_expiration_time = user_expiration_time;
    this->m_user_expiration_time_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserAutoMembership() {
    return user_auto_membership;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserAutoMembership(OAIConfigNodePropertyArray* user_auto_membership) {
    this->user_auto_membership = user_auto_membership;
    this->m_user_auto_membership_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserPropertyMapping() {
    return user_property_mapping;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserPropertyMapping(OAIConfigNodePropertyArray* user_property_mapping) {
    this->user_property_mapping = user_property_mapping;
    this->m_user_property_mapping_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserPathPrefix() {
    return user_path_prefix;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserPathPrefix(OAIConfigNodePropertyString* user_path_prefix) {
    this->user_path_prefix = user_path_prefix;
    this->m_user_path_prefix_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserMembershipExpTime() {
    return user_membership_exp_time;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserMembershipExpTime(OAIConfigNodePropertyString* user_membership_exp_time) {
    this->user_membership_exp_time = user_membership_exp_time;
    this->m_user_membership_exp_time_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserMembershipNestingDepth() {
    return user_membership_nesting_depth;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserMembershipNestingDepth(OAIConfigNodePropertyInteger* user_membership_nesting_depth) {
    this->user_membership_nesting_depth = user_membership_nesting_depth;
    this->m_user_membership_nesting_depth_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserDynamicMembership() {
    return user_dynamic_membership;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserDynamicMembership(OAIConfigNodePropertyBoolean* user_dynamic_membership) {
    this->user_dynamic_membership = user_dynamic_membership;
    this->m_user_dynamic_membership_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getUserDisableMissing() {
    return user_disable_missing;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setUserDisableMissing(OAIConfigNodePropertyBoolean* user_disable_missing) {
    this->user_disable_missing = user_disable_missing;
    this->m_user_disable_missing_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupExpirationTime() {
    return group_expiration_time;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupExpirationTime(OAIConfigNodePropertyString* group_expiration_time) {
    this->group_expiration_time = group_expiration_time;
    this->m_group_expiration_time_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupAutoMembership() {
    return group_auto_membership;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupAutoMembership(OAIConfigNodePropertyArray* group_auto_membership) {
    this->group_auto_membership = group_auto_membership;
    this->m_group_auto_membership_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupPropertyMapping() {
    return group_property_mapping;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupPropertyMapping(OAIConfigNodePropertyArray* group_property_mapping) {
    this->group_property_mapping = group_property_mapping;
    this->m_group_property_mapping_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getGroupPathPrefix() {
    return group_path_prefix;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setGroupPathPrefix(OAIConfigNodePropertyString* group_path_prefix) {
    this->group_path_prefix = group_path_prefix;
    this->m_group_path_prefix_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::getEnableRfc7613UsercaseMappedProfile() {
    return enable_rfc7613_usercase_mapped_profile;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::setEnableRfc7613UsercaseMappedProfile(OAIConfigNodePropertyBoolean* enable_rfc7613_usercase_mapped_profile) {
    this->enable_rfc7613_usercase_mapped_profile = enable_rfc7613_usercase_mapped_profile;
    this->m_enable_rfc7613_usercase_mapped_profile_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(handler_name != nullptr && handler_name->isSet()){ isObjectUpdated = true; break;}
        if(user_expiration_time != nullptr && user_expiration_time->isSet()){ isObjectUpdated = true; break;}
        if(user_auto_membership != nullptr && user_auto_membership->isSet()){ isObjectUpdated = true; break;}
        if(user_property_mapping != nullptr && user_property_mapping->isSet()){ isObjectUpdated = true; break;}
        if(user_path_prefix != nullptr && user_path_prefix->isSet()){ isObjectUpdated = true; break;}
        if(user_membership_exp_time != nullptr && user_membership_exp_time->isSet()){ isObjectUpdated = true; break;}
        if(user_membership_nesting_depth != nullptr && user_membership_nesting_depth->isSet()){ isObjectUpdated = true; break;}
        if(user_dynamic_membership != nullptr && user_dynamic_membership->isSet()){ isObjectUpdated = true; break;}
        if(user_disable_missing != nullptr && user_disable_missing->isSet()){ isObjectUpdated = true; break;}
        if(group_expiration_time != nullptr && group_expiration_time->isSet()){ isObjectUpdated = true; break;}
        if(group_auto_membership != nullptr && group_auto_membership->isSet()){ isObjectUpdated = true; break;}
        if(group_property_mapping != nullptr && group_property_mapping->isSet()){ isObjectUpdated = true; break;}
        if(group_path_prefix != nullptr && group_path_prefix->isSet()){ isObjectUpdated = true; break;}
        if(enable_rfc7613_usercase_mapped_profile != nullptr && enable_rfc7613_usercase_mapped_profile->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

