# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ConfigNodePropertyDropDownType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, labels: object=None, values: object=None):  # noqa: E501
        """ConfigNodePropertyDropDownType - a model defined in OpenAPI

        :param labels: The labels of this ConfigNodePropertyDropDownType.  # noqa: E501
        :type labels: object
        :param values: The values of this ConfigNodePropertyDropDownType.  # noqa: E501
        :type values: object
        """
        self.openapi_types = {
            'labels': object,
            'values': object
        }

        self.attribute_map = {
            'labels': 'labels',
            'values': 'values'
        }

        self._labels = labels
        self._values = values

    @classmethod
    def from_dict(cls, dikt) -> 'ConfigNodePropertyDropDownType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The configNodePropertyDropDown_type of this ConfigNodePropertyDropDownType.  # noqa: E501
        :rtype: ConfigNodePropertyDropDownType
        """
        return util.deserialize_model(dikt, cls)

    @property
    def labels(self) -> object:
        """Gets the labels of this ConfigNodePropertyDropDownType.

        Drop Down label  # noqa: E501

        :return: The labels of this ConfigNodePropertyDropDownType.
        :rtype: object
        """
        return self._labels

    @labels.setter
    def labels(self, labels: object):
        """Sets the labels of this ConfigNodePropertyDropDownType.

        Drop Down label  # noqa: E501

        :param labels: The labels of this ConfigNodePropertyDropDownType.
        :type labels: object
        """

        self._labels = labels

    @property
    def values(self) -> object:
        """Gets the values of this ConfigNodePropertyDropDownType.

        Drown Down value  # noqa: E501

        :return: The values of this ConfigNodePropertyDropDownType.
        :rtype: object
        """
        return self._values

    @values.setter
    def values(self, values: object):
        """Sets the values of this ConfigNodePropertyDropDownType.

        Drown Down value  # noqa: E501

        :param values: The values of this ConfigNodePropertyDropDownType.
        :type values: object
        """

        self._values = values
