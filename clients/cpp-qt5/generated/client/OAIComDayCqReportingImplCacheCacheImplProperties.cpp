/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqReportingImplCacheCacheImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqReportingImplCacheCacheImplProperties::OAIComDayCqReportingImplCacheCacheImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqReportingImplCacheCacheImplProperties::OAIComDayCqReportingImplCacheCacheImplProperties() {
    init();
}

OAIComDayCqReportingImplCacheCacheImplProperties::~OAIComDayCqReportingImplCacheCacheImplProperties() {
    this->cleanup();
}

void
OAIComDayCqReportingImplCacheCacheImplProperties::init() {
    repcache_enable = new OAIConfigNodePropertyBoolean();
    m_repcache_enable_isSet = false;
    repcache_ttl = new OAIConfigNodePropertyInteger();
    m_repcache_ttl_isSet = false;
    repcache_max = new OAIConfigNodePropertyInteger();
    m_repcache_max_isSet = false;
}

void
OAIComDayCqReportingImplCacheCacheImplProperties::cleanup() {
    if(repcache_enable != nullptr) { 
        delete repcache_enable;
    }
    if(repcache_ttl != nullptr) { 
        delete repcache_ttl;
    }
    if(repcache_max != nullptr) { 
        delete repcache_max;
    }
}

OAIComDayCqReportingImplCacheCacheImplProperties*
OAIComDayCqReportingImplCacheCacheImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqReportingImplCacheCacheImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&repcache_enable, pJson["repcache.enable"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&repcache_ttl, pJson["repcache.ttl"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&repcache_max, pJson["repcache.max"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComDayCqReportingImplCacheCacheImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqReportingImplCacheCacheImplProperties::asJsonObject() {
    QJsonObject obj;
    if((repcache_enable != nullptr) && (repcache_enable->isSet())){
        toJsonValue(QString("repcache.enable"), repcache_enable, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((repcache_ttl != nullptr) && (repcache_ttl->isSet())){
        toJsonValue(QString("repcache.ttl"), repcache_ttl, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((repcache_max != nullptr) && (repcache_max->isSet())){
        toJsonValue(QString("repcache.max"), repcache_max, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqReportingImplCacheCacheImplProperties::getRepcacheEnable() {
    return repcache_enable;
}
void
OAIComDayCqReportingImplCacheCacheImplProperties::setRepcacheEnable(OAIConfigNodePropertyBoolean* repcache_enable) {
    this->repcache_enable = repcache_enable;
    this->m_repcache_enable_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqReportingImplCacheCacheImplProperties::getRepcacheTtl() {
    return repcache_ttl;
}
void
OAIComDayCqReportingImplCacheCacheImplProperties::setRepcacheTtl(OAIConfigNodePropertyInteger* repcache_ttl) {
    this->repcache_ttl = repcache_ttl;
    this->m_repcache_ttl_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqReportingImplCacheCacheImplProperties::getRepcacheMax() {
    return repcache_max;
}
void
OAIComDayCqReportingImplCacheCacheImplProperties::setRepcacheMax(OAIConfigNodePropertyInteger* repcache_max) {
    this->repcache_max = repcache_max;
    this->m_repcache_max_isSet = true;
}


bool
OAIComDayCqReportingImplCacheCacheImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(repcache_enable != nullptr && repcache_enable->isSet()){ isObjectUpdated = true; break;}
        if(repcache_ttl != nullptr && repcache_ttl->isSet()){ isObjectUpdated = true; break;}
        if(repcache_max != nullptr && repcache_max->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

