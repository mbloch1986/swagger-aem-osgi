/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqWcmMsmImplRolloutManagerImplProperties.h
 *
 * 
 */

#ifndef ComDayCqWcmMsmImplRolloutManagerImplProperties_H_
#define ComDayCqWcmMsmImplRolloutManagerImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqWcmMsmImplRolloutManagerImplProperties
    : public ModelBase
{
public:
    ComDayCqWcmMsmImplRolloutManagerImplProperties();
    virtual ~ComDayCqWcmMsmImplRolloutManagerImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqWcmMsmImplRolloutManagerImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getEventFilter() const;
    void setEventFilter(ConfigNodePropertyString const& value);
    bool eventFilterIsSet() const;
    void unsetEvent_filter();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getRolloutmgrExcludedpropsDefault() const;
    void setRolloutmgrExcludedpropsDefault(ConfigNodePropertyArray const& value);
    bool rolloutmgrExcludedpropsDefaultIsSet() const;
    void unsetRolloutmgr_excludedprops_default();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getRolloutmgrExcludedparagraphpropsDefault() const;
    void setRolloutmgrExcludedparagraphpropsDefault(ConfigNodePropertyArray const& value);
    bool rolloutmgrExcludedparagraphpropsDefaultIsSet() const;
    void unsetRolloutmgr_excludedparagraphprops_default();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getRolloutmgrExcludednodetypesDefault() const;
    void setRolloutmgrExcludednodetypesDefault(ConfigNodePropertyArray const& value);
    bool rolloutmgrExcludednodetypesDefaultIsSet() const;
    void unsetRolloutmgr_excludednodetypes_default();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getRolloutmgrThreadpoolMaxsize() const;
    void setRolloutmgrThreadpoolMaxsize(ConfigNodePropertyInteger const& value);
    bool rolloutmgrThreadpoolMaxsizeIsSet() const;
    void unsetRolloutmgr_threadpool_maxsize();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getRolloutmgrThreadpoolMaxshutdowntime() const;
    void setRolloutmgrThreadpoolMaxshutdowntime(ConfigNodePropertyInteger const& value);
    bool rolloutmgrThreadpoolMaxshutdowntimeIsSet() const;
    void unsetRolloutmgr_threadpool_maxshutdowntime();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getRolloutmgrThreadpoolPriority() const;
    void setRolloutmgrThreadpoolPriority(ConfigNodePropertyDropDown const& value);
    bool rolloutmgrThreadpoolPriorityIsSet() const;
    void unsetRolloutmgr_threadpool_priority();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getRolloutmgrCommitSize() const;
    void setRolloutmgrCommitSize(ConfigNodePropertyInteger const& value);
    bool rolloutmgrCommitSizeIsSet() const;
    void unsetRolloutmgr_commit_size();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getRolloutmgrConflicthandlingEnabled() const;
    void setRolloutmgrConflicthandlingEnabled(ConfigNodePropertyBoolean const& value);
    bool rolloutmgrConflicthandlingEnabledIsSet() const;
    void unsetRolloutmgr_conflicthandling_enabled();

protected:
    ConfigNodePropertyString m_Event_filter;
    bool m_Event_filterIsSet;
    ConfigNodePropertyArray m_Rolloutmgr_excludedprops_default;
    bool m_Rolloutmgr_excludedprops_defaultIsSet;
    ConfigNodePropertyArray m_Rolloutmgr_excludedparagraphprops_default;
    bool m_Rolloutmgr_excludedparagraphprops_defaultIsSet;
    ConfigNodePropertyArray m_Rolloutmgr_excludednodetypes_default;
    bool m_Rolloutmgr_excludednodetypes_defaultIsSet;
    ConfigNodePropertyInteger m_Rolloutmgr_threadpool_maxsize;
    bool m_Rolloutmgr_threadpool_maxsizeIsSet;
    ConfigNodePropertyInteger m_Rolloutmgr_threadpool_maxshutdowntime;
    bool m_Rolloutmgr_threadpool_maxshutdowntimeIsSet;
    ConfigNodePropertyDropDown m_Rolloutmgr_threadpool_priority;
    bool m_Rolloutmgr_threadpool_priorityIsSet;
    ConfigNodePropertyInteger m_Rolloutmgr_commit_size;
    bool m_Rolloutmgr_commit_sizeIsSet;
    ConfigNodePropertyBoolean m_Rolloutmgr_conflicthandling_enabled;
    bool m_Rolloutmgr_conflicthandling_enabledIsSet;
};

}
}
}
}

#endif /* ComDayCqWcmMsmImplRolloutManagerImplProperties_H_ */
