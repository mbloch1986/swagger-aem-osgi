/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteCompatrouterImplSwitchMappingConfigProperties {
  #[serde(rename = "group")]
  group: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "ids")]
  ids: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeGraniteCompatrouterImplSwitchMappingConfigProperties {
  pub fn new() -> ComAdobeGraniteCompatrouterImplSwitchMappingConfigProperties {
    ComAdobeGraniteCompatrouterImplSwitchMappingConfigProperties {
      group: None,
      ids: None
    }
  }

  pub fn set_group(&mut self, group: ::models::ConfigNodePropertyString) {
    self.group = Some(group);
  }

  pub fn with_group(mut self, group: ::models::ConfigNodePropertyString) -> ComAdobeGraniteCompatrouterImplSwitchMappingConfigProperties {
    self.group = Some(group);
    self
  }

  pub fn group(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.group.as_ref()
  }

  pub fn reset_group(&mut self) {
    self.group = None;
  }

  pub fn set_ids(&mut self, ids: ::models::ConfigNodePropertyArray) {
    self.ids = Some(ids);
  }

  pub fn with_ids(mut self, ids: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteCompatrouterImplSwitchMappingConfigProperties {
    self.ids = Some(ids);
    self
  }

  pub fn ids(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.ids.as_ref()
  }

  pub fn reset_ids(&mut self) {
    self.ids = None;
  }

}



