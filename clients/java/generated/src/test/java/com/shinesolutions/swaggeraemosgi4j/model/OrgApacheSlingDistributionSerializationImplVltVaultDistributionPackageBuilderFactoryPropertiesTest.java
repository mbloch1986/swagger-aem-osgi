/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyDropDown;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryProperties
 */
public class OrgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryPropertiesTest {
    private final OrgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryProperties model = new OrgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryProperties();

    /**
     * Model tests for OrgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryProperties
     */
    @Test
    public void testOrgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryProperties() {
        // TODO: test OrgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryProperties
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'importMode'
     */
    @Test
    public void importModeTest() {
        // TODO: test importMode
    }

    /**
     * Test the property 'aclHandling'
     */
    @Test
    public void aclHandlingTest() {
        // TODO: test aclHandling
    }

    /**
     * Test the property 'packageRoots'
     */
    @Test
    public void packageRootsTest() {
        // TODO: test packageRoots
    }

    /**
     * Test the property 'packageFilters'
     */
    @Test
    public void packageFiltersTest() {
        // TODO: test packageFilters
    }

    /**
     * Test the property 'propertyFilters'
     */
    @Test
    public void propertyFiltersTest() {
        // TODO: test propertyFilters
    }

    /**
     * Test the property 'tempFsFolder'
     */
    @Test
    public void tempFsFolderTest() {
        // TODO: test tempFsFolder
    }

    /**
     * Test the property 'useBinaryReferences'
     */
    @Test
    public void useBinaryReferencesTest() {
        // TODO: test useBinaryReferences
    }

    /**
     * Test the property 'autoSaveThreshold'
     */
    @Test
    public void autoSaveThresholdTest() {
        // TODO: test autoSaveThreshold
    }

    /**
     * Test the property 'cleanupDelay'
     */
    @Test
    public void cleanupDelayTest() {
        // TODO: test cleanupDelay
    }

    /**
     * Test the property 'fileThreshold'
     */
    @Test
    public void fileThresholdTest() {
        // TODO: test fileThreshold
    }

    /**
     * Test the property 'MEGA_BYTES'
     */
    @Test
    public void MEGA_BYTESTest() {
        // TODO: test MEGA_BYTES
    }

    /**
     * Test the property 'useOffHeapMemory'
     */
    @Test
    public void useOffHeapMemoryTest() {
        // TODO: test useOffHeapMemory
    }

    /**
     * Test the property 'digestAlgorithm'
     */
    @Test
    public void digestAlgorithmTest() {
        // TODO: test digestAlgorithm
    }

    /**
     * Test the property 'monitoringQueueSize'
     */
    @Test
    public void monitoringQueueSizeTest() {
        // TODO: test monitoringQueueSize
    }

    /**
     * Test the property 'pathsMapping'
     */
    @Test
    public void pathsMappingTest() {
        // TODO: test pathsMapping
    }

    /**
     * Test the property 'strictImport'
     */
    @Test
    public void strictImportTest() {
        // TODO: test strictImport
    }

}
