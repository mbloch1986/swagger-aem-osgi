/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties_H
#define OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties: public OAIObject {
public:
    OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties();
    OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties(QString json);
    ~OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getUsersPath() const;
    void setUsersPath(const OAIConfigNodePropertyString &users_path);

    OAIConfigNodePropertyString getGroupsPath() const;
    void setGroupsPath(const OAIConfigNodePropertyString &groups_path);

    OAIConfigNodePropertyString getSystemRelativePath() const;
    void setSystemRelativePath(const OAIConfigNodePropertyString &system_relative_path);

    OAIConfigNodePropertyInteger getDefaultDepth() const;
    void setDefaultDepth(const OAIConfigNodePropertyInteger &default_depth);

    OAIConfigNodePropertyDropDown getImportBehavior() const;
    void setImportBehavior(const OAIConfigNodePropertyDropDown &import_behavior);

    OAIConfigNodePropertyString getPasswordHashAlgorithm() const;
    void setPasswordHashAlgorithm(const OAIConfigNodePropertyString &password_hash_algorithm);

    OAIConfigNodePropertyInteger getPasswordHashIterations() const;
    void setPasswordHashIterations(const OAIConfigNodePropertyInteger &password_hash_iterations);

    OAIConfigNodePropertyInteger getPasswordSaltSize() const;
    void setPasswordSaltSize(const OAIConfigNodePropertyInteger &password_salt_size);

    OAIConfigNodePropertyBoolean getOmitAdminPw() const;
    void setOmitAdminPw(const OAIConfigNodePropertyBoolean &omit_admin_pw);

    OAIConfigNodePropertyBoolean getSupportAutoSave() const;
    void setSupportAutoSave(const OAIConfigNodePropertyBoolean &support_auto_save);

    OAIConfigNodePropertyInteger getPasswordMaxAge() const;
    void setPasswordMaxAge(const OAIConfigNodePropertyInteger &password_max_age);

    OAIConfigNodePropertyBoolean getInitialPasswordChange() const;
    void setInitialPasswordChange(const OAIConfigNodePropertyBoolean &initial_password_change);

    OAIConfigNodePropertyInteger getPasswordHistorySize() const;
    void setPasswordHistorySize(const OAIConfigNodePropertyInteger &password_history_size);

    OAIConfigNodePropertyBoolean getPasswordExpiryForAdmin() const;
    void setPasswordExpiryForAdmin(const OAIConfigNodePropertyBoolean &password_expiry_for_admin);

    OAIConfigNodePropertyInteger getCacheExpiration() const;
    void setCacheExpiration(const OAIConfigNodePropertyInteger &cache_expiration);

    OAIConfigNodePropertyBoolean getEnableRfc7613UsercaseMappedProfile() const;
    void setEnableRfc7613UsercaseMappedProfile(const OAIConfigNodePropertyBoolean &enable_rfc7613_usercase_mapped_profile);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString users_path;
    bool m_users_path_isSet;

    OAIConfigNodePropertyString groups_path;
    bool m_groups_path_isSet;

    OAIConfigNodePropertyString system_relative_path;
    bool m_system_relative_path_isSet;

    OAIConfigNodePropertyInteger default_depth;
    bool m_default_depth_isSet;

    OAIConfigNodePropertyDropDown import_behavior;
    bool m_import_behavior_isSet;

    OAIConfigNodePropertyString password_hash_algorithm;
    bool m_password_hash_algorithm_isSet;

    OAIConfigNodePropertyInteger password_hash_iterations;
    bool m_password_hash_iterations_isSet;

    OAIConfigNodePropertyInteger password_salt_size;
    bool m_password_salt_size_isSet;

    OAIConfigNodePropertyBoolean omit_admin_pw;
    bool m_omit_admin_pw_isSet;

    OAIConfigNodePropertyBoolean support_auto_save;
    bool m_support_auto_save_isSet;

    OAIConfigNodePropertyInteger password_max_age;
    bool m_password_max_age_isSet;

    OAIConfigNodePropertyBoolean initial_password_change;
    bool m_initial_password_change_isSet;

    OAIConfigNodePropertyInteger password_history_size;
    bool m_password_history_size_isSet;

    OAIConfigNodePropertyBoolean password_expiry_for_admin;
    bool m_password_expiry_for_admin_isSet;

    OAIConfigNodePropertyInteger cache_expiration;
    bool m_cache_expiration_isSet;

    OAIConfigNodePropertyBoolean enable_rfc7613_usercase_mapped_profile;
    bool m_enable_rfc7613_usercase_mapped_profile_isSet;

};

}

#endif // OAIOrgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties_H
