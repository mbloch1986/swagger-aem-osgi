/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties()
{
    m_ThresholdIsSet = false;
    m_JobTopicNameIsSet = false;
    m_EmailEnabledIsSet = false;
    
}

ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::~ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties()
{
}

void ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_ThresholdIsSet)
    {
        val["threshold"] = ModelBase::toJson(m_Threshold);
    }
    if(m_JobTopicNameIsSet)
    {
        val["jobTopicName"] = ModelBase::toJson(m_JobTopicName);
    }
    if(m_EmailEnabledIsSet)
    {
        val["emailEnabled"] = ModelBase::toJson(m_EmailEnabled);
    }
    

    return val;
}

void ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::fromJson(nlohmann::json& val)
{
    if(val.find("threshold") != val.end())
    {
        if(!val["threshold"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["threshold"]);
            setThreshold( newItem );
        }
        
    }
    if(val.find("jobTopicName") != val.end())
    {
        if(!val["jobTopicName"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jobTopicName"]);
            setJobTopicName( newItem );
        }
        
    }
    if(val.find("emailEnabled") != val.end())
    {
        if(!val["emailEnabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["emailEnabled"]);
            setEmailEnabled( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::getThreshold() const
{
    return m_Threshold;
}
void ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::setThreshold(ConfigNodePropertyInteger const& value)
{
    m_Threshold = value;
    m_ThresholdIsSet = true;
}
bool ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::thresholdIsSet() const
{
    return m_ThresholdIsSet;
}
void ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::unsetThreshold()
{
    m_ThresholdIsSet = false;
}
ConfigNodePropertyString ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::getJobTopicName() const
{
    return m_JobTopicName;
}
void ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::setJobTopicName(ConfigNodePropertyString const& value)
{
    m_JobTopicName = value;
    m_JobTopicNameIsSet = true;
}
bool ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::jobTopicNameIsSet() const
{
    return m_JobTopicNameIsSet;
}
void ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::unsetJobTopicName()
{
    m_JobTopicNameIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::getEmailEnabled() const
{
    return m_EmailEnabled;
}
void ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::setEmailEnabled(ConfigNodePropertyBoolean const& value)
{
    m_EmailEnabled = value;
    m_EmailEnabledIsSet = true;
}
bool ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::emailEnabledIsSet() const
{
    return m_EmailEnabledIsSet;
}
void ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties::unsetEmailEnabled()
{
    m_EmailEnabledIsSet = false;
}

}
}
}
}

