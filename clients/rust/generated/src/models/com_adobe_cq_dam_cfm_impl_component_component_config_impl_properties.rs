/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqDamCfmImplComponentComponentConfigImplProperties {
  #[serde(rename = "dam.cfm.component.resourceType")]
  dam_cfm_component_resource_type: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "dam.cfm.component.fileReferenceProp")]
  dam_cfm_component_file_reference_prop: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "dam.cfm.component.elementsProp")]
  dam_cfm_component_elements_prop: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "dam.cfm.component.variationProp")]
  dam_cfm_component_variation_prop: Option<::models::ConfigNodePropertyString>
}

impl ComAdobeCqDamCfmImplComponentComponentConfigImplProperties {
  pub fn new() -> ComAdobeCqDamCfmImplComponentComponentConfigImplProperties {
    ComAdobeCqDamCfmImplComponentComponentConfigImplProperties {
      dam_cfm_component_resource_type: None,
      dam_cfm_component_file_reference_prop: None,
      dam_cfm_component_elements_prop: None,
      dam_cfm_component_variation_prop: None
    }
  }

  pub fn set_dam_cfm_component_resource_type(&mut self, dam_cfm_component_resource_type: ::models::ConfigNodePropertyString) {
    self.dam_cfm_component_resource_type = Some(dam_cfm_component_resource_type);
  }

  pub fn with_dam_cfm_component_resource_type(mut self, dam_cfm_component_resource_type: ::models::ConfigNodePropertyString) -> ComAdobeCqDamCfmImplComponentComponentConfigImplProperties {
    self.dam_cfm_component_resource_type = Some(dam_cfm_component_resource_type);
    self
  }

  pub fn dam_cfm_component_resource_type(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.dam_cfm_component_resource_type.as_ref()
  }

  pub fn reset_dam_cfm_component_resource_type(&mut self) {
    self.dam_cfm_component_resource_type = None;
  }

  pub fn set_dam_cfm_component_file_reference_prop(&mut self, dam_cfm_component_file_reference_prop: ::models::ConfigNodePropertyString) {
    self.dam_cfm_component_file_reference_prop = Some(dam_cfm_component_file_reference_prop);
  }

  pub fn with_dam_cfm_component_file_reference_prop(mut self, dam_cfm_component_file_reference_prop: ::models::ConfigNodePropertyString) -> ComAdobeCqDamCfmImplComponentComponentConfigImplProperties {
    self.dam_cfm_component_file_reference_prop = Some(dam_cfm_component_file_reference_prop);
    self
  }

  pub fn dam_cfm_component_file_reference_prop(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.dam_cfm_component_file_reference_prop.as_ref()
  }

  pub fn reset_dam_cfm_component_file_reference_prop(&mut self) {
    self.dam_cfm_component_file_reference_prop = None;
  }

  pub fn set_dam_cfm_component_elements_prop(&mut self, dam_cfm_component_elements_prop: ::models::ConfigNodePropertyString) {
    self.dam_cfm_component_elements_prop = Some(dam_cfm_component_elements_prop);
  }

  pub fn with_dam_cfm_component_elements_prop(mut self, dam_cfm_component_elements_prop: ::models::ConfigNodePropertyString) -> ComAdobeCqDamCfmImplComponentComponentConfigImplProperties {
    self.dam_cfm_component_elements_prop = Some(dam_cfm_component_elements_prop);
    self
  }

  pub fn dam_cfm_component_elements_prop(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.dam_cfm_component_elements_prop.as_ref()
  }

  pub fn reset_dam_cfm_component_elements_prop(&mut self) {
    self.dam_cfm_component_elements_prop = None;
  }

  pub fn set_dam_cfm_component_variation_prop(&mut self, dam_cfm_component_variation_prop: ::models::ConfigNodePropertyString) {
    self.dam_cfm_component_variation_prop = Some(dam_cfm_component_variation_prop);
  }

  pub fn with_dam_cfm_component_variation_prop(mut self, dam_cfm_component_variation_prop: ::models::ConfigNodePropertyString) -> ComAdobeCqDamCfmImplComponentComponentConfigImplProperties {
    self.dam_cfm_component_variation_prop = Some(dam_cfm_component_variation_prop);
    self
  }

  pub fn dam_cfm_component_variation_prop(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.dam_cfm_component_variation_prop.as_ref()
  }

  pub fn reset_dam_cfm_component_variation_prop(&mut self) {
    self.dam_cfm_component_variation_prop = None;
  }

}



