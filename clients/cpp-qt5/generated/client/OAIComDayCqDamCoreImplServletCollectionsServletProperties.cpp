/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamCoreImplServletCollectionsServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamCoreImplServletCollectionsServletProperties::OAIComDayCqDamCoreImplServletCollectionsServletProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqDamCoreImplServletCollectionsServletProperties::OAIComDayCqDamCoreImplServletCollectionsServletProperties() {
    init();
}

OAIComDayCqDamCoreImplServletCollectionsServletProperties::~OAIComDayCqDamCoreImplServletCollectionsServletProperties() {
    this->cleanup();
}

void
OAIComDayCqDamCoreImplServletCollectionsServletProperties::init() {
    cq_dam_batch_collections_properties = new OAIConfigNodePropertyArray();
    m_cq_dam_batch_collections_properties_isSet = false;
    cq_dam_batch_collections_limit = new OAIConfigNodePropertyInteger();
    m_cq_dam_batch_collections_limit_isSet = false;
}

void
OAIComDayCqDamCoreImplServletCollectionsServletProperties::cleanup() {
    if(cq_dam_batch_collections_properties != nullptr) { 
        delete cq_dam_batch_collections_properties;
    }
    if(cq_dam_batch_collections_limit != nullptr) { 
        delete cq_dam_batch_collections_limit;
    }
}

OAIComDayCqDamCoreImplServletCollectionsServletProperties*
OAIComDayCqDamCoreImplServletCollectionsServletProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqDamCoreImplServletCollectionsServletProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_dam_batch_collections_properties, pJson["cq.dam.batch.collections.properties"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cq_dam_batch_collections_limit, pJson["cq.dam.batch.collections.limit"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComDayCqDamCoreImplServletCollectionsServletProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamCoreImplServletCollectionsServletProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_dam_batch_collections_properties != nullptr) && (cq_dam_batch_collections_properties->isSet())){
        toJsonValue(QString("cq.dam.batch.collections.properties"), cq_dam_batch_collections_properties, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cq_dam_batch_collections_limit != nullptr) && (cq_dam_batch_collections_limit->isSet())){
        toJsonValue(QString("cq.dam.batch.collections.limit"), cq_dam_batch_collections_limit, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComDayCqDamCoreImplServletCollectionsServletProperties::getCqDamBatchCollectionsProperties() {
    return cq_dam_batch_collections_properties;
}
void
OAIComDayCqDamCoreImplServletCollectionsServletProperties::setCqDamBatchCollectionsProperties(OAIConfigNodePropertyArray* cq_dam_batch_collections_properties) {
    this->cq_dam_batch_collections_properties = cq_dam_batch_collections_properties;
    this->m_cq_dam_batch_collections_properties_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqDamCoreImplServletCollectionsServletProperties::getCqDamBatchCollectionsLimit() {
    return cq_dam_batch_collections_limit;
}
void
OAIComDayCqDamCoreImplServletCollectionsServletProperties::setCqDamBatchCollectionsLimit(OAIConfigNodePropertyInteger* cq_dam_batch_collections_limit) {
    this->cq_dam_batch_collections_limit = cq_dam_batch_collections_limit;
    this->m_cq_dam_batch_collections_limit_isSet = true;
}


bool
OAIComDayCqDamCoreImplServletCollectionsServletProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_dam_batch_collections_properties != nullptr && cq_dam_batch_collections_properties->isSet()){ isObjectUpdated = true; break;}
        if(cq_dam_batch_collections_limit != nullptr && cq_dam_batch_collections_limit->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

