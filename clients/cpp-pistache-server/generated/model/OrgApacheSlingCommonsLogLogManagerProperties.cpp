/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingCommonsLogLogManagerProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingCommonsLogLogManagerProperties::OrgApacheSlingCommonsLogLogManagerProperties()
{
    m_Org_apache_sling_commons_log_levelIsSet = false;
    m_Org_apache_sling_commons_log_fileIsSet = false;
    m_Org_apache_sling_commons_log_file_numberIsSet = false;
    m_Org_apache_sling_commons_log_file_sizeIsSet = false;
    m_Org_apache_sling_commons_log_patternIsSet = false;
    m_Org_apache_sling_commons_log_configurationFileIsSet = false;
    m_Org_apache_sling_commons_log_packagingDataEnabledIsSet = false;
    m_Org_apache_sling_commons_log_maxCallerDataDepthIsSet = false;
    m_Org_apache_sling_commons_log_maxOldFileCountInDumpIsSet = false;
    m_Org_apache_sling_commons_log_numOfLinesIsSet = false;
    
}

OrgApacheSlingCommonsLogLogManagerProperties::~OrgApacheSlingCommonsLogLogManagerProperties()
{
}

void OrgApacheSlingCommonsLogLogManagerProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingCommonsLogLogManagerProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Org_apache_sling_commons_log_levelIsSet)
    {
        val["org.apache.sling.commons.log.level"] = ModelBase::toJson(m_Org_apache_sling_commons_log_level);
    }
    if(m_Org_apache_sling_commons_log_fileIsSet)
    {
        val["org.apache.sling.commons.log.file"] = ModelBase::toJson(m_Org_apache_sling_commons_log_file);
    }
    if(m_Org_apache_sling_commons_log_file_numberIsSet)
    {
        val["org.apache.sling.commons.log.file.number"] = ModelBase::toJson(m_Org_apache_sling_commons_log_file_number);
    }
    if(m_Org_apache_sling_commons_log_file_sizeIsSet)
    {
        val["org.apache.sling.commons.log.file.size"] = ModelBase::toJson(m_Org_apache_sling_commons_log_file_size);
    }
    if(m_Org_apache_sling_commons_log_patternIsSet)
    {
        val["org.apache.sling.commons.log.pattern"] = ModelBase::toJson(m_Org_apache_sling_commons_log_pattern);
    }
    if(m_Org_apache_sling_commons_log_configurationFileIsSet)
    {
        val["org.apache.sling.commons.log.configurationFile"] = ModelBase::toJson(m_Org_apache_sling_commons_log_configurationFile);
    }
    if(m_Org_apache_sling_commons_log_packagingDataEnabledIsSet)
    {
        val["org.apache.sling.commons.log.packagingDataEnabled"] = ModelBase::toJson(m_Org_apache_sling_commons_log_packagingDataEnabled);
    }
    if(m_Org_apache_sling_commons_log_maxCallerDataDepthIsSet)
    {
        val["org.apache.sling.commons.log.maxCallerDataDepth"] = ModelBase::toJson(m_Org_apache_sling_commons_log_maxCallerDataDepth);
    }
    if(m_Org_apache_sling_commons_log_maxOldFileCountInDumpIsSet)
    {
        val["org.apache.sling.commons.log.maxOldFileCountInDump"] = ModelBase::toJson(m_Org_apache_sling_commons_log_maxOldFileCountInDump);
    }
    if(m_Org_apache_sling_commons_log_numOfLinesIsSet)
    {
        val["org.apache.sling.commons.log.numOfLines"] = ModelBase::toJson(m_Org_apache_sling_commons_log_numOfLines);
    }
    

    return val;
}

void OrgApacheSlingCommonsLogLogManagerProperties::fromJson(nlohmann::json& val)
{
    if(val.find("org.apache.sling.commons.log.level") != val.end())
    {
        if(!val["org.apache.sling.commons.log.level"].is_null())
        {
            ConfigNodePropertyDropDown newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.level"]);
            setOrgApacheSlingCommonsLogLevel( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.file") != val.end())
    {
        if(!val["org.apache.sling.commons.log.file"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.file"]);
            setOrgApacheSlingCommonsLogFile( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.file.number") != val.end())
    {
        if(!val["org.apache.sling.commons.log.file.number"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.file.number"]);
            setOrgApacheSlingCommonsLogFileNumber( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.file.size") != val.end())
    {
        if(!val["org.apache.sling.commons.log.file.size"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.file.size"]);
            setOrgApacheSlingCommonsLogFileSize( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.pattern") != val.end())
    {
        if(!val["org.apache.sling.commons.log.pattern"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.pattern"]);
            setOrgApacheSlingCommonsLogPattern( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.configurationFile") != val.end())
    {
        if(!val["org.apache.sling.commons.log.configurationFile"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.configurationFile"]);
            setOrgApacheSlingCommonsLogConfigurationFile( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.packagingDataEnabled") != val.end())
    {
        if(!val["org.apache.sling.commons.log.packagingDataEnabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.packagingDataEnabled"]);
            setOrgApacheSlingCommonsLogPackagingDataEnabled( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.maxCallerDataDepth") != val.end())
    {
        if(!val["org.apache.sling.commons.log.maxCallerDataDepth"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.maxCallerDataDepth"]);
            setOrgApacheSlingCommonsLogMaxCallerDataDepth( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.maxOldFileCountInDump") != val.end())
    {
        if(!val["org.apache.sling.commons.log.maxOldFileCountInDump"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.maxOldFileCountInDump"]);
            setOrgApacheSlingCommonsLogMaxOldFileCountInDump( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.numOfLines") != val.end())
    {
        if(!val["org.apache.sling.commons.log.numOfLines"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.numOfLines"]);
            setOrgApacheSlingCommonsLogNumOfLines( newItem );
        }
        
    }
    
}


ConfigNodePropertyDropDown OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogLevel() const
{
    return m_Org_apache_sling_commons_log_level;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogLevel(ConfigNodePropertyDropDown const& value)
{
    m_Org_apache_sling_commons_log_level = value;
    m_Org_apache_sling_commons_log_levelIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogLevelIsSet() const
{
    return m_Org_apache_sling_commons_log_levelIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_level()
{
    m_Org_apache_sling_commons_log_levelIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogFile() const
{
    return m_Org_apache_sling_commons_log_file;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogFile(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_commons_log_file = value;
    m_Org_apache_sling_commons_log_fileIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogFileIsSet() const
{
    return m_Org_apache_sling_commons_log_fileIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_file()
{
    m_Org_apache_sling_commons_log_fileIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogFileNumber() const
{
    return m_Org_apache_sling_commons_log_file_number;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogFileNumber(ConfigNodePropertyInteger const& value)
{
    m_Org_apache_sling_commons_log_file_number = value;
    m_Org_apache_sling_commons_log_file_numberIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogFileNumberIsSet() const
{
    return m_Org_apache_sling_commons_log_file_numberIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_file_number()
{
    m_Org_apache_sling_commons_log_file_numberIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogFileSize() const
{
    return m_Org_apache_sling_commons_log_file_size;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogFileSize(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_commons_log_file_size = value;
    m_Org_apache_sling_commons_log_file_sizeIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogFileSizeIsSet() const
{
    return m_Org_apache_sling_commons_log_file_sizeIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_file_size()
{
    m_Org_apache_sling_commons_log_file_sizeIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogPattern() const
{
    return m_Org_apache_sling_commons_log_pattern;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogPattern(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_commons_log_pattern = value;
    m_Org_apache_sling_commons_log_patternIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogPatternIsSet() const
{
    return m_Org_apache_sling_commons_log_patternIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_pattern()
{
    m_Org_apache_sling_commons_log_patternIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogConfigurationFile() const
{
    return m_Org_apache_sling_commons_log_configurationFile;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogConfigurationFile(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_commons_log_configurationFile = value;
    m_Org_apache_sling_commons_log_configurationFileIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogConfigurationFileIsSet() const
{
    return m_Org_apache_sling_commons_log_configurationFileIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_configurationFile()
{
    m_Org_apache_sling_commons_log_configurationFileIsSet = false;
}
ConfigNodePropertyBoolean OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogPackagingDataEnabled() const
{
    return m_Org_apache_sling_commons_log_packagingDataEnabled;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogPackagingDataEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Org_apache_sling_commons_log_packagingDataEnabled = value;
    m_Org_apache_sling_commons_log_packagingDataEnabledIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogPackagingDataEnabledIsSet() const
{
    return m_Org_apache_sling_commons_log_packagingDataEnabledIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_packagingDataEnabled()
{
    m_Org_apache_sling_commons_log_packagingDataEnabledIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogMaxCallerDataDepth() const
{
    return m_Org_apache_sling_commons_log_maxCallerDataDepth;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogMaxCallerDataDepth(ConfigNodePropertyInteger const& value)
{
    m_Org_apache_sling_commons_log_maxCallerDataDepth = value;
    m_Org_apache_sling_commons_log_maxCallerDataDepthIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogMaxCallerDataDepthIsSet() const
{
    return m_Org_apache_sling_commons_log_maxCallerDataDepthIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_maxCallerDataDepth()
{
    m_Org_apache_sling_commons_log_maxCallerDataDepthIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogMaxOldFileCountInDump() const
{
    return m_Org_apache_sling_commons_log_maxOldFileCountInDump;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogMaxOldFileCountInDump(ConfigNodePropertyInteger const& value)
{
    m_Org_apache_sling_commons_log_maxOldFileCountInDump = value;
    m_Org_apache_sling_commons_log_maxOldFileCountInDumpIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogMaxOldFileCountInDumpIsSet() const
{
    return m_Org_apache_sling_commons_log_maxOldFileCountInDumpIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_maxOldFileCountInDump()
{
    m_Org_apache_sling_commons_log_maxOldFileCountInDumpIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogNumOfLines() const
{
    return m_Org_apache_sling_commons_log_numOfLines;
}
void OrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogNumOfLines(ConfigNodePropertyInteger const& value)
{
    m_Org_apache_sling_commons_log_numOfLines = value;
    m_Org_apache_sling_commons_log_numOfLinesIsSet = true;
}
bool OrgApacheSlingCommonsLogLogManagerProperties::orgApacheSlingCommonsLogNumOfLinesIsSet() const
{
    return m_Org_apache_sling_commons_log_numOfLinesIsSet;
}
void OrgApacheSlingCommonsLogLogManagerProperties::unsetOrg_apache_sling_commons_log_numOfLines()
{
    m_Org_apache_sling_commons_log_numOfLinesIsSet = false;
}

}
}
}
}

