/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties()
{
    
}

OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::~OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties()
{
}

std::string OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::getHandlerSchemes() const
{
    return m_Handler_schemes;
}
void OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::setHandlerSchemes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Handler_schemes = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::getSlingJcrinstallFolderNameRegexp() const
{
    return m_Sling_jcrinstall_folder_name_regexp;
}
void OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::setSlingJcrinstallFolderNameRegexp(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Sling_jcrinstall_folder_name_regexp = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::getSlingJcrinstallFolderMaxDepth() const
{
    return m_Sling_jcrinstall_folder_max_depth;
}
void OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::setSlingJcrinstallFolderMaxDepth(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Sling_jcrinstall_folder_max_depth = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::getSlingJcrinstallSearchPath() const
{
    return m_Sling_jcrinstall_search_path;
}
void OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::setSlingJcrinstallSearchPath(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Sling_jcrinstall_search_path = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::getSlingJcrinstallNewConfigPath() const
{
    return m_Sling_jcrinstall_new_config_path;
}
void OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::setSlingJcrinstallNewConfigPath(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Sling_jcrinstall_new_config_path = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::getSlingJcrinstallSignalPath() const
{
    return m_Sling_jcrinstall_signal_path;
}
void OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::setSlingJcrinstallSignalPath(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Sling_jcrinstall_signal_path = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::getSlingJcrinstallEnableWriteback() const
{
    return m_Sling_jcrinstall_enable_writeback;
}
void OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties::setSlingJcrinstallEnableWriteback(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Sling_jcrinstall_enable_writeback = value;
}

}
}
}
}

