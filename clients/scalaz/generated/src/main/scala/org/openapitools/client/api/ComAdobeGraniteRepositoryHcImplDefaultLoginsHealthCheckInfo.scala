package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo._

case class ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckProperties])

object ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfoCodecJson: CodecJson[ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo] = CodecJson.derive[ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo]
  implicit val ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfoDecoder: EntityDecoder[ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo] = jsonOf[ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo]
  implicit val ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfoEncoder: EntityEncoder[ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo] = jsonEncoderOf[ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo]
}
