/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties {
  #[serde(rename = "enableScheduledPostsSearch")]
  enable_scheduled_posts_search: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "numberOfMinutes")]
  number_of_minutes: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "maxSearchLimit")]
  max_search_limit: Option<::models::ConfigNodePropertyInteger>
}

impl ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties {
  pub fn new() -> ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties {
    ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties {
      enable_scheduled_posts_search: None,
      number_of_minutes: None,
      max_search_limit: None
    }
  }

  pub fn set_enable_scheduled_posts_search(&mut self, enable_scheduled_posts_search: ::models::ConfigNodePropertyBoolean) {
    self.enable_scheduled_posts_search = Some(enable_scheduled_posts_search);
  }

  pub fn with_enable_scheduled_posts_search(mut self, enable_scheduled_posts_search: ::models::ConfigNodePropertyBoolean) -> ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties {
    self.enable_scheduled_posts_search = Some(enable_scheduled_posts_search);
    self
  }

  pub fn enable_scheduled_posts_search(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.enable_scheduled_posts_search.as_ref()
  }

  pub fn reset_enable_scheduled_posts_search(&mut self) {
    self.enable_scheduled_posts_search = None;
  }

  pub fn set_number_of_minutes(&mut self, number_of_minutes: ::models::ConfigNodePropertyInteger) {
    self.number_of_minutes = Some(number_of_minutes);
  }

  pub fn with_number_of_minutes(mut self, number_of_minutes: ::models::ConfigNodePropertyInteger) -> ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties {
    self.number_of_minutes = Some(number_of_minutes);
    self
  }

  pub fn number_of_minutes(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.number_of_minutes.as_ref()
  }

  pub fn reset_number_of_minutes(&mut self) {
    self.number_of_minutes = None;
  }

  pub fn set_max_search_limit(&mut self, max_search_limit: ::models::ConfigNodePropertyInteger) {
    self.max_search_limit = Some(max_search_limit);
  }

  pub fn with_max_search_limit(mut self, max_search_limit: ::models::ConfigNodePropertyInteger) -> ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosProperties {
    self.max_search_limit = Some(max_search_limit);
    self
  }

  pub fn max_search_limit(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.max_search_limit.as_ref()
  }

  pub fn reset_max_search_limit(&mut self) {
    self.max_search_limit = None;
  }

}



