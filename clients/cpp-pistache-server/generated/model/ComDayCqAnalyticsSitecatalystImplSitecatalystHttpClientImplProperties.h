/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties.h
 *
 * 
 */

#ifndef ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties_H_
#define ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties
    : public ModelBase
{
public:
    ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties();
    virtual ~ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getCqAnalyticsSitecatalystServiceDatacenterUrl() const;
    void setCqAnalyticsSitecatalystServiceDatacenterUrl(ConfigNodePropertyArray const& value);
    bool cqAnalyticsSitecatalystServiceDatacenterUrlIsSet() const;
    void unsetCq_analytics_sitecatalyst_service_datacenter_url();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getDevhostnamepatterns() const;
    void setDevhostnamepatterns(ConfigNodePropertyArray const& value);
    bool devhostnamepatternsIsSet() const;
    void unsetDevhostnamepatterns();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getConnectionTimeout() const;
    void setConnectionTimeout(ConfigNodePropertyInteger const& value);
    bool connectionTimeoutIsSet() const;
    void unsetConnection_timeout();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getSocketTimeout() const;
    void setSocketTimeout(ConfigNodePropertyInteger const& value);
    bool socketTimeoutIsSet() const;
    void unsetSocket_timeout();

protected:
    ConfigNodePropertyArray m_Cq_analytics_sitecatalyst_service_datacenter_url;
    bool m_Cq_analytics_sitecatalyst_service_datacenter_urlIsSet;
    ConfigNodePropertyArray m_Devhostnamepatterns;
    bool m_DevhostnamepatternsIsSet;
    ConfigNodePropertyInteger m_Connection_timeout;
    bool m_Connection_timeoutIsSet;
    ConfigNodePropertyInteger m_Socket_timeout;
    bool m_Socket_timeoutIsSet;
};

}
}
}
}

#endif /* ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties_H_ */
