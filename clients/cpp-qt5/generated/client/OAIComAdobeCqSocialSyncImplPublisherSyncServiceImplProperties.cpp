/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties() {
    init();
}

OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::~OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties() {
    this->cleanup();
}

void
OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::init() {
    active_run_modes = new OAIConfigNodePropertyArray();
    m_active_run_modes_isSet = false;
}

void
OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::cleanup() {
    if(active_run_modes != nullptr) { 
        delete active_run_modes;
    }
}

OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties*
OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&active_run_modes, pJson["activeRunModes"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::asJsonObject() {
    QJsonObject obj;
    if((active_run_modes != nullptr) && (active_run_modes->isSet())){
        toJsonValue(QString("activeRunModes"), active_run_modes, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::getActiveRunModes() {
    return active_run_modes;
}
void
OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::setActiveRunModes(OAIConfigNodePropertyArray* active_run_modes) {
    this->active_run_modes = active_run_modes;
    this->m_active_run_modes_isSet = true;
}


bool
OAIComAdobeCqSocialSyncImplPublisherSyncServiceImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(active_run_modes != nullptr && active_run_modes->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

