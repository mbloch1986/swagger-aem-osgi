/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamScene7ImplScene7UploadServiceImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamScene7ImplScene7UploadServiceImplProperties::ComDayCqDamScene7ImplScene7UploadServiceImplProperties()
{
    m_Cq_dam_scene7_uploadservice_activejobtimeout_labelIsSet = false;
    m_Cq_dam_scene7_uploadservice_connectionmaxperroute_labelIsSet = false;
    
}

ComDayCqDamScene7ImplScene7UploadServiceImplProperties::~ComDayCqDamScene7ImplScene7UploadServiceImplProperties()
{
}

void ComDayCqDamScene7ImplScene7UploadServiceImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamScene7ImplScene7UploadServiceImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cq_dam_scene7_uploadservice_activejobtimeout_labelIsSet)
    {
        val["cq.dam.scene7.uploadservice.activejobtimeout.label"] = ModelBase::toJson(m_Cq_dam_scene7_uploadservice_activejobtimeout_label);
    }
    if(m_Cq_dam_scene7_uploadservice_connectionmaxperroute_labelIsSet)
    {
        val["cq.dam.scene7.uploadservice.connectionmaxperroute.label"] = ModelBase::toJson(m_Cq_dam_scene7_uploadservice_connectionmaxperroute_label);
    }
    

    return val;
}

void ComDayCqDamScene7ImplScene7UploadServiceImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cq.dam.scene7.uploadservice.activejobtimeout.label") != val.end())
    {
        if(!val["cq.dam.scene7.uploadservice.activejobtimeout.label"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.dam.scene7.uploadservice.activejobtimeout.label"]);
            setCqDamScene7UploadserviceActivejobtimeoutLabel( newItem );
        }
        
    }
    if(val.find("cq.dam.scene7.uploadservice.connectionmaxperroute.label") != val.end())
    {
        if(!val["cq.dam.scene7.uploadservice.connectionmaxperroute.label"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.dam.scene7.uploadservice.connectionmaxperroute.label"]);
            setCqDamScene7UploadserviceConnectionmaxperrouteLabel( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComDayCqDamScene7ImplScene7UploadServiceImplProperties::getCqDamScene7UploadserviceActivejobtimeoutLabel() const
{
    return m_Cq_dam_scene7_uploadservice_activejobtimeout_label;
}
void ComDayCqDamScene7ImplScene7UploadServiceImplProperties::setCqDamScene7UploadserviceActivejobtimeoutLabel(ConfigNodePropertyInteger const& value)
{
    m_Cq_dam_scene7_uploadservice_activejobtimeout_label = value;
    m_Cq_dam_scene7_uploadservice_activejobtimeout_labelIsSet = true;
}
bool ComDayCqDamScene7ImplScene7UploadServiceImplProperties::cqDamScene7UploadserviceActivejobtimeoutLabelIsSet() const
{
    return m_Cq_dam_scene7_uploadservice_activejobtimeout_labelIsSet;
}
void ComDayCqDamScene7ImplScene7UploadServiceImplProperties::unsetCq_dam_scene7_uploadservice_activejobtimeout_label()
{
    m_Cq_dam_scene7_uploadservice_activejobtimeout_labelIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamScene7ImplScene7UploadServiceImplProperties::getCqDamScene7UploadserviceConnectionmaxperrouteLabel() const
{
    return m_Cq_dam_scene7_uploadservice_connectionmaxperroute_label;
}
void ComDayCqDamScene7ImplScene7UploadServiceImplProperties::setCqDamScene7UploadserviceConnectionmaxperrouteLabel(ConfigNodePropertyInteger const& value)
{
    m_Cq_dam_scene7_uploadservice_connectionmaxperroute_label = value;
    m_Cq_dam_scene7_uploadservice_connectionmaxperroute_labelIsSet = true;
}
bool ComDayCqDamScene7ImplScene7UploadServiceImplProperties::cqDamScene7UploadserviceConnectionmaxperrouteLabelIsSet() const
{
    return m_Cq_dam_scene7_uploadservice_connectionmaxperroute_labelIsSet;
}
void ComDayCqDamScene7ImplScene7UploadServiceImplProperties::unsetCq_dam_scene7_uploadservice_connectionmaxperroute_label()
{
    m_Cq_dam_scene7_uploadservice_connectionmaxperroute_labelIsSet = false;
}

}
}
}
}

