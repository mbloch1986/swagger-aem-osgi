/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeGraniteCsrfImplCSRFFilterProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ComAdobeGraniteCsrfImplCSRFFilterProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ComAdobeGraniteCsrfImplCSRFFilterProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteCsrfImplCSRFFilterProperties
    : public ModelBase
{
public:
    ComAdobeGraniteCsrfImplCSRFFilterProperties();
    virtual ~ComAdobeGraniteCsrfImplCSRFFilterProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComAdobeGraniteCsrfImplCSRFFilterProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getFilterMethods() const;
    bool filterMethodsIsSet() const;
    void unsetFilter_methods();
    void setFilterMethods(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getFilterEnableSafeUserAgents() const;
    bool filterEnableSafeUserAgentsIsSet() const;
    void unsetFilter_enable_safe_user_agents();
    void setFilterEnableSafeUserAgents(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getFilterSafeUserAgents() const;
    bool filterSafeUserAgentsIsSet() const;
    void unsetFilter_safe_user_agents();
    void setFilterSafeUserAgents(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getFilterExcludedPaths() const;
    bool filterExcludedPathsIsSet() const;
    void unsetFilter_excluded_paths();
    void setFilterExcludedPaths(std::shared_ptr<ConfigNodePropertyArray> value);

protected:
    std::shared_ptr<ConfigNodePropertyArray> m_Filter_methods;
    bool m_Filter_methodsIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Filter_enable_safe_user_agents;
    bool m_Filter_enable_safe_user_agentsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Filter_safe_user_agents;
    bool m_Filter_safe_user_agentsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Filter_excluded_paths;
    bool m_Filter_excluded_pathsIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ComAdobeGraniteCsrfImplCSRFFilterProperties_H_ */
