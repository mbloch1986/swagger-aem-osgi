/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingCommonsMetricsInternalLogReporterProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingCommonsMetricsInternalLogReporterProperties_H_
#define OAIOrgApacheSlingCommonsMetricsInternalLogReporterProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingCommonsMetricsInternalLogReporterProperties: public OAIObject {
public:
    OAIOrgApacheSlingCommonsMetricsInternalLogReporterProperties();
    OAIOrgApacheSlingCommonsMetricsInternalLogReporterProperties(QString json);
    ~OAIOrgApacheSlingCommonsMetricsInternalLogReporterProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIOrgApacheSlingCommonsMetricsInternalLogReporterProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyInteger* getPeriod();
    void setPeriod(OAIConfigNodePropertyInteger* period);

    OAIConfigNodePropertyDropDown* getTimeUnit();
    void setTimeUnit(OAIConfigNodePropertyDropDown* time_unit);

    OAIConfigNodePropertyDropDown* getLevel();
    void setLevel(OAIConfigNodePropertyDropDown* level);

    OAIConfigNodePropertyString* getLoggerName();
    void setLoggerName(OAIConfigNodePropertyString* logger_name);

    OAIConfigNodePropertyString* getPrefix();
    void setPrefix(OAIConfigNodePropertyString* prefix);

    OAIConfigNodePropertyString* getPattern();
    void setPattern(OAIConfigNodePropertyString* pattern);

    OAIConfigNodePropertyString* getRegistryName();
    void setRegistryName(OAIConfigNodePropertyString* registry_name);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyInteger* period;
    bool m_period_isSet;

    OAIConfigNodePropertyDropDown* time_unit;
    bool m_time_unit_isSet;

    OAIConfigNodePropertyDropDown* level;
    bool m_level_isSet;

    OAIConfigNodePropertyString* logger_name;
    bool m_logger_name_isSet;

    OAIConfigNodePropertyString* prefix;
    bool m_prefix_isSet;

    OAIConfigNodePropertyString* pattern;
    bool m_pattern_isSet;

    OAIConfigNodePropertyString* registry_name;
    bool m_registry_name_isSet;

};

}

#endif /* OAIOrgApacheSlingCommonsMetricsInternalLogReporterProperties_H_ */
