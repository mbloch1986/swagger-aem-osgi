/*
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties : IEquatable<ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties>
    { 
        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerImageresourcetypes
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.imageresourcetypes")]
        public ConfigNodePropertyArray CqPagesupdatehandlerImageresourcetypes { get; set; }

        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerProductresourcetypes
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.productresourcetypes")]
        public ConfigNodePropertyArray CqPagesupdatehandlerProductresourcetypes { get; set; }

        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerVideoresourcetypes
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.videoresourcetypes")]
        public ConfigNodePropertyArray CqPagesupdatehandlerVideoresourcetypes { get; set; }

        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerDynamicsequenceresourcetypes
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.dynamicsequenceresourcetypes")]
        public ConfigNodePropertyArray CqPagesupdatehandlerDynamicsequenceresourcetypes { get; set; }

        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerPreviewmodepaths
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.previewmodepaths")]
        public ConfigNodePropertyArray CqPagesupdatehandlerPreviewmodepaths { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties {\n");
            sb.Append("  CqPagesupdatehandlerImageresourcetypes: ").Append(CqPagesupdatehandlerImageresourcetypes).Append("\n");
            sb.Append("  CqPagesupdatehandlerProductresourcetypes: ").Append(CqPagesupdatehandlerProductresourcetypes).Append("\n");
            sb.Append("  CqPagesupdatehandlerVideoresourcetypes: ").Append(CqPagesupdatehandlerVideoresourcetypes).Append("\n");
            sb.Append("  CqPagesupdatehandlerDynamicsequenceresourcetypes: ").Append(CqPagesupdatehandlerDynamicsequenceresourcetypes).Append("\n");
            sb.Append("  CqPagesupdatehandlerPreviewmodepaths: ").Append(CqPagesupdatehandlerPreviewmodepaths).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties)obj);
        }

        /// <summary>
        /// Returns true if ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CqPagesupdatehandlerImageresourcetypes == other.CqPagesupdatehandlerImageresourcetypes ||
                    CqPagesupdatehandlerImageresourcetypes != null &&
                    CqPagesupdatehandlerImageresourcetypes.Equals(other.CqPagesupdatehandlerImageresourcetypes)
                ) && 
                (
                    CqPagesupdatehandlerProductresourcetypes == other.CqPagesupdatehandlerProductresourcetypes ||
                    CqPagesupdatehandlerProductresourcetypes != null &&
                    CqPagesupdatehandlerProductresourcetypes.Equals(other.CqPagesupdatehandlerProductresourcetypes)
                ) && 
                (
                    CqPagesupdatehandlerVideoresourcetypes == other.CqPagesupdatehandlerVideoresourcetypes ||
                    CqPagesupdatehandlerVideoresourcetypes != null &&
                    CqPagesupdatehandlerVideoresourcetypes.Equals(other.CqPagesupdatehandlerVideoresourcetypes)
                ) && 
                (
                    CqPagesupdatehandlerDynamicsequenceresourcetypes == other.CqPagesupdatehandlerDynamicsequenceresourcetypes ||
                    CqPagesupdatehandlerDynamicsequenceresourcetypes != null &&
                    CqPagesupdatehandlerDynamicsequenceresourcetypes.Equals(other.CqPagesupdatehandlerDynamicsequenceresourcetypes)
                ) && 
                (
                    CqPagesupdatehandlerPreviewmodepaths == other.CqPagesupdatehandlerPreviewmodepaths ||
                    CqPagesupdatehandlerPreviewmodepaths != null &&
                    CqPagesupdatehandlerPreviewmodepaths.Equals(other.CqPagesupdatehandlerPreviewmodepaths)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (CqPagesupdatehandlerImageresourcetypes != null)
                    hashCode = hashCode * 59 + CqPagesupdatehandlerImageresourcetypes.GetHashCode();
                    if (CqPagesupdatehandlerProductresourcetypes != null)
                    hashCode = hashCode * 59 + CqPagesupdatehandlerProductresourcetypes.GetHashCode();
                    if (CqPagesupdatehandlerVideoresourcetypes != null)
                    hashCode = hashCode * 59 + CqPagesupdatehandlerVideoresourcetypes.GetHashCode();
                    if (CqPagesupdatehandlerDynamicsequenceresourcetypes != null)
                    hashCode = hashCode * 59 + CqPagesupdatehandlerDynamicsequenceresourcetypes.GetHashCode();
                    if (CqPagesupdatehandlerPreviewmodepaths != null)
                    hashCode = hashCode * 59 + CqPagesupdatehandlerPreviewmodepaths.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties left, ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties left, ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
