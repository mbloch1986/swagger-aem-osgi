/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties() {
    init();
}

OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::~OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties() {
    this->cleanup();
}

void
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::init() {
    path_builder_target = new OAIConfigNodePropertyString();
    m_path_builder_target_isSet = false;
    suggest_basepath = new OAIConfigNodePropertyString();
    m_suggest_basepath_isSet = false;
}

void
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::cleanup() {
    if(path_builder_target != nullptr) { 
        delete path_builder_target;
    }
    if(suggest_basepath != nullptr) { 
        delete suggest_basepath;
    }
}

OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties*
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&path_builder_target, pJson["pathBuilder.target"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&suggest_basepath, pJson["suggest.basepath"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::asJsonObject() {
    QJsonObject obj;
    if((path_builder_target != nullptr) && (path_builder_target->isSet())){
        toJsonValue(QString("pathBuilder.target"), path_builder_target, obj, QString("OAIConfigNodePropertyString"));
    }
    if((suggest_basepath != nullptr) && (suggest_basepath->isSet())){
        toJsonValue(QString("suggest.basepath"), suggest_basepath, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::getPathBuilderTarget() {
    return path_builder_target;
}
void
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::setPathBuilderTarget(OAIConfigNodePropertyString* path_builder_target) {
    this->path_builder_target = path_builder_target;
    this->m_path_builder_target_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::getSuggestBasepath() {
    return suggest_basepath;
}
void
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::setSuggestBasepath(OAIConfigNodePropertyString* suggest_basepath) {
    this->suggest_basepath = suggest_basepath;
    this->m_suggest_basepath_isSet = true;
}


bool
OAIComDayCqSearchSuggestImplSuggestionIndexManagerImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(path_builder_target != nullptr && path_builder_target->isSet()){ isObjectUpdated = true; break;}
        if(suggest_basepath != nullptr && suggest_basepath->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

