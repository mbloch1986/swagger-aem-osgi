/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties() {
    this->init();
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::~OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties() {
    
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::init() {
    m_principal_names_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(principal_names, json[QString("principalNames")]);
    
}

QString
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::asJsonObject() const {
    QJsonObject obj;
	if(principal_names.isSet()){
        obj.insert(QString("principalNames"), ::OpenAPI::toJsonValue(principal_names));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::getPrincipalNames() const {
    return principal_names;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::setPrincipalNames(const OAIConfigNodePropertyArray &principal_names) {
    this->principal_names = principal_names;
    this->m_principal_names_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(principal_names.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

