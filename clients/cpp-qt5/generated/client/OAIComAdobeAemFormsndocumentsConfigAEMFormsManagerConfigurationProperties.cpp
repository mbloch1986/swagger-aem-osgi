/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties() {
    init();
}

OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::~OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties() {
    this->cleanup();
}

void
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::init() {
    forms_manager_config_include_ootb_templates = new OAIConfigNodePropertyBoolean();
    m_forms_manager_config_include_ootb_templates_isSet = false;
    forms_manager_config_include_deprecated_templates = new OAIConfigNodePropertyBoolean();
    m_forms_manager_config_include_deprecated_templates_isSet = false;
}

void
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::cleanup() {
    if(forms_manager_config_include_ootb_templates != nullptr) { 
        delete forms_manager_config_include_ootb_templates;
    }
    if(forms_manager_config_include_deprecated_templates != nullptr) { 
        delete forms_manager_config_include_deprecated_templates;
    }
}

OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties*
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&forms_manager_config_include_ootb_templates, pJson["formsManagerConfig.includeOOTBTemplates"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&forms_manager_config_include_deprecated_templates, pJson["formsManagerConfig.includeDeprecatedTemplates"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::asJsonObject() {
    QJsonObject obj;
    if((forms_manager_config_include_ootb_templates != nullptr) && (forms_manager_config_include_ootb_templates->isSet())){
        toJsonValue(QString("formsManagerConfig.includeOOTBTemplates"), forms_manager_config_include_ootb_templates, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((forms_manager_config_include_deprecated_templates != nullptr) && (forms_manager_config_include_deprecated_templates->isSet())){
        toJsonValue(QString("formsManagerConfig.includeDeprecatedTemplates"), forms_manager_config_include_deprecated_templates, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::getFormsManagerConfigIncludeOotbTemplates() {
    return forms_manager_config_include_ootb_templates;
}
void
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::setFormsManagerConfigIncludeOotbTemplates(OAIConfigNodePropertyBoolean* forms_manager_config_include_ootb_templates) {
    this->forms_manager_config_include_ootb_templates = forms_manager_config_include_ootb_templates;
    this->m_forms_manager_config_include_ootb_templates_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::getFormsManagerConfigIncludeDeprecatedTemplates() {
    return forms_manager_config_include_deprecated_templates;
}
void
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::setFormsManagerConfigIncludeDeprecatedTemplates(OAIConfigNodePropertyBoolean* forms_manager_config_include_deprecated_templates) {
    this->forms_manager_config_include_deprecated_templates = forms_manager_config_include_deprecated_templates;
    this->m_forms_manager_config_include_deprecated_templates_isSet = true;
}


bool
OAIComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(forms_manager_config_include_ootb_templates != nullptr && forms_manager_config_include_ootb_templates->isSet()){ isObjectUpdated = true; break;}
        if(forms_manager_config_include_deprecated_templates != nullptr && forms_manager_config_include_deprecated_templates->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

