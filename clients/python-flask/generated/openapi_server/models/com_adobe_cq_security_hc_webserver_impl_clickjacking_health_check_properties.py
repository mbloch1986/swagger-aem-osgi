# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hc_tags: ConfigNodePropertyArray=None, webserver_address: ConfigNodePropertyString=None):  # noqa: E501
        """ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties - a model defined in OpenAPI

        :param hc_tags: The hc_tags of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.  # noqa: E501
        :type hc_tags: ConfigNodePropertyArray
        :param webserver_address: The webserver_address of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.  # noqa: E501
        :type webserver_address: ConfigNodePropertyString
        """
        self.openapi_types = {
            'hc_tags': ConfigNodePropertyArray,
            'webserver_address': ConfigNodePropertyString
        }

        self.attribute_map = {
            'hc_tags': 'hc.tags',
            'webserver_address': 'webserver.address'
        }

        self._hc_tags = hc_tags
        self._webserver_address = webserver_address

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.  # noqa: E501
        :rtype: ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hc_tags(self) -> ConfigNodePropertyArray:
        """Gets the hc_tags of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.


        :return: The hc_tags of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._hc_tags

    @hc_tags.setter
    def hc_tags(self, hc_tags: ConfigNodePropertyArray):
        """Sets the hc_tags of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.


        :param hc_tags: The hc_tags of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.
        :type hc_tags: ConfigNodePropertyArray
        """

        self._hc_tags = hc_tags

    @property
    def webserver_address(self) -> ConfigNodePropertyString:
        """Gets the webserver_address of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.


        :return: The webserver_address of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._webserver_address

    @webserver_address.setter
    def webserver_address(self, webserver_address: ConfigNodePropertyString):
        """Sets the webserver_address of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.


        :param webserver_address: The webserver_address of this ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties.
        :type webserver_address: ConfigNodePropertyString
        """

        self._webserver_address = webserver_address
