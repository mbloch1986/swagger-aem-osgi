note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CRX_SECURITY_TOKEN_IMPL_TOKEN_CLEANUP_TASK_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    enable_token_cleanup_task: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    scheduler_expression: detachable CONFIG_NODE_PROPERTY_STRING 
      
    batch_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_enable_token_cleanup_task (a_name: like enable_token_cleanup_task)
        -- Set 'enable_token_cleanup_task' with 'a_name'.
      do
        enable_token_cleanup_task := a_name
      ensure
        enable_token_cleanup_task_set: enable_token_cleanup_task = a_name		
      end

    set_scheduler_expression (a_name: like scheduler_expression)
        -- Set 'scheduler_expression' with 'a_name'.
      do
        scheduler_expression := a_name
      ensure
        scheduler_expression_set: scheduler_expression = a_name		
      end

    set_batch_size (a_name: like batch_size)
        -- Set 'batch_size' with 'a_name'.
      do
        batch_size := a_name
      ensure
        batch_size_set: batch_size = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CRX_SECURITY_TOKEN_IMPL_TOKEN_CLEANUP_TASK_PROPERTIES%N")
        if attached enable_token_cleanup_task as l_enable_token_cleanup_task then
          Result.append ("%Nenable_token_cleanup_task:")
          Result.append (l_enable_token_cleanup_task.out)
          Result.append ("%N")    
        end  
        if attached scheduler_expression as l_scheduler_expression then
          Result.append ("%Nscheduler_expression:")
          Result.append (l_scheduler_expression.out)
          Result.append ("%N")    
        end  
        if attached batch_size as l_batch_size then
          Result.append ("%Nbatch_size:")
          Result.append (l_batch_size.out)
          Result.append ("%N")    
        end  
      end
end


