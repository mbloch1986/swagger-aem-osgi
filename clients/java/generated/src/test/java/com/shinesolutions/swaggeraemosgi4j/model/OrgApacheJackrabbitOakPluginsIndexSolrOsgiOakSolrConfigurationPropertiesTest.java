/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyDropDown;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties
 */
public class OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationPropertiesTest {
    private final OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties model = new OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties();

    /**
     * Model tests for OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties
     */
    @Test
    public void testOrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties() {
        // TODO: test OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties
    }

    /**
     * Test the property 'pathDescField'
     */
    @Test
    public void pathDescFieldTest() {
        // TODO: test pathDescField
    }

    /**
     * Test the property 'pathChildField'
     */
    @Test
    public void pathChildFieldTest() {
        // TODO: test pathChildField
    }

    /**
     * Test the property 'pathParentField'
     */
    @Test
    public void pathParentFieldTest() {
        // TODO: test pathParentField
    }

    /**
     * Test the property 'pathExactField'
     */
    @Test
    public void pathExactFieldTest() {
        // TODO: test pathExactField
    }

    /**
     * Test the property 'catchAllField'
     */
    @Test
    public void catchAllFieldTest() {
        // TODO: test catchAllField
    }

    /**
     * Test the property 'collapsedPathField'
     */
    @Test
    public void collapsedPathFieldTest() {
        // TODO: test collapsedPathField
    }

    /**
     * Test the property 'pathDepthField'
     */
    @Test
    public void pathDepthFieldTest() {
        // TODO: test pathDepthField
    }

    /**
     * Test the property 'commitPolicy'
     */
    @Test
    public void commitPolicyTest() {
        // TODO: test commitPolicy
    }

    /**
     * Test the property 'rows'
     */
    @Test
    public void rowsTest() {
        // TODO: test rows
    }

    /**
     * Test the property 'pathRestrictions'
     */
    @Test
    public void pathRestrictionsTest() {
        // TODO: test pathRestrictions
    }

    /**
     * Test the property 'propertyRestrictions'
     */
    @Test
    public void propertyRestrictionsTest() {
        // TODO: test propertyRestrictions
    }

    /**
     * Test the property 'primarytypesRestrictions'
     */
    @Test
    public void primarytypesRestrictionsTest() {
        // TODO: test primarytypesRestrictions
    }

    /**
     * Test the property 'ignoredProperties'
     */
    @Test
    public void ignoredPropertiesTest() {
        // TODO: test ignoredProperties
    }

    /**
     * Test the property 'usedProperties'
     */
    @Test
    public void usedPropertiesTest() {
        // TODO: test usedProperties
    }

    /**
     * Test the property 'typeMappings'
     */
    @Test
    public void typeMappingsTest() {
        // TODO: test typeMappings
    }

    /**
     * Test the property 'propertyMappings'
     */
    @Test
    public void propertyMappingsTest() {
        // TODO: test propertyMappings
    }

    /**
     * Test the property 'collapseJcrcontentNodes'
     */
    @Test
    public void collapseJcrcontentNodesTest() {
        // TODO: test collapseJcrcontentNodes
    }

}
