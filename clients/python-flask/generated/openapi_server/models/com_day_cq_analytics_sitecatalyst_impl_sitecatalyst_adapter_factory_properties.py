# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server import util


class ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cq_analytics_adapterfactory_contextstores: ConfigNodePropertyArray=None):  # noqa: E501
        """ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties - a model defined in OpenAPI

        :param cq_analytics_adapterfactory_contextstores: The cq_analytics_adapterfactory_contextstores of this ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties.  # noqa: E501
        :type cq_analytics_adapterfactory_contextstores: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'cq_analytics_adapterfactory_contextstores': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'cq_analytics_adapterfactory_contextstores': 'cq.analytics.adapterfactory.contextstores'
        }

        self._cq_analytics_adapterfactory_contextstores = cq_analytics_adapterfactory_contextstores

    @classmethod
    def from_dict(cls, dikt) -> 'ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties of this ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties.  # noqa: E501
        :rtype: ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cq_analytics_adapterfactory_contextstores(self) -> ConfigNodePropertyArray:
        """Gets the cq_analytics_adapterfactory_contextstores of this ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties.


        :return: The cq_analytics_adapterfactory_contextstores of this ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._cq_analytics_adapterfactory_contextstores

    @cq_analytics_adapterfactory_contextstores.setter
    def cq_analytics_adapterfactory_contextstores(self, cq_analytics_adapterfactory_contextstores: ConfigNodePropertyArray):
        """Sets the cq_analytics_adapterfactory_contextstores of this ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties.


        :param cq_analytics_adapterfactory_contextstores: The cq_analytics_adapterfactory_contextstores of this ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties.
        :type cq_analytics_adapterfactory_contextstores: ConfigNodePropertyArray
        """

        self._cq_analytics_adapterfactory_contextstores = cq_analytics_adapterfactory_contextstores
