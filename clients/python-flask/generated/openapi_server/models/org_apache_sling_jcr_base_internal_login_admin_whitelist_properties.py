# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, whitelist_bypass: ConfigNodePropertyBoolean=None, whitelist_bundles_regexp: ConfigNodePropertyString=None):  # noqa: E501
        """OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties - a model defined in OpenAPI

        :param whitelist_bypass: The whitelist_bypass of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.  # noqa: E501
        :type whitelist_bypass: ConfigNodePropertyBoolean
        :param whitelist_bundles_regexp: The whitelist_bundles_regexp of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.  # noqa: E501
        :type whitelist_bundles_regexp: ConfigNodePropertyString
        """
        self.openapi_types = {
            'whitelist_bypass': ConfigNodePropertyBoolean,
            'whitelist_bundles_regexp': ConfigNodePropertyString
        }

        self.attribute_map = {
            'whitelist_bypass': 'whitelist.bypass',
            'whitelist_bundles_regexp': 'whitelist.bundles.regexp'
        }

        self._whitelist_bypass = whitelist_bypass
        self._whitelist_bundles_regexp = whitelist_bundles_regexp

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.  # noqa: E501
        :rtype: OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def whitelist_bypass(self) -> ConfigNodePropertyBoolean:
        """Gets the whitelist_bypass of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.


        :return: The whitelist_bypass of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._whitelist_bypass

    @whitelist_bypass.setter
    def whitelist_bypass(self, whitelist_bypass: ConfigNodePropertyBoolean):
        """Sets the whitelist_bypass of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.


        :param whitelist_bypass: The whitelist_bypass of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.
        :type whitelist_bypass: ConfigNodePropertyBoolean
        """

        self._whitelist_bypass = whitelist_bypass

    @property
    def whitelist_bundles_regexp(self) -> ConfigNodePropertyString:
        """Gets the whitelist_bundles_regexp of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.


        :return: The whitelist_bundles_regexp of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._whitelist_bundles_regexp

    @whitelist_bundles_regexp.setter
    def whitelist_bundles_regexp(self, whitelist_bundles_regexp: ConfigNodePropertyString):
        """Sets the whitelist_bundles_regexp of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.


        :param whitelist_bundles_regexp: The whitelist_bundles_regexp of this OrgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties.
        :type whitelist_bundles_regexp: ConfigNodePropertyString
        """

        self._whitelist_bundles_regexp = whitelist_bundles_regexp
