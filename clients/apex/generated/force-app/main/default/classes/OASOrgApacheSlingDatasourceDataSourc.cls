/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASOrgApacheSlingDatasourceDataSourc
 */
public class OASOrgApacheSlingDatasourceDataSourc implements OAS.MappedProperties {
    /**
     * Get datasourceName
     * @return datasourceName
     */
    public OASConfigNodePropertyString datasourceName { get; set; }

    /**
     * Get datasourceSvcPropName
     * @return datasourceSvcPropName
     */
    public OASConfigNodePropertyString datasourceSvcPropName { get; set; }

    /**
     * Get driverClassName
     * @return driverClassName
     */
    public OASConfigNodePropertyString driverClassName { get; set; }

    /**
     * Get url
     * @return url
     */
    public OASConfigNodePropertyString url { get; set; }

    /**
     * Get username
     * @return username
     */
    public OASConfigNodePropertyString username { get; set; }

    /**
     * Get password
     * @return password
     */
    public OASConfigNodePropertyString password { get; set; }

    /**
     * Get defaultAutoCommit
     * @return defaultAutoCommit
     */
    public OASConfigNodePropertyDropDown defaultAutoCommit { get; set; }

    /**
     * Get defaultReadOnly
     * @return defaultReadOnly
     */
    public OASConfigNodePropertyDropDown defaultReadOnly { get; set; }

    /**
     * Get defaultTransactionIsolation
     * @return defaultTransactionIsolation
     */
    public OASConfigNodePropertyDropDown defaultTransactionIsolation { get; set; }

    /**
     * Get defaultCatalog
     * @return defaultCatalog
     */
    public OASConfigNodePropertyString defaultCatalog { get; set; }

    /**
     * Get maxActive
     * @return maxActive
     */
    public OASConfigNodePropertyInteger maxActive { get; set; }

    /**
     * Get maxIdle
     * @return maxIdle
     */
    public OASConfigNodePropertyInteger maxIdle { get; set; }

    /**
     * Get minIdle
     * @return minIdle
     */
    public OASConfigNodePropertyInteger minIdle { get; set; }

    /**
     * Get initialSize
     * @return initialSize
     */
    public OASConfigNodePropertyInteger initialSize { get; set; }

    /**
     * Get maxWait
     * @return maxWait
     */
    public OASConfigNodePropertyInteger maxWait { get; set; }

    /**
     * Get maxAge
     * @return maxAge
     */
    public OASConfigNodePropertyInteger maxAge { get; set; }

    /**
     * Get testOnBorrow
     * @return testOnBorrow
     */
    public OASConfigNodePropertyBoolean testOnBorrow { get; set; }

    /**
     * Get testOnReturn
     * @return testOnReturn
     */
    public OASConfigNodePropertyBoolean testOnReturn { get; set; }

    /**
     * Get testWhileIdle
     * @return testWhileIdle
     */
    public OASConfigNodePropertyBoolean testWhileIdle { get; set; }

    /**
     * Get validationQuery
     * @return validationQuery
     */
    public OASConfigNodePropertyString validationQuery { get; set; }

    /**
     * Get validationQueryTimeout
     * @return validationQueryTimeout
     */
    public OASConfigNodePropertyInteger validationQueryTimeout { get; set; }

    /**
     * Get timeBetweenEvictionRunsMillis
     * @return timeBetweenEvictionRunsMillis
     */
    public OASConfigNodePropertyInteger timeBetweenEvictionRunsMillis { get; set; }

    /**
     * Get minEvictableIdleTimeMillis
     * @return minEvictableIdleTimeMillis
     */
    public OASConfigNodePropertyInteger minEvictableIdleTimeMillis { get; set; }

    /**
     * Get connectionProperties
     * @return connectionProperties
     */
    public OASConfigNodePropertyString connectionProperties { get; set; }

    /**
     * Get initSQL
     * @return initSQL
     */
    public OASConfigNodePropertyString initSQL { get; set; }

    /**
     * Get jdbcInterceptors
     * @return jdbcInterceptors
     */
    public OASConfigNodePropertyString jdbcInterceptors { get; set; }

    /**
     * Get validationInterval
     * @return validationInterval
     */
    public OASConfigNodePropertyInteger validationInterval { get; set; }

    /**
     * Get logValidationErrors
     * @return logValidationErrors
     */
    public OASConfigNodePropertyBoolean logValidationErrors { get; set; }

    /**
     * Get datasourceSvcProperties
     * @return datasourceSvcProperties
     */
    public OASConfigNodePropertyArray datasourceSvcProperties { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'datasource.name' => 'datasourceName',
        'datasource.svc.prop.name' => 'datasourceSvcPropName',
        'datasource.svc.properties' => 'datasourceSvcProperties'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrgApacheSlingDatasourceDataSourc getExample() {
        OASOrgApacheSlingDatasourceDataSourc orgApacheSlingDatasourceDataSourceFactoryProperties = new OASOrgApacheSlingDatasourceDataSourc();
          orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceName = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceSvcPropName = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.driverClassName = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.url = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.username = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.password = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.defaultAutoCommit = OASConfigNodePropertyDropDown.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.defaultReadOnly = OASConfigNodePropertyDropDown.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.defaultTransactionIsolation = OASConfigNodePropertyDropDown.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.defaultCatalog = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.maxActive = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.maxIdle = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.minIdle = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.initialSize = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.maxWait = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.maxAge = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.testOnBorrow = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.testOnReturn = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.testWhileIdle = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.validationQuery = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.validationQueryTimeout = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.timeBetweenEvictionRunsMillis = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.minEvictableIdleTimeMillis = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.connectionProperties = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.initSQL = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.jdbcInterceptors = OASConfigNodePropertyString.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.validationInterval = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.logValidationErrors = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceSvcProperties = OASConfigNodePropertyArray.getExample();
        return orgApacheSlingDatasourceDataSourceFactoryProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgApacheSlingDatasourceDataSourc) {           
            OASOrgApacheSlingDatasourceDataSourc orgApacheSlingDatasourceDataSourceFactoryProperties = (OASOrgApacheSlingDatasourceDataSourc) obj;
            return this.datasourceName == orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceName
                && this.datasourceSvcPropName == orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceSvcPropName
                && this.driverClassName == orgApacheSlingDatasourceDataSourceFactoryProperties.driverClassName
                && this.url == orgApacheSlingDatasourceDataSourceFactoryProperties.url
                && this.username == orgApacheSlingDatasourceDataSourceFactoryProperties.username
                && this.password == orgApacheSlingDatasourceDataSourceFactoryProperties.password
                && this.defaultAutoCommit == orgApacheSlingDatasourceDataSourceFactoryProperties.defaultAutoCommit
                && this.defaultReadOnly == orgApacheSlingDatasourceDataSourceFactoryProperties.defaultReadOnly
                && this.defaultTransactionIsolation == orgApacheSlingDatasourceDataSourceFactoryProperties.defaultTransactionIsolation
                && this.defaultCatalog == orgApacheSlingDatasourceDataSourceFactoryProperties.defaultCatalog
                && this.maxActive == orgApacheSlingDatasourceDataSourceFactoryProperties.maxActive
                && this.maxIdle == orgApacheSlingDatasourceDataSourceFactoryProperties.maxIdle
                && this.minIdle == orgApacheSlingDatasourceDataSourceFactoryProperties.minIdle
                && this.initialSize == orgApacheSlingDatasourceDataSourceFactoryProperties.initialSize
                && this.maxWait == orgApacheSlingDatasourceDataSourceFactoryProperties.maxWait
                && this.maxAge == orgApacheSlingDatasourceDataSourceFactoryProperties.maxAge
                && this.testOnBorrow == orgApacheSlingDatasourceDataSourceFactoryProperties.testOnBorrow
                && this.testOnReturn == orgApacheSlingDatasourceDataSourceFactoryProperties.testOnReturn
                && this.testWhileIdle == orgApacheSlingDatasourceDataSourceFactoryProperties.testWhileIdle
                && this.validationQuery == orgApacheSlingDatasourceDataSourceFactoryProperties.validationQuery
                && this.validationQueryTimeout == orgApacheSlingDatasourceDataSourceFactoryProperties.validationQueryTimeout
                && this.timeBetweenEvictionRunsMillis == orgApacheSlingDatasourceDataSourceFactoryProperties.timeBetweenEvictionRunsMillis
                && this.minEvictableIdleTimeMillis == orgApacheSlingDatasourceDataSourceFactoryProperties.minEvictableIdleTimeMillis
                && this.connectionProperties == orgApacheSlingDatasourceDataSourceFactoryProperties.connectionProperties
                && this.initSQL == orgApacheSlingDatasourceDataSourceFactoryProperties.initSQL
                && this.jdbcInterceptors == orgApacheSlingDatasourceDataSourceFactoryProperties.jdbcInterceptors
                && this.validationInterval == orgApacheSlingDatasourceDataSourceFactoryProperties.validationInterval
                && this.logValidationErrors == orgApacheSlingDatasourceDataSourceFactoryProperties.logValidationErrors
                && this.datasourceSvcProperties == orgApacheSlingDatasourceDataSourceFactoryProperties.datasourceSvcProperties;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (datasourceName == null ? 0 : System.hashCode(datasourceName));
        hashCode = (17 * hashCode) + (datasourceSvcPropName == null ? 0 : System.hashCode(datasourceSvcPropName));
        hashCode = (17 * hashCode) + (driverClassName == null ? 0 : System.hashCode(driverClassName));
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (username == null ? 0 : System.hashCode(username));
        hashCode = (17 * hashCode) + (password == null ? 0 : System.hashCode(password));
        hashCode = (17 * hashCode) + (defaultAutoCommit == null ? 0 : System.hashCode(defaultAutoCommit));
        hashCode = (17 * hashCode) + (defaultReadOnly == null ? 0 : System.hashCode(defaultReadOnly));
        hashCode = (17 * hashCode) + (defaultTransactionIsolation == null ? 0 : System.hashCode(defaultTransactionIsolation));
        hashCode = (17 * hashCode) + (defaultCatalog == null ? 0 : System.hashCode(defaultCatalog));
        hashCode = (17 * hashCode) + (maxActive == null ? 0 : System.hashCode(maxActive));
        hashCode = (17 * hashCode) + (maxIdle == null ? 0 : System.hashCode(maxIdle));
        hashCode = (17 * hashCode) + (minIdle == null ? 0 : System.hashCode(minIdle));
        hashCode = (17 * hashCode) + (initialSize == null ? 0 : System.hashCode(initialSize));
        hashCode = (17 * hashCode) + (maxWait == null ? 0 : System.hashCode(maxWait));
        hashCode = (17 * hashCode) + (maxAge == null ? 0 : System.hashCode(maxAge));
        hashCode = (17 * hashCode) + (testOnBorrow == null ? 0 : System.hashCode(testOnBorrow));
        hashCode = (17 * hashCode) + (testOnReturn == null ? 0 : System.hashCode(testOnReturn));
        hashCode = (17 * hashCode) + (testWhileIdle == null ? 0 : System.hashCode(testWhileIdle));
        hashCode = (17 * hashCode) + (validationQuery == null ? 0 : System.hashCode(validationQuery));
        hashCode = (17 * hashCode) + (validationQueryTimeout == null ? 0 : System.hashCode(validationQueryTimeout));
        hashCode = (17 * hashCode) + (timeBetweenEvictionRunsMillis == null ? 0 : System.hashCode(timeBetweenEvictionRunsMillis));
        hashCode = (17 * hashCode) + (minEvictableIdleTimeMillis == null ? 0 : System.hashCode(minEvictableIdleTimeMillis));
        hashCode = (17 * hashCode) + (connectionProperties == null ? 0 : System.hashCode(connectionProperties));
        hashCode = (17 * hashCode) + (initSQL == null ? 0 : System.hashCode(initSQL));
        hashCode = (17 * hashCode) + (jdbcInterceptors == null ? 0 : System.hashCode(jdbcInterceptors));
        hashCode = (17 * hashCode) + (validationInterval == null ? 0 : System.hashCode(validationInterval));
        hashCode = (17 * hashCode) + (logValidationErrors == null ? 0 : System.hashCode(logValidationErrors));
        hashCode = (17 * hashCode) + (datasourceSvcProperties == null ? 0 : System.hashCode(datasourceSvcProperties));
        return hashCode;
    }
}

