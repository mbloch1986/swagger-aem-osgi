# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, watchwords_positive: ConfigNodePropertyArray=None, watchwords_negative: ConfigNodePropertyArray=None, watchwords_path: ConfigNodePropertyString=None, sentiment_path: ConfigNodePropertyString=None):  # noqa: E501
        """ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties - a model defined in OpenAPI

        :param watchwords_positive: The watchwords_positive of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.  # noqa: E501
        :type watchwords_positive: ConfigNodePropertyArray
        :param watchwords_negative: The watchwords_negative of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.  # noqa: E501
        :type watchwords_negative: ConfigNodePropertyArray
        :param watchwords_path: The watchwords_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.  # noqa: E501
        :type watchwords_path: ConfigNodePropertyString
        :param sentiment_path: The sentiment_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.  # noqa: E501
        :type sentiment_path: ConfigNodePropertyString
        """
        self.openapi_types = {
            'watchwords_positive': ConfigNodePropertyArray,
            'watchwords_negative': ConfigNodePropertyArray,
            'watchwords_path': ConfigNodePropertyString,
            'sentiment_path': ConfigNodePropertyString
        }

        self.attribute_map = {
            'watchwords_positive': 'watchwords.positive',
            'watchwords_negative': 'watchwords.negative',
            'watchwords_path': 'watchwords.path',
            'sentiment_path': 'sentiment.path'
        }

        self._watchwords_positive = watchwords_positive
        self._watchwords_negative = watchwords_negative
        self._watchwords_path = watchwords_path
        self._sentiment_path = sentiment_path

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.  # noqa: E501
        :rtype: ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def watchwords_positive(self) -> ConfigNodePropertyArray:
        """Gets the watchwords_positive of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.


        :return: The watchwords_positive of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._watchwords_positive

    @watchwords_positive.setter
    def watchwords_positive(self, watchwords_positive: ConfigNodePropertyArray):
        """Sets the watchwords_positive of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.


        :param watchwords_positive: The watchwords_positive of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.
        :type watchwords_positive: ConfigNodePropertyArray
        """

        self._watchwords_positive = watchwords_positive

    @property
    def watchwords_negative(self) -> ConfigNodePropertyArray:
        """Gets the watchwords_negative of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.


        :return: The watchwords_negative of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._watchwords_negative

    @watchwords_negative.setter
    def watchwords_negative(self, watchwords_negative: ConfigNodePropertyArray):
        """Sets the watchwords_negative of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.


        :param watchwords_negative: The watchwords_negative of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.
        :type watchwords_negative: ConfigNodePropertyArray
        """

        self._watchwords_negative = watchwords_negative

    @property
    def watchwords_path(self) -> ConfigNodePropertyString:
        """Gets the watchwords_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.


        :return: The watchwords_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._watchwords_path

    @watchwords_path.setter
    def watchwords_path(self, watchwords_path: ConfigNodePropertyString):
        """Sets the watchwords_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.


        :param watchwords_path: The watchwords_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.
        :type watchwords_path: ConfigNodePropertyString
        """

        self._watchwords_path = watchwords_path

    @property
    def sentiment_path(self) -> ConfigNodePropertyString:
        """Gets the sentiment_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.


        :return: The sentiment_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._sentiment_path

    @sentiment_path.setter
    def sentiment_path(self, sentiment_path: ConfigNodePropertyString):
        """Sets the sentiment_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.


        :param sentiment_path: The sentiment_path of this ComAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.
        :type sentiment_path: ConfigNodePropertyString
        """

        self._sentiment_path = sentiment_path
