note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_REPORTING_IMPL_CONFIG_SERVICE_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    repconf_timezone: detachable CONFIG_NODE_PROPERTY_STRING 
      
    repconf_locale: detachable CONFIG_NODE_PROPERTY_STRING 
      
    repconf_snapshots: detachable CONFIG_NODE_PROPERTY_STRING 
      
    repconf_repdir: detachable CONFIG_NODE_PROPERTY_STRING 
      
    repconf_hourofday: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    repconf_minofhour: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    repconf_maxrows: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    repconf_fakedata: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    repconf_snapshotuser: detachable CONFIG_NODE_PROPERTY_STRING 
      
    repconf_enforcesnapshotuser: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_repconf_timezone (a_name: like repconf_timezone)
        -- Set 'repconf_timezone' with 'a_name'.
      do
        repconf_timezone := a_name
      ensure
        repconf_timezone_set: repconf_timezone = a_name		
      end

    set_repconf_locale (a_name: like repconf_locale)
        -- Set 'repconf_locale' with 'a_name'.
      do
        repconf_locale := a_name
      ensure
        repconf_locale_set: repconf_locale = a_name		
      end

    set_repconf_snapshots (a_name: like repconf_snapshots)
        -- Set 'repconf_snapshots' with 'a_name'.
      do
        repconf_snapshots := a_name
      ensure
        repconf_snapshots_set: repconf_snapshots = a_name		
      end

    set_repconf_repdir (a_name: like repconf_repdir)
        -- Set 'repconf_repdir' with 'a_name'.
      do
        repconf_repdir := a_name
      ensure
        repconf_repdir_set: repconf_repdir = a_name		
      end

    set_repconf_hourofday (a_name: like repconf_hourofday)
        -- Set 'repconf_hourofday' with 'a_name'.
      do
        repconf_hourofday := a_name
      ensure
        repconf_hourofday_set: repconf_hourofday = a_name		
      end

    set_repconf_minofhour (a_name: like repconf_minofhour)
        -- Set 'repconf_minofhour' with 'a_name'.
      do
        repconf_minofhour := a_name
      ensure
        repconf_minofhour_set: repconf_minofhour = a_name		
      end

    set_repconf_maxrows (a_name: like repconf_maxrows)
        -- Set 'repconf_maxrows' with 'a_name'.
      do
        repconf_maxrows := a_name
      ensure
        repconf_maxrows_set: repconf_maxrows = a_name		
      end

    set_repconf_fakedata (a_name: like repconf_fakedata)
        -- Set 'repconf_fakedata' with 'a_name'.
      do
        repconf_fakedata := a_name
      ensure
        repconf_fakedata_set: repconf_fakedata = a_name		
      end

    set_repconf_snapshotuser (a_name: like repconf_snapshotuser)
        -- Set 'repconf_snapshotuser' with 'a_name'.
      do
        repconf_snapshotuser := a_name
      ensure
        repconf_snapshotuser_set: repconf_snapshotuser = a_name		
      end

    set_repconf_enforcesnapshotuser (a_name: like repconf_enforcesnapshotuser)
        -- Set 'repconf_enforcesnapshotuser' with 'a_name'.
      do
        repconf_enforcesnapshotuser := a_name
      ensure
        repconf_enforcesnapshotuser_set: repconf_enforcesnapshotuser = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_REPORTING_IMPL_CONFIG_SERVICE_IMPL_PROPERTIES%N")
        if attached repconf_timezone as l_repconf_timezone then
          Result.append ("%Nrepconf_timezone:")
          Result.append (l_repconf_timezone.out)
          Result.append ("%N")    
        end  
        if attached repconf_locale as l_repconf_locale then
          Result.append ("%Nrepconf_locale:")
          Result.append (l_repconf_locale.out)
          Result.append ("%N")    
        end  
        if attached repconf_snapshots as l_repconf_snapshots then
          Result.append ("%Nrepconf_snapshots:")
          Result.append (l_repconf_snapshots.out)
          Result.append ("%N")    
        end  
        if attached repconf_repdir as l_repconf_repdir then
          Result.append ("%Nrepconf_repdir:")
          Result.append (l_repconf_repdir.out)
          Result.append ("%N")    
        end  
        if attached repconf_hourofday as l_repconf_hourofday then
          Result.append ("%Nrepconf_hourofday:")
          Result.append (l_repconf_hourofday.out)
          Result.append ("%N")    
        end  
        if attached repconf_minofhour as l_repconf_minofhour then
          Result.append ("%Nrepconf_minofhour:")
          Result.append (l_repconf_minofhour.out)
          Result.append ("%N")    
        end  
        if attached repconf_maxrows as l_repconf_maxrows then
          Result.append ("%Nrepconf_maxrows:")
          Result.append (l_repconf_maxrows.out)
          Result.append ("%N")    
        end  
        if attached repconf_fakedata as l_repconf_fakedata then
          Result.append ("%Nrepconf_fakedata:")
          Result.append (l_repconf_fakedata.out)
          Result.append ("%N")    
        end  
        if attached repconf_snapshotuser as l_repconf_snapshotuser then
          Result.append ("%Nrepconf_snapshotuser:")
          Result.append (l_repconf_snapshotuser.out)
          Result.append ("%N")    
        end  
        if attached repconf_enforcesnapshotuser as l_repconf_enforcesnapshotuser then
          Result.append ("%Nrepconf_enforcesnapshotuser:")
          Result.append (l_repconf_enforcesnapshotuser.out)
          Result.append ("%N")    
        end  
      end
end


