require 'json'


MyApp.add_route('POST', '//system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Configuration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "adaptive_form_and_interactive_communication_web_channel_configuration", 
  "responseClass" => "adaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo",
  "endpoint" => "/system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Configuration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "show_placeholder",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "maximum_cache_entries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "af_scripting_compatversion",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "make_file_name_unique",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "generating_compliant_data",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Theme Configuration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "adaptive_form_and_interactive_communication_web_channel_theme_configur", 
  "responseClass" => "adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo",
  "endpoint" => "/system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Theme Configuration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "font_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/Analytics Component Query Cache Service', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "analytics_component_query_cache_service", 
  "responseClass" => "analyticsComponentQueryCacheServiceInfo",
  "endpoint" => "/system/console/configMgr/Analytics Component Query Cache Service", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_component_query_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/Apache Sling Health Check Result HTML Serializer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "apache_sling_health_check_result_html_serializer", 
  "responseClass" => "apacheSlingHealthCheckResultHTMLSerializerInfo",
  "endpoint" => "/system/console/configMgr/Apache Sling Health Check Result HTML Serializer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "style_string",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.aem.formsndocuments.config.AEMFormsManagerConfiguration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_aem_formsndocuments_config_aem_forms_manager_configuration", 
  "responseClass" => "comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.aem.formsndocuments.config.AEMFormsManagerConfiguration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "forms_manager_config_include_ootb_templates",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "forms_manager_config_include_deprecated_templates",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.aem.transaction.core.impl.TransactionRecorder', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_aem_transaction_core_impl_transaction_recorder", 
  "responseClass" => "comAdobeAemTransactionCoreImplTransactionRecorderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.aem.transaction.core.impl.TransactionRecorder", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "is_transaction_recording_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.DeprecateIndexesHC', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_aem_upgrade_prechecks_hc_impl_deprecate_indexes_hc", 
  "responseClass" => "comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.DeprecateIndexesHC", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "hc_mbean_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.ReplicationAgentsDisabledHC', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_aem_upgrade_prechecks_hc_impl_replication_agents_disabled_hc", 
  "responseClass" => "comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.ReplicationAgentsDisabledHC", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "hc_mbean_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.aem.upgrade.prechecks.mbean.impl.PreUpgradeTasksMBeanImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_aem_upgrade_prechecks_mbean_impl_pre_upgrade_tasks_m_bean_impl", 
  "responseClass" => "comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.aem.upgrade.prechecks.mbean.impl.PreUpgradeTasksMBeanImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "pre_upgrade_maintenance_tasks",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "pre_upgrade_hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.aem.upgrade.prechecks.tasks.impl.ConsistencyCheckTaskImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_aem_upgrade_prechecks_tasks_impl_consistency_check_task_impl", 
  "responseClass" => "comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.aem.upgrade.prechecks.tasks.impl.ConsistencyCheckTaskImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "root_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fix_inconsistencies",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.account.api.AccountManagementService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_account_api_account_management_service", 
  "responseClass" => "comAdobeCqAccountApiAccountManagementServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.account.api.AccountManagementService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_accountmanager_token_validity_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_accountmanager_config_requestnewaccount_mail",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_accountmanager_config_requestnewpwd_mail",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.account.impl.AccountManagementServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_account_impl_account_management_servlet", 
  "responseClass" => "comAdobeCqAccountImplAccountManagementServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.account.impl.AccountManagementServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_accountmanager_config_informnewaccount_mail",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_accountmanager_config_informnewpwd_mail",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.address.impl.location.LocationListServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_address_impl_location_location_list_servlet", 
  "responseClass" => "comAdobeCqAddressImplLocationLocationListServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.address.impl.location.LocationListServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_address_location_default_max_results",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.audit.purge.Dam', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_audit_purge_dam", 
  "responseClass" => "comAdobeCqAuditPurgeDamInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.audit.purge.Dam", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_contentpath",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_minimumage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_types",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.audit.purge.Pages', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_audit_purge_pages", 
  "responseClass" => "comAdobeCqAuditPurgePagesInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.audit.purge.Pages", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_contentpath",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_minimumage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_types",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.audit.purge.Replication', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_audit_purge_replication", 
  "responseClass" => "comAdobeCqAuditPurgeReplicationInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.audit.purge.Replication", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_contentpath",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_minimumage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlog_rule_types",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.AWSCloudFrontRewriter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_cdn_rewriter_impl_aws_cloud_front_rewriter", 
  "responseClass" => "comAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.AWSCloudFrontRewriter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "keypair_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "keypair_alias",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cdnrewriter_attributes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cdn_rewriter_distribution_domain",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNConfigServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_cdn_rewriter_impl_cdn_config_service_impl", 
  "responseClass" => "comAdobeCqCdnRewriterImplCDNConfigServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNConfigServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cdn_config_distribution_domain",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cdn_config_enable_rewriting",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cdn_config_path_prefixes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cdn_config_cdnttl",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cdn_config_application_protocol",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNRewriter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_cdn_rewriter_impl_cdn_rewriter", 
  "responseClass" => "comAdobeCqCdnRewriterImplCDNRewriterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNRewriter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cdnrewriter_attributes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cdn_rewriter_distribution_domain",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.cloudconfig.core.impl.ConfigurationReplicationEventHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_cloudconfig_core_impl_configuration_replication_event_handle", 
  "responseClass" => "comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.cloudconfig.core.impl.ConfigurationReplicationEventHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "flush_agents",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.commerce.impl.asset.DynamicImageHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_commerce_impl_asset_dynamic_image_handler", 
  "responseClass" => "comAdobeCqCommerceImplAssetDynamicImageHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.commerce.impl.asset.DynamicImageHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_asset_handler_active",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_asset_handler_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.commerce.impl.asset.ProductAssetHandlerProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_commerce_impl_asset_product_asset_handler_provider_impl", 
  "responseClass" => "comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.commerce.impl.asset.ProductAssetHandlerProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_asset_handler_fallback",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.commerce.impl.asset.StaticImageHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_commerce_impl_asset_static_image_handler", 
  "responseClass" => "comAdobeCqCommerceImplAssetStaticImageHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.commerce.impl.asset.StaticImageHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_asset_handler_active",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_asset_handler_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.commerce.impl.asset.VideoHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_commerce_impl_asset_video_handler", 
  "responseClass" => "comAdobeCqCommerceImplAssetVideoHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.commerce.impl.asset.VideoHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_asset_handler_active",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_asset_handler_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.commerce.impl.promotion.PromotionManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_commerce_impl_promotion_promotion_manager_impl", 
  "responseClass" => "comAdobeCqCommerceImplPromotionPromotionManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.commerce.impl.promotion.PromotionManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_promotion_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.commerce.pim.impl.cataloggenerator.CatalogGeneratorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_commerce_pim_impl_cataloggenerator_catalog_generator_impl", 
  "responseClass" => "comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.commerce.pim.impl.cataloggenerator.CatalogGeneratorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_cataloggenerator_bucketsize",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_cataloggenerator_bucketname",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_cataloggenerator_excludedtemplateproperties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.commerce.pim.impl.PageEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_commerce_pim_impl_page_event_listener", 
  "responseClass" => "comAdobeCqCommercePimImplPageEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.commerce.pim.impl.PageEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_commerce_pageeventlistener_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.commerce.pim.impl.productfeed.ProductFeedServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_commerce_pim_impl_productfeed_product_feed_service_impl", 
  "responseClass" => "comAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.commerce.pim.impl.productfeed.ProductFeedServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "feed_generator_algorithm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.contentinsight.impl.ReportingServicesSettingsProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_contentinsight_impl_reporting_services_settings_provider", 
  "responseClass" => "comAdobeCqContentinsightImplReportingServicesSettingsProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.contentinsight.impl.ReportingServicesSettingsProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "reportingservices_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.BrightEdgeProxyServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_contentinsight_impl_servlets_bright_edge_proxy_servlet", 
  "responseClass" => "comAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.BrightEdgeProxyServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "brightedge_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.ReportingServicesProxyServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_contentinsight_impl_servlets_reporting_services_proxy_servle", 
  "responseClass" => "comAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.ReportingServicesProxyServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "reportingservices_proxy_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.cfm.impl.component.ComponentConfigImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_cfm_impl_component_component_config_impl", 
  "responseClass" => "comAdobeCqDamCfmImplComponentComponentConfigImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.component.ComponentConfigImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "dam_cfm_component_resource_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dam_cfm_component_file_reference_prop",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dam_cfm_component_elements_prop",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dam_cfm_component_variation_prop",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.cfm.impl.conf.FeatureConfigImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_cfm_impl_conf_feature_config_impl", 
  "responseClass" => "comAdobeCqDamCfmImplConfFeatureConfigImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.conf.FeatureConfigImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "dam_cfm_resource_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "dam_cfm_reference_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.AssetProcessor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_cfm_impl_content_rewriter_asset_processor", 
  "responseClass" => "comAdobeCqDamCfmImplContentRewriterAssetProcessorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.AssetProcessor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "pipeline_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.ParRangeFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_cfm_impl_content_rewriter_par_range_filter", 
  "responseClass" => "comAdobeCqDamCfmImplContentRewriterParRangeFilterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.ParRangeFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "pipeline_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.PayloadFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_cfm_impl_content_rewriter_payload_filter", 
  "responseClass" => "comAdobeCqDamCfmImplContentRewriterPayloadFilterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.PayloadFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "pipeline_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.dm.process.image.PTiffManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_dm_process_image_p_tiff_manager_impl", 
  "responseClass" => "comAdobeCqDamDmProcessImagePTiffManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.dm.process.image.PTiffManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_memory",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.ips.impl.replication.trigger.ReplicateOnModifyWorker', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_ips_impl_replication_trigger_replicate_on_modify_worker", 
  "responseClass" => "comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.ips.impl.replication.trigger.ReplicateOnModifyWorker", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "dmreplicateonmodify_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dmreplicateonmodify_forcesyncdeletes",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.mac.sync.helper.impl.MACSyncClientImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_mac_sync_helper_impl_mac_sync_client_impl", 
  "responseClass" => "comAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.mac.sync.helper.impl.MACSyncClientImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_dam_mac_sync_client_so_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.mac.sync.impl.DAMSyncServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_mac_sync_impl_dam_sync_service_impl", 
  "responseClass" => "comAdobeCqDamMacSyncImplDAMSyncServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.mac.sync.impl.DAMSyncServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_dam_mac_sync_damsyncservice_registered_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_dam_mac_sync_damsyncservice_sync_renditions",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_dam_mac_sync_damsyncservice_replicate_thread_wait_ms",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_dam_mac_sync_damsyncservice_platform",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.processor.nui.impl.NuiAssetProcessor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_processor_nui_impl_nui_asset_processor", 
  "responseClass" => "comAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.processor.nui.impl.NuiAssetProcessor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "nui_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "nui_service_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "nui_api_key",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.is.ImageServerComponent', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_s7imaging_impl_is_image_server_component", 
  "responseClass" => "comAdobeCqDamS7imagingImplIsImageServerComponentInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.is.ImageServerComponent", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "tcp_port",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "allow_remote_access",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_render_rgn_pixels",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_message_size",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "random_access_url_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "worker_threads",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.ps.PlatformServerServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_s7imaging_impl_ps_platform_server_servlet", 
  "responseClass" => "comAdobeCqDamS7imagingImplPsPlatformServerServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.ps.PlatformServerServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cache_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_root_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cache_max_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_max_entries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.AssetIOHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_webdav_impl_io_asset_io_handler", 
  "responseClass" => "comAdobeCqDamWebdavImplIoAssetIOHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.AssetIOHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "create_version",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.DamWebdavVersionLinkingJob', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_webdav_impl_io_dam_webdav_version_linking_job", 
  "responseClass" => "comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.DamWebdavVersionLinkingJob", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_webdav_version_linking_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_webdav_version_linking_scheduler_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_webdav_version_linking_staging_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.SpecialFilesHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dam_webdav_impl_io_special_files_handler", 
  "responseClass" => "comAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.SpecialFilesHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_dam_core_impl_io_special_files_handler_filepatters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.deserfw.impl.DeserializationFirewallImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_deserfw_impl_deserialization_firewall_impl", 
  "responseClass" => "comAdobeCqDeserfwImplDeserializationFirewallImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.deserfw.impl.DeserializationFirewallImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "firewall_deserialization_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "firewall_deserialization_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "firewall_deserialization_diagnostics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dtm.impl.service.DTMWebServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dtm_impl_service_dtm_web_service_impl", 
  "responseClass" => "comAdobeCqDtmImplServiceDTMWebServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dtm.impl.service.DTMWebServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "connection_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "socket_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dtm.impl.servlets.DTMDeployHookServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dtm_impl_servlets_dtm_deploy_hook_servlet", 
  "responseClass" => "comAdobeCqDtmImplServletsDTMDeployHookServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dtm.impl.servlets.DTMDeployHookServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "dtm_staging_ip_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "dtm_production_ip_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.dtm.reactor.impl.service.WebServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_dtm_reactor_impl_service_web_service_impl", 
  "responseClass" => "comAdobeCqDtmReactorImplServiceWebServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.dtm.reactor.impl.service.WebServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "endpoint_uri",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "connection_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "socket_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.experiencelog.impl.ExperienceLogConfigServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_experiencelog_impl_experience_log_config_servlet", 
  "responseClass" => "comAdobeCqExperiencelogImplExperienceLogConfigServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.experiencelog.impl.ExperienceLogConfigServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "disabled_for_groups",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.hc.ContentPackagesHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_hc_content_packages_health_check", 
  "responseClass" => "comAdobeCqHcContentPackagesHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.hc.ContentPackagesHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "hc_mbean_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.history.impl.HistoryRequestFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_history_impl_history_request_filter", 
  "responseClass" => "comAdobeCqHistoryImplHistoryRequestFilterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.history.impl.HistoryRequestFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "history_request_filter_excluded_selectors",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "history_request_filter_excluded_extensions",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.history.impl.HistoryServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_history_impl_history_service_impl", 
  "responseClass" => "comAdobeCqHistoryImplHistoryServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.history.impl.HistoryServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "history_service_resource_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "history_service_path_filter",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.inbox.impl.typeprovider.ItemTypeProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_inbox_impl_typeprovider_item_type_provider", 
  "responseClass" => "comAdobeCqInboxImplTypeproviderItemTypeProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.inbox.impl.typeprovider.ItemTypeProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "inbox_impl_typeprovider_registrypaths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "inbox_impl_typeprovider_legacypaths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "inbox_impl_typeprovider_defaulturl_failureitem",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "inbox_impl_typeprovider_defaulturl_workitem",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "inbox_impl_typeprovider_defaulturl_task",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.projects.impl.servlet.ProjectImageServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_projects_impl_servlet_project_image_servlet", 
  "responseClass" => "comAdobeCqProjectsImplServletProjectImageServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.projects.impl.servlet.ProjectImageServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "image_quality",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "image_supported_resolutions",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.projects.purge.Scheduler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_projects_purge_scheduler", 
  "responseClass" => "comAdobeCqProjectsPurgeSchedulerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.projects.purge.Scheduler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_purge_active",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_templates",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_purge_groups",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_purge_assets",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_terminate_running_workflows",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_daysold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_save_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.scheduled.exporter.impl.ScheduledExporterImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_scheduled_exporter_impl_scheduled_exporter_impl", 
  "responseClass" => "comAdobeCqScheduledExporterImplScheduledExporterImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.scheduled.exporter.impl.ScheduledExporterImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "include_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "exporter_user",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.analytics.impl.ScreensAnalyticsServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_analytics_impl_screens_analytics_service_impl", 
  "responseClass" => "comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.analytics.impl.ScreensAnalyticsServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_analytics_impl_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_analytics_impl_apikey",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_analytics_impl_project",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_analytics_impl_environment",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_analytics_impl_send_frequency",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.device.impl.DeviceService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_device_impl_device_service", 
  "responseClass" => "comAdobeCqScreensDeviceImplDeviceServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.device.impl.DeviceService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_aem_screens_player_pingfrequency",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_aem_screens_device_pasword_specialchars",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_aem_screens_device_pasword_minlowercasechars",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_aem_screens_device_pasword_minuppercasechars",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_aem_screens_device_pasword_minnumberchars",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_aem_screens_device_pasword_minspecialchars",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_aem_screens_device_pasword_minlength",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.device.registration.impl.RegistrationServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_device_registration_impl_registration_service_impl", 
  "responseClass" => "comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.device.registration.impl.RegistrationServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "device_registration_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.impl.handler.ChannelsUpdateHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_impl_handler_channels_update_handler", 
  "responseClass" => "comAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.impl.handler.ChannelsUpdateHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_pagesupdatehandler_imageresourcetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_pagesupdatehandler_productresourcetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_pagesupdatehandler_videoresourcetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_pagesupdatehandler_dynamicsequenceresourcetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_pagesupdatehandler_previewmodepaths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.impl.jobs.DistributedDevicesStatiUpdateJob', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_impl_jobs_distributed_devices_stati_update_job", 
  "responseClass" => "comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.impl.jobs.DistributedDevicesStatiUpdateJob", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.impl.remote.impl.DistributedHttpClientImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_impl_remote_impl_distributed_http_client_impl", 
  "responseClass" => "comAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.impl.remote.impl.DistributedHttpClientImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_aem_screens_impl_remote_request_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.impl.ScreensChannelPostProcessor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_impl_screens_channel_post_processor", 
  "responseClass" => "comAdobeCqScreensImplScreensChannelPostProcessorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.impl.ScreensChannelPostProcessor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "screens_channels_properties_to_remove",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl", 
  "responseClass" => "comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.mq.activemq.impl.ArtemisJMSProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_mq_activemq_impl_artemis_jms_provider", 
  "responseClass" => "comAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.mq.activemq.impl.ArtemisJMSProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "global_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_disk_usage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "persistence_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "thread_pool_max_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduled_thread_pool_max_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "graceful_shutdown_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queues",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "topics",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "addresses_max_delivery_attempts",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "addresses_expiry_delay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "addresses_address_full_message_policy",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "addresses_max_size_bytes",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "addresses_page_size_bytes",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "addresses_page_cache_max_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_user",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_call_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_call_failover_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_client_failure_check_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_notification_attempts",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_notification_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "id_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_confirmation_window_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_connection_ttl",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_duplicate_detection",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_initial_connect_attempts",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_max_retry_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_min_large_message_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_producer_window_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_reconnect_attempts",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_retry_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_retry_interval_multiplier",
      "description" => "",
      "dataType" => "Float",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl", 
  "responseClass" => "comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_project_path",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_offlinecontent_impl_bulk_offline_update_service_impl_schedule_frequency",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.OfflineContentServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_offlinecontent_impl_offline_content_service_impl", 
  "responseClass" => "comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.OfflineContentServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "disable_smart_sync",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.screens.segmentation.impl.SegmentationFeatureFlag', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_screens_segmentation_impl_segmentation_feature_flag", 
  "responseClass" => "comAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.screens.segmentation.impl.SegmentationFeatureFlag", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enable_data_triggered_content",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.HtmlLibraryManagerConfigHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_security_hc_bundles_impl_html_library_manager_config_health_ch", 
  "responseClass" => "comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.HtmlLibraryManagerConfigHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.WcmFilterHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_security_hc_bundles_impl_wcm_filter_health_check", 
  "responseClass" => "comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.WcmFilterHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.security.hc.dispatcher.impl.DispatcherAccessHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_security_hc_dispatcher_impl_dispatcher_access_health_check", 
  "responseClass" => "comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.security.hc.dispatcher.impl.DispatcherAccessHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "dispatcher_address",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dispatcher_filter_allowed",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "dispatcher_filter_blocked",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.security.hc.packages.impl.ExampleContentHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_security_hc_packages_impl_example_content_health_check", 
  "responseClass" => "comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.security.hc.packages.impl.ExampleContentHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.security.hc.webserver.impl.ClickjackingHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_security_hc_webserver_impl_clickjacking_health_check", 
  "responseClass" => "comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.security.hc.webserver.impl.ClickjackingHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "webserver_address",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.accountverification.impl.AccountManagementConfigImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_accountverification_impl_account_management_config_im", 
  "responseClass" => "comAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.accountverification.impl.AccountManagementConfigImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ttl1",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ttl2",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityComponentFactoryImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_activitystreams_client_impl_social_activity_componen", 
  "responseClass" => "comAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityComponentFactoryImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityStreamComponentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_activitystreams_client_impl_social_activity_stream_co", 
  "responseClass" => "comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityStreamComponentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.EventListenerHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_activitystreams_listener_impl_event_listener_handler", 
  "responseClass" => "comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.EventListenerHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ModerationEventExtension', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_activitystreams_listener_impl_moderation_event_exten", 
  "responseClass" => "comAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ModerationEventExtension", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "accepted",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ranked",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.RatingEventActivitySuppressor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_activitystreams_listener_impl_rating_event_activity_s", 
  "responseClass" => "comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.RatingEventActivitySuppressor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ResourceActivityStreamProviderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_activitystreams_listener_impl_resource_activity_stre", 
  "responseClass" => "comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ResourceActivityStreamProviderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "stream_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "stream_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.calendar.client.endpoints.impl.CalendarOperationsImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_calendar_client_endpoints_impl_calendar_operations_i", 
  "responseClass" => "comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.calendar.client.endpoints.impl.CalendarOperationsImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_retry",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.calendar.client.operationextensions.EventAttachment', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_calendar_client_operationextensions_event_attachmen", 
  "responseClass" => "comAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.calendar.client.operationextensions.EventAttachment", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "extension_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.calendar.servlets.TimeZoneServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_calendar_servlets_time_zone_servlet", 
  "responseClass" => "comAdobeCqSocialCalendarServletsTimeZoneServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.calendar.servlets.TimeZoneServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "timezones_expirytime",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentDeleteEventActivitySuppressor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_comments_endpoints_impl_comment_delete_event", 
  "responseClass" => "comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentDeleteEventActivitySuppressor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentOperationService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_comments_endpoints_impl_comment_operation_se", 
  "responseClass" => "comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentOperationService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.TranslationOperationService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_comments_endpoints_impl_translation_operati", 
  "responseClass" => "comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.TranslationOperationService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.comments.listing.impl.SearchCommentSocialComponentListProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_comments_listing_impl_search_comment_social_c", 
  "responseClass" => "comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.comments.listing.impl.SearchCommentSocialComponentListProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "num_user_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.comments.scheduler.impl.SearchScheduledPosts', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_comments_scheduler_impl_search_scheduled_pos", 
  "responseClass" => "comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.comments.scheduler.impl.SearchScheduledPosts", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enable_scheduled_posts_search",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "number_of_minutes",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_search_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.cors.CORSAuthenticationFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_cors_cors_authentication_filter", 
  "responseClass" => "comAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.cors.CORSAuthenticationFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cors_enabling",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.AndroidEmailClientProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_android_email_client_provider", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.AndroidEmailClientProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "reply_email_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailBuilderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_comment_email_builder_impl", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailBuilderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "context_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_comment_email_event_listener", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CustomEmailClientProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_custom_email_client_provider", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CustomEmailClientProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "reply_email_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailQuotedTextPatternsImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_email_quoted_text_patterns_imp", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailQuotedTextPatternsImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "pattern_time",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pattern_newline",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pattern_day_of_month",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pattern_month",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pattern_year",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pattern_date",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pattern_date_time",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pattern_email",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyConfigurationImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_email_reply_configuration_imp", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyConfigurationImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "email_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_create_post_from_reply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_add_comment_id_to",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_subject_maximum_length",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_reply_to_address",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_reply_to_delimiter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_tracker_id_prefix_in_subject",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_tracker_id_prefix_in_body",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_as_html",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_default_user_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_templates_root_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyImporter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_email_reply_importer", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyImporter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "connect_protocol",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.GmailEmailClientProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_gmail_email_client_provider", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.GmailEmailClientProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "reply_email_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.IOSEmailClientProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_ios_email_client_provider", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.IOSEmailClientProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "reply_email_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.MacmailEmailClientProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_macmail_email_client_provider", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.MacmailEmailClientProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "reply_email_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.OutLookEmailClientProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_out_look_email_client_provider", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.OutLookEmailClientProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "reply_email_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.UnknownEmailClientProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_unknown_email_client_provider", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.UnknownEmailClientProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "reply_email_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "priority_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.YahooEmailClientProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_emailreply_impl_yahoo_email_client_provider", 
  "responseClass" => "comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.YahooEmailClientProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "reply_email_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.maintainance.impl.DeleteTempUGCImageUploads', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_maintainance_impl_delete_temp_ugc_image_upload", 
  "responseClass" => "comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.maintainance.impl.DeleteTempUGCImageUploads", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "number_of_days",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "age_of_file",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.ugclimiter.impl.UGCLimiterServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_ugclimiter_impl_ugc_limiter_service_impl", 
  "responseClass" => "comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.ugclimiter.impl.UGCLimiterServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "verbs",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.commons.ugclimitsconfig.impl.CommunityUserUGCLimitsConfigImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_commons_ugclimitsconfig_impl_community_user_ugc_limit", 
  "responseClass" => "comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.commons.ugclimitsconfig.impl.CommunityUserUGCLimitsConfigImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ugc_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ugc_limit_duration",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "domains",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "to_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.FacebookProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_connect_oauth_impl_facebook_provider_impl", 
  "responseClass" => "comAdobeCqSocialConnectOauthImplFacebookProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.FacebookProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_cloud_config_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_create_tags_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_user_folder",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_facebook_fetch_fields",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_facebook_fields",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_refresh_userdata_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthAuthenticationHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_connect_oauth_impl_social_o_auth_authentication_handle", 
  "responseClass" => "comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthAuthenticationHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthUserProfileMapper', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_connect_oauth_impl_social_o_auth_user_profile_mapper", 
  "responseClass" => "comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthUserProfileMapper", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "facebook",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "twitter",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_user_folder",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.TwitterProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_connect_oauth_impl_twitter_provider_impl", 
  "responseClass" => "comAdobeCqSocialConnectOauthImplTwitterProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.TwitterProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_cloud_config_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_user_folder",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_twitter_enable_params",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_twitter_params",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "provider_config_refresh_userdata_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.content.fragments.services.impl.CommunitiesFragmentCreationServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_content_fragments_services_impl_communities_fragmen", 
  "responseClass" => "comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.content.fragments.services.impl.CommunitiesFragmentCreationServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_social_content_fragments_services_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_social_content_fragments_services_wait_time_seconds",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.datastore.as.impl.ASResourceProviderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_datastore_as_impl_as_resource_provider_factory", 
  "responseClass" => "comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.datastore.as.impl.ASResourceProviderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "version_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_on",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "concurrency_level",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_start_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_ttl",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "time_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.datastore.op.impl.SocialMSResourceProviderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_datastore_op_impl_social_ms_resource_provider_factory", 
  "responseClass" => "comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.datastore.op.impl.SocialMSResourceProviderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "solr_zk_timeout",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_commit",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_on",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "concurrency_level",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_start_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_ttl",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.datastore.rdb.impl.SocialRDBResourceProviderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_datastore_rdb_impl_social_rdb_resource_provider_factor", 
  "responseClass" => "comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.datastore.rdb.impl.SocialRDBResourceProviderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "solr_zk_timeout",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_commit",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_on",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "concurrency_level",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_start_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_ttl",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementLearningPathAdaptorFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_enablement_adaptors_enablement_learning_path_adaptor_f", 
  "responseClass" => "comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementLearningPathAdaptorFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "is_member_check",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementResourceAdaptorFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_enablement_adaptors_enablement_resource_adaptor_facto", 
  "responseClass" => "comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementResourceAdaptorFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "is_member_check",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.enablement.learningpath.endpoints.impl.EnablementLearningPathModelOperationService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_enablement_learningpath_endpoints_impl_enablement_l", 
  "responseClass" => "comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.enablement.learningpath.endpoints.impl.EnablementLearningPathModelOperationService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.enablement.resource.endpoints.impl.EnablementResourceModelOperationService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_enablement_resource_endpoints_impl_enablement_resou", 
  "responseClass" => "comAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.enablement.resource.endpoints.impl.EnablementResourceModelOperationService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.enablement.services.impl.AuthorMarkerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_enablement_services_impl_author_marker_impl", 
  "responseClass" => "comAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.enablement.services.impl.AuthorMarkerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.FilelibraryDownloadGetServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_filelibrary_client_endpoints_filelibrary_download_ge", 
  "responseClass" => "comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.FilelibraryDownloadGetServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_selectors",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_extensions",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.impl.FileLibraryOperationsService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_filelibrary_client_endpoints_impl_file_library_opera", 
  "responseClass" => "comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.impl.FileLibraryOperationsService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.forum.client.endpoints.impl.ForumOperationsService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_forum_client_endpoints_impl_forum_operations_service", 
  "responseClass" => "comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.forum.client.endpoints.impl.ForumOperationsService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.forum.dispatcher.impl.FlushOperations', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_forum_dispatcher_impl_flush_operations", 
  "responseClass" => "comAdobeCqSocialForumDispatcherImplFlushOperationsInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.forum.dispatcher.impl.FlushOperations", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "extension_order",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "flush_forumontopic",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.group.client.impl.CommunityGroupCollectionComponentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_group_client_impl_community_group_collection_componen", 
  "responseClass" => "comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.group.client.impl.CommunityGroupCollectionComponentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "group_listing_pagination_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group_listing_lazyloading_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "page_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.group.impl.GroupServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_group_impl_group_service_impl", 
  "responseClass" => "comAdobeCqSocialGroupImplGroupServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.group.impl.GroupServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_wait_time",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "min_wait_between_retries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.handlebars.GuavaTemplateCacheImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_handlebars_guava_template_cache_impl", 
  "responseClass" => "comAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.handlebars.GuavaTemplateCacheImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "parameter_guava_cache_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "parameter_guava_cache_params",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "parameter_guava_cache_reload",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.ideation.client.endpoints.impl.IdeationOperationsService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_ideation_client_endpoints_impl_ideation_operations_s", 
  "responseClass" => "comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.ideation.client.endpoints.impl.IdeationOperationsService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.journal.client.endpoints.impl.JournalOperationsService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_journal_client_endpoints_impl_journal_operations_ser", 
  "responseClass" => "comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.journal.client.endpoints.impl.JournalOperationsService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberGroupProfileOperationService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_members_endpoints_impl_community_member_group_profile", 
  "responseClass" => "comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberGroupProfileOperationService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberUserProfileOperationService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_members_endpoints_impl_community_member_user_profile_o", 
  "responseClass" => "comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberUserProfileOperationService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.members.impl.CommunityMemberGroupProfileComponentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_members_impl_community_member_group_profile_component_f", 
  "responseClass" => "comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.members.impl.CommunityMemberGroupProfileComponentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "everyone_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.messaging.client.endpoints.impl.MessagingOperationsServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_messaging_client_endpoints_impl_messaging_operation", 
  "responseClass" => "comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.messaging.client.endpoints.impl.MessagingOperationsServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "message_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "message_box_size_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "message_count_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "notify_failure",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "failure_message_from",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "failure_template_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_retries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "min_wait_between_retries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "count_update_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "inbox_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sentitems_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "support_attachments",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "support_group_messaging",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_total_recipients",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "batch_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_total_attachment_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "allowed_attachment_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "service_selector",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.FilterGroupSocialComponentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_moderation_dashboard_api_filter_group_social_componen", 
  "responseClass" => "comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.FilterGroupSocialComponentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "resource_type_filters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.ModerationDashboardSocialComponentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_moderation_dashboard_api_moderation_dashboard_social", 
  "responseClass" => "comAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.ModerationDashboardSocialComponentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.UserDetailsSocialComponentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_moderation_dashboard_api_user_details_social_componen", 
  "responseClass" => "comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.UserDetailsSocialComponentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.moderation.dashboard.internal.impl.FilterGroupSocialComponentFactoryV2', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_moderation_dashboard_internal_impl_filter_group_soci", 
  "responseClass" => "comAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.internal.impl.FilterGroupSocialComponentFactoryV2", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "resource_type_filters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.notifications.impl.MentionsRouter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_notifications_impl_mentions_router", 
  "responseClass" => "comAdobeCqSocialNotificationsImplMentionsRouterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.notifications.impl.MentionsRouter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_notifications_impl_notification_manager_impl", 
  "responseClass" => "comAdobeCqSocialNotificationsImplNotificationManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_unread_notification_count",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationsRouter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_notifications_impl_notifications_router", 
  "responseClass" => "comAdobeCqSocialNotificationsImplNotificationsRouterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationsRouter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.qna.client.endpoints.impl.QnaForumOperationsService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_qna_client_endpoints_impl_qna_forum_operations_servic", 
  "responseClass" => "comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.qna.client.endpoints.impl.QnaForumOperationsService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportImporterServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_reporting_analytics_services_impl_analytics_report_i", 
  "responseClass" => "comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportImporterServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_social_reporting_analytics_polling_importer_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_social_reporting_analytics_polling_importer_page_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportManagementServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_reporting_analytics_services_impl_analytics_report_m", 
  "responseClass" => "comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportManagementServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "report_fetch_delay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.SiteTrendReportSocialComponentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_reporting_analytics_services_impl_site_trend_report_s", 
  "responseClass" => "comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.SiteTrendReportSocialComponentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_social_console_analytics_sites_mapping",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.review.client.endpoints.impl.ReviewOperationsService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_review_client_endpoints_impl_review_operations_servi", 
  "responseClass" => "comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.review.client.endpoints.impl.ReviewOperationsService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.scf.core.operations.impl.SocialOperationsServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_scf_core_operations_impl_social_operations_servlet", 
  "responseClass" => "comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.scf.core.operations.impl.SocialOperationsServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_selectors",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_extensions",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.scf.endpoints.impl.DefaultSocialGetServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_scf_endpoints_impl_default_social_get_servlet", 
  "responseClass" => "comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.scf.endpoints.impl.DefaultSocialGetServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_selectors",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_extensions",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.scoring.impl.ScoringEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_scoring_impl_scoring_event_listener", 
  "responseClass" => "comAdobeCqSocialScoringImplScoringEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.scoring.impl.ScoringEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.serviceusers.internal.impl.ServiceUserWrapperImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_serviceusers_internal_impl_service_user_wrapper_impl", 
  "responseClass" => "comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.serviceusers.internal.impl.ServiceUserWrapperImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enable_fallback",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.site.endpoints.impl.SiteOperationService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_site_endpoints_impl_site_operation_service", 
  "responseClass" => "comAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.site.endpoints.impl.SiteOperationService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "field_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "site_path_filters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "site_package_group",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.site.impl.AnalyticsComponentConfigurationServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_site_impl_analytics_component_configuration_service_im", 
  "responseClass" => "comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.site.impl.AnalyticsComponentConfigurationServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_social_console_analytics_components",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.site.impl.SiteConfiguratorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_site_impl_site_configurator_impl", 
  "responseClass" => "comAdobeCqSocialSiteImplSiteConfiguratorImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.site.impl.SiteConfiguratorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "components_using_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.srp.impl.SocialSolrConnector', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_srp_impl_social_solr_connector", 
  "responseClass" => "comAdobeCqSocialSrpImplSocialSolrConnectorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.srp.impl.SocialSolrConnector", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "srp_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.sync.impl.DiffChangesObserver', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_sync_impl_diff_changes_observer", 
  "responseClass" => "comAdobeCqSocialSyncImplDiffChangesObserverInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.sync.impl.DiffChangesObserver", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "agent_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "diff_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "property_names",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.sync.impl.GroupSyncListenerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_sync_impl_group_sync_listener_impl", 
  "responseClass" => "comAdobeCqSocialSyncImplGroupSyncListenerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.sync.impl.GroupSyncListenerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "nodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "ignorableprops",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "ignorablenodes",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "distfolders",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.sync.impl.PublisherSyncServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_sync_impl_publisher_sync_service_impl", 
  "responseClass" => "comAdobeCqSocialSyncImplPublisherSyncServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.sync.impl.PublisherSyncServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "active_run_modes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.sync.impl.UserSyncListenerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_sync_impl_user_sync_listener_impl", 
  "responseClass" => "comAdobeCqSocialSyncImplUserSyncListenerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.sync.impl.UserSyncListenerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "nodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "ignorableprops",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "ignorablenodes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "distfolders",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.translation.impl.TranslationServiceConfigManager', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_translation_impl_translation_service_config_manager", 
  "responseClass" => "comAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.translation.impl.TranslationServiceConfigManager", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "translate_language",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "translate_display",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "translate_attribution",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "translate_caching",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "translate_smart_rendering",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "translate_caching_duration",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "translate_session_save_interval",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "translate_session_save_batch_limit",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.translation.impl.UGCLanguageDetector', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_translation_impl_ugc_language_detector", 
  "responseClass" => "comAdobeCqSocialTranslationImplUGCLanguageDetectorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.translation.impl.UGCLanguageDetector", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "translate_listener_type",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "translate_property_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "keep_alive_time",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.ugcbase.dispatcher.impl.FlushServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_ugcbase_dispatcher_impl_flush_service_impl", 
  "responseClass" => "comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.ugcbase.dispatcher.impl.FlushServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "thread_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delay_time",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "worker_sleep_time",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.ugcbase.impl.AysncReverseReplicatorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_ugcbase_impl_aysnc_reverse_replicator_impl", 
  "responseClass" => "comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.AysncReverseReplicatorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "keep_alive_time",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.ugcbase.impl.PublisherConfigurationImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_ugcbase_impl_publisher_configuration_impl", 
  "responseClass" => "comAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.PublisherConfigurationImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "is_primary_publisher",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.ugcbase.impl.SocialUtilsImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_ugcbase_impl_social_utils_impl", 
  "responseClass" => "comAdobeCqSocialUgcbaseImplSocialUtilsImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.SocialUtilsImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "legacy_cloud_ugc_path_mapping",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.AutoModerationImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_ugcbase_moderation_impl_auto_moderation_impl", 
  "responseClass" => "comAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.AutoModerationImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "automoderation_sequence",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "automoderation_onfailurestop",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.SentimentProcess', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_ugcbase_moderation_impl_sentiment_process", 
  "responseClass" => "comAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.SentimentProcess", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "watchwords_positive",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "watchwords_negative",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "watchwords_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sentiment_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.DefaultAttachmentTypeBlacklistService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_ugcbase_security_impl_default_attachment_type_blackli", 
  "responseClass" => "comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.DefaultAttachmentTypeBlacklistService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "default_attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "baseline_attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.SaferSlingPostValidatorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_ugcbase_security_impl_safer_sling_post_validator_impl", 
  "responseClass" => "comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.SaferSlingPostValidatorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "parameter_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "parameter_whitelist_prefixes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "binary_parameter_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "modifier_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "operation_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "operation_whitelist_prefixes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "typehint_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resourcetype_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.user.endpoints.impl.UsersGroupFromPublishServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_user_endpoints_impl_users_group_from_publish_servlet", 
  "responseClass" => "comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.user.endpoints.impl.UsersGroupFromPublishServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_extensions",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_paths",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.social.user.impl.transport.HttpToPublisher', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_social_user_impl_transport_http_to_publisher", 
  "responseClass" => "comAdobeCqSocialUserImplTransportHttpToPublisherInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.social.user.impl.transport.HttpToPublisher", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "agent_configuration",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "context_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "disabled_cipher_suites",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "enabled_cipher_suites",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.ui.wcm.commons.internal.servlets.rte.RTEFilterServletFactory.amended', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_ui_wcm_commons_internal_servlets_rte_rte_filter_servlet_fact", 
  "responseClass" => "comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.ui.wcm.commons.internal.servlets.rte.RTEFilterServletFactory.amended", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "resource_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeContentCleanup', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_upgrades_cleanup_impl_upgrade_content_cleanup", 
  "responseClass" => "comAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeContentCleanup", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "delete_path_regexps",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "delete_sql2_query",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeInstallFolderCleanup', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_upgrades_cleanup_impl_upgrade_install_folder_cleanup", 
  "responseClass" => "comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeInstallFolderCleanup", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "delete_name_regexps",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncDeleteConfigProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_wcm_jobs_async_impl_async_delete_config_provider_service", 
  "responseClass" => "comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncDeleteConfigProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "job_topic_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncJobCleanUpTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_wcm_jobs_async_impl_async_job_clean_up_task", 
  "responseClass" => "comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncJobCleanUpTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "job_purge_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "job_purge_max_jobs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncMoveConfigProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_wcm_jobs_async_impl_async_move_config_provider_service", 
  "responseClass" => "comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncMoveConfigProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "job_topic_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncPageMoveConfigProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_wcm_jobs_async_impl_async_page_move_config_provider_service", 
  "responseClass" => "comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncPageMoveConfigProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "job_topic_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.wcm.launches.impl.LaunchesEventHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_wcm_launches_impl_launches_event_handler", 
  "responseClass" => "comAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.wcm.launches.impl.LaunchesEventHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "launches_eventhandler_threadpool_maxsize",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "launches_eventhandler_threadpool_priority",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "launches_eventhandler_updatelastmodification",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.wcm.mobile.qrcode.servlet.QRCodeImageGenerator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_wcm_mobile_qrcode_servlet_qr_code_image_generator", 
  "responseClass" => "comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.wcm.mobile.qrcode.servlet.QRCodeImageGenerator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_qrcode_servlet_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.wcm.style.internal.ComponentStyleInfoCacheImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_wcm_style_internal_component_style_info_cache_impl", 
  "responseClass" => "comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.wcm.style.internal.ComponentStyleInfoCacheImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.cq.wcm.translation.impl.TranslationPlatformConfigurationImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_cq_wcm_translation_impl_translation_platform_configuration_impl", 
  "responseClass" => "comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.cq.wcm.translation.impl.TranslationPlatformConfigurationImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sync_translation_state_scheduling_format",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduling_repeat_translation_scheduling_format",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sync_translation_state_lock_timeout_in_minutes",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "export_format",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.fd.fp.config.FormsPortalDraftsandSubmissionConfigService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_fd_fp_config_forms_portal_draftsand_submission_config_service", 
  "responseClass" => "comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.fd.fp.config.FormsPortalDraftsandSubmissionConfigService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "portal_outboxes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "draft_data_service",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "draft_metadata_service",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "submit_data_service",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "submit_metadata_service",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pending_sign_data_service",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pending_sign_metadata_service",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.fd.fp.config.FormsPortalSchedulerService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_fd_fp_config_forms_portal_scheduler_service", 
  "responseClass" => "comAdobeFdFpConfigFormsPortalSchedulerServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.fd.fp.config.FormsPortalSchedulerService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "formportal_interval",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.forms.common.service.impl.DefaultDataProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_forms_common_service_impl_default_data_provider", 
  "responseClass" => "comAdobeFormsCommonServiceImplDefaultDataProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.forms.common.service.impl.DefaultDataProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "alloweddata_file_locations",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.forms.common.service.impl.FormsCommonConfigurationServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_forms_common_service_impl_forms_common_configuration_service_imp", 
  "responseClass" => "comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.forms.common.service.impl.FormsCommonConfigurationServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "temp_storage_config",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.forms.common.servlet.TempCleanUpTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_forms_common_servlet_temp_clean_up_task", 
  "responseClass" => "comAdobeFormsCommonServletTempCleanUpTaskInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.forms.common.servlet.TempCleanUpTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "duration_for_temporary_storage",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "duration_for_anonymous_storage",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.acp.platform.PlatformServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_acp_platform_platform_servlet", 
  "responseClass" => "comAdobeGraniteAcpPlatformPlatformServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.acp.platform.PlatformServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "query_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "file_type_extension_map",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.activitystreams.impl.ActivityManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_activitystreams_impl_activity_manager_impl", 
  "responseClass" => "comAdobeGraniteActivitystreamsImplActivityManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.activitystreams.impl.ActivityManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "aggregate_relationships",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "aggregate_descend_virtual",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.analyzer.base.SystemStatusServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_analyzer_base_system_status_servlet", 
  "responseClass" => "comAdobeGraniteAnalyzerBaseSystemStatusServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.analyzer.base.SystemStatusServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "disabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.analyzer.scripts.compile.AllScriptsCompilerServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_analyzer_scripts_compile_all_scripts_compiler_servlet", 
  "responseClass" => "comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.analyzer.scripts.compile.AllScriptsCompilerServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "disabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.apicontroller.FilterResolverHookFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_apicontroller_filter_resolver_hook_factory", 
  "responseClass" => "comAdobeGraniteApicontrollerFilterResolverHookFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.apicontroller.FilterResolverHookFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cdn_cdn_rewriter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cloud_config_components",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cloud_config_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cloud_config_ui",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_com_adobe_cq_editor",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_com_adobe_cq_projects_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_com_adobe_cq_projects_wcm_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_com_adobe_cq_ui_commons",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_com_adobe_cq_wcm_style",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cq_activitymap_integration",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cq_contexthub_commons",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cq_dtm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cq_healthcheck",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cq_multisite_targeting",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cq_pre_upgrade_cleanup",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cq_product_info_provider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cq_rest_sites",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_cq_security_hc",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_dam_cq_dam_svg_handler",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_dam_cq_scene7_imaging",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_dtm_reactor_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_dtm_reactor_ui",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_exp_jspel_resolver",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_inbox_cq_inbox",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_json_schema_parser",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_media_cq_media_publishing_dps_fp_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_mobile_cq_mobile_caas",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_mobile_cq_mobile_index_builder",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_mobile_cq_mobile_phonegap_build",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_myspell",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_sample_we_retail_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_com_adobe_cq_screens_dcc",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_screens_com_adobe_cq_screens_mq_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_as_provider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_badging_basic_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_badging_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_calendar_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_content_fragments_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_enablement_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_graph_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_ideation_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_jcr_provider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_members_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_ms_provider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_notifications_channels_web",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_notifications_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_rdb_provider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_scf_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_scoring_basic_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_scoring_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_serviceusers_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_srp_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_cq_social_cq_social_ugcbase_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_dam_cq_dam_cfm_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_forms_foundation_forms_foundation_base",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_apicontroller",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_asset_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_auth_sso",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_bundles_hc_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_compat_router",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_conf",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_conf_ui_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_cors",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_crx_explorer",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_crxde_lite",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_crypto_config",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_crypto_extension",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_crypto_file",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_crypto_jcr",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_csrf",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_distribution_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_dropwizard_metrics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_frags_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_gibson",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_infocollector",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_installer_factory_packages",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_jetty_ssl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_jobs_async",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_maintenance_oak",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_monitoring_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_queries",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_replication_hc_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_repository_checker",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_repository_hc_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_rest_assets",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_security_ui",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_startup",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_tagsoup",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_taskmanagement_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_taskmanagement_workflow",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_ui_clientlibs_compiler_less",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_ui_clientlibs_processor_gcc",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_webconsole_plugins",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_workflow_console",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_xmp_worker_files_native_fragment_linux",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_xmp_worker_files_native_fragment_macosx",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_xmp_worker_files_native_fragment_win",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_commons_osgi_wrapper_simple_jndi",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_cq_authhandler",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_cq_compat_configupdate",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_cq_licensebranding",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_cq_notifcation_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_cq_replication_audit",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_cq_search_ext",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_dam_cq_dam_annotation_print",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_dam_cq_dam_asset_usage",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_dam_cq_dam_s7dam",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_dam_cq_dam_similaritysearch",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_dam_dam_webdav_support",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_pre_upgrade_tasks",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_replication_extensions",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_wcm_cq_msm_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_wcm_cq_wcm_translation",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "day_commons_jrawio",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_aries_jmx_whiteboard",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_sslfilter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_org_apache_felix_threaddump",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_webconsole_plugins_ds",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_webconsole_plugins_event",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_webconsole_plugins_memoryusage",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_webconsole_plugins_packageadmin",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_jackrabbit_oak_auth_ldap",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_jackrabbit_oak_segment_tar",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_jackrabbit_oak_solr_osgi",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_bundleresource_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_fsclassloader",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_webconsole",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_datasource",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_discovery_base",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_discovery_oak",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_discovery_support",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_distribution_api",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_distribution_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_extensions_webconsolesecurityprovider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_hc_webconsole",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_installer_console",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_installer_provider_file",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_installer_provider_jcr",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_jcr_davex",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_jcr_resourcesecurity",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_jmx_provider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_launchpad_installer",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_models_impl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_repoinit_parser",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_resource_inventory",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_resourceresolver",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_scripting_javascript",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_scripting_jst",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_scripting_sightly_js_provider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_scripting_sightly_models_provider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_security",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_servlets_compat",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_servlets_get",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_startupfilter_disabler",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_tracer",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "we_retail_client_app_core",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.cert.impl.ClientCertAuthHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_cert_impl_client_cert_auth_handler", 
  "responseClass" => "comAdobeGraniteAuthCertImplClientCertAuthHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.cert.impl.ClientCertAuthHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.ims', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_ims", 
  "responseClass" => "comAdobeGraniteAuthImsInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.ims", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "configid",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scope",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.ims.impl.ExternalUserIdMappingProviderExtension', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_ims_impl_external_user_id_mapping_provider_extension", 
  "responseClass" => "comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.ims.impl.ExternalUserIdMappingProviderExtension", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSAccessTokenRequestCustomizerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_ims_impl_ims_access_token_request_customizer_impl", 
  "responseClass" => "comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSAccessTokenRequestCustomizerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "auth_ims_client_secret",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "customizer_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.ims.impl.ImsConfigProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_ims_impl_ims_config_provider_impl", 
  "responseClass" => "comAdobeGraniteAuthImsImplImsConfigProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.ims.impl.ImsConfigProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_configmanager_ims_configid",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ims_owning_entity",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "aem_instance_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ims_service_code",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSInstanceCredentialsValidator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_ims_impl_ims_instance_credentials_validator", 
  "responseClass" => "comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSInstanceCredentialsValidator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_ims_impl_ims_provider_impl", 
  "responseClass" => "comAdobeGraniteAuthImsImplIMSProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_authorization_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_token_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_profile_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_extended_details_urls",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_validate_token_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_session_property",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_service_token_client_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_service_token_client_secret",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_service_token",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ims_org_ref",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ims_group_mapping",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_ims_only_license_group",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.accesstoken.provider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_accesstoken_provider", 
  "responseClass" => "comAdobeGraniteAuthOauthAccesstokenProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.accesstoken.provider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_title",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_default_claims",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_endpoint",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_access_token_request",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_keypair_alias",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_conn_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_so_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_client_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_scope",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_reuse_access_token",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_provider_relaxed_ssl",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "token_request_customizer_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_validator_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.impl.BearerAuthenticationHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_impl_bearer_authentication_handler", 
  "responseClass" => "comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.BearerAuthenticationHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_client_ids_allowed",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "auth_bearer_sync_ims",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_request_parameter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_bearer_configid",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_jwt_support",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.impl.DefaultTokenValidatorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_impl_default_token_validator_impl", 
  "responseClass" => "comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.DefaultTokenValidatorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "auth_token_validator_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.impl.FacebookProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_impl_facebook_provider_impl", 
  "responseClass" => "comAdobeGraniteAuthOauthImplFacebookProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.FacebookProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.impl.GithubProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_impl_github_provider_impl", 
  "responseClass" => "comAdobeGraniteAuthOauthImplGithubProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.GithubProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_github_authorization_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_github_token_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_github_profile_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.impl.GraniteProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_impl_granite_provider", 
  "responseClass" => "comAdobeGraniteAuthOauthImplGraniteProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.GraniteProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_granite_authorization_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_granite_token_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_granite_profile_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_granite_extended_details_urls",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManager', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_impl_helper_provider_config_manager", 
  "responseClass" => "comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManager", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_cookie_login_timeout",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_cookie_max_age",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManagerInternal', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_impl_helper_provider_config_manager_internal", 
  "responseClass" => "comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManagerInternal", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_cookie_login_timeout",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_cookie_max_age",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.impl.OAuthAuthenticationHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_impl_o_auth_authentication_handler", 
  "responseClass" => "comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.OAuthAuthenticationHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.impl.TwitterProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_impl_twitter_provider_impl", 
  "responseClass" => "comAdobeGraniteAuthOauthImplTwitterProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.TwitterProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.oauth.provider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_oauth_provider", 
  "responseClass" => "comAdobeGraniteAuthOauthProviderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.oauth.provider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_config_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_client_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_client_secret",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_scope",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "oauth_config_provider_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_create_users",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_userid_property",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "force_strict_username_matching",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_encode_userids",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_hash_userids",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_call_back_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_access_token_persist",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_access_token_persist_cookie",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_csrf_state_protection",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_redirect_request_params",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_config_siblings_allow",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.requirement.impl.DefaultRequirementHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_requirement_impl_default_requirement_handler", 
  "responseClass" => "comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.requirement.impl.DefaultRequirementHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "supported_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_saml_saml_authentication_handler", 
  "responseClass" => "comAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "idp_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "idp_cert_alias",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "idp_http_redirect",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_provider_entity_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "assertion_consumer_service_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sp_private_key_alias",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "key_store_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_redirect_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_id_attribute",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "use_encryption",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "create_user",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_intermediate_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "add_group_memberships",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group_membership_attribute",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_groups",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "name_id_format",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "synchronize_attributes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "handle_logout",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "logout_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "clock_tolerance",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "digest_method",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "signature_method",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "identity_sync_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "idp_identifier",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.auth.sso.impl.SsoAuthenticationHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_auth_sso_impl_sso_authentication_handler", 
  "responseClass" => "comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.auth.sso.impl.SsoAuthenticationHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_control_flag",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_realm_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "headers",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cookies",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "parameters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "usermap",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "format",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "trusted_credentials_attribute",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.CodeCacheHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_code_cache_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.CodeCacheHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "minimum_code_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.CrxdeSupportBundleHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_crxde_support_bundle_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.CrxdeSupportBundleHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.DavExBundleHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_dav_ex_bundle_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.DavExBundleHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.InactiveBundlesHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_inactive_bundles_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.InactiveBundlesHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "ignored_bundles",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.JobsHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_jobs_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplJobsHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.JobsHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "max_queued_jobs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingGetServletHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_sling_get_servlet_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingGetServletHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJavaScriptHandlerHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_sling_java_script_handler_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJavaScriptHandlerHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJspScriptHandlerHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_sling_jsp_script_handler_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJspScriptHandlerHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingReferrerFilterHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_sling_referrer_filter_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingReferrerFilterHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.bundles.hc.impl.WebDavBundleHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_bundles_hc_impl_web_dav_bundle_health_check", 
  "responseClass" => "comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.WebDavBundleHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.comments.internal.CommentReplicationContentFilterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_comments_internal_comment_replication_content_filter_fac", 
  "responseClass" => "comAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.comments.internal.CommentReplicationContentFilterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "replicate_comment_resource_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.compatrouter.impl.CompatSwitchingServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_compatrouter_impl_compat_switching_service_impl", 
  "responseClass" => "comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.compatrouter.impl.CompatSwitchingServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "compatgroups",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.compatrouter.impl.RoutingConfig', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_compatrouter_impl_routing_config", 
  "responseClass" => "comAdobeGraniteCompatrouterImplRoutingConfigInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.compatrouter.impl.RoutingConfig", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compat_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "new_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.compatrouter.impl.SwitchMappingConfig', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_compatrouter_impl_switch_mapping_config", 
  "responseClass" => "comAdobeGraniteCompatrouterImplSwitchMappingConfigInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.compatrouter.impl.SwitchMappingConfig", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "group",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ids",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.conf.impl.RuntimeAwareConfigurationResourceResolvingStrategy', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_conf_impl_runtime_aware_configuration_resource_resolving", 
  "responseClass" => "comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.conf.impl.RuntimeAwareConfigurationResourceResolvingStrategy", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fallback_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.contexthub.impl.ContextHubImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_contexthub_impl_context_hub_impl", 
  "responseClass" => "comAdobeGraniteContexthubImplContextHubImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.contexthub.impl.ContextHubImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_contexthub_silent_mode",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_contexthub_show_ui",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.cors.impl.CORSPolicyImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_cors_impl_cors_policy_impl", 
  "responseClass" => "comAdobeGraniteCorsImplCORSPolicyImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.cors.impl.CORSPolicyImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "alloworigin",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "alloworiginregexp",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "allowedpaths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "exposedheaders",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "maxage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "supportedheaders",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "supportedmethods",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "supportscredentials",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.csrf.impl.CSRFFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_csrf_impl_csrf_filter", 
  "responseClass" => "comAdobeGraniteCsrfImplCSRFFilterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.csrf.impl.CSRFFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "filter_methods",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "filter_enable_safe_user_agents",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "filter_safe_user_agents",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "filter_excluded_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.csrf.impl.CSRFServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_csrf_impl_csrf_servlet", 
  "responseClass" => "comAdobeGraniteCsrfImplCSRFServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.csrf.impl.CSRFServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "csrf_token_expires_in",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_auth_requirements",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_distribution_core_impl_crypto_distribution_transport_se", 
  "responseClass" => "comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "username",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "encrypted_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_distribution_core_impl_diff_diff_changes_observer", 
  "responseClass" => "comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "agent_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "diff_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "observed_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "property_names",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "distribution_delay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_user_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_distribution_core_impl_diff_diff_event_listener", 
  "responseClass" => "comAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "diff_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_user_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.distribution.core.impl.DistributionToReplicationEventTransformer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_distribution_core_impl_distribution_to_replication_even", 
  "responseClass" => "comAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.distribution.core.impl.DistributionToReplicationEventTransformer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "importer_name",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_distribution_core_impl_replication_adapters_replicat", 
  "responseClass" => "comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "provider_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "forward_requests",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.DistributionTransportHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_distribution_core_impl_replication_distribution_trans", 
  "responseClass" => "comAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.DistributionTransportHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "forward_requests",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_distribution_core_impl_transport_access_token_distribu", 
  "responseClass" => "comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "access_token_provider_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.frags.impl.CheckHttpHeaderFlag', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_frags_impl_check_http_header_flag", 
  "responseClass" => "comAdobeGraniteFragsImplCheckHttpHeaderFlagInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.frags.impl.CheckHttpHeaderFlag", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "feature_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "feature_description",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "http_header_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "http_header_valuepattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.frags.impl.RandomFeature', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_frags_impl_random_feature", 
  "responseClass" => "comAdobeGraniteFragsImplRandomFeatureInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.frags.impl.RandomFeature", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "feature_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "feature_description",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "active_percentage",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cookie_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cookie_max_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.httpcache.file.FileCacheStore', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_httpcache_file_file_cache_store", 
  "responseClass" => "comAdobeGraniteHttpcacheFileFileCacheStoreInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.httpcache.file.FileCacheStore", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_httpcache_file_document_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_httpcache_file_include_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.httpcache.impl.OuterCacheFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_httpcache_impl_outer_cache_filter", 
  "responseClass" => "comAdobeGraniteHttpcacheImplOuterCacheFilterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.httpcache.impl.OuterCacheFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_httpcache_url_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.i18n.impl.bundle.PseudoTranslations', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_i18n_impl_bundle_pseudo_translations", 
  "responseClass" => "comAdobeGraniteI18nImplBundlePseudoTranslationsInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.i18n.impl.bundle.PseudoTranslations", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "pseudo_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.i18n.impl.PreferencesLocaleResolverService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_i18n_impl_preferences_locale_resolver_service", 
  "responseClass" => "comAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.i18n.impl.PreferencesLocaleResolverService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "security_preferences_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.infocollector.InfoCollector', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_infocollector_info_collector", 
  "responseClass" => "comAdobeGraniteInfocollectorInfoCollectorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.infocollector.InfoCollector", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "granite_infocollector_include_thread_dumps",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_infocollector_include_heap_dump",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.jetty.ssl.internal.GraniteSslConnectorFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_jetty_ssl_internal_granite_ssl_connector_factory", 
  "responseClass" => "comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.jetty.ssl.internal.GraniteSslConnectorFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_jetty_ssl_port",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_jetty_ssl_keystore_user",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_jetty_ssl_keystore_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_jetty_ssl_ciphersuites_excluded",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_jetty_ssl_ciphersuites_included",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "com_adobe_granite_jetty_ssl_client_certificate",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.license.impl.LicenseCheckFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_license_impl_license_check_filter", 
  "responseClass" => "comAdobeGraniteLicenseImplLicenseCheckFilterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.license.impl.LicenseCheckFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "check_internval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "exclude_ids",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "encrypt_ping",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.logging.impl.LogAnalyserImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_logging_impl_log_analyser_impl", 
  "responseClass" => "comAdobeGraniteLoggingImplLogAnalyserImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.logging.impl.LogAnalyserImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "messages_queue_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "logger_config",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "messages_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.logging.impl.LogErrorHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_logging_impl_log_error_health_check", 
  "responseClass" => "comAdobeGraniteLoggingImplLogErrorHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.logging.impl.LogErrorHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.maintenance.crx.impl.DataStoreGarbageCollectionTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_maintenance_crx_impl_data_store_garbage_collection_task", 
  "responseClass" => "comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.DataStoreGarbageCollectionTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "granite_maintenance_mandatory",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "job_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.maintenance.crx.impl.LuceneBinariesCleanupTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_maintenance_crx_impl_lucene_binaries_cleanup_task", 
  "responseClass" => "comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.LuceneBinariesCleanupTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "job_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.maintenance.crx.impl.RevisionCleanupTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_maintenance_crx_impl_revision_cleanup_task", 
  "responseClass" => "comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.RevisionCleanupTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "full_gc_days",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.monitoring.impl.ScriptConfigImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_monitoring_impl_script_config_impl", 
  "responseClass" => "comAdobeGraniteMonitoringImplScriptConfigImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.monitoring.impl.ScriptConfigImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "script_filename",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "script_display",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "script_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "script_platform",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jmxdomain",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.oauth.server.auth.impl.OAuth2ServerAuthenticationHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_oauth_server_auth_impl_o_auth2_server_authentication_han", 
  "responseClass" => "comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.oauth.server.auth.impl.OAuth2ServerAuthenticationHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_control_flag",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_realm_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_offline_validation",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.oauth.server.impl.AccessTokenCleanupTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_oauth_server_impl_access_token_cleanup_task", 
  "responseClass" => "comAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.oauth.server.impl.AccessTokenCleanupTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2ClientRevocationServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_oauth_server_impl_o_auth2_client_revocation_servlet", 
  "responseClass" => "comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2ClientRevocationServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_client_revocation_active",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2RevocationEndpointServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_oauth_server_impl_o_auth2_revocation_endpoint_servlet", 
  "responseClass" => "comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2RevocationEndpointServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_paths",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_revocation_active",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenEndpointServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_oauth_server_impl_o_auth2_token_endpoint_servlet", 
  "responseClass" => "comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenEndpointServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_issuer",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "oauth_access_token_expires_in",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_servlet_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_context_select",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenRevocationServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_oauth_server_impl_o_auth2_token_revocation_servlet", 
  "responseClass" => "comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenRevocationServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "oauth_token_revocation_active",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingConfigurator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_offloading_impl_offloading_configurator", 
  "responseClass" => "comAdobeGraniteOffloadingImplOffloadingConfiguratorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingConfigurator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "offloading_transporter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "offloading_cleanup_payload",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobCloner', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_offloading_impl_offloading_job_cloner", 
  "responseClass" => "comAdobeGraniteOffloadingImplOffloadingJobClonerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobCloner", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "offloading_jobcloner_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobOffloader', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_offloading_impl_offloading_job_offloader", 
  "responseClass" => "comAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobOffloader", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "offloading_offloader_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingAgentManager', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_offloading_impl_transporter_offloading_agent_manager", 
  "responseClass" => "comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingAgentManager", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "offloading_agentmanager_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingDefaultTransporter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_offloading_impl_transporter_offloading_default_transpo", 
  "responseClass" => "comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingDefaultTransporter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "default_transport_agent_to_worker_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_transport_agent_to_master_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_transport_input_package",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_transport_output_package",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_transport_replication_synchronous",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_transport_contentpackage",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "offloading_transporter_default_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.omnisearch.impl.core.OmniSearchServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_omnisearch_impl_core_omni_search_service_impl", 
  "responseClass" => "comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.omnisearch.impl.core.OmniSearchServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "omnisearch_suggestion_requiretext_min",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "omnisearch_suggestion_spellcheck_require",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.optout.impl.OptOutServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_optout_impl_opt_out_service_impl", 
  "responseClass" => "comAdobeGraniteOptoutImplOptOutServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.optout.impl.OptOutServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "optout_cookies",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "optout_headers",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "optout_whitelist_cookies",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.queries.impl.hc.AsyncIndexHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_queries_impl_hc_async_index_health_check", 
  "responseClass" => "comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.queries.impl.hc.AsyncIndexHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "indexing_critical_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "indexing_warn_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.queries.impl.hc.LargeIndexHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_queries_impl_hc_large_index_health_check", 
  "responseClass" => "comAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.queries.impl.hc.LargeIndexHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "large_index_critical_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "large_index_warn_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.queries.impl.hc.QueriesStatusHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_queries_impl_hc_queries_status_health_check", 
  "responseClass" => "comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueriesStatusHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryHealthCheckMetrics', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_queries_impl_hc_query_health_check_metrics", 
  "responseClass" => "comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryHealthCheckMetrics", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "get_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryLimitsHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_queries_impl_hc_query_limits_health_check", 
  "responseClass" => "comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryLimitsHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationQueueHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_replication_hc_impl_replication_queue_health_check", 
  "responseClass" => "comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationQueueHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "number_of_retries_allowed",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationTransportUsersHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_replication_hc_impl_replication_transport_users_health_c", 
  "responseClass" => "comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationTransportUsersHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.repository.hc.impl.AuthorizableNodeNameHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_repository_hc_impl_authorizable_node_name_health_check", 
  "responseClass" => "comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.repository.hc.impl.AuthorizableNodeNameHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.repository.hc.impl.content.sling.SlingContentHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_repository_hc_impl_content_sling_sling_content_health_c", 
  "responseClass" => "comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.repository.hc.impl.content.sling.SlingContentHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "exclude_search_path",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.repository.hc.impl.ContinuousRGCHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_repository_hc_impl_continuous_rgc_health_check", 
  "responseClass" => "comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.repository.hc.impl.ContinuousRGCHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultAccessUserProfileHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_repository_hc_impl_default_access_user_profile_health_che", 
  "responseClass" => "comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultAccessUserProfileHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultLoginsHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_repository_hc_impl_default_logins_health_check", 
  "responseClass" => "comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultLoginsHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "account_logins",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "console_logins",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.repository.hc.impl.DiskSpaceHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_repository_hc_impl_disk_space_health_check", 
  "responseClass" => "comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.repository.hc.impl.DiskSpaceHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "disk_space_warn_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "disk_space_error_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.repository.hc.impl.ObservationQueueLengthHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_repository_hc_impl_observation_queue_length_health_check", 
  "responseClass" => "comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.repository.hc.impl.ObservationQueueLengthHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.repository.impl.CommitStatsConfig', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_repository_impl_commit_stats_config", 
  "responseClass" => "comAdobeGraniteRepositoryImplCommitStatsConfigInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.repository.impl.CommitStatsConfig", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "interval_seconds",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "commits_per_interval_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_location_length",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_details_shown",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "min_details_percentage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "thread_matchers",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "max_greedy_depth",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "greedy_stack_matchers",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "stack_filters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "stack_matchers",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "stack_categorizers",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "stack_shorteners",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.repository.ServiceUserConfiguration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_repository_service_user_configuration", 
  "responseClass" => "comAdobeGraniteRepositoryServiceUserConfigurationInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.repository.ServiceUserConfiguration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "serviceusers_simple_subject_population",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "serviceusers_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.requests.logging.impl.hc.RequestsStatusHealthCheckImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_requests_logging_impl_hc_requests_status_health_check_im", 
  "responseClass" => "comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.requests.logging.impl.hc.RequestsStatusHealthCheckImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.resourcestatus.impl.CompositeStatusType', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_resourcestatus_impl_composite_status_type", 
  "responseClass" => "comAdobeGraniteResourcestatusImplCompositeStatusTypeInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.resourcestatus.impl.CompositeStatusType", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.resourcestatus.impl.StatusResourceProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_resourcestatus_impl_status_resource_provider_impl", 
  "responseClass" => "comAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.resourcestatus.impl.StatusResourceProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "provider_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.rest.assets.impl.AssetContentDispositionFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_rest_assets_impl_asset_content_disposition_filter", 
  "responseClass" => "comAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.rest.assets.impl.AssetContentDispositionFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "mime_allow_empty",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "mime_allowed",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.rest.impl.ApiEndpointResourceProviderFactoryImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_rest_impl_api_endpoint_resource_provider_factory_impl", 
  "responseClass" => "comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.rest.impl.ApiEndpointResourceProviderFactoryImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "provider_roots",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.rest.impl.servlet.DefaultGETServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_rest_impl_servlet_default_get_servlet", 
  "responseClass" => "comAdobeGraniteRestImplServletDefaultGETServletInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.rest.impl.servlet.DefaultGETServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "default_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "use_absolute_uri",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.security.user.ui.internal.servlets.SSLConfigurationServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_security_user_ui_internal_servlets_ssl_configuration_s", 
  "responseClass" => "comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.security.user.ui.internal.servlets.SSLConfigurationServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.security.user.UserPropertiesService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_security_user_user_properties_service", 
  "responseClass" => "comAdobeGraniteSecurityUserUserPropertiesServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.security.user.UserPropertiesService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "adapter_condition",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_userproperties_nodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "granite_userproperties_resourcetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.socialgraph.impl.SocialGraphFactoryImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_socialgraph_impl_social_graph_factory_impl", 
  "responseClass" => "comAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.socialgraph.impl.SocialGraphFactoryImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "group2member_relationship_outgoing",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group2member_excluded_outgoing",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "group2member_relationship_incoming",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group2member_excluded_incoming",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.system.monitoring.impl.SystemStatsMBeanImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_system_monitoring_impl_system_stats_m_bean_impl", 
  "responseClass" => "comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.system.monitoring.impl.SystemStatsMBeanImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jmx_objectname",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskAdapterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_taskmanagement_impl_jcr_task_adapter_factory", 
  "responseClass" => "comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskAdapterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "adapter_condition",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskArchiveService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_taskmanagement_impl_jcr_task_archive_service", 
  "responseClass" => "comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskArchiveService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "archiving_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "archive_since_days_completed",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.taskmanagement.impl.purge.TaskPurgeMaintenanceTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_taskmanagement_impl_purge_task_purge_maintenance_task", 
  "responseClass" => "comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.taskmanagement.impl.purge.TaskPurgeMaintenanceTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "purge_completed",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "completed_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "purge_active",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "active_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "save_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.taskmanagement.impl.service.TaskManagerAdapterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_taskmanagement_impl_service_task_manager_adapter_factor", 
  "responseClass" => "comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.taskmanagement.impl.service.TaskManagerAdapterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "adapter_condition",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "taskmanager_admingroups",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.threaddump.ThreadDumpCollector', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_threaddump_thread_dump_collector", 
  "responseClass" => "comAdobeGraniteThreaddumpThreadDumpCollectorInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.threaddump.ThreadDumpCollector", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_run_on",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_threaddump_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_threaddump_dumps_per_file",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_threaddump_enable_gzip_compression",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_threaddump_enable_directories_compression",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_threaddump_enable_j_stack",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_threaddump_max_backup_days",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_threaddump_backup_clean_trigger",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.translation.connector.msft.core.impl.MicrosoftTranslationServiceFactoryImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_translation_connector_msft_core_impl_microsoft_transl", 
  "responseClass" => "comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.translation.connector.msft.core.impl.MicrosoftTranslationServiceFactoryImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "translation_factory",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_connector_label",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_connector_attribution",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_connector_workspace_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_connector_subscription_key",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "language_map_location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "category_map_location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "retry_attempts",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "timeout_count",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.translation.core.impl.TranslationManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_translation_core_impl_translation_manager_impl", 
  "responseClass" => "comAdobeGraniteTranslationCoreImplTranslationManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.translation.core.impl.TranslationManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "default_connector_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_category",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.ui.clientlibs.impl.HtmlLibraryManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_ui_clientlibs_impl_html_library_manager_impl", 
  "responseClass" => "comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.ui.clientlibs.impl.HtmlLibraryManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_timing",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_debug_init_js",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_minify",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_debug",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_gzip",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_max_data_uri_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_maxage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_force_cq_url_info",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_defaultthemename",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_defaultuserthemename",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_clientmanager",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_path_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_excluded_path_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_processor_js",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_processor_css",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_longcache_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_longcache_format",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_use_file_system_output_cache",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_file_system_output_cache_location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_disable_replacement",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.console.frags.WorkflowWithdrawFeature', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_console_frags_workflow_withdraw_feature", 
  "responseClass" => "comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.console.frags.WorkflowWithdrawFeature", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.console.publish.WorkflowPublishEventService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_console_publish_workflow_publish_event_service", 
  "responseClass" => "comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.console.publish.WorkflowPublishEventService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflow_workflow_publish_event_service_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.core.jcr.WorkflowBucketManager', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_core_jcr_workflow_bucket_manager", 
  "responseClass" => "comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.core.jcr.WorkflowBucketManager", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "bucket_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.core.job.ExternalProcessJobHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_core_job_external_process_job_handler", 
  "responseClass" => "comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.core.job.ExternalProcessJobHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "default_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.core.job.JobHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_core_job_job_handler", 
  "responseClass" => "comAdobeGraniteWorkflowCoreJobJobHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.core.job.JobHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "job_topics",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "allow_self_process_termination",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.core.offloading.WorkflowOffloadingJobConsumer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_core_offloading_workflow_offloading_job_consum", 
  "responseClass" => "comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.core.offloading.WorkflowOffloadingJobConsumer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "job_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.core.PayloadMapCache', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_core_payload_map_cache", 
  "responseClass" => "comAdobeGraniteWorkflowCorePayloadMapCacheInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.core.PayloadMapCache", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "get_system_workflow_models",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "get_package_root_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.core.payloadmap.PayloadMoveListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_core_payloadmap_payload_move_listener", 
  "responseClass" => "comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.core.payloadmap.PayloadMoveListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "payload_move_white_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "payload_move_handle_from_workflow_process",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.core.WorkflowConfig', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_core_workflow_config", 
  "responseClass" => "comAdobeGraniteWorkflowCoreWorkflowConfigInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.core.WorkflowConfig", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_workflow_config_workflow_packages_root_path",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_workflow_config_workflow_process_legacy_mode",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_workflow_config_allow_locking",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.core.WorkflowSessionFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_core_workflow_session_factory", 
  "responseClass" => "comAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.core.WorkflowSessionFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflowinbox_sort_property_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflowinbox_sort_order",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_workflow_job_retry",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_workflow_superuser",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflow_inbox_query_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflow_admin_user_group_filter",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflow_enforce_workitem_assignee_permissions",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflow_enforce_workflow_initiator_permissions",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflow_inject_tenant_id_in_job_topics",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflow_max_purge_save_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "granite_workflow_max_purge_query_count",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.granite.workflow.purge.Scheduler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_granite_workflow_purge_scheduler", 
  "responseClass" => "comAdobeGraniteWorkflowPurgeSchedulerInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.granite.workflow.purge.Scheduler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_workflow_status",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_model_ids",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "scheduledpurge_daysold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.octopus.ncomm.bootstrap', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_octopus_ncomm_bootstrap", 
  "responseClass" => "comAdobeOctopusNcommBootstrapInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.octopus.ncomm.bootstrap", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_connections",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_requests",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_retries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "launch_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.social.integrations.livefyre.user.pingforpull.impl.PingPullServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_social_integrations_livefyre_user_pingforpull_impl_ping_pull_s", 
  "responseClass" => "comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.social.integrations.livefyre.user.pingforpull.impl.PingPullServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "communities_integration_livefyre_sling_event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.adobe.xmp.worker.files.ncomm.XMPFilesNComm', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_adobe_xmp_worker_files_ncomm_xmp_files_n_comm", 
  "responseClass" => "comAdobeXmpWorkerFilesNcommXMPFilesNCommInfo",
  "endpoint" => "/system/console/configMgr/com.adobe.xmp.worker.files.ncomm.XMPFilesNComm", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_connections",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_requests",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_timeout",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "log_dir",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.commons.datasource.jdbcpool.JdbcPoolService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_commons_datasource_jdbcpool_jdbc_pool_service", 
  "responseClass" => "comDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo",
  "endpoint" => "/system/console/configMgr/com.day.commons.datasource.jdbcpool.JdbcPoolService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "jdbc_driver_class",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jdbc_connection_uri",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jdbc_username",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jdbc_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jdbc_validation_query",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_readonly",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_autocommit",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pool_max_wait_msec",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "datasource_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "datasource_svc_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.commons.httpclient', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_commons_httpclient", 
  "responseClass" => "comDayCommonsHttpclientInfo",
  "endpoint" => "/system/console/configMgr/com.day.commons.httpclient", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "proxy_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_user",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_ntlm_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_ntlm_domain",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_exceptions",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.impl.StorePropertiesChangeListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_impl_store_properties_change_listener", 
  "responseClass" => "comDayCqAnalyticsImplStorePropertiesChangeListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.impl.StorePropertiesChangeListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_store_listener_additional_store_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.exporter.ClassificationsExporter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_sitecatalyst_impl_exporter_classifications_exporte", 
  "responseClass" => "comDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.exporter.ClassificationsExporter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "allowed_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_saint_exporter_pagesize",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.importer.ReportImporter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_sitecatalyst_impl_importer_report_importer", 
  "responseClass" => "comDayCqAnalyticsSitecatalystImplImporterReportImporterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.importer.ReportImporter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "report_fetch_attempts",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "report_fetch_delay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystAdapterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_sitecatalyst_impl_sitecatalyst_adapter_factory", 
  "responseClass" => "comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystAdapterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_adapterfactory_contextstores",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystHttpClientImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_sitecatalyst_impl_sitecatalyst_http_client_impl", 
  "responseClass" => "comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystHttpClientImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_sitecatalyst_service_datacenter_url",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "devhostnamepatterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "connection_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "socket_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.AccountOptionsUpdater', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_testandtarget_impl_account_options_updater", 
  "responseClass" => "comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.AccountOptionsUpdater", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_testandtarget_accountoptionsupdater_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.DeleteAuthorActivityListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_testandtarget_impl_delete_author_activity_listener", 
  "responseClass" => "comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.DeleteAuthorActivityListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_testandtarget_deleteauthoractivitylistener_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.PushAuthorCampaignPageListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_testandtarget_impl_push_author_campaign_page_listener", 
  "responseClass" => "comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.PushAuthorCampaignPageListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_testandtarget_pushauthorcampaignpagelistener_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.SegmentImporter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_testandtarget_impl_segment_importer", 
  "responseClass" => "comDayCqAnalyticsTestandtargetImplSegmentImporterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.SegmentImporter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_testandtarget_segmentimporter_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.service.WebServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_testandtarget_impl_service_web_service_impl", 
  "responseClass" => "comDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.service.WebServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "endpoint_uri",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "connection_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "socket_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.servlets.AdminServerServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_testandtarget_impl_servlets_admin_server_servlet", 
  "responseClass" => "comDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.servlets.AdminServerServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "testandtarget_endpoint_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.analytics.testandtarget.impl.TestandtargetHttpClientImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_analytics_testandtarget_impl_testandtarget_http_client_impl", 
  "responseClass" => "comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.TestandtargetHttpClientImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_testandtarget_api_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_testandtarget_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_testandtarget_sockettimeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_testandtarget_recommendations_url_replace",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_analytics_testandtarget_recommendations_url_replacewith",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.auth.impl.cug.CugSupportImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_auth_impl_cug_cug_support_impl", 
  "responseClass" => "comDayCqAuthImplCugCugSupportImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.auth.impl.cug.CugSupportImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cug_exempted_principals",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cug_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cug_principals_regex",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cug_principals_replacement",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.auth.impl.LoginSelectorHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_auth_impl_login_selector_handler", 
  "responseClass" => "comDayCqAuthImplLoginSelectorHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.auth.impl.LoginSelectorHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_loginselector_mappings",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "auth_loginselector_changepw_mappings",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "auth_loginselector_defaultloginpage",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_loginselector_defaultchangepwpage",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_loginselector_handle",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "auth_loginselector_handle_all_extensions",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.commons.impl.ExternalizerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_commons_impl_externalizer_impl", 
  "responseClass" => "comDayCqCommonsImplExternalizerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.commons.impl.ExternalizerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "externalizer_domains",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "externalizer_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "externalizer_contextpath",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "externalizer_encodedpath",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.commons.servlets.RootMappingServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_commons_servlets_root_mapping_servlet", 
  "responseClass" => "comDayCqCommonsServletsRootMappingServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.commons.servlets.RootMappingServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "rootmapping_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.compat.codeupgrade.impl.CodeUpgradeExecutionConditionChecker', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_compat_codeupgrade_impl_code_upgrade_execution_condition_checke", 
  "responseClass" => "comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.CodeUpgradeExecutionConditionChecker", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "codeupgradetasks",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "codeupgradetaskfilters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.compat.codeupgrade.impl.UpgradeTaskIgnoreList', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_compat_codeupgrade_impl_upgrade_task_ignore_list", 
  "responseClass" => "comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.UpgradeTaskIgnoreList", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "upgrade_task_ignore_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.compat.codeupgrade.impl.VersionRangeTaskIgnorelist', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_compat_codeupgrade_impl_version_range_task_ignorelist", 
  "responseClass" => "comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.VersionRangeTaskIgnorelist", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "effective_bundle_list_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.contentsync.impl.ContentSyncManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_contentsync_impl_content_sync_manager_impl", 
  "responseClass" => "comDayCqContentsyncImplContentSyncManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.contentsync.impl.ContentSyncManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "contentsync_fallback_authorizable",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "contentsync_fallback_updateuser",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.commons.handler.StandardImageHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_commons_handler_standard_image_handler", 
  "responseClass" => "comDayCqDamCommonsHandlerStandardImageHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.commons.handler.StandardImageHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "large_file_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "large_comment_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_enable_ext_meta_extraction",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.commons.metadata.XmpFilterBlackWhite', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_commons_metadata_xmp_filter_black_white", 
  "responseClass" => "comDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.commons.metadata.XmpFilterBlackWhite", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "xmp_filter_apply_whitelist",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "xmp_filter_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "xmp_filter_apply_blacklist",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "xmp_filter_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.commons.util.impl.AssetCacheImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_commons_util_impl_asset_cache_impl", 
  "responseClass" => "comDayCqDamCommonsUtilImplAssetCacheImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.commons.util.impl.AssetCacheImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "large_file_min",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "mime_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.annotation.pdf.AnnotationPdfConfig', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_annotation_pdf_annotation_pdf_config", 
  "responseClass" => "comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.annotation.pdf.AnnotationPdfConfig", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_document_width",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_document_height",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_document_padding_horizontal",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_document_padding_vertical",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_font_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_font_color",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_font_family",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_font_light",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_margin_text_image",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_min_image_height",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_review_status_width",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_review_status_color_approved",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_review_status_color_rejected",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_review_status_color_changes_requested",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_annotation_marker_width",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_annotation_pdf_asset_minheight",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.AssetMoveListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_asset_move_listener", 
  "responseClass" => "comDayCqDamCoreImplAssetMoveListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.AssetMoveListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.assethome.AssetHomePageConfiguration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_assethome_asset_home_page_configuration", 
  "responseClass" => "comDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.assethome.AssetHomePageConfiguration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "is_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.assetlinkshare.AdhocAssetShareProxyServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_assetlinkshare_adhoc_asset_share_proxy_servlet", 
  "responseClass" => "comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.assetlinkshare.AdhocAssetShareProxyServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_adhoc_asset_share_prezip_maxcontentsize",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.cache.CQBufferedImageCache', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_cache_cq_buffered_image_cache", 
  "responseClass" => "comDayCqDamCoreImplCacheCQBufferedImageCacheInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.cache.CQBufferedImageCache", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_image_cache_max_memory",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_image_cache_max_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_image_cache_max_dimension",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.DamChangeEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_dam_change_event_listener", 
  "responseClass" => "comDayCqDamCoreImplDamChangeEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.DamChangeEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "changeeventlistener_observed_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.DamEventPurgeService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_dam_event_purge_service", 
  "responseClass" => "comDayCqDamCoreImplDamEventPurgeServiceInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.DamEventPurgeService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_saved_activities",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "save_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_activity_purge",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "event_types",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.DamEventRecorderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_dam_event_recorder_impl", 
  "responseClass" => "comDayCqDamCoreImplDamEventRecorderImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.DamEventRecorderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "event_queue_length",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "eventrecorder_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "eventrecorder_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "eventrecorder_eventtypes",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.event.DamEventAuditListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_event_dam_event_audit_listener", 
  "responseClass" => "comDayCqDamCoreImplEventDamEventAuditListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.event.DamEventAuditListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.ExpiryNotificationJobImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_expiry_notification_job_impl", 
  "responseClass" => "comDayCqDamCoreImplExpiryNotificationJobImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.ExpiryNotificationJobImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_expiry_notification_scheduler_istimebased",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_expiry_notification_scheduler_timebased_rule",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_expiry_notification_scheduler_period_rule",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "send_email",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "asset_expired_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "prior_notification_seconds",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_expiry_notification_url_protocol",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.foldermetadataschema.FolderMetadataSchemaFeatureFlag', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_foldermetadataschema_folder_metadata_schema_feat", 
  "responseClass" => "comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.foldermetadataschema.FolderMetadataSchemaFeatureFlag", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "is_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.gfx.CommonsGfxRenderer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_gfx_commons_gfx_renderer", 
  "responseClass" => "comDayCqDamCoreImplGfxCommonsGfxRendererInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.gfx.CommonsGfxRenderer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "skip_bufferedcache",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.handler.EPSFormatHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_handler_eps_format_handler", 
  "responseClass" => "comDayCqDamCoreImplHandlerEPSFormatHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.handler.EPSFormatHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "mimetype",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.handler.IndesignFormatHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_handler_indesign_format_handler", 
  "responseClass" => "comDayCqDamCoreImplHandlerIndesignFormatHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.handler.IndesignFormatHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "mimetype",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.handler.JpegHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_handler_jpeg_handler", 
  "responseClass" => "comDayCqDamCoreImplHandlerJpegHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.handler.JpegHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_enable_ext_meta_extraction",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "large_file_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "large_comment_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.handler.xmp.NCommXMPHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_handler_xmp_n_comm_xmp_handler", 
  "responseClass" => "comDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.handler.xmp.NCommXMPHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "xmphandler_cq_formats",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetIndexUpdateMonitor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_jmx_asset_index_update_monitor", 
  "responseClass" => "comDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetIndexUpdateMonitor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "jmx_objectname",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "property_measure_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "property_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "property_max_wait_ms",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "property_max_rate",
      "description" => "",
      "dataType" => "Float",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fulltext_measure_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fulltext_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fulltext_max_wait_ms",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fulltext_max_rate",
      "description" => "",
      "dataType" => "Float",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetMigrationMBeanImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_jmx_asset_migration_m_bean_impl", 
  "responseClass" => "comDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetMigrationMBeanImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "jmx_objectname",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetUpdateMonitorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_jmx_asset_update_monitor_impl", 
  "responseClass" => "comDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetUpdateMonitorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "jmx_objectname",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "active",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataexport.AsyncMetadataExportConfigProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_jobs_metadataexport_async_metadata_export_config", 
  "responseClass" => "comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataexport.AsyncMetadataExportConfigProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "operation",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataimport.AsyncMetadataImportConfigProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_jobs_metadataimport_async_metadata_import_config", 
  "responseClass" => "comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataimport.AsyncMetadataImportConfigProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "operation",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "operation_icon",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "topic_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "email_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.lightbox.LightboxServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_lightbox_lightbox_servlet", 
  "responseClass" => "comDayCqDamCoreImplLightboxLightboxServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.lightbox.LightboxServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_paths",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_enable_anonymous",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.metadata.editor.SelectComponentHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_metadata_editor_select_component_handler", 
  "responseClass" => "comDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.metadata.editor.SelectComponentHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "granitedata",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.mimeType.AssetUploadRestrictionHelper', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_mime_type_asset_upload_restriction_helper", 
  "responseClass" => "comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.mimeType.AssetUploadRestrictionHelper", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_allow_all_mime",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_allowed_asset_mimes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.mimeType.DamMimeTypeServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_mime_type_dam_mime_type_service_impl", 
  "responseClass" => "comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.mimeType.DamMimeTypeServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_detect_asset_mime_from_content",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.MissingMetadataNotificationJob', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_missing_metadata_notification_job", 
  "responseClass" => "comDayCqDamCoreImplMissingMetadataNotificationJobInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.MissingMetadataNotificationJob", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_missingmetadata_notification_scheduler_istimebased",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_missingmetadata_notification_scheduler_timebased_rule",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_missingmetadata_notification_scheduler_period_rule",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_missingmetadata_notification_recipient",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.process.SendTransientWorkflowCompletedEmailProcess', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_process_send_transient_workflow_completed_email_pr", 
  "responseClass" => "comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.process.SendTransientWorkflowCompletedEmailProcess", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "process_label",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "notify_on_complete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.process.TextExtractionProcess', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_process_text_extraction_process", 
  "responseClass" => "comDayCqDamCoreImplProcessTextExtractionProcessInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.process.TextExtractionProcess", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "mime_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "max_extract",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.RenditionMakerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_rendition_maker_impl", 
  "responseClass" => "comDayCqDamCoreImplRenditionMakerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.RenditionMakerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "xmp_propagate",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "xmp_excludes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportExportService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_reports_report_export_service", 
  "responseClass" => "comDayCqDamCoreImplReportsReportExportServiceInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportExportService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "query_batch_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportPurgeService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_reports_report_purge_service", 
  "responseClass" => "comDayCqDamCoreImplReportsReportPurgeServiceInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportPurgeService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_saved_reports",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "time_duration",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_report_purge",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetDownloadServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_asset_download_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletAssetDownloadServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetDownloadServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetStatusServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_asset_status_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletAssetStatusServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetStatusServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_batch_status_maxassets",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetXMPSearchServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_asset_xmp_search_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletAssetXMPSearchServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetXMPSearchServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_batch_indesign_maxassets",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.BatchMetadataServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_batch_metadata_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletBatchMetadataServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.BatchMetadataServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_batch_metadata_asset_default",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_batch_metadata_collection_default",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_batch_metadata_maxresources",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.BinaryProviderServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_binary_provider_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletBinaryProviderServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.BinaryProviderServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_resource_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_drm_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_collection_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletCollectionServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_batch_collection_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_batch_collection_maxcollections",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionsServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_collections_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletCollectionsServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionsServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_batch_collections_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_batch_collections_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.CompanionServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_companion_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletCompanionServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CompanionServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "more_info",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "mntoverlaydamguicontentassetsmoreinfo_htmlpath",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.CreateAssetServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_create_asset_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletCreateAssetServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CreateAssetServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "detect_duplicate",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.DamContentDispositionFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_dam_content_disposition_filter", 
  "responseClass" => "comDayCqDamCoreImplServletDamContentDispositionFilterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.DamContentDispositionFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_mime_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_empty_mime",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.GuidLookupFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_guid_lookup_filter", 
  "responseClass" => "comDayCqDamCoreImplServletGuidLookupFilterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.GuidLookupFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_core_guidlookupfilter_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.HealthCheckServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_health_check_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletHealthCheckServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.HealthCheckServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_sync_workflow_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_sync_folder_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.MetadataGetServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_metadata_get_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletMetadataGetServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.MetadataGetServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_resource_types",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_extensions",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_selectors",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.MultipleLicenseAcceptServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_multiple_license_accept_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.MultipleLicenseAcceptServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_drm_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.servlet.ResourceCollectionServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_servlet_resource_collection_servlet", 
  "responseClass" => "comDayCqDamCoreImplServletResourceCollectionServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.ResourceCollectionServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_resource_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_selectors",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "download_config",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "view_selector",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "send_email",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.ui.preview.FolderPreviewUpdaterImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_ui_preview_folder_preview_updater_impl", 
  "responseClass" => "comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.ui.preview.FolderPreviewUpdaterImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "create_preview_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "update_preview_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "folder_preview_rendition_regex",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.impl.unzip.UnzipConfig', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_impl_unzip_unzip_config", 
  "responseClass" => "comDayCqDamCoreImplUnzipUnzipConfigInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.impl.unzip.UnzipConfig", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_unzip_maxuncompressedsize",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_config_unzip_encoding",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.process.ExifToolExtractMetadataProcess', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_process_exif_tool_extract_metadata_process", 
  "responseClass" => "comDayCqDamCoreProcessExifToolExtractMetadataProcessInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.process.ExifToolExtractMetadataProcess", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "process_label",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_enable_sha1",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.process.ExtractMetadataProcess', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_process_extract_metadata_process", 
  "responseClass" => "comDayCqDamCoreProcessExtractMetadataProcessInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.process.ExtractMetadataProcess", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "process_label",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_enable_sha1",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.core.process.MetadataProcessorProcess', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_core_process_metadata_processor_process", 
  "responseClass" => "comDayCqDamCoreProcessMetadataProcessorProcessInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.core.process.MetadataProcessorProcess", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "process_label",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_enable_sha1",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_metadata_xssprotected_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.handler.ffmpeg.LocatorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_handler_ffmpeg_locator_impl", 
  "responseClass" => "comDayCqDamHandlerFfmpegLocatorImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.handler.ffmpeg.LocatorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "executable_searchpath",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.handler.gibson.fontmanager.impl.FontManagerServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_handler_gibson_fontmanager_impl_font_manager_service_impl", 
  "responseClass" => "comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.handler.gibson.fontmanager.impl.FontManagerServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fontmgr_system_font_dir",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "fontmgr_adobe_font_dir",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fontmgr_customer_font_dir",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.handler.standard.pdf.PdfHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_handler_standard_pdf_pdf_handler", 
  "responseClass" => "comDayCqDamHandlerStandardPdfPdfHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.handler.standard.pdf.PdfHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "raster_annotation",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.handler.standard.ps.PostScriptHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_handler_standard_ps_post_script_handler", 
  "responseClass" => "comDayCqDamHandlerStandardPsPostScriptHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.handler.standard.ps.PostScriptHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "raster_annotation",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.handler.standard.psd.PsdHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_handler_standard_psd_psd_handler", 
  "responseClass" => "comDayCqDamHandlerStandardPsdPsdHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.handler.standard.psd.PsdHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "large_file_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.ids.impl.IDSJobProcessor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_ids_impl_ids_job_processor", 
  "responseClass" => "comDayCqDamIdsImplIDSJobProcessorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.ids.impl.IDSJobProcessor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enable_multisession",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ids_cc_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_retry",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_retry_scripterror",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "externalizer_domain_cqhost",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "externalizer_domain_http",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.ids.impl.IDSPoolManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_ids_impl_ids_pool_manager_impl", 
  "responseClass" => "comDayCqDamIdsImplIDSPoolManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.ids.impl.IDSPoolManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_errors_to_blacklist",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "retry_interval_to_whitelist",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "connect_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "socket_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "process_label",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "connection_use_max",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.indd.impl.handler.IndesignXMPHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_indd_impl_handler_indesign_xmp_handler", 
  "responseClass" => "comDayCqDamInddImplHandlerIndesignXMPHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.indd.impl.handler.IndesignXMPHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "process_label",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "extract_pages",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.indd.impl.servlet.SnippetCreationServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_indd_impl_servlet_snippet_creation_servlet", 
  "responseClass" => "comDayCqDamInddImplServletSnippetCreationServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.indd.impl.servlet.SnippetCreationServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "snippetcreation_maxcollections",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.indd.process.INDDMediaExtractProcess', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_indd_process_indd_media_extract_process", 
  "responseClass" => "comDayCqDamInddProcessINDDMediaExtractProcessInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.indd.process.INDDMediaExtractProcess", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "process_label",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_indd_pages_regex",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ids_job_decoupled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ids_job_workflow_model",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceDataHandlerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_performance_internal_asset_performance_data_handler_impl", 
  "responseClass" => "comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceDataHandlerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "batch_commit_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceReportSyncJob', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_performance_internal_asset_performance_report_sync_job", 
  "responseClass" => "comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceReportSyncJob", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.pim.impl.sourcing.upload.process.ProductAssetsUploadProcess', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_pim_impl_sourcing_upload_process_product_assets_upload_pro", 
  "responseClass" => "comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.pim.impl.sourcing.upload.process.ProductAssetsUploadProcess", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "delete_zip_file",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.S7damDynamicMediaConfigEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_s7dam_common_analytics_impl_s7dam_dynamic_media_config_even", 
  "responseClass" => "comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.S7damDynamicMediaConfigEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_s7dam_dynamicmediaconfigeventlistener_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.SiteCatalystReportRunner', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_s7dam_common_analytics_impl_site_catalyst_report_runner", 
  "responseClass" => "comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.SiteCatalystReportRunner", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_concurrent",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetCreateHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_s7dam_common_post_servlets_set_create_handler", 
  "responseClass" => "comDayCqDamS7damCommonPostServletsSetCreateHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetCreateHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_post_operation",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetModifyHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_s7dam_common_post_servlets_set_modify_handler", 
  "responseClass" => "comDayCqDamS7damCommonPostServletsSetModifyHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetModifyHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_post_operation",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.s7dam.common.process.VideoThumbnailDownloadProcess', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_s7dam_common_process_video_thumbnail_download_process", 
  "responseClass" => "comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.s7dam.common.process.VideoThumbnailDownloadProcess", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "process_label",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.s7dam.common.S7damDamChangeEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_s7dam_common_s7dam_dam_change_event_listener", 
  "responseClass" => "comDayCqDamS7damCommonS7damDamChangeEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.s7dam.common.S7damDamChangeEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_s7dam_damchangeeventlistener_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.s7dam.common.servlets.S7damProductInfoServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_s7dam_common_servlets_s7dam_product_info_servlet", 
  "responseClass" => "comDayCqDamS7damCommonServletsS7damProductInfoServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.s7dam.common.servlets.S7damProductInfoServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_paths",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.s7dam.common.video.impl.VideoProxyClientServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_s7dam_common_video_impl_video_proxy_client_service_impl", 
  "responseClass" => "comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.s7dam.common.video.impl.VideoProxyClientServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7APIClientImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_scene7_impl_scene7_api_client_impl", 
  "responseClass" => "comDayCqDamScene7ImplScene7APIClientImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7APIClientImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_scene7_apiclient_recordsperpage_nofilter_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_scene7_apiclient_recordsperpage_withfilter_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7AssetMimeTypeServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_scene7_impl_scene7_asset_mime_type_service_impl", 
  "responseClass" => "comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7AssetMimeTypeServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_scene7_assetmimetypeservice_mapping",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7ConfigurationEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_scene7_impl_scene7_configuration_event_listener", 
  "responseClass" => "comDayCqDamScene7ImplScene7ConfigurationEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7ConfigurationEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_scene7_configurationeventlistener_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7DamChangeEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_scene7_impl_scene7_dam_change_event_listener", 
  "responseClass" => "comDayCqDamScene7ImplScene7DamChangeEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7DamChangeEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_scene7_damchangeeventlistener_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_scene7_damchangeeventlistener_observed_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7FlashTemplatesServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_scene7_impl_scene7_flash_templates_service_impl", 
  "responseClass" => "comDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7FlashTemplatesServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scene7_flash_templates_rti",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scene7_flash_templates_rsi",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scene7_flash_templates_rb",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scene7_flash_templates_rurl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scene7_flash_template_url_format_parameter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7UploadServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_scene7_impl_scene7_upload_service_impl", 
  "responseClass" => "comDayCqDamScene7ImplScene7UploadServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7UploadServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_scene7_uploadservice_activejobtimeout_label",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_dam_scene7_uploadservice_connectionmaxperroute_label",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.stock.integration.impl.cache.StockCacheConfigurationServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_stock_integration_impl_cache_stock_cache_configuration_ser", 
  "responseClass" => "comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.stock.integration.impl.cache.StockCacheConfigurationServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "get_cache_expiration_unit",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "get_cache_expiration_value",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.stock.integration.impl.configuration.StockConfigurationImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_stock_integration_impl_configuration_stock_configuration", 
  "responseClass" => "comDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.stock.integration.impl.configuration.StockConfigurationImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "locale",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ims_config",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.dam.video.impl.servlet.VideoTestServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_dam_video_impl_servlet_video_test_servlet", 
  "responseClass" => "comDayCqDamVideoImplServletVideoTestServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.dam.video.impl.servlet.VideoTestServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.extwidget.servlets.ImageSpriteServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_extwidget_servlets_image_sprite_servlet", 
  "responseClass" => "comDayCqExtwidgetServletsImageSpriteServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.extwidget.servlets.ImageSpriteServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_width",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_height",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.image.internal.font.FontHelper', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_image_internal_font_font_helper", 
  "responseClass" => "comDayCqImageInternalFontFontHelperInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.image.internal.font.FontHelper", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "fontpath",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "oversampling_factor",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.jcrclustersupport.ClusterStartLevelController', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_jcrclustersupport_cluster_start_level_controller", 
  "responseClass" => "comDayCqJcrclustersupportClusterStartLevelControllerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.jcrclustersupport.ClusterStartLevelController", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cluster_level_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_master_level",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_slave_level",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mailer.DefaultMailService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mailer_default_mail_service", 
  "responseClass" => "comDayCqMailerDefaultMailServiceInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mailer.DefaultMailService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "smtp_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "smtp_port",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "smtp_user",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "smtp_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "from_address",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "smtp_ssl",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "smtp_starttls",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "debug_email",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mailer.impl.CqMailingService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mailer_impl_cq_mailing_service", 
  "responseClass" => "comDayCqMailerImplCqMailingServiceInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mailer.impl.CqMailingService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_recipient_count",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mailer.impl.email.CqEmailTemplateFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mailer_impl_email_cq_email_template_factory", 
  "responseClass" => "comDayCqMailerImplEmailCqEmailTemplateFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mailer.impl.email.CqEmailTemplateFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "mailer_email_charset",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mailer.impl.email.CqRetrieverTemplateFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mailer_impl_email_cq_retriever_template_factory", 
  "responseClass" => "comDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mailer.impl.email.CqRetrieverTemplateFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "mailer_email_embed",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "mailer_email_charset",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "mailer_email_retriever_user_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "mailer_email_retriever_user_pwd",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mcm.campaign.impl.IntegrationConfigImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mcm_campaign_impl_integration_config_impl", 
  "responseClass" => "comDayCqMcmCampaignImplIntegrationConfigImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mcm.campaign.impl.IntegrationConfigImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "aem_mcm_campaign_form_constraints",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "aem_mcm_campaign_public_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "aem_mcm_campaign_relaxed_ssl",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mcm.campaign.importer.PersonalizedTextHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mcm_campaign_importer_personalized_text_handler_factory", 
  "responseClass" => "comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mcm.campaign.importer.PersonalizedTextHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mcm.core.newsletter.NewsletterEmailServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mcm_core_newsletter_newsletter_email_service_impl", 
  "responseClass" => "comDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mcm.core.newsletter.NewsletterEmailServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "from_address",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sender_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_bounce_count",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mcm.impl.MCMConfiguration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mcm_impl_mcm_configuration", 
  "responseClass" => "comDayCqMcmImplMCMConfigurationInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mcm.impl.MCMConfiguration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "experience_indirection",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "touchpoint_indirection",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.ClickThroughComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mcm_landingpage_parser_taghandlers_cta_click_through_componen", 
  "responseClass" => "comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.ClickThroughComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "component_resource_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.GraphicalClickThroughComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mcm_landingpage_parser_taghandlers_cta_graphical_click_throug", 
  "responseClass" => "comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.GraphicalClickThroughComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "component_resource_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.LeadFormCTAComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mcm_landingpage_parser_taghandlers_cta_lead_form_cta_component", 
  "responseClass" => "comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.LeadFormCTAComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.MBoxExperienceTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mcm_landingpage_parser_taghandlers_mbox_m_box_experience_tag_ha", 
  "responseClass" => "comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.MBoxExperienceTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.TargetComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_mcm_landingpage_parser_taghandlers_mbox_target_component_tag_h", 
  "responseClass" => "comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.TargetComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "component_resource_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.notification.impl.NotificationServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_notification_impl_notification_service_impl", 
  "responseClass" => "comDayCqNotificationImplNotificationServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.notification.impl.NotificationServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.personalization.impl.servlets.TargetingConfigurationServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_personalization_impl_servlets_targeting_configuration_servlet", 
  "responseClass" => "comDayCqPersonalizationImplServletsTargetingConfigurationServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.personalization.impl.servlets.TargetingConfigurationServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "forcelocation",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollConfigImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_polling_importer_impl_managed_poll_config_impl", 
  "responseClass" => "comDayCqPollingImporterImplManagedPollConfigImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollConfigImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "reference",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "source",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "login",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollingImporterImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_polling_importer_impl_managed_polling_importer_impl", 
  "responseClass" => "comDayCqPollingImporterImplManagedPollingImporterImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollingImporterImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "importer_user",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.polling.importer.impl.PollingImporterImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_polling_importer_impl_polling_importer_impl", 
  "responseClass" => "comDayCqPollingImporterImplPollingImporterImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.polling.importer.impl.PollingImporterImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "importer_min_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "importer_user",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "exclude_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "include_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.audit.ReplicationEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_audit_replication_event_listener", 
  "responseClass" => "comDayCqReplicationAuditReplicationEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.audit.ReplicationEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.content.StaticContentBuilder', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_content_static_content_builder", 
  "responseClass" => "comDayCqReplicationContentStaticContentBuilderInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.content.StaticContentBuilder", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "port",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.impl.AgentManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_impl_agent_manager_impl", 
  "responseClass" => "comDayCqReplicationImplAgentManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.impl.AgentManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "job_topics",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_user_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "agent_provider_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.impl.content.durbo.BinaryLessContentBuilder', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_impl_content_durbo_binary_less_content_builder", 
  "responseClass" => "comDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.impl.content.durbo.BinaryLessContentBuilder", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "binary_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.impl.content.durbo.DurboImportConfigurationProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_impl_content_durbo_durbo_import_configuration_prov", 
  "responseClass" => "comDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.impl.content.durbo.DurboImportConfigurationProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "preserve_hierarchy_nodes",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ignore_versioning",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "import_acl",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "save_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "preserve_user_paths",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "preserve_uuid",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "preserve_uuid_nodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "preserve_uuid_subtrees",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "auto_commit",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.impl.ReplicationContentFactoryProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_impl_replication_content_factory_provider_impl", 
  "responseClass" => "comDayCqReplicationImplReplicationContentFactoryProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.impl.ReplicationContentFactoryProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "replication_content_use_file_storage",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "replication_content_max_commit_attempts",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.impl.ReplicationReceiverImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_impl_replication_receiver_impl", 
  "responseClass" => "comDayCqReplicationImplReplicationReceiverImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.impl.ReplicationReceiverImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "receiver_tmpfile_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "receiver_packages_use_install",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.impl.ReplicatorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_impl_replicator_impl", 
  "responseClass" => "comDayCqReplicationImplReplicatorImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.impl.ReplicatorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "distribute_events",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.impl.ReverseReplicator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_impl_reverse_replicator", 
  "responseClass" => "comDayCqReplicationImplReverseReplicatorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.impl.ReverseReplicator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.impl.transport.BinaryLessTransportHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_impl_transport_binary_less_transport_handler", 
  "responseClass" => "comDayCqReplicationImplTransportBinaryLessTransportHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.impl.transport.BinaryLessTransportHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "disabled_cipher_suites",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "enabled_cipher_suites",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.replication.impl.transport.Http', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_replication_impl_transport_http", 
  "responseClass" => "comDayCqReplicationImplTransportHttpInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.replication.impl.transport.Http", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "disabled_cipher_suites",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "enabled_cipher_suites",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.reporting.impl.cache.CacheImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_reporting_impl_cache_cache_impl", 
  "responseClass" => "comDayCqReportingImplCacheCacheImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.reporting.impl.cache.CacheImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "repcache_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repcache_ttl",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repcache_max",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.reporting.impl.ConfigServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_reporting_impl_config_service_impl", 
  "responseClass" => "comDayCqReportingImplConfigServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.reporting.impl.ConfigServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "repconf_timezone",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repconf_locale",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repconf_snapshots",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repconf_repdir",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repconf_hourofday",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repconf_minofhour",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repconf_maxrows",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repconf_fakedata",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repconf_snapshotuser",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repconf_enforcesnapshotuser",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.reporting.impl.RLogAnalyzer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_reporting_impl_r_log_analyzer", 
  "responseClass" => "comDayCqReportingImplRLogAnalyzerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.reporting.impl.RLogAnalyzer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "request_log_output",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_rewriter_linkchecker_impl_link_checker_impl", 
  "responseClass" => "comDayCqRewriterLinkcheckerImplLinkCheckerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_concurrent",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_bad_link_tolerance_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_check_override_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "service_cache_broken_internal_links",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_special_link_prefix",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "service_special_link_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_rewriter_linkchecker_impl_link_checker_task", 
  "responseClass" => "comDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_concurrent",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "good_link_test_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "bad_link_test_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_unused_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "connection_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTransformerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_rewriter_linkchecker_impl_link_checker_transformer_factory", 
  "responseClass" => "comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTransformerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "linkcheckertransformer_disable_rewriting",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "linkcheckertransformer_disable_checking",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "linkcheckertransformer_map_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "linkcheckertransformer_strict_extension_check",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "linkcheckertransformer_strip_htmlt_extension",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "linkcheckertransformer_rewrite_elements",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "linkcheckertransformer_strip_extension_path_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkInfoStorageImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_rewriter_linkchecker_impl_link_info_storage_impl", 
  "responseClass" => "comDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkInfoStorageImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_max_links_per_host",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_save_external_link_references",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.rewriter.processor.impl.HtmlParserFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_rewriter_processor_impl_html_parser_factory", 
  "responseClass" => "comDayCqRewriterProcessorImplHtmlParserFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.rewriter.processor.impl.HtmlParserFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "htmlparser_process_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "htmlparser_preserve_camel_case",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.search.impl.builder.QueryBuilderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_search_impl_builder_query_builder_impl", 
  "responseClass" => "comDayCqSearchImplBuilderQueryBuilderImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.search.impl.builder.QueryBuilderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "excerpt_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cache_max_entries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_entry_lifetime",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "xpath_union",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.search.suggest.impl.SuggestionIndexManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_search_suggest_impl_suggestion_index_manager_impl", 
  "responseClass" => "comDayCqSearchSuggestImplSuggestionIndexManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.search.suggest.impl.SuggestionIndexManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path_builder_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "suggest_basepath",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.searchpromote.impl.PublishSearchPromoteConfigHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_searchpromote_impl_publish_search_promote_config_handler", 
  "responseClass" => "comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.searchpromote.impl.PublishSearchPromoteConfigHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_searchpromote_confighandler_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.searchpromote.impl.SearchPromoteServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_searchpromote_impl_search_promote_service_impl", 
  "responseClass" => "comDayCqSearchpromoteImplSearchPromoteServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.searchpromote.impl.SearchPromoteServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_searchpromote_configuration_server_uri",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_searchpromote_configuration_environment",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "connection_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "socket_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.security.ACLSetup', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_security_acl_setup", 
  "responseClass" => "comDayCqSecurityACLSetupInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.security.ACLSetup", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_aclsetup_rules",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.statistics.impl.StatisticsServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_statistics_impl_statistics_service_impl", 
  "responseClass" => "comDayCqStatisticsImplStatisticsServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.statistics.impl.StatisticsServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_concurrent",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "workspace",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "keywords_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "async_entries",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.tagging.impl.JcrTagManagerFactoryImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_tagging_impl_jcr_tag_manager_factory_impl", 
  "responseClass" => "comDayCqTaggingImplJcrTagManagerFactoryImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.tagging.impl.JcrTagManagerFactoryImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "validation_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.tagging.impl.search.TagPredicateEvaluator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_tagging_impl_search_tag_predicate_evaluator", 
  "responseClass" => "comDayCqTaggingImplSearchTagPredicateEvaluatorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.tagging.impl.search.TagPredicateEvaluator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "ignore_path",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.tagging.impl.TagGarbageCollector', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_tagging_impl_tag_garbage_collector", 
  "responseClass" => "comDayCqTaggingImplTagGarbageCollectorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.tagging.impl.TagGarbageCollector", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.contentsync.impl.handler.PagesUpdateHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_contentsync_impl_handler_pages_update_handler", 
  "responseClass" => "comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.contentsync.impl.handler.PagesUpdateHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_pagesupdatehandler_imageresourcetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.contentsync.impl.rewriter.PathRewriterTransformerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_contentsync_impl_rewriter_path_rewriter_transformer_factor", 
  "responseClass" => "comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.contentsync.impl.rewriter.PathRewriterTransformerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_contentsync_pathrewritertransformer_mapping_links",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_contentsync_pathrewritertransformer_mapping_clientlibs",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_contentsync_pathrewritertransformer_mapping_images",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_contentsync_pathrewritertransformer_attribute_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_contentsync_pathrewritertransformer_clientlibrary_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_contentsync_pathrewritertransformer_clientlibrary_replace",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.AuthoringUIModeServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_authoring_ui_mode_service_impl", 
  "responseClass" => "comDayCqWcmCoreImplAuthoringUIModeServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.AuthoringUIModeServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "authoring_ui_mode_service_default",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.commands.WCMCommandServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_commands_wcm_command_servlet", 
  "responseClass" => "comDayCqWcmCoreImplCommandsWCMCommandServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.commands.WCMCommandServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "wcmcommandservlet_delete_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.devicedetection.DeviceIdentificationModeImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_devicedetection_device_identification_mode_impl", 
  "responseClass" => "comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.devicedetection.DeviceIdentificationModeImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "dim_default_mode",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dim_appcache_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.event.PageEventAuditListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_event_page_event_audit_listener", 
  "responseClass" => "comDayCqWcmCoreImplEventPageEventAuditListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.event.PageEventAuditListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "configured",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.event.PagePostProcessor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_event_page_post_processor", 
  "responseClass" => "comDayCqWcmCoreImplEventPagePostProcessorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.event.PagePostProcessor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.event.RepositoryChangeEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_event_repository_change_event_listener", 
  "responseClass" => "comDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.event.RepositoryChangeEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "excluded_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.event.TemplatePostProcessor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_event_template_post_processor", 
  "responseClass" => "comDayCqWcmCoreImplEventTemplatePostProcessorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.event.TemplatePostProcessor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "paths",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.LanguageManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_language_manager_impl", 
  "responseClass" => "comDayCqWcmCoreImplLanguageManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.LanguageManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "langmgr_list_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "langmgr_country_default",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.LinkCheckerConfigurationFactoryImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_link_checker_configuration_factory_impl", 
  "responseClass" => "comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.LinkCheckerConfigurationFactoryImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "link_expired_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_expired_remove",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_expired_suffix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_invalid_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_invalid_remove",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_invalid_suffix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_predated_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_predated_remove",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_predated_suffix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "link_wcmmodes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.page.PageInfoAggregatorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_page_page_info_aggregator_impl", 
  "responseClass" => "comDayCqWcmCoreImplPagePageInfoAggregatorImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.page.PageInfoAggregatorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "page_info_provider_property_regex_default",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "page_info_provider_property_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.page.PageManagerFactoryImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_page_page_manager_factory_impl", 
  "responseClass" => "comDayCqWcmCoreImplPagePageManagerFactoryImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.page.PageManagerFactoryImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "illegal_char_mapping",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "page_sub_tree_activation_check",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.references.content.ContentReferenceConfig', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_references_content_content_reference_config", 
  "responseClass" => "comDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.references.content.ContentReferenceConfig", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "content_reference_config_resource_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.AssetViewHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_servlets_contentfinder_asset_view_handler", 
  "responseClass" => "comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.AssetViewHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "dam_showexpired",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dam_showhidden",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tag_title_search",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "guess_total",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dam_expiry_property",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.connector.ConnectorViewHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_servlets_contentfinder_connector_connector_vie", 
  "responseClass" => "comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.connector.ConnectorViewHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "item_resource_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.PageViewHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_servlets_contentfinder_page_view_handler", 
  "responseClass" => "comDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.PageViewHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "guess_total",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tag_title_search",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.FindReplaceServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_servlets_find_replace_servlet", 
  "responseClass" => "comDayCqWcmCoreImplServletsFindReplaceServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.FindReplaceServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scope",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ReferenceSearchServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_servlets_reference_search_servlet", 
  "responseClass" => "comDayCqWcmCoreImplServletsReferenceSearchServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ReferenceSearchServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "referencesearchservlet_max_references_per_page",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "referencesearchservlet_max_pages",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ThumbnailServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_servlets_thumbnail_servlet", 
  "responseClass" => "comDayCqWcmCoreImplServletsThumbnailServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ThumbnailServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "workspace",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dimensions",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.utils.DefaultPageNameValidator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_utils_default_page_name_validator", 
  "responseClass" => "comDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.utils.DefaultPageNameValidator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "non_valid_chars",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.variants.PageVariantsProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_variants_page_variants_provider_impl", 
  "responseClass" => "comDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.variants.PageVariantsProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "default_externalizer_domain",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.VersionManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_version_manager_impl", 
  "responseClass" => "comDayCqWcmCoreImplVersionManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.VersionManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "versionmanager_create_version_on_activation",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "versionmanager_purging_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "versionmanager_purge_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "versionmanager_iv_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "versionmanager_max_age_days",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "versionmanager_max_number_versions",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "versionmanager_min_number_versions",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.VersionPurgeTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_version_purge_task", 
  "responseClass" => "comDayCqWcmCoreImplVersionPurgeTaskInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.VersionPurgeTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "versionpurge_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "versionpurge_recursive",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "versionpurge_max_versions",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "versionpurge_min_versions",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "versionpurge_max_age_days",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.warp.TimeWarpFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_warp_time_warp_filter", 
  "responseClass" => "comDayCqWcmCoreImplWarpTimeWarpFilterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.warp.TimeWarpFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "filter_order",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "filter_scope",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.WCMDebugFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_wcm_debug_filter", 
  "responseClass" => "comDayCqWcmCoreImplWCMDebugFilterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.WCMDebugFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "wcmdbgfilter_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "wcmdbgfilter_jsp_debug",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.impl.WCMDeveloperModeFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_impl_wcm_developer_mode_filter", 
  "responseClass" => "comDayCqWcmCoreImplWCMDeveloperModeFilterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.impl.WCMDeveloperModeFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "wcmdevmodefilter_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.mvt.MVTStatisticsImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_mvt_mvt_statistics_impl", 
  "responseClass" => "comDayCqWcmCoreMvtMVTStatisticsImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.mvt.MVTStatisticsImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "mvtstatistics_trackingurl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.stats.PageViewStatisticsImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_stats_page_view_statistics_impl", 
  "responseClass" => "comDayCqWcmCoreStatsPageViewStatisticsImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.stats.PageViewStatisticsImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "pageviewstatistics_trackingurl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pageviewstatistics_trackingscript_enabled",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.core.WCMRequestFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_core_wcm_request_filter", 
  "responseClass" => "comDayCqWcmCoreWCMRequestFilterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.core.WCMRequestFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "wcmfilter_mode",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.DesignPackageImporter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_design_package_importer", 
  "responseClass" => "comDayCqWcmDesignimporterDesignPackageImporterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.DesignPackageImporter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "extract_filter",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasBuilderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_impl_canvas_builder_impl", 
  "responseClass" => "comDayCqWcmDesignimporterImplCanvasBuilderImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasBuilderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "filepattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "build_page_nodes",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "build_client_libs",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "build_canvas_component",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasPageDeleteHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_impl_canvas_page_delete_handler", 
  "responseClass" => "comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasPageDeleteHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "min_thread_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_thread_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.impl.EntryPreprocessorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_impl_entry_preprocessor_impl", 
  "responseClass" => "comDayCqWcmDesignimporterImplEntryPreprocessorImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.impl.EntryPreprocessorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "search_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "replace_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.impl.MobileCanvasBuilderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_impl_mobile_canvas_builder_impl", 
  "responseClass" => "comDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.impl.MobileCanvasBuilderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "filepattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "device_groups",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "build_page_nodes",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "build_client_libs",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "build_canvas_component",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.CanvasComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_canvas_compone", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.CanvasComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_default_compon", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_default_tag_han", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.HeadTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_head_tag_handle", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.HeadTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.IFrameTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_i_frame_tag_hand", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.IFrameTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImageComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_image_componen", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImageComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "component_resource_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImgTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_img_tag_handler", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImgTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.InlineScriptTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_inline_script_t", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.InlineScriptTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.LinkTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_link_tag_handle", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.LinkTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.MetaTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_meta_tag_handle", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.MetaTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.NonScriptTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_non_script_tag_h", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.NonScriptTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ParsysComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_parsys_compone", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ParsysComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "component_resource_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ScriptTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_script_tag_hand", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ScriptTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.StyleTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_style_tag_handl", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.StyleTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TextComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_text_component", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TextComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "component_resource_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleComponentTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_title_componen", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleComponentTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "component_resource_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleTagHandlerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_designimporter_parser_taghandlers_factory_title_tag_handl", 
  "responseClass" => "comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleTagHandlerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tagpattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormChooserServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_forms_impl_form_chooser_servlet", 
  "responseClass" => "comDayCqWcmFoundationFormsImplFormChooserServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormChooserServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_resource_types",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_selectors",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "forms_formchooserservlet_advansesearch_require",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormParagraphPostProcessor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_forms_impl_form_paragraph_post_processor", 
  "responseClass" => "comDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormParagraphPostProcessor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "forms_formparagraphpostprocessor_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "forms_formparagraphpostprocessor_formresourcetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormsHandlingServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_forms_impl_forms_handling_servlet", 
  "responseClass" => "comDayCqWcmFoundationFormsImplFormsHandlingServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormsHandlingServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name_whitelist",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "allow_expressions",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.MailServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_forms_impl_mail_servlet", 
  "responseClass" => "comDayCqWcmFoundationFormsImplMailServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.MailServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_resource_types",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_selectors",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resource_blacklist",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.impl.AdaptiveImageComponentServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_impl_adaptive_image_component_servlet", 
  "responseClass" => "comDayCqWcmFoundationImplAdaptiveImageComponentServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.impl.AdaptiveImageComponentServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "adapt_supported_widths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.impl.HTTPAuthHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_impl_http_auth_handler", 
  "responseClass" => "comDayCqWcmFoundationImplHTTPAuthHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.impl.HTTPAuthHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_http_nologin",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_http_realm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_default_loginpage",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_cred_form",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "auth_cred_utf8",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.impl.PageImpressionsTracker', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_impl_page_impressions_tracker", 
  "responseClass" => "comDayCqWcmFoundationImplPageImpressionsTrackerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.impl.PageImpressionsTracker", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_auth_requirements",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.impl.PageRedirectServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_impl_page_redirect_servlet", 
  "responseClass" => "comDayCqWcmFoundationImplPageRedirectServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.impl.PageRedirectServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "excluded_resource_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.security.impl.DefaultAttachmentTypeBlacklistService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_security_impl_default_attachment_type_blacklist", 
  "responseClass" => "comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.security.impl.DefaultAttachmentTypeBlacklistService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "default_attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "baseline_attachment_type_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.foundation.security.impl.SaferSlingPostValidatorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_foundation_security_impl_safer_sling_post_validator_impl", 
  "responseClass" => "comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.foundation.security.impl.SaferSlingPostValidatorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "parameter_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "parameter_whitelist_prefixes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "binary_parameter_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "modifier_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "operation_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "operation_whitelist_prefixes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "typehint_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resourcetype_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.mobile.core.impl.device.DeviceInfoTransformerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_mobile_core_impl_device_device_info_transformer_factory", 
  "responseClass" => "comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.mobile.core.impl.device.DeviceInfoTransformerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "device_info_transformer_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "device_info_transformer_css_style",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.mobile.core.impl.redirect.RedirectFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_mobile_core_impl_redirect_redirect_filter", 
  "responseClass" => "comDayCqWcmMobileCoreImplRedirectRedirectFilterInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.mobile.core.impl.redirect.RedirectFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "redirect_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "redirect_stats_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "redirect_extensions",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "redirect_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentCopyActionFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_actions_content_copy_action_factory", 
  "responseClass" => "comDayCqWcmMsmImplActionsContentCopyActionFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentCopyActionFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludednodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedparagraphitems",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedprops",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "contentcopyaction_order_style",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentDeleteActionFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_actions_content_delete_action_factory", 
  "responseClass" => "comDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentDeleteActionFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludednodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedparagraphitems",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedprops",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentUpdateActionFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_actions_content_update_action_factory", 
  "responseClass" => "comDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentUpdateActionFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludednodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedparagraphitems",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedprops",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_ignored_mixin",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.OrderChildrenActionFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_actions_order_children_action_factory", 
  "responseClass" => "comDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.OrderChildrenActionFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludednodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedparagraphitems",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedprops",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.PageMoveActionFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_actions_page_move_action_factory", 
  "responseClass" => "comDayCqWcmMsmImplActionsPageMoveActionFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.PageMoveActionFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludednodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedparagraphitems",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedprops",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_impl_actions_pagemove_prop_reference_update",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ReferencesUpdateActionFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_actions_references_update_action_factory", 
  "responseClass" => "comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ReferencesUpdateActionFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludednodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedparagraphitems",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedprops",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_impl_action_referencesupdate_prop_update_nested",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.actions.VersionCopyActionFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_actions_version_copy_action_factory", 
  "responseClass" => "comDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.VersionCopyActionFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludednodetypes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedparagraphitems",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_msm_action_excludedprops",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.LiveRelationshipManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_live_relationship_manager_impl", 
  "responseClass" => "comDayCqWcmMsmImplLiveRelationshipManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.LiveRelationshipManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "liverelationshipmgr_relationsconfig_default",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.RolloutManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_rollout_manager_impl", 
  "responseClass" => "comDayCqWcmMsmImplRolloutManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.RolloutManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "rolloutmgr_excludedprops_default",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "rolloutmgr_excludedparagraphprops_default",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "rolloutmgr_excludednodetypes_default",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "rolloutmgr_threadpool_maxsize",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "rolloutmgr_threadpool_maxshutdowntime",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "rolloutmgr_threadpool_priority",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "rolloutmgr_commit_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "rolloutmgr_conflicthandling_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.msm.impl.servlets.AuditLogServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_msm_impl_servlets_audit_log_servlet", 
  "responseClass" => "comDayCqWcmMsmImplServletsAuditLogServletInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.msm.impl.servlets.AuditLogServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "auditlogservlet_default_events_count",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auditlogservlet_default_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.notification.email.impl.EmailChannel', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_notification_email_impl_email_channel", 
  "responseClass" => "comDayCqWcmNotificationEmailImplEmailChannelInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.notification.email.impl.EmailChannel", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "email_from",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.notification.impl.NotificationManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_notification_impl_notification_manager_impl", 
  "responseClass" => "comDayCqWcmNotificationImplNotificationManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.notification.impl.NotificationManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_topics",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.scripting.impl.BVPManager', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_scripting_impl_bvp_manager", 
  "responseClass" => "comDayCqWcmScriptingImplBVPManagerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.scripting.impl.BVPManager", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "com_day_cq_wcm_scripting_bvp_script_engines",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.undo.UndoConfig', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_undo_undo_config", 
  "responseClass" => "comDayCqWcmUndoUndoConfigInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.undo.UndoConfig", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_undo_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_undo_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_undo_validity",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_undo_steps",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_undo_persistence",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_undo_persistence_mode",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_undo_markermode",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_undo_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_undo_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.webservicesupport.impl.ReplicationEventListener', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_webservicesupport_impl_replication_event_listener", 
  "responseClass" => "comDayCqWcmWebservicesupportImplReplicationEventListenerInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.webservicesupport.impl.ReplicationEventListener", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "flush_agents",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.workflow.impl.WcmWorkflowServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_workflow_impl_wcm_workflow_service_impl", 
  "responseClass" => "comDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.workflow.impl.WcmWorkflowServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "event_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "min_thread_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_thread_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_workflow_terminate_on_activate",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cq_wcm_worklfow_terminate_exclusion_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.wcm.workflow.impl.WorkflowPackageInfoProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_wcm_workflow_impl_workflow_package_info_provider", 
  "responseClass" => "comDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.wcm.workflow.impl.WorkflowPackageInfoProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "workflowpackageinfoprovider_filter",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "workflowpackageinfoprovider_filter_rootpath",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.widget.impl.HtmlLibraryManagerImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_widget_impl_html_library_manager_impl", 
  "responseClass" => "comDayCqWidgetImplHtmlLibraryManagerImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.widget.impl.HtmlLibraryManagerImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_clientmanager",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_debug",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_debug_console",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_debug_init_js",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_defaultthemename",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_defaultuserthemename",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_firebuglite_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_force_cq_url_info",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_gzip",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_maxage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_max_data_uri_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_minify",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_path_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "htmllibmanager_timing",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.widget.impl.WidgetExtensionProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_widget_impl_widget_extension_provider_impl", 
  "responseClass" => "comDayCqWidgetImplWidgetExtensionProviderImplInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.widget.impl.WidgetExtensionProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "extendable_widgets",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "widgetextensionprovider_debug",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.workflow.impl.email.EMailNotificationService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_workflow_impl_email_e_mail_notification_service", 
  "responseClass" => "comDayCqWorkflowImplEmailEMailNotificationServiceInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.workflow.impl.email.EMailNotificationService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "from_address",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "host_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "notify_onabort",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "notify_oncomplete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "notify_oncontainercomplete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "notify_useronly",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.cq.workflow.impl.email.TaskEMailNotificationService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_cq_workflow_impl_email_task_e_mail_notification_service", 
  "responseClass" => "comDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo",
  "endpoint" => "/system/console/configMgr/com.day.cq.workflow.impl.email.TaskEMailNotificationService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "notify_onupdate",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "notify_oncomplete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.crx.security.token.impl.impl.TokenAuthenticationHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_crx_security_token_impl_impl_token_authentication_handler", 
  "responseClass" => "comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo",
  "endpoint" => "/system/console/configMgr/com.day.crx.security.token.impl.impl.TokenAuthenticationHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "token_required_attr",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "token_alternate_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "token_encapsulated",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "skip_token_refresh",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/com.day.crx.security.token.impl.TokenCleanupTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "com_day_crx_security_token_impl_token_cleanup_task", 
  "responseClass" => "comDayCrxSecurityTokenImplTokenCleanupTaskInfo",
  "endpoint" => "/system/console/configMgr/com.day.crx.security.token.impl.TokenCleanupTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enable_token_cleanup_task",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "batch_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/Guide Localization Service', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "guide_localization_service", 
  "responseClass" => "guideLocalizationServiceInfo",
  "endpoint" => "/system/console/configMgr/Guide Localization Service", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "supported_locales",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "localizable_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/MessagingUserComponentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "messaging_user_component_factory", 
  "responseClass" => "MessagingUserComponentFactoryInfo",
  "endpoint" => "/system/console/configMgr/MessagingUserComponentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.aries.jmx.framework.StateConfig', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_aries_jmx_framework_state_config", 
  "responseClass" => "orgApacheAriesJmxFrameworkStateConfigInfo",
  "endpoint" => "/system/console/configMgr/org.apache.aries.jmx.framework.StateConfig", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "attribute_change_notification_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.eventadmin.impl.EventAdmin', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_eventadmin_impl_event_admin", 
  "responseClass" => "orgApacheFelixEventadminImplEventAdminInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.eventadmin.impl.EventAdmin", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_eventadmin_thread_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_eventadmin_async_to_sync_thread_ratio",
      "description" => "",
      "dataType" => "Float",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_eventadmin_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_eventadmin_require_topic",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_eventadmin_ignore_timeout",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_eventadmin_ignore_topic",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.http', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_http", 
  "responseClass" => "orgApacheFelixHttpInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.http", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_osgi_service_http_port",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_osgi_service_http_port_secure",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_keystore",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_keystore_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_keystore_key_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_truststore",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_truststore_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_clientcertificate",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_context_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_mbeans",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_session_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_jetty_threadpool_max",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_jetty_acceptors",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_jetty_selectors",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_jetty_header_buffer_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_jetty_request_buffer_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_jetty_response_buffer_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_jetty_max_form_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_path_exclusions",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_jetty_ciphersuites_excluded",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_jetty_ciphersuites_included",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_jetty_send_server_header",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_jetty_protocols_included",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_jetty_protocols_excluded",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_proxy_load_balancer_connection_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_jetty_renegotiate_allowed",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_jetty_session_cookie_http_only",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_https_jetty_session_cookie_secure",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_eclipse_jetty_servlet_session_id_path_parameter_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_eclipse_jetty_servlet_checking_remote_session_id_encoding",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_eclipse_jetty_servlet_session_cookie",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_eclipse_jetty_servlet_session_domain",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_eclipse_jetty_servlet_session_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_eclipse_jetty_servlet_max_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gziphandler_enable",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_min_gzip_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_compression_level",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_inflate_buffer_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_sync_flush",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_excluded_user_agents",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_included_methods",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_excluded_methods",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_included_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_excluded_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_included_mime_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_jetty_gzip_excluded_mime_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_session_invalidate",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_felix_http_session_uniqueid",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.http.sslfilter.SslFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_http_sslfilter_ssl_filter", 
  "responseClass" => "orgApacheFelixHttpSslfilterSslFilterInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.http.sslfilter.SslFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "ssl_forward_header",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ssl_forward_value",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ssl_forward_cert_header",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "rewrite_absolute_urls",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.jaas.Configuration.factory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_jaas_configuration_factory", 
  "responseClass" => "orgApacheFelixJaasConfigurationFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.jaas.Configuration.factory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "jaas_control_flag",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_realm_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_classname",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_options",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.jaas.ConfigurationSpi', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_jaas_configuration_spi", 
  "responseClass" => "orgApacheFelixJaasConfigurationSpiInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.jaas.ConfigurationSpi", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "jaas_default_realm_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_config_provider_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_global_config_policy",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.scr.ScrService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_scr_scr_service", 
  "responseClass" => "orgApacheFelixScrScrServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.scr.ScrService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "ds_loglevel",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ds_factory_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ds_delayed_keep_instances",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ds_lock_timeout_milliseconds",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ds_stop_timeout_milliseconds",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ds_global_extender",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.systemready.impl.ComponentsCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_systemready_impl_components_check", 
  "responseClass" => "orgApacheFelixSystemreadyImplComponentsCheckInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.systemready.impl.ComponentsCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "components_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.systemready.impl.FrameworkStartCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_systemready_impl_framework_start_check", 
  "responseClass" => "orgApacheFelixSystemreadyImplFrameworkStartCheckInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.systemready.impl.FrameworkStartCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "target_start_level",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "target_start_level_prop_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.systemready.impl.ServicesCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_systemready_impl_services_check", 
  "responseClass" => "orgApacheFelixSystemreadyImplServicesCheckInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.systemready.impl.ServicesCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "services_list",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemAliveServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_systemready_impl_servlet_system_alive_servlet", 
  "responseClass" => "orgApacheFelixSystemreadyImplServletSystemAliveServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemAliveServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_servlet_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_context_select",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemReadyServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_systemready_impl_servlet_system_ready_servlet", 
  "responseClass" => "orgApacheFelixSystemreadyImplServletSystemReadyServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemReadyServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_servlet_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_context_select",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.systemready.SystemReadyMonitor', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_systemready_system_ready_monitor", 
  "responseClass" => "orgApacheFelixSystemreadySystemReadyMonitorInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.systemready.SystemReadyMonitor", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "poll_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.webconsole.internal.servlet.OsgiManager', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_webconsole_internal_servlet_osgi_manager", 
  "responseClass" => "orgApacheFelixWebconsoleInternalServletOsgiManagerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.webconsole.internal.servlet.OsgiManager", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "manager_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "http_service_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_render",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "realm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "username",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "category",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "locale",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "loglevel",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "plugins",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.webconsole.plugins.event.internal.PluginServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_webconsole_plugins_event_internal_plugin_servlet", 
  "responseClass" => "orgApacheFelixWebconsolePluginsEventInternalPluginServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.webconsole.plugins.event.internal.PluginServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.felix.webconsole.plugins.memoryusage.internal.MemoryUsageConfigurator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_felix_webconsole_plugins_memoryusage_internal_memory_usage_co", 
  "responseClass" => "orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo",
  "endpoint" => "/system/console/configMgr/org.apache.felix.webconsole.plugins.memoryusage.internal.MemoryUsageConfigurator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "felix_memoryusage_dump_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "felix_memoryusage_dump_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "felix_memoryusage_dump_location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.http.proxyconfigurator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_http_proxyconfigurator", 
  "responseClass" => "orgApacheHttpProxyconfiguratorInfo",
  "endpoint" => "/system/console/configMgr/org.apache.http.proxyconfigurator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "proxy_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_port",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_user",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "proxy_exceptions",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreTextProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_blob_datastore_data_store_text_provider", 
  "responseClass" => "orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreTextProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "dir",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStore', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_blob_datastore_file_data_store", 
  "responseClass" => "orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStore", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_document_document_node_store_service", 
  "responseClass" => "orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "mongouri",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "db",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "socket_keep_alive",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "node_cache_percentage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "prev_doc_cache_percentage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "children_cache_percentage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "diff_cache_percentage",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_segment_count",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_stack_move_distance",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "blob_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "persistent_cache",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "journal_cache",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "custom_blob_store",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "journal_gc_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "journal_gc_max_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "prefetch_external_changes",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "role",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "version_gc_max_age_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "version_gc_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "version_gc_time_limit_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "blob_gc_max_age_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "blob_track_snapshot_interval_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repository_home",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_replication_lag_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "document_store_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "bundling_disabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "update_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "persistent_cache_includes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "lease_check_mode",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreServicePreset', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_document_document_node_store_service_pre", 
  "responseClass" => "orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreServicePreset", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "persistent_cache_includes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.secondary.SecondaryStoreCacheService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_document_secondary_secondary_store_cac", 
  "responseClass" => "orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.secondary.SecondaryStoreCacheService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "included_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "enable_async_observer",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "observer_queue_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.AsyncIndexerService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_index_async_indexer_service", 
  "responseClass" => "orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.AsyncIndexerService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "async_configs",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "lease_time_out_minutes",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "failing_index_timeout_seconds",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "error_warn_interval_seconds",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_index_lucene_lucene_index_provider_serv", 
  "responseClass" => "orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "disabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "debug",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "local_index_dir",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_open_index_async",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "thread_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "prefetch_index_files",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "extracted_text_cache_size_in_mb",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "extracted_text_cache_expiry_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "always_use_pre_extracted_cache",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "boolean_clause_limit",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_hybrid_indexing",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hybrid_queue_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "disable_stored_index_definition",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "deleted_blobs_collection_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "prop_index_cleaner_interval_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_single_blob_index_files",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_index_solr_osgi_embedded_solr_server_co", 
  "responseClass" => "orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "solr_home_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_core_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_index_solr_osgi_node_state_solr_servers", 
  "responseClass" => "orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_index_solr_osgi_oak_solr_configuration", 
  "responseClass" => "orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path_desc_field",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path_child_field",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path_parent_field",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path_exact_field",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "catch_all_field",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "collapsed_path_field",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path_depth_field",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "commit_policy",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "rows",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path_restrictions",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "property_restrictions",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "primarytypes_restrictions",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ignored_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "used_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "type_mappings",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "property_mappings",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "collapse_jcrcontent_nodes",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_index_solr_osgi_remote_solr_server_conf", 
  "responseClass" => "orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "solr_http_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_zk_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_collection",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_socket_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_connection_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_shards_no",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_replication_factor",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "solr_conf_dir",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_index_solr_osgi_solr_query_index_provid", 
  "responseClass" => "orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "query_aggregation",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_index_solr_osgi_solr_server_provider_se", 
  "responseClass" => "orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "server_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.metric.StatisticsProviderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_metric_statistics_provider_factory", 
  "responseClass" => "orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.metric.StatisticsProviderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "provider_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.plugins.observation.ChangeCollectorProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_plugins_observation_change_collector_provider", 
  "responseClass" => "orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.observation.ChangeCollectorProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_items",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_path_depth",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.query.QueryEngineSettingsService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_query_query_engine_settings_service", 
  "responseClass" => "orgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.query.QueryEngineSettingsService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "query_limit_in_memory",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "query_limit_reads",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "query_fail_traversal",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fast_query_size",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.AuthenticationConfigurationImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_security_authentication_authentication_config", 
  "responseClass" => "orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.AuthenticationConfigurationImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_jackrabbit_oak_authentication_app_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_jackrabbit_oak_authentication_config_spi_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_security_authentication_ldap_impl_ldap_identi", 
  "responseClass" => "orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "provider_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "host_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "host_port",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "host_ssl",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "host_tls",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "host_no_cert_check",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "bind_dn",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "bind_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "search_timeout",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "admin_pool_max_active",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "admin_pool_lookup_on_validate",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_pool_max_active",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_pool_lookup_on_validate",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_base_dn",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_objectclass",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "user_id_attribute",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_extra_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_make_dn_path",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group_base_dn",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group_objectclass",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "group_name_attribute",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group_extra_filter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group_make_dn_path",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group_member_attribute",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "use_uid_for_ext_id",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "customattributes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_security_authentication_token_token_configura", 
  "responseClass" => "orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "token_expiration",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "token_length",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "token_refresh",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "token_cleanup_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password_hash_algorithm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password_hash_iterations",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password_salt_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.security.authorization.AuthorizationConfigurationImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_security_authorization_authorization_configur", 
  "responseClass" => "orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.security.authorization.AuthorizationConfigurationImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "permissions_jr2",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "import_behavior",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "read_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "administrative_principals",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "configuration_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.security.internal.SecurityProviderRegistration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_security_internal_security_provider_registrati", 
  "responseClass" => "orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.security.internal.SecurityProviderRegistration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "required_service_pids",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "authorization_composition_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.security.user.RandomAuthorizableNodeName', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_security_user_random_authorizable_node_name", 
  "responseClass" => "orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.security.user.RandomAuthorizableNodeName", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "length",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.security.user.UserConfigurationImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_security_user_user_configuration_impl", 
  "responseClass" => "orgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.security.user.UserConfigurationImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "users_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "groups_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "system_relative_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_depth",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "import_behavior",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password_hash_algorithm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password_hash_iterations",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password_salt_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "omit_admin_pw",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "support_auto_save",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password_max_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "initial_password_change",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password_history_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password_expiry_for_admin",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cache_expiration",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_rfc7613_usercase_mapped_profile",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.segment.azure.AzureSegmentStoreService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_segment_azure_azure_segment_store_service", 
  "responseClass" => "orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.segment.azure.AzureSegmentStoreService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "account_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "container_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "access_key",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "root_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "connection_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_segment_segment_node_store_factory", 
  "responseClass" => "orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "repository_home",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tarmk_mode",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tarmk_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "segment_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "string_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "template_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "string_deduplication_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "template_deduplication_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "node_deduplication_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pause_compaction",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_retry_count",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_force_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_size_delta_estimation",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_disable_estimation",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_retained_generations",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_memory_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_progress_log",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "standby",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "custom_blob_store",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "custom_segment_store",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "split_persistence",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repository_backup_dir",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "blob_gc_max_age_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "blob_track_snapshot_interval_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "role",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "register_descriptors",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dispatch_changes",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreMonitorService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_segment_segment_node_store_monitor_service", 
  "responseClass" => "orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreMonitorService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "commits_tracker_writer_groups",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_segment_segment_node_store_service", 
  "responseClass" => "orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "repository_home",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tarmk_mode",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tarmk_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "segment_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "string_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "template_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "string_deduplication_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "template_deduplication_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "node_deduplication_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pause_compaction",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_retry_count",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_force_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_size_delta_estimation",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_disable_estimation",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_retained_generations",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_memory_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compaction_progress_log",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "standby",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "custom_blob_store",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "custom_segment_store",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "split_persistence",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "repository_backup_dir",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "blob_gc_max_age_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "blob_track_snapshot_interval_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.segment.standby.store.StandbyStoreService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_segment_standby_store_standby_store_service", 
  "responseClass" => "orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.segment.standby.store.StandbyStoreService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_installer_configuration_persist",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "mode",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "port",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "primary_host",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "primary_allowed_client_ip_ranges",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "secure",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "standby_readtimeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "standby_autoclean",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.DefaultSyncHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_spi_security_authentication_external_impl_de", 
  "responseClass" => "orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.DefaultSyncHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "handler_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_expiration_time",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_auto_membership",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "user_property_mapping",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "user_path_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_membership_exp_time",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_membership_nesting_depth",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_dynamic_membership",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_disable_missing",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group_expiration_time",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "group_auto_membership",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "group_property_mapping",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "group_path_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_rfc7613_usercase_mapped_profile",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.ExternalLoginModuleFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_spi_security_authentication_external_impl_ex", 
  "responseClass" => "orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.ExternalLoginModuleFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "jaas_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_control_flag",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jaas_realm_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "idp_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sync_handler_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.principal.ExternalPrincipalConfiguration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_spi_security_authentication_external_impl_pr", 
  "responseClass" => "orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.principal.ExternalPrincipalConfiguration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "protect_external_id",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugConfiguration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_spi_security_authorization_cug_impl_cug_confi", 
  "responseClass" => "orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugConfiguration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "cug_supported_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "cug_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "configuration_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugExcludeImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_spi_security_authorization_cug_impl_cug_exclu", 
  "responseClass" => "orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugExcludeImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "principal_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_oak_spi_security_user_action_default_authorizable", 
  "responseClass" => "orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled_actions",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_privilege_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "group_privilege_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "constraint",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.vault.packaging.impl.PackagingImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_vault_packaging_impl_packaging_impl", 
  "responseClass" => "orgApacheJackrabbitVaultPackagingImplPackagingImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.vault.packaging.impl.PackagingImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "package_roots",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.jackrabbit.vault.packaging.registry.impl.FSPackageRegistry', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_jackrabbit_vault_packaging_registry_impl_fs_package_registry", 
  "responseClass" => "orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.jackrabbit.vault.packaging.registry.impl.FSPackageRegistry", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "home_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.auth.core.impl.LogoutServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_auth_core_impl_logout_servlet", 
  "responseClass" => "orgApacheSlingAuthCoreImplLogoutServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.auth.core.impl.LogoutServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_methods",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_paths",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationBindingsValueProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_caconfig_impl_configuration_bindings_value_provider", 
  "responseClass" => "orgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationBindingsValueProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationResolverImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_caconfig_impl_configuration_resolver_impl", 
  "responseClass" => "orgApacheSlingCaconfigImplConfigurationResolverImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationResolverImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "config_bucket_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationInheritanceStrategy', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_caconfig_impl_def_default_configuration_inheritance_stra", 
  "responseClass" => "orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationInheritanceStrategy", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "config_property_inheritance_property_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationPersistenceStrategy', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_caconfig_impl_def_default_configuration_persistence_stra", 
  "responseClass" => "orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationPersistenceStrategy", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.caconfig.impl.override.OsgiConfigurationOverrideProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_caconfig_impl_override_osgi_configuration_override_provi", 
  "responseClass" => "orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.caconfig.impl.override.OsgiConfigurationOverrideProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "description",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "overrides",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.caconfig.impl.override.SystemPropertyConfigurationOverrideProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_caconfig_impl_override_system_property_configuration_ove", 
  "responseClass" => "orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.caconfig.impl.override.SystemPropertyConfigurationOverrideProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.caconfig.management.impl.ConfigurationManagementSettingsImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_caconfig_management_impl_configuration_management_setti", 
  "responseClass" => "orgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.caconfig.management.impl.ConfigurationManagementSettingsImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "ignore_property_name_regex",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "config_collection_properties_resource_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultConfigurationResourceResolvingStrategy', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_caconfig_resource_impl_def_default_configuration_resour", 
  "responseClass" => "orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultConfigurationResourceResolvingStrategy", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "config_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "fallback_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "config_collection_inheritance_property_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultContextPathStrategy', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_caconfig_resource_impl_def_default_context_path_strategy", 
  "responseClass" => "orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultContextPathStrategy", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "config_ref_resource_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "config_ref_property_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.html.internal.TagsoupHtmlParser', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_html_internal_tagsoup_html_parser", 
  "responseClass" => "orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.html.internal.TagsoupHtmlParser", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "parser_features",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.log.LogManager', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_log_log_manager", 
  "responseClass" => "orgApacheSlingCommonsLogLogManagerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.log.LogManager", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_level",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_file",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_file_number",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_file_size",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_configuration_file",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_packaging_data_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_max_caller_data_depth",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_max_old_file_count_in_dump",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_num_of_lines",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.config', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_log_log_manager_factory_config", 
  "responseClass" => "orgApacheSlingCommonsLogLogManagerFactoryConfigInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.config", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_level",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_file",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_additiv",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.writer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_log_log_manager_factory_writer", 
  "responseClass" => "orgApacheSlingCommonsLogLogManagerFactoryWriterInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.writer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_file",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_file_number",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_file_size",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_commons_log_file_buffered",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.metrics.internal.LogReporter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_metrics_internal_log_reporter", 
  "responseClass" => "orgApacheSlingCommonsMetricsInternalLogReporterInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.metrics.internal.LogReporter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "time_unit",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "level",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "logger_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "registry_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.metrics.rrd4j.impl.CodahaleMetricsReporter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_metrics_rrd4j_impl_codahale_metrics_reporter", 
  "responseClass" => "orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.metrics.rrd4j.impl.CodahaleMetricsReporter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "datasources",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "step",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "archives",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.mime.internal.MimeTypeServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_mime_internal_mime_type_service_impl", 
  "responseClass" => "orgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.mime.internal.MimeTypeServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "mime_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.scheduler.impl.QuartzScheduler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_scheduler_impl_quartz_scheduler", 
  "responseClass" => "orgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.scheduler.impl.QuartzScheduler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "pool_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "allowed_pool_names",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_useleaderforsingle",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "metrics_filters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "slow_threshold_millis",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.scheduler.impl.SchedulerHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_scheduler_impl_scheduler_health_check", 
  "responseClass" => "orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.scheduler.impl.SchedulerHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_quartz_job_duration_acceptable",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.commons.threads.impl.DefaultThreadPool.factory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_commons_threads_impl_default_thread_pool_factory", 
  "responseClass" => "orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.commons.threads.impl.DefaultThreadPool.factory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "min_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_thread_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "keep_alive_time",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "block_policy",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "shutdown_graceful",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "daemon",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "shutdown_wait_time",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "priority",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.datasource.DataSourceFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_datasource_data_source_factory", 
  "responseClass" => "orgApacheSlingDatasourceDataSourceFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.datasource.DataSourceFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "datasource_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "datasource_svc_prop_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "driver_class_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "username",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_auto_commit",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_read_only",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_transaction_isolation",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_catalog",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_active",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_idle",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "min_idle",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "initial_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_wait",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "test_on_borrow",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "test_on_return",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "test_while_idle",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "validation_query",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "validation_query_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "time_between_eviction_runs_millis",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "min_evictable_idle_time_millis",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "connection_properties",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "init_sql",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jdbc_interceptors",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "validation_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "log_validation_errors",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "datasource_svc_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.datasource.JNDIDataSourceFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_datasource_jndi_data_source_factory", 
  "responseClass" => "orgApacheSlingDatasourceJNDIDataSourceFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.datasource.JNDIDataSourceFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "datasource_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "datasource_svc_prop_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "datasource_jndi_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jndi_properties",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.discovery.oak.Config', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_discovery_oak_config", 
  "responseClass" => "orgApacheSlingDiscoveryOakConfigInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.discovery.oak.Config", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "connector_ping_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "connector_ping_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "discovery_lite_check_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_sync_service_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cluster_sync_service_interval",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_sync_token",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "min_event_delay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "socket_connect_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "so_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "topology_connector_urls",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "topology_connector_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "auto_stop_local_loop_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "gzip_connector_requests_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hmac_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_encryption",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "shared_key",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hmac_shared_key_ttl",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "backoff_standby_factor",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "backoff_stable_factor",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.discovery.oak.SynchronizedClocksHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_discovery_oak_synchronized_clocks_health_check", 
  "responseClass" => "orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.discovery.oak.SynchronizedClocksHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "hc_mbean_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.agent.impl.ForwardDistributionAgentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_agent_impl_forward_distribution_agent_facto", 
  "responseClass" => "orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.agent.impl.ForwardDistributionAgentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "title",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "details",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "log_level",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "allowed_roots",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "queue_processing_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_importer_endpoints",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "passive_queues",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "priority_queues",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "retry_strategy",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "retry_attempts",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_authorization_strategy_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "transport_secret_provider_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_builder_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "triggers_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_provider",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "async_delivery",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "http_conn_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.agent.impl.PrivilegeDistributionRequestAuthorizationStrategyFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_agent_impl_privilege_distribution_request_a", 
  "responseClass" => "orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.agent.impl.PrivilegeDistributionRequestAuthorizationStrategyFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jcr_privilege",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.agent.impl.QueueDistributionAgentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_agent_impl_queue_distribution_agent_factory", 
  "responseClass" => "orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.agent.impl.QueueDistributionAgentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "title",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "details",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "log_level",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "allowed_roots",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "request_authorization_strategy_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_provider_factory_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_builder_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "triggers_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "priority_queues",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.agent.impl.ReverseDistributionAgentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_agent_impl_reverse_distribution_agent_facto", 
  "responseClass" => "orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.agent.impl.ReverseDistributionAgentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "title",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "details",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "log_level",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_processing_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_exporter_endpoints",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "pull_items",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "http_conn_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_authorization_strategy_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "transport_secret_provider_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_builder_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "triggers_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.agent.impl.SimpleDistributionAgentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_agent_impl_simple_distribution_agent_factor", 
  "responseClass" => "orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.agent.impl.SimpleDistributionAgentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "title",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "details",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "log_level",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_processing_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_exporter_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_importer_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_authorization_strategy_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "triggers_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.agent.impl.SyncDistributionAgentFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_agent_impl_sync_distribution_agent_factory", 
  "responseClass" => "orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.agent.impl.SyncDistributionAgentFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "title",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "details",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "log_level",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_processing_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "passive_queues",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "package_exporter_endpoints",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "package_importer_endpoints",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "retry_strategy",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "retry_attempts",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "pull_items",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "http_conn_timeout",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_authorization_strategy_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "transport_secret_provider_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_builder_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "triggers_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.monitor.DistributionQueueHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_monitor_distribution_queue_health_check", 
  "responseClass" => "orgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.monitor.DistributionQueueHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "hc_mbean_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "number_of_retries_allowed",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.AgentDistributionPackageExporterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_packaging_impl_exporter_agent_distributio", 
  "responseClass" => "orgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.AgentDistributionPackageExporterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "drop_invalid_items",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "agent_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.LocalDistributionPackageExporterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_packaging_impl_exporter_local_distributio", 
  "responseClass" => "orgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.LocalDistributionPackageExporterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_builder_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.RemoteDistributionPackageExporterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_packaging_impl_exporter_remote_distributi", 
  "responseClass" => "orgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.RemoteDistributionPackageExporterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "endpoints",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "pull_items",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_builder_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "transport_secret_provider_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.LocalDistributionPackageImporterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_packaging_impl_importer_local_distributio", 
  "responseClass" => "orgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.LocalDistributionPackageImporterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_builder_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RemoteDistributionPackageImporterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_packaging_impl_importer_remote_distributi", 
  "responseClass" => "orgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RemoteDistributionPackageImporterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "endpoints",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "transport_secret_provider_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RepositoryDistributionPackageImporterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_packaging_impl_importer_repository_distri", 
  "responseClass" => "orgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RepositoryDistributionPackageImporterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "privilege_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionConfigurationResourceProviderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_resources_impl_distribution_configuration", 
  "responseClass" => "orgApacheSlingDistributionResourcesImplDistributionConfigurationInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionConfigurationResourceProviderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "provider_roots",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "kind",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionServiceResourceProviderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_resources_impl_distribution_service_resour", 
  "responseClass" => "orgApacheSlingDistributionResourcesImplDistributionServiceResourInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionServiceResourceProviderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "provider_roots",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "kind",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.serialization.impl.DistributionPackageBuilderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_serialization_impl_distribution_package_bu", 
  "responseClass" => "orgApacheSlingDistributionSerializationImplDistributionPackageBuInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.serialization.impl.DistributionPackageBuilderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "format_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "temp_fs_folder",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "file_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "memory_unit",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "use_off_heap_memory",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "digest_algorithm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "monitoring_queue_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cleanup_delay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_filters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "property_filters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.serialization.impl.vlt.VaultDistributionPackageBuilderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_serialization_impl_vlt_vault_distribution", 
  "responseClass" => "orgApacheSlingDistributionSerializationImplVltVaultDistributionInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.serialization.impl.vlt.VaultDistributionPackageBuilderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "import_mode",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "acl_handling",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_roots",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "package_filters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "property_filters",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "temp_fs_folder",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "use_binary_references",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auto_save_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cleanup_delay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "file_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "mega_bytes",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "use_off_heap_memory",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "digest_algorithm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "monitoring_queue_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "paths_mapping",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "strict_import",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.transport.impl.UserCredentialsDistributionTransportSecretProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_transport_impl_user_credentials_distributi", 
  "responseClass" => "orgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.transport.impl.UserCredentialsDistributionTransportSecretProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "username",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.trigger.impl.DistributionEventDistributeDistributionTriggerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_trigger_impl_distribution_event_distribute", 
  "responseClass" => "orgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.DistributionEventDistributeDistributionTriggerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.trigger.impl.JcrEventDistributionTriggerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_trigger_impl_jcr_event_distribution_trigger", 
  "responseClass" => "orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.JcrEventDistributionTriggerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ignored_paths_patterns",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "deep",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.trigger.impl.PersistedJcrEventDistributionTriggerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_trigger_impl_persisted_jcr_event_distributi", 
  "responseClass" => "orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.PersistedJcrEventDistributionTriggerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "nuggets_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.trigger.impl.RemoteEventDistributionTriggerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_trigger_impl_remote_event_distribution_trig", 
  "responseClass" => "orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.RemoteEventDistributionTriggerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "endpoint",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "transport_secret_provider_target",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.trigger.impl.ResourceEventDistributionTriggerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_trigger_impl_resource_event_distribution_tr", 
  "responseClass" => "orgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.ResourceEventDistributionTriggerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.distribution.trigger.impl.ScheduledDistributionTriggerFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_distribution_trigger_impl_scheduled_distribution_trigge", 
  "responseClass" => "orgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.ScheduledDistributionTriggerFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "seconds",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.engine.impl.auth.SlingAuthenticator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_engine_impl_auth_sling_authenticator", 
  "responseClass" => "orgApacheSlingEngineImplAuthSlingAuthenticatorInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.engine.impl.auth.SlingAuthenticator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_context_select",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_listener",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_sudo_cookie",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_sudo_parameter",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_annonymous",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_auth_requirements",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_auth_anonymous_user",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_auth_anonymous_password",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_http",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_http_realm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "auth_uri_suffix",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.engine.impl.debug.RequestProgressTrackerLogFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_engine_impl_debug_request_progress_tracker_log_filter", 
  "responseClass" => "orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.engine.impl.debug.RequestProgressTrackerLogFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "extensions",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "min_duration_ms",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_duration_ms",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "compact_log_format",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.engine.impl.log.RequestLogger', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_engine_impl_log_request_logger", 
  "responseClass" => "orgApacheSlingEngineImplLogRequestLoggerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.engine.impl.log.RequestLogger", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "request_log_output",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_log_outputtype",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_log_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "access_log_output",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "access_log_outputtype",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "access_log_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.engine.impl.log.RequestLoggerService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_engine_impl_log_request_logger_service", 
  "responseClass" => "orgApacheSlingEngineImplLogRequestLoggerServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.engine.impl.log.RequestLoggerService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "request_log_service_format",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_log_service_output",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_log_service_outputtype",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_log_service_onentry",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.engine.impl.SlingMainServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_engine_impl_sling_main_servlet", 
  "responseClass" => "orgApacheSlingEngineImplSlingMainServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.engine.impl.SlingMainServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_max_calls",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_max_inclusions",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_trace_allow",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_max_record_requests",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_store_pattern_requests",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_serverinfo",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_additional_response_headers",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.engine.parameters', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_engine_parameters", 
  "responseClass" => "orgApacheSlingEngineParametersInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.engine.parameters", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_default_parameter_encoding",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_default_max_parameters",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "file_location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "file_threshold",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "file_max",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "request_max",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_default_parameter_check_for_additional_container_parameters",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.event.impl.EventingThreadPool', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_event_impl_eventing_thread_pool", 
  "responseClass" => "orgApacheSlingEventImplEventingThreadPoolInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.event.impl.EventingThreadPool", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "min_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.event.impl.jobs.DefaultJobManager', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_event_impl_jobs_default_job_manager", 
  "responseClass" => "orgApacheSlingEventImplJobsDefaultJobManagerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.event.impl.jobs.DefaultJobManager", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "queue_priority",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_retries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_retrydelay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_maxparallel",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.event.impl.jobs.jcr.PersistenceHandler', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_event_impl_jobs_jcr_persistence_handler", 
  "responseClass" => "orgApacheSlingEventImplJobsJcrPersistenceHandlerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.event.impl.jobs.jcr.PersistenceHandler", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "job_consumermanager_disable_distribution",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "startup_delay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cleanup_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.event.impl.jobs.JobConsumerManager', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_event_impl_jobs_job_consumer_manager", 
  "responseClass" => "orgApacheSlingEventImplJobsJobConsumerManagerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.event.impl.jobs.JobConsumerManager", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_installer_configuration_persist",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "job_consumermanager_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "job_consumermanager_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.event.jobs.QueueConfiguration', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_event_jobs_queue_configuration", 
  "responseClass" => "orgApacheSlingEventJobsQueueConfigurationInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.event.jobs.QueueConfiguration", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "queue_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_topics",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "queue_type",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_priority",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_retries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_retrydelay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_maxparallel",
      "description" => "",
      "dataType" => "Float",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_keep_jobs",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_prefer_run_on_creation_instance",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "queue_thread_pool_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.extensions.webconsolesecurityprovider.internal.SlingWebConsoleSecurityProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_extensions_webconsolesecurityprovider_internal_sling_w", 
  "responseClass" => "orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.extensions.webconsolesecurityprovider.internal.SlingWebConsoleSecurityProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "users",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "groups",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.featureflags.Feature', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_featureflags_feature", 
  "responseClass" => "orgApacheSlingFeatureflagsFeatureInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.featureflags.Feature", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "description",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.featureflags.impl.ConfiguredFeature', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_featureflags_impl_configured_feature", 
  "responseClass" => "orgApacheSlingFeatureflagsImplConfiguredFeatureInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.featureflags.impl.ConfiguredFeature", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "description",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.hapi.impl.HApiUtilImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_hapi_impl_h_api_util_impl", 
  "responseClass" => "orgApacheSlingHapiImplHApiUtilImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.hapi.impl.HApiUtilImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_hapi_tools_resourcetype",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_hapi_tools_collectionresourcetype",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_hapi_tools_searchpaths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_hapi_tools_externalurl",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_hapi_tools_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.hc.core.impl.CompositeHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_hc_core_impl_composite_health_check", 
  "responseClass" => "orgApacheSlingHcCoreImplCompositeHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.hc.core.impl.CompositeHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "hc_mbean_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "filter_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "filter_combine_tags_with_or",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.hc.core.impl.executor.HealthCheckExecutorImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_hc_core_impl_executor_health_check_executor_impl", 
  "responseClass" => "orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.hc.core.impl.executor.HealthCheckExecutorImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "timeout_in_ms",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "long_running_future_threshold_for_critical_ms",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "result_cache_ttl_in_ms",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.hc.core.impl.JmxAttributeHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_hc_core_impl_jmx_attribute_health_check", 
  "responseClass" => "orgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.hc.core.impl.JmxAttributeHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "hc_mbean_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "mbean_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "attribute_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "attribute_value_constraint",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.hc.core.impl.ScriptableHealthCheck', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_hc_core_impl_scriptable_health_check", 
  "responseClass" => "orgApacheSlingHcCoreImplScriptableHealthCheckInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.hc.core.impl.ScriptableHealthCheck", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "hc_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "hc_tags",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "hc_mbean_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "language_extension",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.hc.core.impl.servlet.HealthCheckExecutorServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_hc_core_impl_servlet_health_check_executor_servlet", 
  "responseClass" => "orgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.hc.core.impl.servlet.HealthCheckExecutorServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "servlet_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "disabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cors_access_control_allow_origin",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.hc.core.impl.servlet.ResultTxtVerboseSerializer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_hc_core_impl_servlet_result_txt_verbose_serializer", 
  "responseClass" => "orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.hc.core.impl.servlet.ResultTxtVerboseSerializer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "total_width",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "col_width_name",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "col_width_result",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "col_width_timing",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.i18n.impl.I18NFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_i18n_impl_i18_n_filter", 
  "responseClass" => "orgApacheSlingI18nImplI18NFilterInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.i18n.impl.I18NFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_filter_scope",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.i18n.impl.JcrResourceBundleProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_i18n_impl_jcr_resource_bundle_provider", 
  "responseClass" => "orgApacheSlingI18nImplJcrResourceBundleProviderInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.i18n.impl.JcrResourceBundleProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "locale_default",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "preload_bundles",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "invalidation_delay",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.installer.provider.jcr.impl.JcrInstaller', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_installer_provider_jcr_impl_jcr_installer", 
  "responseClass" => "orgApacheSlingInstallerProviderJcrImplJcrInstallerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.installer.provider.jcr.impl.JcrInstaller", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "handler_schemes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_jcrinstall_folder_name_regexp",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_jcrinstall_folder_max_depth",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_jcrinstall_search_path",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_jcrinstall_new_config_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_jcrinstall_signal_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_jcrinstall_enable_writeback",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_base_internal_login_admin_whitelist", 
  "responseClass" => "orgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "whitelist_bypass",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "whitelist_bundles_regexp",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist.fragment', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_base_internal_login_admin_whitelist_fragment", 
  "responseClass" => "orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist.fragment", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "whitelist_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "whitelist_bundles",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_davex_impl_servlets_sling_dav_ex_servlet", 
  "responseClass" => "orgApacheSlingJcrDavexImplServletsSlingDavExServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "_alias",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dav_create_absolute_uri",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dav_protectedhandlers",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.JndiRegistrationSupport', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_jackrabbit_server_jndi_registration_support", 
  "responseClass" => "orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.JndiRegistrationSupport", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "java_naming_factory_initial",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "java_naming_provider_url",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.RmiRegistrationSupport', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_jackrabbit_server_rmi_registration_support", 
  "responseClass" => "orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.RmiRegistrationSupport", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "port",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.repoinit.impl.RepositoryInitializer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_repoinit_impl_repository_initializer", 
  "responseClass" => "orgApacheSlingJcrRepoinitImplRepositoryInitializerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.repoinit.impl.RepositoryInitializer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "references",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.repoinit.RepositoryInitializer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_repoinit_repository_initializer", 
  "responseClass" => "orgApacheSlingJcrRepoinitRepositoryInitializerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.repoinit.RepositoryInitializer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "references",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "scripts",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrResourceResolverFactoryImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_resource_internal_jcr_resource_resolver_factory_impl", 
  "responseClass" => "orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrResourceResolverFactoryImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_searchpath",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_manglenamespaces",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_allow_direct",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_required_providers",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_required_providernames",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_virtual",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_mapping",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_map_location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_map_observation",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_default_vanity_redirect_status",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_enable_vanitypath",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_vanitypath_max_entries",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_vanitypath_max_entries_startup",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_vanitypath_bloomfilter_max_bytes",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_optimize_alias_resolution",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_vanitypath_whitelist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_vanitypath_blacklist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_vanity_precedence",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_providerhandling_paranoid",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_log_closing",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "resource_resolver_log_unclosed",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrSystemUserValidator', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_resource_internal_jcr_system_user_validator", 
  "responseClass" => "orgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrSystemUserValidator", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "allow_only_system_user",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.resourcesecurity.impl.ResourceAccessGateFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_resourcesecurity_impl_resource_access_gate_factory", 
  "responseClass" => "orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.resourcesecurity.impl.ResourceAccessGateFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "checkpath_prefix",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jcr_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DefaultHandlerService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_webdav_impl_handler_default_handler_service", 
  "responseClass" => "orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DefaultHandlerService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "type_collections",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "type_noncollections",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "type_content",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DirListingExportHandlerService', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_webdav_impl_handler_dir_listing_export_handler_servic", 
  "responseClass" => "orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DirListingExportHandlerService", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jcr.webdav.impl.servlets.SimpleWebDavServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jcr_webdav_impl_servlets_simple_web_dav_servlet", 
  "responseClass" => "orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jcr.webdav.impl.servlets.SimpleWebDavServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "dav_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dav_create_absolute_uri",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "dav_realm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "collection_types",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "filter_prefixes",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "filter_types",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "filter_uris",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "type_collections",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "type_noncollections",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "type_content",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.jmx.provider.impl.JMXResourceProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_jmx_provider_impl_jmx_resource_provider", 
  "responseClass" => "orgApacheSlingJmxProviderImplJMXResourceProviderInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.jmx.provider.impl.JMXResourceProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "provider_roots",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.models.impl.ModelAdapterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_models_impl_model_adapter_factory", 
  "responseClass" => "orgApacheSlingModelsImplModelAdapterFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.models.impl.ModelAdapterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_listener",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "osgi_http_whiteboard_context_select",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "max_recursion_depth",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "cleanup_job_period",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.models.jacksonexporter.impl.ResourceModuleProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_models_jacksonexporter_impl_resource_module_provider", 
  "responseClass" => "orgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.models.jacksonexporter.impl.ResourceModuleProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "max_recursion_levels",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.resource.inventory.impl.ResourceInventoryPrinterFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_resource_inventory_impl_resource_inventory_printer_facto", 
  "responseClass" => "orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.resource.inventory.impl.ResourceInventoryPrinterFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "felix_inventory_printer_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "felix_inventory_printer_title",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.resourcemerger.impl.MergedResourceProviderFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_resourcemerger_impl_merged_resource_provider_factory", 
  "responseClass" => "orgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.resourcemerger.impl.MergedResourceProviderFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "merge_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "merge_read_only",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.resourcemerger.picker.overriding', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_resourcemerger_picker_overriding", 
  "responseClass" => "orgApacheSlingResourcemergerPickerOverridingInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.resourcemerger.picker.overriding", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "merge_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "merge_read_only",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptCacheImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_scripting_core_impl_script_cache_impl", 
  "responseClass" => "orgApacheSlingScriptingCoreImplScriptCacheImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptCacheImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_scripting_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_scripting_cache_additional_extensions",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptingResourceResolverProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_scripting_core_impl_scripting_resource_resolver_provider", 
  "responseClass" => "orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptingResourceResolverProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "log_stacktrace_onclose",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.scripting.java.impl.JavaScriptEngineFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_scripting_java_impl_java_script_engine_factory", 
  "responseClass" => "orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.scripting.java.impl.JavaScriptEngineFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "java_classdebuginfo",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "java_java_encoding",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "java_compiler_source_vm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "java_compiler_target_vm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.scripting.javascript.internal.RhinoJavaScriptEngineFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_scripting_javascript_internal_rhino_java_script_engine_fa", 
  "responseClass" => "orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.scripting.javascript.internal.RhinoJavaScriptEngineFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_scripting_javascript_rhino_opt_level",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.scripting.jsp.JspScriptEngineFactory', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_scripting_jsp_jsp_script_engine_factory", 
  "responseClass" => "orgApacheSlingScriptingJspJspScriptEngineFactoryInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.scripting.jsp.JspScriptEngineFactory", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "jasper_compiler_target_vm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jasper_compiler_source_vm",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jasper_classdebuginfo",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jasper_enable_pooling",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jasper_ie_class_id",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jasper_gen_string_as_char_array",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jasper_keepgenerated",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jasper_mappedfile",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jasper_trim_spaces",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "jasper_display_source_fragments",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_is_session",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.scripting.sightly.js.impl.jsapi.SlyBindingsValuesProvider', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_scripting_sightly_js_impl_jsapi_sly_bindings_values_prov", 
  "responseClass" => "orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.scripting.sightly.js.impl.jsapi.SlyBindingsValuesProvider", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "org_apache_sling_scripting_sightly_js_bindings",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.security.impl.ContentDispositionFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_security_impl_content_disposition_filter", 
  "responseClass" => "orgApacheSlingSecurityImplContentDispositionFilterInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.security.impl.ContentDispositionFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_content_disposition_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_content_disposition_excluded_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "sling_content_disposition_all_paths",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.security.impl.ReferrerFilter', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_security_impl_referrer_filter", 
  "responseClass" => "orgApacheSlingSecurityImplReferrerFilterInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.security.impl.ReferrerFilter", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "allow_empty",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "allow_hosts",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "allow_hosts_regexp",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "filter_methods",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "exclude_agents_regexp",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_serviceusermapping_impl_service_user_mapper_impl", 
  "responseClass" => "orgApacheSlingServiceusermappingImplServiceUserMapperImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "user_mapping",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "user_default",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_enable_default_mapping",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "require_validation",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_serviceusermapping_impl_service_user_mapper_impl_amended", 
  "responseClass" => "orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "service_ranking",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "user_mapping",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.servlets.get.DefaultGetServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_servlets_get_default_get_servlet", 
  "responseClass" => "orgApacheSlingServletsGetDefaultGetServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.servlets.get.DefaultGetServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "aliases",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "index",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "index_files",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "enable_html",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_json",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_txt",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "enable_xml",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "json_maximumresults",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "ecma_suport",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.servlets.get.impl.version.VersionInfoServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_servlets_get_impl_version_version_info_servlet", 
  "responseClass" => "orgApacheSlingServletsGetImplVersionVersionInfoServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.servlets.get.impl.version.VersionInfoServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_servlet_selectors",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "ecma_suport",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.servlets.post.impl.helper.ChunkCleanUpTask', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_servlets_post_impl_helper_chunk_clean_up_task", 
  "responseClass" => "orgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.servlets.post.impl.helper.ChunkCleanUpTask", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_expression",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "scheduler_concurrent",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "chunk_cleanup_age",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.servlets.post.impl.SlingPostServlet', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_servlets_post_impl_sling_post_servlet", 
  "responseClass" => "orgApacheSlingServletsPostImplSlingPostServletInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.servlets.post.impl.SlingPostServlet", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "servlet_post_date_formats",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "servlet_post_node_name_hints",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "servlet_post_node_name_max_length",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "servlet_post_checkin_new_versionable_nodes",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "servlet_post_auto_checkout",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "servlet_post_auto_checkin",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "servlet_post_ignore_pattern",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.servlets.resolver.SlingServletResolver', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_servlets_resolver_sling_servlet_resolver", 
  "responseClass" => "orgApacheSlingServletsResolverSlingServletResolverInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.servlets.resolver.SlingServletResolver", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "servletresolver_servlet_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "servletresolver_cache_size",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "servletresolver_paths",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "servletresolver_default_extensions",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.settings.impl.SlingSettingsServiceImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_settings_impl_sling_settings_service_impl", 
  "responseClass" => "orgApacheSlingSettingsImplSlingSettingsServiceImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.settings.impl.SlingSettingsServiceImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "sling_name",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "sling_description",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.startupfilter.impl.StartupFilterImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_startupfilter_impl_startup_filter_impl", 
  "responseClass" => "orgApacheSlingStartupfilterImplStartupFilterImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.startupfilter.impl.StartupFilterImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "active_by_default",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "default_message",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.tenant.internal.TenantProviderImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_tenant_internal_tenant_provider_impl", 
  "responseClass" => "orgApacheSlingTenantInternalTenantProviderImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.tenant.internal.TenantProviderImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "tenant_root",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "tenant_path_matcher",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.tracer.internal.LogTracer', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_tracer_internal_log_tracer", 
  "responseClass" => "orgApacheSlingTracerInternalLogTracerInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.tracer.internal.LogTracer", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "tracer_sets",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "multi",
      "paramType" => "query",
    },
    {
      "name" => "enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "servlet_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "recording_cache_size_in_mb",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "recording_cache_duration_in_secs",
      "description" => "",
      "dataType" => "Integer",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "recording_compression_enabled",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "gzip_response",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end


MyApp.add_route('POST', '//system/console/configMgr/org.apache.sling.xss.impl.XSSFilterImpl', {
  "resourcePath" => "/Configmgr",
  "summary" => "",
  "nickname" => "org_apache_sling_xss_impl_xss_filter_impl", 
  "responseClass" => "orgApacheSlingXssImplXSSFilterImplInfo",
  "endpoint" => "/system/console/configMgr/org.apache.sling.xss.impl.XSSFilterImpl", 
  "notes" => "",
  "parameters" => [
    {
      "name" => "post",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "apply",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "delete",
      "description" => "",
      "dataType" => "boolean",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "action",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "location",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    {
      "name" => "propertylist",
      "description" => "",
      "dataType" => "Array<String>",
      "collectionFormat" => "csv",
      "paramType" => "query",
    },
    {
      "name" => "policy_path",
      "description" => "",
      "dataType" => "String",
      "allowableValues" => "",
      "paramType" => "query",
    },
    ]}) do
  cross_origin
  # the guts live here

  {"message" => "yes, it worked"}.to_json
end

