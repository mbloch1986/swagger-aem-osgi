/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplProperties
 */
public class OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplPropertiesTest {
    private final OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplProperties model = new OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplProperties();

    /**
     * Model tests for OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplProperties
     */
    @Test
    public void testOrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplProperties() {
        // TODO: test OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplProperties
    }

    /**
     * Test the property 'tokenExpiration'
     */
    @Test
    public void tokenExpirationTest() {
        // TODO: test tokenExpiration
    }

    /**
     * Test the property 'tokenLength'
     */
    @Test
    public void tokenLengthTest() {
        // TODO: test tokenLength
    }

    /**
     * Test the property 'tokenRefresh'
     */
    @Test
    public void tokenRefreshTest() {
        // TODO: test tokenRefresh
    }

    /**
     * Test the property 'tokenCleanupThreshold'
     */
    @Test
    public void tokenCleanupThresholdTest() {
        // TODO: test tokenCleanupThreshold
    }

    /**
     * Test the property 'passwordHashAlgorithm'
     */
    @Test
    public void passwordHashAlgorithmTest() {
        // TODO: test passwordHashAlgorithm
    }

    /**
     * Test the property 'passwordHashIterations'
     */
    @Test
    public void passwordHashIterationsTest() {
        // TODO: test passwordHashIterations
    }

    /**
     * Test the property 'passwordSaltSize'
     */
    @Test
    public void passwordSaltSizeTest() {
        // TODO: test passwordSaltSize
    }

}
