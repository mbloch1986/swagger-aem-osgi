/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties() {
    this->init();
}

OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::~OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties() {
    
}

void
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::init() {
    m_create_preview_enabled_isSet = false;
    m_update_preview_enabled_isSet = false;
    m_queue_size_isSet = false;
    m_folder_preview_rendition_regex_isSet = false;
}

void
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(create_preview_enabled, json[QString("createPreviewEnabled")]);
    
    ::OpenAPI::fromJsonValue(update_preview_enabled, json[QString("updatePreviewEnabled")]);
    
    ::OpenAPI::fromJsonValue(queue_size, json[QString("queueSize")]);
    
    ::OpenAPI::fromJsonValue(folder_preview_rendition_regex, json[QString("folderPreviewRenditionRegex")]);
    
}

QString
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(create_preview_enabled.isSet()){
        obj.insert(QString("createPreviewEnabled"), ::OpenAPI::toJsonValue(create_preview_enabled));
    }
	if(update_preview_enabled.isSet()){
        obj.insert(QString("updatePreviewEnabled"), ::OpenAPI::toJsonValue(update_preview_enabled));
    }
	if(queue_size.isSet()){
        obj.insert(QString("queueSize"), ::OpenAPI::toJsonValue(queue_size));
    }
	if(folder_preview_rendition_regex.isSet()){
        obj.insert(QString("folderPreviewRenditionRegex"), ::OpenAPI::toJsonValue(folder_preview_rendition_regex));
    }
    return obj;
}

OAIConfigNodePropertyBoolean
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::getCreatePreviewEnabled() const {
    return create_preview_enabled;
}
void
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::setCreatePreviewEnabled(const OAIConfigNodePropertyBoolean &create_preview_enabled) {
    this->create_preview_enabled = create_preview_enabled;
    this->m_create_preview_enabled_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::getUpdatePreviewEnabled() const {
    return update_preview_enabled;
}
void
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::setUpdatePreviewEnabled(const OAIConfigNodePropertyBoolean &update_preview_enabled) {
    this->update_preview_enabled = update_preview_enabled;
    this->m_update_preview_enabled_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::getQueueSize() const {
    return queue_size;
}
void
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::setQueueSize(const OAIConfigNodePropertyInteger &queue_size) {
    this->queue_size = queue_size;
    this->m_queue_size_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::getFolderPreviewRenditionRegex() const {
    return folder_preview_rendition_regex;
}
void
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::setFolderPreviewRenditionRegex(const OAIConfigNodePropertyString &folder_preview_rendition_regex) {
    this->folder_preview_rendition_regex = folder_preview_rendition_regex;
    this->m_folder_preview_rendition_regex_isSet = true;
}


bool
OAIComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(create_preview_enabled.isSet()){ isObjectUpdated = true; break;}
    
        if(update_preview_enabled.isSet()){ isObjectUpdated = true; break;}
    
        if(queue_size.isSet()){ isObjectUpdated = true; break;}
    
        if(folder_preview_rendition_regex.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

