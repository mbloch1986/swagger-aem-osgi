/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties_H
#define OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties: public OAIObject {
public:
    OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties();
    OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties(QString json);
    ~OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getRepositoryHome() const;
    void setRepositoryHome(const OAIConfigNodePropertyString &repository_home);

    OAIConfigNodePropertyString getTarmkMode() const;
    void setTarmkMode(const OAIConfigNodePropertyString &tarmk_mode);

    OAIConfigNodePropertyInteger getTarmkSize() const;
    void setTarmkSize(const OAIConfigNodePropertyInteger &tarmk_size);

    OAIConfigNodePropertyInteger getSegmentCacheSize() const;
    void setSegmentCacheSize(const OAIConfigNodePropertyInteger &segment_cache_size);

    OAIConfigNodePropertyInteger getStringCacheSize() const;
    void setStringCacheSize(const OAIConfigNodePropertyInteger &string_cache_size);

    OAIConfigNodePropertyInteger getTemplateCacheSize() const;
    void setTemplateCacheSize(const OAIConfigNodePropertyInteger &template_cache_size);

    OAIConfigNodePropertyInteger getStringDeduplicationCacheSize() const;
    void setStringDeduplicationCacheSize(const OAIConfigNodePropertyInteger &string_deduplication_cache_size);

    OAIConfigNodePropertyInteger getTemplateDeduplicationCacheSize() const;
    void setTemplateDeduplicationCacheSize(const OAIConfigNodePropertyInteger &template_deduplication_cache_size);

    OAIConfigNodePropertyInteger getNodeDeduplicationCacheSize() const;
    void setNodeDeduplicationCacheSize(const OAIConfigNodePropertyInteger &node_deduplication_cache_size);

    OAIConfigNodePropertyBoolean getPauseCompaction() const;
    void setPauseCompaction(const OAIConfigNodePropertyBoolean &pause_compaction);

    OAIConfigNodePropertyInteger getCompactionRetryCount() const;
    void setCompactionRetryCount(const OAIConfigNodePropertyInteger &compaction_retry_count);

    OAIConfigNodePropertyInteger getCompactionForceTimeout() const;
    void setCompactionForceTimeout(const OAIConfigNodePropertyInteger &compaction_force_timeout);

    OAIConfigNodePropertyInteger getCompactionSizeDeltaEstimation() const;
    void setCompactionSizeDeltaEstimation(const OAIConfigNodePropertyInteger &compaction_size_delta_estimation);

    OAIConfigNodePropertyBoolean getCompactionDisableEstimation() const;
    void setCompactionDisableEstimation(const OAIConfigNodePropertyBoolean &compaction_disable_estimation);

    OAIConfigNodePropertyInteger getCompactionRetainedGenerations() const;
    void setCompactionRetainedGenerations(const OAIConfigNodePropertyInteger &compaction_retained_generations);

    OAIConfigNodePropertyInteger getCompactionMemoryThreshold() const;
    void setCompactionMemoryThreshold(const OAIConfigNodePropertyInteger &compaction_memory_threshold);

    OAIConfigNodePropertyInteger getCompactionProgressLog() const;
    void setCompactionProgressLog(const OAIConfigNodePropertyInteger &compaction_progress_log);

    OAIConfigNodePropertyBoolean getStandby() const;
    void setStandby(const OAIConfigNodePropertyBoolean &standby);

    OAIConfigNodePropertyBoolean getCustomBlobStore() const;
    void setCustomBlobStore(const OAIConfigNodePropertyBoolean &custom_blob_store);

    OAIConfigNodePropertyBoolean getCustomSegmentStore() const;
    void setCustomSegmentStore(const OAIConfigNodePropertyBoolean &custom_segment_store);

    OAIConfigNodePropertyBoolean getSplitPersistence() const;
    void setSplitPersistence(const OAIConfigNodePropertyBoolean &split_persistence);

    OAIConfigNodePropertyString getRepositoryBackupDir() const;
    void setRepositoryBackupDir(const OAIConfigNodePropertyString &repository_backup_dir);

    OAIConfigNodePropertyInteger getBlobGcMaxAgeInSecs() const;
    void setBlobGcMaxAgeInSecs(const OAIConfigNodePropertyInteger &blob_gc_max_age_in_secs);

    OAIConfigNodePropertyInteger getBlobTrackSnapshotIntervalInSecs() const;
    void setBlobTrackSnapshotIntervalInSecs(const OAIConfigNodePropertyInteger &blob_track_snapshot_interval_in_secs);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString repository_home;
    bool m_repository_home_isSet;

    OAIConfigNodePropertyString tarmk_mode;
    bool m_tarmk_mode_isSet;

    OAIConfigNodePropertyInteger tarmk_size;
    bool m_tarmk_size_isSet;

    OAIConfigNodePropertyInteger segment_cache_size;
    bool m_segment_cache_size_isSet;

    OAIConfigNodePropertyInteger string_cache_size;
    bool m_string_cache_size_isSet;

    OAIConfigNodePropertyInteger template_cache_size;
    bool m_template_cache_size_isSet;

    OAIConfigNodePropertyInteger string_deduplication_cache_size;
    bool m_string_deduplication_cache_size_isSet;

    OAIConfigNodePropertyInteger template_deduplication_cache_size;
    bool m_template_deduplication_cache_size_isSet;

    OAIConfigNodePropertyInteger node_deduplication_cache_size;
    bool m_node_deduplication_cache_size_isSet;

    OAIConfigNodePropertyBoolean pause_compaction;
    bool m_pause_compaction_isSet;

    OAIConfigNodePropertyInteger compaction_retry_count;
    bool m_compaction_retry_count_isSet;

    OAIConfigNodePropertyInteger compaction_force_timeout;
    bool m_compaction_force_timeout_isSet;

    OAIConfigNodePropertyInteger compaction_size_delta_estimation;
    bool m_compaction_size_delta_estimation_isSet;

    OAIConfigNodePropertyBoolean compaction_disable_estimation;
    bool m_compaction_disable_estimation_isSet;

    OAIConfigNodePropertyInteger compaction_retained_generations;
    bool m_compaction_retained_generations_isSet;

    OAIConfigNodePropertyInteger compaction_memory_threshold;
    bool m_compaction_memory_threshold_isSet;

    OAIConfigNodePropertyInteger compaction_progress_log;
    bool m_compaction_progress_log_isSet;

    OAIConfigNodePropertyBoolean standby;
    bool m_standby_isSet;

    OAIConfigNodePropertyBoolean custom_blob_store;
    bool m_custom_blob_store_isSet;

    OAIConfigNodePropertyBoolean custom_segment_store;
    bool m_custom_segment_store_isSet;

    OAIConfigNodePropertyBoolean split_persistence;
    bool m_split_persistence_isSet;

    OAIConfigNodePropertyString repository_backup_dir;
    bool m_repository_backup_dir_isSet;

    OAIConfigNodePropertyInteger blob_gc_max_age_in_secs;
    bool m_blob_gc_max_age_in_secs_isSet;

    OAIConfigNodePropertyInteger blob_track_snapshot_interval_in_secs;
    bool m_blob_track_snapshot_interval_in_secs_isSet;

};

}

#endif // OAIOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties_H
