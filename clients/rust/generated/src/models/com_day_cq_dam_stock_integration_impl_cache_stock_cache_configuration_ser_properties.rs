/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties {
  #[serde(rename = "getCacheExpirationUnit")]
  get_cache_expiration_unit: Option<::models::ConfigNodePropertyDropDown>,
  #[serde(rename = "getCacheExpirationValue")]
  get_cache_expiration_value: Option<::models::ConfigNodePropertyInteger>
}

impl ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties {
  pub fn new() -> ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties {
    ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties {
      get_cache_expiration_unit: None,
      get_cache_expiration_value: None
    }
  }

  pub fn set_get_cache_expiration_unit(&mut self, get_cache_expiration_unit: ::models::ConfigNodePropertyDropDown) {
    self.get_cache_expiration_unit = Some(get_cache_expiration_unit);
  }

  pub fn with_get_cache_expiration_unit(mut self, get_cache_expiration_unit: ::models::ConfigNodePropertyDropDown) -> ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties {
    self.get_cache_expiration_unit = Some(get_cache_expiration_unit);
    self
  }

  pub fn get_cache_expiration_unit(&self) -> Option<&::models::ConfigNodePropertyDropDown> {
    self.get_cache_expiration_unit.as_ref()
  }

  pub fn reset_get_cache_expiration_unit(&mut self) {
    self.get_cache_expiration_unit = None;
  }

  pub fn set_get_cache_expiration_value(&mut self, get_cache_expiration_value: ::models::ConfigNodePropertyInteger) {
    self.get_cache_expiration_value = Some(get_cache_expiration_value);
  }

  pub fn with_get_cache_expiration_value(mut self, get_cache_expiration_value: ::models::ConfigNodePropertyInteger) -> ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties {
    self.get_cache_expiration_value = Some(get_cache_expiration_value);
    self
  }

  pub fn get_cache_expiration_value(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.get_cache_expiration_value.as_ref()
  }

  pub fn reset_get_cache_expiration_value(&mut self) {
    self.get_cache_expiration_value = None;
  }

}



