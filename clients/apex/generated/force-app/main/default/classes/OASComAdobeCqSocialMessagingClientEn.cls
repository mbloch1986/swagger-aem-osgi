/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComAdobeCqSocialMessagingClientEn
 */
public class OASComAdobeCqSocialMessagingClientEn implements OAS.MappedProperties {
    /**
     * Get messageProperties
     * @return messageProperties
     */
    public OASConfigNodePropertyArray messageProperties { get; set; }

    /**
     * Get messageBoxSizeLimit
     * @return messageBoxSizeLimit
     */
    public OASConfigNodePropertyInteger messageBoxSizeLimit { get; set; }

    /**
     * Get messageCountLimit
     * @return messageCountLimit
     */
    public OASConfigNodePropertyInteger messageCountLimit { get; set; }

    /**
     * Get notifyFailure
     * @return notifyFailure
     */
    public OASConfigNodePropertyBoolean notifyFailure { get; set; }

    /**
     * Get failureMessageFrom
     * @return failureMessageFrom
     */
    public OASConfigNodePropertyString failureMessageFrom { get; set; }

    /**
     * Get failureTemplatePath
     * @return failureTemplatePath
     */
    public OASConfigNodePropertyString failureTemplatePath { get; set; }

    /**
     * Get maxRetries
     * @return maxRetries
     */
    public OASConfigNodePropertyInteger maxRetries { get; set; }

    /**
     * Get minWaitBetweenRetries
     * @return minWaitBetweenRetries
     */
    public OASConfigNodePropertyInteger minWaitBetweenRetries { get; set; }

    /**
     * Get countUpdatePoolSize
     * @return countUpdatePoolSize
     */
    public OASConfigNodePropertyInteger countUpdatePoolSize { get; set; }

    /**
     * Get inboxPath
     * @return inboxPath
     */
    public OASConfigNodePropertyString inboxPath { get; set; }

    /**
     * Get sentitemsPath
     * @return sentitemsPath
     */
    public OASConfigNodePropertyString sentitemsPath { get; set; }

    /**
     * Get supportAttachments
     * @return supportAttachments
     */
    public OASConfigNodePropertyBoolean supportAttachments { get; set; }

    /**
     * Get supportGroupMessaging
     * @return supportGroupMessaging
     */
    public OASConfigNodePropertyBoolean supportGroupMessaging { get; set; }

    /**
     * Get maxTotalRecipients
     * @return maxTotalRecipients
     */
    public OASConfigNodePropertyInteger maxTotalRecipients { get; set; }

    /**
     * Get batchSize
     * @return batchSize
     */
    public OASConfigNodePropertyInteger batchSize { get; set; }

    /**
     * Get maxTotalAttachmentSize
     * @return maxTotalAttachmentSize
     */
    public OASConfigNodePropertyInteger maxTotalAttachmentSize { get; set; }

    /**
     * Get attachmentTypeBlacklist
     * @return attachmentTypeBlacklist
     */
    public OASConfigNodePropertyArray attachmentTypeBlacklist { get; set; }

    /**
     * Get allowedAttachmentTypes
     * @return allowedAttachmentTypes
     */
    public OASConfigNodePropertyArray allowedAttachmentTypes { get; set; }

    /**
     * Get serviceSelector
     * @return serviceSelector
     */
    public OASConfigNodePropertyString serviceSelector { get; set; }

    /**
     * Get fieldWhitelist
     * @return fieldWhitelist
     */
    public OASConfigNodePropertyArray fieldWhitelist { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'message.properties' => 'messageProperties',
        'inbox.path' => 'inboxPath',
        'sentitems.path' => 'sentitemsPath'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComAdobeCqSocialMessagingClientEn getExample() {
        OASComAdobeCqSocialMessagingClientEn comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties = new OASComAdobeCqSocialMessagingClientEn();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.messageProperties = OASConfigNodePropertyArray.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.messageBoxSizeLimit = OASConfigNodePropertyInteger.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.messageCountLimit = OASConfigNodePropertyInteger.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.notifyFailure = OASConfigNodePropertyBoolean.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.failureMessageFrom = OASConfigNodePropertyString.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.failureTemplatePath = OASConfigNodePropertyString.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.maxRetries = OASConfigNodePropertyInteger.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.minWaitBetweenRetries = OASConfigNodePropertyInteger.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.countUpdatePoolSize = OASConfigNodePropertyInteger.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.inboxPath = OASConfigNodePropertyString.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.sentitemsPath = OASConfigNodePropertyString.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.supportAttachments = OASConfigNodePropertyBoolean.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.supportGroupMessaging = OASConfigNodePropertyBoolean.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.maxTotalRecipients = OASConfigNodePropertyInteger.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.batchSize = OASConfigNodePropertyInteger.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.maxTotalAttachmentSize = OASConfigNodePropertyInteger.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.attachmentTypeBlacklist = OASConfigNodePropertyArray.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.allowedAttachmentTypes = OASConfigNodePropertyArray.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.serviceSelector = OASConfigNodePropertyString.getExample();
          comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.fieldWhitelist = OASConfigNodePropertyArray.getExample();
        return comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComAdobeCqSocialMessagingClientEn) {           
            OASComAdobeCqSocialMessagingClientEn comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties = (OASComAdobeCqSocialMessagingClientEn) obj;
            return this.messageProperties == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.messageProperties
                && this.messageBoxSizeLimit == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.messageBoxSizeLimit
                && this.messageCountLimit == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.messageCountLimit
                && this.notifyFailure == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.notifyFailure
                && this.failureMessageFrom == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.failureMessageFrom
                && this.failureTemplatePath == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.failureTemplatePath
                && this.maxRetries == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.maxRetries
                && this.minWaitBetweenRetries == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.minWaitBetweenRetries
                && this.countUpdatePoolSize == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.countUpdatePoolSize
                && this.inboxPath == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.inboxPath
                && this.sentitemsPath == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.sentitemsPath
                && this.supportAttachments == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.supportAttachments
                && this.supportGroupMessaging == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.supportGroupMessaging
                && this.maxTotalRecipients == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.maxTotalRecipients
                && this.batchSize == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.batchSize
                && this.maxTotalAttachmentSize == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.maxTotalAttachmentSize
                && this.attachmentTypeBlacklist == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.attachmentTypeBlacklist
                && this.allowedAttachmentTypes == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.allowedAttachmentTypes
                && this.serviceSelector == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.serviceSelector
                && this.fieldWhitelist == comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties.fieldWhitelist;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (messageProperties == null ? 0 : System.hashCode(messageProperties));
        hashCode = (17 * hashCode) + (messageBoxSizeLimit == null ? 0 : System.hashCode(messageBoxSizeLimit));
        hashCode = (17 * hashCode) + (messageCountLimit == null ? 0 : System.hashCode(messageCountLimit));
        hashCode = (17 * hashCode) + (notifyFailure == null ? 0 : System.hashCode(notifyFailure));
        hashCode = (17 * hashCode) + (failureMessageFrom == null ? 0 : System.hashCode(failureMessageFrom));
        hashCode = (17 * hashCode) + (failureTemplatePath == null ? 0 : System.hashCode(failureTemplatePath));
        hashCode = (17 * hashCode) + (maxRetries == null ? 0 : System.hashCode(maxRetries));
        hashCode = (17 * hashCode) + (minWaitBetweenRetries == null ? 0 : System.hashCode(minWaitBetweenRetries));
        hashCode = (17 * hashCode) + (countUpdatePoolSize == null ? 0 : System.hashCode(countUpdatePoolSize));
        hashCode = (17 * hashCode) + (inboxPath == null ? 0 : System.hashCode(inboxPath));
        hashCode = (17 * hashCode) + (sentitemsPath == null ? 0 : System.hashCode(sentitemsPath));
        hashCode = (17 * hashCode) + (supportAttachments == null ? 0 : System.hashCode(supportAttachments));
        hashCode = (17 * hashCode) + (supportGroupMessaging == null ? 0 : System.hashCode(supportGroupMessaging));
        hashCode = (17 * hashCode) + (maxTotalRecipients == null ? 0 : System.hashCode(maxTotalRecipients));
        hashCode = (17 * hashCode) + (batchSize == null ? 0 : System.hashCode(batchSize));
        hashCode = (17 * hashCode) + (maxTotalAttachmentSize == null ? 0 : System.hashCode(maxTotalAttachmentSize));
        hashCode = (17 * hashCode) + (attachmentTypeBlacklist == null ? 0 : System.hashCode(attachmentTypeBlacklist));
        hashCode = (17 * hashCode) + (allowedAttachmentTypes == null ? 0 : System.hashCode(allowedAttachmentTypes));
        hashCode = (17 * hashCode) + (serviceSelector == null ? 0 : System.hashCode(serviceSelector));
        hashCode = (17 * hashCode) + (fieldWhitelist == null ? 0 : System.hashCode(fieldWhitelist));
        return hashCode;
    }
}

