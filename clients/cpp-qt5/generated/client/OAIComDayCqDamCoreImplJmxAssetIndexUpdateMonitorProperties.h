/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties.h
 *
 * 
 */

#ifndef OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties_H_
#define OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyFloat.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties: public OAIObject {
public:
    OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties();
    OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties(QString json);
    ~OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getJmxObjectname();
    void setJmxObjectname(OAIConfigNodePropertyString* jmx_objectname);

    OAIConfigNodePropertyBoolean* getPropertyMeasureEnabled();
    void setPropertyMeasureEnabled(OAIConfigNodePropertyBoolean* property_measure_enabled);

    OAIConfigNodePropertyString* getPropertyName();
    void setPropertyName(OAIConfigNodePropertyString* property_name);

    OAIConfigNodePropertyInteger* getPropertyMaxWaitMs();
    void setPropertyMaxWaitMs(OAIConfigNodePropertyInteger* property_max_wait_ms);

    OAIConfigNodePropertyFloat* getPropertyMaxRate();
    void setPropertyMaxRate(OAIConfigNodePropertyFloat* property_max_rate);

    OAIConfigNodePropertyBoolean* getFulltextMeasureEnabled();
    void setFulltextMeasureEnabled(OAIConfigNodePropertyBoolean* fulltext_measure_enabled);

    OAIConfigNodePropertyString* getFulltextName();
    void setFulltextName(OAIConfigNodePropertyString* fulltext_name);

    OAIConfigNodePropertyInteger* getFulltextMaxWaitMs();
    void setFulltextMaxWaitMs(OAIConfigNodePropertyInteger* fulltext_max_wait_ms);

    OAIConfigNodePropertyFloat* getFulltextMaxRate();
    void setFulltextMaxRate(OAIConfigNodePropertyFloat* fulltext_max_rate);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* jmx_objectname;
    bool m_jmx_objectname_isSet;

    OAIConfigNodePropertyBoolean* property_measure_enabled;
    bool m_property_measure_enabled_isSet;

    OAIConfigNodePropertyString* property_name;
    bool m_property_name_isSet;

    OAIConfigNodePropertyInteger* property_max_wait_ms;
    bool m_property_max_wait_ms_isSet;

    OAIConfigNodePropertyFloat* property_max_rate;
    bool m_property_max_rate_isSet;

    OAIConfigNodePropertyBoolean* fulltext_measure_enabled;
    bool m_fulltext_measure_enabled_isSet;

    OAIConfigNodePropertyString* fulltext_name;
    bool m_fulltext_name_isSet;

    OAIConfigNodePropertyInteger* fulltext_max_wait_ms;
    bool m_fulltext_max_wait_ms_isSet;

    OAIConfigNodePropertyFloat* fulltext_max_rate;
    bool m_fulltext_max_rate_isSet;

};

}

#endif /* OAIComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties_H_ */
