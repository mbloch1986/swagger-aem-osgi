/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties::ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties()
{
    m_Report_fetch_delayIsSet = false;
    
}

ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties::~ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties()
{
}

void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Report_fetch_delayIsSet)
    {
        val["report.fetch.delay"] = ModelBase::toJson(m_Report_fetch_delay);
    }
    

    return val;
}

void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties::fromJson(nlohmann::json& val)
{
    if(val.find("report.fetch.delay") != val.end())
    {
        if(!val["report.fetch.delay"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["report.fetch.delay"]);
            setReportFetchDelay( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties::getReportFetchDelay() const
{
    return m_Report_fetch_delay;
}
void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties::setReportFetchDelay(ConfigNodePropertyInteger const& value)
{
    m_Report_fetch_delay = value;
    m_Report_fetch_delayIsSet = true;
}
bool ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties::reportFetchDelayIsSet() const
{
    return m_Report_fetch_delayIsSet;
}
void ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMProperties::unsetReport_fetch_delay()
{
    m_Report_fetch_delayIsSet = false;
}

}
}
}
}

