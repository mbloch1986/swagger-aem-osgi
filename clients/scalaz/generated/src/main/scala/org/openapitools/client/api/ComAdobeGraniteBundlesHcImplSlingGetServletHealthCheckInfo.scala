package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo._

case class ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckProperties])

object ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfoCodecJson: CodecJson[ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo] = CodecJson.derive[ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo]
  implicit val ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfoDecoder: EntityDecoder[ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo] = jsonOf[ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo]
  implicit val ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfoEncoder: EntityEncoder[ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo] = jsonEncoderOf[ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo]
}
