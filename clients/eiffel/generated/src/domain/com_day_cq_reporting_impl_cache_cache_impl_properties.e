note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_REPORTING_IMPL_CACHE_CACHE_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    repcache_enable: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    repcache_ttl: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    repcache_max: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_repcache_enable (a_name: like repcache_enable)
        -- Set 'repcache_enable' with 'a_name'.
      do
        repcache_enable := a_name
      ensure
        repcache_enable_set: repcache_enable = a_name		
      end

    set_repcache_ttl (a_name: like repcache_ttl)
        -- Set 'repcache_ttl' with 'a_name'.
      do
        repcache_ttl := a_name
      ensure
        repcache_ttl_set: repcache_ttl = a_name		
      end

    set_repcache_max (a_name: like repcache_max)
        -- Set 'repcache_max' with 'a_name'.
      do
        repcache_max := a_name
      ensure
        repcache_max_set: repcache_max = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_REPORTING_IMPL_CACHE_CACHE_IMPL_PROPERTIES%N")
        if attached repcache_enable as l_repcache_enable then
          Result.append ("%Nrepcache_enable:")
          Result.append (l_repcache_enable.out)
          Result.append ("%N")    
        end  
        if attached repcache_ttl as l_repcache_ttl then
          Result.append ("%Nrepcache_ttl:")
          Result.append (l_repcache_ttl.out)
          Result.append ("%N")    
        end  
        if attached repcache_max as l_repcache_max then
          Result.append ("%Nrepcache_max:")
          Result.append (l_repcache_max.out)
          Result.append ("%N")    
        end  
      end
end


