/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyInteger;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties {
  
  @SerializedName("cq.social.reporting.analytics.polling.importer.interval")
  private ConfigNodePropertyInteger cqSocialReportingAnalyticsPollingImporterInterval = null;
  @SerializedName("cq.social.reporting.analytics.polling.importer.pageSize")
  private ConfigNodePropertyInteger cqSocialReportingAnalyticsPollingImporterPageSize = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getCqSocialReportingAnalyticsPollingImporterInterval() {
    return cqSocialReportingAnalyticsPollingImporterInterval;
  }
  public void setCqSocialReportingAnalyticsPollingImporterInterval(ConfigNodePropertyInteger cqSocialReportingAnalyticsPollingImporterInterval) {
    this.cqSocialReportingAnalyticsPollingImporterInterval = cqSocialReportingAnalyticsPollingImporterInterval;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getCqSocialReportingAnalyticsPollingImporterPageSize() {
    return cqSocialReportingAnalyticsPollingImporterPageSize;
  }
  public void setCqSocialReportingAnalyticsPollingImporterPageSize(ConfigNodePropertyInteger cqSocialReportingAnalyticsPollingImporterPageSize) {
    this.cqSocialReportingAnalyticsPollingImporterPageSize = cqSocialReportingAnalyticsPollingImporterPageSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties = (ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties) o;
    return (this.cqSocialReportingAnalyticsPollingImporterInterval == null ? comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties.cqSocialReportingAnalyticsPollingImporterInterval == null : this.cqSocialReportingAnalyticsPollingImporterInterval.equals(comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties.cqSocialReportingAnalyticsPollingImporterInterval)) &&
        (this.cqSocialReportingAnalyticsPollingImporterPageSize == null ? comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties.cqSocialReportingAnalyticsPollingImporterPageSize == null : this.cqSocialReportingAnalyticsPollingImporterPageSize.equals(comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties.cqSocialReportingAnalyticsPollingImporterPageSize));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.cqSocialReportingAnalyticsPollingImporterInterval == null ? 0: this.cqSocialReportingAnalyticsPollingImporterInterval.hashCode());
    result = 31 * result + (this.cqSocialReportingAnalyticsPollingImporterPageSize == null ? 0: this.cqSocialReportingAnalyticsPollingImporterPageSize.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties {\n");
    
    sb.append("  cqSocialReportingAnalyticsPollingImporterInterval: ").append(cqSocialReportingAnalyticsPollingImporterInterval).append("\n");
    sb.append("  cqSocialReportingAnalyticsPollingImporterPageSize: ").append(cqSocialReportingAnalyticsPollingImporterPageSize).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
