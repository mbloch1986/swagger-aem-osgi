# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sling_name: ConfigNodePropertyString=None, sling_description: ConfigNodePropertyString=None):  # noqa: E501
        """OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties - a model defined in OpenAPI

        :param sling_name: The sling_name of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.  # noqa: E501
        :type sling_name: ConfigNodePropertyString
        :param sling_description: The sling_description of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.  # noqa: E501
        :type sling_description: ConfigNodePropertyString
        """
        self.openapi_types = {
            'sling_name': ConfigNodePropertyString,
            'sling_description': ConfigNodePropertyString
        }

        self.attribute_map = {
            'sling_name': 'sling.name',
            'sling_description': 'sling.description'
        }

        self._sling_name = sling_name
        self._sling_description = sling_description

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingSettingsImplSlingSettingsServiceImplProperties of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.  # noqa: E501
        :rtype: OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sling_name(self) -> ConfigNodePropertyString:
        """Gets the sling_name of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.


        :return: The sling_name of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._sling_name

    @sling_name.setter
    def sling_name(self, sling_name: ConfigNodePropertyString):
        """Sets the sling_name of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.


        :param sling_name: The sling_name of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.
        :type sling_name: ConfigNodePropertyString
        """

        self._sling_name = sling_name

    @property
    def sling_description(self) -> ConfigNodePropertyString:
        """Gets the sling_description of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.


        :return: The sling_description of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._sling_description

    @sling_description.setter
    def sling_description(self, sling_description: ConfigNodePropertyString):
        """Sets the sling_description of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.


        :param sling_description: The sling_description of this OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.
        :type sling_description: ConfigNodePropertyString
        """

        self._sling_description = sling_description
