/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqDamCoreImplMissingMetadataNotificationJobProperties.h
 *
 * 
 */

#ifndef ComDayCqDamCoreImplMissingMetadataNotificationJobProperties_H_
#define ComDayCqDamCoreImplMissingMetadataNotificationJobProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqDamCoreImplMissingMetadataNotificationJobProperties
    : public ModelBase
{
public:
    ComDayCqDamCoreImplMissingMetadataNotificationJobProperties();
    virtual ~ComDayCqDamCoreImplMissingMetadataNotificationJobProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqDamCoreImplMissingMetadataNotificationJobProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getCqDamMissingmetadataNotificationSchedulerIstimebased() const;
    void setCqDamMissingmetadataNotificationSchedulerIstimebased(ConfigNodePropertyBoolean const& value);
    bool cqDamMissingmetadataNotificationSchedulerIstimebasedIsSet() const;
    void unsetCq_dam_missingmetadata_notification_scheduler_istimebased();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getCqDamMissingmetadataNotificationSchedulerTimebasedRule() const;
    void setCqDamMissingmetadataNotificationSchedulerTimebasedRule(ConfigNodePropertyString const& value);
    bool cqDamMissingmetadataNotificationSchedulerTimebasedRuleIsSet() const;
    void unsetCq_dam_missingmetadata_notification_scheduler_timebased_rule();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getCqDamMissingmetadataNotificationSchedulerPeriodRule() const;
    void setCqDamMissingmetadataNotificationSchedulerPeriodRule(ConfigNodePropertyInteger const& value);
    bool cqDamMissingmetadataNotificationSchedulerPeriodRuleIsSet() const;
    void unsetCq_dam_missingmetadata_notification_scheduler_period_rule();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getCqDamMissingmetadataNotificationRecipient() const;
    void setCqDamMissingmetadataNotificationRecipient(ConfigNodePropertyString const& value);
    bool cqDamMissingmetadataNotificationRecipientIsSet() const;
    void unsetCq_dam_missingmetadata_notification_recipient();

protected:
    ConfigNodePropertyBoolean m_Cq_dam_missingmetadata_notification_scheduler_istimebased;
    bool m_Cq_dam_missingmetadata_notification_scheduler_istimebasedIsSet;
    ConfigNodePropertyString m_Cq_dam_missingmetadata_notification_scheduler_timebased_rule;
    bool m_Cq_dam_missingmetadata_notification_scheduler_timebased_ruleIsSet;
    ConfigNodePropertyInteger m_Cq_dam_missingmetadata_notification_scheduler_period_rule;
    bool m_Cq_dam_missingmetadata_notification_scheduler_period_ruleIsSet;
    ConfigNodePropertyString m_Cq_dam_missingmetadata_notification_recipient;
    bool m_Cq_dam_missingmetadata_notification_recipientIsSet;
};

}
}
}
}

#endif /* ComDayCqDamCoreImplMissingMetadataNotificationJobProperties_H_ */
