/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties() {
    this->init();
}

OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::~OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties() {
    
}

void
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::init() {
    m_extension_order_isSet = false;
    m_flush_forumontopic_isSet = false;
}

void
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(extension_order, json[QString("extension.order")]);
    
    ::OpenAPI::fromJsonValue(flush_forumontopic, json[QString("flush.forumontopic")]);
    
}

QString
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::asJsonObject() const {
    QJsonObject obj;
	if(extension_order.isSet()){
        obj.insert(QString("extension.order"), ::OpenAPI::toJsonValue(extension_order));
    }
	if(flush_forumontopic.isSet()){
        obj.insert(QString("flush.forumontopic"), ::OpenAPI::toJsonValue(flush_forumontopic));
    }
    return obj;
}

OAIConfigNodePropertyInteger
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::getExtensionOrder() const {
    return extension_order;
}
void
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::setExtensionOrder(const OAIConfigNodePropertyInteger &extension_order) {
    this->extension_order = extension_order;
    this->m_extension_order_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::getFlushForumontopic() const {
    return flush_forumontopic;
}
void
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::setFlushForumontopic(const OAIConfigNodePropertyBoolean &flush_forumontopic) {
    this->flush_forumontopic = flush_forumontopic;
    this->m_flush_forumontopic_isSet = true;
}


bool
OAIComAdobeCqSocialForumDispatcherImplFlushOperationsProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(extension_order.isSet()){ isObjectUpdated = true; break;}
    
        if(flush_forumontopic.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

