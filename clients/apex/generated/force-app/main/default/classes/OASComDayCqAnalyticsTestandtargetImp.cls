/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComDayCqAnalyticsTestandtargetImp
 */
public class OASComDayCqAnalyticsTestandtargetImp implements OAS.MappedProperties {
    /**
     * Get cqAnalyticsTestandtargetApiUrl
     * @return cqAnalyticsTestandtargetApiUrl
     */
    public OASConfigNodePropertyString cqAnalyticsTestandtargetApiUrl { get; set; }

    /**
     * Get cqAnalyticsTestandtargetTimeout
     * @return cqAnalyticsTestandtargetTimeout
     */
    public OASConfigNodePropertyInteger cqAnalyticsTestandtargetTimeout { get; set; }

    /**
     * Get cqAnalyticsTestandtargetSockettimeout
     * @return cqAnalyticsTestandtargetSockettimeout
     */
    public OASConfigNodePropertyInteger cqAnalyticsTestandtargetSockettimeout { get; set; }

    /**
     * Get cqAnalyticsTestandtargetRecommendationsUrlReplace
     * @return cqAnalyticsTestandtargetRecommendationsUrlReplace
     */
    public OASConfigNodePropertyString cqAnalyticsTestandtargetRecommendationsUrlReplace { get; set; }

    /**
     * Get cqAnalyticsTestandtargetRecommendationsUrlReplacewith
     * @return cqAnalyticsTestandtargetRecommendationsUrlReplacewith
     */
    public OASConfigNodePropertyString cqAnalyticsTestandtargetRecommendationsUrlReplacewith { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'cq.analytics.testandtarget.api.url' => 'cqAnalyticsTestandtargetApiUrl',
        'cq.analytics.testandtarget.timeout' => 'cqAnalyticsTestandtargetTimeout',
        'cq.analytics.testandtarget.sockettimeout' => 'cqAnalyticsTestandtargetSockettimeout',
        'cq.analytics.testandtarget.recommendations.url.replace' => 'cqAnalyticsTestandtargetRecommendationsUrlReplace',
        'cq.analytics.testandtarget.recommendations.url.replacewith' => 'cqAnalyticsTestandtargetRecommendationsUrlReplacewith'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComDayCqAnalyticsTestandtargetImp getExample() {
        OASComDayCqAnalyticsTestandtargetImp comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties = new OASComDayCqAnalyticsTestandtargetImp();
          comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetApiUrl = OASConfigNodePropertyString.getExample();
          comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetTimeout = OASConfigNodePropertyInteger.getExample();
          comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetSockettimeout = OASConfigNodePropertyInteger.getExample();
          comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetRecommendationsUrlReplace = OASConfigNodePropertyString.getExample();
          comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetRecommendationsUrlReplacewith = OASConfigNodePropertyString.getExample();
        return comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComDayCqAnalyticsTestandtargetImp) {           
            OASComDayCqAnalyticsTestandtargetImp comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties = (OASComDayCqAnalyticsTestandtargetImp) obj;
            return this.cqAnalyticsTestandtargetApiUrl == comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetApiUrl
                && this.cqAnalyticsTestandtargetTimeout == comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetTimeout
                && this.cqAnalyticsTestandtargetSockettimeout == comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetSockettimeout
                && this.cqAnalyticsTestandtargetRecommendationsUrlReplace == comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetRecommendationsUrlReplace
                && this.cqAnalyticsTestandtargetRecommendationsUrlReplacewith == comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties.cqAnalyticsTestandtargetRecommendationsUrlReplacewith;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (cqAnalyticsTestandtargetApiUrl == null ? 0 : System.hashCode(cqAnalyticsTestandtargetApiUrl));
        hashCode = (17 * hashCode) + (cqAnalyticsTestandtargetTimeout == null ? 0 : System.hashCode(cqAnalyticsTestandtargetTimeout));
        hashCode = (17 * hashCode) + (cqAnalyticsTestandtargetSockettimeout == null ? 0 : System.hashCode(cqAnalyticsTestandtargetSockettimeout));
        hashCode = (17 * hashCode) + (cqAnalyticsTestandtargetRecommendationsUrlReplace == null ? 0 : System.hashCode(cqAnalyticsTestandtargetRecommendationsUrlReplace));
        hashCode = (17 * hashCode) + (cqAnalyticsTestandtargetRecommendationsUrlReplacewith == null ? 0 : System.hashCode(cqAnalyticsTestandtargetRecommendationsUrlReplacewith));
        return hashCode;
    }
}

