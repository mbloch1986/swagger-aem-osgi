/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties()
{
    m_Oauth_cookie_login_timeoutIsSet = false;
    m_Oauth_cookie_max_ageIsSet = false;
    
}

ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::~ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties()
{
}

void ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Oauth_cookie_login_timeoutIsSet)
    {
        val["oauth.cookie.login.timeout"] = ModelBase::toJson(m_Oauth_cookie_login_timeout);
    }
    if(m_Oauth_cookie_max_ageIsSet)
    {
        val["oauth.cookie.max.age"] = ModelBase::toJson(m_Oauth_cookie_max_age);
    }
    

    return val;
}

void ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::fromJson(nlohmann::json& val)
{
    if(val.find("oauth.cookie.login.timeout") != val.end())
    {
        if(!val["oauth.cookie.login.timeout"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["oauth.cookie.login.timeout"]);
            setOauthCookieLoginTimeout( newItem );
        }
        
    }
    if(val.find("oauth.cookie.max.age") != val.end())
    {
        if(!val["oauth.cookie.max.age"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["oauth.cookie.max.age"]);
            setOauthCookieMaxAge( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::getOauthCookieLoginTimeout() const
{
    return m_Oauth_cookie_login_timeout;
}
void ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::setOauthCookieLoginTimeout(ConfigNodePropertyString const& value)
{
    m_Oauth_cookie_login_timeout = value;
    m_Oauth_cookie_login_timeoutIsSet = true;
}
bool ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::oauthCookieLoginTimeoutIsSet() const
{
    return m_Oauth_cookie_login_timeoutIsSet;
}
void ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::unsetOauth_cookie_login_timeout()
{
    m_Oauth_cookie_login_timeoutIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::getOauthCookieMaxAge() const
{
    return m_Oauth_cookie_max_age;
}
void ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::setOauthCookieMaxAge(ConfigNodePropertyString const& value)
{
    m_Oauth_cookie_max_age = value;
    m_Oauth_cookie_max_ageIsSet = true;
}
bool ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::oauthCookieMaxAgeIsSet() const
{
    return m_Oauth_cookie_max_ageIsSet;
}
void ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::unsetOauth_cookie_max_age()
{
    m_Oauth_cookie_max_ageIsSet = false;
}

}
}
}
}

