# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accepted: ConfigNodePropertyBoolean=None, ranked: ConfigNodePropertyInteger=None):  # noqa: E501
        """ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties - a model defined in OpenAPI

        :param accepted: The accepted of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.  # noqa: E501
        :type accepted: ConfigNodePropertyBoolean
        :param ranked: The ranked of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.  # noqa: E501
        :type ranked: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'accepted': ConfigNodePropertyBoolean,
            'ranked': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'accepted': 'accepted',
            'ranked': 'ranked'
        }

        self._accepted = accepted
        self._ranked = ranked

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.  # noqa: E501
        :rtype: ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accepted(self) -> ConfigNodePropertyBoolean:
        """Gets the accepted of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.


        :return: The accepted of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._accepted

    @accepted.setter
    def accepted(self, accepted: ConfigNodePropertyBoolean):
        """Sets the accepted of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.


        :param accepted: The accepted of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.
        :type accepted: ConfigNodePropertyBoolean
        """

        self._accepted = accepted

    @property
    def ranked(self) -> ConfigNodePropertyInteger:
        """Gets the ranked of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.


        :return: The ranked of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._ranked

    @ranked.setter
    def ranked(self, ranked: ConfigNodePropertyInteger):
        """Sets the ranked of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.


        :param ranked: The ranked of this ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenProperties.
        :type ranked: ConfigNodePropertyInteger
        """

        self._ranked = ranked
