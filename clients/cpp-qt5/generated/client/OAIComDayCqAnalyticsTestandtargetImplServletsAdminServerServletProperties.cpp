/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties() {
    init();
}

OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::~OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties() {
    this->cleanup();
}

void
OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::init() {
    testandtarget_endpoint_url = new OAIConfigNodePropertyString();
    m_testandtarget_endpoint_url_isSet = false;
}

void
OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::cleanup() {
    if(testandtarget_endpoint_url != nullptr) { 
        delete testandtarget_endpoint_url;
    }
}

OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties*
OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&testandtarget_endpoint_url, pJson["testandtarget.endpoint.url"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::asJsonObject() {
    QJsonObject obj;
    if((testandtarget_endpoint_url != nullptr) && (testandtarget_endpoint_url->isSet())){
        toJsonValue(QString("testandtarget.endpoint.url"), testandtarget_endpoint_url, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::getTestandtargetEndpointUrl() {
    return testandtarget_endpoint_url;
}
void
OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::setTestandtargetEndpointUrl(OAIConfigNodePropertyString* testandtarget_endpoint_url) {
    this->testandtarget_endpoint_url = testandtarget_endpoint_url;
    this->m_testandtarget_endpoint_url_isSet = true;
}


bool
OAIComDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(testandtarget_endpoint_url != nullptr && testandtarget_endpoint_url->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

