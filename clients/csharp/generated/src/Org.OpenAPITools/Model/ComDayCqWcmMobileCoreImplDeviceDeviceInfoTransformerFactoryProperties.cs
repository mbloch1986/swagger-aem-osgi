/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties
    /// </summary>
    [DataContract]
    public partial class ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties :  IEquatable<ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties" /> class.
        /// </summary>
        /// <param name="deviceInfoTransformerEnabled">deviceInfoTransformerEnabled.</param>
        /// <param name="deviceInfoTransformerCssStyle">deviceInfoTransformerCssStyle.</param>
        public ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties(ConfigNodePropertyBoolean deviceInfoTransformerEnabled = default(ConfigNodePropertyBoolean), ConfigNodePropertyString deviceInfoTransformerCssStyle = default(ConfigNodePropertyString))
        {
            this.DeviceInfoTransformerEnabled = deviceInfoTransformerEnabled;
            this.DeviceInfoTransformerCssStyle = deviceInfoTransformerCssStyle;
        }
        
        /// <summary>
        /// Gets or Sets DeviceInfoTransformerEnabled
        /// </summary>
        [DataMember(Name="device.info.transformer.enabled", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean DeviceInfoTransformerEnabled { get; set; }

        /// <summary>
        /// Gets or Sets DeviceInfoTransformerCssStyle
        /// </summary>
        [DataMember(Name="device.info.transformer.css.style", EmitDefaultValue=false)]
        public ConfigNodePropertyString DeviceInfoTransformerCssStyle { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties {\n");
            sb.Append("  DeviceInfoTransformerEnabled: ").Append(DeviceInfoTransformerEnabled).Append("\n");
            sb.Append("  DeviceInfoTransformerCssStyle: ").Append(DeviceInfoTransformerCssStyle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties);
        }

        /// <summary>
        /// Returns true if ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DeviceInfoTransformerEnabled == input.DeviceInfoTransformerEnabled ||
                    (this.DeviceInfoTransformerEnabled != null &&
                    this.DeviceInfoTransformerEnabled.Equals(input.DeviceInfoTransformerEnabled))
                ) && 
                (
                    this.DeviceInfoTransformerCssStyle == input.DeviceInfoTransformerCssStyle ||
                    (this.DeviceInfoTransformerCssStyle != null &&
                    this.DeviceInfoTransformerCssStyle.Equals(input.DeviceInfoTransformerCssStyle))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DeviceInfoTransformerEnabled != null)
                    hashCode = hashCode * 59 + this.DeviceInfoTransformerEnabled.GetHashCode();
                if (this.DeviceInfoTransformerCssStyle != null)
                    hashCode = hashCode * 59 + this.DeviceInfoTransformerCssStyle.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
