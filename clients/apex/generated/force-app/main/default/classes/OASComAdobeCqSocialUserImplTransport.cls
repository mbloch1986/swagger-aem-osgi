/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComAdobeCqSocialUserImplTransport
 */
public class OASComAdobeCqSocialUserImplTransport implements OAS.MappedProperties {
    /**
     * Get enable
     * @return enable
     */
    public OASConfigNodePropertyBoolean enable { get; set; }

    /**
     * Get agentConfiguration
     * @return agentConfiguration
     */
    public OASConfigNodePropertyArray agentConfiguration { get; set; }

    /**
     * Get contextPath
     * @return contextPath
     */
    public OASConfigNodePropertyString contextPath { get; set; }

    /**
     * Get disabledCipherSuites
     * @return disabledCipherSuites
     */
    public OASConfigNodePropertyArray disabledCipherSuites { get; set; }

    /**
     * Get enabledCipherSuites
     * @return enabledCipherSuites
     */
    public OASConfigNodePropertyArray enabledCipherSuites { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'agent.configuration' => 'agentConfiguration',
        'context.path' => 'contextPath',
        'disabled.cipher.suites' => 'disabledCipherSuites',
        'enabled.cipher.suites' => 'enabledCipherSuites'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComAdobeCqSocialUserImplTransport getExample() {
        OASComAdobeCqSocialUserImplTransport comAdobeCqSocialUserImplTransportHttpToPublisherProperties = new OASComAdobeCqSocialUserImplTransport();
          comAdobeCqSocialUserImplTransportHttpToPublisherProperties.enable = OASConfigNodePropertyBoolean.getExample();
          comAdobeCqSocialUserImplTransportHttpToPublisherProperties.agentConfiguration = OASConfigNodePropertyArray.getExample();
          comAdobeCqSocialUserImplTransportHttpToPublisherProperties.contextPath = OASConfigNodePropertyString.getExample();
          comAdobeCqSocialUserImplTransportHttpToPublisherProperties.disabledCipherSuites = OASConfigNodePropertyArray.getExample();
          comAdobeCqSocialUserImplTransportHttpToPublisherProperties.enabledCipherSuites = OASConfigNodePropertyArray.getExample();
        return comAdobeCqSocialUserImplTransportHttpToPublisherProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComAdobeCqSocialUserImplTransport) {           
            OASComAdobeCqSocialUserImplTransport comAdobeCqSocialUserImplTransportHttpToPublisherProperties = (OASComAdobeCqSocialUserImplTransport) obj;
            return this.enable == comAdobeCqSocialUserImplTransportHttpToPublisherProperties.enable
                && this.agentConfiguration == comAdobeCqSocialUserImplTransportHttpToPublisherProperties.agentConfiguration
                && this.contextPath == comAdobeCqSocialUserImplTransportHttpToPublisherProperties.contextPath
                && this.disabledCipherSuites == comAdobeCqSocialUserImplTransportHttpToPublisherProperties.disabledCipherSuites
                && this.enabledCipherSuites == comAdobeCqSocialUserImplTransportHttpToPublisherProperties.enabledCipherSuites;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (enable == null ? 0 : System.hashCode(enable));
        hashCode = (17 * hashCode) + (agentConfiguration == null ? 0 : System.hashCode(agentConfiguration));
        hashCode = (17 * hashCode) + (contextPath == null ? 0 : System.hashCode(contextPath));
        hashCode = (17 * hashCode) + (disabledCipherSuites == null ? 0 : System.hashCode(disabledCipherSuites));
        hashCode = (17 * hashCode) + (enabledCipherSuites == null ? 0 : System.hashCode(enabledCipherSuites));
        return hashCode;
    }
}

