# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sling_servlet_paths: ConfigNodePropertyString=None, sling_servlet_methods: ConfigNodePropertyString=None):  # noqa: E501
        """ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties - a model defined in OpenAPI

        :param sling_servlet_paths: The sling_servlet_paths of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.  # noqa: E501
        :type sling_servlet_paths: ConfigNodePropertyString
        :param sling_servlet_methods: The sling_servlet_methods of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.  # noqa: E501
        :type sling_servlet_methods: ConfigNodePropertyString
        """
        self.openapi_types = {
            'sling_servlet_paths': ConfigNodePropertyString,
            'sling_servlet_methods': ConfigNodePropertyString
        }

        self.attribute_map = {
            'sling_servlet_paths': 'sling.servlet.paths',
            'sling_servlet_methods': 'sling.servlet.methods'
        }

        self._sling_servlet_paths = sling_servlet_paths
        self._sling_servlet_methods = sling_servlet_methods

    @classmethod
    def from_dict(cls, dikt) -> 'ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comDayCqDamS7damCommonServletsS7damProductInfoServletProperties of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.  # noqa: E501
        :rtype: ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sling_servlet_paths(self) -> ConfigNodePropertyString:
        """Gets the sling_servlet_paths of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.


        :return: The sling_servlet_paths of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._sling_servlet_paths

    @sling_servlet_paths.setter
    def sling_servlet_paths(self, sling_servlet_paths: ConfigNodePropertyString):
        """Sets the sling_servlet_paths of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.


        :param sling_servlet_paths: The sling_servlet_paths of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.
        :type sling_servlet_paths: ConfigNodePropertyString
        """

        self._sling_servlet_paths = sling_servlet_paths

    @property
    def sling_servlet_methods(self) -> ConfigNodePropertyString:
        """Gets the sling_servlet_methods of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.


        :return: The sling_servlet_methods of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._sling_servlet_methods

    @sling_servlet_methods.setter
    def sling_servlet_methods(self, sling_servlet_methods: ConfigNodePropertyString):
        """Sets the sling_servlet_methods of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.


        :param sling_servlet_methods: The sling_servlet_methods of this ComDayCqDamS7damCommonServletsS7damProductInfoServletProperties.
        :type sling_servlet_methods: ConfigNodePropertyString
        """

        self._sling_servlet_methods = sling_servlet_methods
