/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheFelixJaasConfigurationSpiProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheFelixJaasConfigurationSpiProperties::OAIOrgApacheFelixJaasConfigurationSpiProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheFelixJaasConfigurationSpiProperties::OAIOrgApacheFelixJaasConfigurationSpiProperties() {
    init();
}

OAIOrgApacheFelixJaasConfigurationSpiProperties::~OAIOrgApacheFelixJaasConfigurationSpiProperties() {
    this->cleanup();
}

void
OAIOrgApacheFelixJaasConfigurationSpiProperties::init() {
    jaas_default_realm_name = new OAIConfigNodePropertyString();
    m_jaas_default_realm_name_isSet = false;
    jaas_config_provider_name = new OAIConfigNodePropertyString();
    m_jaas_config_provider_name_isSet = false;
    jaas_global_config_policy = new OAIConfigNodePropertyDropDown();
    m_jaas_global_config_policy_isSet = false;
}

void
OAIOrgApacheFelixJaasConfigurationSpiProperties::cleanup() {
    if(jaas_default_realm_name != nullptr) { 
        delete jaas_default_realm_name;
    }
    if(jaas_config_provider_name != nullptr) { 
        delete jaas_config_provider_name;
    }
    if(jaas_global_config_policy != nullptr) { 
        delete jaas_global_config_policy;
    }
}

OAIOrgApacheFelixJaasConfigurationSpiProperties*
OAIOrgApacheFelixJaasConfigurationSpiProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheFelixJaasConfigurationSpiProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&jaas_default_realm_name, pJson["jaas.defaultRealmName"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&jaas_config_provider_name, pJson["jaas.configProviderName"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&jaas_global_config_policy, pJson["jaas.globalConfigPolicy"], "OAIConfigNodePropertyDropDown", "OAIConfigNodePropertyDropDown");
    
}

QString
OAIOrgApacheFelixJaasConfigurationSpiProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheFelixJaasConfigurationSpiProperties::asJsonObject() {
    QJsonObject obj;
    if((jaas_default_realm_name != nullptr) && (jaas_default_realm_name->isSet())){
        toJsonValue(QString("jaas.defaultRealmName"), jaas_default_realm_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((jaas_config_provider_name != nullptr) && (jaas_config_provider_name->isSet())){
        toJsonValue(QString("jaas.configProviderName"), jaas_config_provider_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((jaas_global_config_policy != nullptr) && (jaas_global_config_policy->isSet())){
        toJsonValue(QString("jaas.globalConfigPolicy"), jaas_global_config_policy, obj, QString("OAIConfigNodePropertyDropDown"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixJaasConfigurationSpiProperties::getJaasDefaultRealmName() {
    return jaas_default_realm_name;
}
void
OAIOrgApacheFelixJaasConfigurationSpiProperties::setJaasDefaultRealmName(OAIConfigNodePropertyString* jaas_default_realm_name) {
    this->jaas_default_realm_name = jaas_default_realm_name;
    this->m_jaas_default_realm_name_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheFelixJaasConfigurationSpiProperties::getJaasConfigProviderName() {
    return jaas_config_provider_name;
}
void
OAIOrgApacheFelixJaasConfigurationSpiProperties::setJaasConfigProviderName(OAIConfigNodePropertyString* jaas_config_provider_name) {
    this->jaas_config_provider_name = jaas_config_provider_name;
    this->m_jaas_config_provider_name_isSet = true;
}

OAIConfigNodePropertyDropDown*
OAIOrgApacheFelixJaasConfigurationSpiProperties::getJaasGlobalConfigPolicy() {
    return jaas_global_config_policy;
}
void
OAIOrgApacheFelixJaasConfigurationSpiProperties::setJaasGlobalConfigPolicy(OAIConfigNodePropertyDropDown* jaas_global_config_policy) {
    this->jaas_global_config_policy = jaas_global_config_policy;
    this->m_jaas_global_config_policy_isSet = true;
}


bool
OAIOrgApacheFelixJaasConfigurationSpiProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(jaas_default_realm_name != nullptr && jaas_default_realm_name->isSet()){ isObjectUpdated = true; break;}
        if(jaas_config_provider_name != nullptr && jaas_config_provider_name->isSet()){ isObjectUpdated = true; break;}
        if(jaas_global_config_policy != nullptr && jaas_global_config_policy->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

