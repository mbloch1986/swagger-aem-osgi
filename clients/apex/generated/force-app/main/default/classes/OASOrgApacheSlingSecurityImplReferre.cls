/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASOrgApacheSlingSecurityImplReferre
 */
public class OASOrgApacheSlingSecurityImplReferre implements OAS.MappedProperties {
    /**
     * Get allowEmpty
     * @return allowEmpty
     */
    public OASConfigNodePropertyBoolean allowEmpty { get; set; }

    /**
     * Get allowHosts
     * @return allowHosts
     */
    public OASConfigNodePropertyArray allowHosts { get; set; }

    /**
     * Get allowHostsRegexp
     * @return allowHostsRegexp
     */
    public OASConfigNodePropertyArray allowHostsRegexp { get; set; }

    /**
     * Get filterMethods
     * @return filterMethods
     */
    public OASConfigNodePropertyArray filterMethods { get; set; }

    /**
     * Get excludeAgentsRegexp
     * @return excludeAgentsRegexp
     */
    public OASConfigNodePropertyArray excludeAgentsRegexp { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'allow.empty' => 'allowEmpty',
        'allow.hosts' => 'allowHosts',
        'allow.hosts.regexp' => 'allowHostsRegexp',
        'filter.methods' => 'filterMethods',
        'exclude.agents.regexp' => 'excludeAgentsRegexp'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrgApacheSlingSecurityImplReferre getExample() {
        OASOrgApacheSlingSecurityImplReferre orgApacheSlingSecurityImplReferrerFilterProperties = new OASOrgApacheSlingSecurityImplReferre();
          orgApacheSlingSecurityImplReferrerFilterProperties.allowEmpty = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingSecurityImplReferrerFilterProperties.allowHosts = OASConfigNodePropertyArray.getExample();
          orgApacheSlingSecurityImplReferrerFilterProperties.allowHostsRegexp = OASConfigNodePropertyArray.getExample();
          orgApacheSlingSecurityImplReferrerFilterProperties.filterMethods = OASConfigNodePropertyArray.getExample();
          orgApacheSlingSecurityImplReferrerFilterProperties.excludeAgentsRegexp = OASConfigNodePropertyArray.getExample();
        return orgApacheSlingSecurityImplReferrerFilterProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgApacheSlingSecurityImplReferre) {           
            OASOrgApacheSlingSecurityImplReferre orgApacheSlingSecurityImplReferrerFilterProperties = (OASOrgApacheSlingSecurityImplReferre) obj;
            return this.allowEmpty == orgApacheSlingSecurityImplReferrerFilterProperties.allowEmpty
                && this.allowHosts == orgApacheSlingSecurityImplReferrerFilterProperties.allowHosts
                && this.allowHostsRegexp == orgApacheSlingSecurityImplReferrerFilterProperties.allowHostsRegexp
                && this.filterMethods == orgApacheSlingSecurityImplReferrerFilterProperties.filterMethods
                && this.excludeAgentsRegexp == orgApacheSlingSecurityImplReferrerFilterProperties.excludeAgentsRegexp;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (allowEmpty == null ? 0 : System.hashCode(allowEmpty));
        hashCode = (17 * hashCode) + (allowHosts == null ? 0 : System.hashCode(allowHosts));
        hashCode = (17 * hashCode) + (allowHostsRegexp == null ? 0 : System.hashCode(allowHostsRegexp));
        hashCode = (17 * hashCode) + (filterMethods == null ? 0 : System.hashCode(filterMethods));
        hashCode = (17 * hashCode) + (excludeAgentsRegexp == null ? 0 : System.hashCode(excludeAgentsRegexp));
        return hashCode;
    }
}

