/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASOrgApacheJackrabbitOakSegmentSegm
 */
public class OASOrgApacheJackrabbitOakSegmentSegm implements OAS.MappedProperties {
    /**
     * Get repositoryHome
     * @return repositoryHome
     */
    public OASConfigNodePropertyString repositoryHome { get; set; }

    /**
     * Get tarmkMode
     * @return tarmkMode
     */
    public OASConfigNodePropertyString tarmkMode { get; set; }

    /**
     * Get tarmkSize
     * @return tarmkSize
     */
    public OASConfigNodePropertyInteger tarmkSize { get; set; }

    /**
     * Get segmentCacheSize
     * @return segmentCacheSize
     */
    public OASConfigNodePropertyInteger segmentCacheSize { get; set; }

    /**
     * Get stringCacheSize
     * @return stringCacheSize
     */
    public OASConfigNodePropertyInteger stringCacheSize { get; set; }

    /**
     * Get templateCacheSize
     * @return templateCacheSize
     */
    public OASConfigNodePropertyInteger templateCacheSize { get; set; }

    /**
     * Get stringDeduplicationCacheSize
     * @return stringDeduplicationCacheSize
     */
    public OASConfigNodePropertyInteger stringDeduplicationCacheSize { get; set; }

    /**
     * Get templateDeduplicationCacheSize
     * @return templateDeduplicationCacheSize
     */
    public OASConfigNodePropertyInteger templateDeduplicationCacheSize { get; set; }

    /**
     * Get nodeDeduplicationCacheSize
     * @return nodeDeduplicationCacheSize
     */
    public OASConfigNodePropertyInteger nodeDeduplicationCacheSize { get; set; }

    /**
     * Get pauseCompaction
     * @return pauseCompaction
     */
    public OASConfigNodePropertyBoolean pauseCompaction { get; set; }

    /**
     * Get compactionRetryCount
     * @return compactionRetryCount
     */
    public OASConfigNodePropertyInteger compactionRetryCount { get; set; }

    /**
     * Get compactionForceTimeout
     * @return compactionForceTimeout
     */
    public OASConfigNodePropertyInteger compactionForceTimeout { get; set; }

    /**
     * Get compactionSizeDeltaEstimation
     * @return compactionSizeDeltaEstimation
     */
    public OASConfigNodePropertyInteger compactionSizeDeltaEstimation { get; set; }

    /**
     * Get compactionDisableEstimation
     * @return compactionDisableEstimation
     */
    public OASConfigNodePropertyBoolean compactionDisableEstimation { get; set; }

    /**
     * Get compactionRetainedGenerations
     * @return compactionRetainedGenerations
     */
    public OASConfigNodePropertyInteger compactionRetainedGenerations { get; set; }

    /**
     * Get compactionMemoryThreshold
     * @return compactionMemoryThreshold
     */
    public OASConfigNodePropertyInteger compactionMemoryThreshold { get; set; }

    /**
     * Get compactionProgressLog
     * @return compactionProgressLog
     */
    public OASConfigNodePropertyInteger compactionProgressLog { get; set; }

    /**
     * Get standby
     * @return standby
     */
    public OASConfigNodePropertyBoolean standby { get; set; }

    /**
     * Get customBlobStore
     * @return customBlobStore
     */
    public OASConfigNodePropertyBoolean customBlobStore { get; set; }

    /**
     * Get customSegmentStore
     * @return customSegmentStore
     */
    public OASConfigNodePropertyBoolean customSegmentStore { get; set; }

    /**
     * Get splitPersistence
     * @return splitPersistence
     */
    public OASConfigNodePropertyBoolean splitPersistence { get; set; }

    /**
     * Get repositoryBackupDir
     * @return repositoryBackupDir
     */
    public OASConfigNodePropertyString repositoryBackupDir { get; set; }

    /**
     * Get blobGcMaxAgeInSecs
     * @return blobGcMaxAgeInSecs
     */
    public OASConfigNodePropertyInteger blobGcMaxAgeInSecs { get; set; }

    /**
     * Get blobTrackSnapshotIntervalInSecs
     * @return blobTrackSnapshotIntervalInSecs
     */
    public OASConfigNodePropertyInteger blobTrackSnapshotIntervalInSecs { get; set; }

    /**
     * Get role
     * @return role
     */
    public OASConfigNodePropertyString role { get; set; }

    /**
     * Get registerDescriptors
     * @return registerDescriptors
     */
    public OASConfigNodePropertyBoolean registerDescriptors { get; set; }

    /**
     * Get dispatchChanges
     * @return dispatchChanges
     */
    public OASConfigNodePropertyBoolean dispatchChanges { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'repository.home' => 'repositoryHome',
        'tarmk.mode' => 'tarmkMode',
        'tarmk.size' => 'tarmkSize',
        'segmentCache.size' => 'segmentCacheSize',
        'stringCache.size' => 'stringCacheSize',
        'templateCache.size' => 'templateCacheSize',
        'stringDeduplicationCache.size' => 'stringDeduplicationCacheSize',
        'templateDeduplicationCache.size' => 'templateDeduplicationCacheSize',
        'nodeDeduplicationCache.size' => 'nodeDeduplicationCacheSize',
        'compaction.retryCount' => 'compactionRetryCount',
        'compaction.force.timeout' => 'compactionForceTimeout',
        'compaction.sizeDeltaEstimation' => 'compactionSizeDeltaEstimation',
        'compaction.disableEstimation' => 'compactionDisableEstimation',
        'compaction.retainedGenerations' => 'compactionRetainedGenerations',
        'compaction.memoryThreshold' => 'compactionMemoryThreshold',
        'compaction.progressLog' => 'compactionProgressLog',
        'repository.backup.dir' => 'repositoryBackupDir'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrgApacheJackrabbitOakSegmentSegm getExample() {
        OASOrgApacheJackrabbitOakSegmentSegm orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties = new OASOrgApacheJackrabbitOakSegmentSegm();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.repositoryHome = OASConfigNodePropertyString.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.tarmkMode = OASConfigNodePropertyString.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.tarmkSize = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.segmentCacheSize = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.stringCacheSize = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.templateCacheSize = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.stringDeduplicationCacheSize = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.templateDeduplicationCacheSize = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.nodeDeduplicationCacheSize = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.pauseCompaction = OASConfigNodePropertyBoolean.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionRetryCount = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionForceTimeout = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionSizeDeltaEstimation = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionDisableEstimation = OASConfigNodePropertyBoolean.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionRetainedGenerations = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionMemoryThreshold = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionProgressLog = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.standby = OASConfigNodePropertyBoolean.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.customBlobStore = OASConfigNodePropertyBoolean.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.customSegmentStore = OASConfigNodePropertyBoolean.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.splitPersistence = OASConfigNodePropertyBoolean.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.repositoryBackupDir = OASConfigNodePropertyString.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.blobGcMaxAgeInSecs = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.blobTrackSnapshotIntervalInSecs = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.role = OASConfigNodePropertyString.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.registerDescriptors = OASConfigNodePropertyBoolean.getExample();
          orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.dispatchChanges = OASConfigNodePropertyBoolean.getExample();
        return orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgApacheJackrabbitOakSegmentSegm) {           
            OASOrgApacheJackrabbitOakSegmentSegm orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties = (OASOrgApacheJackrabbitOakSegmentSegm) obj;
            return this.repositoryHome == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.repositoryHome
                && this.tarmkMode == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.tarmkMode
                && this.tarmkSize == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.tarmkSize
                && this.segmentCacheSize == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.segmentCacheSize
                && this.stringCacheSize == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.stringCacheSize
                && this.templateCacheSize == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.templateCacheSize
                && this.stringDeduplicationCacheSize == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.stringDeduplicationCacheSize
                && this.templateDeduplicationCacheSize == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.templateDeduplicationCacheSize
                && this.nodeDeduplicationCacheSize == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.nodeDeduplicationCacheSize
                && this.pauseCompaction == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.pauseCompaction
                && this.compactionRetryCount == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionRetryCount
                && this.compactionForceTimeout == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionForceTimeout
                && this.compactionSizeDeltaEstimation == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionSizeDeltaEstimation
                && this.compactionDisableEstimation == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionDisableEstimation
                && this.compactionRetainedGenerations == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionRetainedGenerations
                && this.compactionMemoryThreshold == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionMemoryThreshold
                && this.compactionProgressLog == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.compactionProgressLog
                && this.standby == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.standby
                && this.customBlobStore == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.customBlobStore
                && this.customSegmentStore == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.customSegmentStore
                && this.splitPersistence == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.splitPersistence
                && this.repositoryBackupDir == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.repositoryBackupDir
                && this.blobGcMaxAgeInSecs == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.blobGcMaxAgeInSecs
                && this.blobTrackSnapshotIntervalInSecs == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.blobTrackSnapshotIntervalInSecs
                && this.role == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.role
                && this.registerDescriptors == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.registerDescriptors
                && this.dispatchChanges == orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties.dispatchChanges;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (repositoryHome == null ? 0 : System.hashCode(repositoryHome));
        hashCode = (17 * hashCode) + (tarmkMode == null ? 0 : System.hashCode(tarmkMode));
        hashCode = (17 * hashCode) + (tarmkSize == null ? 0 : System.hashCode(tarmkSize));
        hashCode = (17 * hashCode) + (segmentCacheSize == null ? 0 : System.hashCode(segmentCacheSize));
        hashCode = (17 * hashCode) + (stringCacheSize == null ? 0 : System.hashCode(stringCacheSize));
        hashCode = (17 * hashCode) + (templateCacheSize == null ? 0 : System.hashCode(templateCacheSize));
        hashCode = (17 * hashCode) + (stringDeduplicationCacheSize == null ? 0 : System.hashCode(stringDeduplicationCacheSize));
        hashCode = (17 * hashCode) + (templateDeduplicationCacheSize == null ? 0 : System.hashCode(templateDeduplicationCacheSize));
        hashCode = (17 * hashCode) + (nodeDeduplicationCacheSize == null ? 0 : System.hashCode(nodeDeduplicationCacheSize));
        hashCode = (17 * hashCode) + (pauseCompaction == null ? 0 : System.hashCode(pauseCompaction));
        hashCode = (17 * hashCode) + (compactionRetryCount == null ? 0 : System.hashCode(compactionRetryCount));
        hashCode = (17 * hashCode) + (compactionForceTimeout == null ? 0 : System.hashCode(compactionForceTimeout));
        hashCode = (17 * hashCode) + (compactionSizeDeltaEstimation == null ? 0 : System.hashCode(compactionSizeDeltaEstimation));
        hashCode = (17 * hashCode) + (compactionDisableEstimation == null ? 0 : System.hashCode(compactionDisableEstimation));
        hashCode = (17 * hashCode) + (compactionRetainedGenerations == null ? 0 : System.hashCode(compactionRetainedGenerations));
        hashCode = (17 * hashCode) + (compactionMemoryThreshold == null ? 0 : System.hashCode(compactionMemoryThreshold));
        hashCode = (17 * hashCode) + (compactionProgressLog == null ? 0 : System.hashCode(compactionProgressLog));
        hashCode = (17 * hashCode) + (standby == null ? 0 : System.hashCode(standby));
        hashCode = (17 * hashCode) + (customBlobStore == null ? 0 : System.hashCode(customBlobStore));
        hashCode = (17 * hashCode) + (customSegmentStore == null ? 0 : System.hashCode(customSegmentStore));
        hashCode = (17 * hashCode) + (splitPersistence == null ? 0 : System.hashCode(splitPersistence));
        hashCode = (17 * hashCode) + (repositoryBackupDir == null ? 0 : System.hashCode(repositoryBackupDir));
        hashCode = (17 * hashCode) + (blobGcMaxAgeInSecs == null ? 0 : System.hashCode(blobGcMaxAgeInSecs));
        hashCode = (17 * hashCode) + (blobTrackSnapshotIntervalInSecs == null ? 0 : System.hashCode(blobTrackSnapshotIntervalInSecs));
        hashCode = (17 * hashCode) + (role == null ? 0 : System.hashCode(role));
        hashCode = (17 * hashCode) + (registerDescriptors == null ? 0 : System.hashCode(registerDescriptors));
        hashCode = (17 * hashCode) + (dispatchChanges == null ? 0 : System.hashCode(dispatchChanges));
        return hashCode;
    }
}

