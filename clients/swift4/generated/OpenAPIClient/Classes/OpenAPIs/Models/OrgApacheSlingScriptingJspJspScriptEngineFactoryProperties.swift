//
// OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties: Codable {

    public var jasperCompilerTargetVM: ConfigNodePropertyString?
    public var jasperCompilerSourceVM: ConfigNodePropertyString?
    public var jasperClassdebuginfo: ConfigNodePropertyBoolean?
    public var jasperEnablePooling: ConfigNodePropertyBoolean?
    public var jasperIeClassId: ConfigNodePropertyString?
    public var jasperGenStringAsCharArray: ConfigNodePropertyBoolean?
    public var jasperKeepgenerated: ConfigNodePropertyBoolean?
    public var jasperMappedfile: ConfigNodePropertyBoolean?
    public var jasperTrimSpaces: ConfigNodePropertyBoolean?
    public var jasperDisplaySourceFragments: ConfigNodePropertyBoolean?
    public var defaultIsSession: ConfigNodePropertyBoolean?

    public init(jasperCompilerTargetVM: ConfigNodePropertyString?, jasperCompilerSourceVM: ConfigNodePropertyString?, jasperClassdebuginfo: ConfigNodePropertyBoolean?, jasperEnablePooling: ConfigNodePropertyBoolean?, jasperIeClassId: ConfigNodePropertyString?, jasperGenStringAsCharArray: ConfigNodePropertyBoolean?, jasperKeepgenerated: ConfigNodePropertyBoolean?, jasperMappedfile: ConfigNodePropertyBoolean?, jasperTrimSpaces: ConfigNodePropertyBoolean?, jasperDisplaySourceFragments: ConfigNodePropertyBoolean?, defaultIsSession: ConfigNodePropertyBoolean?) {
        self.jasperCompilerTargetVM = jasperCompilerTargetVM
        self.jasperCompilerSourceVM = jasperCompilerSourceVM
        self.jasperClassdebuginfo = jasperClassdebuginfo
        self.jasperEnablePooling = jasperEnablePooling
        self.jasperIeClassId = jasperIeClassId
        self.jasperGenStringAsCharArray = jasperGenStringAsCharArray
        self.jasperKeepgenerated = jasperKeepgenerated
        self.jasperMappedfile = jasperMappedfile
        self.jasperTrimSpaces = jasperTrimSpaces
        self.jasperDisplaySourceFragments = jasperDisplaySourceFragments
        self.defaultIsSession = defaultIsSession
    }

    public enum CodingKeys: String, CodingKey { 
        case jasperCompilerTargetVM = "jasper.compilerTargetVM"
        case jasperCompilerSourceVM = "jasper.compilerSourceVM"
        case jasperClassdebuginfo = "jasper.classdebuginfo"
        case jasperEnablePooling = "jasper.enablePooling"
        case jasperIeClassId = "jasper.ieClassId"
        case jasperGenStringAsCharArray = "jasper.genStringAsCharArray"
        case jasperKeepgenerated = "jasper.keepgenerated"
        case jasperMappedfile = "jasper.mappedfile"
        case jasperTrimSpaces = "jasper.trimSpaces"
        case jasperDisplaySourceFragments = "jasper.displaySourceFragments"
        case defaultIsSession = "default.is.session"
    }


}

