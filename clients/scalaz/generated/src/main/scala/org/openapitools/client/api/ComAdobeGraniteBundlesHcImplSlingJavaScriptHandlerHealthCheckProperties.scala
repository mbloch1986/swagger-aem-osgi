package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties._

case class ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties (
  hcTags: Option[ConfigNodePropertyArray])

object ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckPropertiesCodecJson: CodecJson[ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties] = CodecJson.derive[ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties]
  implicit val ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckPropertiesDecoder: EntityDecoder[ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties] = jsonOf[ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties]
  implicit val ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckPropertiesEncoder: EntityEncoder[ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties] = jsonEncoderOf[ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties]
}
