package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo._

case class ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties])

object ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfoCodecJson: CodecJson[ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo] = CodecJson.derive[ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo]
  implicit val ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfoDecoder: EntityDecoder[ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo] = jsonOf[ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo]
  implicit val ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfoEncoder: EntityEncoder[ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo] = jsonEncoderOf[ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo]
}
