package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties._

case class ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties (
  deletePathRegexps: Option[ConfigNodePropertyArray],
deleteSql2Query: Option[ConfigNodePropertyString])

object ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupPropertiesCodecJson: CodecJson[ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties] = CodecJson.derive[ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties]
  implicit val ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupPropertiesDecoder: EntityDecoder[ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties] = jsonOf[ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties]
  implicit val ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupPropertiesEncoder: EntityEncoder[ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties] = jsonEncoderOf[ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties]
}
