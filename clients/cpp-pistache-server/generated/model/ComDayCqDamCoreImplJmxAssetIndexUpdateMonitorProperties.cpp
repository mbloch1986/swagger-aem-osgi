/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties()
{
    m_Jmx_objectnameIsSet = false;
    m_Property_measure_enabledIsSet = false;
    m_Property_nameIsSet = false;
    m_Property_max_wait_msIsSet = false;
    m_Property_max_rateIsSet = false;
    m_Fulltext_measure_enabledIsSet = false;
    m_Fulltext_nameIsSet = false;
    m_Fulltext_max_wait_msIsSet = false;
    m_Fulltext_max_rateIsSet = false;
    
}

ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::~ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties()
{
}

void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Jmx_objectnameIsSet)
    {
        val["jmx.objectname"] = ModelBase::toJson(m_Jmx_objectname);
    }
    if(m_Property_measure_enabledIsSet)
    {
        val["property.measure.enabled"] = ModelBase::toJson(m_Property_measure_enabled);
    }
    if(m_Property_nameIsSet)
    {
        val["property.name"] = ModelBase::toJson(m_Property_name);
    }
    if(m_Property_max_wait_msIsSet)
    {
        val["property.max.wait.ms"] = ModelBase::toJson(m_Property_max_wait_ms);
    }
    if(m_Property_max_rateIsSet)
    {
        val["property.max.rate"] = ModelBase::toJson(m_Property_max_rate);
    }
    if(m_Fulltext_measure_enabledIsSet)
    {
        val["fulltext.measure.enabled"] = ModelBase::toJson(m_Fulltext_measure_enabled);
    }
    if(m_Fulltext_nameIsSet)
    {
        val["fulltext.name"] = ModelBase::toJson(m_Fulltext_name);
    }
    if(m_Fulltext_max_wait_msIsSet)
    {
        val["fulltext.max.wait.ms"] = ModelBase::toJson(m_Fulltext_max_wait_ms);
    }
    if(m_Fulltext_max_rateIsSet)
    {
        val["fulltext.max.rate"] = ModelBase::toJson(m_Fulltext_max_rate);
    }
    

    return val;
}

void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::fromJson(nlohmann::json& val)
{
    if(val.find("jmx.objectname") != val.end())
    {
        if(!val["jmx.objectname"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jmx.objectname"]);
            setJmxObjectname( newItem );
        }
        
    }
    if(val.find("property.measure.enabled") != val.end())
    {
        if(!val["property.measure.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["property.measure.enabled"]);
            setPropertyMeasureEnabled( newItem );
        }
        
    }
    if(val.find("property.name") != val.end())
    {
        if(!val["property.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["property.name"]);
            setPropertyName( newItem );
        }
        
    }
    if(val.find("property.max.wait.ms") != val.end())
    {
        if(!val["property.max.wait.ms"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["property.max.wait.ms"]);
            setPropertyMaxWaitMs( newItem );
        }
        
    }
    if(val.find("property.max.rate") != val.end())
    {
        if(!val["property.max.rate"].is_null())
        {
            ConfigNodePropertyFloat newItem;
            newItem.fromJson(val["property.max.rate"]);
            setPropertyMaxRate( newItem );
        }
        
    }
    if(val.find("fulltext.measure.enabled") != val.end())
    {
        if(!val["fulltext.measure.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["fulltext.measure.enabled"]);
            setFulltextMeasureEnabled( newItem );
        }
        
    }
    if(val.find("fulltext.name") != val.end())
    {
        if(!val["fulltext.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["fulltext.name"]);
            setFulltextName( newItem );
        }
        
    }
    if(val.find("fulltext.max.wait.ms") != val.end())
    {
        if(!val["fulltext.max.wait.ms"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["fulltext.max.wait.ms"]);
            setFulltextMaxWaitMs( newItem );
        }
        
    }
    if(val.find("fulltext.max.rate") != val.end())
    {
        if(!val["fulltext.max.rate"].is_null())
        {
            ConfigNodePropertyFloat newItem;
            newItem.fromJson(val["fulltext.max.rate"]);
            setFulltextMaxRate( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getJmxObjectname() const
{
    return m_Jmx_objectname;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setJmxObjectname(ConfigNodePropertyString const& value)
{
    m_Jmx_objectname = value;
    m_Jmx_objectnameIsSet = true;
}
bool ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::jmxObjectnameIsSet() const
{
    return m_Jmx_objectnameIsSet;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::unsetJmx_objectname()
{
    m_Jmx_objectnameIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyMeasureEnabled() const
{
    return m_Property_measure_enabled;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyMeasureEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Property_measure_enabled = value;
    m_Property_measure_enabledIsSet = true;
}
bool ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::propertyMeasureEnabledIsSet() const
{
    return m_Property_measure_enabledIsSet;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::unsetProperty_measure_enabled()
{
    m_Property_measure_enabledIsSet = false;
}
ConfigNodePropertyString ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyName() const
{
    return m_Property_name;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyName(ConfigNodePropertyString const& value)
{
    m_Property_name = value;
    m_Property_nameIsSet = true;
}
bool ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::propertyNameIsSet() const
{
    return m_Property_nameIsSet;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::unsetProperty_name()
{
    m_Property_nameIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyMaxWaitMs() const
{
    return m_Property_max_wait_ms;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyMaxWaitMs(ConfigNodePropertyInteger const& value)
{
    m_Property_max_wait_ms = value;
    m_Property_max_wait_msIsSet = true;
}
bool ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::propertyMaxWaitMsIsSet() const
{
    return m_Property_max_wait_msIsSet;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::unsetProperty_max_wait_ms()
{
    m_Property_max_wait_msIsSet = false;
}
ConfigNodePropertyFloat ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getPropertyMaxRate() const
{
    return m_Property_max_rate;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setPropertyMaxRate(ConfigNodePropertyFloat const& value)
{
    m_Property_max_rate = value;
    m_Property_max_rateIsSet = true;
}
bool ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::propertyMaxRateIsSet() const
{
    return m_Property_max_rateIsSet;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::unsetProperty_max_rate()
{
    m_Property_max_rateIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextMeasureEnabled() const
{
    return m_Fulltext_measure_enabled;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextMeasureEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Fulltext_measure_enabled = value;
    m_Fulltext_measure_enabledIsSet = true;
}
bool ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::fulltextMeasureEnabledIsSet() const
{
    return m_Fulltext_measure_enabledIsSet;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::unsetFulltext_measure_enabled()
{
    m_Fulltext_measure_enabledIsSet = false;
}
ConfigNodePropertyString ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextName() const
{
    return m_Fulltext_name;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextName(ConfigNodePropertyString const& value)
{
    m_Fulltext_name = value;
    m_Fulltext_nameIsSet = true;
}
bool ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::fulltextNameIsSet() const
{
    return m_Fulltext_nameIsSet;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::unsetFulltext_name()
{
    m_Fulltext_nameIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextMaxWaitMs() const
{
    return m_Fulltext_max_wait_ms;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextMaxWaitMs(ConfigNodePropertyInteger const& value)
{
    m_Fulltext_max_wait_ms = value;
    m_Fulltext_max_wait_msIsSet = true;
}
bool ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::fulltextMaxWaitMsIsSet() const
{
    return m_Fulltext_max_wait_msIsSet;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::unsetFulltext_max_wait_ms()
{
    m_Fulltext_max_wait_msIsSet = false;
}
ConfigNodePropertyFloat ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::getFulltextMaxRate() const
{
    return m_Fulltext_max_rate;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::setFulltextMaxRate(ConfigNodePropertyFloat const& value)
{
    m_Fulltext_max_rate = value;
    m_Fulltext_max_rateIsSet = true;
}
bool ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::fulltextMaxRateIsSet() const
{
    return m_Fulltext_max_rateIsSet;
}
void ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties::unsetFulltext_max_rate()
{
    m_Fulltext_max_rateIsSet = false;
}

}
}
}
}

