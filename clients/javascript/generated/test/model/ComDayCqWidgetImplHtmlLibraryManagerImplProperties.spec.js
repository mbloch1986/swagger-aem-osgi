/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NodeSwaggerAemOsgi);
  }
}(this, function(expect, NodeSwaggerAemOsgi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ComDayCqWidgetImplHtmlLibraryManagerImplProperties', function() {
    it('should create an instance of ComDayCqWidgetImplHtmlLibraryManagerImplProperties', function() {
      // uncomment below and update the code to test ComDayCqWidgetImplHtmlLibraryManagerImplProperties
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be.a(NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties);
    });

    it('should have the property htmllibmanagerClientmanager (base name: "htmllibmanager.clientmanager")', function() {
      // uncomment below and update the code to test the property htmllibmanagerClientmanager
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerDebug (base name: "htmllibmanager.debug")', function() {
      // uncomment below and update the code to test the property htmllibmanagerDebug
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerDebugConsole (base name: "htmllibmanager.debug.console")', function() {
      // uncomment below and update the code to test the property htmllibmanagerDebugConsole
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerDebugInitJs (base name: "htmllibmanager.debug.init.js")', function() {
      // uncomment below and update the code to test the property htmllibmanagerDebugInitJs
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerDefaultthemename (base name: "htmllibmanager.defaultthemename")', function() {
      // uncomment below and update the code to test the property htmllibmanagerDefaultthemename
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerDefaultuserthemename (base name: "htmllibmanager.defaultuserthemename")', function() {
      // uncomment below and update the code to test the property htmllibmanagerDefaultuserthemename
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerFirebuglitePath (base name: "htmllibmanager.firebuglite.path")', function() {
      // uncomment below and update the code to test the property htmllibmanagerFirebuglitePath
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerForceCQUrlInfo (base name: "htmllibmanager.forceCQUrlInfo")', function() {
      // uncomment below and update the code to test the property htmllibmanagerForceCQUrlInfo
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerGzip (base name: "htmllibmanager.gzip")', function() {
      // uncomment below and update the code to test the property htmllibmanagerGzip
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerMaxage (base name: "htmllibmanager.maxage")', function() {
      // uncomment below and update the code to test the property htmllibmanagerMaxage
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerMaxDataUriSize (base name: "htmllibmanager.maxDataUriSize")', function() {
      // uncomment below and update the code to test the property htmllibmanagerMaxDataUriSize
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerMinify (base name: "htmllibmanager.minify")', function() {
      // uncomment below and update the code to test the property htmllibmanagerMinify
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerPathList (base name: "htmllibmanager.path.list")', function() {
      // uncomment below and update the code to test the property htmllibmanagerPathList
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

    it('should have the property htmllibmanagerTiming (base name: "htmllibmanager.timing")', function() {
      // uncomment below and update the code to test the property htmllibmanagerTiming
      //var instane = new NodeSwaggerAemOsgi.ComDayCqWidgetImplHtmlLibraryManagerImplProperties();
      //expect(instance).to.be();
    });

  });

}));
