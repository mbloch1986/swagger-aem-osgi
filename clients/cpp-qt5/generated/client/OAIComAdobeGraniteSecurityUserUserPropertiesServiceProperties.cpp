/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties() {
    init();
}

OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::~OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::init() {
    adapter_condition = new OAIConfigNodePropertyString();
    m_adapter_condition_isSet = false;
    granite_userproperties_nodetypes = new OAIConfigNodePropertyArray();
    m_granite_userproperties_nodetypes_isSet = false;
    granite_userproperties_resourcetypes = new OAIConfigNodePropertyArray();
    m_granite_userproperties_resourcetypes_isSet = false;
}

void
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::cleanup() {
    if(adapter_condition != nullptr) { 
        delete adapter_condition;
    }
    if(granite_userproperties_nodetypes != nullptr) { 
        delete granite_userproperties_nodetypes;
    }
    if(granite_userproperties_resourcetypes != nullptr) { 
        delete granite_userproperties_resourcetypes;
    }
}

OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties*
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&adapter_condition, pJson["adapter.condition"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&granite_userproperties_nodetypes, pJson["granite.userproperties.nodetypes"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&granite_userproperties_resourcetypes, pJson["granite.userproperties.resourcetypes"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::asJsonObject() {
    QJsonObject obj;
    if((adapter_condition != nullptr) && (adapter_condition->isSet())){
        toJsonValue(QString("adapter.condition"), adapter_condition, obj, QString("OAIConfigNodePropertyString"));
    }
    if((granite_userproperties_nodetypes != nullptr) && (granite_userproperties_nodetypes->isSet())){
        toJsonValue(QString("granite.userproperties.nodetypes"), granite_userproperties_nodetypes, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((granite_userproperties_resourcetypes != nullptr) && (granite_userproperties_resourcetypes->isSet())){
        toJsonValue(QString("granite.userproperties.resourcetypes"), granite_userproperties_resourcetypes, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::getAdapterCondition() {
    return adapter_condition;
}
void
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::setAdapterCondition(OAIConfigNodePropertyString* adapter_condition) {
    this->adapter_condition = adapter_condition;
    this->m_adapter_condition_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::getGraniteUserpropertiesNodetypes() {
    return granite_userproperties_nodetypes;
}
void
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::setGraniteUserpropertiesNodetypes(OAIConfigNodePropertyArray* granite_userproperties_nodetypes) {
    this->granite_userproperties_nodetypes = granite_userproperties_nodetypes;
    this->m_granite_userproperties_nodetypes_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::getGraniteUserpropertiesResourcetypes() {
    return granite_userproperties_resourcetypes;
}
void
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::setGraniteUserpropertiesResourcetypes(OAIConfigNodePropertyArray* granite_userproperties_resourcetypes) {
    this->granite_userproperties_resourcetypes = granite_userproperties_resourcetypes;
    this->m_granite_userproperties_resourcetypes_isSet = true;
}


bool
OAIComAdobeGraniteSecurityUserUserPropertiesServiceProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(adapter_condition != nullptr && adapter_condition->isSet()){ isObjectUpdated = true; break;}
        if(granite_userproperties_nodetypes != nullptr && granite_userproperties_nodetypes->isSet()){ isObjectUpdated = true; break;}
        if(granite_userproperties_resourcetypes != nullptr && granite_userproperties_resourcetypes->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

