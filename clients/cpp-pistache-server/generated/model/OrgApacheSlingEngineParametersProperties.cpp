/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingEngineParametersProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingEngineParametersProperties::OrgApacheSlingEngineParametersProperties()
{
    m_Sling_default_parameter_encodingIsSet = false;
    m_Sling_default_max_parametersIsSet = false;
    m_File_locationIsSet = false;
    m_File_thresholdIsSet = false;
    m_File_maxIsSet = false;
    m_Request_maxIsSet = false;
    m_Sling_default_parameter_checkForAdditionalContainerParametersIsSet = false;
    
}

OrgApacheSlingEngineParametersProperties::~OrgApacheSlingEngineParametersProperties()
{
}

void OrgApacheSlingEngineParametersProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingEngineParametersProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Sling_default_parameter_encodingIsSet)
    {
        val["sling.default.parameter.encoding"] = ModelBase::toJson(m_Sling_default_parameter_encoding);
    }
    if(m_Sling_default_max_parametersIsSet)
    {
        val["sling.default.max.parameters"] = ModelBase::toJson(m_Sling_default_max_parameters);
    }
    if(m_File_locationIsSet)
    {
        val["file.location"] = ModelBase::toJson(m_File_location);
    }
    if(m_File_thresholdIsSet)
    {
        val["file.threshold"] = ModelBase::toJson(m_File_threshold);
    }
    if(m_File_maxIsSet)
    {
        val["file.max"] = ModelBase::toJson(m_File_max);
    }
    if(m_Request_maxIsSet)
    {
        val["request.max"] = ModelBase::toJson(m_Request_max);
    }
    if(m_Sling_default_parameter_checkForAdditionalContainerParametersIsSet)
    {
        val["sling.default.parameter.checkForAdditionalContainerParameters"] = ModelBase::toJson(m_Sling_default_parameter_checkForAdditionalContainerParameters);
    }
    

    return val;
}

void OrgApacheSlingEngineParametersProperties::fromJson(nlohmann::json& val)
{
    if(val.find("sling.default.parameter.encoding") != val.end())
    {
        if(!val["sling.default.parameter.encoding"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sling.default.parameter.encoding"]);
            setSlingDefaultParameterEncoding( newItem );
        }
        
    }
    if(val.find("sling.default.max.parameters") != val.end())
    {
        if(!val["sling.default.max.parameters"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["sling.default.max.parameters"]);
            setSlingDefaultMaxParameters( newItem );
        }
        
    }
    if(val.find("file.location") != val.end())
    {
        if(!val["file.location"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["file.location"]);
            setFileLocation( newItem );
        }
        
    }
    if(val.find("file.threshold") != val.end())
    {
        if(!val["file.threshold"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["file.threshold"]);
            setFileThreshold( newItem );
        }
        
    }
    if(val.find("file.max") != val.end())
    {
        if(!val["file.max"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["file.max"]);
            setFileMax( newItem );
        }
        
    }
    if(val.find("request.max") != val.end())
    {
        if(!val["request.max"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["request.max"]);
            setRequestMax( newItem );
        }
        
    }
    if(val.find("sling.default.parameter.checkForAdditionalContainerParameters") != val.end())
    {
        if(!val["sling.default.parameter.checkForAdditionalContainerParameters"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["sling.default.parameter.checkForAdditionalContainerParameters"]);
            setSlingDefaultParameterCheckForAdditionalContainerParameters( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheSlingEngineParametersProperties::getSlingDefaultParameterEncoding() const
{
    return m_Sling_default_parameter_encoding;
}
void OrgApacheSlingEngineParametersProperties::setSlingDefaultParameterEncoding(ConfigNodePropertyString const& value)
{
    m_Sling_default_parameter_encoding = value;
    m_Sling_default_parameter_encodingIsSet = true;
}
bool OrgApacheSlingEngineParametersProperties::slingDefaultParameterEncodingIsSet() const
{
    return m_Sling_default_parameter_encodingIsSet;
}
void OrgApacheSlingEngineParametersProperties::unsetSling_default_parameter_encoding()
{
    m_Sling_default_parameter_encodingIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingEngineParametersProperties::getSlingDefaultMaxParameters() const
{
    return m_Sling_default_max_parameters;
}
void OrgApacheSlingEngineParametersProperties::setSlingDefaultMaxParameters(ConfigNodePropertyInteger const& value)
{
    m_Sling_default_max_parameters = value;
    m_Sling_default_max_parametersIsSet = true;
}
bool OrgApacheSlingEngineParametersProperties::slingDefaultMaxParametersIsSet() const
{
    return m_Sling_default_max_parametersIsSet;
}
void OrgApacheSlingEngineParametersProperties::unsetSling_default_max_parameters()
{
    m_Sling_default_max_parametersIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingEngineParametersProperties::getFileLocation() const
{
    return m_File_location;
}
void OrgApacheSlingEngineParametersProperties::setFileLocation(ConfigNodePropertyString const& value)
{
    m_File_location = value;
    m_File_locationIsSet = true;
}
bool OrgApacheSlingEngineParametersProperties::fileLocationIsSet() const
{
    return m_File_locationIsSet;
}
void OrgApacheSlingEngineParametersProperties::unsetFile_location()
{
    m_File_locationIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingEngineParametersProperties::getFileThreshold() const
{
    return m_File_threshold;
}
void OrgApacheSlingEngineParametersProperties::setFileThreshold(ConfigNodePropertyInteger const& value)
{
    m_File_threshold = value;
    m_File_thresholdIsSet = true;
}
bool OrgApacheSlingEngineParametersProperties::fileThresholdIsSet() const
{
    return m_File_thresholdIsSet;
}
void OrgApacheSlingEngineParametersProperties::unsetFile_threshold()
{
    m_File_thresholdIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingEngineParametersProperties::getFileMax() const
{
    return m_File_max;
}
void OrgApacheSlingEngineParametersProperties::setFileMax(ConfigNodePropertyInteger const& value)
{
    m_File_max = value;
    m_File_maxIsSet = true;
}
bool OrgApacheSlingEngineParametersProperties::fileMaxIsSet() const
{
    return m_File_maxIsSet;
}
void OrgApacheSlingEngineParametersProperties::unsetFile_max()
{
    m_File_maxIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingEngineParametersProperties::getRequestMax() const
{
    return m_Request_max;
}
void OrgApacheSlingEngineParametersProperties::setRequestMax(ConfigNodePropertyInteger const& value)
{
    m_Request_max = value;
    m_Request_maxIsSet = true;
}
bool OrgApacheSlingEngineParametersProperties::requestMaxIsSet() const
{
    return m_Request_maxIsSet;
}
void OrgApacheSlingEngineParametersProperties::unsetRequest_max()
{
    m_Request_maxIsSet = false;
}
ConfigNodePropertyBoolean OrgApacheSlingEngineParametersProperties::getSlingDefaultParameterCheckForAdditionalContainerParameters() const
{
    return m_Sling_default_parameter_checkForAdditionalContainerParameters;
}
void OrgApacheSlingEngineParametersProperties::setSlingDefaultParameterCheckForAdditionalContainerParameters(ConfigNodePropertyBoolean const& value)
{
    m_Sling_default_parameter_checkForAdditionalContainerParameters = value;
    m_Sling_default_parameter_checkForAdditionalContainerParametersIsSet = true;
}
bool OrgApacheSlingEngineParametersProperties::slingDefaultParameterCheckForAdditionalContainerParametersIsSet() const
{
    return m_Sling_default_parameter_checkForAdditionalContainerParametersIsSet;
}
void OrgApacheSlingEngineParametersProperties::unsetSling_default_parameter_checkForAdditionalContainerParameters()
{
    m_Sling_default_parameter_checkForAdditionalContainerParametersIsSet = false;
}

}
}
}
}

