/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties() {
    init();
}

OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::~OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::init() {
    filepattern = new OAIConfigNodePropertyString();
    m_filepattern_isSet = false;
    device_groups = new OAIConfigNodePropertyArray();
    m_device_groups_isSet = false;
    build_page_nodes = new OAIConfigNodePropertyBoolean();
    m_build_page_nodes_isSet = false;
    build_client_libs = new OAIConfigNodePropertyBoolean();
    m_build_client_libs_isSet = false;
    build_canvas_component = new OAIConfigNodePropertyBoolean();
    m_build_canvas_component_isSet = false;
}

void
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::cleanup() {
    if(filepattern != nullptr) { 
        delete filepattern;
    }
    if(device_groups != nullptr) { 
        delete device_groups;
    }
    if(build_page_nodes != nullptr) { 
        delete build_page_nodes;
    }
    if(build_client_libs != nullptr) { 
        delete build_client_libs;
    }
    if(build_canvas_component != nullptr) { 
        delete build_canvas_component;
    }
}

OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties*
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&filepattern, pJson["filepattern"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&device_groups, pJson["device.groups"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&build_page_nodes, pJson["build.page.nodes"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&build_client_libs, pJson["build.client.libs"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&build_canvas_component, pJson["build.canvas.component"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::asJsonObject() {
    QJsonObject obj;
    if((filepattern != nullptr) && (filepattern->isSet())){
        toJsonValue(QString("filepattern"), filepattern, obj, QString("OAIConfigNodePropertyString"));
    }
    if((device_groups != nullptr) && (device_groups->isSet())){
        toJsonValue(QString("device.groups"), device_groups, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((build_page_nodes != nullptr) && (build_page_nodes->isSet())){
        toJsonValue(QString("build.page.nodes"), build_page_nodes, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((build_client_libs != nullptr) && (build_client_libs->isSet())){
        toJsonValue(QString("build.client.libs"), build_client_libs, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((build_canvas_component != nullptr) && (build_canvas_component->isSet())){
        toJsonValue(QString("build.canvas.component"), build_canvas_component, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::getFilepattern() {
    return filepattern;
}
void
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::setFilepattern(OAIConfigNodePropertyString* filepattern) {
    this->filepattern = filepattern;
    this->m_filepattern_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::getDeviceGroups() {
    return device_groups;
}
void
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::setDeviceGroups(OAIConfigNodePropertyArray* device_groups) {
    this->device_groups = device_groups;
    this->m_device_groups_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::getBuildPageNodes() {
    return build_page_nodes;
}
void
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::setBuildPageNodes(OAIConfigNodePropertyBoolean* build_page_nodes) {
    this->build_page_nodes = build_page_nodes;
    this->m_build_page_nodes_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::getBuildClientLibs() {
    return build_client_libs;
}
void
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::setBuildClientLibs(OAIConfigNodePropertyBoolean* build_client_libs) {
    this->build_client_libs = build_client_libs;
    this->m_build_client_libs_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::getBuildCanvasComponent() {
    return build_canvas_component;
}
void
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::setBuildCanvasComponent(OAIConfigNodePropertyBoolean* build_canvas_component) {
    this->build_canvas_component = build_canvas_component;
    this->m_build_canvas_component_isSet = true;
}


bool
OAIComDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(filepattern != nullptr && filepattern->isSet()){ isObjectUpdated = true; break;}
        if(device_groups != nullptr && device_groups->isSet()){ isObjectUpdated = true; break;}
        if(build_page_nodes != nullptr && build_page_nodes->isSet()){ isObjectUpdated = true; break;}
        if(build_client_libs != nullptr && build_client_libs->isSet()){ isObjectUpdated = true; break;}
        if(build_canvas_component != nullptr && build_canvas_component->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

