/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties.h
 *
 * 
 */

#ifndef ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties_H_
#define ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties
    : public ModelBase
{
public:
    ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties();
    virtual ~ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getCacheEnable() const;
    void setCacheEnable(ConfigNodePropertyBoolean const& value);
    bool cacheEnableIsSet() const;
    void unsetCache_enable();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getCacheRootPaths() const;
    void setCacheRootPaths(ConfigNodePropertyArray const& value);
    bool cacheRootPathsIsSet() const;
    void unsetCache_rootPaths();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getCacheMaxSize() const;
    void setCacheMaxSize(ConfigNodePropertyInteger const& value);
    bool cacheMaxSizeIsSet() const;
    void unsetCache_maxSize();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getCacheMaxEntries() const;
    void setCacheMaxEntries(ConfigNodePropertyInteger const& value);
    bool cacheMaxEntriesIsSet() const;
    void unsetCache_maxEntries();

protected:
    ConfigNodePropertyBoolean m_Cache_enable;
    bool m_Cache_enableIsSet;
    ConfigNodePropertyArray m_Cache_rootPaths;
    bool m_Cache_rootPathsIsSet;
    ConfigNodePropertyInteger m_Cache_maxSize;
    bool m_Cache_maxSizeIsSet;
    ConfigNodePropertyInteger m_Cache_maxEntries;
    bool m_Cache_maxEntriesIsSet;
};

}
}
}
}

#endif /* ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties_H_ */
