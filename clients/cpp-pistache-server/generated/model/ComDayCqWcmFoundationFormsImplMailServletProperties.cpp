/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmFoundationFormsImplMailServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmFoundationFormsImplMailServletProperties::ComDayCqWcmFoundationFormsImplMailServletProperties()
{
    m_Sling_servlet_resourceTypesIsSet = false;
    m_Sling_servlet_selectorsIsSet = false;
    m_Resource_whitelistIsSet = false;
    m_Resource_blacklistIsSet = false;
    
}

ComDayCqWcmFoundationFormsImplMailServletProperties::~ComDayCqWcmFoundationFormsImplMailServletProperties()
{
}

void ComDayCqWcmFoundationFormsImplMailServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmFoundationFormsImplMailServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Sling_servlet_resourceTypesIsSet)
    {
        val["sling.servlet.resourceTypes"] = ModelBase::toJson(m_Sling_servlet_resourceTypes);
    }
    if(m_Sling_servlet_selectorsIsSet)
    {
        val["sling.servlet.selectors"] = ModelBase::toJson(m_Sling_servlet_selectors);
    }
    if(m_Resource_whitelistIsSet)
    {
        val["resource.whitelist"] = ModelBase::toJson(m_Resource_whitelist);
    }
    if(m_Resource_blacklistIsSet)
    {
        val["resource.blacklist"] = ModelBase::toJson(m_Resource_blacklist);
    }
    

    return val;
}

void ComDayCqWcmFoundationFormsImplMailServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("sling.servlet.resourceTypes") != val.end())
    {
        if(!val["sling.servlet.resourceTypes"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sling.servlet.resourceTypes"]);
            setSlingServletResourceTypes( newItem );
        }
        
    }
    if(val.find("sling.servlet.selectors") != val.end())
    {
        if(!val["sling.servlet.selectors"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sling.servlet.selectors"]);
            setSlingServletSelectors( newItem );
        }
        
    }
    if(val.find("resource.whitelist") != val.end())
    {
        if(!val["resource.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["resource.whitelist"]);
            setResourceWhitelist( newItem );
        }
        
    }
    if(val.find("resource.blacklist") != val.end())
    {
        if(!val["resource.blacklist"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["resource.blacklist"]);
            setResourceBlacklist( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqWcmFoundationFormsImplMailServletProperties::getSlingServletResourceTypes() const
{
    return m_Sling_servlet_resourceTypes;
}
void ComDayCqWcmFoundationFormsImplMailServletProperties::setSlingServletResourceTypes(ConfigNodePropertyString const& value)
{
    m_Sling_servlet_resourceTypes = value;
    m_Sling_servlet_resourceTypesIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplMailServletProperties::slingServletResourceTypesIsSet() const
{
    return m_Sling_servlet_resourceTypesIsSet;
}
void ComDayCqWcmFoundationFormsImplMailServletProperties::unsetSling_servlet_resourceTypes()
{
    m_Sling_servlet_resourceTypesIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmFoundationFormsImplMailServletProperties::getSlingServletSelectors() const
{
    return m_Sling_servlet_selectors;
}
void ComDayCqWcmFoundationFormsImplMailServletProperties::setSlingServletSelectors(ConfigNodePropertyString const& value)
{
    m_Sling_servlet_selectors = value;
    m_Sling_servlet_selectorsIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplMailServletProperties::slingServletSelectorsIsSet() const
{
    return m_Sling_servlet_selectorsIsSet;
}
void ComDayCqWcmFoundationFormsImplMailServletProperties::unsetSling_servlet_selectors()
{
    m_Sling_servlet_selectorsIsSet = false;
}
ConfigNodePropertyArray ComDayCqWcmFoundationFormsImplMailServletProperties::getResourceWhitelist() const
{
    return m_Resource_whitelist;
}
void ComDayCqWcmFoundationFormsImplMailServletProperties::setResourceWhitelist(ConfigNodePropertyArray const& value)
{
    m_Resource_whitelist = value;
    m_Resource_whitelistIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplMailServletProperties::resourceWhitelistIsSet() const
{
    return m_Resource_whitelistIsSet;
}
void ComDayCqWcmFoundationFormsImplMailServletProperties::unsetResource_whitelist()
{
    m_Resource_whitelistIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmFoundationFormsImplMailServletProperties::getResourceBlacklist() const
{
    return m_Resource_blacklist;
}
void ComDayCqWcmFoundationFormsImplMailServletProperties::setResourceBlacklist(ConfigNodePropertyString const& value)
{
    m_Resource_blacklist = value;
    m_Resource_blacklistIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplMailServletProperties::resourceBlacklistIsSet() const
{
    return m_Resource_blacklistIsSet;
}
void ComDayCqWcmFoundationFormsImplMailServletProperties::unsetResource_blacklist()
{
    m_Resource_blacklistIsSet = false;
}

}
}
}
}

