note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_ADOBE_GRANITE_LOGGING_IMPL_LOG_ANALYSER_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    messages_queue_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    logger_config: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    messages_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_messages_queue_size (a_name: like messages_queue_size)
        -- Set 'messages_queue_size' with 'a_name'.
      do
        messages_queue_size := a_name
      ensure
        messages_queue_size_set: messages_queue_size = a_name		
      end

    set_logger_config (a_name: like logger_config)
        -- Set 'logger_config' with 'a_name'.
      do
        logger_config := a_name
      ensure
        logger_config_set: logger_config = a_name		
      end

    set_messages_size (a_name: like messages_size)
        -- Set 'messages_size' with 'a_name'.
      do
        messages_size := a_name
      ensure
        messages_size_set: messages_size = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_ADOBE_GRANITE_LOGGING_IMPL_LOG_ANALYSER_IMPL_PROPERTIES%N")
        if attached messages_queue_size as l_messages_queue_size then
          Result.append ("%Nmessages_queue_size:")
          Result.append (l_messages_queue_size.out)
          Result.append ("%N")    
        end  
        if attached logger_config as l_logger_config then
          Result.append ("%Nlogger_config:")
          Result.append (l_logger_config.out)
          Result.append ("%N")    
        end  
        if attached messages_size as l_messages_size then
          Result.append ("%Nmessages_size:")
          Result.append (l_messages_size.out)
          Result.append ("%N")    
        end  
      end
end


