/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqMailerDefaultMailServiceProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqMailerDefaultMailServiceProperties::ComDayCqMailerDefaultMailServiceProperties()
{
    m_Smtp_hostIsSet = false;
    m_Smtp_portIsSet = false;
    m_Smtp_userIsSet = false;
    m_Smtp_passwordIsSet = false;
    m_From_addressIsSet = false;
    m_Smtp_sslIsSet = false;
    m_Smtp_starttlsIsSet = false;
    m_Debug_emailIsSet = false;
    
}

ComDayCqMailerDefaultMailServiceProperties::~ComDayCqMailerDefaultMailServiceProperties()
{
}

void ComDayCqMailerDefaultMailServiceProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqMailerDefaultMailServiceProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Smtp_hostIsSet)
    {
        val["smtp.host"] = ModelBase::toJson(m_Smtp_host);
    }
    if(m_Smtp_portIsSet)
    {
        val["smtp.port"] = ModelBase::toJson(m_Smtp_port);
    }
    if(m_Smtp_userIsSet)
    {
        val["smtp.user"] = ModelBase::toJson(m_Smtp_user);
    }
    if(m_Smtp_passwordIsSet)
    {
        val["smtp.password"] = ModelBase::toJson(m_Smtp_password);
    }
    if(m_From_addressIsSet)
    {
        val["from.address"] = ModelBase::toJson(m_From_address);
    }
    if(m_Smtp_sslIsSet)
    {
        val["smtp.ssl"] = ModelBase::toJson(m_Smtp_ssl);
    }
    if(m_Smtp_starttlsIsSet)
    {
        val["smtp.starttls"] = ModelBase::toJson(m_Smtp_starttls);
    }
    if(m_Debug_emailIsSet)
    {
        val["debug.email"] = ModelBase::toJson(m_Debug_email);
    }
    

    return val;
}

void ComDayCqMailerDefaultMailServiceProperties::fromJson(nlohmann::json& val)
{
    if(val.find("smtp.host") != val.end())
    {
        if(!val["smtp.host"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["smtp.host"]);
            setSmtpHost( newItem );
        }
        
    }
    if(val.find("smtp.port") != val.end())
    {
        if(!val["smtp.port"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["smtp.port"]);
            setSmtpPort( newItem );
        }
        
    }
    if(val.find("smtp.user") != val.end())
    {
        if(!val["smtp.user"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["smtp.user"]);
            setSmtpUser( newItem );
        }
        
    }
    if(val.find("smtp.password") != val.end())
    {
        if(!val["smtp.password"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["smtp.password"]);
            setSmtpPassword( newItem );
        }
        
    }
    if(val.find("from.address") != val.end())
    {
        if(!val["from.address"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["from.address"]);
            setFromAddress( newItem );
        }
        
    }
    if(val.find("smtp.ssl") != val.end())
    {
        if(!val["smtp.ssl"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["smtp.ssl"]);
            setSmtpSsl( newItem );
        }
        
    }
    if(val.find("smtp.starttls") != val.end())
    {
        if(!val["smtp.starttls"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["smtp.starttls"]);
            setSmtpStarttls( newItem );
        }
        
    }
    if(val.find("debug.email") != val.end())
    {
        if(!val["debug.email"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["debug.email"]);
            setDebugEmail( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqMailerDefaultMailServiceProperties::getSmtpHost() const
{
    return m_Smtp_host;
}
void ComDayCqMailerDefaultMailServiceProperties::setSmtpHost(ConfigNodePropertyString const& value)
{
    m_Smtp_host = value;
    m_Smtp_hostIsSet = true;
}
bool ComDayCqMailerDefaultMailServiceProperties::smtpHostIsSet() const
{
    return m_Smtp_hostIsSet;
}
void ComDayCqMailerDefaultMailServiceProperties::unsetSmtp_host()
{
    m_Smtp_hostIsSet = false;
}
ConfigNodePropertyInteger ComDayCqMailerDefaultMailServiceProperties::getSmtpPort() const
{
    return m_Smtp_port;
}
void ComDayCqMailerDefaultMailServiceProperties::setSmtpPort(ConfigNodePropertyInteger const& value)
{
    m_Smtp_port = value;
    m_Smtp_portIsSet = true;
}
bool ComDayCqMailerDefaultMailServiceProperties::smtpPortIsSet() const
{
    return m_Smtp_portIsSet;
}
void ComDayCqMailerDefaultMailServiceProperties::unsetSmtp_port()
{
    m_Smtp_portIsSet = false;
}
ConfigNodePropertyString ComDayCqMailerDefaultMailServiceProperties::getSmtpUser() const
{
    return m_Smtp_user;
}
void ComDayCqMailerDefaultMailServiceProperties::setSmtpUser(ConfigNodePropertyString const& value)
{
    m_Smtp_user = value;
    m_Smtp_userIsSet = true;
}
bool ComDayCqMailerDefaultMailServiceProperties::smtpUserIsSet() const
{
    return m_Smtp_userIsSet;
}
void ComDayCqMailerDefaultMailServiceProperties::unsetSmtp_user()
{
    m_Smtp_userIsSet = false;
}
ConfigNodePropertyString ComDayCqMailerDefaultMailServiceProperties::getSmtpPassword() const
{
    return m_Smtp_password;
}
void ComDayCqMailerDefaultMailServiceProperties::setSmtpPassword(ConfigNodePropertyString const& value)
{
    m_Smtp_password = value;
    m_Smtp_passwordIsSet = true;
}
bool ComDayCqMailerDefaultMailServiceProperties::smtpPasswordIsSet() const
{
    return m_Smtp_passwordIsSet;
}
void ComDayCqMailerDefaultMailServiceProperties::unsetSmtp_password()
{
    m_Smtp_passwordIsSet = false;
}
ConfigNodePropertyString ComDayCqMailerDefaultMailServiceProperties::getFromAddress() const
{
    return m_From_address;
}
void ComDayCqMailerDefaultMailServiceProperties::setFromAddress(ConfigNodePropertyString const& value)
{
    m_From_address = value;
    m_From_addressIsSet = true;
}
bool ComDayCqMailerDefaultMailServiceProperties::fromAddressIsSet() const
{
    return m_From_addressIsSet;
}
void ComDayCqMailerDefaultMailServiceProperties::unsetFrom_address()
{
    m_From_addressIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqMailerDefaultMailServiceProperties::getSmtpSsl() const
{
    return m_Smtp_ssl;
}
void ComDayCqMailerDefaultMailServiceProperties::setSmtpSsl(ConfigNodePropertyBoolean const& value)
{
    m_Smtp_ssl = value;
    m_Smtp_sslIsSet = true;
}
bool ComDayCqMailerDefaultMailServiceProperties::smtpSslIsSet() const
{
    return m_Smtp_sslIsSet;
}
void ComDayCqMailerDefaultMailServiceProperties::unsetSmtp_ssl()
{
    m_Smtp_sslIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqMailerDefaultMailServiceProperties::getSmtpStarttls() const
{
    return m_Smtp_starttls;
}
void ComDayCqMailerDefaultMailServiceProperties::setSmtpStarttls(ConfigNodePropertyBoolean const& value)
{
    m_Smtp_starttls = value;
    m_Smtp_starttlsIsSet = true;
}
bool ComDayCqMailerDefaultMailServiceProperties::smtpStarttlsIsSet() const
{
    return m_Smtp_starttlsIsSet;
}
void ComDayCqMailerDefaultMailServiceProperties::unsetSmtp_starttls()
{
    m_Smtp_starttlsIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqMailerDefaultMailServiceProperties::getDebugEmail() const
{
    return m_Debug_email;
}
void ComDayCqMailerDefaultMailServiceProperties::setDebugEmail(ConfigNodePropertyBoolean const& value)
{
    m_Debug_email = value;
    m_Debug_emailIsSet = true;
}
bool ComDayCqMailerDefaultMailServiceProperties::debugEmailIsSet() const
{
    return m_Debug_emailIsSet;
}
void ComDayCqMailerDefaultMailServiceProperties::unsetDebug_email()
{
    m_Debug_emailIsSet = false;
}

}
}
}
}

