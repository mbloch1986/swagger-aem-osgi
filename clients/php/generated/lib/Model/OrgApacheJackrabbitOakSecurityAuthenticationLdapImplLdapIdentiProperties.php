<?php
/**
 * OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'provider_name' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'host_name' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'host_port' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'host_ssl' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'host_tls' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'host_no_cert_check' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'bind_dn' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'bind_password' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'search_timeout' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'admin_pool_max_active' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'admin_pool_lookup_on_validate' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'user_pool_max_active' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'user_pool_lookup_on_validate' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'user_base_dn' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'user_objectclass' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'user_id_attribute' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'user_extra_filter' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'user_make_dn_path' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'group_base_dn' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'group_objectclass' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'group_name_attribute' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'group_extra_filter' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'group_make_dn_path' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'group_member_attribute' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'use_uid_for_ext_id' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'customattributes' => '\OpenAPI\Client\Model\ConfigNodePropertyArray'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'provider_name' => null,
        'host_name' => null,
        'host_port' => null,
        'host_ssl' => null,
        'host_tls' => null,
        'host_no_cert_check' => null,
        'bind_dn' => null,
        'bind_password' => null,
        'search_timeout' => null,
        'admin_pool_max_active' => null,
        'admin_pool_lookup_on_validate' => null,
        'user_pool_max_active' => null,
        'user_pool_lookup_on_validate' => null,
        'user_base_dn' => null,
        'user_objectclass' => null,
        'user_id_attribute' => null,
        'user_extra_filter' => null,
        'user_make_dn_path' => null,
        'group_base_dn' => null,
        'group_objectclass' => null,
        'group_name_attribute' => null,
        'group_extra_filter' => null,
        'group_make_dn_path' => null,
        'group_member_attribute' => null,
        'use_uid_for_ext_id' => null,
        'customattributes' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'provider_name' => 'provider.name',
        'host_name' => 'host.name',
        'host_port' => 'host.port',
        'host_ssl' => 'host.ssl',
        'host_tls' => 'host.tls',
        'host_no_cert_check' => 'host.noCertCheck',
        'bind_dn' => 'bind.dn',
        'bind_password' => 'bind.password',
        'search_timeout' => 'searchTimeout',
        'admin_pool_max_active' => 'adminPool.maxActive',
        'admin_pool_lookup_on_validate' => 'adminPool.lookupOnValidate',
        'user_pool_max_active' => 'userPool.maxActive',
        'user_pool_lookup_on_validate' => 'userPool.lookupOnValidate',
        'user_base_dn' => 'user.baseDN',
        'user_objectclass' => 'user.objectclass',
        'user_id_attribute' => 'user.idAttribute',
        'user_extra_filter' => 'user.extraFilter',
        'user_make_dn_path' => 'user.makeDnPath',
        'group_base_dn' => 'group.baseDN',
        'group_objectclass' => 'group.objectclass',
        'group_name_attribute' => 'group.nameAttribute',
        'group_extra_filter' => 'group.extraFilter',
        'group_make_dn_path' => 'group.makeDnPath',
        'group_member_attribute' => 'group.memberAttribute',
        'use_uid_for_ext_id' => 'useUidForExtId',
        'customattributes' => 'customattributes'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'provider_name' => 'setProviderName',
        'host_name' => 'setHostName',
        'host_port' => 'setHostPort',
        'host_ssl' => 'setHostSsl',
        'host_tls' => 'setHostTls',
        'host_no_cert_check' => 'setHostNoCertCheck',
        'bind_dn' => 'setBindDn',
        'bind_password' => 'setBindPassword',
        'search_timeout' => 'setSearchTimeout',
        'admin_pool_max_active' => 'setAdminPoolMaxActive',
        'admin_pool_lookup_on_validate' => 'setAdminPoolLookupOnValidate',
        'user_pool_max_active' => 'setUserPoolMaxActive',
        'user_pool_lookup_on_validate' => 'setUserPoolLookupOnValidate',
        'user_base_dn' => 'setUserBaseDn',
        'user_objectclass' => 'setUserObjectclass',
        'user_id_attribute' => 'setUserIdAttribute',
        'user_extra_filter' => 'setUserExtraFilter',
        'user_make_dn_path' => 'setUserMakeDnPath',
        'group_base_dn' => 'setGroupBaseDn',
        'group_objectclass' => 'setGroupObjectclass',
        'group_name_attribute' => 'setGroupNameAttribute',
        'group_extra_filter' => 'setGroupExtraFilter',
        'group_make_dn_path' => 'setGroupMakeDnPath',
        'group_member_attribute' => 'setGroupMemberAttribute',
        'use_uid_for_ext_id' => 'setUseUidForExtId',
        'customattributes' => 'setCustomattributes'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'provider_name' => 'getProviderName',
        'host_name' => 'getHostName',
        'host_port' => 'getHostPort',
        'host_ssl' => 'getHostSsl',
        'host_tls' => 'getHostTls',
        'host_no_cert_check' => 'getHostNoCertCheck',
        'bind_dn' => 'getBindDn',
        'bind_password' => 'getBindPassword',
        'search_timeout' => 'getSearchTimeout',
        'admin_pool_max_active' => 'getAdminPoolMaxActive',
        'admin_pool_lookup_on_validate' => 'getAdminPoolLookupOnValidate',
        'user_pool_max_active' => 'getUserPoolMaxActive',
        'user_pool_lookup_on_validate' => 'getUserPoolLookupOnValidate',
        'user_base_dn' => 'getUserBaseDn',
        'user_objectclass' => 'getUserObjectclass',
        'user_id_attribute' => 'getUserIdAttribute',
        'user_extra_filter' => 'getUserExtraFilter',
        'user_make_dn_path' => 'getUserMakeDnPath',
        'group_base_dn' => 'getGroupBaseDn',
        'group_objectclass' => 'getGroupObjectclass',
        'group_name_attribute' => 'getGroupNameAttribute',
        'group_extra_filter' => 'getGroupExtraFilter',
        'group_make_dn_path' => 'getGroupMakeDnPath',
        'group_member_attribute' => 'getGroupMemberAttribute',
        'use_uid_for_ext_id' => 'getUseUidForExtId',
        'customattributes' => 'getCustomattributes'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['provider_name'] = isset($data['provider_name']) ? $data['provider_name'] : null;
        $this->container['host_name'] = isset($data['host_name']) ? $data['host_name'] : null;
        $this->container['host_port'] = isset($data['host_port']) ? $data['host_port'] : null;
        $this->container['host_ssl'] = isset($data['host_ssl']) ? $data['host_ssl'] : null;
        $this->container['host_tls'] = isset($data['host_tls']) ? $data['host_tls'] : null;
        $this->container['host_no_cert_check'] = isset($data['host_no_cert_check']) ? $data['host_no_cert_check'] : null;
        $this->container['bind_dn'] = isset($data['bind_dn']) ? $data['bind_dn'] : null;
        $this->container['bind_password'] = isset($data['bind_password']) ? $data['bind_password'] : null;
        $this->container['search_timeout'] = isset($data['search_timeout']) ? $data['search_timeout'] : null;
        $this->container['admin_pool_max_active'] = isset($data['admin_pool_max_active']) ? $data['admin_pool_max_active'] : null;
        $this->container['admin_pool_lookup_on_validate'] = isset($data['admin_pool_lookup_on_validate']) ? $data['admin_pool_lookup_on_validate'] : null;
        $this->container['user_pool_max_active'] = isset($data['user_pool_max_active']) ? $data['user_pool_max_active'] : null;
        $this->container['user_pool_lookup_on_validate'] = isset($data['user_pool_lookup_on_validate']) ? $data['user_pool_lookup_on_validate'] : null;
        $this->container['user_base_dn'] = isset($data['user_base_dn']) ? $data['user_base_dn'] : null;
        $this->container['user_objectclass'] = isset($data['user_objectclass']) ? $data['user_objectclass'] : null;
        $this->container['user_id_attribute'] = isset($data['user_id_attribute']) ? $data['user_id_attribute'] : null;
        $this->container['user_extra_filter'] = isset($data['user_extra_filter']) ? $data['user_extra_filter'] : null;
        $this->container['user_make_dn_path'] = isset($data['user_make_dn_path']) ? $data['user_make_dn_path'] : null;
        $this->container['group_base_dn'] = isset($data['group_base_dn']) ? $data['group_base_dn'] : null;
        $this->container['group_objectclass'] = isset($data['group_objectclass']) ? $data['group_objectclass'] : null;
        $this->container['group_name_attribute'] = isset($data['group_name_attribute']) ? $data['group_name_attribute'] : null;
        $this->container['group_extra_filter'] = isset($data['group_extra_filter']) ? $data['group_extra_filter'] : null;
        $this->container['group_make_dn_path'] = isset($data['group_make_dn_path']) ? $data['group_make_dn_path'] : null;
        $this->container['group_member_attribute'] = isset($data['group_member_attribute']) ? $data['group_member_attribute'] : null;
        $this->container['use_uid_for_ext_id'] = isset($data['use_uid_for_ext_id']) ? $data['use_uid_for_ext_id'] : null;
        $this->container['customattributes'] = isset($data['customattributes']) ? $data['customattributes'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets provider_name
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getProviderName()
    {
        return $this->container['provider_name'];
    }

    /**
     * Sets provider_name
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $provider_name provider_name
     *
     * @return $this
     */
    public function setProviderName($provider_name)
    {
        $this->container['provider_name'] = $provider_name;

        return $this;
    }

    /**
     * Gets host_name
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getHostName()
    {
        return $this->container['host_name'];
    }

    /**
     * Sets host_name
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $host_name host_name
     *
     * @return $this
     */
    public function setHostName($host_name)
    {
        $this->container['host_name'] = $host_name;

        return $this;
    }

    /**
     * Gets host_port
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getHostPort()
    {
        return $this->container['host_port'];
    }

    /**
     * Sets host_port
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $host_port host_port
     *
     * @return $this
     */
    public function setHostPort($host_port)
    {
        $this->container['host_port'] = $host_port;

        return $this;
    }

    /**
     * Gets host_ssl
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getHostSsl()
    {
        return $this->container['host_ssl'];
    }

    /**
     * Sets host_ssl
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $host_ssl host_ssl
     *
     * @return $this
     */
    public function setHostSsl($host_ssl)
    {
        $this->container['host_ssl'] = $host_ssl;

        return $this;
    }

    /**
     * Gets host_tls
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getHostTls()
    {
        return $this->container['host_tls'];
    }

    /**
     * Sets host_tls
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $host_tls host_tls
     *
     * @return $this
     */
    public function setHostTls($host_tls)
    {
        $this->container['host_tls'] = $host_tls;

        return $this;
    }

    /**
     * Gets host_no_cert_check
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getHostNoCertCheck()
    {
        return $this->container['host_no_cert_check'];
    }

    /**
     * Sets host_no_cert_check
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $host_no_cert_check host_no_cert_check
     *
     * @return $this
     */
    public function setHostNoCertCheck($host_no_cert_check)
    {
        $this->container['host_no_cert_check'] = $host_no_cert_check;

        return $this;
    }

    /**
     * Gets bind_dn
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getBindDn()
    {
        return $this->container['bind_dn'];
    }

    /**
     * Sets bind_dn
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $bind_dn bind_dn
     *
     * @return $this
     */
    public function setBindDn($bind_dn)
    {
        $this->container['bind_dn'] = $bind_dn;

        return $this;
    }

    /**
     * Gets bind_password
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getBindPassword()
    {
        return $this->container['bind_password'];
    }

    /**
     * Sets bind_password
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $bind_password bind_password
     *
     * @return $this
     */
    public function setBindPassword($bind_password)
    {
        $this->container['bind_password'] = $bind_password;

        return $this;
    }

    /**
     * Gets search_timeout
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getSearchTimeout()
    {
        return $this->container['search_timeout'];
    }

    /**
     * Sets search_timeout
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $search_timeout search_timeout
     *
     * @return $this
     */
    public function setSearchTimeout($search_timeout)
    {
        $this->container['search_timeout'] = $search_timeout;

        return $this;
    }

    /**
     * Gets admin_pool_max_active
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getAdminPoolMaxActive()
    {
        return $this->container['admin_pool_max_active'];
    }

    /**
     * Sets admin_pool_max_active
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $admin_pool_max_active admin_pool_max_active
     *
     * @return $this
     */
    public function setAdminPoolMaxActive($admin_pool_max_active)
    {
        $this->container['admin_pool_max_active'] = $admin_pool_max_active;

        return $this;
    }

    /**
     * Gets admin_pool_lookup_on_validate
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getAdminPoolLookupOnValidate()
    {
        return $this->container['admin_pool_lookup_on_validate'];
    }

    /**
     * Sets admin_pool_lookup_on_validate
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $admin_pool_lookup_on_validate admin_pool_lookup_on_validate
     *
     * @return $this
     */
    public function setAdminPoolLookupOnValidate($admin_pool_lookup_on_validate)
    {
        $this->container['admin_pool_lookup_on_validate'] = $admin_pool_lookup_on_validate;

        return $this;
    }

    /**
     * Gets user_pool_max_active
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getUserPoolMaxActive()
    {
        return $this->container['user_pool_max_active'];
    }

    /**
     * Sets user_pool_max_active
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $user_pool_max_active user_pool_max_active
     *
     * @return $this
     */
    public function setUserPoolMaxActive($user_pool_max_active)
    {
        $this->container['user_pool_max_active'] = $user_pool_max_active;

        return $this;
    }

    /**
     * Gets user_pool_lookup_on_validate
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getUserPoolLookupOnValidate()
    {
        return $this->container['user_pool_lookup_on_validate'];
    }

    /**
     * Sets user_pool_lookup_on_validate
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $user_pool_lookup_on_validate user_pool_lookup_on_validate
     *
     * @return $this
     */
    public function setUserPoolLookupOnValidate($user_pool_lookup_on_validate)
    {
        $this->container['user_pool_lookup_on_validate'] = $user_pool_lookup_on_validate;

        return $this;
    }

    /**
     * Gets user_base_dn
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getUserBaseDn()
    {
        return $this->container['user_base_dn'];
    }

    /**
     * Sets user_base_dn
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $user_base_dn user_base_dn
     *
     * @return $this
     */
    public function setUserBaseDn($user_base_dn)
    {
        $this->container['user_base_dn'] = $user_base_dn;

        return $this;
    }

    /**
     * Gets user_objectclass
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getUserObjectclass()
    {
        return $this->container['user_objectclass'];
    }

    /**
     * Sets user_objectclass
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $user_objectclass user_objectclass
     *
     * @return $this
     */
    public function setUserObjectclass($user_objectclass)
    {
        $this->container['user_objectclass'] = $user_objectclass;

        return $this;
    }

    /**
     * Gets user_id_attribute
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getUserIdAttribute()
    {
        return $this->container['user_id_attribute'];
    }

    /**
     * Sets user_id_attribute
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $user_id_attribute user_id_attribute
     *
     * @return $this
     */
    public function setUserIdAttribute($user_id_attribute)
    {
        $this->container['user_id_attribute'] = $user_id_attribute;

        return $this;
    }

    /**
     * Gets user_extra_filter
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getUserExtraFilter()
    {
        return $this->container['user_extra_filter'];
    }

    /**
     * Sets user_extra_filter
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $user_extra_filter user_extra_filter
     *
     * @return $this
     */
    public function setUserExtraFilter($user_extra_filter)
    {
        $this->container['user_extra_filter'] = $user_extra_filter;

        return $this;
    }

    /**
     * Gets user_make_dn_path
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getUserMakeDnPath()
    {
        return $this->container['user_make_dn_path'];
    }

    /**
     * Sets user_make_dn_path
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $user_make_dn_path user_make_dn_path
     *
     * @return $this
     */
    public function setUserMakeDnPath($user_make_dn_path)
    {
        $this->container['user_make_dn_path'] = $user_make_dn_path;

        return $this;
    }

    /**
     * Gets group_base_dn
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getGroupBaseDn()
    {
        return $this->container['group_base_dn'];
    }

    /**
     * Sets group_base_dn
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $group_base_dn group_base_dn
     *
     * @return $this
     */
    public function setGroupBaseDn($group_base_dn)
    {
        $this->container['group_base_dn'] = $group_base_dn;

        return $this;
    }

    /**
     * Gets group_objectclass
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getGroupObjectclass()
    {
        return $this->container['group_objectclass'];
    }

    /**
     * Sets group_objectclass
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $group_objectclass group_objectclass
     *
     * @return $this
     */
    public function setGroupObjectclass($group_objectclass)
    {
        $this->container['group_objectclass'] = $group_objectclass;

        return $this;
    }

    /**
     * Gets group_name_attribute
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getGroupNameAttribute()
    {
        return $this->container['group_name_attribute'];
    }

    /**
     * Sets group_name_attribute
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $group_name_attribute group_name_attribute
     *
     * @return $this
     */
    public function setGroupNameAttribute($group_name_attribute)
    {
        $this->container['group_name_attribute'] = $group_name_attribute;

        return $this;
    }

    /**
     * Gets group_extra_filter
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getGroupExtraFilter()
    {
        return $this->container['group_extra_filter'];
    }

    /**
     * Sets group_extra_filter
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $group_extra_filter group_extra_filter
     *
     * @return $this
     */
    public function setGroupExtraFilter($group_extra_filter)
    {
        $this->container['group_extra_filter'] = $group_extra_filter;

        return $this;
    }

    /**
     * Gets group_make_dn_path
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getGroupMakeDnPath()
    {
        return $this->container['group_make_dn_path'];
    }

    /**
     * Sets group_make_dn_path
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $group_make_dn_path group_make_dn_path
     *
     * @return $this
     */
    public function setGroupMakeDnPath($group_make_dn_path)
    {
        $this->container['group_make_dn_path'] = $group_make_dn_path;

        return $this;
    }

    /**
     * Gets group_member_attribute
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getGroupMemberAttribute()
    {
        return $this->container['group_member_attribute'];
    }

    /**
     * Sets group_member_attribute
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $group_member_attribute group_member_attribute
     *
     * @return $this
     */
    public function setGroupMemberAttribute($group_member_attribute)
    {
        $this->container['group_member_attribute'] = $group_member_attribute;

        return $this;
    }

    /**
     * Gets use_uid_for_ext_id
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getUseUidForExtId()
    {
        return $this->container['use_uid_for_ext_id'];
    }

    /**
     * Sets use_uid_for_ext_id
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $use_uid_for_ext_id use_uid_for_ext_id
     *
     * @return $this
     */
    public function setUseUidForExtId($use_uid_for_ext_id)
    {
        $this->container['use_uid_for_ext_id'] = $use_uid_for_ext_id;

        return $this;
    }

    /**
     * Gets customattributes
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getCustomattributes()
    {
        return $this->container['customattributes'];
    }

    /**
     * Sets customattributes
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $customattributes customattributes
     *
     * @return $this
     */
    public function setCustomattributes($customattributes)
    {
        $this->container['customattributes'] = $customattributes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


