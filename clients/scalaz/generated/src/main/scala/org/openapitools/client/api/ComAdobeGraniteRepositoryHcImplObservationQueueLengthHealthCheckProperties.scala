package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties._

case class ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties (
  hcTags: Option[ConfigNodePropertyArray])

object ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckPropertiesCodecJson: CodecJson[ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties] = CodecJson.derive[ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties]
  implicit val ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckPropertiesDecoder: EntityDecoder[ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties] = jsonOf[ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties]
  implicit val ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckPropertiesEncoder: EntityEncoder[ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties] = jsonEncoderOf[ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties]
}
