/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingStartupfilterImplStartupFilterImplProperties {
  #[serde(rename = "active.by.default")]
  active_by_default: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "default.message")]
  default_message: Option<::models::ConfigNodePropertyString>
}

impl OrgApacheSlingStartupfilterImplStartupFilterImplProperties {
  pub fn new() -> OrgApacheSlingStartupfilterImplStartupFilterImplProperties {
    OrgApacheSlingStartupfilterImplStartupFilterImplProperties {
      active_by_default: None,
      default_message: None
    }
  }

  pub fn set_active_by_default(&mut self, active_by_default: ::models::ConfigNodePropertyBoolean) {
    self.active_by_default = Some(active_by_default);
  }

  pub fn with_active_by_default(mut self, active_by_default: ::models::ConfigNodePropertyBoolean) -> OrgApacheSlingStartupfilterImplStartupFilterImplProperties {
    self.active_by_default = Some(active_by_default);
    self
  }

  pub fn active_by_default(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.active_by_default.as_ref()
  }

  pub fn reset_active_by_default(&mut self) {
    self.active_by_default = None;
  }

  pub fn set_default_message(&mut self, default_message: ::models::ConfigNodePropertyString) {
    self.default_message = Some(default_message);
  }

  pub fn with_default_message(mut self, default_message: ::models::ConfigNodePropertyString) -> OrgApacheSlingStartupfilterImplStartupFilterImplProperties {
    self.default_message = Some(default_message);
    self
  }

  pub fn default_message(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.default_message.as_ref()
  }

  pub fn reset_default_message(&mut self) {
    self.default_message = None;
  }

}



