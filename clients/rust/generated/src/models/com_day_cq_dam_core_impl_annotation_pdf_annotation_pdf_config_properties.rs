/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
  #[serde(rename = "cq.dam.config.annotation.pdf.document.width")]
  cq_dam_config_annotation_pdf_document_width: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.annotation.pdf.document.height")]
  cq_dam_config_annotation_pdf_document_height: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.annotation.pdf.document.padding.horizontal")]
  cq_dam_config_annotation_pdf_document_padding_horizontal: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.annotation.pdf.document.padding.vertical")]
  cq_dam_config_annotation_pdf_document_padding_vertical: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.annotation.pdf.font.size")]
  cq_dam_config_annotation_pdf_font_size: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.annotation.pdf.font.color")]
  cq_dam_config_annotation_pdf_font_color: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.dam.config.annotation.pdf.font.family")]
  cq_dam_config_annotation_pdf_font_family: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.dam.config.annotation.pdf.font.light")]
  cq_dam_config_annotation_pdf_font_light: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.dam.config.annotation.pdf.marginTextImage")]
  cq_dam_config_annotation_pdf_margin_text_image: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.annotation.pdf.minImageHeight")]
  cq_dam_config_annotation_pdf_min_image_height: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.annotation.pdf.reviewStatus.width")]
  cq_dam_config_annotation_pdf_review_status_width: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.annotation.pdf.reviewStatus.color.approved")]
  cq_dam_config_annotation_pdf_review_status_color_approved: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.dam.config.annotation.pdf.reviewStatus.color.rejected")]
  cq_dam_config_annotation_pdf_review_status_color_rejected: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested")]
  cq_dam_config_annotation_pdf_review_status_color_changes_requested: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.dam.config.annotation.pdf.annotationMarker.width")]
  cq_dam_config_annotation_pdf_annotation_marker_width: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.config.annotation.pdf.asset.minheight")]
  cq_dam_config_annotation_pdf_asset_minheight: Option<::models::ConfigNodePropertyInteger>
}

impl ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
  pub fn new() -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
      cq_dam_config_annotation_pdf_document_width: None,
      cq_dam_config_annotation_pdf_document_height: None,
      cq_dam_config_annotation_pdf_document_padding_horizontal: None,
      cq_dam_config_annotation_pdf_document_padding_vertical: None,
      cq_dam_config_annotation_pdf_font_size: None,
      cq_dam_config_annotation_pdf_font_color: None,
      cq_dam_config_annotation_pdf_font_family: None,
      cq_dam_config_annotation_pdf_font_light: None,
      cq_dam_config_annotation_pdf_margin_text_image: None,
      cq_dam_config_annotation_pdf_min_image_height: None,
      cq_dam_config_annotation_pdf_review_status_width: None,
      cq_dam_config_annotation_pdf_review_status_color_approved: None,
      cq_dam_config_annotation_pdf_review_status_color_rejected: None,
      cq_dam_config_annotation_pdf_review_status_color_changes_requested: None,
      cq_dam_config_annotation_pdf_annotation_marker_width: None,
      cq_dam_config_annotation_pdf_asset_minheight: None
    }
  }

  pub fn set_cq_dam_config_annotation_pdf_document_width(&mut self, cq_dam_config_annotation_pdf_document_width: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_document_width = Some(cq_dam_config_annotation_pdf_document_width);
  }

  pub fn with_cq_dam_config_annotation_pdf_document_width(mut self, cq_dam_config_annotation_pdf_document_width: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_document_width = Some(cq_dam_config_annotation_pdf_document_width);
    self
  }

  pub fn cq_dam_config_annotation_pdf_document_width(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_document_width.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_document_width(&mut self) {
    self.cq_dam_config_annotation_pdf_document_width = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_document_height(&mut self, cq_dam_config_annotation_pdf_document_height: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_document_height = Some(cq_dam_config_annotation_pdf_document_height);
  }

  pub fn with_cq_dam_config_annotation_pdf_document_height(mut self, cq_dam_config_annotation_pdf_document_height: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_document_height = Some(cq_dam_config_annotation_pdf_document_height);
    self
  }

  pub fn cq_dam_config_annotation_pdf_document_height(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_document_height.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_document_height(&mut self) {
    self.cq_dam_config_annotation_pdf_document_height = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_document_padding_horizontal(&mut self, cq_dam_config_annotation_pdf_document_padding_horizontal: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_document_padding_horizontal = Some(cq_dam_config_annotation_pdf_document_padding_horizontal);
  }

  pub fn with_cq_dam_config_annotation_pdf_document_padding_horizontal(mut self, cq_dam_config_annotation_pdf_document_padding_horizontal: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_document_padding_horizontal = Some(cq_dam_config_annotation_pdf_document_padding_horizontal);
    self
  }

  pub fn cq_dam_config_annotation_pdf_document_padding_horizontal(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_document_padding_horizontal.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_document_padding_horizontal(&mut self) {
    self.cq_dam_config_annotation_pdf_document_padding_horizontal = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_document_padding_vertical(&mut self, cq_dam_config_annotation_pdf_document_padding_vertical: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_document_padding_vertical = Some(cq_dam_config_annotation_pdf_document_padding_vertical);
  }

  pub fn with_cq_dam_config_annotation_pdf_document_padding_vertical(mut self, cq_dam_config_annotation_pdf_document_padding_vertical: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_document_padding_vertical = Some(cq_dam_config_annotation_pdf_document_padding_vertical);
    self
  }

  pub fn cq_dam_config_annotation_pdf_document_padding_vertical(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_document_padding_vertical.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_document_padding_vertical(&mut self) {
    self.cq_dam_config_annotation_pdf_document_padding_vertical = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_font_size(&mut self, cq_dam_config_annotation_pdf_font_size: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_font_size = Some(cq_dam_config_annotation_pdf_font_size);
  }

  pub fn with_cq_dam_config_annotation_pdf_font_size(mut self, cq_dam_config_annotation_pdf_font_size: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_font_size = Some(cq_dam_config_annotation_pdf_font_size);
    self
  }

  pub fn cq_dam_config_annotation_pdf_font_size(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_font_size.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_font_size(&mut self) {
    self.cq_dam_config_annotation_pdf_font_size = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_font_color(&mut self, cq_dam_config_annotation_pdf_font_color: ::models::ConfigNodePropertyString) {
    self.cq_dam_config_annotation_pdf_font_color = Some(cq_dam_config_annotation_pdf_font_color);
  }

  pub fn with_cq_dam_config_annotation_pdf_font_color(mut self, cq_dam_config_annotation_pdf_font_color: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_font_color = Some(cq_dam_config_annotation_pdf_font_color);
    self
  }

  pub fn cq_dam_config_annotation_pdf_font_color(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_dam_config_annotation_pdf_font_color.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_font_color(&mut self) {
    self.cq_dam_config_annotation_pdf_font_color = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_font_family(&mut self, cq_dam_config_annotation_pdf_font_family: ::models::ConfigNodePropertyString) {
    self.cq_dam_config_annotation_pdf_font_family = Some(cq_dam_config_annotation_pdf_font_family);
  }

  pub fn with_cq_dam_config_annotation_pdf_font_family(mut self, cq_dam_config_annotation_pdf_font_family: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_font_family = Some(cq_dam_config_annotation_pdf_font_family);
    self
  }

  pub fn cq_dam_config_annotation_pdf_font_family(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_dam_config_annotation_pdf_font_family.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_font_family(&mut self) {
    self.cq_dam_config_annotation_pdf_font_family = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_font_light(&mut self, cq_dam_config_annotation_pdf_font_light: ::models::ConfigNodePropertyString) {
    self.cq_dam_config_annotation_pdf_font_light = Some(cq_dam_config_annotation_pdf_font_light);
  }

  pub fn with_cq_dam_config_annotation_pdf_font_light(mut self, cq_dam_config_annotation_pdf_font_light: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_font_light = Some(cq_dam_config_annotation_pdf_font_light);
    self
  }

  pub fn cq_dam_config_annotation_pdf_font_light(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_dam_config_annotation_pdf_font_light.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_font_light(&mut self) {
    self.cq_dam_config_annotation_pdf_font_light = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_margin_text_image(&mut self, cq_dam_config_annotation_pdf_margin_text_image: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_margin_text_image = Some(cq_dam_config_annotation_pdf_margin_text_image);
  }

  pub fn with_cq_dam_config_annotation_pdf_margin_text_image(mut self, cq_dam_config_annotation_pdf_margin_text_image: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_margin_text_image = Some(cq_dam_config_annotation_pdf_margin_text_image);
    self
  }

  pub fn cq_dam_config_annotation_pdf_margin_text_image(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_margin_text_image.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_margin_text_image(&mut self) {
    self.cq_dam_config_annotation_pdf_margin_text_image = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_min_image_height(&mut self, cq_dam_config_annotation_pdf_min_image_height: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_min_image_height = Some(cq_dam_config_annotation_pdf_min_image_height);
  }

  pub fn with_cq_dam_config_annotation_pdf_min_image_height(mut self, cq_dam_config_annotation_pdf_min_image_height: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_min_image_height = Some(cq_dam_config_annotation_pdf_min_image_height);
    self
  }

  pub fn cq_dam_config_annotation_pdf_min_image_height(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_min_image_height.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_min_image_height(&mut self) {
    self.cq_dam_config_annotation_pdf_min_image_height = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_review_status_width(&mut self, cq_dam_config_annotation_pdf_review_status_width: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_review_status_width = Some(cq_dam_config_annotation_pdf_review_status_width);
  }

  pub fn with_cq_dam_config_annotation_pdf_review_status_width(mut self, cq_dam_config_annotation_pdf_review_status_width: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_review_status_width = Some(cq_dam_config_annotation_pdf_review_status_width);
    self
  }

  pub fn cq_dam_config_annotation_pdf_review_status_width(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_review_status_width.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_review_status_width(&mut self) {
    self.cq_dam_config_annotation_pdf_review_status_width = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_review_status_color_approved(&mut self, cq_dam_config_annotation_pdf_review_status_color_approved: ::models::ConfigNodePropertyString) {
    self.cq_dam_config_annotation_pdf_review_status_color_approved = Some(cq_dam_config_annotation_pdf_review_status_color_approved);
  }

  pub fn with_cq_dam_config_annotation_pdf_review_status_color_approved(mut self, cq_dam_config_annotation_pdf_review_status_color_approved: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_review_status_color_approved = Some(cq_dam_config_annotation_pdf_review_status_color_approved);
    self
  }

  pub fn cq_dam_config_annotation_pdf_review_status_color_approved(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_dam_config_annotation_pdf_review_status_color_approved.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_review_status_color_approved(&mut self) {
    self.cq_dam_config_annotation_pdf_review_status_color_approved = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_review_status_color_rejected(&mut self, cq_dam_config_annotation_pdf_review_status_color_rejected: ::models::ConfigNodePropertyString) {
    self.cq_dam_config_annotation_pdf_review_status_color_rejected = Some(cq_dam_config_annotation_pdf_review_status_color_rejected);
  }

  pub fn with_cq_dam_config_annotation_pdf_review_status_color_rejected(mut self, cq_dam_config_annotation_pdf_review_status_color_rejected: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_review_status_color_rejected = Some(cq_dam_config_annotation_pdf_review_status_color_rejected);
    self
  }

  pub fn cq_dam_config_annotation_pdf_review_status_color_rejected(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_dam_config_annotation_pdf_review_status_color_rejected.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_review_status_color_rejected(&mut self) {
    self.cq_dam_config_annotation_pdf_review_status_color_rejected = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_review_status_color_changes_requested(&mut self, cq_dam_config_annotation_pdf_review_status_color_changes_requested: ::models::ConfigNodePropertyString) {
    self.cq_dam_config_annotation_pdf_review_status_color_changes_requested = Some(cq_dam_config_annotation_pdf_review_status_color_changes_requested);
  }

  pub fn with_cq_dam_config_annotation_pdf_review_status_color_changes_requested(mut self, cq_dam_config_annotation_pdf_review_status_color_changes_requested: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_review_status_color_changes_requested = Some(cq_dam_config_annotation_pdf_review_status_color_changes_requested);
    self
  }

  pub fn cq_dam_config_annotation_pdf_review_status_color_changes_requested(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_dam_config_annotation_pdf_review_status_color_changes_requested.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_review_status_color_changes_requested(&mut self) {
    self.cq_dam_config_annotation_pdf_review_status_color_changes_requested = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_annotation_marker_width(&mut self, cq_dam_config_annotation_pdf_annotation_marker_width: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_annotation_marker_width = Some(cq_dam_config_annotation_pdf_annotation_marker_width);
  }

  pub fn with_cq_dam_config_annotation_pdf_annotation_marker_width(mut self, cq_dam_config_annotation_pdf_annotation_marker_width: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_annotation_marker_width = Some(cq_dam_config_annotation_pdf_annotation_marker_width);
    self
  }

  pub fn cq_dam_config_annotation_pdf_annotation_marker_width(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_annotation_marker_width.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_annotation_marker_width(&mut self) {
    self.cq_dam_config_annotation_pdf_annotation_marker_width = None;
  }

  pub fn set_cq_dam_config_annotation_pdf_asset_minheight(&mut self, cq_dam_config_annotation_pdf_asset_minheight: ::models::ConfigNodePropertyInteger) {
    self.cq_dam_config_annotation_pdf_asset_minheight = Some(cq_dam_config_annotation_pdf_asset_minheight);
  }

  pub fn with_cq_dam_config_annotation_pdf_asset_minheight(mut self, cq_dam_config_annotation_pdf_asset_minheight: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties {
    self.cq_dam_config_annotation_pdf_asset_minheight = Some(cq_dam_config_annotation_pdf_asset_minheight);
    self
  }

  pub fn cq_dam_config_annotation_pdf_asset_minheight(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_dam_config_annotation_pdf_asset_minheight.as_ref()
  }

  pub fn reset_cq_dam_config_annotation_pdf_asset_minheight(&mut self) {
    self.cq_dam_config_annotation_pdf_asset_minheight = None;
  }

}



