/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqMailerDefaultMailServiceProperties {
  #[serde(rename = "smtp.host")]
  smtp_host: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "smtp.port")]
  smtp_port: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "smtp.user")]
  smtp_user: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "smtp.password")]
  smtp_password: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "from.address")]
  from_address: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "smtp.ssl")]
  smtp_ssl: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "smtp.starttls")]
  smtp_starttls: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "debug.email")]
  debug_email: Option<::models::ConfigNodePropertyBoolean>
}

impl ComDayCqMailerDefaultMailServiceProperties {
  pub fn new() -> ComDayCqMailerDefaultMailServiceProperties {
    ComDayCqMailerDefaultMailServiceProperties {
      smtp_host: None,
      smtp_port: None,
      smtp_user: None,
      smtp_password: None,
      from_address: None,
      smtp_ssl: None,
      smtp_starttls: None,
      debug_email: None
    }
  }

  pub fn set_smtp_host(&mut self, smtp_host: ::models::ConfigNodePropertyString) {
    self.smtp_host = Some(smtp_host);
  }

  pub fn with_smtp_host(mut self, smtp_host: ::models::ConfigNodePropertyString) -> ComDayCqMailerDefaultMailServiceProperties {
    self.smtp_host = Some(smtp_host);
    self
  }

  pub fn smtp_host(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.smtp_host.as_ref()
  }

  pub fn reset_smtp_host(&mut self) {
    self.smtp_host = None;
  }

  pub fn set_smtp_port(&mut self, smtp_port: ::models::ConfigNodePropertyInteger) {
    self.smtp_port = Some(smtp_port);
  }

  pub fn with_smtp_port(mut self, smtp_port: ::models::ConfigNodePropertyInteger) -> ComDayCqMailerDefaultMailServiceProperties {
    self.smtp_port = Some(smtp_port);
    self
  }

  pub fn smtp_port(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.smtp_port.as_ref()
  }

  pub fn reset_smtp_port(&mut self) {
    self.smtp_port = None;
  }

  pub fn set_smtp_user(&mut self, smtp_user: ::models::ConfigNodePropertyString) {
    self.smtp_user = Some(smtp_user);
  }

  pub fn with_smtp_user(mut self, smtp_user: ::models::ConfigNodePropertyString) -> ComDayCqMailerDefaultMailServiceProperties {
    self.smtp_user = Some(smtp_user);
    self
  }

  pub fn smtp_user(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.smtp_user.as_ref()
  }

  pub fn reset_smtp_user(&mut self) {
    self.smtp_user = None;
  }

  pub fn set_smtp_password(&mut self, smtp_password: ::models::ConfigNodePropertyString) {
    self.smtp_password = Some(smtp_password);
  }

  pub fn with_smtp_password(mut self, smtp_password: ::models::ConfigNodePropertyString) -> ComDayCqMailerDefaultMailServiceProperties {
    self.smtp_password = Some(smtp_password);
    self
  }

  pub fn smtp_password(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.smtp_password.as_ref()
  }

  pub fn reset_smtp_password(&mut self) {
    self.smtp_password = None;
  }

  pub fn set_from_address(&mut self, from_address: ::models::ConfigNodePropertyString) {
    self.from_address = Some(from_address);
  }

  pub fn with_from_address(mut self, from_address: ::models::ConfigNodePropertyString) -> ComDayCqMailerDefaultMailServiceProperties {
    self.from_address = Some(from_address);
    self
  }

  pub fn from_address(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.from_address.as_ref()
  }

  pub fn reset_from_address(&mut self) {
    self.from_address = None;
  }

  pub fn set_smtp_ssl(&mut self, smtp_ssl: ::models::ConfigNodePropertyBoolean) {
    self.smtp_ssl = Some(smtp_ssl);
  }

  pub fn with_smtp_ssl(mut self, smtp_ssl: ::models::ConfigNodePropertyBoolean) -> ComDayCqMailerDefaultMailServiceProperties {
    self.smtp_ssl = Some(smtp_ssl);
    self
  }

  pub fn smtp_ssl(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.smtp_ssl.as_ref()
  }

  pub fn reset_smtp_ssl(&mut self) {
    self.smtp_ssl = None;
  }

  pub fn set_smtp_starttls(&mut self, smtp_starttls: ::models::ConfigNodePropertyBoolean) {
    self.smtp_starttls = Some(smtp_starttls);
  }

  pub fn with_smtp_starttls(mut self, smtp_starttls: ::models::ConfigNodePropertyBoolean) -> ComDayCqMailerDefaultMailServiceProperties {
    self.smtp_starttls = Some(smtp_starttls);
    self
  }

  pub fn smtp_starttls(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.smtp_starttls.as_ref()
  }

  pub fn reset_smtp_starttls(&mut self) {
    self.smtp_starttls = None;
  }

  pub fn set_debug_email(&mut self, debug_email: ::models::ConfigNodePropertyBoolean) {
    self.debug_email = Some(debug_email);
  }

  pub fn with_debug_email(mut self, debug_email: ::models::ConfigNodePropertyBoolean) -> ComDayCqMailerDefaultMailServiceProperties {
    self.debug_email = Some(debug_email);
    self
  }

  pub fn debug_email(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.debug_email.as_ref()
  }

  pub fn reset_debug_email(&mut self) {
    self.debug_email = None;
  }

}



