note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_ADOBE_CQ_SOCIAL_ACCOUNTVERIFICATION_IMPL_ACCOUNT_MANAGEMENT_CONFIG_IM_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    enable: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    ttl1: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    ttl2: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_enable (a_name: like enable)
        -- Set 'enable' with 'a_name'.
      do
        enable := a_name
      ensure
        enable_set: enable = a_name		
      end

    set_ttl1 (a_name: like ttl1)
        -- Set 'ttl1' with 'a_name'.
      do
        ttl1 := a_name
      ensure
        ttl1_set: ttl1 = a_name		
      end

    set_ttl2 (a_name: like ttl2)
        -- Set 'ttl2' with 'a_name'.
      do
        ttl2 := a_name
      ensure
        ttl2_set: ttl2 = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_ADOBE_CQ_SOCIAL_ACCOUNTVERIFICATION_IMPL_ACCOUNT_MANAGEMENT_CONFIG_IM_PROPERTIES%N")
        if attached enable as l_enable then
          Result.append ("%Nenable:")
          Result.append (l_enable.out)
          Result.append ("%N")    
        end  
        if attached ttl1 as l_ttl1 then
          Result.append ("%Nttl1:")
          Result.append (l_ttl1.out)
          Result.append ("%N")    
        end  
        if attached ttl2 as l_ttl2 then
          Result.append ("%Nttl2:")
          Result.append (l_ttl2.out)
          Result.append ("%N")    
        end  
      end
end


