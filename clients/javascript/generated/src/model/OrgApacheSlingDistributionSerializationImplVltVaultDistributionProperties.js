/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ConfigNodePropertyArray', 'model/ConfigNodePropertyBoolean', 'model/ConfigNodePropertyDropDown', 'model/ConfigNodePropertyInteger', 'model/ConfigNodePropertyString'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ConfigNodePropertyArray'), require('./ConfigNodePropertyBoolean'), require('./ConfigNodePropertyDropDown'), require('./ConfigNodePropertyInteger'), require('./ConfigNodePropertyString'));
  } else {
    // Browser globals (root is window)
    if (!root.NodeSwaggerAemOsgi) {
      root.NodeSwaggerAemOsgi = {};
    }
    root.NodeSwaggerAemOsgi.OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties = factory(root.NodeSwaggerAemOsgi.ApiClient, root.NodeSwaggerAemOsgi.ConfigNodePropertyArray, root.NodeSwaggerAemOsgi.ConfigNodePropertyBoolean, root.NodeSwaggerAemOsgi.ConfigNodePropertyDropDown, root.NodeSwaggerAemOsgi.ConfigNodePropertyInteger, root.NodeSwaggerAemOsgi.ConfigNodePropertyString);
  }
}(this, function(ApiClient, ConfigNodePropertyArray, ConfigNodePropertyBoolean, ConfigNodePropertyDropDown, ConfigNodePropertyInteger, ConfigNodePropertyString) {
  'use strict';




  /**
   * The OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties model module.
   * @module model/OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties</code>.
   * @alias module:model/OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties
   * @class
   */
  var exports = function() {
    var _this = this;



















  };

  /**
   * Constructs a <code>OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties} obj Optional instance to populate.
   * @return {module:model/OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties} The populated <code>OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ConfigNodePropertyString.constructFromObject(data['name']);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ConfigNodePropertyDropDown.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('importMode')) {
        obj['importMode'] = ConfigNodePropertyString.constructFromObject(data['importMode']);
      }
      if (data.hasOwnProperty('aclHandling')) {
        obj['aclHandling'] = ConfigNodePropertyString.constructFromObject(data['aclHandling']);
      }
      if (data.hasOwnProperty('package.roots')) {
        obj['package.roots'] = ConfigNodePropertyString.constructFromObject(data['package.roots']);
      }
      if (data.hasOwnProperty('package.filters')) {
        obj['package.filters'] = ConfigNodePropertyArray.constructFromObject(data['package.filters']);
      }
      if (data.hasOwnProperty('property.filters')) {
        obj['property.filters'] = ConfigNodePropertyArray.constructFromObject(data['property.filters']);
      }
      if (data.hasOwnProperty('tempFsFolder')) {
        obj['tempFsFolder'] = ConfigNodePropertyString.constructFromObject(data['tempFsFolder']);
      }
      if (data.hasOwnProperty('useBinaryReferences')) {
        obj['useBinaryReferences'] = ConfigNodePropertyBoolean.constructFromObject(data['useBinaryReferences']);
      }
      if (data.hasOwnProperty('autoSaveThreshold')) {
        obj['autoSaveThreshold'] = ConfigNodePropertyInteger.constructFromObject(data['autoSaveThreshold']);
      }
      if (data.hasOwnProperty('cleanupDelay')) {
        obj['cleanupDelay'] = ConfigNodePropertyInteger.constructFromObject(data['cleanupDelay']);
      }
      if (data.hasOwnProperty('fileThreshold')) {
        obj['fileThreshold'] = ConfigNodePropertyInteger.constructFromObject(data['fileThreshold']);
      }
      if (data.hasOwnProperty('MEGA_BYTES')) {
        obj['MEGA_BYTES'] = ConfigNodePropertyDropDown.constructFromObject(data['MEGA_BYTES']);
      }
      if (data.hasOwnProperty('useOffHeapMemory')) {
        obj['useOffHeapMemory'] = ConfigNodePropertyBoolean.constructFromObject(data['useOffHeapMemory']);
      }
      if (data.hasOwnProperty('digestAlgorithm')) {
        obj['digestAlgorithm'] = ConfigNodePropertyDropDown.constructFromObject(data['digestAlgorithm']);
      }
      if (data.hasOwnProperty('monitoringQueueSize')) {
        obj['monitoringQueueSize'] = ConfigNodePropertyInteger.constructFromObject(data['monitoringQueueSize']);
      }
      if (data.hasOwnProperty('pathsMapping')) {
        obj['pathsMapping'] = ConfigNodePropertyArray.constructFromObject(data['pathsMapping']);
      }
      if (data.hasOwnProperty('strictImport')) {
        obj['strictImport'] = ConfigNodePropertyBoolean.constructFromObject(data['strictImport']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ConfigNodePropertyString} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyDropDown} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} importMode
   */
  exports.prototype['importMode'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} aclHandling
   */
  exports.prototype['aclHandling'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} package.roots
   */
  exports.prototype['package.roots'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} package.filters
   */
  exports.prototype['package.filters'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} property.filters
   */
  exports.prototype['property.filters'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} tempFsFolder
   */
  exports.prototype['tempFsFolder'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} useBinaryReferences
   */
  exports.prototype['useBinaryReferences'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} autoSaveThreshold
   */
  exports.prototype['autoSaveThreshold'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cleanupDelay
   */
  exports.prototype['cleanupDelay'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} fileThreshold
   */
  exports.prototype['fileThreshold'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyDropDown} MEGA_BYTES
   */
  exports.prototype['MEGA_BYTES'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} useOffHeapMemory
   */
  exports.prototype['useOffHeapMemory'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyDropDown} digestAlgorithm
   */
  exports.prototype['digestAlgorithm'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} monitoringQueueSize
   */
  exports.prototype['monitoringQueueSize'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} pathsMapping
   */
  exports.prototype['pathsMapping'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} strictImport
   */
  exports.prototype['strictImport'] = undefined;



  return exports;
}));


