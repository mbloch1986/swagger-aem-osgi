/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqImageInternalFontFontHelperProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqImageInternalFontFontHelperProperties::ComDayCqImageInternalFontFontHelperProperties()
{
    m_FontpathIsSet = false;
    m_OversamplingFactorIsSet = false;
    
}

ComDayCqImageInternalFontFontHelperProperties::~ComDayCqImageInternalFontFontHelperProperties()
{
}

void ComDayCqImageInternalFontFontHelperProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqImageInternalFontFontHelperProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_FontpathIsSet)
    {
        val["fontpath"] = ModelBase::toJson(m_Fontpath);
    }
    if(m_OversamplingFactorIsSet)
    {
        val["oversamplingFactor"] = ModelBase::toJson(m_OversamplingFactor);
    }
    

    return val;
}

void ComDayCqImageInternalFontFontHelperProperties::fromJson(nlohmann::json& val)
{
    if(val.find("fontpath") != val.end())
    {
        if(!val["fontpath"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["fontpath"]);
            setFontpath( newItem );
        }
        
    }
    if(val.find("oversamplingFactor") != val.end())
    {
        if(!val["oversamplingFactor"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["oversamplingFactor"]);
            setOversamplingFactor( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqImageInternalFontFontHelperProperties::getFontpath() const
{
    return m_Fontpath;
}
void ComDayCqImageInternalFontFontHelperProperties::setFontpath(ConfigNodePropertyArray const& value)
{
    m_Fontpath = value;
    m_FontpathIsSet = true;
}
bool ComDayCqImageInternalFontFontHelperProperties::fontpathIsSet() const
{
    return m_FontpathIsSet;
}
void ComDayCqImageInternalFontFontHelperProperties::unsetFontpath()
{
    m_FontpathIsSet = false;
}
ConfigNodePropertyInteger ComDayCqImageInternalFontFontHelperProperties::getOversamplingFactor() const
{
    return m_OversamplingFactor;
}
void ComDayCqImageInternalFontFontHelperProperties::setOversamplingFactor(ConfigNodePropertyInteger const& value)
{
    m_OversamplingFactor = value;
    m_OversamplingFactorIsSet = true;
}
bool ComDayCqImageInternalFontFontHelperProperties::oversamplingFactorIsSet() const
{
    return m_OversamplingFactorIsSet;
}
void ComDayCqImageInternalFontFontHelperProperties::unsetOversamplingFactor()
{
    m_OversamplingFactorIsSet = false;
}

}
}
}
}

