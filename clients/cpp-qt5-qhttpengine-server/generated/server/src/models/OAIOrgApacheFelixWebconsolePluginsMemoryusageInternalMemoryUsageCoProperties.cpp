/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties() {
    this->init();
}

OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::~OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties() {
    
}

void
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::init() {
    m_felix_memoryusage_dump_threshold_isSet = false;
    m_felix_memoryusage_dump_interval_isSet = false;
    m_felix_memoryusage_dump_location_isSet = false;
}

void
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(felix_memoryusage_dump_threshold, json[QString("felix.memoryusage.dump.threshold")]);
    
    ::OpenAPI::fromJsonValue(felix_memoryusage_dump_interval, json[QString("felix.memoryusage.dump.interval")]);
    
    ::OpenAPI::fromJsonValue(felix_memoryusage_dump_location, json[QString("felix.memoryusage.dump.location")]);
    
}

QString
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::asJsonObject() const {
    QJsonObject obj;
	if(felix_memoryusage_dump_threshold.isSet()){
        obj.insert(QString("felix.memoryusage.dump.threshold"), ::OpenAPI::toJsonValue(felix_memoryusage_dump_threshold));
    }
	if(felix_memoryusage_dump_interval.isSet()){
        obj.insert(QString("felix.memoryusage.dump.interval"), ::OpenAPI::toJsonValue(felix_memoryusage_dump_interval));
    }
	if(felix_memoryusage_dump_location.isSet()){
        obj.insert(QString("felix.memoryusage.dump.location"), ::OpenAPI::toJsonValue(felix_memoryusage_dump_location));
    }
    return obj;
}

OAIConfigNodePropertyInteger
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::getFelixMemoryusageDumpThreshold() const {
    return felix_memoryusage_dump_threshold;
}
void
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::setFelixMemoryusageDumpThreshold(const OAIConfigNodePropertyInteger &felix_memoryusage_dump_threshold) {
    this->felix_memoryusage_dump_threshold = felix_memoryusage_dump_threshold;
    this->m_felix_memoryusage_dump_threshold_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::getFelixMemoryusageDumpInterval() const {
    return felix_memoryusage_dump_interval;
}
void
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::setFelixMemoryusageDumpInterval(const OAIConfigNodePropertyInteger &felix_memoryusage_dump_interval) {
    this->felix_memoryusage_dump_interval = felix_memoryusage_dump_interval;
    this->m_felix_memoryusage_dump_interval_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::getFelixMemoryusageDumpLocation() const {
    return felix_memoryusage_dump_location;
}
void
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::setFelixMemoryusageDumpLocation(const OAIConfigNodePropertyString &felix_memoryusage_dump_location) {
    this->felix_memoryusage_dump_location = felix_memoryusage_dump_location;
    this->m_felix_memoryusage_dump_location_isSet = true;
}


bool
OAIOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(felix_memoryusage_dump_threshold.isSet()){ isObjectUpdated = true; break;}
    
        if(felix_memoryusage_dump_interval.isSet()){ isObjectUpdated = true; break;}
    
        if(felix_memoryusage_dump_location.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

