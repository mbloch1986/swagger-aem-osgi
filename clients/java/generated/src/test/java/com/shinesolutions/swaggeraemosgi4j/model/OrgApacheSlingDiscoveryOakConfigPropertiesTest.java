/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrgApacheSlingDiscoveryOakConfigProperties
 */
public class OrgApacheSlingDiscoveryOakConfigPropertiesTest {
    private final OrgApacheSlingDiscoveryOakConfigProperties model = new OrgApacheSlingDiscoveryOakConfigProperties();

    /**
     * Model tests for OrgApacheSlingDiscoveryOakConfigProperties
     */
    @Test
    public void testOrgApacheSlingDiscoveryOakConfigProperties() {
        // TODO: test OrgApacheSlingDiscoveryOakConfigProperties
    }

    /**
     * Test the property 'connectorPingTimeout'
     */
    @Test
    public void connectorPingTimeoutTest() {
        // TODO: test connectorPingTimeout
    }

    /**
     * Test the property 'connectorPingInterval'
     */
    @Test
    public void connectorPingIntervalTest() {
        // TODO: test connectorPingInterval
    }

    /**
     * Test the property 'discoveryLiteCheckInterval'
     */
    @Test
    public void discoveryLiteCheckIntervalTest() {
        // TODO: test discoveryLiteCheckInterval
    }

    /**
     * Test the property 'clusterSyncServiceTimeout'
     */
    @Test
    public void clusterSyncServiceTimeoutTest() {
        // TODO: test clusterSyncServiceTimeout
    }

    /**
     * Test the property 'clusterSyncServiceInterval'
     */
    @Test
    public void clusterSyncServiceIntervalTest() {
        // TODO: test clusterSyncServiceInterval
    }

    /**
     * Test the property 'enableSyncToken'
     */
    @Test
    public void enableSyncTokenTest() {
        // TODO: test enableSyncToken
    }

    /**
     * Test the property 'minEventDelay'
     */
    @Test
    public void minEventDelayTest() {
        // TODO: test minEventDelay
    }

    /**
     * Test the property 'socketConnectTimeout'
     */
    @Test
    public void socketConnectTimeoutTest() {
        // TODO: test socketConnectTimeout
    }

    /**
     * Test the property 'soTimeout'
     */
    @Test
    public void soTimeoutTest() {
        // TODO: test soTimeout
    }

    /**
     * Test the property 'topologyConnectorUrls'
     */
    @Test
    public void topologyConnectorUrlsTest() {
        // TODO: test topologyConnectorUrls
    }

    /**
     * Test the property 'topologyConnectorWhitelist'
     */
    @Test
    public void topologyConnectorWhitelistTest() {
        // TODO: test topologyConnectorWhitelist
    }

    /**
     * Test the property 'autoStopLocalLoopEnabled'
     */
    @Test
    public void autoStopLocalLoopEnabledTest() {
        // TODO: test autoStopLocalLoopEnabled
    }

    /**
     * Test the property 'gzipConnectorRequestsEnabled'
     */
    @Test
    public void gzipConnectorRequestsEnabledTest() {
        // TODO: test gzipConnectorRequestsEnabled
    }

    /**
     * Test the property 'hmacEnabled'
     */
    @Test
    public void hmacEnabledTest() {
        // TODO: test hmacEnabled
    }

    /**
     * Test the property 'enableEncryption'
     */
    @Test
    public void enableEncryptionTest() {
        // TODO: test enableEncryption
    }

    /**
     * Test the property 'sharedKey'
     */
    @Test
    public void sharedKeyTest() {
        // TODO: test sharedKey
    }

    /**
     * Test the property 'hmacSharedKeyTTL'
     */
    @Test
    public void hmacSharedKeyTTLTest() {
        // TODO: test hmacSharedKeyTTL
    }

    /**
     * Test the property 'backoffStandbyFactor'
     */
    @Test
    public void backoffStandbyFactorTest() {
        // TODO: test backoffStandbyFactor
    }

    /**
     * Test the property 'backoffStableFactor'
     */
    @Test
    public void backoffStableFactorTest() {
        // TODO: test backoffStableFactor
    }

}
