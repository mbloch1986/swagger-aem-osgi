/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties()
{
    m_Link_expired_prefixIsSet = false;
    m_Link_expired_removeIsSet = false;
    m_Link_expired_suffixIsSet = false;
    m_Link_invalid_prefixIsSet = false;
    m_Link_invalid_removeIsSet = false;
    m_Link_invalid_suffixIsSet = false;
    m_Link_predated_prefixIsSet = false;
    m_Link_predated_removeIsSet = false;
    m_Link_predated_suffixIsSet = false;
    m_Link_wcmmodesIsSet = false;
    
}

ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::~ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties()
{
}

void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Link_expired_prefixIsSet)
    {
        val["link.expired.prefix"] = ModelBase::toJson(m_Link_expired_prefix);
    }
    if(m_Link_expired_removeIsSet)
    {
        val["link.expired.remove"] = ModelBase::toJson(m_Link_expired_remove);
    }
    if(m_Link_expired_suffixIsSet)
    {
        val["link.expired.suffix"] = ModelBase::toJson(m_Link_expired_suffix);
    }
    if(m_Link_invalid_prefixIsSet)
    {
        val["link.invalid.prefix"] = ModelBase::toJson(m_Link_invalid_prefix);
    }
    if(m_Link_invalid_removeIsSet)
    {
        val["link.invalid.remove"] = ModelBase::toJson(m_Link_invalid_remove);
    }
    if(m_Link_invalid_suffixIsSet)
    {
        val["link.invalid.suffix"] = ModelBase::toJson(m_Link_invalid_suffix);
    }
    if(m_Link_predated_prefixIsSet)
    {
        val["link.predated.prefix"] = ModelBase::toJson(m_Link_predated_prefix);
    }
    if(m_Link_predated_removeIsSet)
    {
        val["link.predated.remove"] = ModelBase::toJson(m_Link_predated_remove);
    }
    if(m_Link_predated_suffixIsSet)
    {
        val["link.predated.suffix"] = ModelBase::toJson(m_Link_predated_suffix);
    }
    if(m_Link_wcmmodesIsSet)
    {
        val["link.wcmmodes"] = ModelBase::toJson(m_Link_wcmmodes);
    }
    

    return val;
}

void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("link.expired.prefix") != val.end())
    {
        if(!val["link.expired.prefix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["link.expired.prefix"]);
            setLinkExpiredPrefix( newItem );
        }
        
    }
    if(val.find("link.expired.remove") != val.end())
    {
        if(!val["link.expired.remove"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["link.expired.remove"]);
            setLinkExpiredRemove( newItem );
        }
        
    }
    if(val.find("link.expired.suffix") != val.end())
    {
        if(!val["link.expired.suffix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["link.expired.suffix"]);
            setLinkExpiredSuffix( newItem );
        }
        
    }
    if(val.find("link.invalid.prefix") != val.end())
    {
        if(!val["link.invalid.prefix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["link.invalid.prefix"]);
            setLinkInvalidPrefix( newItem );
        }
        
    }
    if(val.find("link.invalid.remove") != val.end())
    {
        if(!val["link.invalid.remove"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["link.invalid.remove"]);
            setLinkInvalidRemove( newItem );
        }
        
    }
    if(val.find("link.invalid.suffix") != val.end())
    {
        if(!val["link.invalid.suffix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["link.invalid.suffix"]);
            setLinkInvalidSuffix( newItem );
        }
        
    }
    if(val.find("link.predated.prefix") != val.end())
    {
        if(!val["link.predated.prefix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["link.predated.prefix"]);
            setLinkPredatedPrefix( newItem );
        }
        
    }
    if(val.find("link.predated.remove") != val.end())
    {
        if(!val["link.predated.remove"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["link.predated.remove"]);
            setLinkPredatedRemove( newItem );
        }
        
    }
    if(val.find("link.predated.suffix") != val.end())
    {
        if(!val["link.predated.suffix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["link.predated.suffix"]);
            setLinkPredatedSuffix( newItem );
        }
        
    }
    if(val.find("link.wcmmodes") != val.end())
    {
        if(!val["link.wcmmodes"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["link.wcmmodes"]);
            setLinkWcmmodes( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkExpiredPrefix() const
{
    return m_Link_expired_prefix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkExpiredPrefix(ConfigNodePropertyString const& value)
{
    m_Link_expired_prefix = value;
    m_Link_expired_prefixIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkExpiredPrefixIsSet() const
{
    return m_Link_expired_prefixIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_expired_prefix()
{
    m_Link_expired_prefixIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkExpiredRemove() const
{
    return m_Link_expired_remove;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkExpiredRemove(ConfigNodePropertyBoolean const& value)
{
    m_Link_expired_remove = value;
    m_Link_expired_removeIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkExpiredRemoveIsSet() const
{
    return m_Link_expired_removeIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_expired_remove()
{
    m_Link_expired_removeIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkExpiredSuffix() const
{
    return m_Link_expired_suffix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkExpiredSuffix(ConfigNodePropertyString const& value)
{
    m_Link_expired_suffix = value;
    m_Link_expired_suffixIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkExpiredSuffixIsSet() const
{
    return m_Link_expired_suffixIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_expired_suffix()
{
    m_Link_expired_suffixIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkInvalidPrefix() const
{
    return m_Link_invalid_prefix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkInvalidPrefix(ConfigNodePropertyString const& value)
{
    m_Link_invalid_prefix = value;
    m_Link_invalid_prefixIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkInvalidPrefixIsSet() const
{
    return m_Link_invalid_prefixIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_invalid_prefix()
{
    m_Link_invalid_prefixIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkInvalidRemove() const
{
    return m_Link_invalid_remove;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkInvalidRemove(ConfigNodePropertyBoolean const& value)
{
    m_Link_invalid_remove = value;
    m_Link_invalid_removeIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkInvalidRemoveIsSet() const
{
    return m_Link_invalid_removeIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_invalid_remove()
{
    m_Link_invalid_removeIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkInvalidSuffix() const
{
    return m_Link_invalid_suffix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkInvalidSuffix(ConfigNodePropertyString const& value)
{
    m_Link_invalid_suffix = value;
    m_Link_invalid_suffixIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkInvalidSuffixIsSet() const
{
    return m_Link_invalid_suffixIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_invalid_suffix()
{
    m_Link_invalid_suffixIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkPredatedPrefix() const
{
    return m_Link_predated_prefix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkPredatedPrefix(ConfigNodePropertyString const& value)
{
    m_Link_predated_prefix = value;
    m_Link_predated_prefixIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkPredatedPrefixIsSet() const
{
    return m_Link_predated_prefixIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_predated_prefix()
{
    m_Link_predated_prefixIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkPredatedRemove() const
{
    return m_Link_predated_remove;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkPredatedRemove(ConfigNodePropertyBoolean const& value)
{
    m_Link_predated_remove = value;
    m_Link_predated_removeIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkPredatedRemoveIsSet() const
{
    return m_Link_predated_removeIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_predated_remove()
{
    m_Link_predated_removeIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkPredatedSuffix() const
{
    return m_Link_predated_suffix;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkPredatedSuffix(ConfigNodePropertyString const& value)
{
    m_Link_predated_suffix = value;
    m_Link_predated_suffixIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkPredatedSuffixIsSet() const
{
    return m_Link_predated_suffixIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_predated_suffix()
{
    m_Link_predated_suffixIsSet = false;
}
ConfigNodePropertyArray ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::getLinkWcmmodes() const
{
    return m_Link_wcmmodes;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::setLinkWcmmodes(ConfigNodePropertyArray const& value)
{
    m_Link_wcmmodes = value;
    m_Link_wcmmodesIsSet = true;
}
bool ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::linkWcmmodesIsSet() const
{
    return m_Link_wcmmodesIsSet;
}
void ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties::unsetLink_wcmmodes()
{
    m_Link_wcmmodesIsSet = false;
}

}
}
}
}

