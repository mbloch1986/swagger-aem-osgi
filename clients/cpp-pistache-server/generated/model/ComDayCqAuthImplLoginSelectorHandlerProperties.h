/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqAuthImplLoginSelectorHandlerProperties.h
 *
 * 
 */

#ifndef ComDayCqAuthImplLoginSelectorHandlerProperties_H_
#define ComDayCqAuthImplLoginSelectorHandlerProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqAuthImplLoginSelectorHandlerProperties
    : public ModelBase
{
public:
    ComDayCqAuthImplLoginSelectorHandlerProperties();
    virtual ~ComDayCqAuthImplLoginSelectorHandlerProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqAuthImplLoginSelectorHandlerProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getPath() const;
    void setPath(ConfigNodePropertyString const& value);
    bool pathIsSet() const;
    void unsetPath();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getServiceRanking() const;
    void setServiceRanking(ConfigNodePropertyInteger const& value);
    bool serviceRankingIsSet() const;
    void unsetService_ranking();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getAuthLoginselectorMappings() const;
    void setAuthLoginselectorMappings(ConfigNodePropertyArray const& value);
    bool authLoginselectorMappingsIsSet() const;
    void unsetAuth_loginselector_mappings();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getAuthLoginselectorChangepwMappings() const;
    void setAuthLoginselectorChangepwMappings(ConfigNodePropertyArray const& value);
    bool authLoginselectorChangepwMappingsIsSet() const;
    void unsetAuth_loginselector_changepw_mappings();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getAuthLoginselectorDefaultloginpage() const;
    void setAuthLoginselectorDefaultloginpage(ConfigNodePropertyString const& value);
    bool authLoginselectorDefaultloginpageIsSet() const;
    void unsetAuth_loginselector_defaultloginpage();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getAuthLoginselectorDefaultchangepwpage() const;
    void setAuthLoginselectorDefaultchangepwpage(ConfigNodePropertyString const& value);
    bool authLoginselectorDefaultchangepwpageIsSet() const;
    void unsetAuth_loginselector_defaultchangepwpage();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getAuthLoginselectorHandle() const;
    void setAuthLoginselectorHandle(ConfigNodePropertyArray const& value);
    bool authLoginselectorHandleIsSet() const;
    void unsetAuth_loginselector_handle();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getAuthLoginselectorHandleAllExtensions() const;
    void setAuthLoginselectorHandleAllExtensions(ConfigNodePropertyBoolean const& value);
    bool authLoginselectorHandleAllExtensionsIsSet() const;
    void unsetAuth_loginselector_handle_all_extensions();

protected:
    ConfigNodePropertyString m_Path;
    bool m_PathIsSet;
    ConfigNodePropertyInteger m_Service_ranking;
    bool m_Service_rankingIsSet;
    ConfigNodePropertyArray m_Auth_loginselector_mappings;
    bool m_Auth_loginselector_mappingsIsSet;
    ConfigNodePropertyArray m_Auth_loginselector_changepw_mappings;
    bool m_Auth_loginselector_changepw_mappingsIsSet;
    ConfigNodePropertyString m_Auth_loginselector_defaultloginpage;
    bool m_Auth_loginselector_defaultloginpageIsSet;
    ConfigNodePropertyString m_Auth_loginselector_defaultchangepwpage;
    bool m_Auth_loginselector_defaultchangepwpageIsSet;
    ConfigNodePropertyArray m_Auth_loginselector_handle;
    bool m_Auth_loginselector_handleIsSet;
    ConfigNodePropertyBoolean m_Auth_loginselector_handle_all_extensions;
    bool m_Auth_loginselector_handle_all_extensionsIsSet;
};

}
}
}
}

#endif /* ComDayCqAuthImplLoginSelectorHandlerProperties_H_ */
