/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingServletsPostImplSlingPostServletProperties {
  #[serde(rename = "servlet.post.dateFormats")]
  servlet_post_date_formats: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "servlet.post.nodeNameHints")]
  servlet_post_node_name_hints: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "servlet.post.nodeNameMaxLength")]
  servlet_post_node_name_max_length: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "servlet.post.checkinNewVersionableNodes")]
  servlet_post_checkin_new_versionable_nodes: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "servlet.post.autoCheckout")]
  servlet_post_auto_checkout: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "servlet.post.autoCheckin")]
  servlet_post_auto_checkin: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "servlet.post.ignorePattern")]
  servlet_post_ignore_pattern: Option<::models::ConfigNodePropertyString>
}

impl OrgApacheSlingServletsPostImplSlingPostServletProperties {
  pub fn new() -> OrgApacheSlingServletsPostImplSlingPostServletProperties {
    OrgApacheSlingServletsPostImplSlingPostServletProperties {
      servlet_post_date_formats: None,
      servlet_post_node_name_hints: None,
      servlet_post_node_name_max_length: None,
      servlet_post_checkin_new_versionable_nodes: None,
      servlet_post_auto_checkout: None,
      servlet_post_auto_checkin: None,
      servlet_post_ignore_pattern: None
    }
  }

  pub fn set_servlet_post_date_formats(&mut self, servlet_post_date_formats: ::models::ConfigNodePropertyArray) {
    self.servlet_post_date_formats = Some(servlet_post_date_formats);
  }

  pub fn with_servlet_post_date_formats(mut self, servlet_post_date_formats: ::models::ConfigNodePropertyArray) -> OrgApacheSlingServletsPostImplSlingPostServletProperties {
    self.servlet_post_date_formats = Some(servlet_post_date_formats);
    self
  }

  pub fn servlet_post_date_formats(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.servlet_post_date_formats.as_ref()
  }

  pub fn reset_servlet_post_date_formats(&mut self) {
    self.servlet_post_date_formats = None;
  }

  pub fn set_servlet_post_node_name_hints(&mut self, servlet_post_node_name_hints: ::models::ConfigNodePropertyArray) {
    self.servlet_post_node_name_hints = Some(servlet_post_node_name_hints);
  }

  pub fn with_servlet_post_node_name_hints(mut self, servlet_post_node_name_hints: ::models::ConfigNodePropertyArray) -> OrgApacheSlingServletsPostImplSlingPostServletProperties {
    self.servlet_post_node_name_hints = Some(servlet_post_node_name_hints);
    self
  }

  pub fn servlet_post_node_name_hints(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.servlet_post_node_name_hints.as_ref()
  }

  pub fn reset_servlet_post_node_name_hints(&mut self) {
    self.servlet_post_node_name_hints = None;
  }

  pub fn set_servlet_post_node_name_max_length(&mut self, servlet_post_node_name_max_length: ::models::ConfigNodePropertyInteger) {
    self.servlet_post_node_name_max_length = Some(servlet_post_node_name_max_length);
  }

  pub fn with_servlet_post_node_name_max_length(mut self, servlet_post_node_name_max_length: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingServletsPostImplSlingPostServletProperties {
    self.servlet_post_node_name_max_length = Some(servlet_post_node_name_max_length);
    self
  }

  pub fn servlet_post_node_name_max_length(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.servlet_post_node_name_max_length.as_ref()
  }

  pub fn reset_servlet_post_node_name_max_length(&mut self) {
    self.servlet_post_node_name_max_length = None;
  }

  pub fn set_servlet_post_checkin_new_versionable_nodes(&mut self, servlet_post_checkin_new_versionable_nodes: ::models::ConfigNodePropertyBoolean) {
    self.servlet_post_checkin_new_versionable_nodes = Some(servlet_post_checkin_new_versionable_nodes);
  }

  pub fn with_servlet_post_checkin_new_versionable_nodes(mut self, servlet_post_checkin_new_versionable_nodes: ::models::ConfigNodePropertyBoolean) -> OrgApacheSlingServletsPostImplSlingPostServletProperties {
    self.servlet_post_checkin_new_versionable_nodes = Some(servlet_post_checkin_new_versionable_nodes);
    self
  }

  pub fn servlet_post_checkin_new_versionable_nodes(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.servlet_post_checkin_new_versionable_nodes.as_ref()
  }

  pub fn reset_servlet_post_checkin_new_versionable_nodes(&mut self) {
    self.servlet_post_checkin_new_versionable_nodes = None;
  }

  pub fn set_servlet_post_auto_checkout(&mut self, servlet_post_auto_checkout: ::models::ConfigNodePropertyBoolean) {
    self.servlet_post_auto_checkout = Some(servlet_post_auto_checkout);
  }

  pub fn with_servlet_post_auto_checkout(mut self, servlet_post_auto_checkout: ::models::ConfigNodePropertyBoolean) -> OrgApacheSlingServletsPostImplSlingPostServletProperties {
    self.servlet_post_auto_checkout = Some(servlet_post_auto_checkout);
    self
  }

  pub fn servlet_post_auto_checkout(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.servlet_post_auto_checkout.as_ref()
  }

  pub fn reset_servlet_post_auto_checkout(&mut self) {
    self.servlet_post_auto_checkout = None;
  }

  pub fn set_servlet_post_auto_checkin(&mut self, servlet_post_auto_checkin: ::models::ConfigNodePropertyBoolean) {
    self.servlet_post_auto_checkin = Some(servlet_post_auto_checkin);
  }

  pub fn with_servlet_post_auto_checkin(mut self, servlet_post_auto_checkin: ::models::ConfigNodePropertyBoolean) -> OrgApacheSlingServletsPostImplSlingPostServletProperties {
    self.servlet_post_auto_checkin = Some(servlet_post_auto_checkin);
    self
  }

  pub fn servlet_post_auto_checkin(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.servlet_post_auto_checkin.as_ref()
  }

  pub fn reset_servlet_post_auto_checkin(&mut self) {
    self.servlet_post_auto_checkin = None;
  }

  pub fn set_servlet_post_ignore_pattern(&mut self, servlet_post_ignore_pattern: ::models::ConfigNodePropertyString) {
    self.servlet_post_ignore_pattern = Some(servlet_post_ignore_pattern);
  }

  pub fn with_servlet_post_ignore_pattern(mut self, servlet_post_ignore_pattern: ::models::ConfigNodePropertyString) -> OrgApacheSlingServletsPostImplSlingPostServletProperties {
    self.servlet_post_ignore_pattern = Some(servlet_post_ignore_pattern);
    self
  }

  pub fn servlet_post_ignore_pattern(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.servlet_post_ignore_pattern.as_ref()
  }

  pub fn reset_servlet_post_ignore_pattern(&mut self) {
    self.servlet_post_ignore_pattern = None;
  }

}



