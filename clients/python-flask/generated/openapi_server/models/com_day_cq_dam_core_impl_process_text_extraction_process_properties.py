# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComDayCqDamCoreImplProcessTextExtractionProcessProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mime_types: ConfigNodePropertyArray=None, max_extract: ConfigNodePropertyInteger=None):  # noqa: E501
        """ComDayCqDamCoreImplProcessTextExtractionProcessProperties - a model defined in OpenAPI

        :param mime_types: The mime_types of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.  # noqa: E501
        :type mime_types: ConfigNodePropertyArray
        :param max_extract: The max_extract of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.  # noqa: E501
        :type max_extract: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'mime_types': ConfigNodePropertyArray,
            'max_extract': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'mime_types': 'mimeTypes',
            'max_extract': 'maxExtract'
        }

        self._mime_types = mime_types
        self._max_extract = max_extract

    @classmethod
    def from_dict(cls, dikt) -> 'ComDayCqDamCoreImplProcessTextExtractionProcessProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comDayCqDamCoreImplProcessTextExtractionProcessProperties of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.  # noqa: E501
        :rtype: ComDayCqDamCoreImplProcessTextExtractionProcessProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mime_types(self) -> ConfigNodePropertyArray:
        """Gets the mime_types of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.


        :return: The mime_types of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._mime_types

    @mime_types.setter
    def mime_types(self, mime_types: ConfigNodePropertyArray):
        """Sets the mime_types of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.


        :param mime_types: The mime_types of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.
        :type mime_types: ConfigNodePropertyArray
        """

        self._mime_types = mime_types

    @property
    def max_extract(self) -> ConfigNodePropertyInteger:
        """Gets the max_extract of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.


        :return: The max_extract of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._max_extract

    @max_extract.setter
    def max_extract(self, max_extract: ConfigNodePropertyInteger):
        """Sets the max_extract of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.


        :param max_extract: The max_extract of this ComDayCqDamCoreImplProcessTextExtractionProcessProperties.
        :type max_extract: ConfigNodePropertyInteger
        """

        self._max_extract = max_extract
