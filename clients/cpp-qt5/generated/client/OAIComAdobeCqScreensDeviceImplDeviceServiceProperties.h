/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqScreensDeviceImplDeviceServiceProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqScreensDeviceImplDeviceServiceProperties_H_
#define OAIComAdobeCqScreensDeviceImplDeviceServiceProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqScreensDeviceImplDeviceServiceProperties: public OAIObject {
public:
    OAIComAdobeCqScreensDeviceImplDeviceServiceProperties();
    OAIComAdobeCqScreensDeviceImplDeviceServiceProperties(QString json);
    ~OAIComAdobeCqScreensDeviceImplDeviceServiceProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeCqScreensDeviceImplDeviceServiceProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyInteger* getComAdobeAemScreensPlayerPingfrequency();
    void setComAdobeAemScreensPlayerPingfrequency(OAIConfigNodePropertyInteger* com_adobe_aem_screens_player_pingfrequency);

    OAIConfigNodePropertyString* getComAdobeAemScreensDevicePaswordSpecialchars();
    void setComAdobeAemScreensDevicePaswordSpecialchars(OAIConfigNodePropertyString* com_adobe_aem_screens_device_pasword_specialchars);

    OAIConfigNodePropertyInteger* getComAdobeAemScreensDevicePaswordMinlowercasechars();
    void setComAdobeAemScreensDevicePaswordMinlowercasechars(OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minlowercasechars);

    OAIConfigNodePropertyInteger* getComAdobeAemScreensDevicePaswordMinuppercasechars();
    void setComAdobeAemScreensDevicePaswordMinuppercasechars(OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minuppercasechars);

    OAIConfigNodePropertyInteger* getComAdobeAemScreensDevicePaswordMinnumberchars();
    void setComAdobeAemScreensDevicePaswordMinnumberchars(OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minnumberchars);

    OAIConfigNodePropertyInteger* getComAdobeAemScreensDevicePaswordMinspecialchars();
    void setComAdobeAemScreensDevicePaswordMinspecialchars(OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minspecialchars);

    OAIConfigNodePropertyInteger* getComAdobeAemScreensDevicePaswordMinlength();
    void setComAdobeAemScreensDevicePaswordMinlength(OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minlength);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyInteger* com_adobe_aem_screens_player_pingfrequency;
    bool m_com_adobe_aem_screens_player_pingfrequency_isSet;

    OAIConfigNodePropertyString* com_adobe_aem_screens_device_pasword_specialchars;
    bool m_com_adobe_aem_screens_device_pasword_specialchars_isSet;

    OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minlowercasechars;
    bool m_com_adobe_aem_screens_device_pasword_minlowercasechars_isSet;

    OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minuppercasechars;
    bool m_com_adobe_aem_screens_device_pasword_minuppercasechars_isSet;

    OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minnumberchars;
    bool m_com_adobe_aem_screens_device_pasword_minnumberchars_isSet;

    OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minspecialchars;
    bool m_com_adobe_aem_screens_device_pasword_minspecialchars_isSet;

    OAIConfigNodePropertyInteger* com_adobe_aem_screens_device_pasword_minlength;
    bool m_com_adobe_aem_screens_device_pasword_minlength_isSet;

};

}

#endif /* OAIComAdobeCqScreensDeviceImplDeviceServiceProperties_H_ */
