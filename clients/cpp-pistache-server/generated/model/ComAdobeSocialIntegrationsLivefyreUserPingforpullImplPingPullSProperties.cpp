/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties::ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties()
{
    m_Communities_integration_livefyre_sling_event_filterIsSet = false;
    
}

ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties::~ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties()
{
}

void ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Communities_integration_livefyre_sling_event_filterIsSet)
    {
        val["communities.integration.livefyre.sling.event.filter"] = ModelBase::toJson(m_Communities_integration_livefyre_sling_event_filter);
    }
    

    return val;
}

void ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties::fromJson(nlohmann::json& val)
{
    if(val.find("communities.integration.livefyre.sling.event.filter") != val.end())
    {
        if(!val["communities.integration.livefyre.sling.event.filter"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["communities.integration.livefyre.sling.event.filter"]);
            setCommunitiesIntegrationLivefyreSlingEventFilter( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties::getCommunitiesIntegrationLivefyreSlingEventFilter() const
{
    return m_Communities_integration_livefyre_sling_event_filter;
}
void ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties::setCommunitiesIntegrationLivefyreSlingEventFilter(ConfigNodePropertyString const& value)
{
    m_Communities_integration_livefyre_sling_event_filter = value;
    m_Communities_integration_livefyre_sling_event_filterIsSet = true;
}
bool ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties::communitiesIntegrationLivefyreSlingEventFilterIsSet() const
{
    return m_Communities_integration_livefyre_sling_event_filterIsSet;
}
void ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSProperties::unsetCommunities_integration_livefyre_sling_event_filter()
{
    m_Communities_integration_livefyre_sling_event_filterIsSet = false;
}

}
}
}
}

