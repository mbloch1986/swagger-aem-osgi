# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cors_enabling: ConfigNodePropertyBoolean=None):  # noqa: E501
        """ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties - a model defined in OpenAPI

        :param cors_enabling: The cors_enabling of this ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties.  # noqa: E501
        :type cors_enabling: ConfigNodePropertyBoolean
        """
        self.openapi_types = {
            'cors_enabling': ConfigNodePropertyBoolean
        }

        self.attribute_map = {
            'cors_enabling': 'cors.enabling'
        }

        self._cors_enabling = cors_enabling

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties of this ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties.  # noqa: E501
        :rtype: ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cors_enabling(self) -> ConfigNodePropertyBoolean:
        """Gets the cors_enabling of this ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties.


        :return: The cors_enabling of this ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._cors_enabling

    @cors_enabling.setter
    def cors_enabling(self, cors_enabling: ConfigNodePropertyBoolean):
        """Sets the cors_enabling of this ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties.


        :param cors_enabling: The cors_enabling of this ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties.
        :type cors_enabling: ConfigNodePropertyBoolean
        """

        self._cors_enabling = cors_enabling
