/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqDamCommonsUtilImplAssetCacheImplProperties.h
 *
 * 
 */

#ifndef ComDayCqDamCommonsUtilImplAssetCacheImplProperties_H_
#define ComDayCqDamCommonsUtilImplAssetCacheImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqDamCommonsUtilImplAssetCacheImplProperties
    : public ModelBase
{
public:
    ComDayCqDamCommonsUtilImplAssetCacheImplProperties();
    virtual ~ComDayCqDamCommonsUtilImplAssetCacheImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqDamCommonsUtilImplAssetCacheImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getLargeFileMin() const;
    void setLargeFileMin(ConfigNodePropertyInteger const& value);
    bool largeFileMinIsSet() const;
    void unsetLarge_file_min();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getCacheApply() const;
    void setCacheApply(ConfigNodePropertyBoolean const& value);
    bool cacheApplyIsSet() const;
    void unsetCache_apply();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getMimeTypes() const;
    void setMimeTypes(ConfigNodePropertyArray const& value);
    bool mimeTypesIsSet() const;
    void unsetMime_types();

protected:
    ConfigNodePropertyInteger m_Large_file_min;
    bool m_Large_file_minIsSet;
    ConfigNodePropertyBoolean m_Cache_apply;
    bool m_Cache_applyIsSet;
    ConfigNodePropertyArray m_Mime_types;
    bool m_Mime_typesIsSet;
};

}
}
}
}

#endif /* ComDayCqDamCommonsUtilImplAssetCacheImplProperties_H_ */
