/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqDamIdsImplIDSJobProcessorProperties.h
 *
 * 
 */

#ifndef ComDayCqDamIdsImplIDSJobProcessorProperties_H_
#define ComDayCqDamIdsImplIDSJobProcessorProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqDamIdsImplIDSJobProcessorProperties
    : public ModelBase
{
public:
    ComDayCqDamIdsImplIDSJobProcessorProperties();
    virtual ~ComDayCqDamIdsImplIDSJobProcessorProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqDamIdsImplIDSJobProcessorProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnableMultisession() const;
    void setEnableMultisession(ConfigNodePropertyBoolean const& value);
    bool enableMultisessionIsSet() const;
    void unsetEnable_multisession();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getIdsCcEnable() const;
    void setIdsCcEnable(ConfigNodePropertyBoolean const& value);
    bool idsCcEnableIsSet() const;
    void unsetIds_cc_enable();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnableRetry() const;
    void setEnableRetry(ConfigNodePropertyBoolean const& value);
    bool enableRetryIsSet() const;
    void unsetEnable_retry();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnableRetryScripterror() const;
    void setEnableRetryScripterror(ConfigNodePropertyBoolean const& value);
    bool enableRetryScripterrorIsSet() const;
    void unsetEnable_retry_scripterror();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getExternalizerDomainCqhost() const;
    void setExternalizerDomainCqhost(ConfigNodePropertyString const& value);
    bool externalizerDomainCqhostIsSet() const;
    void unsetExternalizer_domain_cqhost();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getExternalizerDomainHttp() const;
    void setExternalizerDomainHttp(ConfigNodePropertyString const& value);
    bool externalizerDomainHttpIsSet() const;
    void unsetExternalizer_domain_http();

protected:
    ConfigNodePropertyBoolean m_Enable_multisession;
    bool m_Enable_multisessionIsSet;
    ConfigNodePropertyBoolean m_Ids_cc_enable;
    bool m_Ids_cc_enableIsSet;
    ConfigNodePropertyBoolean m_Enable_retry;
    bool m_Enable_retryIsSet;
    ConfigNodePropertyBoolean m_Enable_retry_scripterror;
    bool m_Enable_retry_scripterrorIsSet;
    ConfigNodePropertyString m_Externalizer_domain_cqhost;
    bool m_Externalizer_domain_cqhostIsSet;
    ConfigNodePropertyString m_Externalizer_domain_http;
    bool m_Externalizer_domain_httpIsSet;
};

}
}
}
}

#endif /* ComDayCqDamIdsImplIDSJobProcessorProperties_H_ */
