/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties() {
    this->init();
}

OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::~OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties() {
    
}

void
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::init() {
    m_aem_mcm_campaign_form_constraints_isSet = false;
    m_aem_mcm_campaign_public_url_isSet = false;
    m_aem_mcm_campaign_relaxed_ssl_isSet = false;
}

void
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(aem_mcm_campaign_form_constraints, json[QString("aem.mcm.campaign.formConstraints")]);
    
    ::OpenAPI::fromJsonValue(aem_mcm_campaign_public_url, json[QString("aem.mcm.campaign.publicUrl")]);
    
    ::OpenAPI::fromJsonValue(aem_mcm_campaign_relaxed_ssl, json[QString("aem.mcm.campaign.relaxedSSL")]);
    
}

QString
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(aem_mcm_campaign_form_constraints.isSet()){
        obj.insert(QString("aem.mcm.campaign.formConstraints"), ::OpenAPI::toJsonValue(aem_mcm_campaign_form_constraints));
    }
	if(aem_mcm_campaign_public_url.isSet()){
        obj.insert(QString("aem.mcm.campaign.publicUrl"), ::OpenAPI::toJsonValue(aem_mcm_campaign_public_url));
    }
	if(aem_mcm_campaign_relaxed_ssl.isSet()){
        obj.insert(QString("aem.mcm.campaign.relaxedSSL"), ::OpenAPI::toJsonValue(aem_mcm_campaign_relaxed_ssl));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::getAemMcmCampaignFormConstraints() const {
    return aem_mcm_campaign_form_constraints;
}
void
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::setAemMcmCampaignFormConstraints(const OAIConfigNodePropertyArray &aem_mcm_campaign_form_constraints) {
    this->aem_mcm_campaign_form_constraints = aem_mcm_campaign_form_constraints;
    this->m_aem_mcm_campaign_form_constraints_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::getAemMcmCampaignPublicUrl() const {
    return aem_mcm_campaign_public_url;
}
void
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::setAemMcmCampaignPublicUrl(const OAIConfigNodePropertyString &aem_mcm_campaign_public_url) {
    this->aem_mcm_campaign_public_url = aem_mcm_campaign_public_url;
    this->m_aem_mcm_campaign_public_url_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::getAemMcmCampaignRelaxedSsl() const {
    return aem_mcm_campaign_relaxed_ssl;
}
void
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::setAemMcmCampaignRelaxedSsl(const OAIConfigNodePropertyBoolean &aem_mcm_campaign_relaxed_ssl) {
    this->aem_mcm_campaign_relaxed_ssl = aem_mcm_campaign_relaxed_ssl;
    this->m_aem_mcm_campaign_relaxed_ssl_isSet = true;
}


bool
OAIComDayCqMcmCampaignImplIntegrationConfigImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(aem_mcm_campaign_form_constraints.isSet()){ isObjectUpdated = true; break;}
    
        if(aem_mcm_campaign_public_url.isSet()){ isObjectUpdated = true; break;}
    
        if(aem_mcm_campaign_relaxed_ssl.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

