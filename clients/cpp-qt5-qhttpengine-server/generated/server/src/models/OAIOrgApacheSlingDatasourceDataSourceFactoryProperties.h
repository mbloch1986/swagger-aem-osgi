/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingDatasourceDataSourceFactoryProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingDatasourceDataSourceFactoryProperties_H
#define OAIOrgApacheSlingDatasourceDataSourceFactoryProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingDatasourceDataSourceFactoryProperties: public OAIObject {
public:
    OAIOrgApacheSlingDatasourceDataSourceFactoryProperties();
    OAIOrgApacheSlingDatasourceDataSourceFactoryProperties(QString json);
    ~OAIOrgApacheSlingDatasourceDataSourceFactoryProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getDatasourceName() const;
    void setDatasourceName(const OAIConfigNodePropertyString &datasource_name);

    OAIConfigNodePropertyString getDatasourceSvcPropName() const;
    void setDatasourceSvcPropName(const OAIConfigNodePropertyString &datasource_svc_prop_name);

    OAIConfigNodePropertyString getDriverClassName() const;
    void setDriverClassName(const OAIConfigNodePropertyString &driver_class_name);

    OAIConfigNodePropertyString getUrl() const;
    void setUrl(const OAIConfigNodePropertyString &url);

    OAIConfigNodePropertyString getUsername() const;
    void setUsername(const OAIConfigNodePropertyString &username);

    OAIConfigNodePropertyString getPassword() const;
    void setPassword(const OAIConfigNodePropertyString &password);

    OAIConfigNodePropertyDropDown getDefaultAutoCommit() const;
    void setDefaultAutoCommit(const OAIConfigNodePropertyDropDown &default_auto_commit);

    OAIConfigNodePropertyDropDown getDefaultReadOnly() const;
    void setDefaultReadOnly(const OAIConfigNodePropertyDropDown &default_read_only);

    OAIConfigNodePropertyDropDown getDefaultTransactionIsolation() const;
    void setDefaultTransactionIsolation(const OAIConfigNodePropertyDropDown &default_transaction_isolation);

    OAIConfigNodePropertyString getDefaultCatalog() const;
    void setDefaultCatalog(const OAIConfigNodePropertyString &default_catalog);

    OAIConfigNodePropertyInteger getMaxActive() const;
    void setMaxActive(const OAIConfigNodePropertyInteger &max_active);

    OAIConfigNodePropertyInteger getMaxIdle() const;
    void setMaxIdle(const OAIConfigNodePropertyInteger &max_idle);

    OAIConfigNodePropertyInteger getMinIdle() const;
    void setMinIdle(const OAIConfigNodePropertyInteger &min_idle);

    OAIConfigNodePropertyInteger getInitialSize() const;
    void setInitialSize(const OAIConfigNodePropertyInteger &initial_size);

    OAIConfigNodePropertyInteger getMaxWait() const;
    void setMaxWait(const OAIConfigNodePropertyInteger &max_wait);

    OAIConfigNodePropertyInteger getMaxAge() const;
    void setMaxAge(const OAIConfigNodePropertyInteger &max_age);

    OAIConfigNodePropertyBoolean getTestOnBorrow() const;
    void setTestOnBorrow(const OAIConfigNodePropertyBoolean &test_on_borrow);

    OAIConfigNodePropertyBoolean getTestOnReturn() const;
    void setTestOnReturn(const OAIConfigNodePropertyBoolean &test_on_return);

    OAIConfigNodePropertyBoolean getTestWhileIdle() const;
    void setTestWhileIdle(const OAIConfigNodePropertyBoolean &test_while_idle);

    OAIConfigNodePropertyString getValidationQuery() const;
    void setValidationQuery(const OAIConfigNodePropertyString &validation_query);

    OAIConfigNodePropertyInteger getValidationQueryTimeout() const;
    void setValidationQueryTimeout(const OAIConfigNodePropertyInteger &validation_query_timeout);

    OAIConfigNodePropertyInteger getTimeBetweenEvictionRunsMillis() const;
    void setTimeBetweenEvictionRunsMillis(const OAIConfigNodePropertyInteger &time_between_eviction_runs_millis);

    OAIConfigNodePropertyInteger getMinEvictableIdleTimeMillis() const;
    void setMinEvictableIdleTimeMillis(const OAIConfigNodePropertyInteger &min_evictable_idle_time_millis);

    OAIConfigNodePropertyString getConnectionProperties() const;
    void setConnectionProperties(const OAIConfigNodePropertyString &connection_properties);

    OAIConfigNodePropertyString getInitSql() const;
    void setInitSql(const OAIConfigNodePropertyString &init_sql);

    OAIConfigNodePropertyString getJdbcInterceptors() const;
    void setJdbcInterceptors(const OAIConfigNodePropertyString &jdbc_interceptors);

    OAIConfigNodePropertyInteger getValidationInterval() const;
    void setValidationInterval(const OAIConfigNodePropertyInteger &validation_interval);

    OAIConfigNodePropertyBoolean getLogValidationErrors() const;
    void setLogValidationErrors(const OAIConfigNodePropertyBoolean &log_validation_errors);

    OAIConfigNodePropertyArray getDatasourceSvcProperties() const;
    void setDatasourceSvcProperties(const OAIConfigNodePropertyArray &datasource_svc_properties);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString datasource_name;
    bool m_datasource_name_isSet;

    OAIConfigNodePropertyString datasource_svc_prop_name;
    bool m_datasource_svc_prop_name_isSet;

    OAIConfigNodePropertyString driver_class_name;
    bool m_driver_class_name_isSet;

    OAIConfigNodePropertyString url;
    bool m_url_isSet;

    OAIConfigNodePropertyString username;
    bool m_username_isSet;

    OAIConfigNodePropertyString password;
    bool m_password_isSet;

    OAIConfigNodePropertyDropDown default_auto_commit;
    bool m_default_auto_commit_isSet;

    OAIConfigNodePropertyDropDown default_read_only;
    bool m_default_read_only_isSet;

    OAIConfigNodePropertyDropDown default_transaction_isolation;
    bool m_default_transaction_isolation_isSet;

    OAIConfigNodePropertyString default_catalog;
    bool m_default_catalog_isSet;

    OAIConfigNodePropertyInteger max_active;
    bool m_max_active_isSet;

    OAIConfigNodePropertyInteger max_idle;
    bool m_max_idle_isSet;

    OAIConfigNodePropertyInteger min_idle;
    bool m_min_idle_isSet;

    OAIConfigNodePropertyInteger initial_size;
    bool m_initial_size_isSet;

    OAIConfigNodePropertyInteger max_wait;
    bool m_max_wait_isSet;

    OAIConfigNodePropertyInteger max_age;
    bool m_max_age_isSet;

    OAIConfigNodePropertyBoolean test_on_borrow;
    bool m_test_on_borrow_isSet;

    OAIConfigNodePropertyBoolean test_on_return;
    bool m_test_on_return_isSet;

    OAIConfigNodePropertyBoolean test_while_idle;
    bool m_test_while_idle_isSet;

    OAIConfigNodePropertyString validation_query;
    bool m_validation_query_isSet;

    OAIConfigNodePropertyInteger validation_query_timeout;
    bool m_validation_query_timeout_isSet;

    OAIConfigNodePropertyInteger time_between_eviction_runs_millis;
    bool m_time_between_eviction_runs_millis_isSet;

    OAIConfigNodePropertyInteger min_evictable_idle_time_millis;
    bool m_min_evictable_idle_time_millis_isSet;

    OAIConfigNodePropertyString connection_properties;
    bool m_connection_properties_isSet;

    OAIConfigNodePropertyString init_sql;
    bool m_init_sql_isSet;

    OAIConfigNodePropertyString jdbc_interceptors;
    bool m_jdbc_interceptors_isSet;

    OAIConfigNodePropertyInteger validation_interval;
    bool m_validation_interval_isSet;

    OAIConfigNodePropertyBoolean log_validation_errors;
    bool m_log_validation_errors_isSet;

    OAIConfigNodePropertyArray datasource_svc_properties;
    bool m_datasource_svc_properties_isSet;

};

}

#endif // OAIOrgApacheSlingDatasourceDataSourceFactoryProperties_H
