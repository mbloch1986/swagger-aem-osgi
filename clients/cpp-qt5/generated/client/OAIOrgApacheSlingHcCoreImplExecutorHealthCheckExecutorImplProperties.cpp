/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties() {
    init();
}

OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::~OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties() {
    this->cleanup();
}

void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::init() {
    timeout_in_ms = new OAIConfigNodePropertyInteger();
    m_timeout_in_ms_isSet = false;
    long_running_future_threshold_for_critical_ms = new OAIConfigNodePropertyInteger();
    m_long_running_future_threshold_for_critical_ms_isSet = false;
    result_cache_ttl_in_ms = new OAIConfigNodePropertyInteger();
    m_result_cache_ttl_in_ms_isSet = false;
}

void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::cleanup() {
    if(timeout_in_ms != nullptr) { 
        delete timeout_in_ms;
    }
    if(long_running_future_threshold_for_critical_ms != nullptr) { 
        delete long_running_future_threshold_for_critical_ms;
    }
    if(result_cache_ttl_in_ms != nullptr) { 
        delete result_cache_ttl_in_ms;
    }
}

OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties*
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&timeout_in_ms, pJson["timeoutInMs"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&long_running_future_threshold_for_critical_ms, pJson["longRunningFutureThresholdForCriticalMs"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&result_cache_ttl_in_ms, pJson["resultCacheTtlInMs"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::asJsonObject() {
    QJsonObject obj;
    if((timeout_in_ms != nullptr) && (timeout_in_ms->isSet())){
        toJsonValue(QString("timeoutInMs"), timeout_in_ms, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((long_running_future_threshold_for_critical_ms != nullptr) && (long_running_future_threshold_for_critical_ms->isSet())){
        toJsonValue(QString("longRunningFutureThresholdForCriticalMs"), long_running_future_threshold_for_critical_ms, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((result_cache_ttl_in_ms != nullptr) && (result_cache_ttl_in_ms->isSet())){
        toJsonValue(QString("resultCacheTtlInMs"), result_cache_ttl_in_ms, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::getTimeoutInMs() {
    return timeout_in_ms;
}
void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::setTimeoutInMs(OAIConfigNodePropertyInteger* timeout_in_ms) {
    this->timeout_in_ms = timeout_in_ms;
    this->m_timeout_in_ms_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::getLongRunningFutureThresholdForCriticalMs() {
    return long_running_future_threshold_for_critical_ms;
}
void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::setLongRunningFutureThresholdForCriticalMs(OAIConfigNodePropertyInteger* long_running_future_threshold_for_critical_ms) {
    this->long_running_future_threshold_for_critical_ms = long_running_future_threshold_for_critical_ms;
    this->m_long_running_future_threshold_for_critical_ms_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::getResultCacheTtlInMs() {
    return result_cache_ttl_in_ms;
}
void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::setResultCacheTtlInMs(OAIConfigNodePropertyInteger* result_cache_ttl_in_ms) {
    this->result_cache_ttl_in_ms = result_cache_ttl_in_ms;
    this->m_result_cache_ttl_in_ms_isSet = true;
}


bool
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(timeout_in_ms != nullptr && timeout_in_ms->isSet()){ isObjectUpdated = true; break;}
        if(long_running_future_threshold_for_critical_ms != nullptr && long_running_future_threshold_for_critical_ms->isSet()){ isObjectUpdated = true; break;}
        if(result_cache_ttl_in_ms != nullptr && result_cache_ttl_in_ms->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

