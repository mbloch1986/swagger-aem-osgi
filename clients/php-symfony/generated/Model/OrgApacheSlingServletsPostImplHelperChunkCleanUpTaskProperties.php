<?php
/**
 * OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("scheduler.expression")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $schedulerExpression;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("scheduler.concurrent")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $schedulerConcurrent;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("chunk.cleanup.age")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $chunkCleanupAge;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->schedulerExpression = isset($data['schedulerExpression']) ? $data['schedulerExpression'] : null;
        $this->schedulerConcurrent = isset($data['schedulerConcurrent']) ? $data['schedulerConcurrent'] : null;
        $this->chunkCleanupAge = isset($data['chunkCleanupAge']) ? $data['chunkCleanupAge'] : null;
    }

    /**
     * Gets schedulerExpression.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSchedulerExpression()
    {
        return $this->schedulerExpression;
    }

    /**
     * Sets schedulerExpression.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $schedulerExpression
     *
     * @return $this
     */
    public function setSchedulerExpression(ConfigNodePropertyString $schedulerExpression = null)
    {
        $this->schedulerExpression = $schedulerExpression;

        return $this;
    }

    /**
     * Gets schedulerConcurrent.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getSchedulerConcurrent()
    {
        return $this->schedulerConcurrent;
    }

    /**
     * Sets schedulerConcurrent.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $schedulerConcurrent
     *
     * @return $this
     */
    public function setSchedulerConcurrent(ConfigNodePropertyBoolean $schedulerConcurrent = null)
    {
        $this->schedulerConcurrent = $schedulerConcurrent;

        return $this;
    }

    /**
     * Gets chunkCleanupAge.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getChunkCleanupAge()
    {
        return $this->chunkCleanupAge;
    }

    /**
     * Sets chunkCleanupAge.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $chunkCleanupAge
     *
     * @return $this
     */
    public function setChunkCleanupAge(ConfigNodePropertyInteger $chunkCleanupAge = null)
    {
        $this->chunkCleanupAge = $chunkCleanupAge;

        return $this;
    }
}


