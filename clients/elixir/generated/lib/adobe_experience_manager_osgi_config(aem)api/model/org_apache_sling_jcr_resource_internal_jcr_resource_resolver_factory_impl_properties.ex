# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdobeExperienceManagerOSGIConfig(AEM)API.Model.OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"resource.resolver.searchpath",
    :"resource.resolver.manglenamespaces",
    :"resource.resolver.allowDirect",
    :"resource.resolver.required.providers",
    :"resource.resolver.required.providernames",
    :"resource.resolver.virtual",
    :"resource.resolver.mapping",
    :"resource.resolver.map.location",
    :"resource.resolver.map.observation",
    :"resource.resolver.default.vanity.redirect.status",
    :"resource.resolver.enable.vanitypath",
    :"resource.resolver.vanitypath.maxEntries",
    :"resource.resolver.vanitypath.maxEntries.startup",
    :"resource.resolver.vanitypath.bloomfilter.maxBytes",
    :"resource.resolver.optimize.alias.resolution",
    :"resource.resolver.vanitypath.whitelist",
    :"resource.resolver.vanitypath.blacklist",
    :"resource.resolver.vanity.precedence",
    :"resource.resolver.providerhandling.paranoid",
    :"resource.resolver.log.closing",
    :"resource.resolver.log.unclosed"
  ]

  @type t :: %__MODULE__{
    :"resource.resolver.searchpath" => ConfigNodePropertyArray,
    :"resource.resolver.manglenamespaces" => ConfigNodePropertyBoolean,
    :"resource.resolver.allowDirect" => ConfigNodePropertyBoolean,
    :"resource.resolver.required.providers" => ConfigNodePropertyArray,
    :"resource.resolver.required.providernames" => ConfigNodePropertyArray,
    :"resource.resolver.virtual" => ConfigNodePropertyArray,
    :"resource.resolver.mapping" => ConfigNodePropertyArray,
    :"resource.resolver.map.location" => ConfigNodePropertyString,
    :"resource.resolver.map.observation" => ConfigNodePropertyArray,
    :"resource.resolver.default.vanity.redirect.status" => ConfigNodePropertyInteger,
    :"resource.resolver.enable.vanitypath" => ConfigNodePropertyBoolean,
    :"resource.resolver.vanitypath.maxEntries" => ConfigNodePropertyInteger,
    :"resource.resolver.vanitypath.maxEntries.startup" => ConfigNodePropertyBoolean,
    :"resource.resolver.vanitypath.bloomfilter.maxBytes" => ConfigNodePropertyInteger,
    :"resource.resolver.optimize.alias.resolution" => ConfigNodePropertyBoolean,
    :"resource.resolver.vanitypath.whitelist" => ConfigNodePropertyArray,
    :"resource.resolver.vanitypath.blacklist" => ConfigNodePropertyArray,
    :"resource.resolver.vanity.precedence" => ConfigNodePropertyBoolean,
    :"resource.resolver.providerhandling.paranoid" => ConfigNodePropertyBoolean,
    :"resource.resolver.log.closing" => ConfigNodePropertyBoolean,
    :"resource.resolver.log.unclosed" => ConfigNodePropertyBoolean
  }
end

defimpl Poison.Decoder, for: AdobeExperienceManagerOSGIConfig(AEM)API.Model.OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties do
  import AdobeExperienceManagerOSGIConfig(AEM)API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"resource.resolver.searchpath", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"resource.resolver.manglenamespaces", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"resource.resolver.allowDirect", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"resource.resolver.required.providers", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"resource.resolver.required.providernames", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"resource.resolver.virtual", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"resource.resolver.mapping", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"resource.resolver.map.location", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"resource.resolver.map.observation", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"resource.resolver.default.vanity.redirect.status", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"resource.resolver.enable.vanitypath", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"resource.resolver.vanitypath.maxEntries", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"resource.resolver.vanitypath.maxEntries.startup", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"resource.resolver.vanitypath.bloomfilter.maxBytes", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"resource.resolver.optimize.alias.resolution", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"resource.resolver.vanitypath.whitelist", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"resource.resolver.vanitypath.blacklist", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"resource.resolver.vanity.precedence", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"resource.resolver.providerhandling.paranoid", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"resource.resolver.log.closing", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"resource.resolver.log.unclosed", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
  end
end

