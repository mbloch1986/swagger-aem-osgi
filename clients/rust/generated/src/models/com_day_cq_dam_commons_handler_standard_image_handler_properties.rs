/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamCommonsHandlerStandardImageHandlerProperties {
  #[serde(rename = "large_file_threshold")]
  large_file_threshold: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "large_comment_threshold")]
  large_comment_threshold: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.dam.enable.ext.meta.extraction")]
  cq_dam_enable_ext_meta_extraction: Option<::models::ConfigNodePropertyBoolean>
}

impl ComDayCqDamCommonsHandlerStandardImageHandlerProperties {
  pub fn new() -> ComDayCqDamCommonsHandlerStandardImageHandlerProperties {
    ComDayCqDamCommonsHandlerStandardImageHandlerProperties {
      large_file_threshold: None,
      large_comment_threshold: None,
      cq_dam_enable_ext_meta_extraction: None
    }
  }

  pub fn set_large_file_threshold(&mut self, large_file_threshold: ::models::ConfigNodePropertyInteger) {
    self.large_file_threshold = Some(large_file_threshold);
  }

  pub fn with_large_file_threshold(mut self, large_file_threshold: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCommonsHandlerStandardImageHandlerProperties {
    self.large_file_threshold = Some(large_file_threshold);
    self
  }

  pub fn large_file_threshold(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.large_file_threshold.as_ref()
  }

  pub fn reset_large_file_threshold(&mut self) {
    self.large_file_threshold = None;
  }

  pub fn set_large_comment_threshold(&mut self, large_comment_threshold: ::models::ConfigNodePropertyInteger) {
    self.large_comment_threshold = Some(large_comment_threshold);
  }

  pub fn with_large_comment_threshold(mut self, large_comment_threshold: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCommonsHandlerStandardImageHandlerProperties {
    self.large_comment_threshold = Some(large_comment_threshold);
    self
  }

  pub fn large_comment_threshold(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.large_comment_threshold.as_ref()
  }

  pub fn reset_large_comment_threshold(&mut self) {
    self.large_comment_threshold = None;
  }

  pub fn set_cq_dam_enable_ext_meta_extraction(&mut self, cq_dam_enable_ext_meta_extraction: ::models::ConfigNodePropertyBoolean) {
    self.cq_dam_enable_ext_meta_extraction = Some(cq_dam_enable_ext_meta_extraction);
  }

  pub fn with_cq_dam_enable_ext_meta_extraction(mut self, cq_dam_enable_ext_meta_extraction: ::models::ConfigNodePropertyBoolean) -> ComDayCqDamCommonsHandlerStandardImageHandlerProperties {
    self.cq_dam_enable_ext_meta_extraction = Some(cq_dam_enable_ext_meta_extraction);
    self
  }

  pub fn cq_dam_enable_ext_meta_extraction(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.cq_dam_enable_ext_meta_extraction.as_ref()
  }

  pub fn reset_cq_dam_enable_ext_meta_extraction(&mut self) {
    self.cq_dam_enable_ext_meta_extraction = None;
  }

}



