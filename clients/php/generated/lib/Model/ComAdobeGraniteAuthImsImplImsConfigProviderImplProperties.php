<?php
/**
 * ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'comAdobeGraniteAuthImsImplImsConfigProviderImplProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'oauth_configmanager_ims_configid' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'ims_owning_entity' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'aem_instance_id' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'ims_service_code' => '\OpenAPI\Client\Model\ConfigNodePropertyString'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'oauth_configmanager_ims_configid' => null,
        'ims_owning_entity' => null,
        'aem_instance_id' => null,
        'ims_service_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'oauth_configmanager_ims_configid' => 'oauth.configmanager.ims.configid',
        'ims_owning_entity' => 'ims.owningEntity',
        'aem_instance_id' => 'aem.instanceId',
        'ims_service_code' => 'ims.serviceCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'oauth_configmanager_ims_configid' => 'setOauthConfigmanagerImsConfigid',
        'ims_owning_entity' => 'setImsOwningEntity',
        'aem_instance_id' => 'setAemInstanceId',
        'ims_service_code' => 'setImsServiceCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'oauth_configmanager_ims_configid' => 'getOauthConfigmanagerImsConfigid',
        'ims_owning_entity' => 'getImsOwningEntity',
        'aem_instance_id' => 'getAemInstanceId',
        'ims_service_code' => 'getImsServiceCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['oauth_configmanager_ims_configid'] = isset($data['oauth_configmanager_ims_configid']) ? $data['oauth_configmanager_ims_configid'] : null;
        $this->container['ims_owning_entity'] = isset($data['ims_owning_entity']) ? $data['ims_owning_entity'] : null;
        $this->container['aem_instance_id'] = isset($data['aem_instance_id']) ? $data['aem_instance_id'] : null;
        $this->container['ims_service_code'] = isset($data['ims_service_code']) ? $data['ims_service_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets oauth_configmanager_ims_configid
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthConfigmanagerImsConfigid()
    {
        return $this->container['oauth_configmanager_ims_configid'];
    }

    /**
     * Sets oauth_configmanager_ims_configid
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_configmanager_ims_configid oauth_configmanager_ims_configid
     *
     * @return $this
     */
    public function setOauthConfigmanagerImsConfigid($oauth_configmanager_ims_configid)
    {
        $this->container['oauth_configmanager_ims_configid'] = $oauth_configmanager_ims_configid;

        return $this;
    }

    /**
     * Gets ims_owning_entity
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getImsOwningEntity()
    {
        return $this->container['ims_owning_entity'];
    }

    /**
     * Sets ims_owning_entity
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $ims_owning_entity ims_owning_entity
     *
     * @return $this
     */
    public function setImsOwningEntity($ims_owning_entity)
    {
        $this->container['ims_owning_entity'] = $ims_owning_entity;

        return $this;
    }

    /**
     * Gets aem_instance_id
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getAemInstanceId()
    {
        return $this->container['aem_instance_id'];
    }

    /**
     * Sets aem_instance_id
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $aem_instance_id aem_instance_id
     *
     * @return $this
     */
    public function setAemInstanceId($aem_instance_id)
    {
        $this->container['aem_instance_id'] = $aem_instance_id;

        return $this;
    }

    /**
     * Gets ims_service_code
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getImsServiceCode()
    {
        return $this->container['ims_service_code'];
    }

    /**
     * Sets ims_service_code
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $ims_service_code ims_service_code
     *
     * @return $this
     */
    public function setImsServiceCode($ims_service_code)
    {
        $this->container['ims_service_code'] = $ims_service_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


