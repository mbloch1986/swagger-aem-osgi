/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComAdobeCqScreensImplHandlerChann
 */
public class OASComAdobeCqScreensImplHandlerChann implements OAS.MappedProperties {
    /**
     * Get cqPagesupdatehandlerImageresourcetypes
     * @return cqPagesupdatehandlerImageresourcetypes
     */
    public OASConfigNodePropertyArray cqPagesupdatehandlerImageresourcetypes { get; set; }

    /**
     * Get cqPagesupdatehandlerProductresourcetypes
     * @return cqPagesupdatehandlerProductresourcetypes
     */
    public OASConfigNodePropertyArray cqPagesupdatehandlerProductresourcetypes { get; set; }

    /**
     * Get cqPagesupdatehandlerVideoresourcetypes
     * @return cqPagesupdatehandlerVideoresourcetypes
     */
    public OASConfigNodePropertyArray cqPagesupdatehandlerVideoresourcetypes { get; set; }

    /**
     * Get cqPagesupdatehandlerDynamicsequenceresourcetypes
     * @return cqPagesupdatehandlerDynamicsequenceresourcetypes
     */
    public OASConfigNodePropertyArray cqPagesupdatehandlerDynamicsequenceresourcetypes { get; set; }

    /**
     * Get cqPagesupdatehandlerPreviewmodepaths
     * @return cqPagesupdatehandlerPreviewmodepaths
     */
    public OASConfigNodePropertyArray cqPagesupdatehandlerPreviewmodepaths { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'cq.pagesupdatehandler.imageresourcetypes' => 'cqPagesupdatehandlerImageresourcetypes',
        'cq.pagesupdatehandler.productresourcetypes' => 'cqPagesupdatehandlerProductresourcetypes',
        'cq.pagesupdatehandler.videoresourcetypes' => 'cqPagesupdatehandlerVideoresourcetypes',
        'cq.pagesupdatehandler.dynamicsequenceresourcetypes' => 'cqPagesupdatehandlerDynamicsequenceresourcetypes',
        'cq.pagesupdatehandler.previewmodepaths' => 'cqPagesupdatehandlerPreviewmodepaths'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComAdobeCqScreensImplHandlerChann getExample() {
        OASComAdobeCqScreensImplHandlerChann comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties = new OASComAdobeCqScreensImplHandlerChann();
          comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerImageresourcetypes = OASConfigNodePropertyArray.getExample();
          comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerProductresourcetypes = OASConfigNodePropertyArray.getExample();
          comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerVideoresourcetypes = OASConfigNodePropertyArray.getExample();
          comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerDynamicsequenceresourcetypes = OASConfigNodePropertyArray.getExample();
          comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerPreviewmodepaths = OASConfigNodePropertyArray.getExample();
        return comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComAdobeCqScreensImplHandlerChann) {           
            OASComAdobeCqScreensImplHandlerChann comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties = (OASComAdobeCqScreensImplHandlerChann) obj;
            return this.cqPagesupdatehandlerImageresourcetypes == comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerImageresourcetypes
                && this.cqPagesupdatehandlerProductresourcetypes == comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerProductresourcetypes
                && this.cqPagesupdatehandlerVideoresourcetypes == comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerVideoresourcetypes
                && this.cqPagesupdatehandlerDynamicsequenceresourcetypes == comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerDynamicsequenceresourcetypes
                && this.cqPagesupdatehandlerPreviewmodepaths == comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties.cqPagesupdatehandlerPreviewmodepaths;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (cqPagesupdatehandlerImageresourcetypes == null ? 0 : System.hashCode(cqPagesupdatehandlerImageresourcetypes));
        hashCode = (17 * hashCode) + (cqPagesupdatehandlerProductresourcetypes == null ? 0 : System.hashCode(cqPagesupdatehandlerProductresourcetypes));
        hashCode = (17 * hashCode) + (cqPagesupdatehandlerVideoresourcetypes == null ? 0 : System.hashCode(cqPagesupdatehandlerVideoresourcetypes));
        hashCode = (17 * hashCode) + (cqPagesupdatehandlerDynamicsequenceresourcetypes == null ? 0 : System.hashCode(cqPagesupdatehandlerDynamicsequenceresourcetypes));
        hashCode = (17 * hashCode) + (cqPagesupdatehandlerPreviewmodepaths == null ? 0 : System.hashCode(cqPagesupdatehandlerPreviewmodepaths));
        return hashCode;
    }
}

