/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComDayCqDamCoreImplServletBatchMetadataServletProperties
    /// </summary>
    [DataContract]
    public partial class ComDayCqDamCoreImplServletBatchMetadataServletProperties :  IEquatable<ComDayCqDamCoreImplServletBatchMetadataServletProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComDayCqDamCoreImplServletBatchMetadataServletProperties" /> class.
        /// </summary>
        /// <param name="cqDamBatchMetadataAssetDefault">cqDamBatchMetadataAssetDefault.</param>
        /// <param name="cqDamBatchMetadataCollectionDefault">cqDamBatchMetadataCollectionDefault.</param>
        /// <param name="cqDamBatchMetadataMaxresources">cqDamBatchMetadataMaxresources.</param>
        public ComDayCqDamCoreImplServletBatchMetadataServletProperties(ConfigNodePropertyArray cqDamBatchMetadataAssetDefault = default(ConfigNodePropertyArray), ConfigNodePropertyArray cqDamBatchMetadataCollectionDefault = default(ConfigNodePropertyArray), ConfigNodePropertyInteger cqDamBatchMetadataMaxresources = default(ConfigNodePropertyInteger))
        {
            this.CqDamBatchMetadataAssetDefault = cqDamBatchMetadataAssetDefault;
            this.CqDamBatchMetadataCollectionDefault = cqDamBatchMetadataCollectionDefault;
            this.CqDamBatchMetadataMaxresources = cqDamBatchMetadataMaxresources;
        }
        
        /// <summary>
        /// Gets or Sets CqDamBatchMetadataAssetDefault
        /// </summary>
        [DataMember(Name="cq.dam.batch.metadata.asset.default", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqDamBatchMetadataAssetDefault { get; set; }

        /// <summary>
        /// Gets or Sets CqDamBatchMetadataCollectionDefault
        /// </summary>
        [DataMember(Name="cq.dam.batch.metadata.collection.default", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqDamBatchMetadataCollectionDefault { get; set; }

        /// <summary>
        /// Gets or Sets CqDamBatchMetadataMaxresources
        /// </summary>
        [DataMember(Name="cq.dam.batch.metadata.maxresources", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger CqDamBatchMetadataMaxresources { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCqDamCoreImplServletBatchMetadataServletProperties {\n");
            sb.Append("  CqDamBatchMetadataAssetDefault: ").Append(CqDamBatchMetadataAssetDefault).Append("\n");
            sb.Append("  CqDamBatchMetadataCollectionDefault: ").Append(CqDamBatchMetadataCollectionDefault).Append("\n");
            sb.Append("  CqDamBatchMetadataMaxresources: ").Append(CqDamBatchMetadataMaxresources).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComDayCqDamCoreImplServletBatchMetadataServletProperties);
        }

        /// <summary>
        /// Returns true if ComDayCqDamCoreImplServletBatchMetadataServletProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComDayCqDamCoreImplServletBatchMetadataServletProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCqDamCoreImplServletBatchMetadataServletProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CqDamBatchMetadataAssetDefault == input.CqDamBatchMetadataAssetDefault ||
                    (this.CqDamBatchMetadataAssetDefault != null &&
                    this.CqDamBatchMetadataAssetDefault.Equals(input.CqDamBatchMetadataAssetDefault))
                ) && 
                (
                    this.CqDamBatchMetadataCollectionDefault == input.CqDamBatchMetadataCollectionDefault ||
                    (this.CqDamBatchMetadataCollectionDefault != null &&
                    this.CqDamBatchMetadataCollectionDefault.Equals(input.CqDamBatchMetadataCollectionDefault))
                ) && 
                (
                    this.CqDamBatchMetadataMaxresources == input.CqDamBatchMetadataMaxresources ||
                    (this.CqDamBatchMetadataMaxresources != null &&
                    this.CqDamBatchMetadataMaxresources.Equals(input.CqDamBatchMetadataMaxresources))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CqDamBatchMetadataAssetDefault != null)
                    hashCode = hashCode * 59 + this.CqDamBatchMetadataAssetDefault.GetHashCode();
                if (this.CqDamBatchMetadataCollectionDefault != null)
                    hashCode = hashCode * 59 + this.CqDamBatchMetadataCollectionDefault.GetHashCode();
                if (this.CqDamBatchMetadataMaxresources != null)
                    hashCode = hashCode * 59 + this.CqDamBatchMetadataMaxresources.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
