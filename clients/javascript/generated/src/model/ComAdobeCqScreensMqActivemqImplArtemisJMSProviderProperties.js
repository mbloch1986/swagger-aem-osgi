/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ConfigNodePropertyArray', 'model/ConfigNodePropertyBoolean', 'model/ConfigNodePropertyDropDown', 'model/ConfigNodePropertyFloat', 'model/ConfigNodePropertyInteger', 'model/ConfigNodePropertyString'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ConfigNodePropertyArray'), require('./ConfigNodePropertyBoolean'), require('./ConfigNodePropertyDropDown'), require('./ConfigNodePropertyFloat'), require('./ConfigNodePropertyInteger'), require('./ConfigNodePropertyString'));
  } else {
    // Browser globals (root is window)
    if (!root.NodeSwaggerAemOsgi) {
      root.NodeSwaggerAemOsgi = {};
    }
    root.NodeSwaggerAemOsgi.ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties = factory(root.NodeSwaggerAemOsgi.ApiClient, root.NodeSwaggerAemOsgi.ConfigNodePropertyArray, root.NodeSwaggerAemOsgi.ConfigNodePropertyBoolean, root.NodeSwaggerAemOsgi.ConfigNodePropertyDropDown, root.NodeSwaggerAemOsgi.ConfigNodePropertyFloat, root.NodeSwaggerAemOsgi.ConfigNodePropertyInteger, root.NodeSwaggerAemOsgi.ConfigNodePropertyString);
  }
}(this, function(ApiClient, ConfigNodePropertyArray, ConfigNodePropertyBoolean, ConfigNodePropertyDropDown, ConfigNodePropertyFloat, ConfigNodePropertyInteger, ConfigNodePropertyString) {
  'use strict';




  /**
   * The ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties model module.
   * @module model/ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties</code>.
   * @alias module:model/ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties
   * @class
   */
  var exports = function() {
    var _this = this;


































  };

  /**
   * Constructs a <code>ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties} obj Optional instance to populate.
   * @return {module:model/ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties} The populated <code>ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('service.ranking')) {
        obj['service.ranking'] = ConfigNodePropertyInteger.constructFromObject(data['service.ranking']);
      }
      if (data.hasOwnProperty('global.size')) {
        obj['global.size'] = ConfigNodePropertyInteger.constructFromObject(data['global.size']);
      }
      if (data.hasOwnProperty('max.disk.usage')) {
        obj['max.disk.usage'] = ConfigNodePropertyInteger.constructFromObject(data['max.disk.usage']);
      }
      if (data.hasOwnProperty('persistence.enabled')) {
        obj['persistence.enabled'] = ConfigNodePropertyBoolean.constructFromObject(data['persistence.enabled']);
      }
      if (data.hasOwnProperty('thread.pool.max.size')) {
        obj['thread.pool.max.size'] = ConfigNodePropertyInteger.constructFromObject(data['thread.pool.max.size']);
      }
      if (data.hasOwnProperty('scheduled.thread.pool.max.size')) {
        obj['scheduled.thread.pool.max.size'] = ConfigNodePropertyInteger.constructFromObject(data['scheduled.thread.pool.max.size']);
      }
      if (data.hasOwnProperty('graceful.shutdown.timeout')) {
        obj['graceful.shutdown.timeout'] = ConfigNodePropertyInteger.constructFromObject(data['graceful.shutdown.timeout']);
      }
      if (data.hasOwnProperty('queues')) {
        obj['queues'] = ConfigNodePropertyArray.constructFromObject(data['queues']);
      }
      if (data.hasOwnProperty('topics')) {
        obj['topics'] = ConfigNodePropertyArray.constructFromObject(data['topics']);
      }
      if (data.hasOwnProperty('addresses.max.delivery.attempts')) {
        obj['addresses.max.delivery.attempts'] = ConfigNodePropertyInteger.constructFromObject(data['addresses.max.delivery.attempts']);
      }
      if (data.hasOwnProperty('addresses.expiry.delay')) {
        obj['addresses.expiry.delay'] = ConfigNodePropertyInteger.constructFromObject(data['addresses.expiry.delay']);
      }
      if (data.hasOwnProperty('addresses.address.full.message.policy')) {
        obj['addresses.address.full.message.policy'] = ConfigNodePropertyDropDown.constructFromObject(data['addresses.address.full.message.policy']);
      }
      if (data.hasOwnProperty('addresses.max.size.bytes')) {
        obj['addresses.max.size.bytes'] = ConfigNodePropertyInteger.constructFromObject(data['addresses.max.size.bytes']);
      }
      if (data.hasOwnProperty('addresses.page.size.bytes')) {
        obj['addresses.page.size.bytes'] = ConfigNodePropertyInteger.constructFromObject(data['addresses.page.size.bytes']);
      }
      if (data.hasOwnProperty('addresses.page.cache.max.size')) {
        obj['addresses.page.cache.max.size'] = ConfigNodePropertyInteger.constructFromObject(data['addresses.page.cache.max.size']);
      }
      if (data.hasOwnProperty('cluster.user')) {
        obj['cluster.user'] = ConfigNodePropertyString.constructFromObject(data['cluster.user']);
      }
      if (data.hasOwnProperty('cluster.password')) {
        obj['cluster.password'] = ConfigNodePropertyString.constructFromObject(data['cluster.password']);
      }
      if (data.hasOwnProperty('cluster.call.timeout')) {
        obj['cluster.call.timeout'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.call.timeout']);
      }
      if (data.hasOwnProperty('cluster.call.failover.timeout')) {
        obj['cluster.call.failover.timeout'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.call.failover.timeout']);
      }
      if (data.hasOwnProperty('cluster.client.failure.check.period')) {
        obj['cluster.client.failure.check.period'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.client.failure.check.period']);
      }
      if (data.hasOwnProperty('cluster.notification.attempts')) {
        obj['cluster.notification.attempts'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.notification.attempts']);
      }
      if (data.hasOwnProperty('cluster.notification.interval')) {
        obj['cluster.notification.interval'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.notification.interval']);
      }
      if (data.hasOwnProperty('id.cache.size')) {
        obj['id.cache.size'] = ConfigNodePropertyInteger.constructFromObject(data['id.cache.size']);
      }
      if (data.hasOwnProperty('cluster.confirmation.window.size')) {
        obj['cluster.confirmation.window.size'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.confirmation.window.size']);
      }
      if (data.hasOwnProperty('cluster.connection.ttl')) {
        obj['cluster.connection.ttl'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.connection.ttl']);
      }
      if (data.hasOwnProperty('cluster.duplicate.detection')) {
        obj['cluster.duplicate.detection'] = ConfigNodePropertyBoolean.constructFromObject(data['cluster.duplicate.detection']);
      }
      if (data.hasOwnProperty('cluster.initial.connect.attempts')) {
        obj['cluster.initial.connect.attempts'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.initial.connect.attempts']);
      }
      if (data.hasOwnProperty('cluster.max.retry.interval')) {
        obj['cluster.max.retry.interval'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.max.retry.interval']);
      }
      if (data.hasOwnProperty('cluster.min.large.message.size')) {
        obj['cluster.min.large.message.size'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.min.large.message.size']);
      }
      if (data.hasOwnProperty('cluster.producer.window.size')) {
        obj['cluster.producer.window.size'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.producer.window.size']);
      }
      if (data.hasOwnProperty('cluster.reconnect.attempts')) {
        obj['cluster.reconnect.attempts'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.reconnect.attempts']);
      }
      if (data.hasOwnProperty('cluster.retry.interval')) {
        obj['cluster.retry.interval'] = ConfigNodePropertyInteger.constructFromObject(data['cluster.retry.interval']);
      }
      if (data.hasOwnProperty('cluster.retry.interval.multiplier')) {
        obj['cluster.retry.interval.multiplier'] = ConfigNodePropertyFloat.constructFromObject(data['cluster.retry.interval.multiplier']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ConfigNodePropertyInteger} service.ranking
   */
  exports.prototype['service.ranking'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} global.size
   */
  exports.prototype['global.size'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} max.disk.usage
   */
  exports.prototype['max.disk.usage'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} persistence.enabled
   */
  exports.prototype['persistence.enabled'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} thread.pool.max.size
   */
  exports.prototype['thread.pool.max.size'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} scheduled.thread.pool.max.size
   */
  exports.prototype['scheduled.thread.pool.max.size'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} graceful.shutdown.timeout
   */
  exports.prototype['graceful.shutdown.timeout'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} queues
   */
  exports.prototype['queues'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} topics
   */
  exports.prototype['topics'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} addresses.max.delivery.attempts
   */
  exports.prototype['addresses.max.delivery.attempts'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} addresses.expiry.delay
   */
  exports.prototype['addresses.expiry.delay'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyDropDown} addresses.address.full.message.policy
   */
  exports.prototype['addresses.address.full.message.policy'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} addresses.max.size.bytes
   */
  exports.prototype['addresses.max.size.bytes'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} addresses.page.size.bytes
   */
  exports.prototype['addresses.page.size.bytes'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} addresses.page.cache.max.size
   */
  exports.prototype['addresses.page.cache.max.size'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} cluster.user
   */
  exports.prototype['cluster.user'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} cluster.password
   */
  exports.prototype['cluster.password'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.call.timeout
   */
  exports.prototype['cluster.call.timeout'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.call.failover.timeout
   */
  exports.prototype['cluster.call.failover.timeout'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.client.failure.check.period
   */
  exports.prototype['cluster.client.failure.check.period'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.notification.attempts
   */
  exports.prototype['cluster.notification.attempts'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.notification.interval
   */
  exports.prototype['cluster.notification.interval'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} id.cache.size
   */
  exports.prototype['id.cache.size'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.confirmation.window.size
   */
  exports.prototype['cluster.confirmation.window.size'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.connection.ttl
   */
  exports.prototype['cluster.connection.ttl'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} cluster.duplicate.detection
   */
  exports.prototype['cluster.duplicate.detection'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.initial.connect.attempts
   */
  exports.prototype['cluster.initial.connect.attempts'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.max.retry.interval
   */
  exports.prototype['cluster.max.retry.interval'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.min.large.message.size
   */
  exports.prototype['cluster.min.large.message.size'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.producer.window.size
   */
  exports.prototype['cluster.producer.window.size'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.reconnect.attempts
   */
  exports.prototype['cluster.reconnect.attempts'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} cluster.retry.interval
   */
  exports.prototype['cluster.retry.interval'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyFloat} cluster.retry.interval.multiplier
   */
  exports.prototype['cluster.retry.interval.multiplier'] = undefined;



  return exports;
}));


