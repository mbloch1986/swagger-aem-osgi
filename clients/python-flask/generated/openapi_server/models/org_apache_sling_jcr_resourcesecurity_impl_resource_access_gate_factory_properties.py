# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path: ConfigNodePropertyString=None, checkpath_prefix: ConfigNodePropertyString=None, jcr_path: ConfigNodePropertyString=None):  # noqa: E501
        """OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties - a model defined in OpenAPI

        :param path: The path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.  # noqa: E501
        :type path: ConfigNodePropertyString
        :param checkpath_prefix: The checkpath_prefix of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.  # noqa: E501
        :type checkpath_prefix: ConfigNodePropertyString
        :param jcr_path: The jcr_path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.  # noqa: E501
        :type jcr_path: ConfigNodePropertyString
        """
        self.openapi_types = {
            'path': ConfigNodePropertyString,
            'checkpath_prefix': ConfigNodePropertyString,
            'jcr_path': ConfigNodePropertyString
        }

        self.attribute_map = {
            'path': 'path',
            'checkpath_prefix': 'checkpath.prefix',
            'jcr_path': 'jcrPath'
        }

        self._path = path
        self._checkpath_prefix = checkpath_prefix
        self._jcr_path = jcr_path

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.  # noqa: E501
        :rtype: OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self) -> ConfigNodePropertyString:
        """Gets the path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.


        :return: The path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._path

    @path.setter
    def path(self, path: ConfigNodePropertyString):
        """Sets the path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.


        :param path: The path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.
        :type path: ConfigNodePropertyString
        """

        self._path = path

    @property
    def checkpath_prefix(self) -> ConfigNodePropertyString:
        """Gets the checkpath_prefix of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.


        :return: The checkpath_prefix of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._checkpath_prefix

    @checkpath_prefix.setter
    def checkpath_prefix(self, checkpath_prefix: ConfigNodePropertyString):
        """Sets the checkpath_prefix of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.


        :param checkpath_prefix: The checkpath_prefix of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.
        :type checkpath_prefix: ConfigNodePropertyString
        """

        self._checkpath_prefix = checkpath_prefix

    @property
    def jcr_path(self) -> ConfigNodePropertyString:
        """Gets the jcr_path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.


        :return: The jcr_path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._jcr_path

    @jcr_path.setter
    def jcr_path(self, jcr_path: ConfigNodePropertyString):
        """Sets the jcr_path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.


        :param jcr_path: The jcr_path of this OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties.
        :type jcr_path: ConfigNodePropertyString
        """

        self._jcr_path = jcr_path
