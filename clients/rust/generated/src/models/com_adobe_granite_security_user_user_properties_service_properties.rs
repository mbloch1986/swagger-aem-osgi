/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteSecurityUserUserPropertiesServiceProperties {
  #[serde(rename = "adapter.condition")]
  adapter_condition: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "granite.userproperties.nodetypes")]
  granite_userproperties_nodetypes: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "granite.userproperties.resourcetypes")]
  granite_userproperties_resourcetypes: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeGraniteSecurityUserUserPropertiesServiceProperties {
  pub fn new() -> ComAdobeGraniteSecurityUserUserPropertiesServiceProperties {
    ComAdobeGraniteSecurityUserUserPropertiesServiceProperties {
      adapter_condition: None,
      granite_userproperties_nodetypes: None,
      granite_userproperties_resourcetypes: None
    }
  }

  pub fn set_adapter_condition(&mut self, adapter_condition: ::models::ConfigNodePropertyString) {
    self.adapter_condition = Some(adapter_condition);
  }

  pub fn with_adapter_condition(mut self, adapter_condition: ::models::ConfigNodePropertyString) -> ComAdobeGraniteSecurityUserUserPropertiesServiceProperties {
    self.adapter_condition = Some(adapter_condition);
    self
  }

  pub fn adapter_condition(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.adapter_condition.as_ref()
  }

  pub fn reset_adapter_condition(&mut self) {
    self.adapter_condition = None;
  }

  pub fn set_granite_userproperties_nodetypes(&mut self, granite_userproperties_nodetypes: ::models::ConfigNodePropertyArray) {
    self.granite_userproperties_nodetypes = Some(granite_userproperties_nodetypes);
  }

  pub fn with_granite_userproperties_nodetypes(mut self, granite_userproperties_nodetypes: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteSecurityUserUserPropertiesServiceProperties {
    self.granite_userproperties_nodetypes = Some(granite_userproperties_nodetypes);
    self
  }

  pub fn granite_userproperties_nodetypes(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.granite_userproperties_nodetypes.as_ref()
  }

  pub fn reset_granite_userproperties_nodetypes(&mut self) {
    self.granite_userproperties_nodetypes = None;
  }

  pub fn set_granite_userproperties_resourcetypes(&mut self, granite_userproperties_resourcetypes: ::models::ConfigNodePropertyArray) {
    self.granite_userproperties_resourcetypes = Some(granite_userproperties_resourcetypes);
  }

  pub fn with_granite_userproperties_resourcetypes(mut self, granite_userproperties_resourcetypes: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteSecurityUserUserPropertiesServiceProperties {
    self.granite_userproperties_resourcetypes = Some(granite_userproperties_resourcetypes);
    self
  }

  pub fn granite_userproperties_resourcetypes(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.granite_userproperties_resourcetypes.as_ref()
  }

  pub fn reset_granite_userproperties_resourcetypes(&mut self) {
    self.granite_userproperties_resourcetypes = None;
  }

}



