package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo._

case class ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties])

object ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfoCodecJson: CodecJson[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo] = CodecJson.derive[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo]
  implicit val ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfoDecoder: EntityDecoder[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo] = jsonOf[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo]
  implicit val ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfoEncoder: EntityEncoder[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo] = jsonEncoderOf[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo]
}
