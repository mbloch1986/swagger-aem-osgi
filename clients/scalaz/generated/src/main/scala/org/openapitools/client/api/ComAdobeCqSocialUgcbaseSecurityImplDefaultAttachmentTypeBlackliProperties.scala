package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties._

case class ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties (
  defaultAttachmentTypeBlacklist: Option[ConfigNodePropertyArray],
baselineAttachmentTypeBlacklist: Option[ConfigNodePropertyArray])

object ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliPropertiesCodecJson: CodecJson[ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties] = CodecJson.derive[ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties]
  implicit val ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliPropertiesDecoder: EntityDecoder[ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties] = jsonOf[ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties]
  implicit val ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliPropertiesEncoder: EntityEncoder[ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties] = jsonEncoderOf[ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties]
}
