/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties()
{
    m_Cq_pagesupdatehandler_imageresourcetypesIsSet = false;
}

ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::~ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties()
{
}

void ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::validate()
{
    // TODO: implement validation
}

web::json::value ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Cq_pagesupdatehandler_imageresourcetypesIsSet)
    {
        val[utility::conversions::to_string_t("cq.pagesupdatehandler.imageresourcetypes")] = ModelBase::toJson(m_Cq_pagesupdatehandler_imageresourcetypes);
    }

    return val;
}

void ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("cq.pagesupdatehandler.imageresourcetypes")))
    {
        if(!val[utility::conversions::to_string_t("cq.pagesupdatehandler.imageresourcetypes")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromJson(val[utility::conversions::to_string_t("cq.pagesupdatehandler.imageresourcetypes")]);
            setCqPagesupdatehandlerImageresourcetypes( newItem );
        }
    }
}

void ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Cq_pagesupdatehandler_imageresourcetypesIsSet)
    {
        if (m_Cq_pagesupdatehandler_imageresourcetypes.get())
        {
            m_Cq_pagesupdatehandler_imageresourcetypes->toMultipart(multipart, utility::conversions::to_string_t("cq.pagesupdatehandler.imageresourcetypes."));
        }
    }
}

void ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("cq.pagesupdatehandler.imageresourcetypes")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("cq.pagesupdatehandler.imageresourcetypes")))
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("cq.pagesupdatehandler.imageresourcetypes."));
            setCqPagesupdatehandlerImageresourcetypes( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyArray> ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::getCqPagesupdatehandlerImageresourcetypes() const
{
    return m_Cq_pagesupdatehandler_imageresourcetypes;
}


void ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::setCqPagesupdatehandlerImageresourcetypes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Cq_pagesupdatehandler_imageresourcetypes = value;
    m_Cq_pagesupdatehandler_imageresourcetypesIsSet = true;
}
bool ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::cqPagesupdatehandlerImageresourcetypesIsSet() const
{
    return m_Cq_pagesupdatehandler_imageresourcetypesIsSet;
}

void ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties::unsetCq_pagesupdatehandler_imageresourcetypes()
{
    m_Cq_pagesupdatehandler_imageresourcetypesIsSet = false;
}

}
}
}
}

