/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIConfigNodePropertyDropDown_type.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIConfigNodePropertyDropDown_type::OAIConfigNodePropertyDropDown_type(QString json) {
    this->fromJson(json);
}

OAIConfigNodePropertyDropDown_type::OAIConfigNodePropertyDropDown_type() {
    this->init();
}

OAIConfigNodePropertyDropDown_type::~OAIConfigNodePropertyDropDown_type() {
    
}

void
OAIConfigNodePropertyDropDown_type::init() {
    m_labels_isSet = false;
    m_values_isSet = false;
}

void
OAIConfigNodePropertyDropDown_type::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIConfigNodePropertyDropDown_type::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(labels, json[QString("labels")]);
    
    ::OpenAPI::fromJsonValue(values, json[QString("values")]);
    
}

QString
OAIConfigNodePropertyDropDown_type::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIConfigNodePropertyDropDown_type::asJsonObject() const {
    QJsonObject obj;
	if(labels.isSet()){
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(labels));
    }
	if(values.isSet()){
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(values));
    }
    return obj;
}

OAIObject
OAIConfigNodePropertyDropDown_type::getLabels() const {
    return labels;
}
void
OAIConfigNodePropertyDropDown_type::setLabels(const OAIObject &labels) {
    this->labels = labels;
    this->m_labels_isSet = true;
}

OAIObject
OAIConfigNodePropertyDropDown_type::getValues() const {
    return values;
}
void
OAIConfigNodePropertyDropDown_type::setValues(const OAIObject &values) {
    this->values = values;
    this->m_values_isSet = true;
}


bool
OAIConfigNodePropertyDropDown_type::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(labels.isSet()){ isObjectUpdated = true; break;}
    
        if(values.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

