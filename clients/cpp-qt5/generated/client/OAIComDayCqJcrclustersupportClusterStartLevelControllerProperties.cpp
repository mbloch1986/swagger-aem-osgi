/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties() {
    init();
}

OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::~OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties() {
    this->cleanup();
}

void
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::init() {
    cluster_level_enable = new OAIConfigNodePropertyBoolean();
    m_cluster_level_enable_isSet = false;
    cluster_master_level = new OAIConfigNodePropertyInteger();
    m_cluster_master_level_isSet = false;
    cluster_slave_level = new OAIConfigNodePropertyInteger();
    m_cluster_slave_level_isSet = false;
}

void
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::cleanup() {
    if(cluster_level_enable != nullptr) { 
        delete cluster_level_enable;
    }
    if(cluster_master_level != nullptr) { 
        delete cluster_master_level;
    }
    if(cluster_slave_level != nullptr) { 
        delete cluster_slave_level;
    }
}

OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties*
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cluster_level_enable, pJson["cluster.level.enable"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&cluster_master_level, pJson["cluster.master.level"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&cluster_slave_level, pJson["cluster.slave.level"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::asJsonObject() {
    QJsonObject obj;
    if((cluster_level_enable != nullptr) && (cluster_level_enable->isSet())){
        toJsonValue(QString("cluster.level.enable"), cluster_level_enable, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((cluster_master_level != nullptr) && (cluster_master_level->isSet())){
        toJsonValue(QString("cluster.master.level"), cluster_master_level, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((cluster_slave_level != nullptr) && (cluster_slave_level->isSet())){
        toJsonValue(QString("cluster.slave.level"), cluster_slave_level, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::getClusterLevelEnable() {
    return cluster_level_enable;
}
void
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::setClusterLevelEnable(OAIConfigNodePropertyBoolean* cluster_level_enable) {
    this->cluster_level_enable = cluster_level_enable;
    this->m_cluster_level_enable_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::getClusterMasterLevel() {
    return cluster_master_level;
}
void
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::setClusterMasterLevel(OAIConfigNodePropertyInteger* cluster_master_level) {
    this->cluster_master_level = cluster_master_level;
    this->m_cluster_master_level_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::getClusterSlaveLevel() {
    return cluster_slave_level;
}
void
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::setClusterSlaveLevel(OAIConfigNodePropertyInteger* cluster_slave_level) {
    this->cluster_slave_level = cluster_slave_level;
    this->m_cluster_slave_level_isSet = true;
}


bool
OAIComDayCqJcrclustersupportClusterStartLevelControllerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cluster_level_enable != nullptr && cluster_level_enable->isSet()){ isObjectUpdated = true; break;}
        if(cluster_master_level != nullptr && cluster_master_level->isSet()){ isObjectUpdated = true; break;}
        if(cluster_slave_level != nullptr && cluster_slave_level->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

