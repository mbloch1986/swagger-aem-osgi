/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H
#define OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties: public OAIObject {
public:
    OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties();
    OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties(QString json);
    ~OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getDavRoot() const;
    void setDavRoot(const OAIConfigNodePropertyString &dav_root);

    OAIConfigNodePropertyBoolean getDavCreateAbsoluteUri() const;
    void setDavCreateAbsoluteUri(const OAIConfigNodePropertyBoolean &dav_create_absolute_uri);

    OAIConfigNodePropertyString getDavRealm() const;
    void setDavRealm(const OAIConfigNodePropertyString &dav_realm);

    OAIConfigNodePropertyArray getCollectionTypes() const;
    void setCollectionTypes(const OAIConfigNodePropertyArray &collection_types);

    OAIConfigNodePropertyArray getFilterPrefixes() const;
    void setFilterPrefixes(const OAIConfigNodePropertyArray &filter_prefixes);

    OAIConfigNodePropertyString getFilterTypes() const;
    void setFilterTypes(const OAIConfigNodePropertyString &filter_types);

    OAIConfigNodePropertyString getFilterUris() const;
    void setFilterUris(const OAIConfigNodePropertyString &filter_uris);

    OAIConfigNodePropertyString getTypeCollections() const;
    void setTypeCollections(const OAIConfigNodePropertyString &type_collections);

    OAIConfigNodePropertyString getTypeNoncollections() const;
    void setTypeNoncollections(const OAIConfigNodePropertyString &type_noncollections);

    OAIConfigNodePropertyString getTypeContent() const;
    void setTypeContent(const OAIConfigNodePropertyString &type_content);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString dav_root;
    bool m_dav_root_isSet;

    OAIConfigNodePropertyBoolean dav_create_absolute_uri;
    bool m_dav_create_absolute_uri_isSet;

    OAIConfigNodePropertyString dav_realm;
    bool m_dav_realm_isSet;

    OAIConfigNodePropertyArray collection_types;
    bool m_collection_types_isSet;

    OAIConfigNodePropertyArray filter_prefixes;
    bool m_filter_prefixes_isSet;

    OAIConfigNodePropertyString filter_types;
    bool m_filter_types_isSet;

    OAIConfigNodePropertyString filter_uris;
    bool m_filter_uris_isSet;

    OAIConfigNodePropertyString type_collections;
    bool m_type_collections_isSet;

    OAIConfigNodePropertyString type_noncollections;
    bool m_type_noncollections_isSet;

    OAIConfigNodePropertyString type_content;
    bool m_type_content_isSet;

};

}

#endif // OAIOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H
