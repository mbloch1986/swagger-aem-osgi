note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_WORKFLOW_IMPL_EMAIL_E_MAIL_NOTIFICATION_SERVICE_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    from_address: detachable CONFIG_NODE_PROPERTY_STRING 
      
    host_prefix: detachable CONFIG_NODE_PROPERTY_STRING 
      
    notify_onabort: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    notify_oncomplete: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    notify_oncontainercomplete: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    notify_useronly: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_from_address (a_name: like from_address)
        -- Set 'from_address' with 'a_name'.
      do
        from_address := a_name
      ensure
        from_address_set: from_address = a_name		
      end

    set_host_prefix (a_name: like host_prefix)
        -- Set 'host_prefix' with 'a_name'.
      do
        host_prefix := a_name
      ensure
        host_prefix_set: host_prefix = a_name		
      end

    set_notify_onabort (a_name: like notify_onabort)
        -- Set 'notify_onabort' with 'a_name'.
      do
        notify_onabort := a_name
      ensure
        notify_onabort_set: notify_onabort = a_name		
      end

    set_notify_oncomplete (a_name: like notify_oncomplete)
        -- Set 'notify_oncomplete' with 'a_name'.
      do
        notify_oncomplete := a_name
      ensure
        notify_oncomplete_set: notify_oncomplete = a_name		
      end

    set_notify_oncontainercomplete (a_name: like notify_oncontainercomplete)
        -- Set 'notify_oncontainercomplete' with 'a_name'.
      do
        notify_oncontainercomplete := a_name
      ensure
        notify_oncontainercomplete_set: notify_oncontainercomplete = a_name		
      end

    set_notify_useronly (a_name: like notify_useronly)
        -- Set 'notify_useronly' with 'a_name'.
      do
        notify_useronly := a_name
      ensure
        notify_useronly_set: notify_useronly = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_WORKFLOW_IMPL_EMAIL_E_MAIL_NOTIFICATION_SERVICE_PROPERTIES%N")
        if attached from_address as l_from_address then
          Result.append ("%Nfrom_address:")
          Result.append (l_from_address.out)
          Result.append ("%N")    
        end  
        if attached host_prefix as l_host_prefix then
          Result.append ("%Nhost_prefix:")
          Result.append (l_host_prefix.out)
          Result.append ("%N")    
        end  
        if attached notify_onabort as l_notify_onabort then
          Result.append ("%Nnotify_onabort:")
          Result.append (l_notify_onabort.out)
          Result.append ("%N")    
        end  
        if attached notify_oncomplete as l_notify_oncomplete then
          Result.append ("%Nnotify_oncomplete:")
          Result.append (l_notify_oncomplete.out)
          Result.append ("%N")    
        end  
        if attached notify_oncontainercomplete as l_notify_oncontainercomplete then
          Result.append ("%Nnotify_oncontainercomplete:")
          Result.append (l_notify_oncontainercomplete.out)
          Result.append ("%N")    
        end  
        if attached notify_useronly as l_notify_useronly then
          Result.append ("%Nnotify_useronly:")
          Result.append (l_notify_useronly.out)
          Result.append ("%N")    
        end  
      end
end


