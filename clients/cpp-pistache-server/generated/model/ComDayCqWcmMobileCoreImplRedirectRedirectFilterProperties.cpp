/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties()
{
    m_Redirect_enabledIsSet = false;
    m_Redirect_stats_enabledIsSet = false;
    m_Redirect_extensionsIsSet = false;
    m_Redirect_pathsIsSet = false;
    
}

ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::~ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties()
{
}

void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Redirect_enabledIsSet)
    {
        val["redirect.enabled"] = ModelBase::toJson(m_Redirect_enabled);
    }
    if(m_Redirect_stats_enabledIsSet)
    {
        val["redirect.stats.enabled"] = ModelBase::toJson(m_Redirect_stats_enabled);
    }
    if(m_Redirect_extensionsIsSet)
    {
        val["redirect.extensions"] = ModelBase::toJson(m_Redirect_extensions);
    }
    if(m_Redirect_pathsIsSet)
    {
        val["redirect.paths"] = ModelBase::toJson(m_Redirect_paths);
    }
    

    return val;
}

void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::fromJson(nlohmann::json& val)
{
    if(val.find("redirect.enabled") != val.end())
    {
        if(!val["redirect.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["redirect.enabled"]);
            setRedirectEnabled( newItem );
        }
        
    }
    if(val.find("redirect.stats.enabled") != val.end())
    {
        if(!val["redirect.stats.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["redirect.stats.enabled"]);
            setRedirectStatsEnabled( newItem );
        }
        
    }
    if(val.find("redirect.extensions") != val.end())
    {
        if(!val["redirect.extensions"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["redirect.extensions"]);
            setRedirectExtensions( newItem );
        }
        
    }
    if(val.find("redirect.paths") != val.end())
    {
        if(!val["redirect.paths"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["redirect.paths"]);
            setRedirectPaths( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::getRedirectEnabled() const
{
    return m_Redirect_enabled;
}
void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::setRedirectEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Redirect_enabled = value;
    m_Redirect_enabledIsSet = true;
}
bool ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::redirectEnabledIsSet() const
{
    return m_Redirect_enabledIsSet;
}
void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::unsetRedirect_enabled()
{
    m_Redirect_enabledIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::getRedirectStatsEnabled() const
{
    return m_Redirect_stats_enabled;
}
void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::setRedirectStatsEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Redirect_stats_enabled = value;
    m_Redirect_stats_enabledIsSet = true;
}
bool ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::redirectStatsEnabledIsSet() const
{
    return m_Redirect_stats_enabledIsSet;
}
void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::unsetRedirect_stats_enabled()
{
    m_Redirect_stats_enabledIsSet = false;
}
ConfigNodePropertyArray ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::getRedirectExtensions() const
{
    return m_Redirect_extensions;
}
void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::setRedirectExtensions(ConfigNodePropertyArray const& value)
{
    m_Redirect_extensions = value;
    m_Redirect_extensionsIsSet = true;
}
bool ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::redirectExtensionsIsSet() const
{
    return m_Redirect_extensionsIsSet;
}
void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::unsetRedirect_extensions()
{
    m_Redirect_extensionsIsSet = false;
}
ConfigNodePropertyArray ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::getRedirectPaths() const
{
    return m_Redirect_paths;
}
void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::setRedirectPaths(ConfigNodePropertyArray const& value)
{
    m_Redirect_paths = value;
    m_Redirect_pathsIsSet = true;
}
bool ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::redirectPathsIsSet() const
{
    return m_Redirect_pathsIsSet;
}
void ComDayCqWcmMobileCoreImplRedirectRedirectFilterProperties::unsetRedirect_paths()
{
    m_Redirect_pathsIsSet = false;
}

}
}
}
}

