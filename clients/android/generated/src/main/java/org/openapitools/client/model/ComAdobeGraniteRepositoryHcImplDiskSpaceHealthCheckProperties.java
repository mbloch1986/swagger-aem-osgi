/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties {
  
  @SerializedName("hc.tags")
  private ConfigNodePropertyArray hcTags = null;
  @SerializedName("disk.space.warn.threshold")
  private ConfigNodePropertyInteger diskSpaceWarnThreshold = null;
  @SerializedName("disk.space.error.threshold")
  private ConfigNodePropertyInteger diskSpaceErrorThreshold = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getHcTags() {
    return hcTags;
  }
  public void setHcTags(ConfigNodePropertyArray hcTags) {
    this.hcTags = hcTags;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getDiskSpaceWarnThreshold() {
    return diskSpaceWarnThreshold;
  }
  public void setDiskSpaceWarnThreshold(ConfigNodePropertyInteger diskSpaceWarnThreshold) {
    this.diskSpaceWarnThreshold = diskSpaceWarnThreshold;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getDiskSpaceErrorThreshold() {
    return diskSpaceErrorThreshold;
  }
  public void setDiskSpaceErrorThreshold(ConfigNodePropertyInteger diskSpaceErrorThreshold) {
    this.diskSpaceErrorThreshold = diskSpaceErrorThreshold;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties = (ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties) o;
    return (this.hcTags == null ? comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties.hcTags == null : this.hcTags.equals(comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties.hcTags)) &&
        (this.diskSpaceWarnThreshold == null ? comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties.diskSpaceWarnThreshold == null : this.diskSpaceWarnThreshold.equals(comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties.diskSpaceWarnThreshold)) &&
        (this.diskSpaceErrorThreshold == null ? comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties.diskSpaceErrorThreshold == null : this.diskSpaceErrorThreshold.equals(comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties.diskSpaceErrorThreshold));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.hcTags == null ? 0: this.hcTags.hashCode());
    result = 31 * result + (this.diskSpaceWarnThreshold == null ? 0: this.diskSpaceWarnThreshold.hashCode());
    result = 31 * result + (this.diskSpaceErrorThreshold == null ? 0: this.diskSpaceErrorThreshold.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties {\n");
    
    sb.append("  hcTags: ").append(hcTags).append("\n");
    sb.append("  diskSpaceWarnThreshold: ").append(diskSpaceWarnThreshold).append("\n");
    sb.append("  diskSpaceErrorThreshold: ").append(diskSpaceErrorThreshold).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
