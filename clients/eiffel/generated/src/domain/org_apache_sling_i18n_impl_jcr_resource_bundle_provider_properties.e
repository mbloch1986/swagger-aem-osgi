note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_SLING_I18N_IMPL_JCR_RESOURCE_BUNDLE_PROVIDER_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    locale_default: detachable CONFIG_NODE_PROPERTY_STRING 
      
    preload_bundles: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    invalidation_delay: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_locale_default (a_name: like locale_default)
        -- Set 'locale_default' with 'a_name'.
      do
        locale_default := a_name
      ensure
        locale_default_set: locale_default = a_name		
      end

    set_preload_bundles (a_name: like preload_bundles)
        -- Set 'preload_bundles' with 'a_name'.
      do
        preload_bundles := a_name
      ensure
        preload_bundles_set: preload_bundles = a_name		
      end

    set_invalidation_delay (a_name: like invalidation_delay)
        -- Set 'invalidation_delay' with 'a_name'.
      do
        invalidation_delay := a_name
      ensure
        invalidation_delay_set: invalidation_delay = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_SLING_I18N_IMPL_JCR_RESOURCE_BUNDLE_PROVIDER_PROPERTIES%N")
        if attached locale_default as l_locale_default then
          Result.append ("%Nlocale_default:")
          Result.append (l_locale_default.out)
          Result.append ("%N")    
        end  
        if attached preload_bundles as l_preload_bundles then
          Result.append ("%Npreload_bundles:")
          Result.append (l_preload_bundles.out)
          Result.append ("%N")    
        end  
        if attached invalidation_delay as l_invalidation_delay then
          Result.append ("%Ninvalidation_delay:")
          Result.append (l_invalidation_delay.out)
          Result.append ("%N")    
        end  
      end
end


