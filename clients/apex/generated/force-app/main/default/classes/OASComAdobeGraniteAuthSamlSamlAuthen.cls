/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComAdobeGraniteAuthSamlSamlAuthen
 */
public class OASComAdobeGraniteAuthSamlSamlAuthen implements OAS.MappedProperties {
    /**
     * Get path
     * @return path
     */
    public OASConfigNodePropertyArray path { get; set; }

    /**
     * Get serviceRanking
     * @return serviceRanking
     */
    public OASConfigNodePropertyInteger serviceRanking { get; set; }

    /**
     * Get idpUrl
     * @return idpUrl
     */
    public OASConfigNodePropertyString idpUrl { get; set; }

    /**
     * Get idpCertAlias
     * @return idpCertAlias
     */
    public OASConfigNodePropertyString idpCertAlias { get; set; }

    /**
     * Get idpHttpRedirect
     * @return idpHttpRedirect
     */
    public OASConfigNodePropertyBoolean idpHttpRedirect { get; set; }

    /**
     * Get serviceProviderEntityId
     * @return serviceProviderEntityId
     */
    public OASConfigNodePropertyString serviceProviderEntityId { get; set; }

    /**
     * Get assertionConsumerServiceURL
     * @return assertionConsumerServiceURL
     */
    public OASConfigNodePropertyString assertionConsumerServiceURL { get; set; }

    /**
     * Get spPrivateKeyAlias
     * @return spPrivateKeyAlias
     */
    public OASConfigNodePropertyString spPrivateKeyAlias { get; set; }

    /**
     * Get keyStorePassword
     * @return keyStorePassword
     */
    public OASConfigNodePropertyString keyStorePassword { get; set; }

    /**
     * Get defaultRedirectUrl
     * @return defaultRedirectUrl
     */
    public OASConfigNodePropertyString defaultRedirectUrl { get; set; }

    /**
     * Get userIDAttribute
     * @return userIDAttribute
     */
    public OASConfigNodePropertyString userIDAttribute { get; set; }

    /**
     * Get useEncryption
     * @return useEncryption
     */
    public OASConfigNodePropertyBoolean useEncryption { get; set; }

    /**
     * Get createUser
     * @return createUser
     */
    public OASConfigNodePropertyBoolean createUser { get; set; }

    /**
     * Get userIntermediatePath
     * @return userIntermediatePath
     */
    public OASConfigNodePropertyString userIntermediatePath { get; set; }

    /**
     * Get addGroupMemberships
     * @return addGroupMemberships
     */
    public OASConfigNodePropertyBoolean addGroupMemberships { get; set; }

    /**
     * Get groupMembershipAttribute
     * @return groupMembershipAttribute
     */
    public OASConfigNodePropertyString groupMembershipAttribute { get; set; }

    /**
     * Get defaultGroups
     * @return defaultGroups
     */
    public OASConfigNodePropertyArray defaultGroups { get; set; }

    /**
     * Get nameIdFormat
     * @return nameIdFormat
     */
    public OASConfigNodePropertyString nameIdFormat { get; set; }

    /**
     * Get synchronizeAttributes
     * @return synchronizeAttributes
     */
    public OASConfigNodePropertyArray synchronizeAttributes { get; set; }

    /**
     * Get handleLogout
     * @return handleLogout
     */
    public OASConfigNodePropertyBoolean handleLogout { get; set; }

    /**
     * Get logoutUrl
     * @return logoutUrl
     */
    public OASConfigNodePropertyString logoutUrl { get; set; }

    /**
     * Get clockTolerance
     * @return clockTolerance
     */
    public OASConfigNodePropertyInteger clockTolerance { get; set; }

    /**
     * Get digestMethod
     * @return digestMethod
     */
    public OASConfigNodePropertyString digestMethod { get; set; }

    /**
     * Get signatureMethod
     * @return signatureMethod
     */
    public OASConfigNodePropertyString signatureMethod { get; set; }

    /**
     * Get identitySyncType
     * @return identitySyncType
     */
    public OASConfigNodePropertyDropDown identitySyncType { get; set; }

    /**
     * Get idpIdentifier
     * @return idpIdentifier
     */
    public OASConfigNodePropertyString idpIdentifier { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'service.ranking' => 'serviceRanking'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComAdobeGraniteAuthSamlSamlAuthen getExample() {
        OASComAdobeGraniteAuthSamlSamlAuthen comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties = new OASComAdobeGraniteAuthSamlSamlAuthen();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.path = OASConfigNodePropertyArray.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.serviceRanking = OASConfigNodePropertyInteger.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.idpUrl = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.idpCertAlias = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.idpHttpRedirect = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.serviceProviderEntityId = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.assertionConsumerServiceURL = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.spPrivateKeyAlias = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.keyStorePassword = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.defaultRedirectUrl = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.userIDAttribute = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.useEncryption = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.createUser = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.userIntermediatePath = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.addGroupMemberships = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.groupMembershipAttribute = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.defaultGroups = OASConfigNodePropertyArray.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.nameIdFormat = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.synchronizeAttributes = OASConfigNodePropertyArray.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.handleLogout = OASConfigNodePropertyBoolean.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.logoutUrl = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.clockTolerance = OASConfigNodePropertyInteger.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.digestMethod = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.signatureMethod = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.identitySyncType = OASConfigNodePropertyDropDown.getExample();
          comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.idpIdentifier = OASConfigNodePropertyString.getExample();
        return comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComAdobeGraniteAuthSamlSamlAuthen) {           
            OASComAdobeGraniteAuthSamlSamlAuthen comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties = (OASComAdobeGraniteAuthSamlSamlAuthen) obj;
            return this.path == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.path
                && this.serviceRanking == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.serviceRanking
                && this.idpUrl == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.idpUrl
                && this.idpCertAlias == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.idpCertAlias
                && this.idpHttpRedirect == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.idpHttpRedirect
                && this.serviceProviderEntityId == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.serviceProviderEntityId
                && this.assertionConsumerServiceURL == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.assertionConsumerServiceURL
                && this.spPrivateKeyAlias == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.spPrivateKeyAlias
                && this.keyStorePassword == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.keyStorePassword
                && this.defaultRedirectUrl == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.defaultRedirectUrl
                && this.userIDAttribute == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.userIDAttribute
                && this.useEncryption == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.useEncryption
                && this.createUser == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.createUser
                && this.userIntermediatePath == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.userIntermediatePath
                && this.addGroupMemberships == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.addGroupMemberships
                && this.groupMembershipAttribute == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.groupMembershipAttribute
                && this.defaultGroups == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.defaultGroups
                && this.nameIdFormat == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.nameIdFormat
                && this.synchronizeAttributes == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.synchronizeAttributes
                && this.handleLogout == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.handleLogout
                && this.logoutUrl == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.logoutUrl
                && this.clockTolerance == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.clockTolerance
                && this.digestMethod == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.digestMethod
                && this.signatureMethod == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.signatureMethod
                && this.identitySyncType == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.identitySyncType
                && this.idpIdentifier == comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties.idpIdentifier;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (path == null ? 0 : System.hashCode(path));
        hashCode = (17 * hashCode) + (serviceRanking == null ? 0 : System.hashCode(serviceRanking));
        hashCode = (17 * hashCode) + (idpUrl == null ? 0 : System.hashCode(idpUrl));
        hashCode = (17 * hashCode) + (idpCertAlias == null ? 0 : System.hashCode(idpCertAlias));
        hashCode = (17 * hashCode) + (idpHttpRedirect == null ? 0 : System.hashCode(idpHttpRedirect));
        hashCode = (17 * hashCode) + (serviceProviderEntityId == null ? 0 : System.hashCode(serviceProviderEntityId));
        hashCode = (17 * hashCode) + (assertionConsumerServiceURL == null ? 0 : System.hashCode(assertionConsumerServiceURL));
        hashCode = (17 * hashCode) + (spPrivateKeyAlias == null ? 0 : System.hashCode(spPrivateKeyAlias));
        hashCode = (17 * hashCode) + (keyStorePassword == null ? 0 : System.hashCode(keyStorePassword));
        hashCode = (17 * hashCode) + (defaultRedirectUrl == null ? 0 : System.hashCode(defaultRedirectUrl));
        hashCode = (17 * hashCode) + (userIDAttribute == null ? 0 : System.hashCode(userIDAttribute));
        hashCode = (17 * hashCode) + (useEncryption == null ? 0 : System.hashCode(useEncryption));
        hashCode = (17 * hashCode) + (createUser == null ? 0 : System.hashCode(createUser));
        hashCode = (17 * hashCode) + (userIntermediatePath == null ? 0 : System.hashCode(userIntermediatePath));
        hashCode = (17 * hashCode) + (addGroupMemberships == null ? 0 : System.hashCode(addGroupMemberships));
        hashCode = (17 * hashCode) + (groupMembershipAttribute == null ? 0 : System.hashCode(groupMembershipAttribute));
        hashCode = (17 * hashCode) + (defaultGroups == null ? 0 : System.hashCode(defaultGroups));
        hashCode = (17 * hashCode) + (nameIdFormat == null ? 0 : System.hashCode(nameIdFormat));
        hashCode = (17 * hashCode) + (synchronizeAttributes == null ? 0 : System.hashCode(synchronizeAttributes));
        hashCode = (17 * hashCode) + (handleLogout == null ? 0 : System.hashCode(handleLogout));
        hashCode = (17 * hashCode) + (logoutUrl == null ? 0 : System.hashCode(logoutUrl));
        hashCode = (17 * hashCode) + (clockTolerance == null ? 0 : System.hashCode(clockTolerance));
        hashCode = (17 * hashCode) + (digestMethod == null ? 0 : System.hashCode(digestMethod));
        hashCode = (17 * hashCode) + (signatureMethod == null ? 0 : System.hashCode(signatureMethod));
        hashCode = (17 * hashCode) + (identitySyncType == null ? 0 : System.hashCode(identitySyncType));
        hashCode = (17 * hashCode) + (idpIdentifier == null ? 0 : System.hashCode(idpIdentifier));
        return hashCode;
    }
}

