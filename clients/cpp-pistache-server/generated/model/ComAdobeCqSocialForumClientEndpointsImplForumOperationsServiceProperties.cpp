/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties()
{
    m_FieldWhitelistIsSet = false;
    m_AttachmentTypeBlacklistIsSet = false;
    
}

ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::~ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties()
{
}

void ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_FieldWhitelistIsSet)
    {
        val["fieldWhitelist"] = ModelBase::toJson(m_FieldWhitelist);
    }
    if(m_AttachmentTypeBlacklistIsSet)
    {
        val["attachmentTypeBlacklist"] = ModelBase::toJson(m_AttachmentTypeBlacklist);
    }
    

    return val;
}

void ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::fromJson(nlohmann::json& val)
{
    if(val.find("fieldWhitelist") != val.end())
    {
        if(!val["fieldWhitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["fieldWhitelist"]);
            setFieldWhitelist( newItem );
        }
        
    }
    if(val.find("attachmentTypeBlacklist") != val.end())
    {
        if(!val["attachmentTypeBlacklist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["attachmentTypeBlacklist"]);
            setAttachmentTypeBlacklist( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::getFieldWhitelist() const
{
    return m_FieldWhitelist;
}
void ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::setFieldWhitelist(ConfigNodePropertyArray const& value)
{
    m_FieldWhitelist = value;
    m_FieldWhitelistIsSet = true;
}
bool ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::fieldWhitelistIsSet() const
{
    return m_FieldWhitelistIsSet;
}
void ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::unsetFieldWhitelist()
{
    m_FieldWhitelistIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::getAttachmentTypeBlacklist() const
{
    return m_AttachmentTypeBlacklist;
}
void ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::setAttachmentTypeBlacklist(ConfigNodePropertyArray const& value)
{
    m_AttachmentTypeBlacklist = value;
    m_AttachmentTypeBlacklistIsSet = true;
}
bool ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::attachmentTypeBlacklistIsSet() const
{
    return m_AttachmentTypeBlacklistIsSet;
}
void ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties::unsetAttachmentTypeBlacklist()
{
    m_AttachmentTypeBlacklistIsSet = false;
}

}
}
}
}

