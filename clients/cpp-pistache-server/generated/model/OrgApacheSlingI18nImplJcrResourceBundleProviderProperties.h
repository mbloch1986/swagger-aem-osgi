/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingI18nImplJcrResourceBundleProviderProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingI18nImplJcrResourceBundleProviderProperties_H_
#define OrgApacheSlingI18nImplJcrResourceBundleProviderProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingI18nImplJcrResourceBundleProviderProperties
    : public ModelBase
{
public:
    OrgApacheSlingI18nImplJcrResourceBundleProviderProperties();
    virtual ~OrgApacheSlingI18nImplJcrResourceBundleProviderProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingI18nImplJcrResourceBundleProviderProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getLocaleDefault() const;
    void setLocaleDefault(ConfigNodePropertyString const& value);
    bool localeDefaultIsSet() const;
    void unsetLocale_default();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getPreloadBundles() const;
    void setPreloadBundles(ConfigNodePropertyBoolean const& value);
    bool preloadBundlesIsSet() const;
    void unsetPreload_bundles();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getInvalidationDelay() const;
    void setInvalidationDelay(ConfigNodePropertyInteger const& value);
    bool invalidationDelayIsSet() const;
    void unsetInvalidation_delay();

protected:
    ConfigNodePropertyString m_Locale_default;
    bool m_Locale_defaultIsSet;
    ConfigNodePropertyBoolean m_Preload_bundles;
    bool m_Preload_bundlesIsSet;
    ConfigNodePropertyInteger m_Invalidation_delay;
    bool m_Invalidation_delayIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingI18nImplJcrResourceBundleProviderProperties_H_ */
