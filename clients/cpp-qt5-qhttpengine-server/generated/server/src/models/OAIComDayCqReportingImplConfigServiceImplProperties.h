/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqReportingImplConfigServiceImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqReportingImplConfigServiceImplProperties_H
#define OAIComDayCqReportingImplConfigServiceImplProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqReportingImplConfigServiceImplProperties: public OAIObject {
public:
    OAIComDayCqReportingImplConfigServiceImplProperties();
    OAIComDayCqReportingImplConfigServiceImplProperties(QString json);
    ~OAIComDayCqReportingImplConfigServiceImplProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getRepconfTimezone() const;
    void setRepconfTimezone(const OAIConfigNodePropertyString &repconf_timezone);

    OAIConfigNodePropertyString getRepconfLocale() const;
    void setRepconfLocale(const OAIConfigNodePropertyString &repconf_locale);

    OAIConfigNodePropertyString getRepconfSnapshots() const;
    void setRepconfSnapshots(const OAIConfigNodePropertyString &repconf_snapshots);

    OAIConfigNodePropertyString getRepconfRepdir() const;
    void setRepconfRepdir(const OAIConfigNodePropertyString &repconf_repdir);

    OAIConfigNodePropertyInteger getRepconfHourofday() const;
    void setRepconfHourofday(const OAIConfigNodePropertyInteger &repconf_hourofday);

    OAIConfigNodePropertyInteger getRepconfMinofhour() const;
    void setRepconfMinofhour(const OAIConfigNodePropertyInteger &repconf_minofhour);

    OAIConfigNodePropertyInteger getRepconfMaxrows() const;
    void setRepconfMaxrows(const OAIConfigNodePropertyInteger &repconf_maxrows);

    OAIConfigNodePropertyBoolean getRepconfFakedata() const;
    void setRepconfFakedata(const OAIConfigNodePropertyBoolean &repconf_fakedata);

    OAIConfigNodePropertyString getRepconfSnapshotuser() const;
    void setRepconfSnapshotuser(const OAIConfigNodePropertyString &repconf_snapshotuser);

    OAIConfigNodePropertyBoolean getRepconfEnforcesnapshotuser() const;
    void setRepconfEnforcesnapshotuser(const OAIConfigNodePropertyBoolean &repconf_enforcesnapshotuser);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString repconf_timezone;
    bool m_repconf_timezone_isSet;

    OAIConfigNodePropertyString repconf_locale;
    bool m_repconf_locale_isSet;

    OAIConfigNodePropertyString repconf_snapshots;
    bool m_repconf_snapshots_isSet;

    OAIConfigNodePropertyString repconf_repdir;
    bool m_repconf_repdir_isSet;

    OAIConfigNodePropertyInteger repconf_hourofday;
    bool m_repconf_hourofday_isSet;

    OAIConfigNodePropertyInteger repconf_minofhour;
    bool m_repconf_minofhour_isSet;

    OAIConfigNodePropertyInteger repconf_maxrows;
    bool m_repconf_maxrows_isSet;

    OAIConfigNodePropertyBoolean repconf_fakedata;
    bool m_repconf_fakedata_isSet;

    OAIConfigNodePropertyString repconf_snapshotuser;
    bool m_repconf_snapshotuser_isSet;

    OAIConfigNodePropertyBoolean repconf_enforcesnapshotuser;
    bool m_repconf_enforcesnapshotuser_isSet;

};

}

#endif // OAIComDayCqReportingImplConfigServiceImplProperties_H
