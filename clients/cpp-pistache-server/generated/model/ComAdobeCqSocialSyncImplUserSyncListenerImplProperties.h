/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.h
 *
 * 
 */

#ifndef ComAdobeCqSocialSyncImplUserSyncListenerImplProperties_H_
#define ComAdobeCqSocialSyncImplUserSyncListenerImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqSocialSyncImplUserSyncListenerImplProperties
    : public ModelBase
{
public:
    ComAdobeCqSocialSyncImplUserSyncListenerImplProperties();
    virtual ~ComAdobeCqSocialSyncImplUserSyncListenerImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeCqSocialSyncImplUserSyncListenerImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getNodetypes() const;
    void setNodetypes(ConfigNodePropertyArray const& value);
    bool nodetypesIsSet() const;
    void unsetNodetypes();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getIgnorableprops() const;
    void setIgnorableprops(ConfigNodePropertyArray const& value);
    bool ignorablepropsIsSet() const;
    void unsetIgnorableprops();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getIgnorablenodes() const;
    void setIgnorablenodes(ConfigNodePropertyArray const& value);
    bool ignorablenodesIsSet() const;
    void unsetIgnorablenodes();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnabled() const;
    void setEnabled(ConfigNodePropertyBoolean const& value);
    bool enabledIsSet() const;
    void unsetEnabled();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getDistfolders() const;
    void setDistfolders(ConfigNodePropertyArray const& value);
    bool distfoldersIsSet() const;
    void unsetDistfolders();

protected:
    ConfigNodePropertyArray m_Nodetypes;
    bool m_NodetypesIsSet;
    ConfigNodePropertyArray m_Ignorableprops;
    bool m_IgnorablepropsIsSet;
    ConfigNodePropertyArray m_Ignorablenodes;
    bool m_IgnorablenodesIsSet;
    ConfigNodePropertyBoolean m_Enabled;
    bool m_EnabledIsSet;
    ConfigNodePropertyArray m_Distfolders;
    bool m_DistfoldersIsSet;
};

}
}
}
}

#endif /* ComAdobeCqSocialSyncImplUserSyncListenerImplProperties_H_ */
