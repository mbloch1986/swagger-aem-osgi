/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingCommonsMetricsInternalLogReporterProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingCommonsMetricsInternalLogReporterProperties_H_
#define OrgApacheSlingCommonsMetricsInternalLogReporterProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingCommonsMetricsInternalLogReporterProperties
    : public ModelBase
{
public:
    OrgApacheSlingCommonsMetricsInternalLogReporterProperties();
    virtual ~OrgApacheSlingCommonsMetricsInternalLogReporterProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingCommonsMetricsInternalLogReporterProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getPeriod() const;
    void setPeriod(ConfigNodePropertyInteger const& value);
    bool periodIsSet() const;
    void unsetPeriod();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getTimeUnit() const;
    void setTimeUnit(ConfigNodePropertyDropDown const& value);
    bool timeUnitIsSet() const;
    void unsetTimeUnit();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getLevel() const;
    void setLevel(ConfigNodePropertyDropDown const& value);
    bool levelIsSet() const;
    void unsetLevel();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getLoggerName() const;
    void setLoggerName(ConfigNodePropertyString const& value);
    bool loggerNameIsSet() const;
    void unsetLoggerName();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getPrefix() const;
    void setPrefix(ConfigNodePropertyString const& value);
    bool prefixIsSet() const;
    void unsetPrefix();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getPattern() const;
    void setPattern(ConfigNodePropertyString const& value);
    bool patternIsSet() const;
    void unsetPattern();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getRegistryName() const;
    void setRegistryName(ConfigNodePropertyString const& value);
    bool registryNameIsSet() const;
    void unsetRegistryName();

protected:
    ConfigNodePropertyInteger m_Period;
    bool m_PeriodIsSet;
    ConfigNodePropertyDropDown m_TimeUnit;
    bool m_TimeUnitIsSet;
    ConfigNodePropertyDropDown m_Level;
    bool m_LevelIsSet;
    ConfigNodePropertyString m_LoggerName;
    bool m_LoggerNameIsSet;
    ConfigNodePropertyString m_Prefix;
    bool m_PrefixIsSet;
    ConfigNodePropertyString m_Pattern;
    bool m_PatternIsSet;
    ConfigNodePropertyString m_RegistryName;
    bool m_RegistryNameIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingCommonsMetricsInternalLogReporterProperties_H_ */
