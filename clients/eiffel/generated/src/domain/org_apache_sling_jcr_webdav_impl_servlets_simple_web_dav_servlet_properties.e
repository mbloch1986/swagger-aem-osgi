note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_SLING_JCR_WEBDAV_IMPL_SERVLETS_SIMPLE_WEB_DAV_SERVLET_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    dav_root: detachable CONFIG_NODE_PROPERTY_STRING 
      
    dav_create_absolute_uri: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    dav_realm: detachable CONFIG_NODE_PROPERTY_STRING 
      
    collection_types: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    filter_prefixes: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    filter_types: detachable CONFIG_NODE_PROPERTY_STRING 
      
    filter_uris: detachable CONFIG_NODE_PROPERTY_STRING 
      
    type_collections: detachable CONFIG_NODE_PROPERTY_STRING 
      
    type_noncollections: detachable CONFIG_NODE_PROPERTY_STRING 
      
    type_content: detachable CONFIG_NODE_PROPERTY_STRING 
      

feature -- Change Element  
 
    set_dav_root (a_name: like dav_root)
        -- Set 'dav_root' with 'a_name'.
      do
        dav_root := a_name
      ensure
        dav_root_set: dav_root = a_name		
      end

    set_dav_create_absolute_uri (a_name: like dav_create_absolute_uri)
        -- Set 'dav_create_absolute_uri' with 'a_name'.
      do
        dav_create_absolute_uri := a_name
      ensure
        dav_create_absolute_uri_set: dav_create_absolute_uri = a_name		
      end

    set_dav_realm (a_name: like dav_realm)
        -- Set 'dav_realm' with 'a_name'.
      do
        dav_realm := a_name
      ensure
        dav_realm_set: dav_realm = a_name		
      end

    set_collection_types (a_name: like collection_types)
        -- Set 'collection_types' with 'a_name'.
      do
        collection_types := a_name
      ensure
        collection_types_set: collection_types = a_name		
      end

    set_filter_prefixes (a_name: like filter_prefixes)
        -- Set 'filter_prefixes' with 'a_name'.
      do
        filter_prefixes := a_name
      ensure
        filter_prefixes_set: filter_prefixes = a_name		
      end

    set_filter_types (a_name: like filter_types)
        -- Set 'filter_types' with 'a_name'.
      do
        filter_types := a_name
      ensure
        filter_types_set: filter_types = a_name		
      end

    set_filter_uris (a_name: like filter_uris)
        -- Set 'filter_uris' with 'a_name'.
      do
        filter_uris := a_name
      ensure
        filter_uris_set: filter_uris = a_name		
      end

    set_type_collections (a_name: like type_collections)
        -- Set 'type_collections' with 'a_name'.
      do
        type_collections := a_name
      ensure
        type_collections_set: type_collections = a_name		
      end

    set_type_noncollections (a_name: like type_noncollections)
        -- Set 'type_noncollections' with 'a_name'.
      do
        type_noncollections := a_name
      ensure
        type_noncollections_set: type_noncollections = a_name		
      end

    set_type_content (a_name: like type_content)
        -- Set 'type_content' with 'a_name'.
      do
        type_content := a_name
      ensure
        type_content_set: type_content = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_SLING_JCR_WEBDAV_IMPL_SERVLETS_SIMPLE_WEB_DAV_SERVLET_PROPERTIES%N")
        if attached dav_root as l_dav_root then
          Result.append ("%Ndav_root:")
          Result.append (l_dav_root.out)
          Result.append ("%N")    
        end  
        if attached dav_create_absolute_uri as l_dav_create_absolute_uri then
          Result.append ("%Ndav_create_absolute_uri:")
          Result.append (l_dav_create_absolute_uri.out)
          Result.append ("%N")    
        end  
        if attached dav_realm as l_dav_realm then
          Result.append ("%Ndav_realm:")
          Result.append (l_dav_realm.out)
          Result.append ("%N")    
        end  
        if attached collection_types as l_collection_types then
          Result.append ("%Ncollection_types:")
          Result.append (l_collection_types.out)
          Result.append ("%N")    
        end  
        if attached filter_prefixes as l_filter_prefixes then
          Result.append ("%Nfilter_prefixes:")
          Result.append (l_filter_prefixes.out)
          Result.append ("%N")    
        end  
        if attached filter_types as l_filter_types then
          Result.append ("%Nfilter_types:")
          Result.append (l_filter_types.out)
          Result.append ("%N")    
        end  
        if attached filter_uris as l_filter_uris then
          Result.append ("%Nfilter_uris:")
          Result.append (l_filter_uris.out)
          Result.append ("%N")    
        end  
        if attached type_collections as l_type_collections then
          Result.append ("%Ntype_collections:")
          Result.append (l_type_collections.out)
          Result.append ("%N")    
        end  
        if attached type_noncollections as l_type_noncollections then
          Result.append ("%Ntype_noncollections:")
          Result.append (l_type_noncollections.out)
          Result.append ("%N")    
        end  
        if attached type_content as l_type_content then
          Result.append ("%Ntype_content:")
          Result.append (l_type_content.out)
          Result.append ("%N")    
        end  
      end
end


