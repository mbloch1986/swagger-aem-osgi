/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties.h
 *
 * 
 */

#ifndef OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties_H_
#define OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties_H_



#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties
{
public:
    OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties();
    virtual ~OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getManagerRoot() const;
    void setManagerRoot(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getHttpServiceFilter() const;
    void setHttpServiceFilter(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDefaultRender() const;
    void setDefaultRender(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getRealm() const;
    void setRealm(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getUsername() const;
    void setUsername(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getPassword() const;
    void setPassword(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getCategory() const;
    void setCategory(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getLocale() const;
    void setLocale(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown> getLoglevel() const;
    void setLoglevel(std::shared_ptr<ConfigNodePropertyDropDown> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown> getPlugins() const;
    void setPlugins(std::shared_ptr<ConfigNodePropertyDropDown> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Manager_root;
    std::shared_ptr<ConfigNodePropertyString> m_Http_service_filter;
    std::shared_ptr<ConfigNodePropertyString> m_Default_render;
    std::shared_ptr<ConfigNodePropertyString> m_Realm;
    std::shared_ptr<ConfigNodePropertyString> m_Username;
    std::shared_ptr<ConfigNodePropertyString> m_Password;
    std::shared_ptr<ConfigNodePropertyString> m_Category;
    std::shared_ptr<ConfigNodePropertyString> m_Locale;
    std::shared_ptr<ConfigNodePropertyDropDown> m_Loglevel;
    std::shared_ptr<ConfigNodePropertyDropDown> m_Plugins;
};

}
}
}
}

#endif /* OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties_H_ */
