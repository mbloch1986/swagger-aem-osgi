/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties {
  #[serde(rename = "default.attachment.type.blacklist")]
  default_attachment_type_blacklist: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "baseline.attachment.type.blacklist")]
  baseline_attachment_type_blacklist: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties {
  pub fn new() -> ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties {
    ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties {
      default_attachment_type_blacklist: None,
      baseline_attachment_type_blacklist: None
    }
  }

  pub fn set_default_attachment_type_blacklist(&mut self, default_attachment_type_blacklist: ::models::ConfigNodePropertyArray) {
    self.default_attachment_type_blacklist = Some(default_attachment_type_blacklist);
  }

  pub fn with_default_attachment_type_blacklist(mut self, default_attachment_type_blacklist: ::models::ConfigNodePropertyArray) -> ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties {
    self.default_attachment_type_blacklist = Some(default_attachment_type_blacklist);
    self
  }

  pub fn default_attachment_type_blacklist(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.default_attachment_type_blacklist.as_ref()
  }

  pub fn reset_default_attachment_type_blacklist(&mut self) {
    self.default_attachment_type_blacklist = None;
  }

  pub fn set_baseline_attachment_type_blacklist(&mut self, baseline_attachment_type_blacklist: ::models::ConfigNodePropertyArray) {
    self.baseline_attachment_type_blacklist = Some(baseline_attachment_type_blacklist);
  }

  pub fn with_baseline_attachment_type_blacklist(mut self, baseline_attachment_type_blacklist: ::models::ConfigNodePropertyArray) -> ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliProperties {
    self.baseline_attachment_type_blacklist = Some(baseline_attachment_type_blacklist);
    self
  }

  pub fn baseline_attachment_type_blacklist(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.baseline_attachment_type_blacklist.as_ref()
  }

  pub fn reset_baseline_attachment_type_blacklist(&mut self) {
    self.baseline_attachment_type_blacklist = None;
  }

}



