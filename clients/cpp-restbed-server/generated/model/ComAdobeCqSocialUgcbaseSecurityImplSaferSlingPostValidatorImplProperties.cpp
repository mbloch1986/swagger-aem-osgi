/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties()
{
    
}

ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::~ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties()
{
}

std::string ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyArray> ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getParameterWhitelist() const
{
    return m_Parameter_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setParameterWhitelist(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Parameter_whitelist = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getParameterWhitelistPrefixes() const
{
    return m_Parameter_whitelist_prefixes;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setParameterWhitelistPrefixes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Parameter_whitelist_prefixes = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getBinaryParameterWhitelist() const
{
    return m_Binary_parameter_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setBinaryParameterWhitelist(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Binary_parameter_whitelist = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getModifierWhitelist() const
{
    return m_Modifier_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setModifierWhitelist(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Modifier_whitelist = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getOperationWhitelist() const
{
    return m_Operation_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setOperationWhitelist(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Operation_whitelist = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getOperationWhitelistPrefixes() const
{
    return m_Operation_whitelist_prefixes;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setOperationWhitelistPrefixes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Operation_whitelist_prefixes = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getTypehintWhitelist() const
{
    return m_Typehint_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setTypehintWhitelist(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Typehint_whitelist = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getResourcetypeWhitelist() const
{
    return m_Resourcetype_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setResourcetypeWhitelist(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Resourcetype_whitelist = value;
}

}
}
}
}

