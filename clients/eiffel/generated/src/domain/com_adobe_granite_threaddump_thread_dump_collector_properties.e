note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_ADOBE_GRANITE_THREADDUMP_THREAD_DUMP_COLLECTOR_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    scheduler_period: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    scheduler_run_on: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    granite_threaddump_enabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    granite_threaddump_dumps_per_file: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    granite_threaddump_enable_gzip_compression: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    granite_threaddump_enable_directories_compression: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    granite_threaddump_enable_jstack: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    granite_threaddump_max_backup_days: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    granite_threaddump_backup_clean_trigger: detachable CONFIG_NODE_PROPERTY_STRING 
      

feature -- Change Element  
 
    set_scheduler_period (a_name: like scheduler_period)
        -- Set 'scheduler_period' with 'a_name'.
      do
        scheduler_period := a_name
      ensure
        scheduler_period_set: scheduler_period = a_name		
      end

    set_scheduler_run_on (a_name: like scheduler_run_on)
        -- Set 'scheduler_run_on' with 'a_name'.
      do
        scheduler_run_on := a_name
      ensure
        scheduler_run_on_set: scheduler_run_on = a_name		
      end

    set_granite_threaddump_enabled (a_name: like granite_threaddump_enabled)
        -- Set 'granite_threaddump_enabled' with 'a_name'.
      do
        granite_threaddump_enabled := a_name
      ensure
        granite_threaddump_enabled_set: granite_threaddump_enabled = a_name		
      end

    set_granite_threaddump_dumps_per_file (a_name: like granite_threaddump_dumps_per_file)
        -- Set 'granite_threaddump_dumps_per_file' with 'a_name'.
      do
        granite_threaddump_dumps_per_file := a_name
      ensure
        granite_threaddump_dumps_per_file_set: granite_threaddump_dumps_per_file = a_name		
      end

    set_granite_threaddump_enable_gzip_compression (a_name: like granite_threaddump_enable_gzip_compression)
        -- Set 'granite_threaddump_enable_gzip_compression' with 'a_name'.
      do
        granite_threaddump_enable_gzip_compression := a_name
      ensure
        granite_threaddump_enable_gzip_compression_set: granite_threaddump_enable_gzip_compression = a_name		
      end

    set_granite_threaddump_enable_directories_compression (a_name: like granite_threaddump_enable_directories_compression)
        -- Set 'granite_threaddump_enable_directories_compression' with 'a_name'.
      do
        granite_threaddump_enable_directories_compression := a_name
      ensure
        granite_threaddump_enable_directories_compression_set: granite_threaddump_enable_directories_compression = a_name		
      end

    set_granite_threaddump_enable_jstack (a_name: like granite_threaddump_enable_jstack)
        -- Set 'granite_threaddump_enable_jstack' with 'a_name'.
      do
        granite_threaddump_enable_jstack := a_name
      ensure
        granite_threaddump_enable_jstack_set: granite_threaddump_enable_jstack = a_name		
      end

    set_granite_threaddump_max_backup_days (a_name: like granite_threaddump_max_backup_days)
        -- Set 'granite_threaddump_max_backup_days' with 'a_name'.
      do
        granite_threaddump_max_backup_days := a_name
      ensure
        granite_threaddump_max_backup_days_set: granite_threaddump_max_backup_days = a_name		
      end

    set_granite_threaddump_backup_clean_trigger (a_name: like granite_threaddump_backup_clean_trigger)
        -- Set 'granite_threaddump_backup_clean_trigger' with 'a_name'.
      do
        granite_threaddump_backup_clean_trigger := a_name
      ensure
        granite_threaddump_backup_clean_trigger_set: granite_threaddump_backup_clean_trigger = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_ADOBE_GRANITE_THREADDUMP_THREAD_DUMP_COLLECTOR_PROPERTIES%N")
        if attached scheduler_period as l_scheduler_period then
          Result.append ("%Nscheduler_period:")
          Result.append (l_scheduler_period.out)
          Result.append ("%N")    
        end  
        if attached scheduler_run_on as l_scheduler_run_on then
          Result.append ("%Nscheduler_run_on:")
          Result.append (l_scheduler_run_on.out)
          Result.append ("%N")    
        end  
        if attached granite_threaddump_enabled as l_granite_threaddump_enabled then
          Result.append ("%Ngranite_threaddump_enabled:")
          Result.append (l_granite_threaddump_enabled.out)
          Result.append ("%N")    
        end  
        if attached granite_threaddump_dumps_per_file as l_granite_threaddump_dumps_per_file then
          Result.append ("%Ngranite_threaddump_dumps_per_file:")
          Result.append (l_granite_threaddump_dumps_per_file.out)
          Result.append ("%N")    
        end  
        if attached granite_threaddump_enable_gzip_compression as l_granite_threaddump_enable_gzip_compression then
          Result.append ("%Ngranite_threaddump_enable_gzip_compression:")
          Result.append (l_granite_threaddump_enable_gzip_compression.out)
          Result.append ("%N")    
        end  
        if attached granite_threaddump_enable_directories_compression as l_granite_threaddump_enable_directories_compression then
          Result.append ("%Ngranite_threaddump_enable_directories_compression:")
          Result.append (l_granite_threaddump_enable_directories_compression.out)
          Result.append ("%N")    
        end  
        if attached granite_threaddump_enable_jstack as l_granite_threaddump_enable_jstack then
          Result.append ("%Ngranite_threaddump_enable_jstack:")
          Result.append (l_granite_threaddump_enable_jstack.out)
          Result.append ("%N")    
        end  
        if attached granite_threaddump_max_backup_days as l_granite_threaddump_max_backup_days then
          Result.append ("%Ngranite_threaddump_max_backup_days:")
          Result.append (l_granite_threaddump_max_backup_days.out)
          Result.append ("%N")    
        end  
        if attached granite_threaddump_backup_clean_trigger as l_granite_threaddump_backup_clean_trigger then
          Result.append ("%Ngranite_threaddump_backup_clean_trigger:")
          Result.append (l_granite_threaddump_backup_clean_trigger.out)
          Result.append ("%N")    
        end  
      end
end


