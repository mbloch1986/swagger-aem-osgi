/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties.h
 *
 * 
 */

#ifndef ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties_H_
#define ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties_H_



#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties
{
public:
    ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties();
    virtual ~ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getLinkExpiredPrefix() const;
    void setLinkExpiredPrefix(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getLinkExpiredRemove() const;
    void setLinkExpiredRemove(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getLinkExpiredSuffix() const;
    void setLinkExpiredSuffix(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getLinkInvalidPrefix() const;
    void setLinkInvalidPrefix(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getLinkInvalidRemove() const;
    void setLinkInvalidRemove(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getLinkInvalidSuffix() const;
    void setLinkInvalidSuffix(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getLinkPredatedPrefix() const;
    void setLinkPredatedPrefix(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getLinkPredatedRemove() const;
    void setLinkPredatedRemove(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getLinkPredatedSuffix() const;
    void setLinkPredatedSuffix(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getLinkWcmmodes() const;
    void setLinkWcmmodes(std::shared_ptr<ConfigNodePropertyArray> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Link_expired_prefix;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Link_expired_remove;
    std::shared_ptr<ConfigNodePropertyString> m_Link_expired_suffix;
    std::shared_ptr<ConfigNodePropertyString> m_Link_invalid_prefix;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Link_invalid_remove;
    std::shared_ptr<ConfigNodePropertyString> m_Link_invalid_suffix;
    std::shared_ptr<ConfigNodePropertyString> m_Link_predated_prefix;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Link_predated_remove;
    std::shared_ptr<ConfigNodePropertyString> m_Link_predated_suffix;
    std::shared_ptr<ConfigNodePropertyArray> m_Link_wcmmodes;
};

}
}
}
}

#endif /* ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties_H_ */
