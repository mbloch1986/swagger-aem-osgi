/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NodeSwaggerAemOsgi);
  }
}(this, function(expect, NodeSwaggerAemOsgi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties', function() {
    it('should create an instance of OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties', function() {
      // uncomment below and update the code to test OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be.a(NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties);
    });

    it('should have the property jasperCompilerTargetVM (base name: "jasper.compilerTargetVM")', function() {
      // uncomment below and update the code to test the property jasperCompilerTargetVM
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property jasperCompilerSourceVM (base name: "jasper.compilerSourceVM")', function() {
      // uncomment below and update the code to test the property jasperCompilerSourceVM
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property jasperClassdebuginfo (base name: "jasper.classdebuginfo")', function() {
      // uncomment below and update the code to test the property jasperClassdebuginfo
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property jasperEnablePooling (base name: "jasper.enablePooling")', function() {
      // uncomment below and update the code to test the property jasperEnablePooling
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property jasperIeClassId (base name: "jasper.ieClassId")', function() {
      // uncomment below and update the code to test the property jasperIeClassId
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property jasperGenStringAsCharArray (base name: "jasper.genStringAsCharArray")', function() {
      // uncomment below and update the code to test the property jasperGenStringAsCharArray
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property jasperKeepgenerated (base name: "jasper.keepgenerated")', function() {
      // uncomment below and update the code to test the property jasperKeepgenerated
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property jasperMappedfile (base name: "jasper.mappedfile")', function() {
      // uncomment below and update the code to test the property jasperMappedfile
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property jasperTrimSpaces (base name: "jasper.trimSpaces")', function() {
      // uncomment below and update the code to test the property jasperTrimSpaces
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property jasperDisplaySourceFragments (base name: "jasper.displaySourceFragments")', function() {
      // uncomment below and update the code to test the property jasperDisplaySourceFragments
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

    it('should have the property defaultIsSession (base name: "default.is.session")', function() {
      // uncomment below and update the code to test the property defaultIsSession
      //var instane = new NodeSwaggerAemOsgi.OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties();
      //expect(instance).to.be();
    });

  });

}));
