/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties() {
    init();
}

OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::~OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties() {
    this->cleanup();
}

void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::init() {
    job_consumermanager_disable_distribution = new OAIConfigNodePropertyBoolean();
    m_job_consumermanager_disable_distribution_isSet = false;
    startup_delay = new OAIConfigNodePropertyInteger();
    m_startup_delay_isSet = false;
    cleanup_period = new OAIConfigNodePropertyInteger();
    m_cleanup_period_isSet = false;
}

void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::cleanup() {
    if(job_consumermanager_disable_distribution != nullptr) { 
        delete job_consumermanager_disable_distribution;
    }
    if(startup_delay != nullptr) { 
        delete startup_delay;
    }
    if(cleanup_period != nullptr) { 
        delete cleanup_period;
    }
}

OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties*
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&job_consumermanager_disable_distribution, pJson["job.consumermanager.disableDistribution"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&startup_delay, pJson["startup.delay"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&cleanup_period, pJson["cleanup.period"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::asJsonObject() {
    QJsonObject obj;
    if((job_consumermanager_disable_distribution != nullptr) && (job_consumermanager_disable_distribution->isSet())){
        toJsonValue(QString("job.consumermanager.disableDistribution"), job_consumermanager_disable_distribution, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((startup_delay != nullptr) && (startup_delay->isSet())){
        toJsonValue(QString("startup.delay"), startup_delay, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((cleanup_period != nullptr) && (cleanup_period->isSet())){
        toJsonValue(QString("cleanup.period"), cleanup_period, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::getJobConsumermanagerDisableDistribution() {
    return job_consumermanager_disable_distribution;
}
void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::setJobConsumermanagerDisableDistribution(OAIConfigNodePropertyBoolean* job_consumermanager_disable_distribution) {
    this->job_consumermanager_disable_distribution = job_consumermanager_disable_distribution;
    this->m_job_consumermanager_disable_distribution_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::getStartupDelay() {
    return startup_delay;
}
void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::setStartupDelay(OAIConfigNodePropertyInteger* startup_delay) {
    this->startup_delay = startup_delay;
    this->m_startup_delay_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::getCleanupPeriod() {
    return cleanup_period;
}
void
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::setCleanupPeriod(OAIConfigNodePropertyInteger* cleanup_period) {
    this->cleanup_period = cleanup_period;
    this->m_cleanup_period_isSet = true;
}


bool
OAIOrgApacheSlingEventImplJobsJcrPersistenceHandlerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(job_consumermanager_disable_distribution != nullptr && job_consumermanager_disable_distribution->isSet()){ isObjectUpdated = true; break;}
        if(startup_delay != nullptr && startup_delay->isSet()){ isObjectUpdated = true; break;}
        if(cleanup_period != nullptr && cleanup_period->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

