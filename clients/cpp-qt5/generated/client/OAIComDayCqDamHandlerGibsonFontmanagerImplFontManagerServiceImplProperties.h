/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties_H_
#define OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties: public OAIObject {
public:
    OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties();
    OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties(QString json);
    ~OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getEventFilter();
    void setEventFilter(OAIConfigNodePropertyString* event_filter);

    OAIConfigNodePropertyArray* getFontmgrSystemFontDir();
    void setFontmgrSystemFontDir(OAIConfigNodePropertyArray* fontmgr_system_font_dir);

    OAIConfigNodePropertyString* getFontmgrAdobeFontDir();
    void setFontmgrAdobeFontDir(OAIConfigNodePropertyString* fontmgr_adobe_font_dir);

    OAIConfigNodePropertyString* getFontmgrCustomerFontDir();
    void setFontmgrCustomerFontDir(OAIConfigNodePropertyString* fontmgr_customer_font_dir);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* event_filter;
    bool m_event_filter_isSet;

    OAIConfigNodePropertyArray* fontmgr_system_font_dir;
    bool m_fontmgr_system_font_dir_isSet;

    OAIConfigNodePropertyString* fontmgr_adobe_font_dir;
    bool m_fontmgr_adobe_font_dir_isSet;

    OAIConfigNodePropertyString* fontmgr_customer_font_dir;
    bool m_fontmgr_customer_font_dir_isSet;

};

}

#endif /* OAIComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties_H_ */
