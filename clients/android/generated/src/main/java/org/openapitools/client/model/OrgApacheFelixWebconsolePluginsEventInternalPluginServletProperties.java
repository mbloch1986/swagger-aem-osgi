/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyInteger;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheFelixWebconsolePluginsEventInternalPluginServletProperties {
  
  @SerializedName("max.size")
  private ConfigNodePropertyInteger maxSize = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMaxSize() {
    return maxSize;
  }
  public void setMaxSize(ConfigNodePropertyInteger maxSize) {
    this.maxSize = maxSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheFelixWebconsolePluginsEventInternalPluginServletProperties orgApacheFelixWebconsolePluginsEventInternalPluginServletProperties = (OrgApacheFelixWebconsolePluginsEventInternalPluginServletProperties) o;
    return (this.maxSize == null ? orgApacheFelixWebconsolePluginsEventInternalPluginServletProperties.maxSize == null : this.maxSize.equals(orgApacheFelixWebconsolePluginsEventInternalPluginServletProperties.maxSize));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.maxSize == null ? 0: this.maxSize.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheFelixWebconsolePluginsEventInternalPluginServletProperties {\n");
    
    sb.append("  maxSize: ").append(maxSize).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
