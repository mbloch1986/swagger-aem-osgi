/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties.h
 *
 * 
 */

#ifndef OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties_H
#define OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties: public OAIObject {
public:
    OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties();
    OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties(QString json);
    ~OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getPath() const;
    void setPath(const OAIConfigNodePropertyString &path);

    OAIConfigNodePropertyBoolean getAuthHttpNologin() const;
    void setAuthHttpNologin(const OAIConfigNodePropertyBoolean &auth_http_nologin);

    OAIConfigNodePropertyString getAuthHttpRealm() const;
    void setAuthHttpRealm(const OAIConfigNodePropertyString &auth_http_realm);

    OAIConfigNodePropertyString getAuthDefaultLoginpage() const;
    void setAuthDefaultLoginpage(const OAIConfigNodePropertyString &auth_default_loginpage);

    OAIConfigNodePropertyArray getAuthCredForm() const;
    void setAuthCredForm(const OAIConfigNodePropertyArray &auth_cred_form);

    OAIConfigNodePropertyArray getAuthCredUtf8() const;
    void setAuthCredUtf8(const OAIConfigNodePropertyArray &auth_cred_utf8);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString path;
    bool m_path_isSet;

    OAIConfigNodePropertyBoolean auth_http_nologin;
    bool m_auth_http_nologin_isSet;

    OAIConfigNodePropertyString auth_http_realm;
    bool m_auth_http_realm_isSet;

    OAIConfigNodePropertyString auth_default_loginpage;
    bool m_auth_default_loginpage_isSet;

    OAIConfigNodePropertyArray auth_cred_form;
    bool m_auth_cred_form_isSet;

    OAIConfigNodePropertyArray auth_cred_utf8;
    bool m_auth_cred_utf8_isSet;

};

}

#endif // OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties_H
