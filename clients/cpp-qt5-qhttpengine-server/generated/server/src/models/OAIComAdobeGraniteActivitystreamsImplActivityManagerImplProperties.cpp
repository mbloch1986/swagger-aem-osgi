/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties() {
    this->init();
}

OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::~OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties() {
    
}

void
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::init() {
    m_aggregate_relationships_isSet = false;
    m_aggregate_descend_virtual_isSet = false;
}

void
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(aggregate_relationships, json[QString("aggregate.relationships")]);
    
    ::OpenAPI::fromJsonValue(aggregate_descend_virtual, json[QString("aggregate.descend.virtual")]);
    
}

QString
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(aggregate_relationships.isSet()){
        obj.insert(QString("aggregate.relationships"), ::OpenAPI::toJsonValue(aggregate_relationships));
    }
	if(aggregate_descend_virtual.isSet()){
        obj.insert(QString("aggregate.descend.virtual"), ::OpenAPI::toJsonValue(aggregate_descend_virtual));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::getAggregateRelationships() const {
    return aggregate_relationships;
}
void
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::setAggregateRelationships(const OAIConfigNodePropertyArray &aggregate_relationships) {
    this->aggregate_relationships = aggregate_relationships;
    this->m_aggregate_relationships_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::getAggregateDescendVirtual() const {
    return aggregate_descend_virtual;
}
void
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::setAggregateDescendVirtual(const OAIConfigNodePropertyBoolean &aggregate_descend_virtual) {
    this->aggregate_descend_virtual = aggregate_descend_virtual;
    this->m_aggregate_descend_virtual_isSet = true;
}


bool
OAIComAdobeGraniteActivitystreamsImplActivityManagerImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(aggregate_relationships.isSet()){ isObjectUpdated = true; break;}
    
        if(aggregate_descend_virtual.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

