/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties() {
    init();
}

OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::~OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties() {
    this->cleanup();
}

void
OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::init() {
    com_day_cq_dam_core_impl_io_special_files_handler_filepatters = new OAIConfigNodePropertyArray();
    m_com_day_cq_dam_core_impl_io_special_files_handler_filepatters_isSet = false;
}

void
OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::cleanup() {
    if(com_day_cq_dam_core_impl_io_special_files_handler_filepatters != nullptr) { 
        delete com_day_cq_dam_core_impl_io_special_files_handler_filepatters;
    }
}

OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties*
OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&com_day_cq_dam_core_impl_io_special_files_handler_filepatters, pJson["com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::asJsonObject() {
    QJsonObject obj;
    if((com_day_cq_dam_core_impl_io_special_files_handler_filepatters != nullptr) && (com_day_cq_dam_core_impl_io_special_files_handler_filepatters->isSet())){
        toJsonValue(QString("com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters"), com_day_cq_dam_core_impl_io_special_files_handler_filepatters, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::getComDayCqDamCoreImplIoSpecialFilesHandlerFilepatters() {
    return com_day_cq_dam_core_impl_io_special_files_handler_filepatters;
}
void
OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::setComDayCqDamCoreImplIoSpecialFilesHandlerFilepatters(OAIConfigNodePropertyArray* com_day_cq_dam_core_impl_io_special_files_handler_filepatters) {
    this->com_day_cq_dam_core_impl_io_special_files_handler_filepatters = com_day_cq_dam_core_impl_io_special_files_handler_filepatters;
    this->m_com_day_cq_dam_core_impl_io_special_files_handler_filepatters_isSet = true;
}


bool
OAIComAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(com_day_cq_dam_core_impl_io_special_files_handler_filepatters != nullptr && com_day_cq_dam_core_impl_io_special_files_handler_filepatters->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

