/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties {
  
  @SerializedName("poolName")
  private ConfigNodePropertyString poolName = null;
  @SerializedName("allowedPoolNames")
  private ConfigNodePropertyArray allowedPoolNames = null;
  @SerializedName("scheduler.useleaderforsingle")
  private ConfigNodePropertyBoolean schedulerUseleaderforsingle = null;
  @SerializedName("metrics.filters")
  private ConfigNodePropertyArray metricsFilters = null;
  @SerializedName("slowThresholdMillis")
  private ConfigNodePropertyInteger slowThresholdMillis = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getPoolName() {
    return poolName;
  }
  public void setPoolName(ConfigNodePropertyString poolName) {
    this.poolName = poolName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getAllowedPoolNames() {
    return allowedPoolNames;
  }
  public void setAllowedPoolNames(ConfigNodePropertyArray allowedPoolNames) {
    this.allowedPoolNames = allowedPoolNames;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getSchedulerUseleaderforsingle() {
    return schedulerUseleaderforsingle;
  }
  public void setSchedulerUseleaderforsingle(ConfigNodePropertyBoolean schedulerUseleaderforsingle) {
    this.schedulerUseleaderforsingle = schedulerUseleaderforsingle;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getMetricsFilters() {
    return metricsFilters;
  }
  public void setMetricsFilters(ConfigNodePropertyArray metricsFilters) {
    this.metricsFilters = metricsFilters;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getSlowThresholdMillis() {
    return slowThresholdMillis;
  }
  public void setSlowThresholdMillis(ConfigNodePropertyInteger slowThresholdMillis) {
    this.slowThresholdMillis = slowThresholdMillis;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties = (OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties) o;
    return (this.poolName == null ? orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.poolName == null : this.poolName.equals(orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.poolName)) &&
        (this.allowedPoolNames == null ? orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.allowedPoolNames == null : this.allowedPoolNames.equals(orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.allowedPoolNames)) &&
        (this.schedulerUseleaderforsingle == null ? orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.schedulerUseleaderforsingle == null : this.schedulerUseleaderforsingle.equals(orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.schedulerUseleaderforsingle)) &&
        (this.metricsFilters == null ? orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.metricsFilters == null : this.metricsFilters.equals(orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.metricsFilters)) &&
        (this.slowThresholdMillis == null ? orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.slowThresholdMillis == null : this.slowThresholdMillis.equals(orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties.slowThresholdMillis));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.poolName == null ? 0: this.poolName.hashCode());
    result = 31 * result + (this.allowedPoolNames == null ? 0: this.allowedPoolNames.hashCode());
    result = 31 * result + (this.schedulerUseleaderforsingle == null ? 0: this.schedulerUseleaderforsingle.hashCode());
    result = 31 * result + (this.metricsFilters == null ? 0: this.metricsFilters.hashCode());
    result = 31 * result + (this.slowThresholdMillis == null ? 0: this.slowThresholdMillis.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties {\n");
    
    sb.append("  poolName: ").append(poolName).append("\n");
    sb.append("  allowedPoolNames: ").append(allowedPoolNames).append("\n");
    sb.append("  schedulerUseleaderforsingle: ").append(schedulerUseleaderforsingle).append("\n");
    sb.append("  metricsFilters: ").append(metricsFilters).append("\n");
    sb.append("  slowThresholdMillis: ").append(slowThresholdMillis).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
