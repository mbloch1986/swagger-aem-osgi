/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties()
{
    m_Group2member_relationship_outgoingIsSet = false;
    m_Group2member_excluded_outgoingIsSet = false;
    m_Group2member_relationship_incomingIsSet = false;
    m_Group2member_excluded_incomingIsSet = false;
}

ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::~ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties()
{
}

void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::validate()
{
    // TODO: implement validation
}

web::json::value ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Group2member_relationship_outgoingIsSet)
    {
        val[utility::conversions::to_string_t("group2member.relationship.outgoing")] = ModelBase::toJson(m_Group2member_relationship_outgoing);
    }
    if(m_Group2member_excluded_outgoingIsSet)
    {
        val[utility::conversions::to_string_t("group2member.excluded.outgoing")] = ModelBase::toJson(m_Group2member_excluded_outgoing);
    }
    if(m_Group2member_relationship_incomingIsSet)
    {
        val[utility::conversions::to_string_t("group2member.relationship.incoming")] = ModelBase::toJson(m_Group2member_relationship_incoming);
    }
    if(m_Group2member_excluded_incomingIsSet)
    {
        val[utility::conversions::to_string_t("group2member.excluded.incoming")] = ModelBase::toJson(m_Group2member_excluded_incoming);
    }

    return val;
}

void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("group2member.relationship.outgoing")))
    {
        if(!val[utility::conversions::to_string_t("group2member.relationship.outgoing")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromJson(val[utility::conversions::to_string_t("group2member.relationship.outgoing")]);
            setGroup2memberRelationshipOutgoing( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("group2member.excluded.outgoing")))
    {
        if(!val[utility::conversions::to_string_t("group2member.excluded.outgoing")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromJson(val[utility::conversions::to_string_t("group2member.excluded.outgoing")]);
            setGroup2memberExcludedOutgoing( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("group2member.relationship.incoming")))
    {
        if(!val[utility::conversions::to_string_t("group2member.relationship.incoming")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromJson(val[utility::conversions::to_string_t("group2member.relationship.incoming")]);
            setGroup2memberRelationshipIncoming( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("group2member.excluded.incoming")))
    {
        if(!val[utility::conversions::to_string_t("group2member.excluded.incoming")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromJson(val[utility::conversions::to_string_t("group2member.excluded.incoming")]);
            setGroup2memberExcludedIncoming( newItem );
        }
    }
}

void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Group2member_relationship_outgoingIsSet)
    {
        if (m_Group2member_relationship_outgoing.get())
        {
            m_Group2member_relationship_outgoing->toMultipart(multipart, utility::conversions::to_string_t("group2member.relationship.outgoing."));
        }
    }
    if(m_Group2member_excluded_outgoingIsSet)
    {
        if (m_Group2member_excluded_outgoing.get())
        {
            m_Group2member_excluded_outgoing->toMultipart(multipart, utility::conversions::to_string_t("group2member.excluded.outgoing."));
        }
    }
    if(m_Group2member_relationship_incomingIsSet)
    {
        if (m_Group2member_relationship_incoming.get())
        {
            m_Group2member_relationship_incoming->toMultipart(multipart, utility::conversions::to_string_t("group2member.relationship.incoming."));
        }
    }
    if(m_Group2member_excluded_incomingIsSet)
    {
        if (m_Group2member_excluded_incoming.get())
        {
            m_Group2member_excluded_incoming->toMultipart(multipart, utility::conversions::to_string_t("group2member.excluded.incoming."));
        }
    }
}

void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("group2member.relationship.outgoing")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("group2member.relationship.outgoing")))
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("group2member.relationship.outgoing."));
            setGroup2memberRelationshipOutgoing( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("group2member.excluded.outgoing")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("group2member.excluded.outgoing")))
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("group2member.excluded.outgoing."));
            setGroup2memberExcludedOutgoing( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("group2member.relationship.incoming")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("group2member.relationship.incoming")))
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("group2member.relationship.incoming."));
            setGroup2memberRelationshipIncoming( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("group2member.excluded.incoming")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("group2member.excluded.incoming")))
        {
            std::shared_ptr<ConfigNodePropertyArray> newItem(new ConfigNodePropertyArray());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("group2member.excluded.incoming."));
            setGroup2memberExcludedIncoming( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::getGroup2memberRelationshipOutgoing() const
{
    return m_Group2member_relationship_outgoing;
}


void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::setGroup2memberRelationshipOutgoing(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Group2member_relationship_outgoing = value;
    m_Group2member_relationship_outgoingIsSet = true;
}
bool ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::group2memberRelationshipOutgoingIsSet() const
{
    return m_Group2member_relationship_outgoingIsSet;
}

void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::unsetGroup2member_relationship_outgoing()
{
    m_Group2member_relationship_outgoingIsSet = false;
}

std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::getGroup2memberExcludedOutgoing() const
{
    return m_Group2member_excluded_outgoing;
}


void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::setGroup2memberExcludedOutgoing(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Group2member_excluded_outgoing = value;
    m_Group2member_excluded_outgoingIsSet = true;
}
bool ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::group2memberExcludedOutgoingIsSet() const
{
    return m_Group2member_excluded_outgoingIsSet;
}

void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::unsetGroup2member_excluded_outgoing()
{
    m_Group2member_excluded_outgoingIsSet = false;
}

std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::getGroup2memberRelationshipIncoming() const
{
    return m_Group2member_relationship_incoming;
}


void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::setGroup2memberRelationshipIncoming(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Group2member_relationship_incoming = value;
    m_Group2member_relationship_incomingIsSet = true;
}
bool ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::group2memberRelationshipIncomingIsSet() const
{
    return m_Group2member_relationship_incomingIsSet;
}

void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::unsetGroup2member_relationship_incoming()
{
    m_Group2member_relationship_incomingIsSet = false;
}

std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::getGroup2memberExcludedIncoming() const
{
    return m_Group2member_excluded_incoming;
}


void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::setGroup2memberExcludedIncoming(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Group2member_excluded_incoming = value;
    m_Group2member_excluded_incomingIsSet = true;
}
bool ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::group2memberExcludedIncomingIsSet() const
{
    return m_Group2member_excluded_incomingIsSet;
}

void ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::unsetGroup2member_excluded_incoming()
{
    m_Group2member_excluded_incomingIsSet = false;
}

}
}
}
}

