/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingSecurityImplContentDispositionFilterProperties {
  #[serde(rename = "sling.content.disposition.paths")]
  sling_content_disposition_paths: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "sling.content.disposition.excluded.paths")]
  sling_content_disposition_excluded_paths: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "sling.content.disposition.all.paths")]
  sling_content_disposition_all_paths: Option<::models::ConfigNodePropertyBoolean>
}

impl OrgApacheSlingSecurityImplContentDispositionFilterProperties {
  pub fn new() -> OrgApacheSlingSecurityImplContentDispositionFilterProperties {
    OrgApacheSlingSecurityImplContentDispositionFilterProperties {
      sling_content_disposition_paths: None,
      sling_content_disposition_excluded_paths: None,
      sling_content_disposition_all_paths: None
    }
  }

  pub fn set_sling_content_disposition_paths(&mut self, sling_content_disposition_paths: ::models::ConfigNodePropertyArray) {
    self.sling_content_disposition_paths = Some(sling_content_disposition_paths);
  }

  pub fn with_sling_content_disposition_paths(mut self, sling_content_disposition_paths: ::models::ConfigNodePropertyArray) -> OrgApacheSlingSecurityImplContentDispositionFilterProperties {
    self.sling_content_disposition_paths = Some(sling_content_disposition_paths);
    self
  }

  pub fn sling_content_disposition_paths(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.sling_content_disposition_paths.as_ref()
  }

  pub fn reset_sling_content_disposition_paths(&mut self) {
    self.sling_content_disposition_paths = None;
  }

  pub fn set_sling_content_disposition_excluded_paths(&mut self, sling_content_disposition_excluded_paths: ::models::ConfigNodePropertyArray) {
    self.sling_content_disposition_excluded_paths = Some(sling_content_disposition_excluded_paths);
  }

  pub fn with_sling_content_disposition_excluded_paths(mut self, sling_content_disposition_excluded_paths: ::models::ConfigNodePropertyArray) -> OrgApacheSlingSecurityImplContentDispositionFilterProperties {
    self.sling_content_disposition_excluded_paths = Some(sling_content_disposition_excluded_paths);
    self
  }

  pub fn sling_content_disposition_excluded_paths(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.sling_content_disposition_excluded_paths.as_ref()
  }

  pub fn reset_sling_content_disposition_excluded_paths(&mut self) {
    self.sling_content_disposition_excluded_paths = None;
  }

  pub fn set_sling_content_disposition_all_paths(&mut self, sling_content_disposition_all_paths: ::models::ConfigNodePropertyBoolean) {
    self.sling_content_disposition_all_paths = Some(sling_content_disposition_all_paths);
  }

  pub fn with_sling_content_disposition_all_paths(mut self, sling_content_disposition_all_paths: ::models::ConfigNodePropertyBoolean) -> OrgApacheSlingSecurityImplContentDispositionFilterProperties {
    self.sling_content_disposition_all_paths = Some(sling_content_disposition_all_paths);
    self
  }

  pub fn sling_content_disposition_all_paths(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.sling_content_disposition_all_paths.as_ref()
  }

  pub fn reset_sling_content_disposition_all_paths(&mut self) {
    self.sling_content_disposition_all_paths = None;
  }

}



