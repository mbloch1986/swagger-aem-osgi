/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties {
  
  @SerializedName("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath")
  private ConfigNodePropertyArray comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath = null;
  @SerializedName("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency")
  private ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency = null;
  @SerializedName("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout")
  private ConfigNodePropertyInteger comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout = null;
  @SerializedName("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients")
  private ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients = null;
  @SerializedName("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver")
  private ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver = null;
  @SerializedName("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport")
  private ConfigNodePropertyInteger comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport = null;
  @SerializedName("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls")
  private ConfigNodePropertyBoolean comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls = null;
  @SerializedName("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username")
  private ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername = null;
  @SerializedName("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password")
  private ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath() {
    return comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath;
  }
  public void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath(ConfigNodePropertyArray comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath) {
    this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath = comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency() {
    return comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency;
  }
  public void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency(ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency) {
    this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency = comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout() {
    return comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout;
  }
  public void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout(ConfigNodePropertyInteger comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout) {
    this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout = comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients() {
    return comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients;
  }
  public void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients(ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients) {
    this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients = comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver() {
    return comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver;
  }
  public void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver(ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver) {
    this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver = comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport() {
    return comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport;
  }
  public void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport(ConfigNodePropertyInteger comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport) {
    this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport = comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls() {
    return comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls;
  }
  public void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls(ConfigNodePropertyBoolean comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls) {
    this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls = comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername() {
    return comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername;
  }
  public void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername(ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername) {
    this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername = comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword() {
    return comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword;
  }
  public void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword(ConfigNodePropertyString comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword) {
    this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword = comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties = (ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties) o;
    return (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath == null ? comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath == null : this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath.equals(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath)) &&
        (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency == null ? comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency == null : this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency.equals(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency)) &&
        (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout == null ? comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout == null : this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout.equals(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout)) &&
        (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients == null ? comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients == null : this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients.equals(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients)) &&
        (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver == null ? comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver == null : this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver.equals(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver)) &&
        (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport == null ? comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport == null : this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport.equals(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport)) &&
        (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls == null ? comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls == null : this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls.equals(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls)) &&
        (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername == null ? comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername == null : this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername.equals(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername)) &&
        (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword == null ? comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword == null : this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword.equals(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath == null ? 0: this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath.hashCode());
    result = 31 * result + (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency == null ? 0: this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency.hashCode());
    result = 31 * result + (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout == null ? 0: this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout.hashCode());
    result = 31 * result + (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients == null ? 0: this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients.hashCode());
    result = 31 * result + (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver == null ? 0: this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver.hashCode());
    result = 31 * result + (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport == null ? 0: this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport.hashCode());
    result = 31 * result + (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls == null ? 0: this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls.hashCode());
    result = 31 * result + (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername == null ? 0: this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername.hashCode());
    result = 31 * result + (this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword == null ? 0: this.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties {\n");
    
    sb.append("  comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath: ").append(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath).append("\n");
    sb.append("  comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency: ").append(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency).append("\n");
    sb.append("  comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout: ").append(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout).append("\n");
    sb.append("  comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients: ").append(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients).append("\n");
    sb.append("  comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver: ").append(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver).append("\n");
    sb.append("  comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport: ").append(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport).append("\n");
    sb.append("  comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls: ").append(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls).append("\n");
    sb.append("  comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername: ").append(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername).append("\n");
    sb.append("  comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword: ").append(comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
