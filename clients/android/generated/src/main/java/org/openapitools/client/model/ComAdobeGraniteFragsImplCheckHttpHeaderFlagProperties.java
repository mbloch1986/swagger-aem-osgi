/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties {
  
  @SerializedName("feature.name")
  private ConfigNodePropertyString featureName = null;
  @SerializedName("feature.description")
  private ConfigNodePropertyString featureDescription = null;
  @SerializedName("http.header.name")
  private ConfigNodePropertyString httpHeaderName = null;
  @SerializedName("http.header.valuepattern")
  private ConfigNodePropertyString httpHeaderValuepattern = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getFeatureName() {
    return featureName;
  }
  public void setFeatureName(ConfigNodePropertyString featureName) {
    this.featureName = featureName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getFeatureDescription() {
    return featureDescription;
  }
  public void setFeatureDescription(ConfigNodePropertyString featureDescription) {
    this.featureDescription = featureDescription;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getHttpHeaderName() {
    return httpHeaderName;
  }
  public void setHttpHeaderName(ConfigNodePropertyString httpHeaderName) {
    this.httpHeaderName = httpHeaderName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getHttpHeaderValuepattern() {
    return httpHeaderValuepattern;
  }
  public void setHttpHeaderValuepattern(ConfigNodePropertyString httpHeaderValuepattern) {
    this.httpHeaderValuepattern = httpHeaderValuepattern;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties = (ComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties) o;
    return (this.featureName == null ? comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties.featureName == null : this.featureName.equals(comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties.featureName)) &&
        (this.featureDescription == null ? comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties.featureDescription == null : this.featureDescription.equals(comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties.featureDescription)) &&
        (this.httpHeaderName == null ? comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties.httpHeaderName == null : this.httpHeaderName.equals(comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties.httpHeaderName)) &&
        (this.httpHeaderValuepattern == null ? comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties.httpHeaderValuepattern == null : this.httpHeaderValuepattern.equals(comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties.httpHeaderValuepattern));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.featureName == null ? 0: this.featureName.hashCode());
    result = 31 * result + (this.featureDescription == null ? 0: this.featureDescription.hashCode());
    result = 31 * result + (this.httpHeaderName == null ? 0: this.httpHeaderName.hashCode());
    result = 31 * result + (this.httpHeaderValuepattern == null ? 0: this.httpHeaderValuepattern.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties {\n");
    
    sb.append("  featureName: ").append(featureName).append("\n");
    sb.append("  featureDescription: ").append(featureDescription).append("\n");
    sb.append("  httpHeaderName: ").append(httpHeaderName).append("\n");
    sb.append("  httpHeaderValuepattern: ").append(httpHeaderValuepattern).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
