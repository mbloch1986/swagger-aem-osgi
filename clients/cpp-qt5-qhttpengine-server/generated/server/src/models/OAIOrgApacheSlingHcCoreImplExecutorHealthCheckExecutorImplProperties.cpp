/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties() {
    this->init();
}

OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::~OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties() {
    
}

void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::init() {
    m_timeout_in_ms_isSet = false;
    m_long_running_future_threshold_for_critical_ms_isSet = false;
    m_result_cache_ttl_in_ms_isSet = false;
}

void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(timeout_in_ms, json[QString("timeoutInMs")]);
    
    ::OpenAPI::fromJsonValue(long_running_future_threshold_for_critical_ms, json[QString("longRunningFutureThresholdForCriticalMs")]);
    
    ::OpenAPI::fromJsonValue(result_cache_ttl_in_ms, json[QString("resultCacheTtlInMs")]);
    
}

QString
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(timeout_in_ms.isSet()){
        obj.insert(QString("timeoutInMs"), ::OpenAPI::toJsonValue(timeout_in_ms));
    }
	if(long_running_future_threshold_for_critical_ms.isSet()){
        obj.insert(QString("longRunningFutureThresholdForCriticalMs"), ::OpenAPI::toJsonValue(long_running_future_threshold_for_critical_ms));
    }
	if(result_cache_ttl_in_ms.isSet()){
        obj.insert(QString("resultCacheTtlInMs"), ::OpenAPI::toJsonValue(result_cache_ttl_in_ms));
    }
    return obj;
}

OAIConfigNodePropertyInteger
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::getTimeoutInMs() const {
    return timeout_in_ms;
}
void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::setTimeoutInMs(const OAIConfigNodePropertyInteger &timeout_in_ms) {
    this->timeout_in_ms = timeout_in_ms;
    this->m_timeout_in_ms_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::getLongRunningFutureThresholdForCriticalMs() const {
    return long_running_future_threshold_for_critical_ms;
}
void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::setLongRunningFutureThresholdForCriticalMs(const OAIConfigNodePropertyInteger &long_running_future_threshold_for_critical_ms) {
    this->long_running_future_threshold_for_critical_ms = long_running_future_threshold_for_critical_ms;
    this->m_long_running_future_threshold_for_critical_ms_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::getResultCacheTtlInMs() const {
    return result_cache_ttl_in_ms;
}
void
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::setResultCacheTtlInMs(const OAIConfigNodePropertyInteger &result_cache_ttl_in_ms) {
    this->result_cache_ttl_in_ms = result_cache_ttl_in_ms;
    this->m_result_cache_ttl_in_ms_isSet = true;
}


bool
OAIOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(timeout_in_ms.isSet()){ isObjectUpdated = true; break;}
    
        if(long_running_future_threshold_for_critical_ms.isSet()){ isObjectUpdated = true; break;}
    
        if(result_cache_ttl_in_ms.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

