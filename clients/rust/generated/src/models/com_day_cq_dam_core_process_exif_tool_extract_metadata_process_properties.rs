/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties {
  #[serde(rename = "process.label")]
  process_label: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.dam.enable.sha1")]
  cq_dam_enable_sha1: Option<::models::ConfigNodePropertyBoolean>
}

impl ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties {
  pub fn new() -> ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties {
    ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties {
      process_label: None,
      cq_dam_enable_sha1: None
    }
  }

  pub fn set_process_label(&mut self, process_label: ::models::ConfigNodePropertyString) {
    self.process_label = Some(process_label);
  }

  pub fn with_process_label(mut self, process_label: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties {
    self.process_label = Some(process_label);
    self
  }

  pub fn process_label(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.process_label.as_ref()
  }

  pub fn reset_process_label(&mut self) {
    self.process_label = None;
  }

  pub fn set_cq_dam_enable_sha1(&mut self, cq_dam_enable_sha1: ::models::ConfigNodePropertyBoolean) {
    self.cq_dam_enable_sha1 = Some(cq_dam_enable_sha1);
  }

  pub fn with_cq_dam_enable_sha1(mut self, cq_dam_enable_sha1: ::models::ConfigNodePropertyBoolean) -> ComDayCqDamCoreProcessExifToolExtractMetadataProcessProperties {
    self.cq_dam_enable_sha1 = Some(cq_dam_enable_sha1);
    self
  }

  pub fn cq_dam_enable_sha1(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.cq_dam_enable_sha1.as_ref()
  }

  pub fn reset_cq_dam_enable_sha1(&mut self) {
    self.cq_dam_enable_sha1 = None;
  }

}



