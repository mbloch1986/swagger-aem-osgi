/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties {
  #[serde(rename = "alias")]
  alias: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "dav.create-absolute-uri")]
  dav_create_absolute_uri: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "dav.protectedhandlers")]
  dav_protectedhandlers: Option<::models::ConfigNodePropertyString>
}

impl OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties {
  pub fn new() -> OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties {
    OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties {
      alias: None,
      dav_create_absolute_uri: None,
      dav_protectedhandlers: None
    }
  }

  pub fn set_alias(&mut self, alias: ::models::ConfigNodePropertyString) {
    self.alias = Some(alias);
  }

  pub fn with_alias(mut self, alias: ::models::ConfigNodePropertyString) -> OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties {
    self.alias = Some(alias);
    self
  }

  pub fn alias(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.alias.as_ref()
  }

  pub fn reset_alias(&mut self) {
    self.alias = None;
  }

  pub fn set_dav_create_absolute_uri(&mut self, dav_create_absolute_uri: ::models::ConfigNodePropertyBoolean) {
    self.dav_create_absolute_uri = Some(dav_create_absolute_uri);
  }

  pub fn with_dav_create_absolute_uri(mut self, dav_create_absolute_uri: ::models::ConfigNodePropertyBoolean) -> OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties {
    self.dav_create_absolute_uri = Some(dav_create_absolute_uri);
    self
  }

  pub fn dav_create_absolute_uri(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.dav_create_absolute_uri.as_ref()
  }

  pub fn reset_dav_create_absolute_uri(&mut self) {
    self.dav_create_absolute_uri = None;
  }

  pub fn set_dav_protectedhandlers(&mut self, dav_protectedhandlers: ::models::ConfigNodePropertyString) {
    self.dav_protectedhandlers = Some(dav_protectedhandlers);
  }

  pub fn with_dav_protectedhandlers(mut self, dav_protectedhandlers: ::models::ConfigNodePropertyString) -> OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties {
    self.dav_protectedhandlers = Some(dav_protectedhandlers);
    self
  }

  pub fn dav_protectedhandlers(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.dav_protectedhandlers.as_ref()
  }

  pub fn reset_dav_protectedhandlers(&mut self) {
    self.dav_protectedhandlers = None;
  }

}



