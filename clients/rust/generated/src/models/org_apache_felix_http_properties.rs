/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheFelixHttpProperties {
  #[serde(rename = "org.apache.felix.http.host")]
  org_apache_felix_http_host: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.felix.http.enable")]
  org_apache_felix_http_enable: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.osgi.service.http.port")]
  org_osgi_service_http_port: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.timeout")]
  org_apache_felix_http_timeout: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.https.enable")]
  org_apache_felix_https_enable: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.osgi.service.http.port.secure")]
  org_osgi_service_http_port_secure: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.https.keystore")]
  org_apache_felix_https_keystore: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.felix.https.keystore.password")]
  org_apache_felix_https_keystore_password: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.felix.https.keystore.key.password")]
  org_apache_felix_https_keystore_key_password: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.felix.https.truststore")]
  org_apache_felix_https_truststore: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.felix.https.truststore.password")]
  org_apache_felix_https_truststore_password: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.felix.https.clientcertificate")]
  org_apache_felix_https_clientcertificate: Option<::models::ConfigNodePropertyDropDown>,
  #[serde(rename = "org.apache.felix.http.context_path")]
  org_apache_felix_http_context_path: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.felix.http.mbeans")]
  org_apache_felix_http_mbeans: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.apache.felix.http.session.timeout")]
  org_apache_felix_http_session_timeout: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.jetty.threadpool.max")]
  org_apache_felix_http_jetty_threadpool_max: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.jetty.acceptors")]
  org_apache_felix_http_jetty_acceptors: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.jetty.selectors")]
  org_apache_felix_http_jetty_selectors: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.jetty.headerBufferSize")]
  org_apache_felix_http_jetty_header_buffer_size: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.jetty.requestBufferSize")]
  org_apache_felix_http_jetty_request_buffer_size: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.jetty.responseBufferSize")]
  org_apache_felix_http_jetty_response_buffer_size: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.jetty.maxFormSize")]
  org_apache_felix_http_jetty_max_form_size: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.path_exclusions")]
  org_apache_felix_http_path_exclusions: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.https.jetty.ciphersuites.excluded")]
  org_apache_felix_https_jetty_ciphersuites_excluded: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.https.jetty.ciphersuites.included")]
  org_apache_felix_https_jetty_ciphersuites_included: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.http.jetty.sendServerHeader")]
  org_apache_felix_http_jetty_send_server_header: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.apache.felix.https.jetty.protocols.included")]
  org_apache_felix_https_jetty_protocols_included: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.https.jetty.protocols.excluded")]
  org_apache_felix_https_jetty_protocols_excluded: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.proxy.load.balancer.connection.enable")]
  org_apache_felix_proxy_load_balancer_connection_enable: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.apache.felix.https.jetty.renegotiateAllowed")]
  org_apache_felix_https_jetty_renegotiate_allowed: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.apache.felix.https.jetty.session.cookie.httpOnly")]
  org_apache_felix_https_jetty_session_cookie_http_only: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.apache.felix.https.jetty.session.cookie.secure")]
  org_apache_felix_https_jetty_session_cookie_secure: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.eclipse.jetty.servlet.SessionIdPathParameterName")]
  org_eclipse_jetty_servlet_session_id_path_parameter_name: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding")]
  org_eclipse_jetty_servlet_checking_remote_session_id_encoding: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.eclipse.jetty.servlet.SessionCookie")]
  org_eclipse_jetty_servlet_session_cookie: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.eclipse.jetty.servlet.SessionDomain")]
  org_eclipse_jetty_servlet_session_domain: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.eclipse.jetty.servlet.SessionPath")]
  org_eclipse_jetty_servlet_session_path: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.eclipse.jetty.servlet.MaxAge")]
  org_eclipse_jetty_servlet_max_age: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.http.name")]
  org_apache_felix_http_name: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "org.apache.felix.jetty.gziphandler.enable")]
  org_apache_felix_jetty_gziphandler_enable: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.apache.felix.jetty.gzip.minGzipSize")]
  org_apache_felix_jetty_gzip_min_gzip_size: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.jetty.gzip.compressionLevel")]
  org_apache_felix_jetty_gzip_compression_level: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.jetty.gzip.inflateBufferSize")]
  org_apache_felix_jetty_gzip_inflate_buffer_size: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "org.apache.felix.jetty.gzip.syncFlush")]
  org_apache_felix_jetty_gzip_sync_flush: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.apache.felix.jetty.gzip.excludedUserAgents")]
  org_apache_felix_jetty_gzip_excluded_user_agents: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.jetty.gzip.includedMethods")]
  org_apache_felix_jetty_gzip_included_methods: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.jetty.gzip.excludedMethods")]
  org_apache_felix_jetty_gzip_excluded_methods: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.jetty.gzip.includedPaths")]
  org_apache_felix_jetty_gzip_included_paths: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.jetty.gzip.excludedPaths")]
  org_apache_felix_jetty_gzip_excluded_paths: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.jetty.gzip.includedMimeTypes")]
  org_apache_felix_jetty_gzip_included_mime_types: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.jetty.gzip.excludedMimeTypes")]
  org_apache_felix_jetty_gzip_excluded_mime_types: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "org.apache.felix.http.session.invalidate")]
  org_apache_felix_http_session_invalidate: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "org.apache.felix.http.session.uniqueid")]
  org_apache_felix_http_session_uniqueid: Option<::models::ConfigNodePropertyBoolean>
}

impl OrgApacheFelixHttpProperties {
  pub fn new() -> OrgApacheFelixHttpProperties {
    OrgApacheFelixHttpProperties {
      org_apache_felix_http_host: None,
      org_apache_felix_http_enable: None,
      org_osgi_service_http_port: None,
      org_apache_felix_http_timeout: None,
      org_apache_felix_https_enable: None,
      org_osgi_service_http_port_secure: None,
      org_apache_felix_https_keystore: None,
      org_apache_felix_https_keystore_password: None,
      org_apache_felix_https_keystore_key_password: None,
      org_apache_felix_https_truststore: None,
      org_apache_felix_https_truststore_password: None,
      org_apache_felix_https_clientcertificate: None,
      org_apache_felix_http_context_path: None,
      org_apache_felix_http_mbeans: None,
      org_apache_felix_http_session_timeout: None,
      org_apache_felix_http_jetty_threadpool_max: None,
      org_apache_felix_http_jetty_acceptors: None,
      org_apache_felix_http_jetty_selectors: None,
      org_apache_felix_http_jetty_header_buffer_size: None,
      org_apache_felix_http_jetty_request_buffer_size: None,
      org_apache_felix_http_jetty_response_buffer_size: None,
      org_apache_felix_http_jetty_max_form_size: None,
      org_apache_felix_http_path_exclusions: None,
      org_apache_felix_https_jetty_ciphersuites_excluded: None,
      org_apache_felix_https_jetty_ciphersuites_included: None,
      org_apache_felix_http_jetty_send_server_header: None,
      org_apache_felix_https_jetty_protocols_included: None,
      org_apache_felix_https_jetty_protocols_excluded: None,
      org_apache_felix_proxy_load_balancer_connection_enable: None,
      org_apache_felix_https_jetty_renegotiate_allowed: None,
      org_apache_felix_https_jetty_session_cookie_http_only: None,
      org_apache_felix_https_jetty_session_cookie_secure: None,
      org_eclipse_jetty_servlet_session_id_path_parameter_name: None,
      org_eclipse_jetty_servlet_checking_remote_session_id_encoding: None,
      org_eclipse_jetty_servlet_session_cookie: None,
      org_eclipse_jetty_servlet_session_domain: None,
      org_eclipse_jetty_servlet_session_path: None,
      org_eclipse_jetty_servlet_max_age: None,
      org_apache_felix_http_name: None,
      org_apache_felix_jetty_gziphandler_enable: None,
      org_apache_felix_jetty_gzip_min_gzip_size: None,
      org_apache_felix_jetty_gzip_compression_level: None,
      org_apache_felix_jetty_gzip_inflate_buffer_size: None,
      org_apache_felix_jetty_gzip_sync_flush: None,
      org_apache_felix_jetty_gzip_excluded_user_agents: None,
      org_apache_felix_jetty_gzip_included_methods: None,
      org_apache_felix_jetty_gzip_excluded_methods: None,
      org_apache_felix_jetty_gzip_included_paths: None,
      org_apache_felix_jetty_gzip_excluded_paths: None,
      org_apache_felix_jetty_gzip_included_mime_types: None,
      org_apache_felix_jetty_gzip_excluded_mime_types: None,
      org_apache_felix_http_session_invalidate: None,
      org_apache_felix_http_session_uniqueid: None
    }
  }

  pub fn set_org_apache_felix_http_host(&mut self, org_apache_felix_http_host: ::models::ConfigNodePropertyString) {
    self.org_apache_felix_http_host = Some(org_apache_felix_http_host);
  }

  pub fn with_org_apache_felix_http_host(mut self, org_apache_felix_http_host: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_host = Some(org_apache_felix_http_host);
    self
  }

  pub fn org_apache_felix_http_host(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_felix_http_host.as_ref()
  }

  pub fn reset_org_apache_felix_http_host(&mut self) {
    self.org_apache_felix_http_host = None;
  }

  pub fn set_org_apache_felix_http_enable(&mut self, org_apache_felix_http_enable: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_http_enable = Some(org_apache_felix_http_enable);
  }

  pub fn with_org_apache_felix_http_enable(mut self, org_apache_felix_http_enable: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_enable = Some(org_apache_felix_http_enable);
    self
  }

  pub fn org_apache_felix_http_enable(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_http_enable.as_ref()
  }

  pub fn reset_org_apache_felix_http_enable(&mut self) {
    self.org_apache_felix_http_enable = None;
  }

  pub fn set_org_osgi_service_http_port(&mut self, org_osgi_service_http_port: ::models::ConfigNodePropertyInteger) {
    self.org_osgi_service_http_port = Some(org_osgi_service_http_port);
  }

  pub fn with_org_osgi_service_http_port(mut self, org_osgi_service_http_port: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_osgi_service_http_port = Some(org_osgi_service_http_port);
    self
  }

  pub fn org_osgi_service_http_port(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_osgi_service_http_port.as_ref()
  }

  pub fn reset_org_osgi_service_http_port(&mut self) {
    self.org_osgi_service_http_port = None;
  }

  pub fn set_org_apache_felix_http_timeout(&mut self, org_apache_felix_http_timeout: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_http_timeout = Some(org_apache_felix_http_timeout);
  }

  pub fn with_org_apache_felix_http_timeout(mut self, org_apache_felix_http_timeout: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_timeout = Some(org_apache_felix_http_timeout);
    self
  }

  pub fn org_apache_felix_http_timeout(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_http_timeout.as_ref()
  }

  pub fn reset_org_apache_felix_http_timeout(&mut self) {
    self.org_apache_felix_http_timeout = None;
  }

  pub fn set_org_apache_felix_https_enable(&mut self, org_apache_felix_https_enable: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_https_enable = Some(org_apache_felix_https_enable);
  }

  pub fn with_org_apache_felix_https_enable(mut self, org_apache_felix_https_enable: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_enable = Some(org_apache_felix_https_enable);
    self
  }

  pub fn org_apache_felix_https_enable(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_https_enable.as_ref()
  }

  pub fn reset_org_apache_felix_https_enable(&mut self) {
    self.org_apache_felix_https_enable = None;
  }

  pub fn set_org_osgi_service_http_port_secure(&mut self, org_osgi_service_http_port_secure: ::models::ConfigNodePropertyInteger) {
    self.org_osgi_service_http_port_secure = Some(org_osgi_service_http_port_secure);
  }

  pub fn with_org_osgi_service_http_port_secure(mut self, org_osgi_service_http_port_secure: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_osgi_service_http_port_secure = Some(org_osgi_service_http_port_secure);
    self
  }

  pub fn org_osgi_service_http_port_secure(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_osgi_service_http_port_secure.as_ref()
  }

  pub fn reset_org_osgi_service_http_port_secure(&mut self) {
    self.org_osgi_service_http_port_secure = None;
  }

  pub fn set_org_apache_felix_https_keystore(&mut self, org_apache_felix_https_keystore: ::models::ConfigNodePropertyString) {
    self.org_apache_felix_https_keystore = Some(org_apache_felix_https_keystore);
  }

  pub fn with_org_apache_felix_https_keystore(mut self, org_apache_felix_https_keystore: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_keystore = Some(org_apache_felix_https_keystore);
    self
  }

  pub fn org_apache_felix_https_keystore(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_felix_https_keystore.as_ref()
  }

  pub fn reset_org_apache_felix_https_keystore(&mut self) {
    self.org_apache_felix_https_keystore = None;
  }

  pub fn set_org_apache_felix_https_keystore_password(&mut self, org_apache_felix_https_keystore_password: ::models::ConfigNodePropertyString) {
    self.org_apache_felix_https_keystore_password = Some(org_apache_felix_https_keystore_password);
  }

  pub fn with_org_apache_felix_https_keystore_password(mut self, org_apache_felix_https_keystore_password: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_keystore_password = Some(org_apache_felix_https_keystore_password);
    self
  }

  pub fn org_apache_felix_https_keystore_password(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_felix_https_keystore_password.as_ref()
  }

  pub fn reset_org_apache_felix_https_keystore_password(&mut self) {
    self.org_apache_felix_https_keystore_password = None;
  }

  pub fn set_org_apache_felix_https_keystore_key_password(&mut self, org_apache_felix_https_keystore_key_password: ::models::ConfigNodePropertyString) {
    self.org_apache_felix_https_keystore_key_password = Some(org_apache_felix_https_keystore_key_password);
  }

  pub fn with_org_apache_felix_https_keystore_key_password(mut self, org_apache_felix_https_keystore_key_password: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_keystore_key_password = Some(org_apache_felix_https_keystore_key_password);
    self
  }

  pub fn org_apache_felix_https_keystore_key_password(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_felix_https_keystore_key_password.as_ref()
  }

  pub fn reset_org_apache_felix_https_keystore_key_password(&mut self) {
    self.org_apache_felix_https_keystore_key_password = None;
  }

  pub fn set_org_apache_felix_https_truststore(&mut self, org_apache_felix_https_truststore: ::models::ConfigNodePropertyString) {
    self.org_apache_felix_https_truststore = Some(org_apache_felix_https_truststore);
  }

  pub fn with_org_apache_felix_https_truststore(mut self, org_apache_felix_https_truststore: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_truststore = Some(org_apache_felix_https_truststore);
    self
  }

  pub fn org_apache_felix_https_truststore(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_felix_https_truststore.as_ref()
  }

  pub fn reset_org_apache_felix_https_truststore(&mut self) {
    self.org_apache_felix_https_truststore = None;
  }

  pub fn set_org_apache_felix_https_truststore_password(&mut self, org_apache_felix_https_truststore_password: ::models::ConfigNodePropertyString) {
    self.org_apache_felix_https_truststore_password = Some(org_apache_felix_https_truststore_password);
  }

  pub fn with_org_apache_felix_https_truststore_password(mut self, org_apache_felix_https_truststore_password: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_truststore_password = Some(org_apache_felix_https_truststore_password);
    self
  }

  pub fn org_apache_felix_https_truststore_password(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_felix_https_truststore_password.as_ref()
  }

  pub fn reset_org_apache_felix_https_truststore_password(&mut self) {
    self.org_apache_felix_https_truststore_password = None;
  }

  pub fn set_org_apache_felix_https_clientcertificate(&mut self, org_apache_felix_https_clientcertificate: ::models::ConfigNodePropertyDropDown) {
    self.org_apache_felix_https_clientcertificate = Some(org_apache_felix_https_clientcertificate);
  }

  pub fn with_org_apache_felix_https_clientcertificate(mut self, org_apache_felix_https_clientcertificate: ::models::ConfigNodePropertyDropDown) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_clientcertificate = Some(org_apache_felix_https_clientcertificate);
    self
  }

  pub fn org_apache_felix_https_clientcertificate(&self) -> Option<&::models::ConfigNodePropertyDropDown> {
    self.org_apache_felix_https_clientcertificate.as_ref()
  }

  pub fn reset_org_apache_felix_https_clientcertificate(&mut self) {
    self.org_apache_felix_https_clientcertificate = None;
  }

  pub fn set_org_apache_felix_http_context_path(&mut self, org_apache_felix_http_context_path: ::models::ConfigNodePropertyString) {
    self.org_apache_felix_http_context_path = Some(org_apache_felix_http_context_path);
  }

  pub fn with_org_apache_felix_http_context_path(mut self, org_apache_felix_http_context_path: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_context_path = Some(org_apache_felix_http_context_path);
    self
  }

  pub fn org_apache_felix_http_context_path(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_felix_http_context_path.as_ref()
  }

  pub fn reset_org_apache_felix_http_context_path(&mut self) {
    self.org_apache_felix_http_context_path = None;
  }

  pub fn set_org_apache_felix_http_mbeans(&mut self, org_apache_felix_http_mbeans: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_http_mbeans = Some(org_apache_felix_http_mbeans);
  }

  pub fn with_org_apache_felix_http_mbeans(mut self, org_apache_felix_http_mbeans: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_mbeans = Some(org_apache_felix_http_mbeans);
    self
  }

  pub fn org_apache_felix_http_mbeans(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_http_mbeans.as_ref()
  }

  pub fn reset_org_apache_felix_http_mbeans(&mut self) {
    self.org_apache_felix_http_mbeans = None;
  }

  pub fn set_org_apache_felix_http_session_timeout(&mut self, org_apache_felix_http_session_timeout: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_http_session_timeout = Some(org_apache_felix_http_session_timeout);
  }

  pub fn with_org_apache_felix_http_session_timeout(mut self, org_apache_felix_http_session_timeout: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_session_timeout = Some(org_apache_felix_http_session_timeout);
    self
  }

  pub fn org_apache_felix_http_session_timeout(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_http_session_timeout.as_ref()
  }

  pub fn reset_org_apache_felix_http_session_timeout(&mut self) {
    self.org_apache_felix_http_session_timeout = None;
  }

  pub fn set_org_apache_felix_http_jetty_threadpool_max(&mut self, org_apache_felix_http_jetty_threadpool_max: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_http_jetty_threadpool_max = Some(org_apache_felix_http_jetty_threadpool_max);
  }

  pub fn with_org_apache_felix_http_jetty_threadpool_max(mut self, org_apache_felix_http_jetty_threadpool_max: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_jetty_threadpool_max = Some(org_apache_felix_http_jetty_threadpool_max);
    self
  }

  pub fn org_apache_felix_http_jetty_threadpool_max(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_http_jetty_threadpool_max.as_ref()
  }

  pub fn reset_org_apache_felix_http_jetty_threadpool_max(&mut self) {
    self.org_apache_felix_http_jetty_threadpool_max = None;
  }

  pub fn set_org_apache_felix_http_jetty_acceptors(&mut self, org_apache_felix_http_jetty_acceptors: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_http_jetty_acceptors = Some(org_apache_felix_http_jetty_acceptors);
  }

  pub fn with_org_apache_felix_http_jetty_acceptors(mut self, org_apache_felix_http_jetty_acceptors: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_jetty_acceptors = Some(org_apache_felix_http_jetty_acceptors);
    self
  }

  pub fn org_apache_felix_http_jetty_acceptors(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_http_jetty_acceptors.as_ref()
  }

  pub fn reset_org_apache_felix_http_jetty_acceptors(&mut self) {
    self.org_apache_felix_http_jetty_acceptors = None;
  }

  pub fn set_org_apache_felix_http_jetty_selectors(&mut self, org_apache_felix_http_jetty_selectors: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_http_jetty_selectors = Some(org_apache_felix_http_jetty_selectors);
  }

  pub fn with_org_apache_felix_http_jetty_selectors(mut self, org_apache_felix_http_jetty_selectors: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_jetty_selectors = Some(org_apache_felix_http_jetty_selectors);
    self
  }

  pub fn org_apache_felix_http_jetty_selectors(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_http_jetty_selectors.as_ref()
  }

  pub fn reset_org_apache_felix_http_jetty_selectors(&mut self) {
    self.org_apache_felix_http_jetty_selectors = None;
  }

  pub fn set_org_apache_felix_http_jetty_header_buffer_size(&mut self, org_apache_felix_http_jetty_header_buffer_size: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_http_jetty_header_buffer_size = Some(org_apache_felix_http_jetty_header_buffer_size);
  }

  pub fn with_org_apache_felix_http_jetty_header_buffer_size(mut self, org_apache_felix_http_jetty_header_buffer_size: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_jetty_header_buffer_size = Some(org_apache_felix_http_jetty_header_buffer_size);
    self
  }

  pub fn org_apache_felix_http_jetty_header_buffer_size(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_http_jetty_header_buffer_size.as_ref()
  }

  pub fn reset_org_apache_felix_http_jetty_header_buffer_size(&mut self) {
    self.org_apache_felix_http_jetty_header_buffer_size = None;
  }

  pub fn set_org_apache_felix_http_jetty_request_buffer_size(&mut self, org_apache_felix_http_jetty_request_buffer_size: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_http_jetty_request_buffer_size = Some(org_apache_felix_http_jetty_request_buffer_size);
  }

  pub fn with_org_apache_felix_http_jetty_request_buffer_size(mut self, org_apache_felix_http_jetty_request_buffer_size: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_jetty_request_buffer_size = Some(org_apache_felix_http_jetty_request_buffer_size);
    self
  }

  pub fn org_apache_felix_http_jetty_request_buffer_size(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_http_jetty_request_buffer_size.as_ref()
  }

  pub fn reset_org_apache_felix_http_jetty_request_buffer_size(&mut self) {
    self.org_apache_felix_http_jetty_request_buffer_size = None;
  }

  pub fn set_org_apache_felix_http_jetty_response_buffer_size(&mut self, org_apache_felix_http_jetty_response_buffer_size: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_http_jetty_response_buffer_size = Some(org_apache_felix_http_jetty_response_buffer_size);
  }

  pub fn with_org_apache_felix_http_jetty_response_buffer_size(mut self, org_apache_felix_http_jetty_response_buffer_size: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_jetty_response_buffer_size = Some(org_apache_felix_http_jetty_response_buffer_size);
    self
  }

  pub fn org_apache_felix_http_jetty_response_buffer_size(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_http_jetty_response_buffer_size.as_ref()
  }

  pub fn reset_org_apache_felix_http_jetty_response_buffer_size(&mut self) {
    self.org_apache_felix_http_jetty_response_buffer_size = None;
  }

  pub fn set_org_apache_felix_http_jetty_max_form_size(&mut self, org_apache_felix_http_jetty_max_form_size: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_http_jetty_max_form_size = Some(org_apache_felix_http_jetty_max_form_size);
  }

  pub fn with_org_apache_felix_http_jetty_max_form_size(mut self, org_apache_felix_http_jetty_max_form_size: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_jetty_max_form_size = Some(org_apache_felix_http_jetty_max_form_size);
    self
  }

  pub fn org_apache_felix_http_jetty_max_form_size(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_http_jetty_max_form_size.as_ref()
  }

  pub fn reset_org_apache_felix_http_jetty_max_form_size(&mut self) {
    self.org_apache_felix_http_jetty_max_form_size = None;
  }

  pub fn set_org_apache_felix_http_path_exclusions(&mut self, org_apache_felix_http_path_exclusions: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_http_path_exclusions = Some(org_apache_felix_http_path_exclusions);
  }

  pub fn with_org_apache_felix_http_path_exclusions(mut self, org_apache_felix_http_path_exclusions: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_path_exclusions = Some(org_apache_felix_http_path_exclusions);
    self
  }

  pub fn org_apache_felix_http_path_exclusions(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_http_path_exclusions.as_ref()
  }

  pub fn reset_org_apache_felix_http_path_exclusions(&mut self) {
    self.org_apache_felix_http_path_exclusions = None;
  }

  pub fn set_org_apache_felix_https_jetty_ciphersuites_excluded(&mut self, org_apache_felix_https_jetty_ciphersuites_excluded: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_https_jetty_ciphersuites_excluded = Some(org_apache_felix_https_jetty_ciphersuites_excluded);
  }

  pub fn with_org_apache_felix_https_jetty_ciphersuites_excluded(mut self, org_apache_felix_https_jetty_ciphersuites_excluded: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_jetty_ciphersuites_excluded = Some(org_apache_felix_https_jetty_ciphersuites_excluded);
    self
  }

  pub fn org_apache_felix_https_jetty_ciphersuites_excluded(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_https_jetty_ciphersuites_excluded.as_ref()
  }

  pub fn reset_org_apache_felix_https_jetty_ciphersuites_excluded(&mut self) {
    self.org_apache_felix_https_jetty_ciphersuites_excluded = None;
  }

  pub fn set_org_apache_felix_https_jetty_ciphersuites_included(&mut self, org_apache_felix_https_jetty_ciphersuites_included: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_https_jetty_ciphersuites_included = Some(org_apache_felix_https_jetty_ciphersuites_included);
  }

  pub fn with_org_apache_felix_https_jetty_ciphersuites_included(mut self, org_apache_felix_https_jetty_ciphersuites_included: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_jetty_ciphersuites_included = Some(org_apache_felix_https_jetty_ciphersuites_included);
    self
  }

  pub fn org_apache_felix_https_jetty_ciphersuites_included(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_https_jetty_ciphersuites_included.as_ref()
  }

  pub fn reset_org_apache_felix_https_jetty_ciphersuites_included(&mut self) {
    self.org_apache_felix_https_jetty_ciphersuites_included = None;
  }

  pub fn set_org_apache_felix_http_jetty_send_server_header(&mut self, org_apache_felix_http_jetty_send_server_header: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_http_jetty_send_server_header = Some(org_apache_felix_http_jetty_send_server_header);
  }

  pub fn with_org_apache_felix_http_jetty_send_server_header(mut self, org_apache_felix_http_jetty_send_server_header: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_jetty_send_server_header = Some(org_apache_felix_http_jetty_send_server_header);
    self
  }

  pub fn org_apache_felix_http_jetty_send_server_header(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_http_jetty_send_server_header.as_ref()
  }

  pub fn reset_org_apache_felix_http_jetty_send_server_header(&mut self) {
    self.org_apache_felix_http_jetty_send_server_header = None;
  }

  pub fn set_org_apache_felix_https_jetty_protocols_included(&mut self, org_apache_felix_https_jetty_protocols_included: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_https_jetty_protocols_included = Some(org_apache_felix_https_jetty_protocols_included);
  }

  pub fn with_org_apache_felix_https_jetty_protocols_included(mut self, org_apache_felix_https_jetty_protocols_included: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_jetty_protocols_included = Some(org_apache_felix_https_jetty_protocols_included);
    self
  }

  pub fn org_apache_felix_https_jetty_protocols_included(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_https_jetty_protocols_included.as_ref()
  }

  pub fn reset_org_apache_felix_https_jetty_protocols_included(&mut self) {
    self.org_apache_felix_https_jetty_protocols_included = None;
  }

  pub fn set_org_apache_felix_https_jetty_protocols_excluded(&mut self, org_apache_felix_https_jetty_protocols_excluded: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_https_jetty_protocols_excluded = Some(org_apache_felix_https_jetty_protocols_excluded);
  }

  pub fn with_org_apache_felix_https_jetty_protocols_excluded(mut self, org_apache_felix_https_jetty_protocols_excluded: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_jetty_protocols_excluded = Some(org_apache_felix_https_jetty_protocols_excluded);
    self
  }

  pub fn org_apache_felix_https_jetty_protocols_excluded(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_https_jetty_protocols_excluded.as_ref()
  }

  pub fn reset_org_apache_felix_https_jetty_protocols_excluded(&mut self) {
    self.org_apache_felix_https_jetty_protocols_excluded = None;
  }

  pub fn set_org_apache_felix_proxy_load_balancer_connection_enable(&mut self, org_apache_felix_proxy_load_balancer_connection_enable: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_proxy_load_balancer_connection_enable = Some(org_apache_felix_proxy_load_balancer_connection_enable);
  }

  pub fn with_org_apache_felix_proxy_load_balancer_connection_enable(mut self, org_apache_felix_proxy_load_balancer_connection_enable: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_proxy_load_balancer_connection_enable = Some(org_apache_felix_proxy_load_balancer_connection_enable);
    self
  }

  pub fn org_apache_felix_proxy_load_balancer_connection_enable(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_proxy_load_balancer_connection_enable.as_ref()
  }

  pub fn reset_org_apache_felix_proxy_load_balancer_connection_enable(&mut self) {
    self.org_apache_felix_proxy_load_balancer_connection_enable = None;
  }

  pub fn set_org_apache_felix_https_jetty_renegotiate_allowed(&mut self, org_apache_felix_https_jetty_renegotiate_allowed: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_https_jetty_renegotiate_allowed = Some(org_apache_felix_https_jetty_renegotiate_allowed);
  }

  pub fn with_org_apache_felix_https_jetty_renegotiate_allowed(mut self, org_apache_felix_https_jetty_renegotiate_allowed: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_jetty_renegotiate_allowed = Some(org_apache_felix_https_jetty_renegotiate_allowed);
    self
  }

  pub fn org_apache_felix_https_jetty_renegotiate_allowed(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_https_jetty_renegotiate_allowed.as_ref()
  }

  pub fn reset_org_apache_felix_https_jetty_renegotiate_allowed(&mut self) {
    self.org_apache_felix_https_jetty_renegotiate_allowed = None;
  }

  pub fn set_org_apache_felix_https_jetty_session_cookie_http_only(&mut self, org_apache_felix_https_jetty_session_cookie_http_only: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_https_jetty_session_cookie_http_only = Some(org_apache_felix_https_jetty_session_cookie_http_only);
  }

  pub fn with_org_apache_felix_https_jetty_session_cookie_http_only(mut self, org_apache_felix_https_jetty_session_cookie_http_only: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_jetty_session_cookie_http_only = Some(org_apache_felix_https_jetty_session_cookie_http_only);
    self
  }

  pub fn org_apache_felix_https_jetty_session_cookie_http_only(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_https_jetty_session_cookie_http_only.as_ref()
  }

  pub fn reset_org_apache_felix_https_jetty_session_cookie_http_only(&mut self) {
    self.org_apache_felix_https_jetty_session_cookie_http_only = None;
  }

  pub fn set_org_apache_felix_https_jetty_session_cookie_secure(&mut self, org_apache_felix_https_jetty_session_cookie_secure: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_https_jetty_session_cookie_secure = Some(org_apache_felix_https_jetty_session_cookie_secure);
  }

  pub fn with_org_apache_felix_https_jetty_session_cookie_secure(mut self, org_apache_felix_https_jetty_session_cookie_secure: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_https_jetty_session_cookie_secure = Some(org_apache_felix_https_jetty_session_cookie_secure);
    self
  }

  pub fn org_apache_felix_https_jetty_session_cookie_secure(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_https_jetty_session_cookie_secure.as_ref()
  }

  pub fn reset_org_apache_felix_https_jetty_session_cookie_secure(&mut self) {
    self.org_apache_felix_https_jetty_session_cookie_secure = None;
  }

  pub fn set_org_eclipse_jetty_servlet_session_id_path_parameter_name(&mut self, org_eclipse_jetty_servlet_session_id_path_parameter_name: ::models::ConfigNodePropertyString) {
    self.org_eclipse_jetty_servlet_session_id_path_parameter_name = Some(org_eclipse_jetty_servlet_session_id_path_parameter_name);
  }

  pub fn with_org_eclipse_jetty_servlet_session_id_path_parameter_name(mut self, org_eclipse_jetty_servlet_session_id_path_parameter_name: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_eclipse_jetty_servlet_session_id_path_parameter_name = Some(org_eclipse_jetty_servlet_session_id_path_parameter_name);
    self
  }

  pub fn org_eclipse_jetty_servlet_session_id_path_parameter_name(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_eclipse_jetty_servlet_session_id_path_parameter_name.as_ref()
  }

  pub fn reset_org_eclipse_jetty_servlet_session_id_path_parameter_name(&mut self) {
    self.org_eclipse_jetty_servlet_session_id_path_parameter_name = None;
  }

  pub fn set_org_eclipse_jetty_servlet_checking_remote_session_id_encoding(&mut self, org_eclipse_jetty_servlet_checking_remote_session_id_encoding: ::models::ConfigNodePropertyBoolean) {
    self.org_eclipse_jetty_servlet_checking_remote_session_id_encoding = Some(org_eclipse_jetty_servlet_checking_remote_session_id_encoding);
  }

  pub fn with_org_eclipse_jetty_servlet_checking_remote_session_id_encoding(mut self, org_eclipse_jetty_servlet_checking_remote_session_id_encoding: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_eclipse_jetty_servlet_checking_remote_session_id_encoding = Some(org_eclipse_jetty_servlet_checking_remote_session_id_encoding);
    self
  }

  pub fn org_eclipse_jetty_servlet_checking_remote_session_id_encoding(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_eclipse_jetty_servlet_checking_remote_session_id_encoding.as_ref()
  }

  pub fn reset_org_eclipse_jetty_servlet_checking_remote_session_id_encoding(&mut self) {
    self.org_eclipse_jetty_servlet_checking_remote_session_id_encoding = None;
  }

  pub fn set_org_eclipse_jetty_servlet_session_cookie(&mut self, org_eclipse_jetty_servlet_session_cookie: ::models::ConfigNodePropertyString) {
    self.org_eclipse_jetty_servlet_session_cookie = Some(org_eclipse_jetty_servlet_session_cookie);
  }

  pub fn with_org_eclipse_jetty_servlet_session_cookie(mut self, org_eclipse_jetty_servlet_session_cookie: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_eclipse_jetty_servlet_session_cookie = Some(org_eclipse_jetty_servlet_session_cookie);
    self
  }

  pub fn org_eclipse_jetty_servlet_session_cookie(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_eclipse_jetty_servlet_session_cookie.as_ref()
  }

  pub fn reset_org_eclipse_jetty_servlet_session_cookie(&mut self) {
    self.org_eclipse_jetty_servlet_session_cookie = None;
  }

  pub fn set_org_eclipse_jetty_servlet_session_domain(&mut self, org_eclipse_jetty_servlet_session_domain: ::models::ConfigNodePropertyString) {
    self.org_eclipse_jetty_servlet_session_domain = Some(org_eclipse_jetty_servlet_session_domain);
  }

  pub fn with_org_eclipse_jetty_servlet_session_domain(mut self, org_eclipse_jetty_servlet_session_domain: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_eclipse_jetty_servlet_session_domain = Some(org_eclipse_jetty_servlet_session_domain);
    self
  }

  pub fn org_eclipse_jetty_servlet_session_domain(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_eclipse_jetty_servlet_session_domain.as_ref()
  }

  pub fn reset_org_eclipse_jetty_servlet_session_domain(&mut self) {
    self.org_eclipse_jetty_servlet_session_domain = None;
  }

  pub fn set_org_eclipse_jetty_servlet_session_path(&mut self, org_eclipse_jetty_servlet_session_path: ::models::ConfigNodePropertyString) {
    self.org_eclipse_jetty_servlet_session_path = Some(org_eclipse_jetty_servlet_session_path);
  }

  pub fn with_org_eclipse_jetty_servlet_session_path(mut self, org_eclipse_jetty_servlet_session_path: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_eclipse_jetty_servlet_session_path = Some(org_eclipse_jetty_servlet_session_path);
    self
  }

  pub fn org_eclipse_jetty_servlet_session_path(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_eclipse_jetty_servlet_session_path.as_ref()
  }

  pub fn reset_org_eclipse_jetty_servlet_session_path(&mut self) {
    self.org_eclipse_jetty_servlet_session_path = None;
  }

  pub fn set_org_eclipse_jetty_servlet_max_age(&mut self, org_eclipse_jetty_servlet_max_age: ::models::ConfigNodePropertyInteger) {
    self.org_eclipse_jetty_servlet_max_age = Some(org_eclipse_jetty_servlet_max_age);
  }

  pub fn with_org_eclipse_jetty_servlet_max_age(mut self, org_eclipse_jetty_servlet_max_age: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_eclipse_jetty_servlet_max_age = Some(org_eclipse_jetty_servlet_max_age);
    self
  }

  pub fn org_eclipse_jetty_servlet_max_age(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_eclipse_jetty_servlet_max_age.as_ref()
  }

  pub fn reset_org_eclipse_jetty_servlet_max_age(&mut self) {
    self.org_eclipse_jetty_servlet_max_age = None;
  }

  pub fn set_org_apache_felix_http_name(&mut self, org_apache_felix_http_name: ::models::ConfigNodePropertyString) {
    self.org_apache_felix_http_name = Some(org_apache_felix_http_name);
  }

  pub fn with_org_apache_felix_http_name(mut self, org_apache_felix_http_name: ::models::ConfigNodePropertyString) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_name = Some(org_apache_felix_http_name);
    self
  }

  pub fn org_apache_felix_http_name(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.org_apache_felix_http_name.as_ref()
  }

  pub fn reset_org_apache_felix_http_name(&mut self) {
    self.org_apache_felix_http_name = None;
  }

  pub fn set_org_apache_felix_jetty_gziphandler_enable(&mut self, org_apache_felix_jetty_gziphandler_enable: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_jetty_gziphandler_enable = Some(org_apache_felix_jetty_gziphandler_enable);
  }

  pub fn with_org_apache_felix_jetty_gziphandler_enable(mut self, org_apache_felix_jetty_gziphandler_enable: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gziphandler_enable = Some(org_apache_felix_jetty_gziphandler_enable);
    self
  }

  pub fn org_apache_felix_jetty_gziphandler_enable(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_jetty_gziphandler_enable.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gziphandler_enable(&mut self) {
    self.org_apache_felix_jetty_gziphandler_enable = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_min_gzip_size(&mut self, org_apache_felix_jetty_gzip_min_gzip_size: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_jetty_gzip_min_gzip_size = Some(org_apache_felix_jetty_gzip_min_gzip_size);
  }

  pub fn with_org_apache_felix_jetty_gzip_min_gzip_size(mut self, org_apache_felix_jetty_gzip_min_gzip_size: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_min_gzip_size = Some(org_apache_felix_jetty_gzip_min_gzip_size);
    self
  }

  pub fn org_apache_felix_jetty_gzip_min_gzip_size(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_jetty_gzip_min_gzip_size.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_min_gzip_size(&mut self) {
    self.org_apache_felix_jetty_gzip_min_gzip_size = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_compression_level(&mut self, org_apache_felix_jetty_gzip_compression_level: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_jetty_gzip_compression_level = Some(org_apache_felix_jetty_gzip_compression_level);
  }

  pub fn with_org_apache_felix_jetty_gzip_compression_level(mut self, org_apache_felix_jetty_gzip_compression_level: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_compression_level = Some(org_apache_felix_jetty_gzip_compression_level);
    self
  }

  pub fn org_apache_felix_jetty_gzip_compression_level(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_jetty_gzip_compression_level.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_compression_level(&mut self) {
    self.org_apache_felix_jetty_gzip_compression_level = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_inflate_buffer_size(&mut self, org_apache_felix_jetty_gzip_inflate_buffer_size: ::models::ConfigNodePropertyInteger) {
    self.org_apache_felix_jetty_gzip_inflate_buffer_size = Some(org_apache_felix_jetty_gzip_inflate_buffer_size);
  }

  pub fn with_org_apache_felix_jetty_gzip_inflate_buffer_size(mut self, org_apache_felix_jetty_gzip_inflate_buffer_size: ::models::ConfigNodePropertyInteger) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_inflate_buffer_size = Some(org_apache_felix_jetty_gzip_inflate_buffer_size);
    self
  }

  pub fn org_apache_felix_jetty_gzip_inflate_buffer_size(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.org_apache_felix_jetty_gzip_inflate_buffer_size.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_inflate_buffer_size(&mut self) {
    self.org_apache_felix_jetty_gzip_inflate_buffer_size = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_sync_flush(&mut self, org_apache_felix_jetty_gzip_sync_flush: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_jetty_gzip_sync_flush = Some(org_apache_felix_jetty_gzip_sync_flush);
  }

  pub fn with_org_apache_felix_jetty_gzip_sync_flush(mut self, org_apache_felix_jetty_gzip_sync_flush: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_sync_flush = Some(org_apache_felix_jetty_gzip_sync_flush);
    self
  }

  pub fn org_apache_felix_jetty_gzip_sync_flush(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_jetty_gzip_sync_flush.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_sync_flush(&mut self) {
    self.org_apache_felix_jetty_gzip_sync_flush = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_excluded_user_agents(&mut self, org_apache_felix_jetty_gzip_excluded_user_agents: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_jetty_gzip_excluded_user_agents = Some(org_apache_felix_jetty_gzip_excluded_user_agents);
  }

  pub fn with_org_apache_felix_jetty_gzip_excluded_user_agents(mut self, org_apache_felix_jetty_gzip_excluded_user_agents: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_excluded_user_agents = Some(org_apache_felix_jetty_gzip_excluded_user_agents);
    self
  }

  pub fn org_apache_felix_jetty_gzip_excluded_user_agents(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_jetty_gzip_excluded_user_agents.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_excluded_user_agents(&mut self) {
    self.org_apache_felix_jetty_gzip_excluded_user_agents = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_included_methods(&mut self, org_apache_felix_jetty_gzip_included_methods: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_jetty_gzip_included_methods = Some(org_apache_felix_jetty_gzip_included_methods);
  }

  pub fn with_org_apache_felix_jetty_gzip_included_methods(mut self, org_apache_felix_jetty_gzip_included_methods: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_included_methods = Some(org_apache_felix_jetty_gzip_included_methods);
    self
  }

  pub fn org_apache_felix_jetty_gzip_included_methods(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_jetty_gzip_included_methods.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_included_methods(&mut self) {
    self.org_apache_felix_jetty_gzip_included_methods = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_excluded_methods(&mut self, org_apache_felix_jetty_gzip_excluded_methods: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_jetty_gzip_excluded_methods = Some(org_apache_felix_jetty_gzip_excluded_methods);
  }

  pub fn with_org_apache_felix_jetty_gzip_excluded_methods(mut self, org_apache_felix_jetty_gzip_excluded_methods: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_excluded_methods = Some(org_apache_felix_jetty_gzip_excluded_methods);
    self
  }

  pub fn org_apache_felix_jetty_gzip_excluded_methods(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_jetty_gzip_excluded_methods.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_excluded_methods(&mut self) {
    self.org_apache_felix_jetty_gzip_excluded_methods = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_included_paths(&mut self, org_apache_felix_jetty_gzip_included_paths: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_jetty_gzip_included_paths = Some(org_apache_felix_jetty_gzip_included_paths);
  }

  pub fn with_org_apache_felix_jetty_gzip_included_paths(mut self, org_apache_felix_jetty_gzip_included_paths: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_included_paths = Some(org_apache_felix_jetty_gzip_included_paths);
    self
  }

  pub fn org_apache_felix_jetty_gzip_included_paths(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_jetty_gzip_included_paths.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_included_paths(&mut self) {
    self.org_apache_felix_jetty_gzip_included_paths = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_excluded_paths(&mut self, org_apache_felix_jetty_gzip_excluded_paths: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_jetty_gzip_excluded_paths = Some(org_apache_felix_jetty_gzip_excluded_paths);
  }

  pub fn with_org_apache_felix_jetty_gzip_excluded_paths(mut self, org_apache_felix_jetty_gzip_excluded_paths: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_excluded_paths = Some(org_apache_felix_jetty_gzip_excluded_paths);
    self
  }

  pub fn org_apache_felix_jetty_gzip_excluded_paths(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_jetty_gzip_excluded_paths.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_excluded_paths(&mut self) {
    self.org_apache_felix_jetty_gzip_excluded_paths = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_included_mime_types(&mut self, org_apache_felix_jetty_gzip_included_mime_types: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_jetty_gzip_included_mime_types = Some(org_apache_felix_jetty_gzip_included_mime_types);
  }

  pub fn with_org_apache_felix_jetty_gzip_included_mime_types(mut self, org_apache_felix_jetty_gzip_included_mime_types: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_included_mime_types = Some(org_apache_felix_jetty_gzip_included_mime_types);
    self
  }

  pub fn org_apache_felix_jetty_gzip_included_mime_types(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_jetty_gzip_included_mime_types.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_included_mime_types(&mut self) {
    self.org_apache_felix_jetty_gzip_included_mime_types = None;
  }

  pub fn set_org_apache_felix_jetty_gzip_excluded_mime_types(&mut self, org_apache_felix_jetty_gzip_excluded_mime_types: ::models::ConfigNodePropertyArray) {
    self.org_apache_felix_jetty_gzip_excluded_mime_types = Some(org_apache_felix_jetty_gzip_excluded_mime_types);
  }

  pub fn with_org_apache_felix_jetty_gzip_excluded_mime_types(mut self, org_apache_felix_jetty_gzip_excluded_mime_types: ::models::ConfigNodePropertyArray) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_jetty_gzip_excluded_mime_types = Some(org_apache_felix_jetty_gzip_excluded_mime_types);
    self
  }

  pub fn org_apache_felix_jetty_gzip_excluded_mime_types(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.org_apache_felix_jetty_gzip_excluded_mime_types.as_ref()
  }

  pub fn reset_org_apache_felix_jetty_gzip_excluded_mime_types(&mut self) {
    self.org_apache_felix_jetty_gzip_excluded_mime_types = None;
  }

  pub fn set_org_apache_felix_http_session_invalidate(&mut self, org_apache_felix_http_session_invalidate: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_http_session_invalidate = Some(org_apache_felix_http_session_invalidate);
  }

  pub fn with_org_apache_felix_http_session_invalidate(mut self, org_apache_felix_http_session_invalidate: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_session_invalidate = Some(org_apache_felix_http_session_invalidate);
    self
  }

  pub fn org_apache_felix_http_session_invalidate(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_http_session_invalidate.as_ref()
  }

  pub fn reset_org_apache_felix_http_session_invalidate(&mut self) {
    self.org_apache_felix_http_session_invalidate = None;
  }

  pub fn set_org_apache_felix_http_session_uniqueid(&mut self, org_apache_felix_http_session_uniqueid: ::models::ConfigNodePropertyBoolean) {
    self.org_apache_felix_http_session_uniqueid = Some(org_apache_felix_http_session_uniqueid);
  }

  pub fn with_org_apache_felix_http_session_uniqueid(mut self, org_apache_felix_http_session_uniqueid: ::models::ConfigNodePropertyBoolean) -> OrgApacheFelixHttpProperties {
    self.org_apache_felix_http_session_uniqueid = Some(org_apache_felix_http_session_uniqueid);
    self
  }

  pub fn org_apache_felix_http_session_uniqueid(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.org_apache_felix_http_session_uniqueid.as_ref()
  }

  pub fn reset_org_apache_felix_http_session_uniqueid(&mut self) {
    self.org_apache_felix_http_session_uniqueid = None;
  }

}



