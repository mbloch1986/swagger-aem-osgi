/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingServletsPostImplSlingPostServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::OAIOrgApacheSlingServletsPostImplSlingPostServletProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::OAIOrgApacheSlingServletsPostImplSlingPostServletProperties() {
    this->init();
}

OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::~OAIOrgApacheSlingServletsPostImplSlingPostServletProperties() {
    
}

void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::init() {
    m_servlet_post_date_formats_isSet = false;
    m_servlet_post_node_name_hints_isSet = false;
    m_servlet_post_node_name_max_length_isSet = false;
    m_servlet_post_checkin_new_versionable_nodes_isSet = false;
    m_servlet_post_auto_checkout_isSet = false;
    m_servlet_post_auto_checkin_isSet = false;
    m_servlet_post_ignore_pattern_isSet = false;
}

void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(servlet_post_date_formats, json[QString("servlet.post.dateFormats")]);
    
    ::OpenAPI::fromJsonValue(servlet_post_node_name_hints, json[QString("servlet.post.nodeNameHints")]);
    
    ::OpenAPI::fromJsonValue(servlet_post_node_name_max_length, json[QString("servlet.post.nodeNameMaxLength")]);
    
    ::OpenAPI::fromJsonValue(servlet_post_checkin_new_versionable_nodes, json[QString("servlet.post.checkinNewVersionableNodes")]);
    
    ::OpenAPI::fromJsonValue(servlet_post_auto_checkout, json[QString("servlet.post.autoCheckout")]);
    
    ::OpenAPI::fromJsonValue(servlet_post_auto_checkin, json[QString("servlet.post.autoCheckin")]);
    
    ::OpenAPI::fromJsonValue(servlet_post_ignore_pattern, json[QString("servlet.post.ignorePattern")]);
    
}

QString
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::asJsonObject() const {
    QJsonObject obj;
	if(servlet_post_date_formats.isSet()){
        obj.insert(QString("servlet.post.dateFormats"), ::OpenAPI::toJsonValue(servlet_post_date_formats));
    }
	if(servlet_post_node_name_hints.isSet()){
        obj.insert(QString("servlet.post.nodeNameHints"), ::OpenAPI::toJsonValue(servlet_post_node_name_hints));
    }
	if(servlet_post_node_name_max_length.isSet()){
        obj.insert(QString("servlet.post.nodeNameMaxLength"), ::OpenAPI::toJsonValue(servlet_post_node_name_max_length));
    }
	if(servlet_post_checkin_new_versionable_nodes.isSet()){
        obj.insert(QString("servlet.post.checkinNewVersionableNodes"), ::OpenAPI::toJsonValue(servlet_post_checkin_new_versionable_nodes));
    }
	if(servlet_post_auto_checkout.isSet()){
        obj.insert(QString("servlet.post.autoCheckout"), ::OpenAPI::toJsonValue(servlet_post_auto_checkout));
    }
	if(servlet_post_auto_checkin.isSet()){
        obj.insert(QString("servlet.post.autoCheckin"), ::OpenAPI::toJsonValue(servlet_post_auto_checkin));
    }
	if(servlet_post_ignore_pattern.isSet()){
        obj.insert(QString("servlet.post.ignorePattern"), ::OpenAPI::toJsonValue(servlet_post_ignore_pattern));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::getServletPostDateFormats() const {
    return servlet_post_date_formats;
}
void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::setServletPostDateFormats(const OAIConfigNodePropertyArray &servlet_post_date_formats) {
    this->servlet_post_date_formats = servlet_post_date_formats;
    this->m_servlet_post_date_formats_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::getServletPostNodeNameHints() const {
    return servlet_post_node_name_hints;
}
void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::setServletPostNodeNameHints(const OAIConfigNodePropertyArray &servlet_post_node_name_hints) {
    this->servlet_post_node_name_hints = servlet_post_node_name_hints;
    this->m_servlet_post_node_name_hints_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::getServletPostNodeNameMaxLength() const {
    return servlet_post_node_name_max_length;
}
void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::setServletPostNodeNameMaxLength(const OAIConfigNodePropertyInteger &servlet_post_node_name_max_length) {
    this->servlet_post_node_name_max_length = servlet_post_node_name_max_length;
    this->m_servlet_post_node_name_max_length_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::getServletPostCheckinNewVersionableNodes() const {
    return servlet_post_checkin_new_versionable_nodes;
}
void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::setServletPostCheckinNewVersionableNodes(const OAIConfigNodePropertyBoolean &servlet_post_checkin_new_versionable_nodes) {
    this->servlet_post_checkin_new_versionable_nodes = servlet_post_checkin_new_versionable_nodes;
    this->m_servlet_post_checkin_new_versionable_nodes_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::getServletPostAutoCheckout() const {
    return servlet_post_auto_checkout;
}
void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::setServletPostAutoCheckout(const OAIConfigNodePropertyBoolean &servlet_post_auto_checkout) {
    this->servlet_post_auto_checkout = servlet_post_auto_checkout;
    this->m_servlet_post_auto_checkout_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::getServletPostAutoCheckin() const {
    return servlet_post_auto_checkin;
}
void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::setServletPostAutoCheckin(const OAIConfigNodePropertyBoolean &servlet_post_auto_checkin) {
    this->servlet_post_auto_checkin = servlet_post_auto_checkin;
    this->m_servlet_post_auto_checkin_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::getServletPostIgnorePattern() const {
    return servlet_post_ignore_pattern;
}
void
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::setServletPostIgnorePattern(const OAIConfigNodePropertyString &servlet_post_ignore_pattern) {
    this->servlet_post_ignore_pattern = servlet_post_ignore_pattern;
    this->m_servlet_post_ignore_pattern_isSet = true;
}


bool
OAIOrgApacheSlingServletsPostImplSlingPostServletProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(servlet_post_date_formats.isSet()){ isObjectUpdated = true; break;}
    
        if(servlet_post_node_name_hints.isSet()){ isObjectUpdated = true; break;}
    
        if(servlet_post_node_name_max_length.isSet()){ isObjectUpdated = true; break;}
    
        if(servlet_post_checkin_new_versionable_nodes.isSet()){ isObjectUpdated = true; break;}
    
        if(servlet_post_auto_checkout.isSet()){ isObjectUpdated = true; break;}
    
        if(servlet_post_auto_checkin.isSet()){ isObjectUpdated = true; break;}
    
        if(servlet_post_ignore_pattern.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

