/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamCoreImplLightboxLightboxServletProperties {
  #[serde(rename = "sling.servlet.paths")]
  sling_servlet_paths: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "sling.servlet.methods")]
  sling_servlet_methods: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "cq.dam.enable.anonymous")]
  cq_dam_enable_anonymous: Option<::models::ConfigNodePropertyBoolean>
}

impl ComDayCqDamCoreImplLightboxLightboxServletProperties {
  pub fn new() -> ComDayCqDamCoreImplLightboxLightboxServletProperties {
    ComDayCqDamCoreImplLightboxLightboxServletProperties {
      sling_servlet_paths: None,
      sling_servlet_methods: None,
      cq_dam_enable_anonymous: None
    }
  }

  pub fn set_sling_servlet_paths(&mut self, sling_servlet_paths: ::models::ConfigNodePropertyString) {
    self.sling_servlet_paths = Some(sling_servlet_paths);
  }

  pub fn with_sling_servlet_paths(mut self, sling_servlet_paths: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplLightboxLightboxServletProperties {
    self.sling_servlet_paths = Some(sling_servlet_paths);
    self
  }

  pub fn sling_servlet_paths(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.sling_servlet_paths.as_ref()
  }

  pub fn reset_sling_servlet_paths(&mut self) {
    self.sling_servlet_paths = None;
  }

  pub fn set_sling_servlet_methods(&mut self, sling_servlet_methods: ::models::ConfigNodePropertyArray) {
    self.sling_servlet_methods = Some(sling_servlet_methods);
  }

  pub fn with_sling_servlet_methods(mut self, sling_servlet_methods: ::models::ConfigNodePropertyArray) -> ComDayCqDamCoreImplLightboxLightboxServletProperties {
    self.sling_servlet_methods = Some(sling_servlet_methods);
    self
  }

  pub fn sling_servlet_methods(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.sling_servlet_methods.as_ref()
  }

  pub fn reset_sling_servlet_methods(&mut self) {
    self.sling_servlet_methods = None;
  }

  pub fn set_cq_dam_enable_anonymous(&mut self, cq_dam_enable_anonymous: ::models::ConfigNodePropertyBoolean) {
    self.cq_dam_enable_anonymous = Some(cq_dam_enable_anonymous);
  }

  pub fn with_cq_dam_enable_anonymous(mut self, cq_dam_enable_anonymous: ::models::ConfigNodePropertyBoolean) -> ComDayCqDamCoreImplLightboxLightboxServletProperties {
    self.cq_dam_enable_anonymous = Some(cq_dam_enable_anonymous);
    self
  }

  pub fn cq_dam_enable_anonymous(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.cq_dam_enable_anonymous.as_ref()
  }

  pub fn reset_cq_dam_enable_anonymous(&mut self) {
    self.cq_dam_enable_anonymous = None;
  }

}



