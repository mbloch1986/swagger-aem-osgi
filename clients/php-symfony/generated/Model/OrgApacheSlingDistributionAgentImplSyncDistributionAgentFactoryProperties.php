<?php
/**
 * OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("name")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $name;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("title")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $title;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("details")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $details;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("enabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $enabled;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("serviceName")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $serviceName;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     * @SerializedName("log.level")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     */
    protected $logLevel;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("queue.processing.enabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $queueProcessingEnabled;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("passiveQueues")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $passiveQueues;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("packageExporter.endpoints")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $packageExporterEndpoints;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("packageImporter.endpoints")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $packageImporterEndpoints;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     * @SerializedName("retry.strategy")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     */
    protected $retryStrategy;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("retry.attempts")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $retryAttempts;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("pull.items")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $pullItems;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("http.conn.timeout")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $httpConnTimeout;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("requestAuthorizationStrategy.target")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $requestAuthorizationStrategyTarget;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("transportSecretProvider.target")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $transportSecretProviderTarget;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("packageBuilder.target")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $packageBuilderTarget;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("triggers.target")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $triggersTarget;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->title = isset($data['title']) ? $data['title'] : null;
        $this->details = isset($data['details']) ? $data['details'] : null;
        $this->enabled = isset($data['enabled']) ? $data['enabled'] : null;
        $this->serviceName = isset($data['serviceName']) ? $data['serviceName'] : null;
        $this->logLevel = isset($data['logLevel']) ? $data['logLevel'] : null;
        $this->queueProcessingEnabled = isset($data['queueProcessingEnabled']) ? $data['queueProcessingEnabled'] : null;
        $this->passiveQueues = isset($data['passiveQueues']) ? $data['passiveQueues'] : null;
        $this->packageExporterEndpoints = isset($data['packageExporterEndpoints']) ? $data['packageExporterEndpoints'] : null;
        $this->packageImporterEndpoints = isset($data['packageImporterEndpoints']) ? $data['packageImporterEndpoints'] : null;
        $this->retryStrategy = isset($data['retryStrategy']) ? $data['retryStrategy'] : null;
        $this->retryAttempts = isset($data['retryAttempts']) ? $data['retryAttempts'] : null;
        $this->pullItems = isset($data['pullItems']) ? $data['pullItems'] : null;
        $this->httpConnTimeout = isset($data['httpConnTimeout']) ? $data['httpConnTimeout'] : null;
        $this->requestAuthorizationStrategyTarget = isset($data['requestAuthorizationStrategyTarget']) ? $data['requestAuthorizationStrategyTarget'] : null;
        $this->transportSecretProviderTarget = isset($data['transportSecretProviderTarget']) ? $data['transportSecretProviderTarget'] : null;
        $this->packageBuilderTarget = isset($data['packageBuilderTarget']) ? $data['packageBuilderTarget'] : null;
        $this->triggersTarget = isset($data['triggersTarget']) ? $data['triggersTarget'] : null;
    }

    /**
     * Gets name.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $name
     *
     * @return $this
     */
    public function setName(ConfigNodePropertyString $name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets title.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Sets title.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $title
     *
     * @return $this
     */
    public function setTitle(ConfigNodePropertyString $title = null)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Gets details.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDetails()
    {
        return $this->details;
    }

    /**
     * Sets details.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $details
     *
     * @return $this
     */
    public function setDetails(ConfigNodePropertyString $details = null)
    {
        $this->details = $details;

        return $this;
    }

    /**
     * Gets enabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * Sets enabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $enabled
     *
     * @return $this
     */
    public function setEnabled(ConfigNodePropertyBoolean $enabled = null)
    {
        $this->enabled = $enabled;

        return $this;
    }

    /**
     * Gets serviceName.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getServiceName()
    {
        return $this->serviceName;
    }

    /**
     * Sets serviceName.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $serviceName
     *
     * @return $this
     */
    public function setServiceName(ConfigNodePropertyString $serviceName = null)
    {
        $this->serviceName = $serviceName;

        return $this;
    }

    /**
     * Gets logLevel.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     */
    public function getLogLevel()
    {
        return $this->logLevel;
    }

    /**
     * Sets logLevel.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyDropDown|null $logLevel
     *
     * @return $this
     */
    public function setLogLevel(ConfigNodePropertyDropDown $logLevel = null)
    {
        $this->logLevel = $logLevel;

        return $this;
    }

    /**
     * Gets queueProcessingEnabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getQueueProcessingEnabled()
    {
        return $this->queueProcessingEnabled;
    }

    /**
     * Sets queueProcessingEnabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $queueProcessingEnabled
     *
     * @return $this
     */
    public function setQueueProcessingEnabled(ConfigNodePropertyBoolean $queueProcessingEnabled = null)
    {
        $this->queueProcessingEnabled = $queueProcessingEnabled;

        return $this;
    }

    /**
     * Gets passiveQueues.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getPassiveQueues()
    {
        return $this->passiveQueues;
    }

    /**
     * Sets passiveQueues.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $passiveQueues
     *
     * @return $this
     */
    public function setPassiveQueues(ConfigNodePropertyArray $passiveQueues = null)
    {
        $this->passiveQueues = $passiveQueues;

        return $this;
    }

    /**
     * Gets packageExporterEndpoints.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getPackageExporterEndpoints()
    {
        return $this->packageExporterEndpoints;
    }

    /**
     * Sets packageExporterEndpoints.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $packageExporterEndpoints
     *
     * @return $this
     */
    public function setPackageExporterEndpoints(ConfigNodePropertyArray $packageExporterEndpoints = null)
    {
        $this->packageExporterEndpoints = $packageExporterEndpoints;

        return $this;
    }

    /**
     * Gets packageImporterEndpoints.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getPackageImporterEndpoints()
    {
        return $this->packageImporterEndpoints;
    }

    /**
     * Sets packageImporterEndpoints.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $packageImporterEndpoints
     *
     * @return $this
     */
    public function setPackageImporterEndpoints(ConfigNodePropertyArray $packageImporterEndpoints = null)
    {
        $this->packageImporterEndpoints = $packageImporterEndpoints;

        return $this;
    }

    /**
     * Gets retryStrategy.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     */
    public function getRetryStrategy()
    {
        return $this->retryStrategy;
    }

    /**
     * Sets retryStrategy.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyDropDown|null $retryStrategy
     *
     * @return $this
     */
    public function setRetryStrategy(ConfigNodePropertyDropDown $retryStrategy = null)
    {
        $this->retryStrategy = $retryStrategy;

        return $this;
    }

    /**
     * Gets retryAttempts.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getRetryAttempts()
    {
        return $this->retryAttempts;
    }

    /**
     * Sets retryAttempts.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $retryAttempts
     *
     * @return $this
     */
    public function setRetryAttempts(ConfigNodePropertyInteger $retryAttempts = null)
    {
        $this->retryAttempts = $retryAttempts;

        return $this;
    }

    /**
     * Gets pullItems.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getPullItems()
    {
        return $this->pullItems;
    }

    /**
     * Sets pullItems.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $pullItems
     *
     * @return $this
     */
    public function setPullItems(ConfigNodePropertyInteger $pullItems = null)
    {
        $this->pullItems = $pullItems;

        return $this;
    }

    /**
     * Gets httpConnTimeout.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getHttpConnTimeout()
    {
        return $this->httpConnTimeout;
    }

    /**
     * Sets httpConnTimeout.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $httpConnTimeout
     *
     * @return $this
     */
    public function setHttpConnTimeout(ConfigNodePropertyInteger $httpConnTimeout = null)
    {
        $this->httpConnTimeout = $httpConnTimeout;

        return $this;
    }

    /**
     * Gets requestAuthorizationStrategyTarget.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getRequestAuthorizationStrategyTarget()
    {
        return $this->requestAuthorizationStrategyTarget;
    }

    /**
     * Sets requestAuthorizationStrategyTarget.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $requestAuthorizationStrategyTarget
     *
     * @return $this
     */
    public function setRequestAuthorizationStrategyTarget(ConfigNodePropertyString $requestAuthorizationStrategyTarget = null)
    {
        $this->requestAuthorizationStrategyTarget = $requestAuthorizationStrategyTarget;

        return $this;
    }

    /**
     * Gets transportSecretProviderTarget.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getTransportSecretProviderTarget()
    {
        return $this->transportSecretProviderTarget;
    }

    /**
     * Sets transportSecretProviderTarget.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $transportSecretProviderTarget
     *
     * @return $this
     */
    public function setTransportSecretProviderTarget(ConfigNodePropertyString $transportSecretProviderTarget = null)
    {
        $this->transportSecretProviderTarget = $transportSecretProviderTarget;

        return $this;
    }

    /**
     * Gets packageBuilderTarget.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getPackageBuilderTarget()
    {
        return $this->packageBuilderTarget;
    }

    /**
     * Sets packageBuilderTarget.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $packageBuilderTarget
     *
     * @return $this
     */
    public function setPackageBuilderTarget(ConfigNodePropertyString $packageBuilderTarget = null)
    {
        $this->packageBuilderTarget = $packageBuilderTarget;

        return $this;
    }

    /**
     * Gets triggersTarget.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getTriggersTarget()
    {
        return $this->triggersTarget;
    }

    /**
     * Sets triggersTarget.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $triggersTarget
     *
     * @return $this
     */
    public function setTriggersTarget(ConfigNodePropertyString $triggersTarget = null)
    {
        $this->triggersTarget = $triggersTarget;

        return $this;
    }
}


