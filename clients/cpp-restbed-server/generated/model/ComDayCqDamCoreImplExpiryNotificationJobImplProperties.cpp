/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComDayCqDamCoreImplExpiryNotificationJobImplProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreImplExpiryNotificationJobImplProperties::ComDayCqDamCoreImplExpiryNotificationJobImplProperties()
{
    
}

ComDayCqDamCoreImplExpiryNotificationJobImplProperties::~ComDayCqDamCoreImplExpiryNotificationJobImplProperties()
{
}

std::string ComDayCqDamCoreImplExpiryNotificationJobImplProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyBoolean> ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getCqDamExpiryNotificationSchedulerIstimebased() const
{
    return m_Cq_dam_expiry_notification_scheduler_istimebased;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setCqDamExpiryNotificationSchedulerIstimebased(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Cq_dam_expiry_notification_scheduler_istimebased = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getCqDamExpiryNotificationSchedulerTimebasedRule() const
{
    return m_Cq_dam_expiry_notification_scheduler_timebased_rule;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setCqDamExpiryNotificationSchedulerTimebasedRule(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Cq_dam_expiry_notification_scheduler_timebased_rule = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getCqDamExpiryNotificationSchedulerPeriodRule() const
{
    return m_Cq_dam_expiry_notification_scheduler_period_rule;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setCqDamExpiryNotificationSchedulerPeriodRule(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Cq_dam_expiry_notification_scheduler_period_rule = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getSendEmail() const
{
    return m_Send_email;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setSendEmail(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Send_email = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getAssetExpiredLimit() const
{
    return m_Asset_expired_limit;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setAssetExpiredLimit(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Asset_expired_limit = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getPriorNotificationSeconds() const
{
    return m_Prior_notification_seconds;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setPriorNotificationSeconds(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Prior_notification_seconds = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCqDamCoreImplExpiryNotificationJobImplProperties::getCqDamExpiryNotificationUrlProtocol() const
{
    return m_Cq_dam_expiry_notification_url_protocol;
}
void ComDayCqDamCoreImplExpiryNotificationJobImplProperties::setCqDamExpiryNotificationUrlProtocol(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Cq_dam_expiry_notification_url_protocol = value;
}

}
}
}
}

