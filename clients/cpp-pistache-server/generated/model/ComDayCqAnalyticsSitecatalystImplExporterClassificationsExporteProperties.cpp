/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties()
{
    m_Allowed_pathsIsSet = false;
    m_Cq_analytics_saint_exporter_pagesizeIsSet = false;
    
}

ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::~ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties()
{
}

void ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Allowed_pathsIsSet)
    {
        val["allowed.paths"] = ModelBase::toJson(m_Allowed_paths);
    }
    if(m_Cq_analytics_saint_exporter_pagesizeIsSet)
    {
        val["cq.analytics.saint.exporter.pagesize"] = ModelBase::toJson(m_Cq_analytics_saint_exporter_pagesize);
    }
    

    return val;
}

void ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::fromJson(nlohmann::json& val)
{
    if(val.find("allowed.paths") != val.end())
    {
        if(!val["allowed.paths"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["allowed.paths"]);
            setAllowedPaths( newItem );
        }
        
    }
    if(val.find("cq.analytics.saint.exporter.pagesize") != val.end())
    {
        if(!val["cq.analytics.saint.exporter.pagesize"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.analytics.saint.exporter.pagesize"]);
            setCqAnalyticsSaintExporterPagesize( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::getAllowedPaths() const
{
    return m_Allowed_paths;
}
void ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::setAllowedPaths(ConfigNodePropertyArray const& value)
{
    m_Allowed_paths = value;
    m_Allowed_pathsIsSet = true;
}
bool ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::allowedPathsIsSet() const
{
    return m_Allowed_pathsIsSet;
}
void ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::unsetAllowed_paths()
{
    m_Allowed_pathsIsSet = false;
}
ConfigNodePropertyInteger ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::getCqAnalyticsSaintExporterPagesize() const
{
    return m_Cq_analytics_saint_exporter_pagesize;
}
void ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::setCqAnalyticsSaintExporterPagesize(ConfigNodePropertyInteger const& value)
{
    m_Cq_analytics_saint_exporter_pagesize = value;
    m_Cq_analytics_saint_exporter_pagesizeIsSet = true;
}
bool ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::cqAnalyticsSaintExporterPagesizeIsSet() const
{
    return m_Cq_analytics_saint_exporter_pagesizeIsSet;
}
void ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteProperties::unsetCq_analytics_saint_exporter_pagesize()
{
    m_Cq_analytics_saint_exporter_pagesizeIsSet = false;
}

}
}
}
}

