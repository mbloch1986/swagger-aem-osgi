/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties {
  
  @SerializedName("archiving.enabled")
  private ConfigNodePropertyBoolean archivingEnabled = null;
  @SerializedName("scheduler.expression")
  private ConfigNodePropertyString schedulerExpression = null;
  @SerializedName("archive.since.days.completed")
  private ConfigNodePropertyInteger archiveSinceDaysCompleted = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getArchivingEnabled() {
    return archivingEnabled;
  }
  public void setArchivingEnabled(ConfigNodePropertyBoolean archivingEnabled) {
    this.archivingEnabled = archivingEnabled;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getSchedulerExpression() {
    return schedulerExpression;
  }
  public void setSchedulerExpression(ConfigNodePropertyString schedulerExpression) {
    this.schedulerExpression = schedulerExpression;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getArchiveSinceDaysCompleted() {
    return archiveSinceDaysCompleted;
  }
  public void setArchiveSinceDaysCompleted(ConfigNodePropertyInteger archiveSinceDaysCompleted) {
    this.archiveSinceDaysCompleted = archiveSinceDaysCompleted;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties = (ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties) o;
    return (this.archivingEnabled == null ? comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.archivingEnabled == null : this.archivingEnabled.equals(comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.archivingEnabled)) &&
        (this.schedulerExpression == null ? comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.schedulerExpression == null : this.schedulerExpression.equals(comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.schedulerExpression)) &&
        (this.archiveSinceDaysCompleted == null ? comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.archiveSinceDaysCompleted == null : this.archiveSinceDaysCompleted.equals(comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.archiveSinceDaysCompleted));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.archivingEnabled == null ? 0: this.archivingEnabled.hashCode());
    result = 31 * result + (this.schedulerExpression == null ? 0: this.schedulerExpression.hashCode());
    result = 31 * result + (this.archiveSinceDaysCompleted == null ? 0: this.archiveSinceDaysCompleted.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties {\n");
    
    sb.append("  archivingEnabled: ").append(archivingEnabled).append("\n");
    sb.append("  schedulerExpression: ").append(schedulerExpression).append("\n");
    sb.append("  archiveSinceDaysCompleted: ").append(archiveSinceDaysCompleted).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
