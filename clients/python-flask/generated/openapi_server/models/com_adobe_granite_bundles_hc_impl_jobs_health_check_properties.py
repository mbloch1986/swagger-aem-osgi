# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hc_tags: ConfigNodePropertyArray=None, max_queued_jobs: ConfigNodePropertyInteger=None):  # noqa: E501
        """ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties - a model defined in OpenAPI

        :param hc_tags: The hc_tags of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.  # noqa: E501
        :type hc_tags: ConfigNodePropertyArray
        :param max_queued_jobs: The max_queued_jobs of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.  # noqa: E501
        :type max_queued_jobs: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'hc_tags': ConfigNodePropertyArray,
            'max_queued_jobs': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'hc_tags': 'hc.tags',
            'max_queued_jobs': 'max.queued.jobs'
        }

        self._hc_tags = hc_tags
        self._max_queued_jobs = max_queued_jobs

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeGraniteBundlesHcImplJobsHealthCheckProperties of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.  # noqa: E501
        :rtype: ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hc_tags(self) -> ConfigNodePropertyArray:
        """Gets the hc_tags of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.


        :return: The hc_tags of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._hc_tags

    @hc_tags.setter
    def hc_tags(self, hc_tags: ConfigNodePropertyArray):
        """Sets the hc_tags of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.


        :param hc_tags: The hc_tags of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.
        :type hc_tags: ConfigNodePropertyArray
        """

        self._hc_tags = hc_tags

    @property
    def max_queued_jobs(self) -> ConfigNodePropertyInteger:
        """Gets the max_queued_jobs of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.


        :return: The max_queued_jobs of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._max_queued_jobs

    @max_queued_jobs.setter
    def max_queued_jobs(self, max_queued_jobs: ConfigNodePropertyInteger):
        """Sets the max_queued_jobs of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.


        :param max_queued_jobs: The max_queued_jobs of this ComAdobeGraniteBundlesHcImplJobsHealthCheckProperties.
        :type max_queued_jobs: ConfigNodePropertyInteger
        """

        self._max_queued_jobs = max_queued_jobs
