/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties.h
 *
 * 
 */

#ifndef ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties_H_
#define ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties
    : public ModelBase
{
public:
    ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties();
    virtual ~ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSyncTranslationStateSchedulingFormat() const;
    void setSyncTranslationStateSchedulingFormat(ConfigNodePropertyString const& value);
    bool syncTranslationStateSchedulingFormatIsSet() const;
    void unsetSyncTranslationState_schedulingFormat();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSchedulingRepeatTranslationSchedulingFormat() const;
    void setSchedulingRepeatTranslationSchedulingFormat(ConfigNodePropertyString const& value);
    bool schedulingRepeatTranslationSchedulingFormatIsSet() const;
    void unsetSchedulingRepeatTranslation_schedulingFormat();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSyncTranslationStateLockTimeoutInMinutes() const;
    void setSyncTranslationStateLockTimeoutInMinutes(ConfigNodePropertyString const& value);
    bool syncTranslationStateLockTimeoutInMinutesIsSet() const;
    void unsetSyncTranslationState_lockTimeoutInMinutes();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyDropDown getExportFormat() const;
    void setExportFormat(ConfigNodePropertyDropDown const& value);
    bool exportFormatIsSet() const;
    void unsetExport_format();

protected:
    ConfigNodePropertyString m_SyncTranslationState_schedulingFormat;
    bool m_SyncTranslationState_schedulingFormatIsSet;
    ConfigNodePropertyString m_SchedulingRepeatTranslation_schedulingFormat;
    bool m_SchedulingRepeatTranslation_schedulingFormatIsSet;
    ConfigNodePropertyString m_SyncTranslationState_lockTimeoutInMinutes;
    bool m_SyncTranslationState_lockTimeoutInMinutesIsSet;
    ConfigNodePropertyDropDown m_Export_format;
    bool m_Export_formatIsSet;
};

}
}
}
}

#endif /* ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties_H_ */
