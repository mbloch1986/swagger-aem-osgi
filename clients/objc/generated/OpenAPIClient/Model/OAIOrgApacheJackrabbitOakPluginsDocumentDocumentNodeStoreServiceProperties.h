#import <Foundation/Foundation.h>
#import "OAIObject.h"

/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#import "OAIConfigNodePropertyArray.h"
#import "OAIConfigNodePropertyBoolean.h"
#import "OAIConfigNodePropertyDropDown.h"
#import "OAIConfigNodePropertyInteger.h"
#import "OAIConfigNodePropertyString.h"
@protocol OAIConfigNodePropertyArray;
@class OAIConfigNodePropertyArray;
@protocol OAIConfigNodePropertyBoolean;
@class OAIConfigNodePropertyBoolean;
@protocol OAIConfigNodePropertyDropDown;
@class OAIConfigNodePropertyDropDown;
@protocol OAIConfigNodePropertyInteger;
@class OAIConfigNodePropertyInteger;
@protocol OAIConfigNodePropertyString;
@class OAIConfigNodePropertyString;



@protocol OAIOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties
@end

@interface OAIOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties : OAIObject


@property(nonatomic) OAIConfigNodePropertyString* mongouri;

@property(nonatomic) OAIConfigNodePropertyString* db;

@property(nonatomic) OAIConfigNodePropertyBoolean* socketKeepAlive;

@property(nonatomic) OAIConfigNodePropertyInteger* cache;

@property(nonatomic) OAIConfigNodePropertyInteger* nodeCachePercentage;

@property(nonatomic) OAIConfigNodePropertyInteger* prevDocCachePercentage;

@property(nonatomic) OAIConfigNodePropertyInteger* childrenCachePercentage;

@property(nonatomic) OAIConfigNodePropertyInteger* diffCachePercentage;

@property(nonatomic) OAIConfigNodePropertyInteger* cacheSegmentCount;

@property(nonatomic) OAIConfigNodePropertyInteger* cacheStackMoveDistance;

@property(nonatomic) OAIConfigNodePropertyInteger* blobCacheSize;

@property(nonatomic) OAIConfigNodePropertyString* persistentCache;

@property(nonatomic) OAIConfigNodePropertyString* journalCache;

@property(nonatomic) OAIConfigNodePropertyBoolean* customBlobStore;

@property(nonatomic) OAIConfigNodePropertyInteger* journalGCInterval;

@property(nonatomic) OAIConfigNodePropertyInteger* journalGCMaxAge;

@property(nonatomic) OAIConfigNodePropertyBoolean* prefetchExternalChanges;

@property(nonatomic) OAIConfigNodePropertyString* role;

@property(nonatomic) OAIConfigNodePropertyInteger* versionGcMaxAgeInSecs;

@property(nonatomic) OAIConfigNodePropertyString* versionGCExpression;

@property(nonatomic) OAIConfigNodePropertyInteger* versionGCTimeLimitInSecs;

@property(nonatomic) OAIConfigNodePropertyInteger* blobGcMaxAgeInSecs;

@property(nonatomic) OAIConfigNodePropertyInteger* blobTrackSnapshotIntervalInSecs;

@property(nonatomic) OAIConfigNodePropertyString* repositoryHome;

@property(nonatomic) OAIConfigNodePropertyInteger* maxReplicationLagInSecs;

@property(nonatomic) OAIConfigNodePropertyDropDown* documentStoreType;

@property(nonatomic) OAIConfigNodePropertyBoolean* bundlingDisabled;

@property(nonatomic) OAIConfigNodePropertyInteger* updateLimit;

@property(nonatomic) OAIConfigNodePropertyArray* persistentCacheIncludes;

@property(nonatomic) OAIConfigNodePropertyDropDown* leaseCheckMode;

@end
