/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheFelixScrScrServiceProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheFelixScrScrServiceProperties::OAIOrgApacheFelixScrScrServiceProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheFelixScrScrServiceProperties::OAIOrgApacheFelixScrScrServiceProperties() {
    this->init();
}

OAIOrgApacheFelixScrScrServiceProperties::~OAIOrgApacheFelixScrScrServiceProperties() {
    
}

void
OAIOrgApacheFelixScrScrServiceProperties::init() {
    m_ds_loglevel_isSet = false;
    m_ds_factory_enabled_isSet = false;
    m_ds_delayed_keep_instances_isSet = false;
    m_ds_lock_timeout_milliseconds_isSet = false;
    m_ds_stop_timeout_milliseconds_isSet = false;
    m_ds_global_extender_isSet = false;
}

void
OAIOrgApacheFelixScrScrServiceProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheFelixScrScrServiceProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(ds_loglevel, json[QString("ds.loglevel")]);
    
    ::OpenAPI::fromJsonValue(ds_factory_enabled, json[QString("ds.factory.enabled")]);
    
    ::OpenAPI::fromJsonValue(ds_delayed_keep_instances, json[QString("ds.delayed.keepInstances")]);
    
    ::OpenAPI::fromJsonValue(ds_lock_timeout_milliseconds, json[QString("ds.lock.timeout.milliseconds")]);
    
    ::OpenAPI::fromJsonValue(ds_stop_timeout_milliseconds, json[QString("ds.stop.timeout.milliseconds")]);
    
    ::OpenAPI::fromJsonValue(ds_global_extender, json[QString("ds.global.extender")]);
    
}

QString
OAIOrgApacheFelixScrScrServiceProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheFelixScrScrServiceProperties::asJsonObject() const {
    QJsonObject obj;
	if(ds_loglevel.isSet()){
        obj.insert(QString("ds.loglevel"), ::OpenAPI::toJsonValue(ds_loglevel));
    }
	if(ds_factory_enabled.isSet()){
        obj.insert(QString("ds.factory.enabled"), ::OpenAPI::toJsonValue(ds_factory_enabled));
    }
	if(ds_delayed_keep_instances.isSet()){
        obj.insert(QString("ds.delayed.keepInstances"), ::OpenAPI::toJsonValue(ds_delayed_keep_instances));
    }
	if(ds_lock_timeout_milliseconds.isSet()){
        obj.insert(QString("ds.lock.timeout.milliseconds"), ::OpenAPI::toJsonValue(ds_lock_timeout_milliseconds));
    }
	if(ds_stop_timeout_milliseconds.isSet()){
        obj.insert(QString("ds.stop.timeout.milliseconds"), ::OpenAPI::toJsonValue(ds_stop_timeout_milliseconds));
    }
	if(ds_global_extender.isSet()){
        obj.insert(QString("ds.global.extender"), ::OpenAPI::toJsonValue(ds_global_extender));
    }
    return obj;
}

OAIConfigNodePropertyDropDown
OAIOrgApacheFelixScrScrServiceProperties::getDsLoglevel() const {
    return ds_loglevel;
}
void
OAIOrgApacheFelixScrScrServiceProperties::setDsLoglevel(const OAIConfigNodePropertyDropDown &ds_loglevel) {
    this->ds_loglevel = ds_loglevel;
    this->m_ds_loglevel_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheFelixScrScrServiceProperties::getDsFactoryEnabled() const {
    return ds_factory_enabled;
}
void
OAIOrgApacheFelixScrScrServiceProperties::setDsFactoryEnabled(const OAIConfigNodePropertyBoolean &ds_factory_enabled) {
    this->ds_factory_enabled = ds_factory_enabled;
    this->m_ds_factory_enabled_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheFelixScrScrServiceProperties::getDsDelayedKeepInstances() const {
    return ds_delayed_keep_instances;
}
void
OAIOrgApacheFelixScrScrServiceProperties::setDsDelayedKeepInstances(const OAIConfigNodePropertyBoolean &ds_delayed_keep_instances) {
    this->ds_delayed_keep_instances = ds_delayed_keep_instances;
    this->m_ds_delayed_keep_instances_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheFelixScrScrServiceProperties::getDsLockTimeoutMilliseconds() const {
    return ds_lock_timeout_milliseconds;
}
void
OAIOrgApacheFelixScrScrServiceProperties::setDsLockTimeoutMilliseconds(const OAIConfigNodePropertyInteger &ds_lock_timeout_milliseconds) {
    this->ds_lock_timeout_milliseconds = ds_lock_timeout_milliseconds;
    this->m_ds_lock_timeout_milliseconds_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheFelixScrScrServiceProperties::getDsStopTimeoutMilliseconds() const {
    return ds_stop_timeout_milliseconds;
}
void
OAIOrgApacheFelixScrScrServiceProperties::setDsStopTimeoutMilliseconds(const OAIConfigNodePropertyInteger &ds_stop_timeout_milliseconds) {
    this->ds_stop_timeout_milliseconds = ds_stop_timeout_milliseconds;
    this->m_ds_stop_timeout_milliseconds_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheFelixScrScrServiceProperties::getDsGlobalExtender() const {
    return ds_global_extender;
}
void
OAIOrgApacheFelixScrScrServiceProperties::setDsGlobalExtender(const OAIConfigNodePropertyBoolean &ds_global_extender) {
    this->ds_global_extender = ds_global_extender;
    this->m_ds_global_extender_isSet = true;
}


bool
OAIOrgApacheFelixScrScrServiceProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(ds_loglevel.isSet()){ isObjectUpdated = true; break;}
    
        if(ds_factory_enabled.isSet()){ isObjectUpdated = true; break;}
    
        if(ds_delayed_keep_instances.isSet()){ isObjectUpdated = true; break;}
    
        if(ds_lock_timeout_milliseconds.isSet()){ isObjectUpdated = true; break;}
    
        if(ds_stop_timeout_milliseconds.isSet()){ isObjectUpdated = true; break;}
    
        if(ds_global_extender.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

