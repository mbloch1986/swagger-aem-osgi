/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties
    /// </summary>
    [DataContract]
    public partial class ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties :  IEquatable<ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties" /> class.
        /// </summary>
        /// <param name="cqPagesupdatehandlerImageresourcetypes">cqPagesupdatehandlerImageresourcetypes.</param>
        /// <param name="cqPagesupdatehandlerProductresourcetypes">cqPagesupdatehandlerProductresourcetypes.</param>
        /// <param name="cqPagesupdatehandlerVideoresourcetypes">cqPagesupdatehandlerVideoresourcetypes.</param>
        /// <param name="cqPagesupdatehandlerDynamicsequenceresourcetypes">cqPagesupdatehandlerDynamicsequenceresourcetypes.</param>
        /// <param name="cqPagesupdatehandlerPreviewmodepaths">cqPagesupdatehandlerPreviewmodepaths.</param>
        public ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties(ConfigNodePropertyArray cqPagesupdatehandlerImageresourcetypes = default(ConfigNodePropertyArray), ConfigNodePropertyArray cqPagesupdatehandlerProductresourcetypes = default(ConfigNodePropertyArray), ConfigNodePropertyArray cqPagesupdatehandlerVideoresourcetypes = default(ConfigNodePropertyArray), ConfigNodePropertyArray cqPagesupdatehandlerDynamicsequenceresourcetypes = default(ConfigNodePropertyArray), ConfigNodePropertyArray cqPagesupdatehandlerPreviewmodepaths = default(ConfigNodePropertyArray))
        {
            this.CqPagesupdatehandlerImageresourcetypes = cqPagesupdatehandlerImageresourcetypes;
            this.CqPagesupdatehandlerProductresourcetypes = cqPagesupdatehandlerProductresourcetypes;
            this.CqPagesupdatehandlerVideoresourcetypes = cqPagesupdatehandlerVideoresourcetypes;
            this.CqPagesupdatehandlerDynamicsequenceresourcetypes = cqPagesupdatehandlerDynamicsequenceresourcetypes;
            this.CqPagesupdatehandlerPreviewmodepaths = cqPagesupdatehandlerPreviewmodepaths;
        }
        
        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerImageresourcetypes
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.imageresourcetypes", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqPagesupdatehandlerImageresourcetypes { get; set; }

        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerProductresourcetypes
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.productresourcetypes", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqPagesupdatehandlerProductresourcetypes { get; set; }

        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerVideoresourcetypes
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.videoresourcetypes", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqPagesupdatehandlerVideoresourcetypes { get; set; }

        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerDynamicsequenceresourcetypes
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.dynamicsequenceresourcetypes", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqPagesupdatehandlerDynamicsequenceresourcetypes { get; set; }

        /// <summary>
        /// Gets or Sets CqPagesupdatehandlerPreviewmodepaths
        /// </summary>
        [DataMember(Name="cq.pagesupdatehandler.previewmodepaths", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqPagesupdatehandlerPreviewmodepaths { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties {\n");
            sb.Append("  CqPagesupdatehandlerImageresourcetypes: ").Append(CqPagesupdatehandlerImageresourcetypes).Append("\n");
            sb.Append("  CqPagesupdatehandlerProductresourcetypes: ").Append(CqPagesupdatehandlerProductresourcetypes).Append("\n");
            sb.Append("  CqPagesupdatehandlerVideoresourcetypes: ").Append(CqPagesupdatehandlerVideoresourcetypes).Append("\n");
            sb.Append("  CqPagesupdatehandlerDynamicsequenceresourcetypes: ").Append(CqPagesupdatehandlerDynamicsequenceresourcetypes).Append("\n");
            sb.Append("  CqPagesupdatehandlerPreviewmodepaths: ").Append(CqPagesupdatehandlerPreviewmodepaths).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties);
        }

        /// <summary>
        /// Returns true if ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CqPagesupdatehandlerImageresourcetypes == input.CqPagesupdatehandlerImageresourcetypes ||
                    (this.CqPagesupdatehandlerImageresourcetypes != null &&
                    this.CqPagesupdatehandlerImageresourcetypes.Equals(input.CqPagesupdatehandlerImageresourcetypes))
                ) && 
                (
                    this.CqPagesupdatehandlerProductresourcetypes == input.CqPagesupdatehandlerProductresourcetypes ||
                    (this.CqPagesupdatehandlerProductresourcetypes != null &&
                    this.CqPagesupdatehandlerProductresourcetypes.Equals(input.CqPagesupdatehandlerProductresourcetypes))
                ) && 
                (
                    this.CqPagesupdatehandlerVideoresourcetypes == input.CqPagesupdatehandlerVideoresourcetypes ||
                    (this.CqPagesupdatehandlerVideoresourcetypes != null &&
                    this.CqPagesupdatehandlerVideoresourcetypes.Equals(input.CqPagesupdatehandlerVideoresourcetypes))
                ) && 
                (
                    this.CqPagesupdatehandlerDynamicsequenceresourcetypes == input.CqPagesupdatehandlerDynamicsequenceresourcetypes ||
                    (this.CqPagesupdatehandlerDynamicsequenceresourcetypes != null &&
                    this.CqPagesupdatehandlerDynamicsequenceresourcetypes.Equals(input.CqPagesupdatehandlerDynamicsequenceresourcetypes))
                ) && 
                (
                    this.CqPagesupdatehandlerPreviewmodepaths == input.CqPagesupdatehandlerPreviewmodepaths ||
                    (this.CqPagesupdatehandlerPreviewmodepaths != null &&
                    this.CqPagesupdatehandlerPreviewmodepaths.Equals(input.CqPagesupdatehandlerPreviewmodepaths))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CqPagesupdatehandlerImageresourcetypes != null)
                    hashCode = hashCode * 59 + this.CqPagesupdatehandlerImageresourcetypes.GetHashCode();
                if (this.CqPagesupdatehandlerProductresourcetypes != null)
                    hashCode = hashCode * 59 + this.CqPagesupdatehandlerProductresourcetypes.GetHashCode();
                if (this.CqPagesupdatehandlerVideoresourcetypes != null)
                    hashCode = hashCode * 59 + this.CqPagesupdatehandlerVideoresourcetypes.GetHashCode();
                if (this.CqPagesupdatehandlerDynamicsequenceresourcetypes != null)
                    hashCode = hashCode * 59 + this.CqPagesupdatehandlerDynamicsequenceresourcetypes.GetHashCode();
                if (this.CqPagesupdatehandlerPreviewmodepaths != null)
                    hashCode = hashCode * 59 + this.CqPagesupdatehandlerPreviewmodepaths.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
