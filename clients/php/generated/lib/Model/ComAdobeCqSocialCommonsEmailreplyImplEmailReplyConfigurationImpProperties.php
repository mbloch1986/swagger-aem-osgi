<?php
/**
 * ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'email_name' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'email_create_post_from_reply' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'email_add_comment_id_to' => '\OpenAPI\Client\Model\ConfigNodePropertyDropDown',
        'email_subject_maximum_length' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'email_reply_to_address' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'email_reply_to_delimiter' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'email_tracker_id_prefix_in_subject' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'email_tracker_id_prefix_in_body' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'email_as_html' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'email_default_user_name' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'email_templates_root_path' => '\OpenAPI\Client\Model\ConfigNodePropertyString'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'email_name' => null,
        'email_create_post_from_reply' => null,
        'email_add_comment_id_to' => null,
        'email_subject_maximum_length' => null,
        'email_reply_to_address' => null,
        'email_reply_to_delimiter' => null,
        'email_tracker_id_prefix_in_subject' => null,
        'email_tracker_id_prefix_in_body' => null,
        'email_as_html' => null,
        'email_default_user_name' => null,
        'email_templates_root_path' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'email_name' => 'email.name',
        'email_create_post_from_reply' => 'email.createPostFromReply',
        'email_add_comment_id_to' => 'email.addCommentIdTo',
        'email_subject_maximum_length' => 'email.subjectMaximumLength',
        'email_reply_to_address' => 'email.replyToAddress',
        'email_reply_to_delimiter' => 'email.replyToDelimiter',
        'email_tracker_id_prefix_in_subject' => 'email.trackerIdPrefixInSubject',
        'email_tracker_id_prefix_in_body' => 'email.trackerIdPrefixInBody',
        'email_as_html' => 'email.asHTML',
        'email_default_user_name' => 'email.defaultUserName',
        'email_templates_root_path' => 'email.templates.rootPath'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'email_name' => 'setEmailName',
        'email_create_post_from_reply' => 'setEmailCreatePostFromReply',
        'email_add_comment_id_to' => 'setEmailAddCommentIdTo',
        'email_subject_maximum_length' => 'setEmailSubjectMaximumLength',
        'email_reply_to_address' => 'setEmailReplyToAddress',
        'email_reply_to_delimiter' => 'setEmailReplyToDelimiter',
        'email_tracker_id_prefix_in_subject' => 'setEmailTrackerIdPrefixInSubject',
        'email_tracker_id_prefix_in_body' => 'setEmailTrackerIdPrefixInBody',
        'email_as_html' => 'setEmailAsHtml',
        'email_default_user_name' => 'setEmailDefaultUserName',
        'email_templates_root_path' => 'setEmailTemplatesRootPath'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'email_name' => 'getEmailName',
        'email_create_post_from_reply' => 'getEmailCreatePostFromReply',
        'email_add_comment_id_to' => 'getEmailAddCommentIdTo',
        'email_subject_maximum_length' => 'getEmailSubjectMaximumLength',
        'email_reply_to_address' => 'getEmailReplyToAddress',
        'email_reply_to_delimiter' => 'getEmailReplyToDelimiter',
        'email_tracker_id_prefix_in_subject' => 'getEmailTrackerIdPrefixInSubject',
        'email_tracker_id_prefix_in_body' => 'getEmailTrackerIdPrefixInBody',
        'email_as_html' => 'getEmailAsHtml',
        'email_default_user_name' => 'getEmailDefaultUserName',
        'email_templates_root_path' => 'getEmailTemplatesRootPath'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['email_name'] = isset($data['email_name']) ? $data['email_name'] : null;
        $this->container['email_create_post_from_reply'] = isset($data['email_create_post_from_reply']) ? $data['email_create_post_from_reply'] : null;
        $this->container['email_add_comment_id_to'] = isset($data['email_add_comment_id_to']) ? $data['email_add_comment_id_to'] : null;
        $this->container['email_subject_maximum_length'] = isset($data['email_subject_maximum_length']) ? $data['email_subject_maximum_length'] : null;
        $this->container['email_reply_to_address'] = isset($data['email_reply_to_address']) ? $data['email_reply_to_address'] : null;
        $this->container['email_reply_to_delimiter'] = isset($data['email_reply_to_delimiter']) ? $data['email_reply_to_delimiter'] : null;
        $this->container['email_tracker_id_prefix_in_subject'] = isset($data['email_tracker_id_prefix_in_subject']) ? $data['email_tracker_id_prefix_in_subject'] : null;
        $this->container['email_tracker_id_prefix_in_body'] = isset($data['email_tracker_id_prefix_in_body']) ? $data['email_tracker_id_prefix_in_body'] : null;
        $this->container['email_as_html'] = isset($data['email_as_html']) ? $data['email_as_html'] : null;
        $this->container['email_default_user_name'] = isset($data['email_default_user_name']) ? $data['email_default_user_name'] : null;
        $this->container['email_templates_root_path'] = isset($data['email_templates_root_path']) ? $data['email_templates_root_path'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets email_name
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getEmailName()
    {
        return $this->container['email_name'];
    }

    /**
     * Sets email_name
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $email_name email_name
     *
     * @return $this
     */
    public function setEmailName($email_name)
    {
        $this->container['email_name'] = $email_name;

        return $this;
    }

    /**
     * Gets email_create_post_from_reply
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getEmailCreatePostFromReply()
    {
        return $this->container['email_create_post_from_reply'];
    }

    /**
     * Sets email_create_post_from_reply
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $email_create_post_from_reply email_create_post_from_reply
     *
     * @return $this
     */
    public function setEmailCreatePostFromReply($email_create_post_from_reply)
    {
        $this->container['email_create_post_from_reply'] = $email_create_post_from_reply;

        return $this;
    }

    /**
     * Gets email_add_comment_id_to
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyDropDown|null
     */
    public function getEmailAddCommentIdTo()
    {
        return $this->container['email_add_comment_id_to'];
    }

    /**
     * Sets email_add_comment_id_to
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyDropDown|null $email_add_comment_id_to email_add_comment_id_to
     *
     * @return $this
     */
    public function setEmailAddCommentIdTo($email_add_comment_id_to)
    {
        $this->container['email_add_comment_id_to'] = $email_add_comment_id_to;

        return $this;
    }

    /**
     * Gets email_subject_maximum_length
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getEmailSubjectMaximumLength()
    {
        return $this->container['email_subject_maximum_length'];
    }

    /**
     * Sets email_subject_maximum_length
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $email_subject_maximum_length email_subject_maximum_length
     *
     * @return $this
     */
    public function setEmailSubjectMaximumLength($email_subject_maximum_length)
    {
        $this->container['email_subject_maximum_length'] = $email_subject_maximum_length;

        return $this;
    }

    /**
     * Gets email_reply_to_address
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getEmailReplyToAddress()
    {
        return $this->container['email_reply_to_address'];
    }

    /**
     * Sets email_reply_to_address
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $email_reply_to_address email_reply_to_address
     *
     * @return $this
     */
    public function setEmailReplyToAddress($email_reply_to_address)
    {
        $this->container['email_reply_to_address'] = $email_reply_to_address;

        return $this;
    }

    /**
     * Gets email_reply_to_delimiter
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getEmailReplyToDelimiter()
    {
        return $this->container['email_reply_to_delimiter'];
    }

    /**
     * Sets email_reply_to_delimiter
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $email_reply_to_delimiter email_reply_to_delimiter
     *
     * @return $this
     */
    public function setEmailReplyToDelimiter($email_reply_to_delimiter)
    {
        $this->container['email_reply_to_delimiter'] = $email_reply_to_delimiter;

        return $this;
    }

    /**
     * Gets email_tracker_id_prefix_in_subject
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getEmailTrackerIdPrefixInSubject()
    {
        return $this->container['email_tracker_id_prefix_in_subject'];
    }

    /**
     * Sets email_tracker_id_prefix_in_subject
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $email_tracker_id_prefix_in_subject email_tracker_id_prefix_in_subject
     *
     * @return $this
     */
    public function setEmailTrackerIdPrefixInSubject($email_tracker_id_prefix_in_subject)
    {
        $this->container['email_tracker_id_prefix_in_subject'] = $email_tracker_id_prefix_in_subject;

        return $this;
    }

    /**
     * Gets email_tracker_id_prefix_in_body
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getEmailTrackerIdPrefixInBody()
    {
        return $this->container['email_tracker_id_prefix_in_body'];
    }

    /**
     * Sets email_tracker_id_prefix_in_body
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $email_tracker_id_prefix_in_body email_tracker_id_prefix_in_body
     *
     * @return $this
     */
    public function setEmailTrackerIdPrefixInBody($email_tracker_id_prefix_in_body)
    {
        $this->container['email_tracker_id_prefix_in_body'] = $email_tracker_id_prefix_in_body;

        return $this;
    }

    /**
     * Gets email_as_html
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getEmailAsHtml()
    {
        return $this->container['email_as_html'];
    }

    /**
     * Sets email_as_html
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $email_as_html email_as_html
     *
     * @return $this
     */
    public function setEmailAsHtml($email_as_html)
    {
        $this->container['email_as_html'] = $email_as_html;

        return $this;
    }

    /**
     * Gets email_default_user_name
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getEmailDefaultUserName()
    {
        return $this->container['email_default_user_name'];
    }

    /**
     * Sets email_default_user_name
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $email_default_user_name email_default_user_name
     *
     * @return $this
     */
    public function setEmailDefaultUserName($email_default_user_name)
    {
        $this->container['email_default_user_name'] = $email_default_user_name;

        return $this;
    }

    /**
     * Gets email_templates_root_path
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getEmailTemplatesRootPath()
    {
        return $this->container['email_templates_root_path'];
    }

    /**
     * Sets email_templates_root_path
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $email_templates_root_path email_templates_root_path
     *
     * @return $this
     */
    public function setEmailTemplatesRootPath($email_templates_root_path)
    {
        $this->container['email_templates_root_path'] = $email_templates_root_path;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


