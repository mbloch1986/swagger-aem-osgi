/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties()
{
    m_Com_adobe_cq_cdn_cdn_rewriterIsSet = false;
    m_Com_adobe_cq_cloud_config_componentsIsSet = false;
    m_Com_adobe_cq_cloud_config_coreIsSet = false;
    m_Com_adobe_cq_cloud_config_uiIsSet = false;
    m_Com_adobe_cq_com_adobe_cq_editorIsSet = false;
    m_Com_adobe_cq_com_adobe_cq_projects_coreIsSet = false;
    m_Com_adobe_cq_com_adobe_cq_projects_wcm_coreIsSet = false;
    m_Com_adobe_cq_com_adobe_cq_ui_commonsIsSet = false;
    m_Com_adobe_cq_com_adobe_cq_wcm_styleIsSet = false;
    m_Com_adobe_cq_cq_activitymap_integrationIsSet = false;
    m_Com_adobe_cq_cq_contexthub_commonsIsSet = false;
    m_Com_adobe_cq_cq_dtmIsSet = false;
    m_Com_adobe_cq_cq_healthcheckIsSet = false;
    m_Com_adobe_cq_cq_multisite_targetingIsSet = false;
    m_Com_adobe_cq_cq_pre_upgrade_cleanupIsSet = false;
    m_Com_adobe_cq_cq_product_info_providerIsSet = false;
    m_Com_adobe_cq_cq_rest_sitesIsSet = false;
    m_Com_adobe_cq_cq_security_hcIsSet = false;
    m_Com_adobe_cq_dam_cq_dam_svg_handlerIsSet = false;
    m_Com_adobe_cq_dam_cq_scene7_imagingIsSet = false;
    m_Com_adobe_cq_dtm_reactor_coreIsSet = false;
    m_Com_adobe_cq_dtm_reactor_uiIsSet = false;
    m_Com_adobe_cq_exp_jspel_resolverIsSet = false;
    m_Com_adobe_cq_inbox_cq_inboxIsSet = false;
    m_Com_adobe_cq_json_schema_parserIsSet = false;
    m_Com_adobe_cq_media_cq_media_publishing_dps_fp_coreIsSet = false;
    m_Com_adobe_cq_mobile_cq_mobile_caasIsSet = false;
    m_Com_adobe_cq_mobile_cq_mobile_index_builderIsSet = false;
    m_Com_adobe_cq_mobile_cq_mobile_phonegap_buildIsSet = false;
    m_Com_adobe_cq_myspellIsSet = false;
    m_Com_adobe_cq_sample_we_retail_coreIsSet = false;
    m_Com_adobe_cq_screens_com_adobe_cq_screens_dccIsSet = false;
    m_Com_adobe_cq_screens_com_adobe_cq_screens_mq_coreIsSet = false;
    m_Com_adobe_cq_social_cq_social_as_providerIsSet = false;
    m_Com_adobe_cq_social_cq_social_badging_basic_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_badging_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_calendar_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_content_fragments_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_enablement_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_graph_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_ideation_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_jcr_providerIsSet = false;
    m_Com_adobe_cq_social_cq_social_members_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_ms_providerIsSet = false;
    m_Com_adobe_cq_social_cq_social_notifications_channels_webIsSet = false;
    m_Com_adobe_cq_social_cq_social_notifications_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_rdb_providerIsSet = false;
    m_Com_adobe_cq_social_cq_social_scf_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_scoring_basic_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_scoring_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_serviceusers_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_srp_implIsSet = false;
    m_Com_adobe_cq_social_cq_social_ugcbase_implIsSet = false;
    m_Com_adobe_dam_cq_dam_cfm_implIsSet = false;
    m_Com_adobe_forms_foundation_forms_foundation_baseIsSet = false;
    m_Com_adobe_granite_apicontrollerIsSet = false;
    m_Com_adobe_granite_asset_coreIsSet = false;
    m_Com_adobe_granite_auth_ssoIsSet = false;
    m_Com_adobe_granite_bundles_hc_implIsSet = false;
    m_Com_adobe_granite_compat_routerIsSet = false;
    m_Com_adobe_granite_confIsSet = false;
    m_Com_adobe_granite_conf_ui_coreIsSet = false;
    m_Com_adobe_granite_corsIsSet = false;
    m_Com_adobe_granite_crx_explorerIsSet = false;
    m_Com_adobe_granite_crxde_liteIsSet = false;
    m_Com_adobe_granite_crypto_configIsSet = false;
    m_Com_adobe_granite_crypto_extensionIsSet = false;
    m_Com_adobe_granite_crypto_fileIsSet = false;
    m_Com_adobe_granite_crypto_jcrIsSet = false;
    m_Com_adobe_granite_csrfIsSet = false;
    m_Com_adobe_granite_distribution_coreIsSet = false;
    m_Com_adobe_granite_dropwizard_metricsIsSet = false;
    m_Com_adobe_granite_frags_implIsSet = false;
    m_Com_adobe_granite_gibsonIsSet = false;
    m_Com_adobe_granite_infocollectorIsSet = false;
    m_Com_adobe_granite_installer_factory_packagesIsSet = false;
    m_Com_adobe_granite_jetty_sslIsSet = false;
    m_Com_adobe_granite_jobs_asyncIsSet = false;
    m_Com_adobe_granite_maintenance_oakIsSet = false;
    m_Com_adobe_granite_monitoring_coreIsSet = false;
    m_Com_adobe_granite_queriesIsSet = false;
    m_Com_adobe_granite_replication_hc_implIsSet = false;
    m_Com_adobe_granite_repository_checkerIsSet = false;
    m_Com_adobe_granite_repository_hc_implIsSet = false;
    m_Com_adobe_granite_rest_assetsIsSet = false;
    m_Com_adobe_granite_security_uiIsSet = false;
    m_Com_adobe_granite_startupIsSet = false;
    m_Com_adobe_granite_tagsoupIsSet = false;
    m_Com_adobe_granite_taskmanagement_coreIsSet = false;
    m_Com_adobe_granite_taskmanagement_workflowIsSet = false;
    m_Com_adobe_granite_ui_clientlibs_compiler_lessIsSet = false;
    m_Com_adobe_granite_ui_clientlibs_processor_gccIsSet = false;
    m_Com_adobe_granite_webconsole_pluginsIsSet = false;
    m_Com_adobe_granite_workflow_consoleIsSet = false;
    m_Com_adobe_xmp_worker_files_native_fragment_linuxIsSet = false;
    m_Com_adobe_xmp_worker_files_native_fragment_macosxIsSet = false;
    m_Com_adobe_xmp_worker_files_native_fragment_winIsSet = false;
    m_Com_day_commons_osgi_wrapper_simple_jndiIsSet = false;
    m_Com_day_cq_cq_authhandlerIsSet = false;
    m_Com_day_cq_cq_compat_configupdateIsSet = false;
    m_Com_day_cq_cq_licensebrandingIsSet = false;
    m_Com_day_cq_cq_notifcation_implIsSet = false;
    m_Com_day_cq_cq_replication_auditIsSet = false;
    m_Com_day_cq_cq_search_extIsSet = false;
    m_Com_day_cq_dam_cq_dam_annotation_printIsSet = false;
    m_Com_day_cq_dam_cq_dam_asset_usageIsSet = false;
    m_Com_day_cq_dam_cq_dam_s7damIsSet = false;
    m_Com_day_cq_dam_cq_dam_similaritysearchIsSet = false;
    m_Com_day_cq_dam_dam_webdav_supportIsSet = false;
    m_Com_day_cq_pre_upgrade_tasksIsSet = false;
    m_Com_day_cq_replication_extensionsIsSet = false;
    m_Com_day_cq_wcm_cq_msm_coreIsSet = false;
    m_Com_day_cq_wcm_cq_wcm_translationIsSet = false;
    m_Day_commons_jrawioIsSet = false;
    m_Org_apache_aries_jmx_whiteboardIsSet = false;
    m_Org_apache_felix_http_sslfilterIsSet = false;
    m_Org_apache_felix_org_apache_felix_threaddumpIsSet = false;
    m_Org_apache_felix_webconsole_plugins_dsIsSet = false;
    m_Org_apache_felix_webconsole_plugins_eventIsSet = false;
    m_Org_apache_felix_webconsole_plugins_memoryusageIsSet = false;
    m_Org_apache_felix_webconsole_plugins_packageadminIsSet = false;
    m_Org_apache_jackrabbit_oak_auth_ldapIsSet = false;
    m_Org_apache_jackrabbit_oak_segment_tarIsSet = false;
    m_Org_apache_jackrabbit_oak_solr_osgiIsSet = false;
    m_Org_apache_sling_bundleresource_implIsSet = false;
    m_Org_apache_sling_commons_fsclassloaderIsSet = false;
    m_Org_apache_sling_commons_log_webconsoleIsSet = false;
    m_Org_apache_sling_datasourceIsSet = false;
    m_Org_apache_sling_discovery_baseIsSet = false;
    m_Org_apache_sling_discovery_oakIsSet = false;
    m_Org_apache_sling_discovery_supportIsSet = false;
    m_Org_apache_sling_distribution_apiIsSet = false;
    m_Org_apache_sling_distribution_coreIsSet = false;
    m_Org_apache_sling_extensions_webconsolesecurityproviderIsSet = false;
    m_Org_apache_sling_hc_webconsoleIsSet = false;
    m_Org_apache_sling_installer_consoleIsSet = false;
    m_Org_apache_sling_installer_provider_fileIsSet = false;
    m_Org_apache_sling_installer_provider_jcrIsSet = false;
    m_Org_apache_sling_jcr_davexIsSet = false;
    m_Org_apache_sling_jcr_resourcesecurityIsSet = false;
    m_Org_apache_sling_jmx_providerIsSet = false;
    m_Org_apache_sling_launchpad_installerIsSet = false;
    m_Org_apache_sling_models_implIsSet = false;
    m_Org_apache_sling_repoinit_parserIsSet = false;
    m_Org_apache_sling_resource_inventoryIsSet = false;
    m_Org_apache_sling_resourceresolverIsSet = false;
    m_Org_apache_sling_scripting_javascriptIsSet = false;
    m_Org_apache_sling_scripting_jstIsSet = false;
    m_Org_apache_sling_scripting_sightly_js_providerIsSet = false;
    m_Org_apache_sling_scripting_sightly_models_providerIsSet = false;
    m_Org_apache_sling_securityIsSet = false;
    m_Org_apache_sling_servlets_compatIsSet = false;
    m_Org_apache_sling_servlets_getIsSet = false;
    m_Org_apache_sling_startupfilter_disablerIsSet = false;
    m_Org_apache_sling_tracerIsSet = false;
    m_We_retail_client_app_coreIsSet = false;
    
}

ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::~ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties()
{
}

void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Com_adobe_cq_cdn_cdn_rewriterIsSet)
    {
        val["com.adobe.cq.cdn.cdn-rewriter"] = ModelBase::toJson(m_Com_adobe_cq_cdn_cdn_rewriter);
    }
    if(m_Com_adobe_cq_cloud_config_componentsIsSet)
    {
        val["com.adobe.cq.cloud-config.components"] = ModelBase::toJson(m_Com_adobe_cq_cloud_config_components);
    }
    if(m_Com_adobe_cq_cloud_config_coreIsSet)
    {
        val["com.adobe.cq.cloud-config.core"] = ModelBase::toJson(m_Com_adobe_cq_cloud_config_core);
    }
    if(m_Com_adobe_cq_cloud_config_uiIsSet)
    {
        val["com.adobe.cq.cloud-config.ui"] = ModelBase::toJson(m_Com_adobe_cq_cloud_config_ui);
    }
    if(m_Com_adobe_cq_com_adobe_cq_editorIsSet)
    {
        val["com.adobe.cq.com.adobe.cq.editor"] = ModelBase::toJson(m_Com_adobe_cq_com_adobe_cq_editor);
    }
    if(m_Com_adobe_cq_com_adobe_cq_projects_coreIsSet)
    {
        val["com.adobe.cq.com.adobe.cq.projects.core"] = ModelBase::toJson(m_Com_adobe_cq_com_adobe_cq_projects_core);
    }
    if(m_Com_adobe_cq_com_adobe_cq_projects_wcm_coreIsSet)
    {
        val["com.adobe.cq.com.adobe.cq.projects.wcm.core"] = ModelBase::toJson(m_Com_adobe_cq_com_adobe_cq_projects_wcm_core);
    }
    if(m_Com_adobe_cq_com_adobe_cq_ui_commonsIsSet)
    {
        val["com.adobe.cq.com.adobe.cq.ui.commons"] = ModelBase::toJson(m_Com_adobe_cq_com_adobe_cq_ui_commons);
    }
    if(m_Com_adobe_cq_com_adobe_cq_wcm_styleIsSet)
    {
        val["com.adobe.cq.com.adobe.cq.wcm.style"] = ModelBase::toJson(m_Com_adobe_cq_com_adobe_cq_wcm_style);
    }
    if(m_Com_adobe_cq_cq_activitymap_integrationIsSet)
    {
        val["com.adobe.cq.cq-activitymap-integration"] = ModelBase::toJson(m_Com_adobe_cq_cq_activitymap_integration);
    }
    if(m_Com_adobe_cq_cq_contexthub_commonsIsSet)
    {
        val["com.adobe.cq.cq-contexthub-commons"] = ModelBase::toJson(m_Com_adobe_cq_cq_contexthub_commons);
    }
    if(m_Com_adobe_cq_cq_dtmIsSet)
    {
        val["com.adobe.cq.cq-dtm"] = ModelBase::toJson(m_Com_adobe_cq_cq_dtm);
    }
    if(m_Com_adobe_cq_cq_healthcheckIsSet)
    {
        val["com.adobe.cq.cq-healthcheck"] = ModelBase::toJson(m_Com_adobe_cq_cq_healthcheck);
    }
    if(m_Com_adobe_cq_cq_multisite_targetingIsSet)
    {
        val["com.adobe.cq.cq-multisite-targeting"] = ModelBase::toJson(m_Com_adobe_cq_cq_multisite_targeting);
    }
    if(m_Com_adobe_cq_cq_pre_upgrade_cleanupIsSet)
    {
        val["com.adobe.cq.cq-pre-upgrade-cleanup"] = ModelBase::toJson(m_Com_adobe_cq_cq_pre_upgrade_cleanup);
    }
    if(m_Com_adobe_cq_cq_product_info_providerIsSet)
    {
        val["com.adobe.cq.cq-product-info-provider"] = ModelBase::toJson(m_Com_adobe_cq_cq_product_info_provider);
    }
    if(m_Com_adobe_cq_cq_rest_sitesIsSet)
    {
        val["com.adobe.cq.cq-rest-sites"] = ModelBase::toJson(m_Com_adobe_cq_cq_rest_sites);
    }
    if(m_Com_adobe_cq_cq_security_hcIsSet)
    {
        val["com.adobe.cq.cq-security-hc"] = ModelBase::toJson(m_Com_adobe_cq_cq_security_hc);
    }
    if(m_Com_adobe_cq_dam_cq_dam_svg_handlerIsSet)
    {
        val["com.adobe.cq.dam.cq-dam-svg-handler"] = ModelBase::toJson(m_Com_adobe_cq_dam_cq_dam_svg_handler);
    }
    if(m_Com_adobe_cq_dam_cq_scene7_imagingIsSet)
    {
        val["com.adobe.cq.dam.cq-scene7-imaging"] = ModelBase::toJson(m_Com_adobe_cq_dam_cq_scene7_imaging);
    }
    if(m_Com_adobe_cq_dtm_reactor_coreIsSet)
    {
        val["com.adobe.cq.dtm-reactor.core"] = ModelBase::toJson(m_Com_adobe_cq_dtm_reactor_core);
    }
    if(m_Com_adobe_cq_dtm_reactor_uiIsSet)
    {
        val["com.adobe.cq.dtm-reactor.ui"] = ModelBase::toJson(m_Com_adobe_cq_dtm_reactor_ui);
    }
    if(m_Com_adobe_cq_exp_jspel_resolverIsSet)
    {
        val["com.adobe.cq.exp-jspel-resolver"] = ModelBase::toJson(m_Com_adobe_cq_exp_jspel_resolver);
    }
    if(m_Com_adobe_cq_inbox_cq_inboxIsSet)
    {
        val["com.adobe.cq.inbox.cq-inbox"] = ModelBase::toJson(m_Com_adobe_cq_inbox_cq_inbox);
    }
    if(m_Com_adobe_cq_json_schema_parserIsSet)
    {
        val["com.adobe.cq.json-schema-parser"] = ModelBase::toJson(m_Com_adobe_cq_json_schema_parser);
    }
    if(m_Com_adobe_cq_media_cq_media_publishing_dps_fp_coreIsSet)
    {
        val["com.adobe.cq.media.cq-media-publishing-dps-fp-core"] = ModelBase::toJson(m_Com_adobe_cq_media_cq_media_publishing_dps_fp_core);
    }
    if(m_Com_adobe_cq_mobile_cq_mobile_caasIsSet)
    {
        val["com.adobe.cq.mobile.cq-mobile-caas"] = ModelBase::toJson(m_Com_adobe_cq_mobile_cq_mobile_caas);
    }
    if(m_Com_adobe_cq_mobile_cq_mobile_index_builderIsSet)
    {
        val["com.adobe.cq.mobile.cq-mobile-index-builder"] = ModelBase::toJson(m_Com_adobe_cq_mobile_cq_mobile_index_builder);
    }
    if(m_Com_adobe_cq_mobile_cq_mobile_phonegap_buildIsSet)
    {
        val["com.adobe.cq.mobile.cq-mobile-phonegap-build"] = ModelBase::toJson(m_Com_adobe_cq_mobile_cq_mobile_phonegap_build);
    }
    if(m_Com_adobe_cq_myspellIsSet)
    {
        val["com.adobe.cq.myspell"] = ModelBase::toJson(m_Com_adobe_cq_myspell);
    }
    if(m_Com_adobe_cq_sample_we_retail_coreIsSet)
    {
        val["com.adobe.cq.sample.we.retail.core"] = ModelBase::toJson(m_Com_adobe_cq_sample_we_retail_core);
    }
    if(m_Com_adobe_cq_screens_com_adobe_cq_screens_dccIsSet)
    {
        val["com.adobe.cq.screens.com.adobe.cq.screens.dcc"] = ModelBase::toJson(m_Com_adobe_cq_screens_com_adobe_cq_screens_dcc);
    }
    if(m_Com_adobe_cq_screens_com_adobe_cq_screens_mq_coreIsSet)
    {
        val["com.adobe.cq.screens.com.adobe.cq.screens.mq.core"] = ModelBase::toJson(m_Com_adobe_cq_screens_com_adobe_cq_screens_mq_core);
    }
    if(m_Com_adobe_cq_social_cq_social_as_providerIsSet)
    {
        val["com.adobe.cq.social.cq-social-as-provider"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_as_provider);
    }
    if(m_Com_adobe_cq_social_cq_social_badging_basic_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-badging-basic-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_badging_basic_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_badging_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-badging-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_badging_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_calendar_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-calendar-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_calendar_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_content_fragments_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-content-fragments-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_content_fragments_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_enablement_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-enablement-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_enablement_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_graph_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-graph-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_graph_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_ideation_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-ideation-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_ideation_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_jcr_providerIsSet)
    {
        val["com.adobe.cq.social.cq-social-jcr-provider"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_jcr_provider);
    }
    if(m_Com_adobe_cq_social_cq_social_members_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-members-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_members_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_ms_providerIsSet)
    {
        val["com.adobe.cq.social.cq-social-ms-provider"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_ms_provider);
    }
    if(m_Com_adobe_cq_social_cq_social_notifications_channels_webIsSet)
    {
        val["com.adobe.cq.social.cq-social-notifications-channels-web"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_notifications_channels_web);
    }
    if(m_Com_adobe_cq_social_cq_social_notifications_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-notifications-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_notifications_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_rdb_providerIsSet)
    {
        val["com.adobe.cq.social.cq-social-rdb-provider"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_rdb_provider);
    }
    if(m_Com_adobe_cq_social_cq_social_scf_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-scf-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_scf_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_scoring_basic_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-scoring-basic-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_scoring_basic_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_scoring_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-scoring-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_scoring_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_serviceusers_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-serviceusers-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_serviceusers_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_srp_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-srp-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_srp_impl);
    }
    if(m_Com_adobe_cq_social_cq_social_ugcbase_implIsSet)
    {
        val["com.adobe.cq.social.cq-social-ugcbase-impl"] = ModelBase::toJson(m_Com_adobe_cq_social_cq_social_ugcbase_impl);
    }
    if(m_Com_adobe_dam_cq_dam_cfm_implIsSet)
    {
        val["com.adobe.dam.cq-dam-cfm-impl"] = ModelBase::toJson(m_Com_adobe_dam_cq_dam_cfm_impl);
    }
    if(m_Com_adobe_forms_foundation_forms_foundation_baseIsSet)
    {
        val["com.adobe.forms.foundation-forms-foundation-base"] = ModelBase::toJson(m_Com_adobe_forms_foundation_forms_foundation_base);
    }
    if(m_Com_adobe_granite_apicontrollerIsSet)
    {
        val["com.adobe.granite.apicontroller"] = ModelBase::toJson(m_Com_adobe_granite_apicontroller);
    }
    if(m_Com_adobe_granite_asset_coreIsSet)
    {
        val["com.adobe.granite.asset.core"] = ModelBase::toJson(m_Com_adobe_granite_asset_core);
    }
    if(m_Com_adobe_granite_auth_ssoIsSet)
    {
        val["com.adobe.granite.auth.sso"] = ModelBase::toJson(m_Com_adobe_granite_auth_sso);
    }
    if(m_Com_adobe_granite_bundles_hc_implIsSet)
    {
        val["com.adobe.granite.bundles.hc.impl"] = ModelBase::toJson(m_Com_adobe_granite_bundles_hc_impl);
    }
    if(m_Com_adobe_granite_compat_routerIsSet)
    {
        val["com.adobe.granite.compat-router"] = ModelBase::toJson(m_Com_adobe_granite_compat_router);
    }
    if(m_Com_adobe_granite_confIsSet)
    {
        val["com.adobe.granite.conf"] = ModelBase::toJson(m_Com_adobe_granite_conf);
    }
    if(m_Com_adobe_granite_conf_ui_coreIsSet)
    {
        val["com.adobe.granite.conf.ui.core"] = ModelBase::toJson(m_Com_adobe_granite_conf_ui_core);
    }
    if(m_Com_adobe_granite_corsIsSet)
    {
        val["com.adobe.granite.cors"] = ModelBase::toJson(m_Com_adobe_granite_cors);
    }
    if(m_Com_adobe_granite_crx_explorerIsSet)
    {
        val["com.adobe.granite.crx-explorer"] = ModelBase::toJson(m_Com_adobe_granite_crx_explorer);
    }
    if(m_Com_adobe_granite_crxde_liteIsSet)
    {
        val["com.adobe.granite.crxde-lite"] = ModelBase::toJson(m_Com_adobe_granite_crxde_lite);
    }
    if(m_Com_adobe_granite_crypto_configIsSet)
    {
        val["com.adobe.granite.crypto.config"] = ModelBase::toJson(m_Com_adobe_granite_crypto_config);
    }
    if(m_Com_adobe_granite_crypto_extensionIsSet)
    {
        val["com.adobe.granite.crypto.extension"] = ModelBase::toJson(m_Com_adobe_granite_crypto_extension);
    }
    if(m_Com_adobe_granite_crypto_fileIsSet)
    {
        val["com.adobe.granite.crypto.file"] = ModelBase::toJson(m_Com_adobe_granite_crypto_file);
    }
    if(m_Com_adobe_granite_crypto_jcrIsSet)
    {
        val["com.adobe.granite.crypto.jcr"] = ModelBase::toJson(m_Com_adobe_granite_crypto_jcr);
    }
    if(m_Com_adobe_granite_csrfIsSet)
    {
        val["com.adobe.granite.csrf"] = ModelBase::toJson(m_Com_adobe_granite_csrf);
    }
    if(m_Com_adobe_granite_distribution_coreIsSet)
    {
        val["com.adobe.granite.distribution.core"] = ModelBase::toJson(m_Com_adobe_granite_distribution_core);
    }
    if(m_Com_adobe_granite_dropwizard_metricsIsSet)
    {
        val["com.adobe.granite.dropwizard.metrics"] = ModelBase::toJson(m_Com_adobe_granite_dropwizard_metrics);
    }
    if(m_Com_adobe_granite_frags_implIsSet)
    {
        val["com.adobe.granite.frags.impl"] = ModelBase::toJson(m_Com_adobe_granite_frags_impl);
    }
    if(m_Com_adobe_granite_gibsonIsSet)
    {
        val["com.adobe.granite.gibson"] = ModelBase::toJson(m_Com_adobe_granite_gibson);
    }
    if(m_Com_adobe_granite_infocollectorIsSet)
    {
        val["com.adobe.granite.infocollector"] = ModelBase::toJson(m_Com_adobe_granite_infocollector);
    }
    if(m_Com_adobe_granite_installer_factory_packagesIsSet)
    {
        val["com.adobe.granite.installer.factory.packages"] = ModelBase::toJson(m_Com_adobe_granite_installer_factory_packages);
    }
    if(m_Com_adobe_granite_jetty_sslIsSet)
    {
        val["com.adobe.granite.jetty.ssl"] = ModelBase::toJson(m_Com_adobe_granite_jetty_ssl);
    }
    if(m_Com_adobe_granite_jobs_asyncIsSet)
    {
        val["com.adobe.granite.jobs.async"] = ModelBase::toJson(m_Com_adobe_granite_jobs_async);
    }
    if(m_Com_adobe_granite_maintenance_oakIsSet)
    {
        val["com.adobe.granite.maintenance.oak"] = ModelBase::toJson(m_Com_adobe_granite_maintenance_oak);
    }
    if(m_Com_adobe_granite_monitoring_coreIsSet)
    {
        val["com.adobe.granite.monitoring.core"] = ModelBase::toJson(m_Com_adobe_granite_monitoring_core);
    }
    if(m_Com_adobe_granite_queriesIsSet)
    {
        val["com.adobe.granite.queries"] = ModelBase::toJson(m_Com_adobe_granite_queries);
    }
    if(m_Com_adobe_granite_replication_hc_implIsSet)
    {
        val["com.adobe.granite.replication.hc.impl"] = ModelBase::toJson(m_Com_adobe_granite_replication_hc_impl);
    }
    if(m_Com_adobe_granite_repository_checkerIsSet)
    {
        val["com.adobe.granite.repository.checker"] = ModelBase::toJson(m_Com_adobe_granite_repository_checker);
    }
    if(m_Com_adobe_granite_repository_hc_implIsSet)
    {
        val["com.adobe.granite.repository.hc.impl"] = ModelBase::toJson(m_Com_adobe_granite_repository_hc_impl);
    }
    if(m_Com_adobe_granite_rest_assetsIsSet)
    {
        val["com.adobe.granite.rest.assets"] = ModelBase::toJson(m_Com_adobe_granite_rest_assets);
    }
    if(m_Com_adobe_granite_security_uiIsSet)
    {
        val["com.adobe.granite.security.ui"] = ModelBase::toJson(m_Com_adobe_granite_security_ui);
    }
    if(m_Com_adobe_granite_startupIsSet)
    {
        val["com.adobe.granite.startup"] = ModelBase::toJson(m_Com_adobe_granite_startup);
    }
    if(m_Com_adobe_granite_tagsoupIsSet)
    {
        val["com.adobe.granite.tagsoup"] = ModelBase::toJson(m_Com_adobe_granite_tagsoup);
    }
    if(m_Com_adobe_granite_taskmanagement_coreIsSet)
    {
        val["com.adobe.granite.taskmanagement.core"] = ModelBase::toJson(m_Com_adobe_granite_taskmanagement_core);
    }
    if(m_Com_adobe_granite_taskmanagement_workflowIsSet)
    {
        val["com.adobe.granite.taskmanagement.workflow"] = ModelBase::toJson(m_Com_adobe_granite_taskmanagement_workflow);
    }
    if(m_Com_adobe_granite_ui_clientlibs_compiler_lessIsSet)
    {
        val["com.adobe.granite.ui.clientlibs.compiler.less"] = ModelBase::toJson(m_Com_adobe_granite_ui_clientlibs_compiler_less);
    }
    if(m_Com_adobe_granite_ui_clientlibs_processor_gccIsSet)
    {
        val["com.adobe.granite.ui.clientlibs.processor.gcc"] = ModelBase::toJson(m_Com_adobe_granite_ui_clientlibs_processor_gcc);
    }
    if(m_Com_adobe_granite_webconsole_pluginsIsSet)
    {
        val["com.adobe.granite.webconsole.plugins"] = ModelBase::toJson(m_Com_adobe_granite_webconsole_plugins);
    }
    if(m_Com_adobe_granite_workflow_consoleIsSet)
    {
        val["com.adobe.granite.workflow.console"] = ModelBase::toJson(m_Com_adobe_granite_workflow_console);
    }
    if(m_Com_adobe_xmp_worker_files_native_fragment_linuxIsSet)
    {
        val["com.adobe.xmp.worker.files.native.fragment.linux"] = ModelBase::toJson(m_Com_adobe_xmp_worker_files_native_fragment_linux);
    }
    if(m_Com_adobe_xmp_worker_files_native_fragment_macosxIsSet)
    {
        val["com.adobe.xmp.worker.files.native.fragment.macosx"] = ModelBase::toJson(m_Com_adobe_xmp_worker_files_native_fragment_macosx);
    }
    if(m_Com_adobe_xmp_worker_files_native_fragment_winIsSet)
    {
        val["com.adobe.xmp.worker.files.native.fragment.win"] = ModelBase::toJson(m_Com_adobe_xmp_worker_files_native_fragment_win);
    }
    if(m_Com_day_commons_osgi_wrapper_simple_jndiIsSet)
    {
        val["com.day.commons.osgi.wrapper.simple-jndi"] = ModelBase::toJson(m_Com_day_commons_osgi_wrapper_simple_jndi);
    }
    if(m_Com_day_cq_cq_authhandlerIsSet)
    {
        val["com.day.cq.cq-authhandler"] = ModelBase::toJson(m_Com_day_cq_cq_authhandler);
    }
    if(m_Com_day_cq_cq_compat_configupdateIsSet)
    {
        val["com.day.cq.cq-compat-configupdate"] = ModelBase::toJson(m_Com_day_cq_cq_compat_configupdate);
    }
    if(m_Com_day_cq_cq_licensebrandingIsSet)
    {
        val["com.day.cq.cq-licensebranding"] = ModelBase::toJson(m_Com_day_cq_cq_licensebranding);
    }
    if(m_Com_day_cq_cq_notifcation_implIsSet)
    {
        val["com.day.cq.cq-notifcation-impl"] = ModelBase::toJson(m_Com_day_cq_cq_notifcation_impl);
    }
    if(m_Com_day_cq_cq_replication_auditIsSet)
    {
        val["com.day.cq.cq-replication-audit"] = ModelBase::toJson(m_Com_day_cq_cq_replication_audit);
    }
    if(m_Com_day_cq_cq_search_extIsSet)
    {
        val["com.day.cq.cq-search-ext"] = ModelBase::toJson(m_Com_day_cq_cq_search_ext);
    }
    if(m_Com_day_cq_dam_cq_dam_annotation_printIsSet)
    {
        val["com.day.cq.dam.cq-dam-annotation-print"] = ModelBase::toJson(m_Com_day_cq_dam_cq_dam_annotation_print);
    }
    if(m_Com_day_cq_dam_cq_dam_asset_usageIsSet)
    {
        val["com.day.cq.dam.cq-dam-asset-usage"] = ModelBase::toJson(m_Com_day_cq_dam_cq_dam_asset_usage);
    }
    if(m_Com_day_cq_dam_cq_dam_s7damIsSet)
    {
        val["com.day.cq.dam.cq-dam-s7dam"] = ModelBase::toJson(m_Com_day_cq_dam_cq_dam_s7dam);
    }
    if(m_Com_day_cq_dam_cq_dam_similaritysearchIsSet)
    {
        val["com.day.cq.dam.cq-dam-similaritysearch"] = ModelBase::toJson(m_Com_day_cq_dam_cq_dam_similaritysearch);
    }
    if(m_Com_day_cq_dam_dam_webdav_supportIsSet)
    {
        val["com.day.cq.dam.dam-webdav-support"] = ModelBase::toJson(m_Com_day_cq_dam_dam_webdav_support);
    }
    if(m_Com_day_cq_pre_upgrade_tasksIsSet)
    {
        val["com.day.cq.pre-upgrade-tasks"] = ModelBase::toJson(m_Com_day_cq_pre_upgrade_tasks);
    }
    if(m_Com_day_cq_replication_extensionsIsSet)
    {
        val["com.day.cq.replication.extensions"] = ModelBase::toJson(m_Com_day_cq_replication_extensions);
    }
    if(m_Com_day_cq_wcm_cq_msm_coreIsSet)
    {
        val["com.day.cq.wcm.cq-msm-core"] = ModelBase::toJson(m_Com_day_cq_wcm_cq_msm_core);
    }
    if(m_Com_day_cq_wcm_cq_wcm_translationIsSet)
    {
        val["com.day.cq.wcm.cq-wcm-translation"] = ModelBase::toJson(m_Com_day_cq_wcm_cq_wcm_translation);
    }
    if(m_Day_commons_jrawioIsSet)
    {
        val["day-commons-jrawio"] = ModelBase::toJson(m_Day_commons_jrawio);
    }
    if(m_Org_apache_aries_jmx_whiteboardIsSet)
    {
        val["org.apache.aries.jmx.whiteboard"] = ModelBase::toJson(m_Org_apache_aries_jmx_whiteboard);
    }
    if(m_Org_apache_felix_http_sslfilterIsSet)
    {
        val["org.apache.felix.http.sslfilter"] = ModelBase::toJson(m_Org_apache_felix_http_sslfilter);
    }
    if(m_Org_apache_felix_org_apache_felix_threaddumpIsSet)
    {
        val["org.apache.felix.org.apache.felix.threaddump"] = ModelBase::toJson(m_Org_apache_felix_org_apache_felix_threaddump);
    }
    if(m_Org_apache_felix_webconsole_plugins_dsIsSet)
    {
        val["org.apache.felix.webconsole.plugins.ds"] = ModelBase::toJson(m_Org_apache_felix_webconsole_plugins_ds);
    }
    if(m_Org_apache_felix_webconsole_plugins_eventIsSet)
    {
        val["org.apache.felix.webconsole.plugins.event"] = ModelBase::toJson(m_Org_apache_felix_webconsole_plugins_event);
    }
    if(m_Org_apache_felix_webconsole_plugins_memoryusageIsSet)
    {
        val["org.apache.felix.webconsole.plugins.memoryusage"] = ModelBase::toJson(m_Org_apache_felix_webconsole_plugins_memoryusage);
    }
    if(m_Org_apache_felix_webconsole_plugins_packageadminIsSet)
    {
        val["org.apache.felix.webconsole.plugins.packageadmin"] = ModelBase::toJson(m_Org_apache_felix_webconsole_plugins_packageadmin);
    }
    if(m_Org_apache_jackrabbit_oak_auth_ldapIsSet)
    {
        val["org.apache.jackrabbit.oak-auth-ldap"] = ModelBase::toJson(m_Org_apache_jackrabbit_oak_auth_ldap);
    }
    if(m_Org_apache_jackrabbit_oak_segment_tarIsSet)
    {
        val["org.apache.jackrabbit.oak-segment-tar"] = ModelBase::toJson(m_Org_apache_jackrabbit_oak_segment_tar);
    }
    if(m_Org_apache_jackrabbit_oak_solr_osgiIsSet)
    {
        val["org.apache.jackrabbit.oak-solr-osgi"] = ModelBase::toJson(m_Org_apache_jackrabbit_oak_solr_osgi);
    }
    if(m_Org_apache_sling_bundleresource_implIsSet)
    {
        val["org.apache.sling.bundleresource.impl"] = ModelBase::toJson(m_Org_apache_sling_bundleresource_impl);
    }
    if(m_Org_apache_sling_commons_fsclassloaderIsSet)
    {
        val["org.apache.sling.commons.fsclassloader"] = ModelBase::toJson(m_Org_apache_sling_commons_fsclassloader);
    }
    if(m_Org_apache_sling_commons_log_webconsoleIsSet)
    {
        val["org.apache.sling.commons.log.webconsole"] = ModelBase::toJson(m_Org_apache_sling_commons_log_webconsole);
    }
    if(m_Org_apache_sling_datasourceIsSet)
    {
        val["org.apache.sling.datasource"] = ModelBase::toJson(m_Org_apache_sling_datasource);
    }
    if(m_Org_apache_sling_discovery_baseIsSet)
    {
        val["org.apache.sling.discovery.base"] = ModelBase::toJson(m_Org_apache_sling_discovery_base);
    }
    if(m_Org_apache_sling_discovery_oakIsSet)
    {
        val["org.apache.sling.discovery.oak"] = ModelBase::toJson(m_Org_apache_sling_discovery_oak);
    }
    if(m_Org_apache_sling_discovery_supportIsSet)
    {
        val["org.apache.sling.discovery.support"] = ModelBase::toJson(m_Org_apache_sling_discovery_support);
    }
    if(m_Org_apache_sling_distribution_apiIsSet)
    {
        val["org.apache.sling.distribution.api"] = ModelBase::toJson(m_Org_apache_sling_distribution_api);
    }
    if(m_Org_apache_sling_distribution_coreIsSet)
    {
        val["org.apache.sling.distribution.core"] = ModelBase::toJson(m_Org_apache_sling_distribution_core);
    }
    if(m_Org_apache_sling_extensions_webconsolesecurityproviderIsSet)
    {
        val["org.apache.sling.extensions.webconsolesecurityprovider"] = ModelBase::toJson(m_Org_apache_sling_extensions_webconsolesecurityprovider);
    }
    if(m_Org_apache_sling_hc_webconsoleIsSet)
    {
        val["org.apache.sling.hc.webconsole"] = ModelBase::toJson(m_Org_apache_sling_hc_webconsole);
    }
    if(m_Org_apache_sling_installer_consoleIsSet)
    {
        val["org.apache.sling.installer.console"] = ModelBase::toJson(m_Org_apache_sling_installer_console);
    }
    if(m_Org_apache_sling_installer_provider_fileIsSet)
    {
        val["org.apache.sling.installer.provider.file"] = ModelBase::toJson(m_Org_apache_sling_installer_provider_file);
    }
    if(m_Org_apache_sling_installer_provider_jcrIsSet)
    {
        val["org.apache.sling.installer.provider.jcr"] = ModelBase::toJson(m_Org_apache_sling_installer_provider_jcr);
    }
    if(m_Org_apache_sling_jcr_davexIsSet)
    {
        val["org.apache.sling.jcr.davex"] = ModelBase::toJson(m_Org_apache_sling_jcr_davex);
    }
    if(m_Org_apache_sling_jcr_resourcesecurityIsSet)
    {
        val["org.apache.sling.jcr.resourcesecurity"] = ModelBase::toJson(m_Org_apache_sling_jcr_resourcesecurity);
    }
    if(m_Org_apache_sling_jmx_providerIsSet)
    {
        val["org.apache.sling.jmx.provider"] = ModelBase::toJson(m_Org_apache_sling_jmx_provider);
    }
    if(m_Org_apache_sling_launchpad_installerIsSet)
    {
        val["org.apache.sling.launchpad.installer"] = ModelBase::toJson(m_Org_apache_sling_launchpad_installer);
    }
    if(m_Org_apache_sling_models_implIsSet)
    {
        val["org.apache.sling.models.impl"] = ModelBase::toJson(m_Org_apache_sling_models_impl);
    }
    if(m_Org_apache_sling_repoinit_parserIsSet)
    {
        val["org.apache.sling.repoinit.parser"] = ModelBase::toJson(m_Org_apache_sling_repoinit_parser);
    }
    if(m_Org_apache_sling_resource_inventoryIsSet)
    {
        val["org.apache.sling.resource.inventory"] = ModelBase::toJson(m_Org_apache_sling_resource_inventory);
    }
    if(m_Org_apache_sling_resourceresolverIsSet)
    {
        val["org.apache.sling.resourceresolver"] = ModelBase::toJson(m_Org_apache_sling_resourceresolver);
    }
    if(m_Org_apache_sling_scripting_javascriptIsSet)
    {
        val["org.apache.sling.scripting.javascript"] = ModelBase::toJson(m_Org_apache_sling_scripting_javascript);
    }
    if(m_Org_apache_sling_scripting_jstIsSet)
    {
        val["org.apache.sling.scripting.jst"] = ModelBase::toJson(m_Org_apache_sling_scripting_jst);
    }
    if(m_Org_apache_sling_scripting_sightly_js_providerIsSet)
    {
        val["org.apache.sling.scripting.sightly.js.provider"] = ModelBase::toJson(m_Org_apache_sling_scripting_sightly_js_provider);
    }
    if(m_Org_apache_sling_scripting_sightly_models_providerIsSet)
    {
        val["org.apache.sling.scripting.sightly.models.provider"] = ModelBase::toJson(m_Org_apache_sling_scripting_sightly_models_provider);
    }
    if(m_Org_apache_sling_securityIsSet)
    {
        val["org.apache.sling.security"] = ModelBase::toJson(m_Org_apache_sling_security);
    }
    if(m_Org_apache_sling_servlets_compatIsSet)
    {
        val["org.apache.sling.servlets.compat"] = ModelBase::toJson(m_Org_apache_sling_servlets_compat);
    }
    if(m_Org_apache_sling_servlets_getIsSet)
    {
        val["org.apache.sling.servlets.get"] = ModelBase::toJson(m_Org_apache_sling_servlets_get);
    }
    if(m_Org_apache_sling_startupfilter_disablerIsSet)
    {
        val["org.apache.sling.startupfilter.disabler"] = ModelBase::toJson(m_Org_apache_sling_startupfilter_disabler);
    }
    if(m_Org_apache_sling_tracerIsSet)
    {
        val["org.apache.sling.tracer"] = ModelBase::toJson(m_Org_apache_sling_tracer);
    }
    if(m_We_retail_client_app_coreIsSet)
    {
        val["we.retail.client.app.core"] = ModelBase::toJson(m_We_retail_client_app_core);
    }
    

    return val;
}

void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::fromJson(nlohmann::json& val)
{
    if(val.find("com.adobe.cq.cdn.cdn-rewriter") != val.end())
    {
        if(!val["com.adobe.cq.cdn.cdn-rewriter"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cdn.cdn-rewriter"]);
            setComAdobeCqCdnCdnRewriter( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cloud-config.components") != val.end())
    {
        if(!val["com.adobe.cq.cloud-config.components"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cloud-config.components"]);
            setComAdobeCqCloudConfigComponents( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cloud-config.core") != val.end())
    {
        if(!val["com.adobe.cq.cloud-config.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cloud-config.core"]);
            setComAdobeCqCloudConfigCore( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cloud-config.ui") != val.end())
    {
        if(!val["com.adobe.cq.cloud-config.ui"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cloud-config.ui"]);
            setComAdobeCqCloudConfigUi( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.com.adobe.cq.editor") != val.end())
    {
        if(!val["com.adobe.cq.com.adobe.cq.editor"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.com.adobe.cq.editor"]);
            setComAdobeCqComAdobeCqEditor( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.com.adobe.cq.projects.core") != val.end())
    {
        if(!val["com.adobe.cq.com.adobe.cq.projects.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.com.adobe.cq.projects.core"]);
            setComAdobeCqComAdobeCqProjectsCore( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.com.adobe.cq.projects.wcm.core") != val.end())
    {
        if(!val["com.adobe.cq.com.adobe.cq.projects.wcm.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.com.adobe.cq.projects.wcm.core"]);
            setComAdobeCqComAdobeCqProjectsWcmCore( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.com.adobe.cq.ui.commons") != val.end())
    {
        if(!val["com.adobe.cq.com.adobe.cq.ui.commons"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.com.adobe.cq.ui.commons"]);
            setComAdobeCqComAdobeCqUiCommons( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.com.adobe.cq.wcm.style") != val.end())
    {
        if(!val["com.adobe.cq.com.adobe.cq.wcm.style"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.com.adobe.cq.wcm.style"]);
            setComAdobeCqComAdobeCqWcmStyle( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cq-activitymap-integration") != val.end())
    {
        if(!val["com.adobe.cq.cq-activitymap-integration"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cq-activitymap-integration"]);
            setComAdobeCqCqActivitymapIntegration( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cq-contexthub-commons") != val.end())
    {
        if(!val["com.adobe.cq.cq-contexthub-commons"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cq-contexthub-commons"]);
            setComAdobeCqCqContexthubCommons( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cq-dtm") != val.end())
    {
        if(!val["com.adobe.cq.cq-dtm"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cq-dtm"]);
            setComAdobeCqCqDtm( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cq-healthcheck") != val.end())
    {
        if(!val["com.adobe.cq.cq-healthcheck"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cq-healthcheck"]);
            setComAdobeCqCqHealthcheck( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cq-multisite-targeting") != val.end())
    {
        if(!val["com.adobe.cq.cq-multisite-targeting"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cq-multisite-targeting"]);
            setComAdobeCqCqMultisiteTargeting( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cq-pre-upgrade-cleanup") != val.end())
    {
        if(!val["com.adobe.cq.cq-pre-upgrade-cleanup"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cq-pre-upgrade-cleanup"]);
            setComAdobeCqCqPreUpgradeCleanup( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cq-product-info-provider") != val.end())
    {
        if(!val["com.adobe.cq.cq-product-info-provider"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cq-product-info-provider"]);
            setComAdobeCqCqProductInfoProvider( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cq-rest-sites") != val.end())
    {
        if(!val["com.adobe.cq.cq-rest-sites"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cq-rest-sites"]);
            setComAdobeCqCqRestSites( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.cq-security-hc") != val.end())
    {
        if(!val["com.adobe.cq.cq-security-hc"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.cq-security-hc"]);
            setComAdobeCqCqSecurityHc( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.dam.cq-dam-svg-handler") != val.end())
    {
        if(!val["com.adobe.cq.dam.cq-dam-svg-handler"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.dam.cq-dam-svg-handler"]);
            setComAdobeCqDamCqDamSvgHandler( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.dam.cq-scene7-imaging") != val.end())
    {
        if(!val["com.adobe.cq.dam.cq-scene7-imaging"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.dam.cq-scene7-imaging"]);
            setComAdobeCqDamCqScene7Imaging( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.dtm-reactor.core") != val.end())
    {
        if(!val["com.adobe.cq.dtm-reactor.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.dtm-reactor.core"]);
            setComAdobeCqDtmReactorCore( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.dtm-reactor.ui") != val.end())
    {
        if(!val["com.adobe.cq.dtm-reactor.ui"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.dtm-reactor.ui"]);
            setComAdobeCqDtmReactorUi( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.exp-jspel-resolver") != val.end())
    {
        if(!val["com.adobe.cq.exp-jspel-resolver"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.exp-jspel-resolver"]);
            setComAdobeCqExpJspelResolver( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.inbox.cq-inbox") != val.end())
    {
        if(!val["com.adobe.cq.inbox.cq-inbox"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.inbox.cq-inbox"]);
            setComAdobeCqInboxCqInbox( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.json-schema-parser") != val.end())
    {
        if(!val["com.adobe.cq.json-schema-parser"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.json-schema-parser"]);
            setComAdobeCqJsonSchemaParser( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.media.cq-media-publishing-dps-fp-core") != val.end())
    {
        if(!val["com.adobe.cq.media.cq-media-publishing-dps-fp-core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.media.cq-media-publishing-dps-fp-core"]);
            setComAdobeCqMediaCqMediaPublishingDpsFpCore( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.mobile.cq-mobile-caas") != val.end())
    {
        if(!val["com.adobe.cq.mobile.cq-mobile-caas"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.mobile.cq-mobile-caas"]);
            setComAdobeCqMobileCqMobileCaas( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.mobile.cq-mobile-index-builder") != val.end())
    {
        if(!val["com.adobe.cq.mobile.cq-mobile-index-builder"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.mobile.cq-mobile-index-builder"]);
            setComAdobeCqMobileCqMobileIndexBuilder( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.mobile.cq-mobile-phonegap-build") != val.end())
    {
        if(!val["com.adobe.cq.mobile.cq-mobile-phonegap-build"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.mobile.cq-mobile-phonegap-build"]);
            setComAdobeCqMobileCqMobilePhonegapBuild( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.myspell") != val.end())
    {
        if(!val["com.adobe.cq.myspell"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.myspell"]);
            setComAdobeCqMyspell( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.sample.we.retail.core") != val.end())
    {
        if(!val["com.adobe.cq.sample.we.retail.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.sample.we.retail.core"]);
            setComAdobeCqSampleWeRetailCore( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.com.adobe.cq.screens.dcc") != val.end())
    {
        if(!val["com.adobe.cq.screens.com.adobe.cq.screens.dcc"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.screens.com.adobe.cq.screens.dcc"]);
            setComAdobeCqScreensComAdobeCqScreensDcc( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.screens.com.adobe.cq.screens.mq.core") != val.end())
    {
        if(!val["com.adobe.cq.screens.com.adobe.cq.screens.mq.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.screens.com.adobe.cq.screens.mq.core"]);
            setComAdobeCqScreensComAdobeCqScreensMqCore( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-as-provider") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-as-provider"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-as-provider"]);
            setComAdobeCqSocialCqSocialAsProvider( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-badging-basic-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-badging-basic-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-badging-basic-impl"]);
            setComAdobeCqSocialCqSocialBadgingBasicImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-badging-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-badging-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-badging-impl"]);
            setComAdobeCqSocialCqSocialBadgingImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-calendar-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-calendar-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-calendar-impl"]);
            setComAdobeCqSocialCqSocialCalendarImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-content-fragments-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-content-fragments-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-content-fragments-impl"]);
            setComAdobeCqSocialCqSocialContentFragmentsImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-enablement-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-enablement-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-enablement-impl"]);
            setComAdobeCqSocialCqSocialEnablementImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-graph-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-graph-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-graph-impl"]);
            setComAdobeCqSocialCqSocialGraphImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-ideation-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-ideation-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-ideation-impl"]);
            setComAdobeCqSocialCqSocialIdeationImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-jcr-provider") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-jcr-provider"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-jcr-provider"]);
            setComAdobeCqSocialCqSocialJcrProvider( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-members-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-members-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-members-impl"]);
            setComAdobeCqSocialCqSocialMembersImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-ms-provider") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-ms-provider"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-ms-provider"]);
            setComAdobeCqSocialCqSocialMsProvider( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-notifications-channels-web") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-notifications-channels-web"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-notifications-channels-web"]);
            setComAdobeCqSocialCqSocialNotificationsChannelsWeb( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-notifications-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-notifications-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-notifications-impl"]);
            setComAdobeCqSocialCqSocialNotificationsImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-rdb-provider") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-rdb-provider"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-rdb-provider"]);
            setComAdobeCqSocialCqSocialRdbProvider( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-scf-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-scf-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-scf-impl"]);
            setComAdobeCqSocialCqSocialScfImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-scoring-basic-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-scoring-basic-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-scoring-basic-impl"]);
            setComAdobeCqSocialCqSocialScoringBasicImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-scoring-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-scoring-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-scoring-impl"]);
            setComAdobeCqSocialCqSocialScoringImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-serviceusers-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-serviceusers-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-serviceusers-impl"]);
            setComAdobeCqSocialCqSocialServiceusersImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-srp-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-srp-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-srp-impl"]);
            setComAdobeCqSocialCqSocialSrpImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.cq.social.cq-social-ugcbase-impl") != val.end())
    {
        if(!val["com.adobe.cq.social.cq-social-ugcbase-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.cq.social.cq-social-ugcbase-impl"]);
            setComAdobeCqSocialCqSocialUgcbaseImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.dam.cq-dam-cfm-impl") != val.end())
    {
        if(!val["com.adobe.dam.cq-dam-cfm-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.dam.cq-dam-cfm-impl"]);
            setComAdobeDamCqDamCfmImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.forms.foundation-forms-foundation-base") != val.end())
    {
        if(!val["com.adobe.forms.foundation-forms-foundation-base"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.forms.foundation-forms-foundation-base"]);
            setComAdobeFormsFoundationFormsFoundationBase( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.apicontroller") != val.end())
    {
        if(!val["com.adobe.granite.apicontroller"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.apicontroller"]);
            setComAdobeGraniteApicontroller( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.asset.core") != val.end())
    {
        if(!val["com.adobe.granite.asset.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.asset.core"]);
            setComAdobeGraniteAssetCore( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.auth.sso") != val.end())
    {
        if(!val["com.adobe.granite.auth.sso"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.auth.sso"]);
            setComAdobeGraniteAuthSso( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.bundles.hc.impl") != val.end())
    {
        if(!val["com.adobe.granite.bundles.hc.impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.bundles.hc.impl"]);
            setComAdobeGraniteBundlesHcImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.compat-router") != val.end())
    {
        if(!val["com.adobe.granite.compat-router"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.compat-router"]);
            setComAdobeGraniteCompatRouter( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.conf") != val.end())
    {
        if(!val["com.adobe.granite.conf"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.conf"]);
            setComAdobeGraniteConf( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.conf.ui.core") != val.end())
    {
        if(!val["com.adobe.granite.conf.ui.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.conf.ui.core"]);
            setComAdobeGraniteConfUiCore( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.cors") != val.end())
    {
        if(!val["com.adobe.granite.cors"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.cors"]);
            setComAdobeGraniteCors( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.crx-explorer") != val.end())
    {
        if(!val["com.adobe.granite.crx-explorer"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.crx-explorer"]);
            setComAdobeGraniteCrxExplorer( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.crxde-lite") != val.end())
    {
        if(!val["com.adobe.granite.crxde-lite"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.crxde-lite"]);
            setComAdobeGraniteCrxdeLite( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.crypto.config") != val.end())
    {
        if(!val["com.adobe.granite.crypto.config"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.crypto.config"]);
            setComAdobeGraniteCryptoConfig( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.crypto.extension") != val.end())
    {
        if(!val["com.adobe.granite.crypto.extension"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.crypto.extension"]);
            setComAdobeGraniteCryptoExtension( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.crypto.file") != val.end())
    {
        if(!val["com.adobe.granite.crypto.file"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.crypto.file"]);
            setComAdobeGraniteCryptoFile( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.crypto.jcr") != val.end())
    {
        if(!val["com.adobe.granite.crypto.jcr"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.crypto.jcr"]);
            setComAdobeGraniteCryptoJcr( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.csrf") != val.end())
    {
        if(!val["com.adobe.granite.csrf"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.csrf"]);
            setComAdobeGraniteCsrf( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.distribution.core") != val.end())
    {
        if(!val["com.adobe.granite.distribution.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.distribution.core"]);
            setComAdobeGraniteDistributionCore( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.dropwizard.metrics") != val.end())
    {
        if(!val["com.adobe.granite.dropwizard.metrics"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.dropwizard.metrics"]);
            setComAdobeGraniteDropwizardMetrics( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.frags.impl") != val.end())
    {
        if(!val["com.adobe.granite.frags.impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.frags.impl"]);
            setComAdobeGraniteFragsImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.gibson") != val.end())
    {
        if(!val["com.adobe.granite.gibson"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.gibson"]);
            setComAdobeGraniteGibson( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.infocollector") != val.end())
    {
        if(!val["com.adobe.granite.infocollector"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.infocollector"]);
            setComAdobeGraniteInfocollector( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.installer.factory.packages") != val.end())
    {
        if(!val["com.adobe.granite.installer.factory.packages"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.installer.factory.packages"]);
            setComAdobeGraniteInstallerFactoryPackages( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.jetty.ssl") != val.end())
    {
        if(!val["com.adobe.granite.jetty.ssl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.jetty.ssl"]);
            setComAdobeGraniteJettySsl( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.jobs.async") != val.end())
    {
        if(!val["com.adobe.granite.jobs.async"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.jobs.async"]);
            setComAdobeGraniteJobsAsync( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.maintenance.oak") != val.end())
    {
        if(!val["com.adobe.granite.maintenance.oak"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.maintenance.oak"]);
            setComAdobeGraniteMaintenanceOak( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.monitoring.core") != val.end())
    {
        if(!val["com.adobe.granite.monitoring.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.monitoring.core"]);
            setComAdobeGraniteMonitoringCore( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.queries") != val.end())
    {
        if(!val["com.adobe.granite.queries"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.queries"]);
            setComAdobeGraniteQueries( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.replication.hc.impl") != val.end())
    {
        if(!val["com.adobe.granite.replication.hc.impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.replication.hc.impl"]);
            setComAdobeGraniteReplicationHcImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.repository.checker") != val.end())
    {
        if(!val["com.adobe.granite.repository.checker"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.repository.checker"]);
            setComAdobeGraniteRepositoryChecker( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.repository.hc.impl") != val.end())
    {
        if(!val["com.adobe.granite.repository.hc.impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.repository.hc.impl"]);
            setComAdobeGraniteRepositoryHcImpl( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.rest.assets") != val.end())
    {
        if(!val["com.adobe.granite.rest.assets"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.rest.assets"]);
            setComAdobeGraniteRestAssets( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.security.ui") != val.end())
    {
        if(!val["com.adobe.granite.security.ui"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.security.ui"]);
            setComAdobeGraniteSecurityUi( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.startup") != val.end())
    {
        if(!val["com.adobe.granite.startup"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.startup"]);
            setComAdobeGraniteStartup( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.tagsoup") != val.end())
    {
        if(!val["com.adobe.granite.tagsoup"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.tagsoup"]);
            setComAdobeGraniteTagsoup( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.taskmanagement.core") != val.end())
    {
        if(!val["com.adobe.granite.taskmanagement.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.taskmanagement.core"]);
            setComAdobeGraniteTaskmanagementCore( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.taskmanagement.workflow") != val.end())
    {
        if(!val["com.adobe.granite.taskmanagement.workflow"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.taskmanagement.workflow"]);
            setComAdobeGraniteTaskmanagementWorkflow( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.ui.clientlibs.compiler.less") != val.end())
    {
        if(!val["com.adobe.granite.ui.clientlibs.compiler.less"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.ui.clientlibs.compiler.less"]);
            setComAdobeGraniteUiClientlibsCompilerLess( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.ui.clientlibs.processor.gcc") != val.end())
    {
        if(!val["com.adobe.granite.ui.clientlibs.processor.gcc"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.ui.clientlibs.processor.gcc"]);
            setComAdobeGraniteUiClientlibsProcessorGcc( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.webconsole.plugins") != val.end())
    {
        if(!val["com.adobe.granite.webconsole.plugins"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.webconsole.plugins"]);
            setComAdobeGraniteWebconsolePlugins( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.workflow.console") != val.end())
    {
        if(!val["com.adobe.granite.workflow.console"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.workflow.console"]);
            setComAdobeGraniteWorkflowConsole( newItem );
        }
        
    }
    if(val.find("com.adobe.xmp.worker.files.native.fragment.linux") != val.end())
    {
        if(!val["com.adobe.xmp.worker.files.native.fragment.linux"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.xmp.worker.files.native.fragment.linux"]);
            setComAdobeXmpWorkerFilesNativeFragmentLinux( newItem );
        }
        
    }
    if(val.find("com.adobe.xmp.worker.files.native.fragment.macosx") != val.end())
    {
        if(!val["com.adobe.xmp.worker.files.native.fragment.macosx"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.xmp.worker.files.native.fragment.macosx"]);
            setComAdobeXmpWorkerFilesNativeFragmentMacosx( newItem );
        }
        
    }
    if(val.find("com.adobe.xmp.worker.files.native.fragment.win") != val.end())
    {
        if(!val["com.adobe.xmp.worker.files.native.fragment.win"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.xmp.worker.files.native.fragment.win"]);
            setComAdobeXmpWorkerFilesNativeFragmentWin( newItem );
        }
        
    }
    if(val.find("com.day.commons.osgi.wrapper.simple-jndi") != val.end())
    {
        if(!val["com.day.commons.osgi.wrapper.simple-jndi"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.commons.osgi.wrapper.simple-jndi"]);
            setComDayCommonsOsgiWrapperSimpleJndi( newItem );
        }
        
    }
    if(val.find("com.day.cq.cq-authhandler") != val.end())
    {
        if(!val["com.day.cq.cq-authhandler"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.cq-authhandler"]);
            setComDayCqCqAuthhandler( newItem );
        }
        
    }
    if(val.find("com.day.cq.cq-compat-configupdate") != val.end())
    {
        if(!val["com.day.cq.cq-compat-configupdate"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.cq-compat-configupdate"]);
            setComDayCqCqCompatConfigupdate( newItem );
        }
        
    }
    if(val.find("com.day.cq.cq-licensebranding") != val.end())
    {
        if(!val["com.day.cq.cq-licensebranding"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.cq-licensebranding"]);
            setComDayCqCqLicensebranding( newItem );
        }
        
    }
    if(val.find("com.day.cq.cq-notifcation-impl") != val.end())
    {
        if(!val["com.day.cq.cq-notifcation-impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.cq-notifcation-impl"]);
            setComDayCqCqNotifcationImpl( newItem );
        }
        
    }
    if(val.find("com.day.cq.cq-replication-audit") != val.end())
    {
        if(!val["com.day.cq.cq-replication-audit"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.cq-replication-audit"]);
            setComDayCqCqReplicationAudit( newItem );
        }
        
    }
    if(val.find("com.day.cq.cq-search-ext") != val.end())
    {
        if(!val["com.day.cq.cq-search-ext"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.cq-search-ext"]);
            setComDayCqCqSearchExt( newItem );
        }
        
    }
    if(val.find("com.day.cq.dam.cq-dam-annotation-print") != val.end())
    {
        if(!val["com.day.cq.dam.cq-dam-annotation-print"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.dam.cq-dam-annotation-print"]);
            setComDayCqDamCqDamAnnotationPrint( newItem );
        }
        
    }
    if(val.find("com.day.cq.dam.cq-dam-asset-usage") != val.end())
    {
        if(!val["com.day.cq.dam.cq-dam-asset-usage"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.dam.cq-dam-asset-usage"]);
            setComDayCqDamCqDamAssetUsage( newItem );
        }
        
    }
    if(val.find("com.day.cq.dam.cq-dam-s7dam") != val.end())
    {
        if(!val["com.day.cq.dam.cq-dam-s7dam"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.dam.cq-dam-s7dam"]);
            setComDayCqDamCqDamS7dam( newItem );
        }
        
    }
    if(val.find("com.day.cq.dam.cq-dam-similaritysearch") != val.end())
    {
        if(!val["com.day.cq.dam.cq-dam-similaritysearch"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.dam.cq-dam-similaritysearch"]);
            setComDayCqDamCqDamSimilaritysearch( newItem );
        }
        
    }
    if(val.find("com.day.cq.dam.dam-webdav-support") != val.end())
    {
        if(!val["com.day.cq.dam.dam-webdav-support"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.dam.dam-webdav-support"]);
            setComDayCqDamDamWebdavSupport( newItem );
        }
        
    }
    if(val.find("com.day.cq.pre-upgrade-tasks") != val.end())
    {
        if(!val["com.day.cq.pre-upgrade-tasks"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.pre-upgrade-tasks"]);
            setComDayCqPreUpgradeTasks( newItem );
        }
        
    }
    if(val.find("com.day.cq.replication.extensions") != val.end())
    {
        if(!val["com.day.cq.replication.extensions"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.replication.extensions"]);
            setComDayCqReplicationExtensions( newItem );
        }
        
    }
    if(val.find("com.day.cq.wcm.cq-msm-core") != val.end())
    {
        if(!val["com.day.cq.wcm.cq-msm-core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.wcm.cq-msm-core"]);
            setComDayCqWcmCqMsmCore( newItem );
        }
        
    }
    if(val.find("com.day.cq.wcm.cq-wcm-translation") != val.end())
    {
        if(!val["com.day.cq.wcm.cq-wcm-translation"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.day.cq.wcm.cq-wcm-translation"]);
            setComDayCqWcmCqWcmTranslation( newItem );
        }
        
    }
    if(val.find("day-commons-jrawio") != val.end())
    {
        if(!val["day-commons-jrawio"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["day-commons-jrawio"]);
            setDayCommonsJrawio( newItem );
        }
        
    }
    if(val.find("org.apache.aries.jmx.whiteboard") != val.end())
    {
        if(!val["org.apache.aries.jmx.whiteboard"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.aries.jmx.whiteboard"]);
            setOrgApacheAriesJmxWhiteboard( newItem );
        }
        
    }
    if(val.find("org.apache.felix.http.sslfilter") != val.end())
    {
        if(!val["org.apache.felix.http.sslfilter"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.felix.http.sslfilter"]);
            setOrgApacheFelixHttpSslfilter( newItem );
        }
        
    }
    if(val.find("org.apache.felix.org.apache.felix.threaddump") != val.end())
    {
        if(!val["org.apache.felix.org.apache.felix.threaddump"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.felix.org.apache.felix.threaddump"]);
            setOrgApacheFelixOrgApacheFelixThreaddump( newItem );
        }
        
    }
    if(val.find("org.apache.felix.webconsole.plugins.ds") != val.end())
    {
        if(!val["org.apache.felix.webconsole.plugins.ds"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.felix.webconsole.plugins.ds"]);
            setOrgApacheFelixWebconsolePluginsDs( newItem );
        }
        
    }
    if(val.find("org.apache.felix.webconsole.plugins.event") != val.end())
    {
        if(!val["org.apache.felix.webconsole.plugins.event"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.felix.webconsole.plugins.event"]);
            setOrgApacheFelixWebconsolePluginsEvent( newItem );
        }
        
    }
    if(val.find("org.apache.felix.webconsole.plugins.memoryusage") != val.end())
    {
        if(!val["org.apache.felix.webconsole.plugins.memoryusage"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.felix.webconsole.plugins.memoryusage"]);
            setOrgApacheFelixWebconsolePluginsMemoryusage( newItem );
        }
        
    }
    if(val.find("org.apache.felix.webconsole.plugins.packageadmin") != val.end())
    {
        if(!val["org.apache.felix.webconsole.plugins.packageadmin"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.felix.webconsole.plugins.packageadmin"]);
            setOrgApacheFelixWebconsolePluginsPackageadmin( newItem );
        }
        
    }
    if(val.find("org.apache.jackrabbit.oak-auth-ldap") != val.end())
    {
        if(!val["org.apache.jackrabbit.oak-auth-ldap"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.jackrabbit.oak-auth-ldap"]);
            setOrgApacheJackrabbitOakAuthLdap( newItem );
        }
        
    }
    if(val.find("org.apache.jackrabbit.oak-segment-tar") != val.end())
    {
        if(!val["org.apache.jackrabbit.oak-segment-tar"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.jackrabbit.oak-segment-tar"]);
            setOrgApacheJackrabbitOakSegmentTar( newItem );
        }
        
    }
    if(val.find("org.apache.jackrabbit.oak-solr-osgi") != val.end())
    {
        if(!val["org.apache.jackrabbit.oak-solr-osgi"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.jackrabbit.oak-solr-osgi"]);
            setOrgApacheJackrabbitOakSolrOsgi( newItem );
        }
        
    }
    if(val.find("org.apache.sling.bundleresource.impl") != val.end())
    {
        if(!val["org.apache.sling.bundleresource.impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.bundleresource.impl"]);
            setOrgApacheSlingBundleresourceImpl( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.fsclassloader") != val.end())
    {
        if(!val["org.apache.sling.commons.fsclassloader"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.commons.fsclassloader"]);
            setOrgApacheSlingCommonsFsclassloader( newItem );
        }
        
    }
    if(val.find("org.apache.sling.commons.log.webconsole") != val.end())
    {
        if(!val["org.apache.sling.commons.log.webconsole"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.commons.log.webconsole"]);
            setOrgApacheSlingCommonsLogWebconsole( newItem );
        }
        
    }
    if(val.find("org.apache.sling.datasource") != val.end())
    {
        if(!val["org.apache.sling.datasource"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.datasource"]);
            setOrgApacheSlingDatasource( newItem );
        }
        
    }
    if(val.find("org.apache.sling.discovery.base") != val.end())
    {
        if(!val["org.apache.sling.discovery.base"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.discovery.base"]);
            setOrgApacheSlingDiscoveryBase( newItem );
        }
        
    }
    if(val.find("org.apache.sling.discovery.oak") != val.end())
    {
        if(!val["org.apache.sling.discovery.oak"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.discovery.oak"]);
            setOrgApacheSlingDiscoveryOak( newItem );
        }
        
    }
    if(val.find("org.apache.sling.discovery.support") != val.end())
    {
        if(!val["org.apache.sling.discovery.support"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.discovery.support"]);
            setOrgApacheSlingDiscoverySupport( newItem );
        }
        
    }
    if(val.find("org.apache.sling.distribution.api") != val.end())
    {
        if(!val["org.apache.sling.distribution.api"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.distribution.api"]);
            setOrgApacheSlingDistributionApi( newItem );
        }
        
    }
    if(val.find("org.apache.sling.distribution.core") != val.end())
    {
        if(!val["org.apache.sling.distribution.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.distribution.core"]);
            setOrgApacheSlingDistributionCore( newItem );
        }
        
    }
    if(val.find("org.apache.sling.extensions.webconsolesecurityprovider") != val.end())
    {
        if(!val["org.apache.sling.extensions.webconsolesecurityprovider"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.extensions.webconsolesecurityprovider"]);
            setOrgApacheSlingExtensionsWebconsolesecurityprovider( newItem );
        }
        
    }
    if(val.find("org.apache.sling.hc.webconsole") != val.end())
    {
        if(!val["org.apache.sling.hc.webconsole"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.hc.webconsole"]);
            setOrgApacheSlingHcWebconsole( newItem );
        }
        
    }
    if(val.find("org.apache.sling.installer.console") != val.end())
    {
        if(!val["org.apache.sling.installer.console"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.installer.console"]);
            setOrgApacheSlingInstallerConsole( newItem );
        }
        
    }
    if(val.find("org.apache.sling.installer.provider.file") != val.end())
    {
        if(!val["org.apache.sling.installer.provider.file"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.installer.provider.file"]);
            setOrgApacheSlingInstallerProviderFile( newItem );
        }
        
    }
    if(val.find("org.apache.sling.installer.provider.jcr") != val.end())
    {
        if(!val["org.apache.sling.installer.provider.jcr"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.installer.provider.jcr"]);
            setOrgApacheSlingInstallerProviderJcr( newItem );
        }
        
    }
    if(val.find("org.apache.sling.jcr.davex") != val.end())
    {
        if(!val["org.apache.sling.jcr.davex"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.jcr.davex"]);
            setOrgApacheSlingJcrDavex( newItem );
        }
        
    }
    if(val.find("org.apache.sling.jcr.resourcesecurity") != val.end())
    {
        if(!val["org.apache.sling.jcr.resourcesecurity"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.jcr.resourcesecurity"]);
            setOrgApacheSlingJcrResourcesecurity( newItem );
        }
        
    }
    if(val.find("org.apache.sling.jmx.provider") != val.end())
    {
        if(!val["org.apache.sling.jmx.provider"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.jmx.provider"]);
            setOrgApacheSlingJmxProvider( newItem );
        }
        
    }
    if(val.find("org.apache.sling.launchpad.installer") != val.end())
    {
        if(!val["org.apache.sling.launchpad.installer"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.launchpad.installer"]);
            setOrgApacheSlingLaunchpadInstaller( newItem );
        }
        
    }
    if(val.find("org.apache.sling.models.impl") != val.end())
    {
        if(!val["org.apache.sling.models.impl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.models.impl"]);
            setOrgApacheSlingModelsImpl( newItem );
        }
        
    }
    if(val.find("org.apache.sling.repoinit.parser") != val.end())
    {
        if(!val["org.apache.sling.repoinit.parser"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.repoinit.parser"]);
            setOrgApacheSlingRepoinitParser( newItem );
        }
        
    }
    if(val.find("org.apache.sling.resource.inventory") != val.end())
    {
        if(!val["org.apache.sling.resource.inventory"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.resource.inventory"]);
            setOrgApacheSlingResourceInventory( newItem );
        }
        
    }
    if(val.find("org.apache.sling.resourceresolver") != val.end())
    {
        if(!val["org.apache.sling.resourceresolver"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.resourceresolver"]);
            setOrgApacheSlingResourceresolver( newItem );
        }
        
    }
    if(val.find("org.apache.sling.scripting.javascript") != val.end())
    {
        if(!val["org.apache.sling.scripting.javascript"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.scripting.javascript"]);
            setOrgApacheSlingScriptingJavascript( newItem );
        }
        
    }
    if(val.find("org.apache.sling.scripting.jst") != val.end())
    {
        if(!val["org.apache.sling.scripting.jst"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.scripting.jst"]);
            setOrgApacheSlingScriptingJst( newItem );
        }
        
    }
    if(val.find("org.apache.sling.scripting.sightly.js.provider") != val.end())
    {
        if(!val["org.apache.sling.scripting.sightly.js.provider"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.scripting.sightly.js.provider"]);
            setOrgApacheSlingScriptingSightlyJsProvider( newItem );
        }
        
    }
    if(val.find("org.apache.sling.scripting.sightly.models.provider") != val.end())
    {
        if(!val["org.apache.sling.scripting.sightly.models.provider"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.scripting.sightly.models.provider"]);
            setOrgApacheSlingScriptingSightlyModelsProvider( newItem );
        }
        
    }
    if(val.find("org.apache.sling.security") != val.end())
    {
        if(!val["org.apache.sling.security"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.security"]);
            setOrgApacheSlingSecurity( newItem );
        }
        
    }
    if(val.find("org.apache.sling.servlets.compat") != val.end())
    {
        if(!val["org.apache.sling.servlets.compat"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.servlets.compat"]);
            setOrgApacheSlingServletsCompat( newItem );
        }
        
    }
    if(val.find("org.apache.sling.servlets.get") != val.end())
    {
        if(!val["org.apache.sling.servlets.get"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.servlets.get"]);
            setOrgApacheSlingServletsGet( newItem );
        }
        
    }
    if(val.find("org.apache.sling.startupfilter.disabler") != val.end())
    {
        if(!val["org.apache.sling.startupfilter.disabler"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.startupfilter.disabler"]);
            setOrgApacheSlingStartupfilterDisabler( newItem );
        }
        
    }
    if(val.find("org.apache.sling.tracer") != val.end())
    {
        if(!val["org.apache.sling.tracer"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.tracer"]);
            setOrgApacheSlingTracer( newItem );
        }
        
    }
    if(val.find("we.retail.client.app.core") != val.end())
    {
        if(!val["we.retail.client.app.core"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["we.retail.client.app.core"]);
            setWeRetailClientAppCore( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCdnCdnRewriter() const
{
    return m_Com_adobe_cq_cdn_cdn_rewriter;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCdnCdnRewriter(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cdn_cdn_rewriter = value;
    m_Com_adobe_cq_cdn_cdn_rewriterIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCdnCdnRewriterIsSet() const
{
    return m_Com_adobe_cq_cdn_cdn_rewriterIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cdn_cdn_rewriter()
{
    m_Com_adobe_cq_cdn_cdn_rewriterIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCloudConfigComponents() const
{
    return m_Com_adobe_cq_cloud_config_components;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCloudConfigComponents(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cloud_config_components = value;
    m_Com_adobe_cq_cloud_config_componentsIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCloudConfigComponentsIsSet() const
{
    return m_Com_adobe_cq_cloud_config_componentsIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cloud_config_components()
{
    m_Com_adobe_cq_cloud_config_componentsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCloudConfigCore() const
{
    return m_Com_adobe_cq_cloud_config_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCloudConfigCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cloud_config_core = value;
    m_Com_adobe_cq_cloud_config_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCloudConfigCoreIsSet() const
{
    return m_Com_adobe_cq_cloud_config_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cloud_config_core()
{
    m_Com_adobe_cq_cloud_config_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCloudConfigUi() const
{
    return m_Com_adobe_cq_cloud_config_ui;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCloudConfigUi(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cloud_config_ui = value;
    m_Com_adobe_cq_cloud_config_uiIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCloudConfigUiIsSet() const
{
    return m_Com_adobe_cq_cloud_config_uiIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cloud_config_ui()
{
    m_Com_adobe_cq_cloud_config_uiIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqEditor() const
{
    return m_Com_adobe_cq_com_adobe_cq_editor;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqEditor(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_com_adobe_cq_editor = value;
    m_Com_adobe_cq_com_adobe_cq_editorIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqComAdobeCqEditorIsSet() const
{
    return m_Com_adobe_cq_com_adobe_cq_editorIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_com_adobe_cq_editor()
{
    m_Com_adobe_cq_com_adobe_cq_editorIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqProjectsCore() const
{
    return m_Com_adobe_cq_com_adobe_cq_projects_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqProjectsCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_com_adobe_cq_projects_core = value;
    m_Com_adobe_cq_com_adobe_cq_projects_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqComAdobeCqProjectsCoreIsSet() const
{
    return m_Com_adobe_cq_com_adobe_cq_projects_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_com_adobe_cq_projects_core()
{
    m_Com_adobe_cq_com_adobe_cq_projects_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqProjectsWcmCore() const
{
    return m_Com_adobe_cq_com_adobe_cq_projects_wcm_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqProjectsWcmCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_com_adobe_cq_projects_wcm_core = value;
    m_Com_adobe_cq_com_adobe_cq_projects_wcm_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqComAdobeCqProjectsWcmCoreIsSet() const
{
    return m_Com_adobe_cq_com_adobe_cq_projects_wcm_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_com_adobe_cq_projects_wcm_core()
{
    m_Com_adobe_cq_com_adobe_cq_projects_wcm_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqUiCommons() const
{
    return m_Com_adobe_cq_com_adobe_cq_ui_commons;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqUiCommons(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_com_adobe_cq_ui_commons = value;
    m_Com_adobe_cq_com_adobe_cq_ui_commonsIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqComAdobeCqUiCommonsIsSet() const
{
    return m_Com_adobe_cq_com_adobe_cq_ui_commonsIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_com_adobe_cq_ui_commons()
{
    m_Com_adobe_cq_com_adobe_cq_ui_commonsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqComAdobeCqWcmStyle() const
{
    return m_Com_adobe_cq_com_adobe_cq_wcm_style;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqComAdobeCqWcmStyle(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_com_adobe_cq_wcm_style = value;
    m_Com_adobe_cq_com_adobe_cq_wcm_styleIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqComAdobeCqWcmStyleIsSet() const
{
    return m_Com_adobe_cq_com_adobe_cq_wcm_styleIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_com_adobe_cq_wcm_style()
{
    m_Com_adobe_cq_com_adobe_cq_wcm_styleIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqActivitymapIntegration() const
{
    return m_Com_adobe_cq_cq_activitymap_integration;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqActivitymapIntegration(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cq_activitymap_integration = value;
    m_Com_adobe_cq_cq_activitymap_integrationIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCqActivitymapIntegrationIsSet() const
{
    return m_Com_adobe_cq_cq_activitymap_integrationIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cq_activitymap_integration()
{
    m_Com_adobe_cq_cq_activitymap_integrationIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqContexthubCommons() const
{
    return m_Com_adobe_cq_cq_contexthub_commons;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqContexthubCommons(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cq_contexthub_commons = value;
    m_Com_adobe_cq_cq_contexthub_commonsIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCqContexthubCommonsIsSet() const
{
    return m_Com_adobe_cq_cq_contexthub_commonsIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cq_contexthub_commons()
{
    m_Com_adobe_cq_cq_contexthub_commonsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqDtm() const
{
    return m_Com_adobe_cq_cq_dtm;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqDtm(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cq_dtm = value;
    m_Com_adobe_cq_cq_dtmIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCqDtmIsSet() const
{
    return m_Com_adobe_cq_cq_dtmIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cq_dtm()
{
    m_Com_adobe_cq_cq_dtmIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqHealthcheck() const
{
    return m_Com_adobe_cq_cq_healthcheck;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqHealthcheck(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cq_healthcheck = value;
    m_Com_adobe_cq_cq_healthcheckIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCqHealthcheckIsSet() const
{
    return m_Com_adobe_cq_cq_healthcheckIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cq_healthcheck()
{
    m_Com_adobe_cq_cq_healthcheckIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqMultisiteTargeting() const
{
    return m_Com_adobe_cq_cq_multisite_targeting;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqMultisiteTargeting(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cq_multisite_targeting = value;
    m_Com_adobe_cq_cq_multisite_targetingIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCqMultisiteTargetingIsSet() const
{
    return m_Com_adobe_cq_cq_multisite_targetingIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cq_multisite_targeting()
{
    m_Com_adobe_cq_cq_multisite_targetingIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqPreUpgradeCleanup() const
{
    return m_Com_adobe_cq_cq_pre_upgrade_cleanup;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqPreUpgradeCleanup(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cq_pre_upgrade_cleanup = value;
    m_Com_adobe_cq_cq_pre_upgrade_cleanupIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCqPreUpgradeCleanupIsSet() const
{
    return m_Com_adobe_cq_cq_pre_upgrade_cleanupIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cq_pre_upgrade_cleanup()
{
    m_Com_adobe_cq_cq_pre_upgrade_cleanupIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqProductInfoProvider() const
{
    return m_Com_adobe_cq_cq_product_info_provider;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqProductInfoProvider(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cq_product_info_provider = value;
    m_Com_adobe_cq_cq_product_info_providerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCqProductInfoProviderIsSet() const
{
    return m_Com_adobe_cq_cq_product_info_providerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cq_product_info_provider()
{
    m_Com_adobe_cq_cq_product_info_providerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqRestSites() const
{
    return m_Com_adobe_cq_cq_rest_sites;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqRestSites(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cq_rest_sites = value;
    m_Com_adobe_cq_cq_rest_sitesIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCqRestSitesIsSet() const
{
    return m_Com_adobe_cq_cq_rest_sitesIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cq_rest_sites()
{
    m_Com_adobe_cq_cq_rest_sitesIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqCqSecurityHc() const
{
    return m_Com_adobe_cq_cq_security_hc;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqCqSecurityHc(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_cq_security_hc = value;
    m_Com_adobe_cq_cq_security_hcIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqCqSecurityHcIsSet() const
{
    return m_Com_adobe_cq_cq_security_hcIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_cq_security_hc()
{
    m_Com_adobe_cq_cq_security_hcIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqDamCqDamSvgHandler() const
{
    return m_Com_adobe_cq_dam_cq_dam_svg_handler;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqDamCqDamSvgHandler(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_dam_cq_dam_svg_handler = value;
    m_Com_adobe_cq_dam_cq_dam_svg_handlerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqDamCqDamSvgHandlerIsSet() const
{
    return m_Com_adobe_cq_dam_cq_dam_svg_handlerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_dam_cq_dam_svg_handler()
{
    m_Com_adobe_cq_dam_cq_dam_svg_handlerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqDamCqScene7Imaging() const
{
    return m_Com_adobe_cq_dam_cq_scene7_imaging;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqDamCqScene7Imaging(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_dam_cq_scene7_imaging = value;
    m_Com_adobe_cq_dam_cq_scene7_imagingIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqDamCqScene7ImagingIsSet() const
{
    return m_Com_adobe_cq_dam_cq_scene7_imagingIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_dam_cq_scene7_imaging()
{
    m_Com_adobe_cq_dam_cq_scene7_imagingIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqDtmReactorCore() const
{
    return m_Com_adobe_cq_dtm_reactor_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqDtmReactorCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_dtm_reactor_core = value;
    m_Com_adobe_cq_dtm_reactor_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqDtmReactorCoreIsSet() const
{
    return m_Com_adobe_cq_dtm_reactor_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_dtm_reactor_core()
{
    m_Com_adobe_cq_dtm_reactor_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqDtmReactorUi() const
{
    return m_Com_adobe_cq_dtm_reactor_ui;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqDtmReactorUi(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_dtm_reactor_ui = value;
    m_Com_adobe_cq_dtm_reactor_uiIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqDtmReactorUiIsSet() const
{
    return m_Com_adobe_cq_dtm_reactor_uiIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_dtm_reactor_ui()
{
    m_Com_adobe_cq_dtm_reactor_uiIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqExpJspelResolver() const
{
    return m_Com_adobe_cq_exp_jspel_resolver;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqExpJspelResolver(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_exp_jspel_resolver = value;
    m_Com_adobe_cq_exp_jspel_resolverIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqExpJspelResolverIsSet() const
{
    return m_Com_adobe_cq_exp_jspel_resolverIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_exp_jspel_resolver()
{
    m_Com_adobe_cq_exp_jspel_resolverIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqInboxCqInbox() const
{
    return m_Com_adobe_cq_inbox_cq_inbox;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqInboxCqInbox(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_inbox_cq_inbox = value;
    m_Com_adobe_cq_inbox_cq_inboxIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqInboxCqInboxIsSet() const
{
    return m_Com_adobe_cq_inbox_cq_inboxIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_inbox_cq_inbox()
{
    m_Com_adobe_cq_inbox_cq_inboxIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqJsonSchemaParser() const
{
    return m_Com_adobe_cq_json_schema_parser;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqJsonSchemaParser(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_json_schema_parser = value;
    m_Com_adobe_cq_json_schema_parserIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqJsonSchemaParserIsSet() const
{
    return m_Com_adobe_cq_json_schema_parserIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_json_schema_parser()
{
    m_Com_adobe_cq_json_schema_parserIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMediaCqMediaPublishingDpsFpCore() const
{
    return m_Com_adobe_cq_media_cq_media_publishing_dps_fp_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMediaCqMediaPublishingDpsFpCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_media_cq_media_publishing_dps_fp_core = value;
    m_Com_adobe_cq_media_cq_media_publishing_dps_fp_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqMediaCqMediaPublishingDpsFpCoreIsSet() const
{
    return m_Com_adobe_cq_media_cq_media_publishing_dps_fp_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_media_cq_media_publishing_dps_fp_core()
{
    m_Com_adobe_cq_media_cq_media_publishing_dps_fp_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMobileCqMobileCaas() const
{
    return m_Com_adobe_cq_mobile_cq_mobile_caas;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMobileCqMobileCaas(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_mobile_cq_mobile_caas = value;
    m_Com_adobe_cq_mobile_cq_mobile_caasIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqMobileCqMobileCaasIsSet() const
{
    return m_Com_adobe_cq_mobile_cq_mobile_caasIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_mobile_cq_mobile_caas()
{
    m_Com_adobe_cq_mobile_cq_mobile_caasIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMobileCqMobileIndexBuilder() const
{
    return m_Com_adobe_cq_mobile_cq_mobile_index_builder;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMobileCqMobileIndexBuilder(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_mobile_cq_mobile_index_builder = value;
    m_Com_adobe_cq_mobile_cq_mobile_index_builderIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqMobileCqMobileIndexBuilderIsSet() const
{
    return m_Com_adobe_cq_mobile_cq_mobile_index_builderIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_mobile_cq_mobile_index_builder()
{
    m_Com_adobe_cq_mobile_cq_mobile_index_builderIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMobileCqMobilePhonegapBuild() const
{
    return m_Com_adobe_cq_mobile_cq_mobile_phonegap_build;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMobileCqMobilePhonegapBuild(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_mobile_cq_mobile_phonegap_build = value;
    m_Com_adobe_cq_mobile_cq_mobile_phonegap_buildIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqMobileCqMobilePhonegapBuildIsSet() const
{
    return m_Com_adobe_cq_mobile_cq_mobile_phonegap_buildIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_mobile_cq_mobile_phonegap_build()
{
    m_Com_adobe_cq_mobile_cq_mobile_phonegap_buildIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqMyspell() const
{
    return m_Com_adobe_cq_myspell;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqMyspell(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_myspell = value;
    m_Com_adobe_cq_myspellIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqMyspellIsSet() const
{
    return m_Com_adobe_cq_myspellIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_myspell()
{
    m_Com_adobe_cq_myspellIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSampleWeRetailCore() const
{
    return m_Com_adobe_cq_sample_we_retail_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSampleWeRetailCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_sample_we_retail_core = value;
    m_Com_adobe_cq_sample_we_retail_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSampleWeRetailCoreIsSet() const
{
    return m_Com_adobe_cq_sample_we_retail_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_sample_we_retail_core()
{
    m_Com_adobe_cq_sample_we_retail_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqScreensComAdobeCqScreensDcc() const
{
    return m_Com_adobe_cq_screens_com_adobe_cq_screens_dcc;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqScreensComAdobeCqScreensDcc(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_screens_com_adobe_cq_screens_dcc = value;
    m_Com_adobe_cq_screens_com_adobe_cq_screens_dccIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqScreensComAdobeCqScreensDccIsSet() const
{
    return m_Com_adobe_cq_screens_com_adobe_cq_screens_dccIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_screens_com_adobe_cq_screens_dcc()
{
    m_Com_adobe_cq_screens_com_adobe_cq_screens_dccIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqScreensComAdobeCqScreensMqCore() const
{
    return m_Com_adobe_cq_screens_com_adobe_cq_screens_mq_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqScreensComAdobeCqScreensMqCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_screens_com_adobe_cq_screens_mq_core = value;
    m_Com_adobe_cq_screens_com_adobe_cq_screens_mq_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqScreensComAdobeCqScreensMqCoreIsSet() const
{
    return m_Com_adobe_cq_screens_com_adobe_cq_screens_mq_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_screens_com_adobe_cq_screens_mq_core()
{
    m_Com_adobe_cq_screens_com_adobe_cq_screens_mq_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialAsProvider() const
{
    return m_Com_adobe_cq_social_cq_social_as_provider;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialAsProvider(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_as_provider = value;
    m_Com_adobe_cq_social_cq_social_as_providerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialAsProviderIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_as_providerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_as_provider()
{
    m_Com_adobe_cq_social_cq_social_as_providerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialBadgingBasicImpl() const
{
    return m_Com_adobe_cq_social_cq_social_badging_basic_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialBadgingBasicImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_badging_basic_impl = value;
    m_Com_adobe_cq_social_cq_social_badging_basic_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialBadgingBasicImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_badging_basic_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_badging_basic_impl()
{
    m_Com_adobe_cq_social_cq_social_badging_basic_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialBadgingImpl() const
{
    return m_Com_adobe_cq_social_cq_social_badging_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialBadgingImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_badging_impl = value;
    m_Com_adobe_cq_social_cq_social_badging_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialBadgingImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_badging_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_badging_impl()
{
    m_Com_adobe_cq_social_cq_social_badging_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialCalendarImpl() const
{
    return m_Com_adobe_cq_social_cq_social_calendar_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialCalendarImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_calendar_impl = value;
    m_Com_adobe_cq_social_cq_social_calendar_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialCalendarImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_calendar_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_calendar_impl()
{
    m_Com_adobe_cq_social_cq_social_calendar_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialContentFragmentsImpl() const
{
    return m_Com_adobe_cq_social_cq_social_content_fragments_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialContentFragmentsImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_content_fragments_impl = value;
    m_Com_adobe_cq_social_cq_social_content_fragments_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialContentFragmentsImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_content_fragments_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_content_fragments_impl()
{
    m_Com_adobe_cq_social_cq_social_content_fragments_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialEnablementImpl() const
{
    return m_Com_adobe_cq_social_cq_social_enablement_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialEnablementImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_enablement_impl = value;
    m_Com_adobe_cq_social_cq_social_enablement_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialEnablementImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_enablement_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_enablement_impl()
{
    m_Com_adobe_cq_social_cq_social_enablement_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialGraphImpl() const
{
    return m_Com_adobe_cq_social_cq_social_graph_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialGraphImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_graph_impl = value;
    m_Com_adobe_cq_social_cq_social_graph_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialGraphImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_graph_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_graph_impl()
{
    m_Com_adobe_cq_social_cq_social_graph_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialIdeationImpl() const
{
    return m_Com_adobe_cq_social_cq_social_ideation_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialIdeationImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_ideation_impl = value;
    m_Com_adobe_cq_social_cq_social_ideation_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialIdeationImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_ideation_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_ideation_impl()
{
    m_Com_adobe_cq_social_cq_social_ideation_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialJcrProvider() const
{
    return m_Com_adobe_cq_social_cq_social_jcr_provider;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialJcrProvider(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_jcr_provider = value;
    m_Com_adobe_cq_social_cq_social_jcr_providerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialJcrProviderIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_jcr_providerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_jcr_provider()
{
    m_Com_adobe_cq_social_cq_social_jcr_providerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialMembersImpl() const
{
    return m_Com_adobe_cq_social_cq_social_members_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialMembersImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_members_impl = value;
    m_Com_adobe_cq_social_cq_social_members_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialMembersImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_members_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_members_impl()
{
    m_Com_adobe_cq_social_cq_social_members_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialMsProvider() const
{
    return m_Com_adobe_cq_social_cq_social_ms_provider;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialMsProvider(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_ms_provider = value;
    m_Com_adobe_cq_social_cq_social_ms_providerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialMsProviderIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_ms_providerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_ms_provider()
{
    m_Com_adobe_cq_social_cq_social_ms_providerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialNotificationsChannelsWeb() const
{
    return m_Com_adobe_cq_social_cq_social_notifications_channels_web;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialNotificationsChannelsWeb(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_notifications_channels_web = value;
    m_Com_adobe_cq_social_cq_social_notifications_channels_webIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialNotificationsChannelsWebIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_notifications_channels_webIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_notifications_channels_web()
{
    m_Com_adobe_cq_social_cq_social_notifications_channels_webIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialNotificationsImpl() const
{
    return m_Com_adobe_cq_social_cq_social_notifications_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialNotificationsImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_notifications_impl = value;
    m_Com_adobe_cq_social_cq_social_notifications_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialNotificationsImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_notifications_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_notifications_impl()
{
    m_Com_adobe_cq_social_cq_social_notifications_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialRdbProvider() const
{
    return m_Com_adobe_cq_social_cq_social_rdb_provider;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialRdbProvider(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_rdb_provider = value;
    m_Com_adobe_cq_social_cq_social_rdb_providerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialRdbProviderIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_rdb_providerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_rdb_provider()
{
    m_Com_adobe_cq_social_cq_social_rdb_providerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialScfImpl() const
{
    return m_Com_adobe_cq_social_cq_social_scf_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialScfImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_scf_impl = value;
    m_Com_adobe_cq_social_cq_social_scf_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialScfImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_scf_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_scf_impl()
{
    m_Com_adobe_cq_social_cq_social_scf_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialScoringBasicImpl() const
{
    return m_Com_adobe_cq_social_cq_social_scoring_basic_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialScoringBasicImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_scoring_basic_impl = value;
    m_Com_adobe_cq_social_cq_social_scoring_basic_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialScoringBasicImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_scoring_basic_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_scoring_basic_impl()
{
    m_Com_adobe_cq_social_cq_social_scoring_basic_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialScoringImpl() const
{
    return m_Com_adobe_cq_social_cq_social_scoring_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialScoringImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_scoring_impl = value;
    m_Com_adobe_cq_social_cq_social_scoring_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialScoringImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_scoring_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_scoring_impl()
{
    m_Com_adobe_cq_social_cq_social_scoring_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialServiceusersImpl() const
{
    return m_Com_adobe_cq_social_cq_social_serviceusers_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialServiceusersImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_serviceusers_impl = value;
    m_Com_adobe_cq_social_cq_social_serviceusers_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialServiceusersImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_serviceusers_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_serviceusers_impl()
{
    m_Com_adobe_cq_social_cq_social_serviceusers_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialSrpImpl() const
{
    return m_Com_adobe_cq_social_cq_social_srp_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialSrpImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_srp_impl = value;
    m_Com_adobe_cq_social_cq_social_srp_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialSrpImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_srp_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_srp_impl()
{
    m_Com_adobe_cq_social_cq_social_srp_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeCqSocialCqSocialUgcbaseImpl() const
{
    return m_Com_adobe_cq_social_cq_social_ugcbase_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeCqSocialCqSocialUgcbaseImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_cq_social_cq_social_ugcbase_impl = value;
    m_Com_adobe_cq_social_cq_social_ugcbase_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeCqSocialCqSocialUgcbaseImplIsSet() const
{
    return m_Com_adobe_cq_social_cq_social_ugcbase_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_cq_social_cq_social_ugcbase_impl()
{
    m_Com_adobe_cq_social_cq_social_ugcbase_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeDamCqDamCfmImpl() const
{
    return m_Com_adobe_dam_cq_dam_cfm_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeDamCqDamCfmImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_dam_cq_dam_cfm_impl = value;
    m_Com_adobe_dam_cq_dam_cfm_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeDamCqDamCfmImplIsSet() const
{
    return m_Com_adobe_dam_cq_dam_cfm_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_dam_cq_dam_cfm_impl()
{
    m_Com_adobe_dam_cq_dam_cfm_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeFormsFoundationFormsFoundationBase() const
{
    return m_Com_adobe_forms_foundation_forms_foundation_base;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeFormsFoundationFormsFoundationBase(ConfigNodePropertyString const& value)
{
    m_Com_adobe_forms_foundation_forms_foundation_base = value;
    m_Com_adobe_forms_foundation_forms_foundation_baseIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeFormsFoundationFormsFoundationBaseIsSet() const
{
    return m_Com_adobe_forms_foundation_forms_foundation_baseIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_forms_foundation_forms_foundation_base()
{
    m_Com_adobe_forms_foundation_forms_foundation_baseIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteApicontroller() const
{
    return m_Com_adobe_granite_apicontroller;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteApicontroller(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_apicontroller = value;
    m_Com_adobe_granite_apicontrollerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteApicontrollerIsSet() const
{
    return m_Com_adobe_granite_apicontrollerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_apicontroller()
{
    m_Com_adobe_granite_apicontrollerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteAssetCore() const
{
    return m_Com_adobe_granite_asset_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteAssetCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_asset_core = value;
    m_Com_adobe_granite_asset_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteAssetCoreIsSet() const
{
    return m_Com_adobe_granite_asset_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_asset_core()
{
    m_Com_adobe_granite_asset_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteAuthSso() const
{
    return m_Com_adobe_granite_auth_sso;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteAuthSso(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_auth_sso = value;
    m_Com_adobe_granite_auth_ssoIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteAuthSsoIsSet() const
{
    return m_Com_adobe_granite_auth_ssoIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_auth_sso()
{
    m_Com_adobe_granite_auth_ssoIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteBundlesHcImpl() const
{
    return m_Com_adobe_granite_bundles_hc_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteBundlesHcImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_bundles_hc_impl = value;
    m_Com_adobe_granite_bundles_hc_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteBundlesHcImplIsSet() const
{
    return m_Com_adobe_granite_bundles_hc_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_bundles_hc_impl()
{
    m_Com_adobe_granite_bundles_hc_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCompatRouter() const
{
    return m_Com_adobe_granite_compat_router;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCompatRouter(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_compat_router = value;
    m_Com_adobe_granite_compat_routerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteCompatRouterIsSet() const
{
    return m_Com_adobe_granite_compat_routerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_compat_router()
{
    m_Com_adobe_granite_compat_routerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteConf() const
{
    return m_Com_adobe_granite_conf;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteConf(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_conf = value;
    m_Com_adobe_granite_confIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteConfIsSet() const
{
    return m_Com_adobe_granite_confIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_conf()
{
    m_Com_adobe_granite_confIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteConfUiCore() const
{
    return m_Com_adobe_granite_conf_ui_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteConfUiCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_conf_ui_core = value;
    m_Com_adobe_granite_conf_ui_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteConfUiCoreIsSet() const
{
    return m_Com_adobe_granite_conf_ui_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_conf_ui_core()
{
    m_Com_adobe_granite_conf_ui_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCors() const
{
    return m_Com_adobe_granite_cors;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCors(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_cors = value;
    m_Com_adobe_granite_corsIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteCorsIsSet() const
{
    return m_Com_adobe_granite_corsIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_cors()
{
    m_Com_adobe_granite_corsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCrxExplorer() const
{
    return m_Com_adobe_granite_crx_explorer;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCrxExplorer(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_crx_explorer = value;
    m_Com_adobe_granite_crx_explorerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteCrxExplorerIsSet() const
{
    return m_Com_adobe_granite_crx_explorerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_crx_explorer()
{
    m_Com_adobe_granite_crx_explorerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCrxdeLite() const
{
    return m_Com_adobe_granite_crxde_lite;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCrxdeLite(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_crxde_lite = value;
    m_Com_adobe_granite_crxde_liteIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteCrxdeLiteIsSet() const
{
    return m_Com_adobe_granite_crxde_liteIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_crxde_lite()
{
    m_Com_adobe_granite_crxde_liteIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCryptoConfig() const
{
    return m_Com_adobe_granite_crypto_config;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCryptoConfig(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_crypto_config = value;
    m_Com_adobe_granite_crypto_configIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteCryptoConfigIsSet() const
{
    return m_Com_adobe_granite_crypto_configIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_crypto_config()
{
    m_Com_adobe_granite_crypto_configIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCryptoExtension() const
{
    return m_Com_adobe_granite_crypto_extension;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCryptoExtension(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_crypto_extension = value;
    m_Com_adobe_granite_crypto_extensionIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteCryptoExtensionIsSet() const
{
    return m_Com_adobe_granite_crypto_extensionIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_crypto_extension()
{
    m_Com_adobe_granite_crypto_extensionIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCryptoFile() const
{
    return m_Com_adobe_granite_crypto_file;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCryptoFile(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_crypto_file = value;
    m_Com_adobe_granite_crypto_fileIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteCryptoFileIsSet() const
{
    return m_Com_adobe_granite_crypto_fileIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_crypto_file()
{
    m_Com_adobe_granite_crypto_fileIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCryptoJcr() const
{
    return m_Com_adobe_granite_crypto_jcr;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCryptoJcr(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_crypto_jcr = value;
    m_Com_adobe_granite_crypto_jcrIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteCryptoJcrIsSet() const
{
    return m_Com_adobe_granite_crypto_jcrIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_crypto_jcr()
{
    m_Com_adobe_granite_crypto_jcrIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteCsrf() const
{
    return m_Com_adobe_granite_csrf;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteCsrf(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_csrf = value;
    m_Com_adobe_granite_csrfIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteCsrfIsSet() const
{
    return m_Com_adobe_granite_csrfIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_csrf()
{
    m_Com_adobe_granite_csrfIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteDistributionCore() const
{
    return m_Com_adobe_granite_distribution_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteDistributionCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_distribution_core = value;
    m_Com_adobe_granite_distribution_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteDistributionCoreIsSet() const
{
    return m_Com_adobe_granite_distribution_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_distribution_core()
{
    m_Com_adobe_granite_distribution_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteDropwizardMetrics() const
{
    return m_Com_adobe_granite_dropwizard_metrics;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteDropwizardMetrics(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_dropwizard_metrics = value;
    m_Com_adobe_granite_dropwizard_metricsIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteDropwizardMetricsIsSet() const
{
    return m_Com_adobe_granite_dropwizard_metricsIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_dropwizard_metrics()
{
    m_Com_adobe_granite_dropwizard_metricsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteFragsImpl() const
{
    return m_Com_adobe_granite_frags_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteFragsImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_frags_impl = value;
    m_Com_adobe_granite_frags_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteFragsImplIsSet() const
{
    return m_Com_adobe_granite_frags_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_frags_impl()
{
    m_Com_adobe_granite_frags_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteGibson() const
{
    return m_Com_adobe_granite_gibson;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteGibson(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_gibson = value;
    m_Com_adobe_granite_gibsonIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteGibsonIsSet() const
{
    return m_Com_adobe_granite_gibsonIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_gibson()
{
    m_Com_adobe_granite_gibsonIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteInfocollector() const
{
    return m_Com_adobe_granite_infocollector;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteInfocollector(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_infocollector = value;
    m_Com_adobe_granite_infocollectorIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteInfocollectorIsSet() const
{
    return m_Com_adobe_granite_infocollectorIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_infocollector()
{
    m_Com_adobe_granite_infocollectorIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteInstallerFactoryPackages() const
{
    return m_Com_adobe_granite_installer_factory_packages;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteInstallerFactoryPackages(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_installer_factory_packages = value;
    m_Com_adobe_granite_installer_factory_packagesIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteInstallerFactoryPackagesIsSet() const
{
    return m_Com_adobe_granite_installer_factory_packagesIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_installer_factory_packages()
{
    m_Com_adobe_granite_installer_factory_packagesIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteJettySsl() const
{
    return m_Com_adobe_granite_jetty_ssl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteJettySsl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_jetty_ssl = value;
    m_Com_adobe_granite_jetty_sslIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteJettySslIsSet() const
{
    return m_Com_adobe_granite_jetty_sslIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_jetty_ssl()
{
    m_Com_adobe_granite_jetty_sslIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteJobsAsync() const
{
    return m_Com_adobe_granite_jobs_async;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteJobsAsync(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_jobs_async = value;
    m_Com_adobe_granite_jobs_asyncIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteJobsAsyncIsSet() const
{
    return m_Com_adobe_granite_jobs_asyncIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_jobs_async()
{
    m_Com_adobe_granite_jobs_asyncIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteMaintenanceOak() const
{
    return m_Com_adobe_granite_maintenance_oak;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteMaintenanceOak(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_maintenance_oak = value;
    m_Com_adobe_granite_maintenance_oakIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteMaintenanceOakIsSet() const
{
    return m_Com_adobe_granite_maintenance_oakIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_maintenance_oak()
{
    m_Com_adobe_granite_maintenance_oakIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteMonitoringCore() const
{
    return m_Com_adobe_granite_monitoring_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteMonitoringCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_monitoring_core = value;
    m_Com_adobe_granite_monitoring_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteMonitoringCoreIsSet() const
{
    return m_Com_adobe_granite_monitoring_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_monitoring_core()
{
    m_Com_adobe_granite_monitoring_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteQueries() const
{
    return m_Com_adobe_granite_queries;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteQueries(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_queries = value;
    m_Com_adobe_granite_queriesIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteQueriesIsSet() const
{
    return m_Com_adobe_granite_queriesIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_queries()
{
    m_Com_adobe_granite_queriesIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteReplicationHcImpl() const
{
    return m_Com_adobe_granite_replication_hc_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteReplicationHcImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_replication_hc_impl = value;
    m_Com_adobe_granite_replication_hc_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteReplicationHcImplIsSet() const
{
    return m_Com_adobe_granite_replication_hc_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_replication_hc_impl()
{
    m_Com_adobe_granite_replication_hc_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteRepositoryChecker() const
{
    return m_Com_adobe_granite_repository_checker;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteRepositoryChecker(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_repository_checker = value;
    m_Com_adobe_granite_repository_checkerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteRepositoryCheckerIsSet() const
{
    return m_Com_adobe_granite_repository_checkerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_repository_checker()
{
    m_Com_adobe_granite_repository_checkerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteRepositoryHcImpl() const
{
    return m_Com_adobe_granite_repository_hc_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteRepositoryHcImpl(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_repository_hc_impl = value;
    m_Com_adobe_granite_repository_hc_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteRepositoryHcImplIsSet() const
{
    return m_Com_adobe_granite_repository_hc_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_repository_hc_impl()
{
    m_Com_adobe_granite_repository_hc_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteRestAssets() const
{
    return m_Com_adobe_granite_rest_assets;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteRestAssets(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_rest_assets = value;
    m_Com_adobe_granite_rest_assetsIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteRestAssetsIsSet() const
{
    return m_Com_adobe_granite_rest_assetsIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_rest_assets()
{
    m_Com_adobe_granite_rest_assetsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteSecurityUi() const
{
    return m_Com_adobe_granite_security_ui;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteSecurityUi(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_security_ui = value;
    m_Com_adobe_granite_security_uiIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteSecurityUiIsSet() const
{
    return m_Com_adobe_granite_security_uiIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_security_ui()
{
    m_Com_adobe_granite_security_uiIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteStartup() const
{
    return m_Com_adobe_granite_startup;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteStartup(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_startup = value;
    m_Com_adobe_granite_startupIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteStartupIsSet() const
{
    return m_Com_adobe_granite_startupIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_startup()
{
    m_Com_adobe_granite_startupIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteTagsoup() const
{
    return m_Com_adobe_granite_tagsoup;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteTagsoup(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_tagsoup = value;
    m_Com_adobe_granite_tagsoupIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteTagsoupIsSet() const
{
    return m_Com_adobe_granite_tagsoupIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_tagsoup()
{
    m_Com_adobe_granite_tagsoupIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteTaskmanagementCore() const
{
    return m_Com_adobe_granite_taskmanagement_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteTaskmanagementCore(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_taskmanagement_core = value;
    m_Com_adobe_granite_taskmanagement_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteTaskmanagementCoreIsSet() const
{
    return m_Com_adobe_granite_taskmanagement_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_taskmanagement_core()
{
    m_Com_adobe_granite_taskmanagement_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteTaskmanagementWorkflow() const
{
    return m_Com_adobe_granite_taskmanagement_workflow;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteTaskmanagementWorkflow(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_taskmanagement_workflow = value;
    m_Com_adobe_granite_taskmanagement_workflowIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteTaskmanagementWorkflowIsSet() const
{
    return m_Com_adobe_granite_taskmanagement_workflowIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_taskmanagement_workflow()
{
    m_Com_adobe_granite_taskmanagement_workflowIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteUiClientlibsCompilerLess() const
{
    return m_Com_adobe_granite_ui_clientlibs_compiler_less;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteUiClientlibsCompilerLess(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_ui_clientlibs_compiler_less = value;
    m_Com_adobe_granite_ui_clientlibs_compiler_lessIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteUiClientlibsCompilerLessIsSet() const
{
    return m_Com_adobe_granite_ui_clientlibs_compiler_lessIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_ui_clientlibs_compiler_less()
{
    m_Com_adobe_granite_ui_clientlibs_compiler_lessIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteUiClientlibsProcessorGcc() const
{
    return m_Com_adobe_granite_ui_clientlibs_processor_gcc;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteUiClientlibsProcessorGcc(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_ui_clientlibs_processor_gcc = value;
    m_Com_adobe_granite_ui_clientlibs_processor_gccIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteUiClientlibsProcessorGccIsSet() const
{
    return m_Com_adobe_granite_ui_clientlibs_processor_gccIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_ui_clientlibs_processor_gcc()
{
    m_Com_adobe_granite_ui_clientlibs_processor_gccIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteWebconsolePlugins() const
{
    return m_Com_adobe_granite_webconsole_plugins;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteWebconsolePlugins(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_webconsole_plugins = value;
    m_Com_adobe_granite_webconsole_pluginsIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteWebconsolePluginsIsSet() const
{
    return m_Com_adobe_granite_webconsole_pluginsIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_webconsole_plugins()
{
    m_Com_adobe_granite_webconsole_pluginsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeGraniteWorkflowConsole() const
{
    return m_Com_adobe_granite_workflow_console;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeGraniteWorkflowConsole(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_workflow_console = value;
    m_Com_adobe_granite_workflow_consoleIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeGraniteWorkflowConsoleIsSet() const
{
    return m_Com_adobe_granite_workflow_consoleIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_granite_workflow_console()
{
    m_Com_adobe_granite_workflow_consoleIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeXmpWorkerFilesNativeFragmentLinux() const
{
    return m_Com_adobe_xmp_worker_files_native_fragment_linux;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeXmpWorkerFilesNativeFragmentLinux(ConfigNodePropertyString const& value)
{
    m_Com_adobe_xmp_worker_files_native_fragment_linux = value;
    m_Com_adobe_xmp_worker_files_native_fragment_linuxIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeXmpWorkerFilesNativeFragmentLinuxIsSet() const
{
    return m_Com_adobe_xmp_worker_files_native_fragment_linuxIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_xmp_worker_files_native_fragment_linux()
{
    m_Com_adobe_xmp_worker_files_native_fragment_linuxIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeXmpWorkerFilesNativeFragmentMacosx() const
{
    return m_Com_adobe_xmp_worker_files_native_fragment_macosx;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeXmpWorkerFilesNativeFragmentMacosx(ConfigNodePropertyString const& value)
{
    m_Com_adobe_xmp_worker_files_native_fragment_macosx = value;
    m_Com_adobe_xmp_worker_files_native_fragment_macosxIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeXmpWorkerFilesNativeFragmentMacosxIsSet() const
{
    return m_Com_adobe_xmp_worker_files_native_fragment_macosxIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_xmp_worker_files_native_fragment_macosx()
{
    m_Com_adobe_xmp_worker_files_native_fragment_macosxIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComAdobeXmpWorkerFilesNativeFragmentWin() const
{
    return m_Com_adobe_xmp_worker_files_native_fragment_win;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComAdobeXmpWorkerFilesNativeFragmentWin(ConfigNodePropertyString const& value)
{
    m_Com_adobe_xmp_worker_files_native_fragment_win = value;
    m_Com_adobe_xmp_worker_files_native_fragment_winIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comAdobeXmpWorkerFilesNativeFragmentWinIsSet() const
{
    return m_Com_adobe_xmp_worker_files_native_fragment_winIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_adobe_xmp_worker_files_native_fragment_win()
{
    m_Com_adobe_xmp_worker_files_native_fragment_winIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCommonsOsgiWrapperSimpleJndi() const
{
    return m_Com_day_commons_osgi_wrapper_simple_jndi;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCommonsOsgiWrapperSimpleJndi(ConfigNodePropertyString const& value)
{
    m_Com_day_commons_osgi_wrapper_simple_jndi = value;
    m_Com_day_commons_osgi_wrapper_simple_jndiIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCommonsOsgiWrapperSimpleJndiIsSet() const
{
    return m_Com_day_commons_osgi_wrapper_simple_jndiIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_commons_osgi_wrapper_simple_jndi()
{
    m_Com_day_commons_osgi_wrapper_simple_jndiIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqAuthhandler() const
{
    return m_Com_day_cq_cq_authhandler;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqAuthhandler(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_cq_authhandler = value;
    m_Com_day_cq_cq_authhandlerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqCqAuthhandlerIsSet() const
{
    return m_Com_day_cq_cq_authhandlerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_cq_authhandler()
{
    m_Com_day_cq_cq_authhandlerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqCompatConfigupdate() const
{
    return m_Com_day_cq_cq_compat_configupdate;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqCompatConfigupdate(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_cq_compat_configupdate = value;
    m_Com_day_cq_cq_compat_configupdateIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqCqCompatConfigupdateIsSet() const
{
    return m_Com_day_cq_cq_compat_configupdateIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_cq_compat_configupdate()
{
    m_Com_day_cq_cq_compat_configupdateIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqLicensebranding() const
{
    return m_Com_day_cq_cq_licensebranding;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqLicensebranding(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_cq_licensebranding = value;
    m_Com_day_cq_cq_licensebrandingIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqCqLicensebrandingIsSet() const
{
    return m_Com_day_cq_cq_licensebrandingIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_cq_licensebranding()
{
    m_Com_day_cq_cq_licensebrandingIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqNotifcationImpl() const
{
    return m_Com_day_cq_cq_notifcation_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqNotifcationImpl(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_cq_notifcation_impl = value;
    m_Com_day_cq_cq_notifcation_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqCqNotifcationImplIsSet() const
{
    return m_Com_day_cq_cq_notifcation_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_cq_notifcation_impl()
{
    m_Com_day_cq_cq_notifcation_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqReplicationAudit() const
{
    return m_Com_day_cq_cq_replication_audit;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqReplicationAudit(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_cq_replication_audit = value;
    m_Com_day_cq_cq_replication_auditIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqCqReplicationAuditIsSet() const
{
    return m_Com_day_cq_cq_replication_auditIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_cq_replication_audit()
{
    m_Com_day_cq_cq_replication_auditIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqCqSearchExt() const
{
    return m_Com_day_cq_cq_search_ext;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqCqSearchExt(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_cq_search_ext = value;
    m_Com_day_cq_cq_search_extIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqCqSearchExtIsSet() const
{
    return m_Com_day_cq_cq_search_extIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_cq_search_ext()
{
    m_Com_day_cq_cq_search_extIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamCqDamAnnotationPrint() const
{
    return m_Com_day_cq_dam_cq_dam_annotation_print;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamCqDamAnnotationPrint(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_dam_cq_dam_annotation_print = value;
    m_Com_day_cq_dam_cq_dam_annotation_printIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqDamCqDamAnnotationPrintIsSet() const
{
    return m_Com_day_cq_dam_cq_dam_annotation_printIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_dam_cq_dam_annotation_print()
{
    m_Com_day_cq_dam_cq_dam_annotation_printIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamCqDamAssetUsage() const
{
    return m_Com_day_cq_dam_cq_dam_asset_usage;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamCqDamAssetUsage(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_dam_cq_dam_asset_usage = value;
    m_Com_day_cq_dam_cq_dam_asset_usageIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqDamCqDamAssetUsageIsSet() const
{
    return m_Com_day_cq_dam_cq_dam_asset_usageIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_dam_cq_dam_asset_usage()
{
    m_Com_day_cq_dam_cq_dam_asset_usageIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamCqDamS7dam() const
{
    return m_Com_day_cq_dam_cq_dam_s7dam;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamCqDamS7dam(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_dam_cq_dam_s7dam = value;
    m_Com_day_cq_dam_cq_dam_s7damIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqDamCqDamS7damIsSet() const
{
    return m_Com_day_cq_dam_cq_dam_s7damIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_dam_cq_dam_s7dam()
{
    m_Com_day_cq_dam_cq_dam_s7damIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamCqDamSimilaritysearch() const
{
    return m_Com_day_cq_dam_cq_dam_similaritysearch;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamCqDamSimilaritysearch(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_dam_cq_dam_similaritysearch = value;
    m_Com_day_cq_dam_cq_dam_similaritysearchIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqDamCqDamSimilaritysearchIsSet() const
{
    return m_Com_day_cq_dam_cq_dam_similaritysearchIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_dam_cq_dam_similaritysearch()
{
    m_Com_day_cq_dam_cq_dam_similaritysearchIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqDamDamWebdavSupport() const
{
    return m_Com_day_cq_dam_dam_webdav_support;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqDamDamWebdavSupport(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_dam_dam_webdav_support = value;
    m_Com_day_cq_dam_dam_webdav_supportIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqDamDamWebdavSupportIsSet() const
{
    return m_Com_day_cq_dam_dam_webdav_supportIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_dam_dam_webdav_support()
{
    m_Com_day_cq_dam_dam_webdav_supportIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqPreUpgradeTasks() const
{
    return m_Com_day_cq_pre_upgrade_tasks;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqPreUpgradeTasks(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_pre_upgrade_tasks = value;
    m_Com_day_cq_pre_upgrade_tasksIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqPreUpgradeTasksIsSet() const
{
    return m_Com_day_cq_pre_upgrade_tasksIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_pre_upgrade_tasks()
{
    m_Com_day_cq_pre_upgrade_tasksIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqReplicationExtensions() const
{
    return m_Com_day_cq_replication_extensions;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqReplicationExtensions(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_replication_extensions = value;
    m_Com_day_cq_replication_extensionsIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqReplicationExtensionsIsSet() const
{
    return m_Com_day_cq_replication_extensionsIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_replication_extensions()
{
    m_Com_day_cq_replication_extensionsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqWcmCqMsmCore() const
{
    return m_Com_day_cq_wcm_cq_msm_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqWcmCqMsmCore(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_wcm_cq_msm_core = value;
    m_Com_day_cq_wcm_cq_msm_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqWcmCqMsmCoreIsSet() const
{
    return m_Com_day_cq_wcm_cq_msm_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_wcm_cq_msm_core()
{
    m_Com_day_cq_wcm_cq_msm_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getComDayCqWcmCqWcmTranslation() const
{
    return m_Com_day_cq_wcm_cq_wcm_translation;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setComDayCqWcmCqWcmTranslation(ConfigNodePropertyString const& value)
{
    m_Com_day_cq_wcm_cq_wcm_translation = value;
    m_Com_day_cq_wcm_cq_wcm_translationIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::comDayCqWcmCqWcmTranslationIsSet() const
{
    return m_Com_day_cq_wcm_cq_wcm_translationIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetCom_day_cq_wcm_cq_wcm_translation()
{
    m_Com_day_cq_wcm_cq_wcm_translationIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getDayCommonsJrawio() const
{
    return m_Day_commons_jrawio;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setDayCommonsJrawio(ConfigNodePropertyString const& value)
{
    m_Day_commons_jrawio = value;
    m_Day_commons_jrawioIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::dayCommonsJrawioIsSet() const
{
    return m_Day_commons_jrawioIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetDay_commons_jrawio()
{
    m_Day_commons_jrawioIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheAriesJmxWhiteboard() const
{
    return m_Org_apache_aries_jmx_whiteboard;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheAriesJmxWhiteboard(ConfigNodePropertyString const& value)
{
    m_Org_apache_aries_jmx_whiteboard = value;
    m_Org_apache_aries_jmx_whiteboardIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheAriesJmxWhiteboardIsSet() const
{
    return m_Org_apache_aries_jmx_whiteboardIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_aries_jmx_whiteboard()
{
    m_Org_apache_aries_jmx_whiteboardIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixHttpSslfilter() const
{
    return m_Org_apache_felix_http_sslfilter;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixHttpSslfilter(ConfigNodePropertyString const& value)
{
    m_Org_apache_felix_http_sslfilter = value;
    m_Org_apache_felix_http_sslfilterIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheFelixHttpSslfilterIsSet() const
{
    return m_Org_apache_felix_http_sslfilterIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_felix_http_sslfilter()
{
    m_Org_apache_felix_http_sslfilterIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixOrgApacheFelixThreaddump() const
{
    return m_Org_apache_felix_org_apache_felix_threaddump;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixOrgApacheFelixThreaddump(ConfigNodePropertyString const& value)
{
    m_Org_apache_felix_org_apache_felix_threaddump = value;
    m_Org_apache_felix_org_apache_felix_threaddumpIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheFelixOrgApacheFelixThreaddumpIsSet() const
{
    return m_Org_apache_felix_org_apache_felix_threaddumpIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_felix_org_apache_felix_threaddump()
{
    m_Org_apache_felix_org_apache_felix_threaddumpIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixWebconsolePluginsDs() const
{
    return m_Org_apache_felix_webconsole_plugins_ds;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixWebconsolePluginsDs(ConfigNodePropertyString const& value)
{
    m_Org_apache_felix_webconsole_plugins_ds = value;
    m_Org_apache_felix_webconsole_plugins_dsIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheFelixWebconsolePluginsDsIsSet() const
{
    return m_Org_apache_felix_webconsole_plugins_dsIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_felix_webconsole_plugins_ds()
{
    m_Org_apache_felix_webconsole_plugins_dsIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixWebconsolePluginsEvent() const
{
    return m_Org_apache_felix_webconsole_plugins_event;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixWebconsolePluginsEvent(ConfigNodePropertyString const& value)
{
    m_Org_apache_felix_webconsole_plugins_event = value;
    m_Org_apache_felix_webconsole_plugins_eventIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheFelixWebconsolePluginsEventIsSet() const
{
    return m_Org_apache_felix_webconsole_plugins_eventIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_felix_webconsole_plugins_event()
{
    m_Org_apache_felix_webconsole_plugins_eventIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixWebconsolePluginsMemoryusage() const
{
    return m_Org_apache_felix_webconsole_plugins_memoryusage;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixWebconsolePluginsMemoryusage(ConfigNodePropertyString const& value)
{
    m_Org_apache_felix_webconsole_plugins_memoryusage = value;
    m_Org_apache_felix_webconsole_plugins_memoryusageIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheFelixWebconsolePluginsMemoryusageIsSet() const
{
    return m_Org_apache_felix_webconsole_plugins_memoryusageIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_felix_webconsole_plugins_memoryusage()
{
    m_Org_apache_felix_webconsole_plugins_memoryusageIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheFelixWebconsolePluginsPackageadmin() const
{
    return m_Org_apache_felix_webconsole_plugins_packageadmin;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheFelixWebconsolePluginsPackageadmin(ConfigNodePropertyString const& value)
{
    m_Org_apache_felix_webconsole_plugins_packageadmin = value;
    m_Org_apache_felix_webconsole_plugins_packageadminIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheFelixWebconsolePluginsPackageadminIsSet() const
{
    return m_Org_apache_felix_webconsole_plugins_packageadminIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_felix_webconsole_plugins_packageadmin()
{
    m_Org_apache_felix_webconsole_plugins_packageadminIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheJackrabbitOakAuthLdap() const
{
    return m_Org_apache_jackrabbit_oak_auth_ldap;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheJackrabbitOakAuthLdap(ConfigNodePropertyString const& value)
{
    m_Org_apache_jackrabbit_oak_auth_ldap = value;
    m_Org_apache_jackrabbit_oak_auth_ldapIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheJackrabbitOakAuthLdapIsSet() const
{
    return m_Org_apache_jackrabbit_oak_auth_ldapIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_jackrabbit_oak_auth_ldap()
{
    m_Org_apache_jackrabbit_oak_auth_ldapIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheJackrabbitOakSegmentTar() const
{
    return m_Org_apache_jackrabbit_oak_segment_tar;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheJackrabbitOakSegmentTar(ConfigNodePropertyString const& value)
{
    m_Org_apache_jackrabbit_oak_segment_tar = value;
    m_Org_apache_jackrabbit_oak_segment_tarIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheJackrabbitOakSegmentTarIsSet() const
{
    return m_Org_apache_jackrabbit_oak_segment_tarIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_jackrabbit_oak_segment_tar()
{
    m_Org_apache_jackrabbit_oak_segment_tarIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheJackrabbitOakSolrOsgi() const
{
    return m_Org_apache_jackrabbit_oak_solr_osgi;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheJackrabbitOakSolrOsgi(ConfigNodePropertyString const& value)
{
    m_Org_apache_jackrabbit_oak_solr_osgi = value;
    m_Org_apache_jackrabbit_oak_solr_osgiIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheJackrabbitOakSolrOsgiIsSet() const
{
    return m_Org_apache_jackrabbit_oak_solr_osgiIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_jackrabbit_oak_solr_osgi()
{
    m_Org_apache_jackrabbit_oak_solr_osgiIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingBundleresourceImpl() const
{
    return m_Org_apache_sling_bundleresource_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingBundleresourceImpl(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_bundleresource_impl = value;
    m_Org_apache_sling_bundleresource_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingBundleresourceImplIsSet() const
{
    return m_Org_apache_sling_bundleresource_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_bundleresource_impl()
{
    m_Org_apache_sling_bundleresource_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingCommonsFsclassloader() const
{
    return m_Org_apache_sling_commons_fsclassloader;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingCommonsFsclassloader(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_commons_fsclassloader = value;
    m_Org_apache_sling_commons_fsclassloaderIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingCommonsFsclassloaderIsSet() const
{
    return m_Org_apache_sling_commons_fsclassloaderIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_commons_fsclassloader()
{
    m_Org_apache_sling_commons_fsclassloaderIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingCommonsLogWebconsole() const
{
    return m_Org_apache_sling_commons_log_webconsole;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingCommonsLogWebconsole(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_commons_log_webconsole = value;
    m_Org_apache_sling_commons_log_webconsoleIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingCommonsLogWebconsoleIsSet() const
{
    return m_Org_apache_sling_commons_log_webconsoleIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_commons_log_webconsole()
{
    m_Org_apache_sling_commons_log_webconsoleIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDatasource() const
{
    return m_Org_apache_sling_datasource;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDatasource(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_datasource = value;
    m_Org_apache_sling_datasourceIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingDatasourceIsSet() const
{
    return m_Org_apache_sling_datasourceIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_datasource()
{
    m_Org_apache_sling_datasourceIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDiscoveryBase() const
{
    return m_Org_apache_sling_discovery_base;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDiscoveryBase(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_discovery_base = value;
    m_Org_apache_sling_discovery_baseIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingDiscoveryBaseIsSet() const
{
    return m_Org_apache_sling_discovery_baseIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_discovery_base()
{
    m_Org_apache_sling_discovery_baseIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDiscoveryOak() const
{
    return m_Org_apache_sling_discovery_oak;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDiscoveryOak(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_discovery_oak = value;
    m_Org_apache_sling_discovery_oakIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingDiscoveryOakIsSet() const
{
    return m_Org_apache_sling_discovery_oakIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_discovery_oak()
{
    m_Org_apache_sling_discovery_oakIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDiscoverySupport() const
{
    return m_Org_apache_sling_discovery_support;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDiscoverySupport(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_discovery_support = value;
    m_Org_apache_sling_discovery_supportIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingDiscoverySupportIsSet() const
{
    return m_Org_apache_sling_discovery_supportIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_discovery_support()
{
    m_Org_apache_sling_discovery_supportIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDistributionApi() const
{
    return m_Org_apache_sling_distribution_api;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDistributionApi(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_distribution_api = value;
    m_Org_apache_sling_distribution_apiIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingDistributionApiIsSet() const
{
    return m_Org_apache_sling_distribution_apiIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_distribution_api()
{
    m_Org_apache_sling_distribution_apiIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingDistributionCore() const
{
    return m_Org_apache_sling_distribution_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingDistributionCore(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_distribution_core = value;
    m_Org_apache_sling_distribution_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingDistributionCoreIsSet() const
{
    return m_Org_apache_sling_distribution_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_distribution_core()
{
    m_Org_apache_sling_distribution_coreIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingExtensionsWebconsolesecurityprovider() const
{
    return m_Org_apache_sling_extensions_webconsolesecurityprovider;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingExtensionsWebconsolesecurityprovider(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_extensions_webconsolesecurityprovider = value;
    m_Org_apache_sling_extensions_webconsolesecurityproviderIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingExtensionsWebconsolesecurityproviderIsSet() const
{
    return m_Org_apache_sling_extensions_webconsolesecurityproviderIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_extensions_webconsolesecurityprovider()
{
    m_Org_apache_sling_extensions_webconsolesecurityproviderIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingHcWebconsole() const
{
    return m_Org_apache_sling_hc_webconsole;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingHcWebconsole(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_hc_webconsole = value;
    m_Org_apache_sling_hc_webconsoleIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingHcWebconsoleIsSet() const
{
    return m_Org_apache_sling_hc_webconsoleIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_hc_webconsole()
{
    m_Org_apache_sling_hc_webconsoleIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingInstallerConsole() const
{
    return m_Org_apache_sling_installer_console;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingInstallerConsole(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_installer_console = value;
    m_Org_apache_sling_installer_consoleIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingInstallerConsoleIsSet() const
{
    return m_Org_apache_sling_installer_consoleIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_installer_console()
{
    m_Org_apache_sling_installer_consoleIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingInstallerProviderFile() const
{
    return m_Org_apache_sling_installer_provider_file;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingInstallerProviderFile(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_installer_provider_file = value;
    m_Org_apache_sling_installer_provider_fileIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingInstallerProviderFileIsSet() const
{
    return m_Org_apache_sling_installer_provider_fileIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_installer_provider_file()
{
    m_Org_apache_sling_installer_provider_fileIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingInstallerProviderJcr() const
{
    return m_Org_apache_sling_installer_provider_jcr;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingInstallerProviderJcr(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_installer_provider_jcr = value;
    m_Org_apache_sling_installer_provider_jcrIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingInstallerProviderJcrIsSet() const
{
    return m_Org_apache_sling_installer_provider_jcrIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_installer_provider_jcr()
{
    m_Org_apache_sling_installer_provider_jcrIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingJcrDavex() const
{
    return m_Org_apache_sling_jcr_davex;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingJcrDavex(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_jcr_davex = value;
    m_Org_apache_sling_jcr_davexIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingJcrDavexIsSet() const
{
    return m_Org_apache_sling_jcr_davexIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_jcr_davex()
{
    m_Org_apache_sling_jcr_davexIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingJcrResourcesecurity() const
{
    return m_Org_apache_sling_jcr_resourcesecurity;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingJcrResourcesecurity(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_jcr_resourcesecurity = value;
    m_Org_apache_sling_jcr_resourcesecurityIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingJcrResourcesecurityIsSet() const
{
    return m_Org_apache_sling_jcr_resourcesecurityIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_jcr_resourcesecurity()
{
    m_Org_apache_sling_jcr_resourcesecurityIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingJmxProvider() const
{
    return m_Org_apache_sling_jmx_provider;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingJmxProvider(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_jmx_provider = value;
    m_Org_apache_sling_jmx_providerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingJmxProviderIsSet() const
{
    return m_Org_apache_sling_jmx_providerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_jmx_provider()
{
    m_Org_apache_sling_jmx_providerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingLaunchpadInstaller() const
{
    return m_Org_apache_sling_launchpad_installer;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingLaunchpadInstaller(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_launchpad_installer = value;
    m_Org_apache_sling_launchpad_installerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingLaunchpadInstallerIsSet() const
{
    return m_Org_apache_sling_launchpad_installerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_launchpad_installer()
{
    m_Org_apache_sling_launchpad_installerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingModelsImpl() const
{
    return m_Org_apache_sling_models_impl;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingModelsImpl(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_models_impl = value;
    m_Org_apache_sling_models_implIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingModelsImplIsSet() const
{
    return m_Org_apache_sling_models_implIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_models_impl()
{
    m_Org_apache_sling_models_implIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingRepoinitParser() const
{
    return m_Org_apache_sling_repoinit_parser;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingRepoinitParser(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_repoinit_parser = value;
    m_Org_apache_sling_repoinit_parserIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingRepoinitParserIsSet() const
{
    return m_Org_apache_sling_repoinit_parserIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_repoinit_parser()
{
    m_Org_apache_sling_repoinit_parserIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingResourceInventory() const
{
    return m_Org_apache_sling_resource_inventory;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingResourceInventory(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_resource_inventory = value;
    m_Org_apache_sling_resource_inventoryIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingResourceInventoryIsSet() const
{
    return m_Org_apache_sling_resource_inventoryIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_resource_inventory()
{
    m_Org_apache_sling_resource_inventoryIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingResourceresolver() const
{
    return m_Org_apache_sling_resourceresolver;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingResourceresolver(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_resourceresolver = value;
    m_Org_apache_sling_resourceresolverIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingResourceresolverIsSet() const
{
    return m_Org_apache_sling_resourceresolverIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_resourceresolver()
{
    m_Org_apache_sling_resourceresolverIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingScriptingJavascript() const
{
    return m_Org_apache_sling_scripting_javascript;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingScriptingJavascript(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_scripting_javascript = value;
    m_Org_apache_sling_scripting_javascriptIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingScriptingJavascriptIsSet() const
{
    return m_Org_apache_sling_scripting_javascriptIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_scripting_javascript()
{
    m_Org_apache_sling_scripting_javascriptIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingScriptingJst() const
{
    return m_Org_apache_sling_scripting_jst;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingScriptingJst(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_scripting_jst = value;
    m_Org_apache_sling_scripting_jstIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingScriptingJstIsSet() const
{
    return m_Org_apache_sling_scripting_jstIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_scripting_jst()
{
    m_Org_apache_sling_scripting_jstIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingScriptingSightlyJsProvider() const
{
    return m_Org_apache_sling_scripting_sightly_js_provider;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingScriptingSightlyJsProvider(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_scripting_sightly_js_provider = value;
    m_Org_apache_sling_scripting_sightly_js_providerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingScriptingSightlyJsProviderIsSet() const
{
    return m_Org_apache_sling_scripting_sightly_js_providerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_scripting_sightly_js_provider()
{
    m_Org_apache_sling_scripting_sightly_js_providerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingScriptingSightlyModelsProvider() const
{
    return m_Org_apache_sling_scripting_sightly_models_provider;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingScriptingSightlyModelsProvider(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_scripting_sightly_models_provider = value;
    m_Org_apache_sling_scripting_sightly_models_providerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingScriptingSightlyModelsProviderIsSet() const
{
    return m_Org_apache_sling_scripting_sightly_models_providerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_scripting_sightly_models_provider()
{
    m_Org_apache_sling_scripting_sightly_models_providerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingSecurity() const
{
    return m_Org_apache_sling_security;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingSecurity(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_security = value;
    m_Org_apache_sling_securityIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingSecurityIsSet() const
{
    return m_Org_apache_sling_securityIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_security()
{
    m_Org_apache_sling_securityIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingServletsCompat() const
{
    return m_Org_apache_sling_servlets_compat;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingServletsCompat(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_servlets_compat = value;
    m_Org_apache_sling_servlets_compatIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingServletsCompatIsSet() const
{
    return m_Org_apache_sling_servlets_compatIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_servlets_compat()
{
    m_Org_apache_sling_servlets_compatIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingServletsGet() const
{
    return m_Org_apache_sling_servlets_get;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingServletsGet(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_servlets_get = value;
    m_Org_apache_sling_servlets_getIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingServletsGetIsSet() const
{
    return m_Org_apache_sling_servlets_getIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_servlets_get()
{
    m_Org_apache_sling_servlets_getIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingStartupfilterDisabler() const
{
    return m_Org_apache_sling_startupfilter_disabler;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingStartupfilterDisabler(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_startupfilter_disabler = value;
    m_Org_apache_sling_startupfilter_disablerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingStartupfilterDisablerIsSet() const
{
    return m_Org_apache_sling_startupfilter_disablerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_startupfilter_disabler()
{
    m_Org_apache_sling_startupfilter_disablerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getOrgApacheSlingTracer() const
{
    return m_Org_apache_sling_tracer;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setOrgApacheSlingTracer(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_tracer = value;
    m_Org_apache_sling_tracerIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::orgApacheSlingTracerIsSet() const
{
    return m_Org_apache_sling_tracerIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetOrg_apache_sling_tracer()
{
    m_Org_apache_sling_tracerIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::getWeRetailClientAppCore() const
{
    return m_We_retail_client_app_core;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::setWeRetailClientAppCore(ConfigNodePropertyString const& value)
{
    m_We_retail_client_app_core = value;
    m_We_retail_client_app_coreIsSet = true;
}
bool ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::weRetailClientAppCoreIsSet() const
{
    return m_We_retail_client_app_coreIsSet;
}
void ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties::unsetWe_retail_client_app_core()
{
    m_We_retail_client_app_coreIsSet = false;
}

}
}
}
}

