/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerProperties_H_
#define OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerProperties
    : public ModelBase
{
public:
    OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerProperties();
    virtual ~OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getName() const;
    void setName(ConfigNodePropertyString const& value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getPath() const;
    void setPath(ConfigNodePropertyString const& value);
    bool pathIsSet() const;
    void unsetPath();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getIgnoredPathsPatterns() const;
    void setIgnoredPathsPatterns(ConfigNodePropertyArray const& value);
    bool ignoredPathsPatternsIsSet() const;
    void unsetIgnoredPathsPatterns();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getServiceName() const;
    void setServiceName(ConfigNodePropertyString const& value);
    bool serviceNameIsSet() const;
    void unsetServiceName();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getDeep() const;
    void setDeep(ConfigNodePropertyBoolean const& value);
    bool deepIsSet() const;
    void unsetDeep();

protected:
    ConfigNodePropertyString m_Name;
    bool m_NameIsSet;
    ConfigNodePropertyString m_Path;
    bool m_PathIsSet;
    ConfigNodePropertyArray m_IgnoredPathsPatterns;
    bool m_IgnoredPathsPatternsIsSet;
    ConfigNodePropertyString m_ServiceName;
    bool m_ServiceNameIsSet;
    ConfigNodePropertyBoolean m_Deep;
    bool m_DeepIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerProperties_H_ */
