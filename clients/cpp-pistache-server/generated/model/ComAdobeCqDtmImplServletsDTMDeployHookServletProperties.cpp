/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqDtmImplServletsDTMDeployHookServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::ComAdobeCqDtmImplServletsDTMDeployHookServletProperties()
{
    m_Dtm_staging_ip_whitelistIsSet = false;
    m_Dtm_production_ip_whitelistIsSet = false;
    
}

ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::~ComAdobeCqDtmImplServletsDTMDeployHookServletProperties()
{
}

void ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Dtm_staging_ip_whitelistIsSet)
    {
        val["dtm.staging.ip.whitelist"] = ModelBase::toJson(m_Dtm_staging_ip_whitelist);
    }
    if(m_Dtm_production_ip_whitelistIsSet)
    {
        val["dtm.production.ip.whitelist"] = ModelBase::toJson(m_Dtm_production_ip_whitelist);
    }
    

    return val;
}

void ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("dtm.staging.ip.whitelist") != val.end())
    {
        if(!val["dtm.staging.ip.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["dtm.staging.ip.whitelist"]);
            setDtmStagingIpWhitelist( newItem );
        }
        
    }
    if(val.find("dtm.production.ip.whitelist") != val.end())
    {
        if(!val["dtm.production.ip.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["dtm.production.ip.whitelist"]);
            setDtmProductionIpWhitelist( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::getDtmStagingIpWhitelist() const
{
    return m_Dtm_staging_ip_whitelist;
}
void ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::setDtmStagingIpWhitelist(ConfigNodePropertyArray const& value)
{
    m_Dtm_staging_ip_whitelist = value;
    m_Dtm_staging_ip_whitelistIsSet = true;
}
bool ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::dtmStagingIpWhitelistIsSet() const
{
    return m_Dtm_staging_ip_whitelistIsSet;
}
void ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::unsetDtm_staging_ip_whitelist()
{
    m_Dtm_staging_ip_whitelistIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::getDtmProductionIpWhitelist() const
{
    return m_Dtm_production_ip_whitelist;
}
void ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::setDtmProductionIpWhitelist(ConfigNodePropertyArray const& value)
{
    m_Dtm_production_ip_whitelist = value;
    m_Dtm_production_ip_whitelistIsSet = true;
}
bool ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::dtmProductionIpWhitelistIsSet() const
{
    return m_Dtm_production_ip_whitelistIsSet;
}
void ComAdobeCqDtmImplServletsDTMDeployHookServletProperties::unsetDtm_production_ip_whitelist()
{
    m_Dtm_production_ip_whitelistIsSet = false;
}

}
}
}
}

