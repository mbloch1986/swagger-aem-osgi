<?php
/**
 * ConfigmgrApiInterfaceTest
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Api
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Server\Tests\Api;

use OpenAPI\Server\Configuration;
use OpenAPI\Server\ApiClient;
use OpenAPI\Server\ApiException;
use OpenAPI\Server\ObjectSerializer;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;

/**
 * ConfigmgrApiInterfaceTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Api
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */
class ConfigmgrApiInterfaceTest extends WebTestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for adaptiveFormAndInteractiveCommunicationWebChannelConfiguration
     *
     * .
     *
     */
    public function testAdaptiveFormAndInteractiveCommunicationWebChannelConfiguration()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Configuration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur
     *
     * .
     *
     */
    public function testAdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Theme Configuration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for analyticsComponentQueryCacheService
     *
     * .
     *
     */
    public function testAnalyticsComponentQueryCacheService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/Analytics Component Query Cache Service';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for apacheSlingHealthCheckResultHTMLSerializer
     *
     * .
     *
     */
    public function testApacheSlingHealthCheckResultHTMLSerializer()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/Apache Sling Health Check Result HTML Serializer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration
     *
     * .
     *
     */
    public function testComAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.aem.formsndocuments.config.AEMFormsManagerConfiguration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeAemTransactionCoreImplTransactionRecorder
     *
     * .
     *
     */
    public function testComAdobeAemTransactionCoreImplTransactionRecorder()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.aem.transaction.core.impl.TransactionRecorder';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC
     *
     * .
     *
     */
    public function testComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.DeprecateIndexesHC';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC
     *
     * .
     *
     */
    public function testComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.ReplicationAgentsDisabledHC';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl
     *
     * .
     *
     */
    public function testComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.aem.upgrade.prechecks.mbean.impl.PreUpgradeTasksMBeanImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl
     *
     * .
     *
     */
    public function testComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.aem.upgrade.prechecks.tasks.impl.ConsistencyCheckTaskImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqAccountApiAccountManagementService
     *
     * .
     *
     */
    public function testComAdobeCqAccountApiAccountManagementService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.account.api.AccountManagementService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqAccountImplAccountManagementServlet
     *
     * .
     *
     */
    public function testComAdobeCqAccountImplAccountManagementServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.account.impl.AccountManagementServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqAddressImplLocationLocationListServlet
     *
     * .
     *
     */
    public function testComAdobeCqAddressImplLocationLocationListServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.address.impl.location.LocationListServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqAuditPurgeDam
     *
     * .
     *
     */
    public function testComAdobeCqAuditPurgeDam()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.audit.purge.Dam';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqAuditPurgePages
     *
     * .
     *
     */
    public function testComAdobeCqAuditPurgePages()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.audit.purge.Pages';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqAuditPurgeReplication
     *
     * .
     *
     */
    public function testComAdobeCqAuditPurgeReplication()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.audit.purge.Replication';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCdnRewriterImplAWSCloudFrontRewriter
     *
     * .
     *
     */
    public function testComAdobeCqCdnRewriterImplAWSCloudFrontRewriter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.AWSCloudFrontRewriter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCdnRewriterImplCDNConfigServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqCdnRewriterImplCDNConfigServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNConfigServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCdnRewriterImplCDNRewriter
     *
     * .
     *
     */
    public function testComAdobeCqCdnRewriterImplCDNRewriter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNRewriter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle
     *
     * .
     *
     */
    public function testComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.cloudconfig.core.impl.ConfigurationReplicationEventHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCommerceImplAssetDynamicImageHandler
     *
     * .
     *
     */
    public function testComAdobeCqCommerceImplAssetDynamicImageHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.commerce.impl.asset.DynamicImageHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl
     *
     * .
     *
     */
    public function testComAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.commerce.impl.asset.ProductAssetHandlerProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCommerceImplAssetStaticImageHandler
     *
     * .
     *
     */
    public function testComAdobeCqCommerceImplAssetStaticImageHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.commerce.impl.asset.StaticImageHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCommerceImplAssetVideoHandler
     *
     * .
     *
     */
    public function testComAdobeCqCommerceImplAssetVideoHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.commerce.impl.asset.VideoHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCommerceImplPromotionPromotionManagerImpl
     *
     * .
     *
     */
    public function testComAdobeCqCommerceImplPromotionPromotionManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.commerce.impl.promotion.PromotionManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl
     *
     * .
     *
     */
    public function testComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.commerce.pim.impl.cataloggenerator.CatalogGeneratorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCommercePimImplPageEventListener
     *
     * .
     *
     */
    public function testComAdobeCqCommercePimImplPageEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.commerce.pim.impl.PageEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqCommercePimImplProductfeedProductFeedServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqCommercePimImplProductfeedProductFeedServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.commerce.pim.impl.productfeed.ProductFeedServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqContentinsightImplReportingServicesSettingsProvider
     *
     * .
     *
     */
    public function testComAdobeCqContentinsightImplReportingServicesSettingsProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.contentinsight.impl.ReportingServicesSettingsProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqContentinsightImplServletsBrightEdgeProxyServlet
     *
     * .
     *
     */
    public function testComAdobeCqContentinsightImplServletsBrightEdgeProxyServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.BrightEdgeProxyServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqContentinsightImplServletsReportingServicesProxyServle
     *
     * .
     *
     */
    public function testComAdobeCqContentinsightImplServletsReportingServicesProxyServle()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.ReportingServicesProxyServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamCfmImplComponentComponentConfigImpl
     *
     * .
     *
     */
    public function testComAdobeCqDamCfmImplComponentComponentConfigImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.cfm.impl.component.ComponentConfigImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamCfmImplConfFeatureConfigImpl
     *
     * .
     *
     */
    public function testComAdobeCqDamCfmImplConfFeatureConfigImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.cfm.impl.conf.FeatureConfigImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamCfmImplContentRewriterAssetProcessor
     *
     * .
     *
     */
    public function testComAdobeCqDamCfmImplContentRewriterAssetProcessor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.AssetProcessor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamCfmImplContentRewriterParRangeFilter
     *
     * .
     *
     */
    public function testComAdobeCqDamCfmImplContentRewriterParRangeFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.ParRangeFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamCfmImplContentRewriterPayloadFilter
     *
     * .
     *
     */
    public function testComAdobeCqDamCfmImplContentRewriterPayloadFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.PayloadFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamDmProcessImagePTiffManagerImpl
     *
     * .
     *
     */
    public function testComAdobeCqDamDmProcessImagePTiffManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.dm.process.image.PTiffManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker
     *
     * .
     *
     */
    public function testComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.ips.impl.replication.trigger.ReplicateOnModifyWorker';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamMacSyncHelperImplMACSyncClientImpl
     *
     * .
     *
     */
    public function testComAdobeCqDamMacSyncHelperImplMACSyncClientImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.mac.sync.helper.impl.MACSyncClientImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamMacSyncImplDAMSyncServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqDamMacSyncImplDAMSyncServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.mac.sync.impl.DAMSyncServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamProcessorNuiImplNuiAssetProcessor
     *
     * .
     *
     */
    public function testComAdobeCqDamProcessorNuiImplNuiAssetProcessor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.processor.nui.impl.NuiAssetProcessor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamS7imagingImplIsImageServerComponent
     *
     * .
     *
     */
    public function testComAdobeCqDamS7imagingImplIsImageServerComponent()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.is.ImageServerComponent';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamS7imagingImplPsPlatformServerServlet
     *
     * .
     *
     */
    public function testComAdobeCqDamS7imagingImplPsPlatformServerServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.ps.PlatformServerServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamWebdavImplIoAssetIOHandler
     *
     * .
     *
     */
    public function testComAdobeCqDamWebdavImplIoAssetIOHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.AssetIOHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob
     *
     * .
     *
     */
    public function testComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.DamWebdavVersionLinkingJob';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDamWebdavImplIoSpecialFilesHandler
     *
     * .
     *
     */
    public function testComAdobeCqDamWebdavImplIoSpecialFilesHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.SpecialFilesHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDeserfwImplDeserializationFirewallImpl
     *
     * .
     *
     */
    public function testComAdobeCqDeserfwImplDeserializationFirewallImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.deserfw.impl.DeserializationFirewallImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDtmImplServiceDTMWebServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqDtmImplServiceDTMWebServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dtm.impl.service.DTMWebServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDtmImplServletsDTMDeployHookServlet
     *
     * .
     *
     */
    public function testComAdobeCqDtmImplServletsDTMDeployHookServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dtm.impl.servlets.DTMDeployHookServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqDtmReactorImplServiceWebServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqDtmReactorImplServiceWebServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.dtm.reactor.impl.service.WebServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqExperiencelogImplExperienceLogConfigServlet
     *
     * .
     *
     */
    public function testComAdobeCqExperiencelogImplExperienceLogConfigServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.experiencelog.impl.ExperienceLogConfigServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqHcContentPackagesHealthCheck
     *
     * .
     *
     */
    public function testComAdobeCqHcContentPackagesHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.hc.ContentPackagesHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqHistoryImplHistoryRequestFilter
     *
     * .
     *
     */
    public function testComAdobeCqHistoryImplHistoryRequestFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.history.impl.HistoryRequestFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqHistoryImplHistoryServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqHistoryImplHistoryServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.history.impl.HistoryServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqInboxImplTypeproviderItemTypeProvider
     *
     * .
     *
     */
    public function testComAdobeCqInboxImplTypeproviderItemTypeProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.inbox.impl.typeprovider.ItemTypeProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqProjectsImplServletProjectImageServlet
     *
     * .
     *
     */
    public function testComAdobeCqProjectsImplServletProjectImageServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.projects.impl.servlet.ProjectImageServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqProjectsPurgeScheduler
     *
     * .
     *
     */
    public function testComAdobeCqProjectsPurgeScheduler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.projects.purge.Scheduler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScheduledExporterImplScheduledExporterImpl
     *
     * .
     *
     */
    public function testComAdobeCqScheduledExporterImplScheduledExporterImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.scheduled.exporter.impl.ScheduledExporterImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.analytics.impl.ScreensAnalyticsServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensDeviceImplDeviceService
     *
     * .
     *
     */
    public function testComAdobeCqScreensDeviceImplDeviceService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.device.impl.DeviceService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.device.registration.impl.RegistrationServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensImplHandlerChannelsUpdateHandler
     *
     * .
     *
     */
    public function testComAdobeCqScreensImplHandlerChannelsUpdateHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.impl.handler.ChannelsUpdateHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob
     *
     * .
     *
     */
    public function testComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.impl.jobs.DistributedDevicesStatiUpdateJob';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensImplRemoteImplDistributedHttpClientImpl
     *
     * .
     *
     */
    public function testComAdobeCqScreensImplRemoteImplDistributedHttpClientImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.impl.remote.impl.DistributedHttpClientImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensImplScreensChannelPostProcessor
     *
     * .
     *
     */
    public function testComAdobeCqScreensImplScreensChannelPostProcessor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.impl.ScreensChannelPostProcessor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensMqActivemqImplArtemisJMSProvider
     *
     * .
     *
     */
    public function testComAdobeCqScreensMqActivemqImplArtemisJMSProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.mq.activemq.impl.ArtemisJMSProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.OfflineContentServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqScreensSegmentationImplSegmentationFeatureFlag
     *
     * .
     *
     */
    public function testComAdobeCqScreensSegmentationImplSegmentationFeatureFlag()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.screens.segmentation.impl.SegmentationFeatureFlag';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh
     *
     * .
     *
     */
    public function testComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.HtmlLibraryManagerConfigHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck
     *
     * .
     *
     */
    public function testComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.WcmFilterHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck
     *
     * .
     *
     */
    public function testComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.security.hc.dispatcher.impl.DispatcherAccessHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSecurityHcPackagesImplExampleContentHealthCheck
     *
     * .
     *
     */
    public function testComAdobeCqSecurityHcPackagesImplExampleContentHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.security.hc.packages.impl.ExampleContentHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSecurityHcWebserverImplClickjackingHealthCheck
     *
     * .
     *
     */
    public function testComAdobeCqSecurityHcWebserverImplClickjackingHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.security.hc.webserver.impl.ClickjackingHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialAccountverificationImplAccountManagementConfigIm
     *
     * .
     *
     */
    public function testComAdobeCqSocialAccountverificationImplAccountManagementConfigIm()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.accountverification.impl.AccountManagementConfigImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialActivitystreamsClientImplSocialActivityComponen
     *
     * .
     *
     */
    public function testComAdobeCqSocialActivitystreamsClientImplSocialActivityComponen()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityComponentFactoryImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo
     *
     * .
     *
     */
    public function testComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityStreamComponentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialActivitystreamsListenerImplEventListenerHandler
     *
     * .
     *
     */
    public function testComAdobeCqSocialActivitystreamsListenerImplEventListenerHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.EventListenerHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialActivitystreamsListenerImplModerationEventExten
     *
     * .
     *
     */
    public function testComAdobeCqSocialActivitystreamsListenerImplModerationEventExten()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ModerationEventExtension';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS
     *
     * .
     *
     */
    public function testComAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.RatingEventActivitySuppressor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialActivitystreamsListenerImplResourceActivityStre
     *
     * .
     *
     */
    public function testComAdobeCqSocialActivitystreamsListenerImplResourceActivityStre()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ResourceActivityStreamProviderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI
     *
     * .
     *
     */
    public function testComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.calendar.client.endpoints.impl.CalendarOperationsImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCalendarClientOperationextensionsEventAttachmen
     *
     * .
     *
     */
    public function testComAdobeCqSocialCalendarClientOperationextensionsEventAttachmen()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.calendar.client.operationextensions.EventAttachment';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCalendarServletsTimeZoneServlet
     *
     * .
     *
     */
    public function testComAdobeCqSocialCalendarServletsTimeZoneServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.calendar.servlets.TimeZoneServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentDeleteEventActivitySuppressor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentOperationService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.TranslationOperationService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.comments.listing.impl.SearchCommentSocialComponentListProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.comments.scheduler.impl.SearchScheduledPosts';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsCorsCORSAuthenticationFilter
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsCorsCORSAuthenticationFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.cors.CORSAuthenticationFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.AndroidEmailClientProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailBuilderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CustomEmailClientProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailQuotedTextPatternsImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyConfigurationImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyImporter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.GmailEmailClientProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.IOSEmailClientProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.MacmailEmailClientProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.OutLookEmailClientProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.UnknownEmailClientProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.YahooEmailClientProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.maintainance.impl.DeleteTempUGCImageUploads';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.ugclimiter.impl.UGCLimiterServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit
     *
     * .
     *
     */
    public function testComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.commons.ugclimitsconfig.impl.CommunityUserUGCLimitsConfigImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialConnectOauthImplFacebookProviderImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialConnectOauthImplFacebookProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.FacebookProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle
     *
     * .
     *
     */
    public function testComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthAuthenticationHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper
     *
     * .
     *
     */
    public function testComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthUserProfileMapper';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialConnectOauthImplTwitterProviderImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialConnectOauthImplTwitterProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.TwitterProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen
     *
     * .
     *
     */
    public function testComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.content.fragments.services.impl.CommunitiesFragmentCreationServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialDatastoreAsImplASResourceProviderFactory
     *
     * .
     *
     */
    public function testComAdobeCqSocialDatastoreAsImplASResourceProviderFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.datastore.as.impl.ASResourceProviderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory
     *
     * .
     *
     */
    public function testComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.datastore.op.impl.SocialMSResourceProviderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor
     *
     * .
     *
     */
    public function testComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.datastore.rdb.impl.SocialRDBResourceProviderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF
     *
     * .
     *
     */
    public function testComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementLearningPathAdaptorFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto
     *
     * .
     *
     */
    public function testComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementResourceAdaptorFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL
     *
     * .
     *
     */
    public function testComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.enablement.learningpath.endpoints.impl.EnablementLearningPathModelOperationService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialEnablementResourceEndpointsImplEnablementResou
     *
     * .
     *
     */
    public function testComAdobeCqSocialEnablementResourceEndpointsImplEnablementResou()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.enablement.resource.endpoints.impl.EnablementResourceModelOperationService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialEnablementServicesImplAuthorMarkerImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialEnablementServicesImplAuthorMarkerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.enablement.services.impl.AuthorMarkerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe
     *
     * .
     *
     */
    public function testComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.FilelibraryDownloadGetServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera
     *
     * .
     *
     */
    public function testComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.impl.FileLibraryOperationsService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialForumClientEndpointsImplForumOperationsService
     *
     * .
     *
     */
    public function testComAdobeCqSocialForumClientEndpointsImplForumOperationsService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.forum.client.endpoints.impl.ForumOperationsService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialForumDispatcherImplFlushOperations
     *
     * .
     *
     */
    public function testComAdobeCqSocialForumDispatcherImplFlushOperations()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.forum.dispatcher.impl.FlushOperations';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen
     *
     * .
     *
     */
    public function testComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.group.client.impl.CommunityGroupCollectionComponentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialGroupImplGroupServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialGroupImplGroupServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.group.impl.GroupServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialHandlebarsGuavaTemplateCacheImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialHandlebarsGuavaTemplateCacheImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.handlebars.GuavaTemplateCacheImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS
     *
     * .
     *
     */
    public function testComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.ideation.client.endpoints.impl.IdeationOperationsService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer
     *
     * .
     *
     */
    public function testComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.journal.client.endpoints.impl.JournalOperationsService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile
     *
     * .
     *
     */
    public function testComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberGroupProfileOperationService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO
     *
     * .
     *
     */
    public function testComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberUserProfileOperationService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF
     *
     * .
     *
     */
    public function testComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.members.impl.CommunityMemberGroupProfileComponentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialMessagingClientEndpointsImplMessagingOperation
     *
     * .
     *
     */
    public function testComAdobeCqSocialMessagingClientEndpointsImplMessagingOperation()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.messaging.client.endpoints.impl.MessagingOperationsServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen
     *
     * .
     *
     */
    public function testComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.FilterGroupSocialComponentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialModerationDashboardApiModerationDashboardSocial
     *
     * .
     *
     */
    public function testComAdobeCqSocialModerationDashboardApiModerationDashboardSocial()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.ModerationDashboardSocialComponentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen
     *
     * .
     *
     */
    public function testComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.UserDetailsSocialComponentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci
     *
     * .
     *
     */
    public function testComAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.internal.impl.FilterGroupSocialComponentFactoryV2';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialNotificationsImplMentionsRouter
     *
     * .
     *
     */
    public function testComAdobeCqSocialNotificationsImplMentionsRouter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.notifications.impl.MentionsRouter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialNotificationsImplNotificationManagerImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialNotificationsImplNotificationManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialNotificationsImplNotificationsRouter
     *
     * .
     *
     */
    public function testComAdobeCqSocialNotificationsImplNotificationsRouter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationsRouter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic
     *
     * .
     *
     */
    public function testComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.qna.client.endpoints.impl.QnaForumOperationsService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI
     *
     * .
     *
     */
    public function testComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportImporterServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM
     *
     * .
     *
     */
    public function testComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportManagementServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS
     *
     * .
     *
     */
    public function testComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.SiteTrendReportSocialComponentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi
     *
     * .
     *
     */
    public function testComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.review.client.endpoints.impl.ReviewOperationsService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet
     *
     * .
     *
     */
    public function testComAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.scf.core.operations.impl.SocialOperationsServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet
     *
     * .
     *
     */
    public function testComAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.scf.endpoints.impl.DefaultSocialGetServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialScoringImplScoringEventListener
     *
     * .
     *
     */
    public function testComAdobeCqSocialScoringImplScoringEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.scoring.impl.ScoringEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.serviceusers.internal.impl.ServiceUserWrapperImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialSiteEndpointsImplSiteOperationService
     *
     * .
     *
     */
    public function testComAdobeCqSocialSiteEndpointsImplSiteOperationService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.site.endpoints.impl.SiteOperationService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm
     *
     * .
     *
     */
    public function testComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.site.impl.AnalyticsComponentConfigurationServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialSiteImplSiteConfiguratorImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialSiteImplSiteConfiguratorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.site.impl.SiteConfiguratorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialSrpImplSocialSolrConnector
     *
     * .
     *
     */
    public function testComAdobeCqSocialSrpImplSocialSolrConnector()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.srp.impl.SocialSolrConnector';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialSyncImplDiffChangesObserver
     *
     * .
     *
     */
    public function testComAdobeCqSocialSyncImplDiffChangesObserver()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.sync.impl.DiffChangesObserver';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialSyncImplGroupSyncListenerImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialSyncImplGroupSyncListenerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.sync.impl.GroupSyncListenerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialSyncImplPublisherSyncServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialSyncImplPublisherSyncServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.sync.impl.PublisherSyncServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialSyncImplUserSyncListenerImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialSyncImplUserSyncListenerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.sync.impl.UserSyncListenerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialTranslationImplTranslationServiceConfigManager
     *
     * .
     *
     */
    public function testComAdobeCqSocialTranslationImplTranslationServiceConfigManager()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.translation.impl.TranslationServiceConfigManager';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialTranslationImplUGCLanguageDetector
     *
     * .
     *
     */
    public function testComAdobeCqSocialTranslationImplUGCLanguageDetector()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.translation.impl.UGCLanguageDetector';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.ugcbase.dispatcher.impl.FlushServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.AysncReverseReplicatorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUgcbaseImplPublisherConfigurationImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialUgcbaseImplPublisherConfigurationImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.PublisherConfigurationImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUgcbaseImplSocialUtilsImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialUgcbaseImplSocialUtilsImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.SocialUtilsImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUgcbaseModerationImplAutoModerationImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialUgcbaseModerationImplAutoModerationImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.AutoModerationImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUgcbaseModerationImplSentimentProcess
     *
     * .
     *
     */
    public function testComAdobeCqSocialUgcbaseModerationImplSentimentProcess()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.SentimentProcess';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli
     *
     * .
     *
     */
    public function testComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.DefaultAttachmentTypeBlacklistService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl
     *
     * .
     *
     */
    public function testComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.SaferSlingPostValidatorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet
     *
     * .
     *
     */
    public function testComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.user.endpoints.impl.UsersGroupFromPublishServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqSocialUserImplTransportHttpToPublisher
     *
     * .
     *
     */
    public function testComAdobeCqSocialUserImplTransportHttpToPublisher()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.social.user.impl.transport.HttpToPublisher';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact
     *
     * .
     *
     */
    public function testComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.ui.wcm.commons.internal.servlets.rte.RTEFilterServletFactory.amended';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqUpgradesCleanupImplUpgradeContentCleanup
     *
     * .
     *
     */
    public function testComAdobeCqUpgradesCleanupImplUpgradeContentCleanup()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeContentCleanup';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup
     *
     * .
     *
     */
    public function testComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeInstallFolderCleanup';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService
     *
     * .
     *
     */
    public function testComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncDeleteConfigProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask
     *
     * .
     *
     */
    public function testComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncJobCleanUpTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService
     *
     * .
     *
     */
    public function testComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncMoveConfigProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService
     *
     * .
     *
     */
    public function testComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncPageMoveConfigProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqWcmLaunchesImplLaunchesEventHandler
     *
     * .
     *
     */
    public function testComAdobeCqWcmLaunchesImplLaunchesEventHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.wcm.launches.impl.LaunchesEventHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator
     *
     * .
     *
     */
    public function testComAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.wcm.mobile.qrcode.servlet.QRCodeImageGenerator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl
     *
     * .
     *
     */
    public function testComAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.wcm.style.internal.ComponentStyleInfoCacheImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl
     *
     * .
     *
     */
    public function testComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.cq.wcm.translation.impl.TranslationPlatformConfigurationImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService
     *
     * .
     *
     */
    public function testComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.fd.fp.config.FormsPortalDraftsandSubmissionConfigService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeFdFpConfigFormsPortalSchedulerService
     *
     * .
     *
     */
    public function testComAdobeFdFpConfigFormsPortalSchedulerService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.fd.fp.config.FormsPortalSchedulerService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeFormsCommonServiceImplDefaultDataProvider
     *
     * .
     *
     */
    public function testComAdobeFormsCommonServiceImplDefaultDataProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.forms.common.service.impl.DefaultDataProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp
     *
     * .
     *
     */
    public function testComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.forms.common.service.impl.FormsCommonConfigurationServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeFormsCommonServletTempCleanUpTask
     *
     * .
     *
     */
    public function testComAdobeFormsCommonServletTempCleanUpTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.forms.common.servlet.TempCleanUpTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAcpPlatformPlatformServlet
     *
     * .
     *
     */
    public function testComAdobeGraniteAcpPlatformPlatformServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.acp.platform.PlatformServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteActivitystreamsImplActivityManagerImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteActivitystreamsImplActivityManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.activitystreams.impl.ActivityManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAnalyzerBaseSystemStatusServlet
     *
     * .
     *
     */
    public function testComAdobeGraniteAnalyzerBaseSystemStatusServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.analyzer.base.SystemStatusServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet
     *
     * .
     *
     */
    public function testComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.analyzer.scripts.compile.AllScriptsCompilerServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteApicontrollerFilterResolverHookFactory
     *
     * .
     *
     */
    public function testComAdobeGraniteApicontrollerFilterResolverHookFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.apicontroller.FilterResolverHookFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthCertImplClientCertAuthHandler
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthCertImplClientCertAuthHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.cert.impl.ClientCertAuthHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthIms
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthIms()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.ims';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.ims.impl.ExternalUserIdMappingProviderExtension';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSAccessTokenRequestCustomizerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSInstanceCredentialsValidator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthImsImplIMSProviderImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthImsImplIMSProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthImsImplImsConfigProviderImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthImsImplImsConfigProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.ims.impl.ImsConfigProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthAccesstokenProvider
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthAccesstokenProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.accesstoken.provider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthImplBearerAuthenticationHandler
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthImplBearerAuthenticationHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.impl.BearerAuthenticationHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.impl.DefaultTokenValidatorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthImplFacebookProviderImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthImplFacebookProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.impl.FacebookProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthImplGithubProviderImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthImplGithubProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.impl.GithubProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthImplGraniteProvider
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthImplGraniteProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.impl.GraniteProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthImplHelperProviderConfigManager
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthImplHelperProviderConfigManager()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManager';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManagerInternal';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthImplOAuthAuthenticationHandler
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthImplOAuthAuthenticationHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.impl.OAuthAuthenticationHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthImplTwitterProviderImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthImplTwitterProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.impl.TwitterProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthOauthProvider
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthOauthProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.oauth.provider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthRequirementImplDefaultRequirementHandler
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthRequirementImplDefaultRequirementHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.requirement.impl.DefaultRequirementHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthSamlSamlAuthenticationHandler
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthSamlSamlAuthenticationHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteAuthSsoImplSsoAuthenticationHandler
     *
     * .
     *
     */
    public function testComAdobeGraniteAuthSsoImplSsoAuthenticationHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.auth.sso.impl.SsoAuthenticationHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplCodeCacheHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplCodeCacheHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.CodeCacheHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.CrxdeSupportBundleHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplDavExBundleHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplDavExBundleHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.DavExBundleHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.InactiveBundlesHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplJobsHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplJobsHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.JobsHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplSlingGetServletHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplSlingGetServletHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingGetServletHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJavaScriptHandlerHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJspScriptHandlerHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingReferrerFilterHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteBundlesHcImplWebDavBundleHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteBundlesHcImplWebDavBundleHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.bundles.hc.impl.WebDavBundleHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteCommentsInternalCommentReplicationContentFilterFac
     *
     * .
     *
     */
    public function testComAdobeGraniteCommentsInternalCommentReplicationContentFilterFac()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.comments.internal.CommentReplicationContentFilterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.compatrouter.impl.CompatSwitchingServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteCompatrouterImplRoutingConfig
     *
     * .
     *
     */
    public function testComAdobeGraniteCompatrouterImplRoutingConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.compatrouter.impl.RoutingConfig';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteCompatrouterImplSwitchMappingConfig
     *
     * .
     *
     */
    public function testComAdobeGraniteCompatrouterImplSwitchMappingConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.compatrouter.impl.SwitchMappingConfig';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving
     *
     * .
     *
     */
    public function testComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.conf.impl.RuntimeAwareConfigurationResourceResolvingStrategy';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteContexthubImplContextHubImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteContexthubImplContextHubImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.contexthub.impl.ContextHubImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteCorsImplCORSPolicyImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteCorsImplCORSPolicyImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.cors.impl.CORSPolicyImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteCsrfImplCSRFFilter
     *
     * .
     *
     */
    public function testComAdobeGraniteCsrfImplCSRFFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.csrf.impl.CSRFFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteCsrfImplCSRFServlet
     *
     * .
     *
     */
    public function testComAdobeGraniteCsrfImplCSRFServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.csrf.impl.CSRFServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe
     *
     * .
     *
     */
    public function testComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteDistributionCoreImplDiffDiffChangesObserver
     *
     * .
     *
     */
    public function testComAdobeGraniteDistributionCoreImplDiffDiffChangesObserver()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteDistributionCoreImplDiffDiffEventListener
     *
     * .
     *
     */
    public function testComAdobeGraniteDistributionCoreImplDiffDiffEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteDistributionCoreImplDistributionToReplicationEven
     *
     * .
     *
     */
    public function testComAdobeGraniteDistributionCoreImplDistributionToReplicationEven()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.distribution.core.impl.DistributionToReplicationEventTransformer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat
     *
     * .
     *
     */
    public function testComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteDistributionCoreImplReplicationDistributionTrans
     *
     * .
     *
     */
    public function testComAdobeGraniteDistributionCoreImplReplicationDistributionTrans()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.DistributionTransportHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu
     *
     * .
     *
     */
    public function testComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteFragsImplCheckHttpHeaderFlag
     *
     * .
     *
     */
    public function testComAdobeGraniteFragsImplCheckHttpHeaderFlag()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.frags.impl.CheckHttpHeaderFlag';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteFragsImplRandomFeature
     *
     * .
     *
     */
    public function testComAdobeGraniteFragsImplRandomFeature()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.frags.impl.RandomFeature';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteHttpcacheFileFileCacheStore
     *
     * .
     *
     */
    public function testComAdobeGraniteHttpcacheFileFileCacheStore()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.httpcache.file.FileCacheStore';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteHttpcacheImplOuterCacheFilter
     *
     * .
     *
     */
    public function testComAdobeGraniteHttpcacheImplOuterCacheFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.httpcache.impl.OuterCacheFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteI18nImplBundlePseudoTranslations
     *
     * .
     *
     */
    public function testComAdobeGraniteI18nImplBundlePseudoTranslations()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.i18n.impl.bundle.PseudoTranslations';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteI18nImplPreferencesLocaleResolverService
     *
     * .
     *
     */
    public function testComAdobeGraniteI18nImplPreferencesLocaleResolverService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.i18n.impl.PreferencesLocaleResolverService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteInfocollectorInfoCollector
     *
     * .
     *
     */
    public function testComAdobeGraniteInfocollectorInfoCollector()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.infocollector.InfoCollector';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteJettySslInternalGraniteSslConnectorFactory
     *
     * .
     *
     */
    public function testComAdobeGraniteJettySslInternalGraniteSslConnectorFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.jetty.ssl.internal.GraniteSslConnectorFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteLicenseImplLicenseCheckFilter
     *
     * .
     *
     */
    public function testComAdobeGraniteLicenseImplLicenseCheckFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.license.impl.LicenseCheckFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteLoggingImplLogAnalyserImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteLoggingImplLogAnalyserImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.logging.impl.LogAnalyserImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteLoggingImplLogErrorHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteLoggingImplLogErrorHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.logging.impl.LogErrorHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask
     *
     * .
     *
     */
    public function testComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.DataStoreGarbageCollectionTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask
     *
     * .
     *
     */
    public function testComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.LuceneBinariesCleanupTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteMaintenanceCrxImplRevisionCleanupTask
     *
     * .
     *
     */
    public function testComAdobeGraniteMaintenanceCrxImplRevisionCleanupTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.RevisionCleanupTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteMonitoringImplScriptConfigImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteMonitoringImplScriptConfigImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.monitoring.impl.ScriptConfigImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan
     *
     * .
     *
     */
    public function testComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.oauth.server.auth.impl.OAuth2ServerAuthenticationHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOauthServerImplAccessTokenCleanupTask
     *
     * .
     *
     */
    public function testComAdobeGraniteOauthServerImplAccessTokenCleanupTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.oauth.server.impl.AccessTokenCleanupTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet
     *
     * .
     *
     */
    public function testComAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2ClientRevocationServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet
     *
     * .
     *
     */
    public function testComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2RevocationEndpointServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet
     *
     * .
     *
     */
    public function testComAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenEndpointServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet
     *
     * .
     *
     */
    public function testComAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenRevocationServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOffloadingImplOffloadingConfigurator
     *
     * .
     *
     */
    public function testComAdobeGraniteOffloadingImplOffloadingConfigurator()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingConfigurator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOffloadingImplOffloadingJobCloner
     *
     * .
     *
     */
    public function testComAdobeGraniteOffloadingImplOffloadingJobCloner()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobCloner';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOffloadingImplOffloadingJobOffloader
     *
     * .
     *
     */
    public function testComAdobeGraniteOffloadingImplOffloadingJobOffloader()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobOffloader';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOffloadingImplTransporterOffloadingAgentManager
     *
     * .
     *
     */
    public function testComAdobeGraniteOffloadingImplTransporterOffloadingAgentManager()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingAgentManager';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo
     *
     * .
     *
     */
    public function testComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingDefaultTransporter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.omnisearch.impl.core.OmniSearchServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteOptoutImplOptOutServiceImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteOptoutImplOptOutServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.optout.impl.OptOutServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteQueriesImplHcAsyncIndexHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteQueriesImplHcAsyncIndexHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.queries.impl.hc.AsyncIndexHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteQueriesImplHcLargeIndexHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteQueriesImplHcLargeIndexHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.queries.impl.hc.LargeIndexHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteQueriesImplHcQueriesStatusHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteQueriesImplHcQueriesStatusHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueriesStatusHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteQueriesImplHcQueryHealthCheckMetrics
     *
     * .
     *
     */
    public function testComAdobeGraniteQueriesImplHcQueryHealthCheckMetrics()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryHealthCheckMetrics';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteQueriesImplHcQueryLimitsHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteQueriesImplHcQueryLimitsHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryLimitsHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteReplicationHcImplReplicationQueueHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteReplicationHcImplReplicationQueueHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationQueueHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC
     *
     * .
     *
     */
    public function testComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationTransportUsersHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.repository.hc.impl.AuthorizableNodeNameHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC
     *
     * .
     *
     */
    public function testComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.repository.hc.impl.content.sling.SlingContentHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.repository.hc.impl.ContinuousRGCHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe
     *
     * .
     *
     */
    public function testComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultAccessUserProfileHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultLoginsHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.repository.hc.impl.DiskSpaceHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck
     *
     * .
     *
     */
    public function testComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.repository.hc.impl.ObservationQueueLengthHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRepositoryImplCommitStatsConfig
     *
     * .
     *
     */
    public function testComAdobeGraniteRepositoryImplCommitStatsConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.repository.impl.CommitStatsConfig';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRepositoryServiceUserConfiguration
     *
     * .
     *
     */
    public function testComAdobeGraniteRepositoryServiceUserConfiguration()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.repository.ServiceUserConfiguration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm
     *
     * .
     *
     */
    public function testComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.requests.logging.impl.hc.RequestsStatusHealthCheckImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteResourcestatusImplCompositeStatusType
     *
     * .
     *
     */
    public function testComAdobeGraniteResourcestatusImplCompositeStatusType()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.resourcestatus.impl.CompositeStatusType';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteResourcestatusImplStatusResourceProviderImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteResourcestatusImplStatusResourceProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.resourcestatus.impl.StatusResourceProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRestAssetsImplAssetContentDispositionFilter
     *
     * .
     *
     */
    public function testComAdobeGraniteRestAssetsImplAssetContentDispositionFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.rest.assets.impl.AssetContentDispositionFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.rest.impl.ApiEndpointResourceProviderFactoryImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteRestImplServletDefaultGETServlet
     *
     * .
     *
     */
    public function testComAdobeGraniteRestImplServletDefaultGETServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.rest.impl.servlet.DefaultGETServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS
     *
     * .
     *
     */
    public function testComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.security.user.ui.internal.servlets.SSLConfigurationServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteSecurityUserUserPropertiesService
     *
     * .
     *
     */
    public function testComAdobeGraniteSecurityUserUserPropertiesService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.security.user.UserPropertiesService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteSocialgraphImplSocialGraphFactoryImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteSocialgraphImplSocialGraphFactoryImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.socialgraph.impl.SocialGraphFactoryImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.system.monitoring.impl.SystemStatsMBeanImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory
     *
     * .
     *
     */
    public function testComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskAdapterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteTaskmanagementImplJcrTaskArchiveService
     *
     * .
     *
     */
    public function testComAdobeGraniteTaskmanagementImplJcrTaskArchiveService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskArchiveService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask
     *
     * .
     *
     */
    public function testComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.taskmanagement.impl.purge.TaskPurgeMaintenanceTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor
     *
     * .
     *
     */
    public function testComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.taskmanagement.impl.service.TaskManagerAdapterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteThreaddumpThreadDumpCollector
     *
     * .
     *
     */
    public function testComAdobeGraniteThreaddumpThreadDumpCollector()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.threaddump.ThreadDumpCollector';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl
     *
     * .
     *
     */
    public function testComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.translation.connector.msft.core.impl.MicrosoftTranslationServiceFactoryImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteTranslationCoreImplTranslationManagerImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteTranslationCoreImplTranslationManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.translation.core.impl.TranslationManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl
     *
     * .
     *
     */
    public function testComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.ui.clientlibs.impl.HtmlLibraryManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.console.frags.WorkflowWithdrawFeature';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.console.publish.WorkflowPublishEventService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowCoreJcrWorkflowBucketManager
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowCoreJcrWorkflowBucketManager()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.core.jcr.WorkflowBucketManager';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowCoreJobExternalProcessJobHandler
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowCoreJobExternalProcessJobHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.core.job.ExternalProcessJobHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowCoreJobJobHandler
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowCoreJobJobHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.core.job.JobHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.core.offloading.WorkflowOffloadingJobConsumer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowCorePayloadMapCache
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowCorePayloadMapCache()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.core.PayloadMapCache';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.core.payloadmap.PayloadMoveListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowCoreWorkflowConfig
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowCoreWorkflowConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.core.WorkflowConfig';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowCoreWorkflowSessionFactory
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowCoreWorkflowSessionFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.core.WorkflowSessionFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeGraniteWorkflowPurgeScheduler
     *
     * .
     *
     */
    public function testComAdobeGraniteWorkflowPurgeScheduler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.granite.workflow.purge.Scheduler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeOctopusNcommBootstrap
     *
     * .
     *
     */
    public function testComAdobeOctopusNcommBootstrap()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.octopus.ncomm.bootstrap';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS
     *
     * .
     *
     */
    public function testComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.social.integrations.livefyre.user.pingforpull.impl.PingPullServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comAdobeXmpWorkerFilesNcommXMPFilesNComm
     *
     * .
     *
     */
    public function testComAdobeXmpWorkerFilesNcommXMPFilesNComm()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.adobe.xmp.worker.files.ncomm.XMPFilesNComm';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCommonsDatasourceJdbcpoolJdbcPoolService
     *
     * .
     *
     */
    public function testComDayCommonsDatasourceJdbcpoolJdbcPoolService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.commons.datasource.jdbcpool.JdbcPoolService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCommonsHttpclient
     *
     * .
     *
     */
    public function testComDayCommonsHttpclient()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.commons.httpclient';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsImplStorePropertiesChangeListener
     *
     * .
     *
     */
    public function testComDayCqAnalyticsImplStorePropertiesChangeListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.impl.StorePropertiesChangeListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsSitecatalystImplExporterClassificationsExporte
     *
     * .
     *
     */
    public function testComDayCqAnalyticsSitecatalystImplExporterClassificationsExporte()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.exporter.ClassificationsExporter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsSitecatalystImplImporterReportImporter
     *
     * .
     *
     */
    public function testComDayCqAnalyticsSitecatalystImplImporterReportImporter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.importer.ReportImporter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory
     *
     * .
     *
     */
    public function testComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystAdapterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl
     *
     * .
     *
     */
    public function testComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystHttpClientImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsTestandtargetImplAccountOptionsUpdater
     *
     * .
     *
     */
    public function testComDayCqAnalyticsTestandtargetImplAccountOptionsUpdater()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.AccountOptionsUpdater';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener
     *
     * .
     *
     */
    public function testComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.DeleteAuthorActivityListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener
     *
     * .
     *
     */
    public function testComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.PushAuthorCampaignPageListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsTestandtargetImplSegmentImporter
     *
     * .
     *
     */
    public function testComDayCqAnalyticsTestandtargetImplSegmentImporter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.SegmentImporter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsTestandtargetImplServiceWebServiceImpl
     *
     * .
     *
     */
    public function testComDayCqAnalyticsTestandtargetImplServiceWebServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.service.WebServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsTestandtargetImplServletsAdminServerServlet
     *
     * .
     *
     */
    public function testComDayCqAnalyticsTestandtargetImplServletsAdminServerServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.servlets.AdminServerServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl
     *
     * .
     *
     */
    public function testComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.TestandtargetHttpClientImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAuthImplCugCugSupportImpl
     *
     * .
     *
     */
    public function testComDayCqAuthImplCugCugSupportImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.auth.impl.cug.CugSupportImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqAuthImplLoginSelectorHandler
     *
     * .
     *
     */
    public function testComDayCqAuthImplLoginSelectorHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.auth.impl.LoginSelectorHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqCommonsImplExternalizerImpl
     *
     * .
     *
     */
    public function testComDayCqCommonsImplExternalizerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.commons.impl.ExternalizerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqCommonsServletsRootMappingServlet
     *
     * .
     *
     */
    public function testComDayCqCommonsServletsRootMappingServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.commons.servlets.RootMappingServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke
     *
     * .
     *
     */
    public function testComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.CodeUpgradeExecutionConditionChecker';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList
     *
     * .
     *
     */
    public function testComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.UpgradeTaskIgnoreList';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist
     *
     * .
     *
     */
    public function testComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.VersionRangeTaskIgnorelist';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqContentsyncImplContentSyncManagerImpl
     *
     * .
     *
     */
    public function testComDayCqContentsyncImplContentSyncManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.contentsync.impl.ContentSyncManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCommonsHandlerStandardImageHandler
     *
     * .
     *
     */
    public function testComDayCqDamCommonsHandlerStandardImageHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.commons.handler.StandardImageHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCommonsMetadataXmpFilterBlackWhite
     *
     * .
     *
     */
    public function testComDayCqDamCommonsMetadataXmpFilterBlackWhite()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.commons.metadata.XmpFilterBlackWhite';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCommonsUtilImplAssetCacheImpl
     *
     * .
     *
     */
    public function testComDayCqDamCommonsUtilImplAssetCacheImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.commons.util.impl.AssetCacheImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.annotation.pdf.AnnotationPdfConfig';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplAssetMoveListener
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplAssetMoveListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.AssetMoveListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplAssethomeAssetHomePageConfiguration
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplAssethomeAssetHomePageConfiguration()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.assethome.AssetHomePageConfiguration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.assetlinkshare.AdhocAssetShareProxyServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplCacheCQBufferedImageCache
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplCacheCQBufferedImageCache()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.cache.CQBufferedImageCache';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplDamChangeEventListener
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplDamChangeEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.DamChangeEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplDamEventPurgeService
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplDamEventPurgeService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.DamEventPurgeService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplDamEventRecorderImpl
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplDamEventRecorderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.DamEventRecorderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplEventDamEventAuditListener
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplEventDamEventAuditListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.event.DamEventAuditListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplExpiryNotificationJobImpl
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplExpiryNotificationJobImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.ExpiryNotificationJobImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.foldermetadataschema.FolderMetadataSchemaFeatureFlag';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplGfxCommonsGfxRenderer
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplGfxCommonsGfxRenderer()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.gfx.CommonsGfxRenderer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplHandlerEPSFormatHandler
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplHandlerEPSFormatHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.handler.EPSFormatHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplHandlerIndesignFormatHandler
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplHandlerIndesignFormatHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.handler.IndesignFormatHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplHandlerJpegHandler
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplHandlerJpegHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.handler.JpegHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplHandlerXmpNCommXMPHandler
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplHandlerXmpNCommXMPHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.handler.xmp.NCommXMPHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplJmxAssetIndexUpdateMonitor
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplJmxAssetIndexUpdateMonitor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetIndexUpdateMonitor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplJmxAssetMigrationMBeanImpl
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplJmxAssetMigrationMBeanImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetMigrationMBeanImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplJmxAssetUpdateMonitorImpl
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplJmxAssetUpdateMonitorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetUpdateMonitorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataexport.AsyncMetadataExportConfigProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataimport.AsyncMetadataImportConfigProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplLightboxLightboxServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplLightboxLightboxServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.lightbox.LightboxServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplMetadataEditorSelectComponentHandler
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplMetadataEditorSelectComponentHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.metadata.editor.SelectComponentHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.mimeType.AssetUploadRestrictionHelper';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.mimeType.DamMimeTypeServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplMissingMetadataNotificationJob
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplMissingMetadataNotificationJob()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.MissingMetadataNotificationJob';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.process.SendTransientWorkflowCompletedEmailProcess';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplProcessTextExtractionProcess
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplProcessTextExtractionProcess()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.process.TextExtractionProcess';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplRenditionMakerImpl
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplRenditionMakerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.RenditionMakerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplReportsReportExportService
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplReportsReportExportService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportExportService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplReportsReportPurgeService
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplReportsReportPurgeService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportPurgeService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletAssetDownloadServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletAssetDownloadServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetDownloadServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletAssetStatusServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletAssetStatusServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetStatusServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletAssetXMPSearchServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletAssetXMPSearchServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetXMPSearchServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletBatchMetadataServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletBatchMetadataServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.BatchMetadataServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletBinaryProviderServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletBinaryProviderServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.BinaryProviderServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletCollectionServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletCollectionServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletCollectionsServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletCollectionsServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionsServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletCompanionServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletCompanionServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CompanionServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletCreateAssetServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletCreateAssetServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CreateAssetServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletDamContentDispositionFilter
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletDamContentDispositionFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.DamContentDispositionFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletGuidLookupFilter
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletGuidLookupFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.GuidLookupFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletHealthCheckServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletHealthCheckServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.HealthCheckServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletMetadataGetServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletMetadataGetServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.MetadataGetServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletMultipleLicenseAcceptServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletMultipleLicenseAcceptServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.MultipleLicenseAcceptServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplServletResourceCollectionServlet
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplServletResourceCollectionServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.servlet.ResourceCollectionServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.ui.preview.FolderPreviewUpdaterImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreImplUnzipUnzipConfig
     *
     * .
     *
     */
    public function testComDayCqDamCoreImplUnzipUnzipConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.impl.unzip.UnzipConfig';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreProcessExifToolExtractMetadataProcess
     *
     * .
     *
     */
    public function testComDayCqDamCoreProcessExifToolExtractMetadataProcess()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.process.ExifToolExtractMetadataProcess';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreProcessExtractMetadataProcess
     *
     * .
     *
     */
    public function testComDayCqDamCoreProcessExtractMetadataProcess()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.process.ExtractMetadataProcess';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamCoreProcessMetadataProcessorProcess
     *
     * .
     *
     */
    public function testComDayCqDamCoreProcessMetadataProcessorProcess()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.core.process.MetadataProcessorProcess';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamHandlerFfmpegLocatorImpl
     *
     * .
     *
     */
    public function testComDayCqDamHandlerFfmpegLocatorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.handler.ffmpeg.LocatorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl
     *
     * .
     *
     */
    public function testComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.handler.gibson.fontmanager.impl.FontManagerServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamHandlerStandardPdfPdfHandler
     *
     * .
     *
     */
    public function testComDayCqDamHandlerStandardPdfPdfHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.handler.standard.pdf.PdfHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamHandlerStandardPsPostScriptHandler
     *
     * .
     *
     */
    public function testComDayCqDamHandlerStandardPsPostScriptHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.handler.standard.ps.PostScriptHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamHandlerStandardPsdPsdHandler
     *
     * .
     *
     */
    public function testComDayCqDamHandlerStandardPsdPsdHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.handler.standard.psd.PsdHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamIdsImplIDSJobProcessor
     *
     * .
     *
     */
    public function testComDayCqDamIdsImplIDSJobProcessor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.ids.impl.IDSJobProcessor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamIdsImplIDSPoolManagerImpl
     *
     * .
     *
     */
    public function testComDayCqDamIdsImplIDSPoolManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.ids.impl.IDSPoolManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamInddImplHandlerIndesignXMPHandler
     *
     * .
     *
     */
    public function testComDayCqDamInddImplHandlerIndesignXMPHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.indd.impl.handler.IndesignXMPHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamInddImplServletSnippetCreationServlet
     *
     * .
     *
     */
    public function testComDayCqDamInddImplServletSnippetCreationServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.indd.impl.servlet.SnippetCreationServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamInddProcessINDDMediaExtractProcess
     *
     * .
     *
     */
    public function testComDayCqDamInddProcessINDDMediaExtractProcess()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.indd.process.INDDMediaExtractProcess';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl
     *
     * .
     *
     */
    public function testComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceDataHandlerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamPerformanceInternalAssetPerformanceReportSyncJob
     *
     * .
     *
     */
    public function testComDayCqDamPerformanceInternalAssetPerformanceReportSyncJob()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceReportSyncJob';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro
     *
     * .
     *
     */
    public function testComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.pim.impl.sourcing.upload.process.ProductAssetsUploadProcess';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven
     *
     * .
     *
     */
    public function testComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.S7damDynamicMediaConfigEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner
     *
     * .
     *
     */
    public function testComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.SiteCatalystReportRunner';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamS7damCommonPostServletsSetCreateHandler
     *
     * .
     *
     */
    public function testComDayCqDamS7damCommonPostServletsSetCreateHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetCreateHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamS7damCommonPostServletsSetModifyHandler
     *
     * .
     *
     */
    public function testComDayCqDamS7damCommonPostServletsSetModifyHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetModifyHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess
     *
     * .
     *
     */
    public function testComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.s7dam.common.process.VideoThumbnailDownloadProcess';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamS7damCommonS7damDamChangeEventListener
     *
     * .
     *
     */
    public function testComDayCqDamS7damCommonS7damDamChangeEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.s7dam.common.S7damDamChangeEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamS7damCommonServletsS7damProductInfoServlet
     *
     * .
     *
     */
    public function testComDayCqDamS7damCommonServletsS7damProductInfoServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.s7dam.common.servlets.S7damProductInfoServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl
     *
     * .
     *
     */
    public function testComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.s7dam.common.video.impl.VideoProxyClientServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamScene7ImplScene7APIClientImpl
     *
     * .
     *
     */
    public function testComDayCqDamScene7ImplScene7APIClientImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7APIClientImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl
     *
     * .
     *
     */
    public function testComDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7AssetMimeTypeServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamScene7ImplScene7ConfigurationEventListener
     *
     * .
     *
     */
    public function testComDayCqDamScene7ImplScene7ConfigurationEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7ConfigurationEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamScene7ImplScene7DamChangeEventListener
     *
     * .
     *
     */
    public function testComDayCqDamScene7ImplScene7DamChangeEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7DamChangeEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamScene7ImplScene7FlashTemplatesServiceImpl
     *
     * .
     *
     */
    public function testComDayCqDamScene7ImplScene7FlashTemplatesServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7FlashTemplatesServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamScene7ImplScene7UploadServiceImpl
     *
     * .
     *
     */
    public function testComDayCqDamScene7ImplScene7UploadServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7UploadServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer
     *
     * .
     *
     */
    public function testComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.stock.integration.impl.cache.StockCacheConfigurationServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamStockIntegrationImplConfigurationStockConfiguration
     *
     * .
     *
     */
    public function testComDayCqDamStockIntegrationImplConfigurationStockConfiguration()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.stock.integration.impl.configuration.StockConfigurationImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqDamVideoImplServletVideoTestServlet
     *
     * .
     *
     */
    public function testComDayCqDamVideoImplServletVideoTestServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.dam.video.impl.servlet.VideoTestServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqExtwidgetServletsImageSpriteServlet
     *
     * .
     *
     */
    public function testComDayCqExtwidgetServletsImageSpriteServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.extwidget.servlets.ImageSpriteServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqImageInternalFontFontHelper
     *
     * .
     *
     */
    public function testComDayCqImageInternalFontFontHelper()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.image.internal.font.FontHelper';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqJcrclustersupportClusterStartLevelController
     *
     * .
     *
     */
    public function testComDayCqJcrclustersupportClusterStartLevelController()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.jcrclustersupport.ClusterStartLevelController';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMailerDefaultMailService
     *
     * .
     *
     */
    public function testComDayCqMailerDefaultMailService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mailer.DefaultMailService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMailerImplCqMailingService
     *
     * .
     *
     */
    public function testComDayCqMailerImplCqMailingService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mailer.impl.CqMailingService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMailerImplEmailCqEmailTemplateFactory
     *
     * .
     *
     */
    public function testComDayCqMailerImplEmailCqEmailTemplateFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mailer.impl.email.CqEmailTemplateFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMailerImplEmailCqRetrieverTemplateFactory
     *
     * .
     *
     */
    public function testComDayCqMailerImplEmailCqRetrieverTemplateFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mailer.impl.email.CqRetrieverTemplateFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMcmCampaignImplIntegrationConfigImpl
     *
     * .
     *
     */
    public function testComDayCqMcmCampaignImplIntegrationConfigImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mcm.campaign.impl.IntegrationConfigImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMcmCampaignImporterPersonalizedTextHandlerFactory
     *
     * .
     *
     */
    public function testComDayCqMcmCampaignImporterPersonalizedTextHandlerFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mcm.campaign.importer.PersonalizedTextHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMcmCoreNewsletterNewsletterEmailServiceImpl
     *
     * .
     *
     */
    public function testComDayCqMcmCoreNewsletterNewsletterEmailServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mcm.core.newsletter.NewsletterEmailServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMcmImplMCMConfiguration
     *
     * .
     *
     */
    public function testComDayCqMcmImplMCMConfiguration()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mcm.impl.MCMConfiguration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen
     *
     * .
     *
     */
    public function testComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.ClickThroughComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug
     *
     * .
     *
     */
    public function testComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.GraphicalClickThroughComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent
     *
     * .
     *
     */
    public function testComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.LeadFormCTAComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa
     *
     * .
     *
     */
    public function testComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.MBoxExperienceTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH
     *
     * .
     *
     */
    public function testComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.TargetComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqNotificationImplNotificationServiceImpl
     *
     * .
     *
     */
    public function testComDayCqNotificationImplNotificationServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.notification.impl.NotificationServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqPersonalizationImplServletsTargetingConfigurationServlet
     *
     * .
     *
     */
    public function testComDayCqPersonalizationImplServletsTargetingConfigurationServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.personalization.impl.servlets.TargetingConfigurationServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqPollingImporterImplManagedPollConfigImpl
     *
     * .
     *
     */
    public function testComDayCqPollingImporterImplManagedPollConfigImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollConfigImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqPollingImporterImplManagedPollingImporterImpl
     *
     * .
     *
     */
    public function testComDayCqPollingImporterImplManagedPollingImporterImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollingImporterImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqPollingImporterImplPollingImporterImpl
     *
     * .
     *
     */
    public function testComDayCqPollingImporterImplPollingImporterImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.polling.importer.impl.PollingImporterImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationAuditReplicationEventListener
     *
     * .
     *
     */
    public function testComDayCqReplicationAuditReplicationEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.audit.ReplicationEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationContentStaticContentBuilder
     *
     * .
     *
     */
    public function testComDayCqReplicationContentStaticContentBuilder()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.content.StaticContentBuilder';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationImplAgentManagerImpl
     *
     * .
     *
     */
    public function testComDayCqReplicationImplAgentManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.impl.AgentManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationImplContentDurboBinaryLessContentBuilder
     *
     * .
     *
     */
    public function testComDayCqReplicationImplContentDurboBinaryLessContentBuilder()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.impl.content.durbo.BinaryLessContentBuilder';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationImplContentDurboDurboImportConfigurationProv
     *
     * .
     *
     */
    public function testComDayCqReplicationImplContentDurboDurboImportConfigurationProv()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.impl.content.durbo.DurboImportConfigurationProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationImplReplicationContentFactoryProviderImpl
     *
     * .
     *
     */
    public function testComDayCqReplicationImplReplicationContentFactoryProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.impl.ReplicationContentFactoryProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationImplReplicationReceiverImpl
     *
     * .
     *
     */
    public function testComDayCqReplicationImplReplicationReceiverImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.impl.ReplicationReceiverImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationImplReplicatorImpl
     *
     * .
     *
     */
    public function testComDayCqReplicationImplReplicatorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.impl.ReplicatorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationImplReverseReplicator
     *
     * .
     *
     */
    public function testComDayCqReplicationImplReverseReplicator()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.impl.ReverseReplicator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationImplTransportBinaryLessTransportHandler
     *
     * .
     *
     */
    public function testComDayCqReplicationImplTransportBinaryLessTransportHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.impl.transport.BinaryLessTransportHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReplicationImplTransportHttp
     *
     * .
     *
     */
    public function testComDayCqReplicationImplTransportHttp()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.replication.impl.transport.Http';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReportingImplCacheCacheImpl
     *
     * .
     *
     */
    public function testComDayCqReportingImplCacheCacheImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.reporting.impl.cache.CacheImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReportingImplConfigServiceImpl
     *
     * .
     *
     */
    public function testComDayCqReportingImplConfigServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.reporting.impl.ConfigServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqReportingImplRLogAnalyzer
     *
     * .
     *
     */
    public function testComDayCqReportingImplRLogAnalyzer()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.reporting.impl.RLogAnalyzer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqRewriterLinkcheckerImplLinkCheckerImpl
     *
     * .
     *
     */
    public function testComDayCqRewriterLinkcheckerImplLinkCheckerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqRewriterLinkcheckerImplLinkCheckerTask
     *
     * .
     *
     */
    public function testComDayCqRewriterLinkcheckerImplLinkCheckerTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory
     *
     * .
     *
     */
    public function testComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTransformerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqRewriterLinkcheckerImplLinkInfoStorageImpl
     *
     * .
     *
     */
    public function testComDayCqRewriterLinkcheckerImplLinkInfoStorageImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkInfoStorageImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqRewriterProcessorImplHtmlParserFactory
     *
     * .
     *
     */
    public function testComDayCqRewriterProcessorImplHtmlParserFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.rewriter.processor.impl.HtmlParserFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqSearchImplBuilderQueryBuilderImpl
     *
     * .
     *
     */
    public function testComDayCqSearchImplBuilderQueryBuilderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.search.impl.builder.QueryBuilderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqSearchSuggestImplSuggestionIndexManagerImpl
     *
     * .
     *
     */
    public function testComDayCqSearchSuggestImplSuggestionIndexManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.search.suggest.impl.SuggestionIndexManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqSearchpromoteImplPublishSearchPromoteConfigHandler
     *
     * .
     *
     */
    public function testComDayCqSearchpromoteImplPublishSearchPromoteConfigHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.searchpromote.impl.PublishSearchPromoteConfigHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqSearchpromoteImplSearchPromoteServiceImpl
     *
     * .
     *
     */
    public function testComDayCqSearchpromoteImplSearchPromoteServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.searchpromote.impl.SearchPromoteServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqSecurityACLSetup
     *
     * .
     *
     */
    public function testComDayCqSecurityACLSetup()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.security.ACLSetup';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqStatisticsImplStatisticsServiceImpl
     *
     * .
     *
     */
    public function testComDayCqStatisticsImplStatisticsServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.statistics.impl.StatisticsServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqTaggingImplJcrTagManagerFactoryImpl
     *
     * .
     *
     */
    public function testComDayCqTaggingImplJcrTagManagerFactoryImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.tagging.impl.JcrTagManagerFactoryImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqTaggingImplSearchTagPredicateEvaluator
     *
     * .
     *
     */
    public function testComDayCqTaggingImplSearchTagPredicateEvaluator()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.tagging.impl.search.TagPredicateEvaluator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqTaggingImplTagGarbageCollector
     *
     * .
     *
     */
    public function testComDayCqTaggingImplTagGarbageCollector()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.tagging.impl.TagGarbageCollector';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmContentsyncImplHandlerPagesUpdateHandler
     *
     * .
     *
     */
    public function testComDayCqWcmContentsyncImplHandlerPagesUpdateHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.contentsync.impl.handler.PagesUpdateHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor
     *
     * .
     *
     */
    public function testComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.contentsync.impl.rewriter.PathRewriterTransformerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplAuthoringUIModeServiceImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplAuthoringUIModeServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.AuthoringUIModeServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplCommandsWCMCommandServlet
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplCommandsWCMCommandServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.commands.WCMCommandServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.devicedetection.DeviceIdentificationModeImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplEventPageEventAuditListener
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplEventPageEventAuditListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.event.PageEventAuditListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplEventPagePostProcessor
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplEventPagePostProcessor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.event.PagePostProcessor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplEventRepositoryChangeEventListener
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplEventRepositoryChangeEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.event.RepositoryChangeEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplEventTemplatePostProcessor
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplEventTemplatePostProcessor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.event.TemplatePostProcessor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplLanguageManagerImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplLanguageManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.LanguageManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.LinkCheckerConfigurationFactoryImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplPagePageInfoAggregatorImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplPagePageInfoAggregatorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.page.PageInfoAggregatorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplPagePageManagerFactoryImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplPagePageManagerFactoryImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.page.PageManagerFactoryImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplReferencesContentContentReferenceConfig
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplReferencesContentContentReferenceConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.references.content.ContentReferenceConfig';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplServletsContentfinderAssetViewHandler
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplServletsContentfinderAssetViewHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.AssetViewHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.connector.ConnectorViewHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplServletsContentfinderPageViewHandler
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplServletsContentfinderPageViewHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.PageViewHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplServletsFindReplaceServlet
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplServletsFindReplaceServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.FindReplaceServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplServletsReferenceSearchServlet
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplServletsReferenceSearchServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ReferenceSearchServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplServletsThumbnailServlet
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplServletsThumbnailServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ThumbnailServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplUtilsDefaultPageNameValidator
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplUtilsDefaultPageNameValidator()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.utils.DefaultPageNameValidator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplVariantsPageVariantsProviderImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplVariantsPageVariantsProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.variants.PageVariantsProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplVersionManagerImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplVersionManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.VersionManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplVersionPurgeTask
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplVersionPurgeTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.VersionPurgeTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplWCMDebugFilter
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplWCMDebugFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.WCMDebugFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplWCMDeveloperModeFilter
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplWCMDeveloperModeFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.WCMDeveloperModeFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreImplWarpTimeWarpFilter
     *
     * .
     *
     */
    public function testComDayCqWcmCoreImplWarpTimeWarpFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.impl.warp.TimeWarpFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreMvtMVTStatisticsImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreMvtMVTStatisticsImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.mvt.MVTStatisticsImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreStatsPageViewStatisticsImpl
     *
     * .
     *
     */
    public function testComDayCqWcmCoreStatsPageViewStatisticsImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.stats.PageViewStatisticsImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmCoreWCMRequestFilter
     *
     * .
     *
     */
    public function testComDayCqWcmCoreWCMRequestFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.core.WCMRequestFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterDesignPackageImporter
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterDesignPackageImporter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.DesignPackageImporter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterImplCanvasBuilderImpl
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterImplCanvasBuilderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasBuilderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterImplCanvasPageDeleteHandler
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterImplCanvasPageDeleteHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasPageDeleteHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterImplEntryPreprocessorImpl
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterImplEntryPreprocessorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.impl.EntryPreprocessorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterImplMobileCanvasBuilderImpl
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterImplMobileCanvasBuilderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.impl.MobileCanvasBuilderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.CanvasComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.HeadTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.IFrameTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImageComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImgTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.InlineScriptTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.LinkTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.MetaTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.NonScriptTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ParsysComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ScriptTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.StyleTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TextComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleComponentTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl
     *
     * .
     *
     */
    public function testComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleTagHandlerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationFormsImplFormChooserServlet
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationFormsImplFormChooserServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormChooserServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationFormsImplFormParagraphPostProcessor
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationFormsImplFormParagraphPostProcessor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormParagraphPostProcessor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationFormsImplFormsHandlingServlet
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationFormsImplFormsHandlingServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormsHandlingServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationFormsImplMailServlet
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationFormsImplMailServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.MailServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationImplAdaptiveImageComponentServlet
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationImplAdaptiveImageComponentServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.impl.AdaptiveImageComponentServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationImplHTTPAuthHandler
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationImplHTTPAuthHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.impl.HTTPAuthHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationImplPageImpressionsTracker
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationImplPageImpressionsTracker()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.impl.PageImpressionsTracker';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationImplPageRedirectServlet
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationImplPageRedirectServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.impl.PageRedirectServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.security.impl.DefaultAttachmentTypeBlacklistService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl
     *
     * .
     *
     */
    public function testComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.foundation.security.impl.SaferSlingPostValidatorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory
     *
     * .
     *
     */
    public function testComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.mobile.core.impl.device.DeviceInfoTransformerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMobileCoreImplRedirectRedirectFilter
     *
     * .
     *
     */
    public function testComDayCqWcmMobileCoreImplRedirectRedirectFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.mobile.core.impl.redirect.RedirectFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplActionsContentCopyActionFactory
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplActionsContentCopyActionFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentCopyActionFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplActionsContentDeleteActionFactory
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplActionsContentDeleteActionFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentDeleteActionFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplActionsContentUpdateActionFactory
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplActionsContentUpdateActionFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentUpdateActionFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplActionsOrderChildrenActionFactory
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplActionsOrderChildrenActionFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.OrderChildrenActionFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplActionsPageMoveActionFactory
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplActionsPageMoveActionFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.PageMoveActionFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplActionsReferencesUpdateActionFactory
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplActionsReferencesUpdateActionFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ReferencesUpdateActionFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplActionsVersionCopyActionFactory
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplActionsVersionCopyActionFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.VersionCopyActionFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplLiveRelationshipManagerImpl
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplLiveRelationshipManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.LiveRelationshipManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplRolloutManagerImpl
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplRolloutManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.RolloutManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmMsmImplServletsAuditLogServlet
     *
     * .
     *
     */
    public function testComDayCqWcmMsmImplServletsAuditLogServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.msm.impl.servlets.AuditLogServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmNotificationEmailImplEmailChannel
     *
     * .
     *
     */
    public function testComDayCqWcmNotificationEmailImplEmailChannel()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.notification.email.impl.EmailChannel';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmNotificationImplNotificationManagerImpl
     *
     * .
     *
     */
    public function testComDayCqWcmNotificationImplNotificationManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.notification.impl.NotificationManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmScriptingImplBVPManager
     *
     * .
     *
     */
    public function testComDayCqWcmScriptingImplBVPManager()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.scripting.impl.BVPManager';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmUndoUndoConfig
     *
     * .
     *
     */
    public function testComDayCqWcmUndoUndoConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.undo.UndoConfig';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmWebservicesupportImplReplicationEventListener
     *
     * .
     *
     */
    public function testComDayCqWcmWebservicesupportImplReplicationEventListener()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.webservicesupport.impl.ReplicationEventListener';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmWorkflowImplWcmWorkflowServiceImpl
     *
     * .
     *
     */
    public function testComDayCqWcmWorkflowImplWcmWorkflowServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.workflow.impl.WcmWorkflowServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWcmWorkflowImplWorkflowPackageInfoProvider
     *
     * .
     *
     */
    public function testComDayCqWcmWorkflowImplWorkflowPackageInfoProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.wcm.workflow.impl.WorkflowPackageInfoProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWidgetImplHtmlLibraryManagerImpl
     *
     * .
     *
     */
    public function testComDayCqWidgetImplHtmlLibraryManagerImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.widget.impl.HtmlLibraryManagerImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWidgetImplWidgetExtensionProviderImpl
     *
     * .
     *
     */
    public function testComDayCqWidgetImplWidgetExtensionProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.widget.impl.WidgetExtensionProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWorkflowImplEmailEMailNotificationService
     *
     * .
     *
     */
    public function testComDayCqWorkflowImplEmailEMailNotificationService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.workflow.impl.email.EMailNotificationService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCqWorkflowImplEmailTaskEMailNotificationService
     *
     * .
     *
     */
    public function testComDayCqWorkflowImplEmailTaskEMailNotificationService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.cq.workflow.impl.email.TaskEMailNotificationService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCrxSecurityTokenImplImplTokenAuthenticationHandler
     *
     * .
     *
     */
    public function testComDayCrxSecurityTokenImplImplTokenAuthenticationHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.crx.security.token.impl.impl.TokenAuthenticationHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for comDayCrxSecurityTokenImplTokenCleanupTask
     *
     * .
     *
     */
    public function testComDayCrxSecurityTokenImplTokenCleanupTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/com.day.crx.security.token.impl.TokenCleanupTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for guideLocalizationService
     *
     * .
     *
     */
    public function testGuideLocalizationService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/Guide Localization Service';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for messagingUserComponentFactory
     *
     * .
     *
     */
    public function testMessagingUserComponentFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/MessagingUserComponentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheAriesJmxFrameworkStateConfig
     *
     * .
     *
     */
    public function testOrgApacheAriesJmxFrameworkStateConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.aries.jmx.framework.StateConfig';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixEventadminImplEventAdmin
     *
     * .
     *
     */
    public function testOrgApacheFelixEventadminImplEventAdmin()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.eventadmin.impl.EventAdmin';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixHttp
     *
     * .
     *
     */
    public function testOrgApacheFelixHttp()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.http';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixHttpSslfilterSslFilter
     *
     * .
     *
     */
    public function testOrgApacheFelixHttpSslfilterSslFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.http.sslfilter.SslFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixJaasConfigurationFactory
     *
     * .
     *
     */
    public function testOrgApacheFelixJaasConfigurationFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.jaas.Configuration.factory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixJaasConfigurationSpi
     *
     * .
     *
     */
    public function testOrgApacheFelixJaasConfigurationSpi()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.jaas.ConfigurationSpi';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixScrScrService
     *
     * .
     *
     */
    public function testOrgApacheFelixScrScrService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.scr.ScrService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixSystemreadyImplComponentsCheck
     *
     * .
     *
     */
    public function testOrgApacheFelixSystemreadyImplComponentsCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.systemready.impl.ComponentsCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixSystemreadyImplFrameworkStartCheck
     *
     * .
     *
     */
    public function testOrgApacheFelixSystemreadyImplFrameworkStartCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.systemready.impl.FrameworkStartCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixSystemreadyImplServicesCheck
     *
     * .
     *
     */
    public function testOrgApacheFelixSystemreadyImplServicesCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.systemready.impl.ServicesCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixSystemreadyImplServletSystemAliveServlet
     *
     * .
     *
     */
    public function testOrgApacheFelixSystemreadyImplServletSystemAliveServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemAliveServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixSystemreadyImplServletSystemReadyServlet
     *
     * .
     *
     */
    public function testOrgApacheFelixSystemreadyImplServletSystemReadyServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemReadyServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixSystemreadySystemReadyMonitor
     *
     * .
     *
     */
    public function testOrgApacheFelixSystemreadySystemReadyMonitor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.systemready.SystemReadyMonitor';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixWebconsoleInternalServletOsgiManager
     *
     * .
     *
     */
    public function testOrgApacheFelixWebconsoleInternalServletOsgiManager()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.webconsole.internal.servlet.OsgiManager';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixWebconsolePluginsEventInternalPluginServlet
     *
     * .
     *
     */
    public function testOrgApacheFelixWebconsolePluginsEventInternalPluginServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.webconsole.plugins.event.internal.PluginServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo
     *
     * .
     *
     */
    public function testOrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.felix.webconsole.plugins.memoryusage.internal.MemoryUsageConfigurator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheHttpProxyconfigurator
     *
     * .
     *
     */
    public function testOrgApacheHttpProxyconfigurator()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.http.proxyconfigurator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreTextProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStore';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreServicePreset';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.secondary.SecondaryStoreCacheService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsIndexAsyncIndexerService
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsIndexAsyncIndexerService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.AsyncIndexerService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.metric.StatisticsProviderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakPluginsObservationChangeCollectorProvider
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakPluginsObservationChangeCollectorProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.plugins.observation.ChangeCollectorProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakQueryQueryEngineSettingsService
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakQueryQueryEngineSettingsService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.query.QueryEngineSettingsService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.AuthenticationConfigurationImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.security.authorization.AuthorizationConfigurationImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.security.internal.SecurityProviderRegistration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.security.user.RandomAuthorizableNodeName';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSecurityUserUserConfigurationImpl
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSecurityUserUserConfigurationImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.security.user.UserConfigurationImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.segment.azure.AzureSegmentStoreService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSegmentSegmentNodeStoreFactory
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSegmentSegmentNodeStoreFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreMonitorService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSegmentSegmentNodeStoreService
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSegmentSegmentNodeStoreService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.segment.standby.store.StandbyStoreService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.DefaultSyncHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.ExternalLoginModuleFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.principal.ExternalPrincipalConfiguration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugConfiguration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugExcludeImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitVaultPackagingImplPackagingImpl
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitVaultPackagingImplPackagingImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.vault.packaging.impl.PackagingImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry
     *
     * .
     *
     */
    public function testOrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.jackrabbit.vault.packaging.registry.impl.FSPackageRegistry';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingAuthCoreImplLogoutServlet
     *
     * .
     *
     */
    public function testOrgApacheSlingAuthCoreImplLogoutServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.auth.core.impl.LogoutServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCaconfigImplConfigurationBindingsValueProvider
     *
     * .
     *
     */
    public function testOrgApacheSlingCaconfigImplConfigurationBindingsValueProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationBindingsValueProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCaconfigImplConfigurationResolverImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingCaconfigImplConfigurationResolverImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationResolverImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra
     *
     * .
     *
     */
    public function testOrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationInheritanceStrategy';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra
     *
     * .
     *
     */
    public function testOrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationPersistenceStrategy';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi
     *
     * .
     *
     */
    public function testOrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.caconfig.impl.override.OsgiConfigurationOverrideProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve
     *
     * .
     *
     */
    public function testOrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.caconfig.impl.override.SystemPropertyConfigurationOverrideProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCaconfigManagementImplConfigurationManagementSetti
     *
     * .
     *
     */
    public function testOrgApacheSlingCaconfigManagementImplConfigurationManagementSetti()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.caconfig.management.impl.ConfigurationManagementSettingsImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour
     *
     * .
     *
     */
    public function testOrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultConfigurationResourceResolvingStrategy';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy
     *
     * .
     *
     */
    public function testOrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultContextPathStrategy';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsHtmlInternalTagsoupHtmlParser
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsHtmlInternalTagsoupHtmlParser()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.html.internal.TagsoupHtmlParser';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsLogLogManager
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsLogLogManager()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.log.LogManager';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsLogLogManagerFactoryConfig
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsLogLogManagerFactoryConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.config';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsLogLogManagerFactoryWriter
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsLogLogManagerFactoryWriter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.writer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsMetricsInternalLogReporter
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsMetricsInternalLogReporter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.metrics.internal.LogReporter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.metrics.rrd4j.impl.CodahaleMetricsReporter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsMimeInternalMimeTypeServiceImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsMimeInternalMimeTypeServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.mime.internal.MimeTypeServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsSchedulerImplQuartzScheduler
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsSchedulerImplQuartzScheduler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.scheduler.impl.QuartzScheduler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsSchedulerImplSchedulerHealthCheck
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsSchedulerImplSchedulerHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.scheduler.impl.SchedulerHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.commons.threads.impl.DefaultThreadPool.factory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDatasourceDataSourceFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingDatasourceDataSourceFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.datasource.DataSourceFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDatasourceJNDIDataSourceFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingDatasourceJNDIDataSourceFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.datasource.JNDIDataSourceFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDiscoveryOakConfig
     *
     * .
     *
     */
    public function testOrgApacheSlingDiscoveryOakConfig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.discovery.oak.Config';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck
     *
     * .
     *
     */
    public function testOrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.discovery.oak.SynchronizedClocksHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionAgentImplForwardDistributionAgentFacto
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionAgentImplForwardDistributionAgentFacto()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.agent.impl.ForwardDistributionAgentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.agent.impl.PrivilegeDistributionRequestAuthorizationStrategyFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionAgentImplQueueDistributionAgentFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionAgentImplQueueDistributionAgentFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.agent.impl.QueueDistributionAgentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionAgentImplReverseDistributionAgentFacto
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionAgentImplReverseDistributionAgentFacto()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.agent.impl.ReverseDistributionAgentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.agent.impl.SimpleDistributionAgentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionAgentImplSyncDistributionAgentFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionAgentImplSyncDistributionAgentFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.agent.impl.SyncDistributionAgentFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionMonitorDistributionQueueHealthCheck
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionMonitorDistributionQueueHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.monitor.DistributionQueueHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionPackagingImplExporterAgentDistributio
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionPackagingImplExporterAgentDistributio()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.AgentDistributionPackageExporterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionPackagingImplExporterLocalDistributio
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionPackagingImplExporterLocalDistributio()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.LocalDistributionPackageExporterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionPackagingImplExporterRemoteDistributi
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionPackagingImplExporterRemoteDistributi()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.RemoteDistributionPackageExporterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionPackagingImplImporterLocalDistributio
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionPackagingImplImporterLocalDistributio()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.LocalDistributionPackageImporterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionPackagingImplImporterRemoteDistributi
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionPackagingImplImporterRemoteDistributi()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RemoteDistributionPackageImporterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionPackagingImplImporterRepositoryDistri
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionPackagingImplImporterRepositoryDistri()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RepositoryDistributionPackageImporterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionResourcesImplDistributionConfiguration
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionResourcesImplDistributionConfiguration()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionConfigurationResourceProviderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionResourcesImplDistributionServiceResour
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionResourcesImplDistributionServiceResour()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionServiceResourceProviderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionSerializationImplDistributionPackageBu
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionSerializationImplDistributionPackageBu()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.serialization.impl.DistributionPackageBuilderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionSerializationImplVltVaultDistribution
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionSerializationImplVltVaultDistribution()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.serialization.impl.vlt.VaultDistributionPackageBuilderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionTransportImplUserCredentialsDistributi
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionTransportImplUserCredentialsDistributi()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.transport.impl.UserCredentialsDistributionTransportSecretProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionTriggerImplDistributionEventDistribute
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionTriggerImplDistributionEventDistribute()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.trigger.impl.DistributionEventDistributeDistributionTriggerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.trigger.impl.JcrEventDistributionTriggerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.trigger.impl.PersistedJcrEventDistributionTriggerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.trigger.impl.RemoteEventDistributionTriggerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionTriggerImplResourceEventDistributionTr
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionTriggerImplResourceEventDistributionTr()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.trigger.impl.ResourceEventDistributionTriggerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingDistributionTriggerImplScheduledDistributionTrigge
     *
     * .
     *
     */
    public function testOrgApacheSlingDistributionTriggerImplScheduledDistributionTrigge()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.distribution.trigger.impl.ScheduledDistributionTriggerFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEngineImplAuthSlingAuthenticator
     *
     * .
     *
     */
    public function testOrgApacheSlingEngineImplAuthSlingAuthenticator()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.engine.impl.auth.SlingAuthenticator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter
     *
     * .
     *
     */
    public function testOrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.engine.impl.debug.RequestProgressTrackerLogFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEngineImplLogRequestLogger
     *
     * .
     *
     */
    public function testOrgApacheSlingEngineImplLogRequestLogger()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.engine.impl.log.RequestLogger';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEngineImplLogRequestLoggerService
     *
     * .
     *
     */
    public function testOrgApacheSlingEngineImplLogRequestLoggerService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.engine.impl.log.RequestLoggerService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEngineImplSlingMainServlet
     *
     * .
     *
     */
    public function testOrgApacheSlingEngineImplSlingMainServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.engine.impl.SlingMainServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEngineParameters
     *
     * .
     *
     */
    public function testOrgApacheSlingEngineParameters()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.engine.parameters';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEventImplEventingThreadPool
     *
     * .
     *
     */
    public function testOrgApacheSlingEventImplEventingThreadPool()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.event.impl.EventingThreadPool';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEventImplJobsDefaultJobManager
     *
     * .
     *
     */
    public function testOrgApacheSlingEventImplJobsDefaultJobManager()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.event.impl.jobs.DefaultJobManager';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEventImplJobsJcrPersistenceHandler
     *
     * .
     *
     */
    public function testOrgApacheSlingEventImplJobsJcrPersistenceHandler()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.event.impl.jobs.jcr.PersistenceHandler';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEventImplJobsJobConsumerManager
     *
     * .
     *
     */
    public function testOrgApacheSlingEventImplJobsJobConsumerManager()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.event.impl.jobs.JobConsumerManager';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingEventJobsQueueConfiguration
     *
     * .
     *
     */
    public function testOrgApacheSlingEventJobsQueueConfiguration()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.event.jobs.QueueConfiguration';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW
     *
     * .
     *
     */
    public function testOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.extensions.webconsolesecurityprovider.internal.SlingWebConsoleSecurityProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingFeatureflagsFeature
     *
     * .
     *
     */
    public function testOrgApacheSlingFeatureflagsFeature()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.featureflags.Feature';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingFeatureflagsImplConfiguredFeature
     *
     * .
     *
     */
    public function testOrgApacheSlingFeatureflagsImplConfiguredFeature()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.featureflags.impl.ConfiguredFeature';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingHapiImplHApiUtilImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingHapiImplHApiUtilImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.hapi.impl.HApiUtilImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingHcCoreImplCompositeHealthCheck
     *
     * .
     *
     */
    public function testOrgApacheSlingHcCoreImplCompositeHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.hc.core.impl.CompositeHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.hc.core.impl.executor.HealthCheckExecutorImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingHcCoreImplJmxAttributeHealthCheck
     *
     * .
     *
     */
    public function testOrgApacheSlingHcCoreImplJmxAttributeHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.hc.core.impl.JmxAttributeHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingHcCoreImplScriptableHealthCheck
     *
     * .
     *
     */
    public function testOrgApacheSlingHcCoreImplScriptableHealthCheck()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.hc.core.impl.ScriptableHealthCheck';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingHcCoreImplServletHealthCheckExecutorServlet
     *
     * .
     *
     */
    public function testOrgApacheSlingHcCoreImplServletHealthCheckExecutorServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.hc.core.impl.servlet.HealthCheckExecutorServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingHcCoreImplServletResultTxtVerboseSerializer
     *
     * .
     *
     */
    public function testOrgApacheSlingHcCoreImplServletResultTxtVerboseSerializer()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.hc.core.impl.servlet.ResultTxtVerboseSerializer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingI18nImplI18NFilter
     *
     * .
     *
     */
    public function testOrgApacheSlingI18nImplI18NFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.i18n.impl.I18NFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingI18nImplJcrResourceBundleProvider
     *
     * .
     *
     */
    public function testOrgApacheSlingI18nImplJcrResourceBundleProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.i18n.impl.JcrResourceBundleProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingInstallerProviderJcrImplJcrInstaller
     *
     * .
     *
     */
    public function testOrgApacheSlingInstallerProviderJcrImplJcrInstaller()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.installer.provider.jcr.impl.JcrInstaller';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrBaseInternalLoginAdminWhitelist
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrBaseInternalLoginAdminWhitelist()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist.fragment';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrDavexImplServletsSlingDavExServlet
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrDavexImplServletsSlingDavExServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrJackrabbitServerJndiRegistrationSupport
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrJackrabbitServerJndiRegistrationSupport()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.JndiRegistrationSupport';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrJackrabbitServerRmiRegistrationSupport
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrJackrabbitServerRmiRegistrationSupport()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.RmiRegistrationSupport';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrRepoinitImplRepositoryInitializer
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrRepoinitImplRepositoryInitializer()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.repoinit.impl.RepositoryInitializer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrRepoinitRepositoryInitializer
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrRepoinitRepositoryInitializer()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.repoinit.RepositoryInitializer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrResourceResolverFactoryImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrResourceInternalJcrSystemUserValidator
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrResourceInternalJcrSystemUserValidator()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrSystemUserValidator';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.resourcesecurity.impl.ResourceAccessGateFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrWebdavImplHandlerDefaultHandlerService
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrWebdavImplHandlerDefaultHandlerService()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DefaultHandlerService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DirListingExportHandlerService';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet
     *
     * .
     *
     */
    public function testOrgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jcr.webdav.impl.servlets.SimpleWebDavServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingJmxProviderImplJMXResourceProvider
     *
     * .
     *
     */
    public function testOrgApacheSlingJmxProviderImplJMXResourceProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.jmx.provider.impl.JMXResourceProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingModelsImplModelAdapterFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingModelsImplModelAdapterFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.models.impl.ModelAdapterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingModelsJacksonexporterImplResourceModuleProvider
     *
     * .
     *
     */
    public function testOrgApacheSlingModelsJacksonexporterImplResourceModuleProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.models.jacksonexporter.impl.ResourceModuleProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto
     *
     * .
     *
     */
    public function testOrgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.resource.inventory.impl.ResourceInventoryPrinterFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingResourcemergerImplMergedResourceProviderFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingResourcemergerImplMergedResourceProviderFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.resourcemerger.impl.MergedResourceProviderFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingResourcemergerPickerOverriding
     *
     * .
     *
     */
    public function testOrgApacheSlingResourcemergerPickerOverriding()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.resourcemerger.picker.overriding';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingScriptingCoreImplScriptCacheImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingScriptingCoreImplScriptCacheImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptCacheImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingScriptingCoreImplScriptingResourceResolverProvider
     *
     * .
     *
     */
    public function testOrgApacheSlingScriptingCoreImplScriptingResourceResolverProvider()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptingResourceResolverProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingScriptingJavaImplJavaScriptEngineFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingScriptingJavaImplJavaScriptEngineFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.scripting.java.impl.JavaScriptEngineFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa
     *
     * .
     *
     */
    public function testOrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.scripting.javascript.internal.RhinoJavaScriptEngineFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingScriptingJspJspScriptEngineFactory
     *
     * .
     *
     */
    public function testOrgApacheSlingScriptingJspJspScriptEngineFactory()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.scripting.jsp.JspScriptEngineFactory';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv
     *
     * .
     *
     */
    public function testOrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.scripting.sightly.js.impl.jsapi.SlyBindingsValuesProvider';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingSecurityImplContentDispositionFilter
     *
     * .
     *
     */
    public function testOrgApacheSlingSecurityImplContentDispositionFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.security.impl.ContentDispositionFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingSecurityImplReferrerFilter
     *
     * .
     *
     */
    public function testOrgApacheSlingSecurityImplReferrerFilter()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.security.impl.ReferrerFilter';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingServiceusermappingImplServiceUserMapperImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingServiceusermappingImplServiceUserMapperImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingServiceusermappingImplServiceUserMapperImplAmended
     *
     * .
     *
     */
    public function testOrgApacheSlingServiceusermappingImplServiceUserMapperImplAmended()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingServletsGetDefaultGetServlet
     *
     * .
     *
     */
    public function testOrgApacheSlingServletsGetDefaultGetServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.servlets.get.DefaultGetServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingServletsGetImplVersionVersionInfoServlet
     *
     * .
     *
     */
    public function testOrgApacheSlingServletsGetImplVersionVersionInfoServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.servlets.get.impl.version.VersionInfoServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingServletsPostImplHelperChunkCleanUpTask
     *
     * .
     *
     */
    public function testOrgApacheSlingServletsPostImplHelperChunkCleanUpTask()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.servlets.post.impl.helper.ChunkCleanUpTask';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingServletsPostImplSlingPostServlet
     *
     * .
     *
     */
    public function testOrgApacheSlingServletsPostImplSlingPostServlet()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.servlets.post.impl.SlingPostServlet';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingServletsResolverSlingServletResolver
     *
     * .
     *
     */
    public function testOrgApacheSlingServletsResolverSlingServletResolver()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.servlets.resolver.SlingServletResolver';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingSettingsImplSlingSettingsServiceImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingSettingsImplSlingSettingsServiceImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.settings.impl.SlingSettingsServiceImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingStartupfilterImplStartupFilterImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingStartupfilterImplStartupFilterImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.startupfilter.impl.StartupFilterImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingTenantInternalTenantProviderImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingTenantInternalTenantProviderImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.tenant.internal.TenantProviderImpl';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingTracerInternalLogTracer
     *
     * .
     *
     */
    public function testOrgApacheSlingTracerInternalLogTracer()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.tracer.internal.LogTracer';

        $crawler = $client->request('POST', $path);
    }

    /**
     * Test case for orgApacheSlingXssImplXSSFilterImpl
     *
     * .
     *
     */
    public function testOrgApacheSlingXssImplXSSFilterImpl()
    {
        $client = static::createClient();

        $path = '/system/console/configMgr/org.apache.sling.xss.impl.XSSFilterImpl';

        $crawler = $client->request('POST', $path);
    }

    protected function genTestData($regexp)
    {
        $grammar  = new \Hoa\File\Read('hoa://Library/Regex/Grammar.pp');
        $compiler = \Hoa\Compiler\Llk\Llk::load($grammar);
        $ast      = $compiler->parse($regexp);
        $generator = new \Hoa\Regex\Visitor\Isotropic(new \Hoa\Math\Sampler\Random());

        return $generator->visit($ast); 
    }
}
