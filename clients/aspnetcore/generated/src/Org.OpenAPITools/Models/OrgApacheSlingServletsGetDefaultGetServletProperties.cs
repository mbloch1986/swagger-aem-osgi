/*
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class OrgApacheSlingServletsGetDefaultGetServletProperties : IEquatable<OrgApacheSlingServletsGetDefaultGetServletProperties>
    { 
        /// <summary>
        /// Gets or Sets Aliases
        /// </summary>
        [DataMember(Name="aliases")]
        public ConfigNodePropertyArray Aliases { get; set; }

        /// <summary>
        /// Gets or Sets Index
        /// </summary>
        [DataMember(Name="index")]
        public ConfigNodePropertyBoolean Index { get; set; }

        /// <summary>
        /// Gets or Sets IndexFiles
        /// </summary>
        [DataMember(Name="index.files")]
        public ConfigNodePropertyArray IndexFiles { get; set; }

        /// <summary>
        /// Gets or Sets EnableHtml
        /// </summary>
        [DataMember(Name="enable.html")]
        public ConfigNodePropertyBoolean EnableHtml { get; set; }

        /// <summary>
        /// Gets or Sets EnableJson
        /// </summary>
        [DataMember(Name="enable.json")]
        public ConfigNodePropertyBoolean EnableJson { get; set; }

        /// <summary>
        /// Gets or Sets EnableTxt
        /// </summary>
        [DataMember(Name="enable.txt")]
        public ConfigNodePropertyBoolean EnableTxt { get; set; }

        /// <summary>
        /// Gets or Sets EnableXml
        /// </summary>
        [DataMember(Name="enable.xml")]
        public ConfigNodePropertyBoolean EnableXml { get; set; }

        /// <summary>
        /// Gets or Sets JsonMaximumresults
        /// </summary>
        [DataMember(Name="json.maximumresults")]
        public ConfigNodePropertyInteger JsonMaximumresults { get; set; }

        /// <summary>
        /// Gets or Sets EcmaSuport
        /// </summary>
        [DataMember(Name="ecmaSuport")]
        public ConfigNodePropertyBoolean EcmaSuport { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrgApacheSlingServletsGetDefaultGetServletProperties {\n");
            sb.Append("  Aliases: ").Append(Aliases).Append("\n");
            sb.Append("  Index: ").Append(Index).Append("\n");
            sb.Append("  IndexFiles: ").Append(IndexFiles).Append("\n");
            sb.Append("  EnableHtml: ").Append(EnableHtml).Append("\n");
            sb.Append("  EnableJson: ").Append(EnableJson).Append("\n");
            sb.Append("  EnableTxt: ").Append(EnableTxt).Append("\n");
            sb.Append("  EnableXml: ").Append(EnableXml).Append("\n");
            sb.Append("  JsonMaximumresults: ").Append(JsonMaximumresults).Append("\n");
            sb.Append("  EcmaSuport: ").Append(EcmaSuport).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((OrgApacheSlingServletsGetDefaultGetServletProperties)obj);
        }

        /// <summary>
        /// Returns true if OrgApacheSlingServletsGetDefaultGetServletProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of OrgApacheSlingServletsGetDefaultGetServletProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrgApacheSlingServletsGetDefaultGetServletProperties other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Aliases == other.Aliases ||
                    Aliases != null &&
                    Aliases.Equals(other.Aliases)
                ) && 
                (
                    Index == other.Index ||
                    Index != null &&
                    Index.Equals(other.Index)
                ) && 
                (
                    IndexFiles == other.IndexFiles ||
                    IndexFiles != null &&
                    IndexFiles.Equals(other.IndexFiles)
                ) && 
                (
                    EnableHtml == other.EnableHtml ||
                    EnableHtml != null &&
                    EnableHtml.Equals(other.EnableHtml)
                ) && 
                (
                    EnableJson == other.EnableJson ||
                    EnableJson != null &&
                    EnableJson.Equals(other.EnableJson)
                ) && 
                (
                    EnableTxt == other.EnableTxt ||
                    EnableTxt != null &&
                    EnableTxt.Equals(other.EnableTxt)
                ) && 
                (
                    EnableXml == other.EnableXml ||
                    EnableXml != null &&
                    EnableXml.Equals(other.EnableXml)
                ) && 
                (
                    JsonMaximumresults == other.JsonMaximumresults ||
                    JsonMaximumresults != null &&
                    JsonMaximumresults.Equals(other.JsonMaximumresults)
                ) && 
                (
                    EcmaSuport == other.EcmaSuport ||
                    EcmaSuport != null &&
                    EcmaSuport.Equals(other.EcmaSuport)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Aliases != null)
                    hashCode = hashCode * 59 + Aliases.GetHashCode();
                    if (Index != null)
                    hashCode = hashCode * 59 + Index.GetHashCode();
                    if (IndexFiles != null)
                    hashCode = hashCode * 59 + IndexFiles.GetHashCode();
                    if (EnableHtml != null)
                    hashCode = hashCode * 59 + EnableHtml.GetHashCode();
                    if (EnableJson != null)
                    hashCode = hashCode * 59 + EnableJson.GetHashCode();
                    if (EnableTxt != null)
                    hashCode = hashCode * 59 + EnableTxt.GetHashCode();
                    if (EnableXml != null)
                    hashCode = hashCode * 59 + EnableXml.GetHashCode();
                    if (JsonMaximumresults != null)
                    hashCode = hashCode * 59 + JsonMaximumresults.GetHashCode();
                    if (EcmaSuport != null)
                    hashCode = hashCode * 59 + EcmaSuport.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(OrgApacheSlingServletsGetDefaultGetServletProperties left, OrgApacheSlingServletsGetDefaultGetServletProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(OrgApacheSlingServletsGetDefaultGetServletProperties left, OrgApacheSlingServletsGetDefaultGetServletProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
