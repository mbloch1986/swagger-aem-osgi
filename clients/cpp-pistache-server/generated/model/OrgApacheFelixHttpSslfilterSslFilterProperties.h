/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheFelixHttpSslfilterSslFilterProperties.h
 *
 * 
 */

#ifndef OrgApacheFelixHttpSslfilterSslFilterProperties_H_
#define OrgApacheFelixHttpSslfilterSslFilterProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheFelixHttpSslfilterSslFilterProperties
    : public ModelBase
{
public:
    OrgApacheFelixHttpSslfilterSslFilterProperties();
    virtual ~OrgApacheFelixHttpSslfilterSslFilterProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheFelixHttpSslfilterSslFilterProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSslForwardHeader() const;
    void setSslForwardHeader(ConfigNodePropertyString const& value);
    bool sslForwardHeaderIsSet() const;
    void unsetSsl_forward_header();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSslForwardValue() const;
    void setSslForwardValue(ConfigNodePropertyString const& value);
    bool sslForwardValueIsSet() const;
    void unsetSsl_forward_value();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSslForwardCertHeader() const;
    void setSslForwardCertHeader(ConfigNodePropertyString const& value);
    bool sslForwardCertHeaderIsSet() const;
    void unsetSsl_forward_cert_header();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getRewriteAbsoluteUrls() const;
    void setRewriteAbsoluteUrls(ConfigNodePropertyBoolean const& value);
    bool rewriteAbsoluteUrlsIsSet() const;
    void unsetRewrite_absolute_urls();

protected:
    ConfigNodePropertyString m_Ssl_forward_header;
    bool m_Ssl_forward_headerIsSet;
    ConfigNodePropertyString m_Ssl_forward_value;
    bool m_Ssl_forward_valueIsSet;
    ConfigNodePropertyString m_Ssl_forward_cert_header;
    bool m_Ssl_forward_cert_headerIsSet;
    ConfigNodePropertyBoolean m_Rewrite_absolute_urls;
    bool m_Rewrite_absolute_urlsIsSet;
};

}
}
}
}

#endif /* OrgApacheFelixHttpSslfilterSslFilterProperties_H_ */
