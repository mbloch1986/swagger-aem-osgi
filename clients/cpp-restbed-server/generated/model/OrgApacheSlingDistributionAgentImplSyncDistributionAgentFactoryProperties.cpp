/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties()
{
    
}

OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::~OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties()
{
}

std::string OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getName() const
{
    return m_Name;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Name = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getTitle() const
{
    return m_Title;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setTitle(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Title = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getDetails() const
{
    return m_Details;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setDetails(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Details = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getEnabled() const
{
    return m_Enabled;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Enabled = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getServiceName() const
{
    return m_ServiceName;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setServiceName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_ServiceName = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getLogLevel() const
{
    return m_Log_level;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setLogLevel(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Log_level = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getQueueProcessingEnabled() const
{
    return m_Queue_processing_enabled;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setQueueProcessingEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Queue_processing_enabled = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getPassiveQueues() const
{
    return m_PassiveQueues;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setPassiveQueues(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_PassiveQueues = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getPackageExporterEndpoints() const
{
    return m_PackageExporter_endpoints;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setPackageExporterEndpoints(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_PackageExporter_endpoints = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getPackageImporterEndpoints() const
{
    return m_PackageImporter_endpoints;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setPackageImporterEndpoints(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_PackageImporter_endpoints = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getRetryStrategy() const
{
    return m_Retry_strategy;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setRetryStrategy(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Retry_strategy = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getRetryAttempts() const
{
    return m_Retry_attempts;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setRetryAttempts(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Retry_attempts = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getPullItems() const
{
    return m_Pull_items;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setPullItems(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Pull_items = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getHttpConnTimeout() const
{
    return m_Http_conn_timeout;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setHttpConnTimeout(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Http_conn_timeout = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getRequestAuthorizationStrategyTarget() const
{
    return m_RequestAuthorizationStrategy_target;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setRequestAuthorizationStrategyTarget(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_RequestAuthorizationStrategy_target = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getTransportSecretProviderTarget() const
{
    return m_TransportSecretProvider_target;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setTransportSecretProviderTarget(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_TransportSecretProvider_target = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getPackageBuilderTarget() const
{
    return m_PackageBuilder_target;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setPackageBuilderTarget(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_PackageBuilder_target = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::getTriggersTarget() const
{
    return m_Triggers_target;
}
void OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties::setTriggersTarget(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Triggers_target = value;
}

}
}
}
}

