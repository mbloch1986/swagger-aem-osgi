/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqDamCoreImplDamEventRecorderImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqDamCoreImplDamEventRecorderImplProperties_H_
#define OAIComDayCqDamCoreImplDamEventRecorderImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqDamCoreImplDamEventRecorderImplProperties: public OAIObject {
public:
    OAIComDayCqDamCoreImplDamEventRecorderImplProperties();
    OAIComDayCqDamCoreImplDamEventRecorderImplProperties(QString json);
    ~OAIComDayCqDamCoreImplDamEventRecorderImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqDamCoreImplDamEventRecorderImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getEventFilter();
    void setEventFilter(OAIConfigNodePropertyString* event_filter);

    OAIConfigNodePropertyInteger* getEventQueueLength();
    void setEventQueueLength(OAIConfigNodePropertyInteger* event_queue_length);

    OAIConfigNodePropertyBoolean* getEventrecorderEnabled();
    void setEventrecorderEnabled(OAIConfigNodePropertyBoolean* eventrecorder_enabled);

    OAIConfigNodePropertyArray* getEventrecorderBlacklist();
    void setEventrecorderBlacklist(OAIConfigNodePropertyArray* eventrecorder_blacklist);

    OAIConfigNodePropertyDropDown* getEventrecorderEventtypes();
    void setEventrecorderEventtypes(OAIConfigNodePropertyDropDown* eventrecorder_eventtypes);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* event_filter;
    bool m_event_filter_isSet;

    OAIConfigNodePropertyInteger* event_queue_length;
    bool m_event_queue_length_isSet;

    OAIConfigNodePropertyBoolean* eventrecorder_enabled;
    bool m_eventrecorder_enabled_isSet;

    OAIConfigNodePropertyArray* eventrecorder_blacklist;
    bool m_eventrecorder_blacklist_isSet;

    OAIConfigNodePropertyDropDown* eventrecorder_eventtypes;
    bool m_eventrecorder_eventtypes_isSet;

};

}

#endif /* OAIComDayCqDamCoreImplDamEventRecorderImplProperties_H_ */
