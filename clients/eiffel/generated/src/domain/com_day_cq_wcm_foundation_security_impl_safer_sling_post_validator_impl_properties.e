note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_WCM_FOUNDATION_SECURITY_IMPL_SAFER_SLING_POST_VALIDATOR_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    parameter_whitelist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    parameter_whitelist_prefixes: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    binary_parameter_whitelist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    modifier_whitelist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    operation_whitelist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    operation_whitelist_prefixes: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    typehint_whitelist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    resourcetype_whitelist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      

feature -- Change Element  
 
    set_parameter_whitelist (a_name: like parameter_whitelist)
        -- Set 'parameter_whitelist' with 'a_name'.
      do
        parameter_whitelist := a_name
      ensure
        parameter_whitelist_set: parameter_whitelist = a_name		
      end

    set_parameter_whitelist_prefixes (a_name: like parameter_whitelist_prefixes)
        -- Set 'parameter_whitelist_prefixes' with 'a_name'.
      do
        parameter_whitelist_prefixes := a_name
      ensure
        parameter_whitelist_prefixes_set: parameter_whitelist_prefixes = a_name		
      end

    set_binary_parameter_whitelist (a_name: like binary_parameter_whitelist)
        -- Set 'binary_parameter_whitelist' with 'a_name'.
      do
        binary_parameter_whitelist := a_name
      ensure
        binary_parameter_whitelist_set: binary_parameter_whitelist = a_name		
      end

    set_modifier_whitelist (a_name: like modifier_whitelist)
        -- Set 'modifier_whitelist' with 'a_name'.
      do
        modifier_whitelist := a_name
      ensure
        modifier_whitelist_set: modifier_whitelist = a_name		
      end

    set_operation_whitelist (a_name: like operation_whitelist)
        -- Set 'operation_whitelist' with 'a_name'.
      do
        operation_whitelist := a_name
      ensure
        operation_whitelist_set: operation_whitelist = a_name		
      end

    set_operation_whitelist_prefixes (a_name: like operation_whitelist_prefixes)
        -- Set 'operation_whitelist_prefixes' with 'a_name'.
      do
        operation_whitelist_prefixes := a_name
      ensure
        operation_whitelist_prefixes_set: operation_whitelist_prefixes = a_name		
      end

    set_typehint_whitelist (a_name: like typehint_whitelist)
        -- Set 'typehint_whitelist' with 'a_name'.
      do
        typehint_whitelist := a_name
      ensure
        typehint_whitelist_set: typehint_whitelist = a_name		
      end

    set_resourcetype_whitelist (a_name: like resourcetype_whitelist)
        -- Set 'resourcetype_whitelist' with 'a_name'.
      do
        resourcetype_whitelist := a_name
      ensure
        resourcetype_whitelist_set: resourcetype_whitelist = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_WCM_FOUNDATION_SECURITY_IMPL_SAFER_SLING_POST_VALIDATOR_IMPL_PROPERTIES%N")
        if attached parameter_whitelist as l_parameter_whitelist then
          Result.append ("%Nparameter_whitelist:")
          Result.append (l_parameter_whitelist.out)
          Result.append ("%N")    
        end  
        if attached parameter_whitelist_prefixes as l_parameter_whitelist_prefixes then
          Result.append ("%Nparameter_whitelist_prefixes:")
          Result.append (l_parameter_whitelist_prefixes.out)
          Result.append ("%N")    
        end  
        if attached binary_parameter_whitelist as l_binary_parameter_whitelist then
          Result.append ("%Nbinary_parameter_whitelist:")
          Result.append (l_binary_parameter_whitelist.out)
          Result.append ("%N")    
        end  
        if attached modifier_whitelist as l_modifier_whitelist then
          Result.append ("%Nmodifier_whitelist:")
          Result.append (l_modifier_whitelist.out)
          Result.append ("%N")    
        end  
        if attached operation_whitelist as l_operation_whitelist then
          Result.append ("%Noperation_whitelist:")
          Result.append (l_operation_whitelist.out)
          Result.append ("%N")    
        end  
        if attached operation_whitelist_prefixes as l_operation_whitelist_prefixes then
          Result.append ("%Noperation_whitelist_prefixes:")
          Result.append (l_operation_whitelist_prefixes.out)
          Result.append ("%N")    
        end  
        if attached typehint_whitelist as l_typehint_whitelist then
          Result.append ("%Ntypehint_whitelist:")
          Result.append (l_typehint_whitelist.out)
          Result.append ("%N")    
        end  
        if attached resourcetype_whitelist as l_resourcetype_whitelist then
          Result.append ("%Nresourcetype_whitelist:")
          Result.append (l_resourcetype_whitelist.out)
          Result.append ("%N")    
        end  
      end
end


