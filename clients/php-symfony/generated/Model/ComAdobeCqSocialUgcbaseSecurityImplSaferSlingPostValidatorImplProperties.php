<?php
/**
 * ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("parameter.whitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $parameterWhitelist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("parameter.whitelist.prefixes")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $parameterWhitelistPrefixes;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("binary.parameter.whitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $binaryParameterWhitelist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("modifier.whitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $modifierWhitelist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("operation.whitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $operationWhitelist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("operation.whitelist.prefixes")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $operationWhitelistPrefixes;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("typehint.whitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $typehintWhitelist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("resourcetype.whitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $resourcetypeWhitelist;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->parameterWhitelist = isset($data['parameterWhitelist']) ? $data['parameterWhitelist'] : null;
        $this->parameterWhitelistPrefixes = isset($data['parameterWhitelistPrefixes']) ? $data['parameterWhitelistPrefixes'] : null;
        $this->binaryParameterWhitelist = isset($data['binaryParameterWhitelist']) ? $data['binaryParameterWhitelist'] : null;
        $this->modifierWhitelist = isset($data['modifierWhitelist']) ? $data['modifierWhitelist'] : null;
        $this->operationWhitelist = isset($data['operationWhitelist']) ? $data['operationWhitelist'] : null;
        $this->operationWhitelistPrefixes = isset($data['operationWhitelistPrefixes']) ? $data['operationWhitelistPrefixes'] : null;
        $this->typehintWhitelist = isset($data['typehintWhitelist']) ? $data['typehintWhitelist'] : null;
        $this->resourcetypeWhitelist = isset($data['resourcetypeWhitelist']) ? $data['resourcetypeWhitelist'] : null;
    }

    /**
     * Gets parameterWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getParameterWhitelist()
    {
        return $this->parameterWhitelist;
    }

    /**
     * Sets parameterWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $parameterWhitelist
     *
     * @return $this
     */
    public function setParameterWhitelist(ConfigNodePropertyArray $parameterWhitelist = null)
    {
        $this->parameterWhitelist = $parameterWhitelist;

        return $this;
    }

    /**
     * Gets parameterWhitelistPrefixes.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getParameterWhitelistPrefixes()
    {
        return $this->parameterWhitelistPrefixes;
    }

    /**
     * Sets parameterWhitelistPrefixes.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $parameterWhitelistPrefixes
     *
     * @return $this
     */
    public function setParameterWhitelistPrefixes(ConfigNodePropertyArray $parameterWhitelistPrefixes = null)
    {
        $this->parameterWhitelistPrefixes = $parameterWhitelistPrefixes;

        return $this;
    }

    /**
     * Gets binaryParameterWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getBinaryParameterWhitelist()
    {
        return $this->binaryParameterWhitelist;
    }

    /**
     * Sets binaryParameterWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $binaryParameterWhitelist
     *
     * @return $this
     */
    public function setBinaryParameterWhitelist(ConfigNodePropertyArray $binaryParameterWhitelist = null)
    {
        $this->binaryParameterWhitelist = $binaryParameterWhitelist;

        return $this;
    }

    /**
     * Gets modifierWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getModifierWhitelist()
    {
        return $this->modifierWhitelist;
    }

    /**
     * Sets modifierWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $modifierWhitelist
     *
     * @return $this
     */
    public function setModifierWhitelist(ConfigNodePropertyArray $modifierWhitelist = null)
    {
        $this->modifierWhitelist = $modifierWhitelist;

        return $this;
    }

    /**
     * Gets operationWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getOperationWhitelist()
    {
        return $this->operationWhitelist;
    }

    /**
     * Sets operationWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $operationWhitelist
     *
     * @return $this
     */
    public function setOperationWhitelist(ConfigNodePropertyArray $operationWhitelist = null)
    {
        $this->operationWhitelist = $operationWhitelist;

        return $this;
    }

    /**
     * Gets operationWhitelistPrefixes.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getOperationWhitelistPrefixes()
    {
        return $this->operationWhitelistPrefixes;
    }

    /**
     * Sets operationWhitelistPrefixes.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $operationWhitelistPrefixes
     *
     * @return $this
     */
    public function setOperationWhitelistPrefixes(ConfigNodePropertyArray $operationWhitelistPrefixes = null)
    {
        $this->operationWhitelistPrefixes = $operationWhitelistPrefixes;

        return $this;
    }

    /**
     * Gets typehintWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getTypehintWhitelist()
    {
        return $this->typehintWhitelist;
    }

    /**
     * Sets typehintWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $typehintWhitelist
     *
     * @return $this
     */
    public function setTypehintWhitelist(ConfigNodePropertyArray $typehintWhitelist = null)
    {
        $this->typehintWhitelist = $typehintWhitelist;

        return $this;
    }

    /**
     * Gets resourcetypeWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getResourcetypeWhitelist()
    {
        return $this->resourcetypeWhitelist;
    }

    /**
     * Sets resourcetypeWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $resourcetypeWhitelist
     *
     * @return $this
     */
    public function setResourcetypeWhitelist(ConfigNodePropertyArray $resourcetypeWhitelist = null)
    {
        $this->resourcetypeWhitelist = $resourcetypeWhitelist;

        return $this;
    }
}


