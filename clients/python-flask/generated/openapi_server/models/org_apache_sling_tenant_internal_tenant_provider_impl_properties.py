# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingTenantInternalTenantProviderImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tenant_root: ConfigNodePropertyString=None, tenant_path_matcher: ConfigNodePropertyArray=None):  # noqa: E501
        """OrgApacheSlingTenantInternalTenantProviderImplProperties - a model defined in OpenAPI

        :param tenant_root: The tenant_root of this OrgApacheSlingTenantInternalTenantProviderImplProperties.  # noqa: E501
        :type tenant_root: ConfigNodePropertyString
        :param tenant_path_matcher: The tenant_path_matcher of this OrgApacheSlingTenantInternalTenantProviderImplProperties.  # noqa: E501
        :type tenant_path_matcher: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'tenant_root': ConfigNodePropertyString,
            'tenant_path_matcher': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'tenant_root': 'tenant.root',
            'tenant_path_matcher': 'tenant.path.matcher'
        }

        self._tenant_root = tenant_root
        self._tenant_path_matcher = tenant_path_matcher

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingTenantInternalTenantProviderImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingTenantInternalTenantProviderImplProperties of this OrgApacheSlingTenantInternalTenantProviderImplProperties.  # noqa: E501
        :rtype: OrgApacheSlingTenantInternalTenantProviderImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tenant_root(self) -> ConfigNodePropertyString:
        """Gets the tenant_root of this OrgApacheSlingTenantInternalTenantProviderImplProperties.


        :return: The tenant_root of this OrgApacheSlingTenantInternalTenantProviderImplProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._tenant_root

    @tenant_root.setter
    def tenant_root(self, tenant_root: ConfigNodePropertyString):
        """Sets the tenant_root of this OrgApacheSlingTenantInternalTenantProviderImplProperties.


        :param tenant_root: The tenant_root of this OrgApacheSlingTenantInternalTenantProviderImplProperties.
        :type tenant_root: ConfigNodePropertyString
        """

        self._tenant_root = tenant_root

    @property
    def tenant_path_matcher(self) -> ConfigNodePropertyArray:
        """Gets the tenant_path_matcher of this OrgApacheSlingTenantInternalTenantProviderImplProperties.


        :return: The tenant_path_matcher of this OrgApacheSlingTenantInternalTenantProviderImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._tenant_path_matcher

    @tenant_path_matcher.setter
    def tenant_path_matcher(self, tenant_path_matcher: ConfigNodePropertyArray):
        """Sets the tenant_path_matcher of this OrgApacheSlingTenantInternalTenantProviderImplProperties.


        :param tenant_path_matcher: The tenant_path_matcher of this OrgApacheSlingTenantInternalTenantProviderImplProperties.
        :type tenant_path_matcher: ConfigNodePropertyArray
        """

        self._tenant_path_matcher = tenant_path_matcher
