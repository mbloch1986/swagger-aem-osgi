/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteCorsImplCORSPolicyImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteCorsImplCORSPolicyImplProperties::ComAdobeGraniteCorsImplCORSPolicyImplProperties()
{
    m_AlloworiginIsSet = false;
    m_AlloworiginregexpIsSet = false;
    m_AllowedpathsIsSet = false;
    m_ExposedheadersIsSet = false;
    m_MaxageIsSet = false;
    m_SupportedheadersIsSet = false;
    m_SupportedmethodsIsSet = false;
    m_SupportscredentialsIsSet = false;
    
}

ComAdobeGraniteCorsImplCORSPolicyImplProperties::~ComAdobeGraniteCorsImplCORSPolicyImplProperties()
{
}

void ComAdobeGraniteCorsImplCORSPolicyImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteCorsImplCORSPolicyImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_AlloworiginIsSet)
    {
        val["alloworigin"] = ModelBase::toJson(m_Alloworigin);
    }
    if(m_AlloworiginregexpIsSet)
    {
        val["alloworiginregexp"] = ModelBase::toJson(m_Alloworiginregexp);
    }
    if(m_AllowedpathsIsSet)
    {
        val["allowedpaths"] = ModelBase::toJson(m_Allowedpaths);
    }
    if(m_ExposedheadersIsSet)
    {
        val["exposedheaders"] = ModelBase::toJson(m_Exposedheaders);
    }
    if(m_MaxageIsSet)
    {
        val["maxage"] = ModelBase::toJson(m_Maxage);
    }
    if(m_SupportedheadersIsSet)
    {
        val["supportedheaders"] = ModelBase::toJson(m_Supportedheaders);
    }
    if(m_SupportedmethodsIsSet)
    {
        val["supportedmethods"] = ModelBase::toJson(m_Supportedmethods);
    }
    if(m_SupportscredentialsIsSet)
    {
        val["supportscredentials"] = ModelBase::toJson(m_Supportscredentials);
    }
    

    return val;
}

void ComAdobeGraniteCorsImplCORSPolicyImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("alloworigin") != val.end())
    {
        if(!val["alloworigin"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["alloworigin"]);
            setAlloworigin( newItem );
        }
        
    }
    if(val.find("alloworiginregexp") != val.end())
    {
        if(!val["alloworiginregexp"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["alloworiginregexp"]);
            setAlloworiginregexp( newItem );
        }
        
    }
    if(val.find("allowedpaths") != val.end())
    {
        if(!val["allowedpaths"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["allowedpaths"]);
            setAllowedpaths( newItem );
        }
        
    }
    if(val.find("exposedheaders") != val.end())
    {
        if(!val["exposedheaders"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["exposedheaders"]);
            setExposedheaders( newItem );
        }
        
    }
    if(val.find("maxage") != val.end())
    {
        if(!val["maxage"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["maxage"]);
            setMaxage( newItem );
        }
        
    }
    if(val.find("supportedheaders") != val.end())
    {
        if(!val["supportedheaders"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["supportedheaders"]);
            setSupportedheaders( newItem );
        }
        
    }
    if(val.find("supportedmethods") != val.end())
    {
        if(!val["supportedmethods"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["supportedmethods"]);
            setSupportedmethods( newItem );
        }
        
    }
    if(val.find("supportscredentials") != val.end())
    {
        if(!val["supportscredentials"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["supportscredentials"]);
            setSupportscredentials( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeGraniteCorsImplCORSPolicyImplProperties::getAlloworigin() const
{
    return m_Alloworigin;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setAlloworigin(ConfigNodePropertyArray const& value)
{
    m_Alloworigin = value;
    m_AlloworiginIsSet = true;
}
bool ComAdobeGraniteCorsImplCORSPolicyImplProperties::alloworiginIsSet() const
{
    return m_AlloworiginIsSet;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::unsetAlloworigin()
{
    m_AlloworiginIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteCorsImplCORSPolicyImplProperties::getAlloworiginregexp() const
{
    return m_Alloworiginregexp;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setAlloworiginregexp(ConfigNodePropertyArray const& value)
{
    m_Alloworiginregexp = value;
    m_AlloworiginregexpIsSet = true;
}
bool ComAdobeGraniteCorsImplCORSPolicyImplProperties::alloworiginregexpIsSet() const
{
    return m_AlloworiginregexpIsSet;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::unsetAlloworiginregexp()
{
    m_AlloworiginregexpIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteCorsImplCORSPolicyImplProperties::getAllowedpaths() const
{
    return m_Allowedpaths;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setAllowedpaths(ConfigNodePropertyArray const& value)
{
    m_Allowedpaths = value;
    m_AllowedpathsIsSet = true;
}
bool ComAdobeGraniteCorsImplCORSPolicyImplProperties::allowedpathsIsSet() const
{
    return m_AllowedpathsIsSet;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::unsetAllowedpaths()
{
    m_AllowedpathsIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteCorsImplCORSPolicyImplProperties::getExposedheaders() const
{
    return m_Exposedheaders;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setExposedheaders(ConfigNodePropertyArray const& value)
{
    m_Exposedheaders = value;
    m_ExposedheadersIsSet = true;
}
bool ComAdobeGraniteCorsImplCORSPolicyImplProperties::exposedheadersIsSet() const
{
    return m_ExposedheadersIsSet;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::unsetExposedheaders()
{
    m_ExposedheadersIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteCorsImplCORSPolicyImplProperties::getMaxage() const
{
    return m_Maxage;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setMaxage(ConfigNodePropertyInteger const& value)
{
    m_Maxage = value;
    m_MaxageIsSet = true;
}
bool ComAdobeGraniteCorsImplCORSPolicyImplProperties::maxageIsSet() const
{
    return m_MaxageIsSet;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::unsetMaxage()
{
    m_MaxageIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteCorsImplCORSPolicyImplProperties::getSupportedheaders() const
{
    return m_Supportedheaders;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setSupportedheaders(ConfigNodePropertyArray const& value)
{
    m_Supportedheaders = value;
    m_SupportedheadersIsSet = true;
}
bool ComAdobeGraniteCorsImplCORSPolicyImplProperties::supportedheadersIsSet() const
{
    return m_SupportedheadersIsSet;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::unsetSupportedheaders()
{
    m_SupportedheadersIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteCorsImplCORSPolicyImplProperties::getSupportedmethods() const
{
    return m_Supportedmethods;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setSupportedmethods(ConfigNodePropertyArray const& value)
{
    m_Supportedmethods = value;
    m_SupportedmethodsIsSet = true;
}
bool ComAdobeGraniteCorsImplCORSPolicyImplProperties::supportedmethodsIsSet() const
{
    return m_SupportedmethodsIsSet;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::unsetSupportedmethods()
{
    m_SupportedmethodsIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteCorsImplCORSPolicyImplProperties::getSupportscredentials() const
{
    return m_Supportscredentials;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setSupportscredentials(ConfigNodePropertyBoolean const& value)
{
    m_Supportscredentials = value;
    m_SupportscredentialsIsSet = true;
}
bool ComAdobeGraniteCorsImplCORSPolicyImplProperties::supportscredentialsIsSet() const
{
    return m_SupportscredentialsIsSet;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::unsetSupportscredentials()
{
    m_SupportscredentialsIsSet = false;
}

}
}
}
}

