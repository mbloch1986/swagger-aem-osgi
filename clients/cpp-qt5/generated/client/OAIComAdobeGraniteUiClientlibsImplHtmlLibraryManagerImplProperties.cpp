/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties() {
    init();
}

OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::~OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::init() {
    htmllibmanager_timing = new OAIConfigNodePropertyBoolean();
    m_htmllibmanager_timing_isSet = false;
    htmllibmanager_debug_init_js = new OAIConfigNodePropertyString();
    m_htmllibmanager_debug_init_js_isSet = false;
    htmllibmanager_minify = new OAIConfigNodePropertyBoolean();
    m_htmllibmanager_minify_isSet = false;
    htmllibmanager_debug = new OAIConfigNodePropertyBoolean();
    m_htmllibmanager_debug_isSet = false;
    htmllibmanager_gzip = new OAIConfigNodePropertyBoolean();
    m_htmllibmanager_gzip_isSet = false;
    htmllibmanager_max_data_uri_size = new OAIConfigNodePropertyInteger();
    m_htmllibmanager_max_data_uri_size_isSet = false;
    htmllibmanager_maxage = new OAIConfigNodePropertyInteger();
    m_htmllibmanager_maxage_isSet = false;
    htmllibmanager_force_cq_url_info = new OAIConfigNodePropertyBoolean();
    m_htmllibmanager_force_cq_url_info_isSet = false;
    htmllibmanager_defaultthemename = new OAIConfigNodePropertyString();
    m_htmllibmanager_defaultthemename_isSet = false;
    htmllibmanager_defaultuserthemename = new OAIConfigNodePropertyString();
    m_htmllibmanager_defaultuserthemename_isSet = false;
    htmllibmanager_clientmanager = new OAIConfigNodePropertyString();
    m_htmllibmanager_clientmanager_isSet = false;
    htmllibmanager_path_list = new OAIConfigNodePropertyArray();
    m_htmllibmanager_path_list_isSet = false;
    htmllibmanager_excluded_path_list = new OAIConfigNodePropertyArray();
    m_htmllibmanager_excluded_path_list_isSet = false;
    htmllibmanager_processor_js = new OAIConfigNodePropertyArray();
    m_htmllibmanager_processor_js_isSet = false;
    htmllibmanager_processor_css = new OAIConfigNodePropertyArray();
    m_htmllibmanager_processor_css_isSet = false;
    htmllibmanager_longcache_patterns = new OAIConfigNodePropertyArray();
    m_htmllibmanager_longcache_patterns_isSet = false;
    htmllibmanager_longcache_format = new OAIConfigNodePropertyString();
    m_htmllibmanager_longcache_format_isSet = false;
    htmllibmanager_use_file_system_output_cache = new OAIConfigNodePropertyBoolean();
    m_htmllibmanager_use_file_system_output_cache_isSet = false;
    htmllibmanager_file_system_output_cache_location = new OAIConfigNodePropertyString();
    m_htmllibmanager_file_system_output_cache_location_isSet = false;
    htmllibmanager_disable_replacement = new OAIConfigNodePropertyArray();
    m_htmllibmanager_disable_replacement_isSet = false;
}

void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::cleanup() {
    if(htmllibmanager_timing != nullptr) { 
        delete htmllibmanager_timing;
    }
    if(htmllibmanager_debug_init_js != nullptr) { 
        delete htmllibmanager_debug_init_js;
    }
    if(htmllibmanager_minify != nullptr) { 
        delete htmllibmanager_minify;
    }
    if(htmllibmanager_debug != nullptr) { 
        delete htmllibmanager_debug;
    }
    if(htmllibmanager_gzip != nullptr) { 
        delete htmllibmanager_gzip;
    }
    if(htmllibmanager_max_data_uri_size != nullptr) { 
        delete htmllibmanager_max_data_uri_size;
    }
    if(htmllibmanager_maxage != nullptr) { 
        delete htmllibmanager_maxage;
    }
    if(htmllibmanager_force_cq_url_info != nullptr) { 
        delete htmllibmanager_force_cq_url_info;
    }
    if(htmllibmanager_defaultthemename != nullptr) { 
        delete htmllibmanager_defaultthemename;
    }
    if(htmllibmanager_defaultuserthemename != nullptr) { 
        delete htmllibmanager_defaultuserthemename;
    }
    if(htmllibmanager_clientmanager != nullptr) { 
        delete htmllibmanager_clientmanager;
    }
    if(htmllibmanager_path_list != nullptr) { 
        delete htmllibmanager_path_list;
    }
    if(htmllibmanager_excluded_path_list != nullptr) { 
        delete htmllibmanager_excluded_path_list;
    }
    if(htmllibmanager_processor_js != nullptr) { 
        delete htmllibmanager_processor_js;
    }
    if(htmllibmanager_processor_css != nullptr) { 
        delete htmllibmanager_processor_css;
    }
    if(htmllibmanager_longcache_patterns != nullptr) { 
        delete htmllibmanager_longcache_patterns;
    }
    if(htmllibmanager_longcache_format != nullptr) { 
        delete htmllibmanager_longcache_format;
    }
    if(htmllibmanager_use_file_system_output_cache != nullptr) { 
        delete htmllibmanager_use_file_system_output_cache;
    }
    if(htmllibmanager_file_system_output_cache_location != nullptr) { 
        delete htmllibmanager_file_system_output_cache_location;
    }
    if(htmllibmanager_disable_replacement != nullptr) { 
        delete htmllibmanager_disable_replacement;
    }
}

OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&htmllibmanager_timing, pJson["htmllibmanager.timing"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&htmllibmanager_debug_init_js, pJson["htmllibmanager.debug.init.js"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&htmllibmanager_minify, pJson["htmllibmanager.minify"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&htmllibmanager_debug, pJson["htmllibmanager.debug"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&htmllibmanager_gzip, pJson["htmllibmanager.gzip"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&htmllibmanager_max_data_uri_size, pJson["htmllibmanager.maxDataUriSize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&htmllibmanager_maxage, pJson["htmllibmanager.maxage"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&htmllibmanager_force_cq_url_info, pJson["htmllibmanager.forceCQUrlInfo"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&htmllibmanager_defaultthemename, pJson["htmllibmanager.defaultthemename"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&htmllibmanager_defaultuserthemename, pJson["htmllibmanager.defaultuserthemename"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&htmllibmanager_clientmanager, pJson["htmllibmanager.clientmanager"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&htmllibmanager_path_list, pJson["htmllibmanager.path.list"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&htmllibmanager_excluded_path_list, pJson["htmllibmanager.excluded.path.list"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&htmllibmanager_processor_js, pJson["htmllibmanager.processor.js"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&htmllibmanager_processor_css, pJson["htmllibmanager.processor.css"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&htmllibmanager_longcache_patterns, pJson["htmllibmanager.longcache.patterns"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&htmllibmanager_longcache_format, pJson["htmllibmanager.longcache.format"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&htmllibmanager_use_file_system_output_cache, pJson["htmllibmanager.useFileSystemOutputCache"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&htmllibmanager_file_system_output_cache_location, pJson["htmllibmanager.fileSystemOutputCacheLocation"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&htmllibmanager_disable_replacement, pJson["htmllibmanager.disable.replacement"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::asJsonObject() {
    QJsonObject obj;
    if((htmllibmanager_timing != nullptr) && (htmllibmanager_timing->isSet())){
        toJsonValue(QString("htmllibmanager.timing"), htmllibmanager_timing, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((htmllibmanager_debug_init_js != nullptr) && (htmllibmanager_debug_init_js->isSet())){
        toJsonValue(QString("htmllibmanager.debug.init.js"), htmllibmanager_debug_init_js, obj, QString("OAIConfigNodePropertyString"));
    }
    if((htmllibmanager_minify != nullptr) && (htmllibmanager_minify->isSet())){
        toJsonValue(QString("htmllibmanager.minify"), htmllibmanager_minify, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((htmllibmanager_debug != nullptr) && (htmllibmanager_debug->isSet())){
        toJsonValue(QString("htmllibmanager.debug"), htmllibmanager_debug, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((htmllibmanager_gzip != nullptr) && (htmllibmanager_gzip->isSet())){
        toJsonValue(QString("htmllibmanager.gzip"), htmllibmanager_gzip, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((htmllibmanager_max_data_uri_size != nullptr) && (htmllibmanager_max_data_uri_size->isSet())){
        toJsonValue(QString("htmllibmanager.maxDataUriSize"), htmllibmanager_max_data_uri_size, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((htmllibmanager_maxage != nullptr) && (htmllibmanager_maxage->isSet())){
        toJsonValue(QString("htmllibmanager.maxage"), htmllibmanager_maxage, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((htmllibmanager_force_cq_url_info != nullptr) && (htmllibmanager_force_cq_url_info->isSet())){
        toJsonValue(QString("htmllibmanager.forceCQUrlInfo"), htmllibmanager_force_cq_url_info, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((htmllibmanager_defaultthemename != nullptr) && (htmllibmanager_defaultthemename->isSet())){
        toJsonValue(QString("htmllibmanager.defaultthemename"), htmllibmanager_defaultthemename, obj, QString("OAIConfigNodePropertyString"));
    }
    if((htmllibmanager_defaultuserthemename != nullptr) && (htmllibmanager_defaultuserthemename->isSet())){
        toJsonValue(QString("htmllibmanager.defaultuserthemename"), htmllibmanager_defaultuserthemename, obj, QString("OAIConfigNodePropertyString"));
    }
    if((htmllibmanager_clientmanager != nullptr) && (htmllibmanager_clientmanager->isSet())){
        toJsonValue(QString("htmllibmanager.clientmanager"), htmllibmanager_clientmanager, obj, QString("OAIConfigNodePropertyString"));
    }
    if((htmllibmanager_path_list != nullptr) && (htmllibmanager_path_list->isSet())){
        toJsonValue(QString("htmllibmanager.path.list"), htmllibmanager_path_list, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((htmllibmanager_excluded_path_list != nullptr) && (htmllibmanager_excluded_path_list->isSet())){
        toJsonValue(QString("htmllibmanager.excluded.path.list"), htmllibmanager_excluded_path_list, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((htmllibmanager_processor_js != nullptr) && (htmllibmanager_processor_js->isSet())){
        toJsonValue(QString("htmllibmanager.processor.js"), htmllibmanager_processor_js, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((htmllibmanager_processor_css != nullptr) && (htmllibmanager_processor_css->isSet())){
        toJsonValue(QString("htmllibmanager.processor.css"), htmllibmanager_processor_css, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((htmllibmanager_longcache_patterns != nullptr) && (htmllibmanager_longcache_patterns->isSet())){
        toJsonValue(QString("htmllibmanager.longcache.patterns"), htmllibmanager_longcache_patterns, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((htmllibmanager_longcache_format != nullptr) && (htmllibmanager_longcache_format->isSet())){
        toJsonValue(QString("htmllibmanager.longcache.format"), htmllibmanager_longcache_format, obj, QString("OAIConfigNodePropertyString"));
    }
    if((htmllibmanager_use_file_system_output_cache != nullptr) && (htmllibmanager_use_file_system_output_cache->isSet())){
        toJsonValue(QString("htmllibmanager.useFileSystemOutputCache"), htmllibmanager_use_file_system_output_cache, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((htmllibmanager_file_system_output_cache_location != nullptr) && (htmllibmanager_file_system_output_cache_location->isSet())){
        toJsonValue(QString("htmllibmanager.fileSystemOutputCacheLocation"), htmllibmanager_file_system_output_cache_location, obj, QString("OAIConfigNodePropertyString"));
    }
    if((htmllibmanager_disable_replacement != nullptr) && (htmllibmanager_disable_replacement->isSet())){
        toJsonValue(QString("htmllibmanager.disable.replacement"), htmllibmanager_disable_replacement, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerTiming() {
    return htmllibmanager_timing;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerTiming(OAIConfigNodePropertyBoolean* htmllibmanager_timing) {
    this->htmllibmanager_timing = htmllibmanager_timing;
    this->m_htmllibmanager_timing_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDebugInitJs() {
    return htmllibmanager_debug_init_js;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDebugInitJs(OAIConfigNodePropertyString* htmllibmanager_debug_init_js) {
    this->htmllibmanager_debug_init_js = htmllibmanager_debug_init_js;
    this->m_htmllibmanager_debug_init_js_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerMinify() {
    return htmllibmanager_minify;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerMinify(OAIConfigNodePropertyBoolean* htmllibmanager_minify) {
    this->htmllibmanager_minify = htmllibmanager_minify;
    this->m_htmllibmanager_minify_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDebug() {
    return htmllibmanager_debug;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDebug(OAIConfigNodePropertyBoolean* htmllibmanager_debug) {
    this->htmllibmanager_debug = htmllibmanager_debug;
    this->m_htmllibmanager_debug_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerGzip() {
    return htmllibmanager_gzip;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerGzip(OAIConfigNodePropertyBoolean* htmllibmanager_gzip) {
    this->htmllibmanager_gzip = htmllibmanager_gzip;
    this->m_htmllibmanager_gzip_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerMaxDataUriSize() {
    return htmllibmanager_max_data_uri_size;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerMaxDataUriSize(OAIConfigNodePropertyInteger* htmllibmanager_max_data_uri_size) {
    this->htmllibmanager_max_data_uri_size = htmllibmanager_max_data_uri_size;
    this->m_htmllibmanager_max_data_uri_size_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerMaxage() {
    return htmllibmanager_maxage;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerMaxage(OAIConfigNodePropertyInteger* htmllibmanager_maxage) {
    this->htmllibmanager_maxage = htmllibmanager_maxage;
    this->m_htmllibmanager_maxage_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerForceCqUrlInfo() {
    return htmllibmanager_force_cq_url_info;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerForceCqUrlInfo(OAIConfigNodePropertyBoolean* htmllibmanager_force_cq_url_info) {
    this->htmllibmanager_force_cq_url_info = htmllibmanager_force_cq_url_info;
    this->m_htmllibmanager_force_cq_url_info_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDefaultthemename() {
    return htmllibmanager_defaultthemename;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDefaultthemename(OAIConfigNodePropertyString* htmllibmanager_defaultthemename) {
    this->htmllibmanager_defaultthemename = htmllibmanager_defaultthemename;
    this->m_htmllibmanager_defaultthemename_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDefaultuserthemename() {
    return htmllibmanager_defaultuserthemename;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDefaultuserthemename(OAIConfigNodePropertyString* htmllibmanager_defaultuserthemename) {
    this->htmllibmanager_defaultuserthemename = htmllibmanager_defaultuserthemename;
    this->m_htmllibmanager_defaultuserthemename_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerClientmanager() {
    return htmllibmanager_clientmanager;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerClientmanager(OAIConfigNodePropertyString* htmllibmanager_clientmanager) {
    this->htmllibmanager_clientmanager = htmllibmanager_clientmanager;
    this->m_htmllibmanager_clientmanager_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerPathList() {
    return htmllibmanager_path_list;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerPathList(OAIConfigNodePropertyArray* htmllibmanager_path_list) {
    this->htmllibmanager_path_list = htmllibmanager_path_list;
    this->m_htmllibmanager_path_list_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerExcludedPathList() {
    return htmllibmanager_excluded_path_list;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerExcludedPathList(OAIConfigNodePropertyArray* htmllibmanager_excluded_path_list) {
    this->htmllibmanager_excluded_path_list = htmllibmanager_excluded_path_list;
    this->m_htmllibmanager_excluded_path_list_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerProcessorJs() {
    return htmllibmanager_processor_js;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerProcessorJs(OAIConfigNodePropertyArray* htmllibmanager_processor_js) {
    this->htmllibmanager_processor_js = htmllibmanager_processor_js;
    this->m_htmllibmanager_processor_js_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerProcessorCss() {
    return htmllibmanager_processor_css;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerProcessorCss(OAIConfigNodePropertyArray* htmllibmanager_processor_css) {
    this->htmllibmanager_processor_css = htmllibmanager_processor_css;
    this->m_htmllibmanager_processor_css_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerLongcachePatterns() {
    return htmllibmanager_longcache_patterns;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerLongcachePatterns(OAIConfigNodePropertyArray* htmllibmanager_longcache_patterns) {
    this->htmllibmanager_longcache_patterns = htmllibmanager_longcache_patterns;
    this->m_htmllibmanager_longcache_patterns_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerLongcacheFormat() {
    return htmllibmanager_longcache_format;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerLongcacheFormat(OAIConfigNodePropertyString* htmllibmanager_longcache_format) {
    this->htmllibmanager_longcache_format = htmllibmanager_longcache_format;
    this->m_htmllibmanager_longcache_format_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerUseFileSystemOutputCache() {
    return htmllibmanager_use_file_system_output_cache;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerUseFileSystemOutputCache(OAIConfigNodePropertyBoolean* htmllibmanager_use_file_system_output_cache) {
    this->htmllibmanager_use_file_system_output_cache = htmllibmanager_use_file_system_output_cache;
    this->m_htmllibmanager_use_file_system_output_cache_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerFileSystemOutputCacheLocation() {
    return htmllibmanager_file_system_output_cache_location;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerFileSystemOutputCacheLocation(OAIConfigNodePropertyString* htmllibmanager_file_system_output_cache_location) {
    this->htmllibmanager_file_system_output_cache_location = htmllibmanager_file_system_output_cache_location;
    this->m_htmllibmanager_file_system_output_cache_location_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDisableReplacement() {
    return htmllibmanager_disable_replacement;
}
void
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDisableReplacement(OAIConfigNodePropertyArray* htmllibmanager_disable_replacement) {
    this->htmllibmanager_disable_replacement = htmllibmanager_disable_replacement;
    this->m_htmllibmanager_disable_replacement_isSet = true;
}


bool
OAIComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(htmllibmanager_timing != nullptr && htmllibmanager_timing->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_debug_init_js != nullptr && htmllibmanager_debug_init_js->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_minify != nullptr && htmllibmanager_minify->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_debug != nullptr && htmllibmanager_debug->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_gzip != nullptr && htmllibmanager_gzip->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_max_data_uri_size != nullptr && htmllibmanager_max_data_uri_size->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_maxage != nullptr && htmllibmanager_maxage->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_force_cq_url_info != nullptr && htmllibmanager_force_cq_url_info->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_defaultthemename != nullptr && htmllibmanager_defaultthemename->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_defaultuserthemename != nullptr && htmllibmanager_defaultuserthemename->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_clientmanager != nullptr && htmllibmanager_clientmanager->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_path_list != nullptr && htmllibmanager_path_list->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_excluded_path_list != nullptr && htmllibmanager_excluded_path_list->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_processor_js != nullptr && htmllibmanager_processor_js->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_processor_css != nullptr && htmllibmanager_processor_css->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_longcache_patterns != nullptr && htmllibmanager_longcache_patterns->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_longcache_format != nullptr && htmllibmanager_longcache_format->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_use_file_system_output_cache != nullptr && htmllibmanager_use_file_system_output_cache->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_file_system_output_cache_location != nullptr && htmllibmanager_file_system_output_cache_location->isSet()){ isObjectUpdated = true; break;}
        if(htmllibmanager_disable_replacement != nullptr && htmllibmanager_disable_replacement->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

