<?php
/**
 * OrgApacheSlingServletsResolverSlingServletResolverProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheSlingServletsResolverSlingServletResolverProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheSlingServletsResolverSlingServletResolverProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("servletresolver.servletRoot")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $servletresolverServletRoot;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("servletresolver.cacheSize")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $servletresolverCacheSize;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("servletresolver.paths")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $servletresolverPaths;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("servletresolver.defaultExtensions")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $servletresolverDefaultExtensions;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->servletresolverServletRoot = isset($data['servletresolverServletRoot']) ? $data['servletresolverServletRoot'] : null;
        $this->servletresolverCacheSize = isset($data['servletresolverCacheSize']) ? $data['servletresolverCacheSize'] : null;
        $this->servletresolverPaths = isset($data['servletresolverPaths']) ? $data['servletresolverPaths'] : null;
        $this->servletresolverDefaultExtensions = isset($data['servletresolverDefaultExtensions']) ? $data['servletresolverDefaultExtensions'] : null;
    }

    /**
     * Gets servletresolverServletRoot.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getServletresolverServletRoot()
    {
        return $this->servletresolverServletRoot;
    }

    /**
     * Sets servletresolverServletRoot.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $servletresolverServletRoot
     *
     * @return $this
     */
    public function setServletresolverServletRoot(ConfigNodePropertyString $servletresolverServletRoot = null)
    {
        $this->servletresolverServletRoot = $servletresolverServletRoot;

        return $this;
    }

    /**
     * Gets servletresolverCacheSize.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getServletresolverCacheSize()
    {
        return $this->servletresolverCacheSize;
    }

    /**
     * Sets servletresolverCacheSize.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $servletresolverCacheSize
     *
     * @return $this
     */
    public function setServletresolverCacheSize(ConfigNodePropertyInteger $servletresolverCacheSize = null)
    {
        $this->servletresolverCacheSize = $servletresolverCacheSize;

        return $this;
    }

    /**
     * Gets servletresolverPaths.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getServletresolverPaths()
    {
        return $this->servletresolverPaths;
    }

    /**
     * Sets servletresolverPaths.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $servletresolverPaths
     *
     * @return $this
     */
    public function setServletresolverPaths(ConfigNodePropertyArray $servletresolverPaths = null)
    {
        $this->servletresolverPaths = $servletresolverPaths;

        return $this;
    }

    /**
     * Gets servletresolverDefaultExtensions.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getServletresolverDefaultExtensions()
    {
        return $this->servletresolverDefaultExtensions;
    }

    /**
     * Sets servletresolverDefaultExtensions.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $servletresolverDefaultExtensions
     *
     * @return $this
     */
    public function setServletresolverDefaultExtensions(ConfigNodePropertyArray $servletresolverDefaultExtensions = null)
    {
        $this->servletresolverDefaultExtensions = $servletresolverDefaultExtensions;

        return $this;
    }
}


