package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo._

case class ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsProperties])

object ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfoCodecJson: CodecJson[ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo] = CodecJson.derive[ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo]
  implicit val ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfoDecoder: EntityDecoder[ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo] = jsonOf[ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo]
  implicit val ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfoEncoder: EntityEncoder[ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo] = jsonEncoderOf[ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo]
}
