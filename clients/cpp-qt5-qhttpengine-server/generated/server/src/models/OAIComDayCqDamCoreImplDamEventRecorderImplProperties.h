/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqDamCoreImplDamEventRecorderImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqDamCoreImplDamEventRecorderImplProperties_H
#define OAIComDayCqDamCoreImplDamEventRecorderImplProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqDamCoreImplDamEventRecorderImplProperties: public OAIObject {
public:
    OAIComDayCqDamCoreImplDamEventRecorderImplProperties();
    OAIComDayCqDamCoreImplDamEventRecorderImplProperties(QString json);
    ~OAIComDayCqDamCoreImplDamEventRecorderImplProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getEventFilter() const;
    void setEventFilter(const OAIConfigNodePropertyString &event_filter);

    OAIConfigNodePropertyInteger getEventQueueLength() const;
    void setEventQueueLength(const OAIConfigNodePropertyInteger &event_queue_length);

    OAIConfigNodePropertyBoolean getEventrecorderEnabled() const;
    void setEventrecorderEnabled(const OAIConfigNodePropertyBoolean &eventrecorder_enabled);

    OAIConfigNodePropertyArray getEventrecorderBlacklist() const;
    void setEventrecorderBlacklist(const OAIConfigNodePropertyArray &eventrecorder_blacklist);

    OAIConfigNodePropertyDropDown getEventrecorderEventtypes() const;
    void setEventrecorderEventtypes(const OAIConfigNodePropertyDropDown &eventrecorder_eventtypes);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString event_filter;
    bool m_event_filter_isSet;

    OAIConfigNodePropertyInteger event_queue_length;
    bool m_event_queue_length_isSet;

    OAIConfigNodePropertyBoolean eventrecorder_enabled;
    bool m_eventrecorder_enabled_isSet;

    OAIConfigNodePropertyArray eventrecorder_blacklist;
    bool m_eventrecorder_blacklist_isSet;

    OAIConfigNodePropertyDropDown eventrecorder_eventtypes;
    bool m_eventrecorder_eventtypes_isSet;

};

}

#endif // OAIComDayCqDamCoreImplDamEventRecorderImplProperties_H
