/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWidgetImplHtmlLibraryManagerImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWidgetImplHtmlLibraryManagerImplProperties::ComDayCqWidgetImplHtmlLibraryManagerImplProperties()
{
    m_Htmllibmanager_clientmanagerIsSet = false;
    m_Htmllibmanager_debugIsSet = false;
    m_Htmllibmanager_debug_consoleIsSet = false;
    m_Htmllibmanager_debug_init_jsIsSet = false;
    m_Htmllibmanager_defaultthemenameIsSet = false;
    m_Htmllibmanager_defaultuserthemenameIsSet = false;
    m_Htmllibmanager_firebuglite_pathIsSet = false;
    m_Htmllibmanager_forceCQUrlInfoIsSet = false;
    m_Htmllibmanager_gzipIsSet = false;
    m_Htmllibmanager_maxageIsSet = false;
    m_Htmllibmanager_maxDataUriSizeIsSet = false;
    m_Htmllibmanager_minifyIsSet = false;
    m_Htmllibmanager_path_listIsSet = false;
    m_Htmllibmanager_timingIsSet = false;
    
}

ComDayCqWidgetImplHtmlLibraryManagerImplProperties::~ComDayCqWidgetImplHtmlLibraryManagerImplProperties()
{
}

void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWidgetImplHtmlLibraryManagerImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Htmllibmanager_clientmanagerIsSet)
    {
        val["htmllibmanager.clientmanager"] = ModelBase::toJson(m_Htmllibmanager_clientmanager);
    }
    if(m_Htmllibmanager_debugIsSet)
    {
        val["htmllibmanager.debug"] = ModelBase::toJson(m_Htmllibmanager_debug);
    }
    if(m_Htmllibmanager_debug_consoleIsSet)
    {
        val["htmllibmanager.debug.console"] = ModelBase::toJson(m_Htmllibmanager_debug_console);
    }
    if(m_Htmllibmanager_debug_init_jsIsSet)
    {
        val["htmllibmanager.debug.init.js"] = ModelBase::toJson(m_Htmllibmanager_debug_init_js);
    }
    if(m_Htmllibmanager_defaultthemenameIsSet)
    {
        val["htmllibmanager.defaultthemename"] = ModelBase::toJson(m_Htmllibmanager_defaultthemename);
    }
    if(m_Htmllibmanager_defaultuserthemenameIsSet)
    {
        val["htmllibmanager.defaultuserthemename"] = ModelBase::toJson(m_Htmllibmanager_defaultuserthemename);
    }
    if(m_Htmllibmanager_firebuglite_pathIsSet)
    {
        val["htmllibmanager.firebuglite.path"] = ModelBase::toJson(m_Htmllibmanager_firebuglite_path);
    }
    if(m_Htmllibmanager_forceCQUrlInfoIsSet)
    {
        val["htmllibmanager.forceCQUrlInfo"] = ModelBase::toJson(m_Htmllibmanager_forceCQUrlInfo);
    }
    if(m_Htmllibmanager_gzipIsSet)
    {
        val["htmllibmanager.gzip"] = ModelBase::toJson(m_Htmllibmanager_gzip);
    }
    if(m_Htmllibmanager_maxageIsSet)
    {
        val["htmllibmanager.maxage"] = ModelBase::toJson(m_Htmllibmanager_maxage);
    }
    if(m_Htmllibmanager_maxDataUriSizeIsSet)
    {
        val["htmllibmanager.maxDataUriSize"] = ModelBase::toJson(m_Htmllibmanager_maxDataUriSize);
    }
    if(m_Htmllibmanager_minifyIsSet)
    {
        val["htmllibmanager.minify"] = ModelBase::toJson(m_Htmllibmanager_minify);
    }
    if(m_Htmllibmanager_path_listIsSet)
    {
        val["htmllibmanager.path.list"] = ModelBase::toJson(m_Htmllibmanager_path_list);
    }
    if(m_Htmllibmanager_timingIsSet)
    {
        val["htmllibmanager.timing"] = ModelBase::toJson(m_Htmllibmanager_timing);
    }
    

    return val;
}

void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("htmllibmanager.clientmanager") != val.end())
    {
        if(!val["htmllibmanager.clientmanager"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["htmllibmanager.clientmanager"]);
            setHtmllibmanagerClientmanager( newItem );
        }
        
    }
    if(val.find("htmllibmanager.debug") != val.end())
    {
        if(!val["htmllibmanager.debug"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["htmllibmanager.debug"]);
            setHtmllibmanagerDebug( newItem );
        }
        
    }
    if(val.find("htmllibmanager.debug.console") != val.end())
    {
        if(!val["htmllibmanager.debug.console"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["htmllibmanager.debug.console"]);
            setHtmllibmanagerDebugConsole( newItem );
        }
        
    }
    if(val.find("htmllibmanager.debug.init.js") != val.end())
    {
        if(!val["htmllibmanager.debug.init.js"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["htmllibmanager.debug.init.js"]);
            setHtmllibmanagerDebugInitJs( newItem );
        }
        
    }
    if(val.find("htmllibmanager.defaultthemename") != val.end())
    {
        if(!val["htmllibmanager.defaultthemename"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["htmllibmanager.defaultthemename"]);
            setHtmllibmanagerDefaultthemename( newItem );
        }
        
    }
    if(val.find("htmllibmanager.defaultuserthemename") != val.end())
    {
        if(!val["htmllibmanager.defaultuserthemename"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["htmllibmanager.defaultuserthemename"]);
            setHtmllibmanagerDefaultuserthemename( newItem );
        }
        
    }
    if(val.find("htmllibmanager.firebuglite.path") != val.end())
    {
        if(!val["htmllibmanager.firebuglite.path"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["htmllibmanager.firebuglite.path"]);
            setHtmllibmanagerFirebuglitePath( newItem );
        }
        
    }
    if(val.find("htmllibmanager.forceCQUrlInfo") != val.end())
    {
        if(!val["htmllibmanager.forceCQUrlInfo"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["htmllibmanager.forceCQUrlInfo"]);
            setHtmllibmanagerForceCQUrlInfo( newItem );
        }
        
    }
    if(val.find("htmllibmanager.gzip") != val.end())
    {
        if(!val["htmllibmanager.gzip"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["htmllibmanager.gzip"]);
            setHtmllibmanagerGzip( newItem );
        }
        
    }
    if(val.find("htmllibmanager.maxage") != val.end())
    {
        if(!val["htmllibmanager.maxage"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["htmllibmanager.maxage"]);
            setHtmllibmanagerMaxage( newItem );
        }
        
    }
    if(val.find("htmllibmanager.maxDataUriSize") != val.end())
    {
        if(!val["htmllibmanager.maxDataUriSize"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["htmllibmanager.maxDataUriSize"]);
            setHtmllibmanagerMaxDataUriSize( newItem );
        }
        
    }
    if(val.find("htmllibmanager.minify") != val.end())
    {
        if(!val["htmllibmanager.minify"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["htmllibmanager.minify"]);
            setHtmllibmanagerMinify( newItem );
        }
        
    }
    if(val.find("htmllibmanager.path.list") != val.end())
    {
        if(!val["htmllibmanager.path.list"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["htmllibmanager.path.list"]);
            setHtmllibmanagerPathList( newItem );
        }
        
    }
    if(val.find("htmllibmanager.timing") != val.end())
    {
        if(!val["htmllibmanager.timing"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["htmllibmanager.timing"]);
            setHtmllibmanagerTiming( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerClientmanager() const
{
    return m_Htmllibmanager_clientmanager;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerClientmanager(ConfigNodePropertyString const& value)
{
    m_Htmllibmanager_clientmanager = value;
    m_Htmllibmanager_clientmanagerIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerClientmanagerIsSet() const
{
    return m_Htmllibmanager_clientmanagerIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_clientmanager()
{
    m_Htmllibmanager_clientmanagerIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDebug() const
{
    return m_Htmllibmanager_debug;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDebug(ConfigNodePropertyBoolean const& value)
{
    m_Htmllibmanager_debug = value;
    m_Htmllibmanager_debugIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerDebugIsSet() const
{
    return m_Htmllibmanager_debugIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_debug()
{
    m_Htmllibmanager_debugIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDebugConsole() const
{
    return m_Htmllibmanager_debug_console;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDebugConsole(ConfigNodePropertyBoolean const& value)
{
    m_Htmllibmanager_debug_console = value;
    m_Htmllibmanager_debug_consoleIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerDebugConsoleIsSet() const
{
    return m_Htmllibmanager_debug_consoleIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_debug_console()
{
    m_Htmllibmanager_debug_consoleIsSet = false;
}
ConfigNodePropertyString ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDebugInitJs() const
{
    return m_Htmllibmanager_debug_init_js;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDebugInitJs(ConfigNodePropertyString const& value)
{
    m_Htmllibmanager_debug_init_js = value;
    m_Htmllibmanager_debug_init_jsIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerDebugInitJsIsSet() const
{
    return m_Htmllibmanager_debug_init_jsIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_debug_init_js()
{
    m_Htmllibmanager_debug_init_jsIsSet = false;
}
ConfigNodePropertyString ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDefaultthemename() const
{
    return m_Htmllibmanager_defaultthemename;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDefaultthemename(ConfigNodePropertyString const& value)
{
    m_Htmllibmanager_defaultthemename = value;
    m_Htmllibmanager_defaultthemenameIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerDefaultthemenameIsSet() const
{
    return m_Htmllibmanager_defaultthemenameIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_defaultthemename()
{
    m_Htmllibmanager_defaultthemenameIsSet = false;
}
ConfigNodePropertyString ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerDefaultuserthemename() const
{
    return m_Htmllibmanager_defaultuserthemename;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerDefaultuserthemename(ConfigNodePropertyString const& value)
{
    m_Htmllibmanager_defaultuserthemename = value;
    m_Htmllibmanager_defaultuserthemenameIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerDefaultuserthemenameIsSet() const
{
    return m_Htmllibmanager_defaultuserthemenameIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_defaultuserthemename()
{
    m_Htmllibmanager_defaultuserthemenameIsSet = false;
}
ConfigNodePropertyString ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerFirebuglitePath() const
{
    return m_Htmllibmanager_firebuglite_path;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerFirebuglitePath(ConfigNodePropertyString const& value)
{
    m_Htmllibmanager_firebuglite_path = value;
    m_Htmllibmanager_firebuglite_pathIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerFirebuglitePathIsSet() const
{
    return m_Htmllibmanager_firebuglite_pathIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_firebuglite_path()
{
    m_Htmllibmanager_firebuglite_pathIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerForceCQUrlInfo() const
{
    return m_Htmllibmanager_forceCQUrlInfo;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerForceCQUrlInfo(ConfigNodePropertyBoolean const& value)
{
    m_Htmllibmanager_forceCQUrlInfo = value;
    m_Htmllibmanager_forceCQUrlInfoIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerForceCQUrlInfoIsSet() const
{
    return m_Htmllibmanager_forceCQUrlInfoIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_forceCQUrlInfo()
{
    m_Htmllibmanager_forceCQUrlInfoIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerGzip() const
{
    return m_Htmllibmanager_gzip;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerGzip(ConfigNodePropertyBoolean const& value)
{
    m_Htmllibmanager_gzip = value;
    m_Htmllibmanager_gzipIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerGzipIsSet() const
{
    return m_Htmllibmanager_gzipIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_gzip()
{
    m_Htmllibmanager_gzipIsSet = false;
}
ConfigNodePropertyInteger ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerMaxage() const
{
    return m_Htmllibmanager_maxage;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerMaxage(ConfigNodePropertyInteger const& value)
{
    m_Htmllibmanager_maxage = value;
    m_Htmllibmanager_maxageIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerMaxageIsSet() const
{
    return m_Htmllibmanager_maxageIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_maxage()
{
    m_Htmllibmanager_maxageIsSet = false;
}
ConfigNodePropertyInteger ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerMaxDataUriSize() const
{
    return m_Htmllibmanager_maxDataUriSize;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerMaxDataUriSize(ConfigNodePropertyInteger const& value)
{
    m_Htmllibmanager_maxDataUriSize = value;
    m_Htmllibmanager_maxDataUriSizeIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerMaxDataUriSizeIsSet() const
{
    return m_Htmllibmanager_maxDataUriSizeIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_maxDataUriSize()
{
    m_Htmllibmanager_maxDataUriSizeIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerMinify() const
{
    return m_Htmllibmanager_minify;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerMinify(ConfigNodePropertyBoolean const& value)
{
    m_Htmllibmanager_minify = value;
    m_Htmllibmanager_minifyIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerMinifyIsSet() const
{
    return m_Htmllibmanager_minifyIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_minify()
{
    m_Htmllibmanager_minifyIsSet = false;
}
ConfigNodePropertyArray ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerPathList() const
{
    return m_Htmllibmanager_path_list;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerPathList(ConfigNodePropertyArray const& value)
{
    m_Htmllibmanager_path_list = value;
    m_Htmllibmanager_path_listIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerPathListIsSet() const
{
    return m_Htmllibmanager_path_listIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_path_list()
{
    m_Htmllibmanager_path_listIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWidgetImplHtmlLibraryManagerImplProperties::getHtmllibmanagerTiming() const
{
    return m_Htmllibmanager_timing;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::setHtmllibmanagerTiming(ConfigNodePropertyBoolean const& value)
{
    m_Htmllibmanager_timing = value;
    m_Htmllibmanager_timingIsSet = true;
}
bool ComDayCqWidgetImplHtmlLibraryManagerImplProperties::htmllibmanagerTimingIsSet() const
{
    return m_Htmllibmanager_timingIsSet;
}
void ComDayCqWidgetImplHtmlLibraryManagerImplProperties::unsetHtmllibmanager_timing()
{
    m_Htmllibmanager_timingIsSet = false;
}

}
}
}
}

