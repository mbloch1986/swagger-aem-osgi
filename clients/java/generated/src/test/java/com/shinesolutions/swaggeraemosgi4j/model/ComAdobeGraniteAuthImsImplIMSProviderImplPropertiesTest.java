/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ComAdobeGraniteAuthImsImplIMSProviderImplProperties
 */
public class ComAdobeGraniteAuthImsImplIMSProviderImplPropertiesTest {
    private final ComAdobeGraniteAuthImsImplIMSProviderImplProperties model = new ComAdobeGraniteAuthImsImplIMSProviderImplProperties();

    /**
     * Model tests for ComAdobeGraniteAuthImsImplIMSProviderImplProperties
     */
    @Test
    public void testComAdobeGraniteAuthImsImplIMSProviderImplProperties() {
        // TODO: test ComAdobeGraniteAuthImsImplIMSProviderImplProperties
    }

    /**
     * Test the property 'oauthProviderId'
     */
    @Test
    public void oauthProviderIdTest() {
        // TODO: test oauthProviderId
    }

    /**
     * Test the property 'oauthProviderImsAuthorizationUrl'
     */
    @Test
    public void oauthProviderImsAuthorizationUrlTest() {
        // TODO: test oauthProviderImsAuthorizationUrl
    }

    /**
     * Test the property 'oauthProviderImsTokenUrl'
     */
    @Test
    public void oauthProviderImsTokenUrlTest() {
        // TODO: test oauthProviderImsTokenUrl
    }

    /**
     * Test the property 'oauthProviderImsProfileUrl'
     */
    @Test
    public void oauthProviderImsProfileUrlTest() {
        // TODO: test oauthProviderImsProfileUrl
    }

    /**
     * Test the property 'oauthProviderImsExtendedDetailsUrls'
     */
    @Test
    public void oauthProviderImsExtendedDetailsUrlsTest() {
        // TODO: test oauthProviderImsExtendedDetailsUrls
    }

    /**
     * Test the property 'oauthProviderImsValidateTokenUrl'
     */
    @Test
    public void oauthProviderImsValidateTokenUrlTest() {
        // TODO: test oauthProviderImsValidateTokenUrl
    }

    /**
     * Test the property 'oauthProviderImsSessionProperty'
     */
    @Test
    public void oauthProviderImsSessionPropertyTest() {
        // TODO: test oauthProviderImsSessionProperty
    }

    /**
     * Test the property 'oauthProviderImsServiceTokenClientId'
     */
    @Test
    public void oauthProviderImsServiceTokenClientIdTest() {
        // TODO: test oauthProviderImsServiceTokenClientId
    }

    /**
     * Test the property 'oauthProviderImsServiceTokenClientSecret'
     */
    @Test
    public void oauthProviderImsServiceTokenClientSecretTest() {
        // TODO: test oauthProviderImsServiceTokenClientSecret
    }

    /**
     * Test the property 'oauthProviderImsServiceToken'
     */
    @Test
    public void oauthProviderImsServiceTokenTest() {
        // TODO: test oauthProviderImsServiceToken
    }

    /**
     * Test the property 'imsOrgRef'
     */
    @Test
    public void imsOrgRefTest() {
        // TODO: test imsOrgRef
    }

    /**
     * Test the property 'imsGroupMapping'
     */
    @Test
    public void imsGroupMappingTest() {
        // TODO: test imsGroupMapping
    }

    /**
     * Test the property 'oauthProviderImsOnlyLicenseGroup'
     */
    @Test
    public void oauthProviderImsOnlyLicenseGroupTest() {
        // TODO: test oauthProviderImsOnlyLicenseGroup
    }

}
