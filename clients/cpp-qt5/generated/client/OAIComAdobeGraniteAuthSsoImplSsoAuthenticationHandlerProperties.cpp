/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties() {
    init();
}

OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::~OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::init() {
    path = new OAIConfigNodePropertyString();
    m_path_isSet = false;
    service_ranking = new OAIConfigNodePropertyInteger();
    m_service_ranking_isSet = false;
    jaas_control_flag = new OAIConfigNodePropertyString();
    m_jaas_control_flag_isSet = false;
    jaas_realm_name = new OAIConfigNodePropertyString();
    m_jaas_realm_name_isSet = false;
    jaas_ranking = new OAIConfigNodePropertyInteger();
    m_jaas_ranking_isSet = false;
    headers = new OAIConfigNodePropertyArray();
    m_headers_isSet = false;
    cookies = new OAIConfigNodePropertyArray();
    m_cookies_isSet = false;
    parameters = new OAIConfigNodePropertyArray();
    m_parameters_isSet = false;
    usermap = new OAIConfigNodePropertyArray();
    m_usermap_isSet = false;
    format = new OAIConfigNodePropertyString();
    m_format_isSet = false;
    trusted_credentials_attribute = new OAIConfigNodePropertyString();
    m_trusted_credentials_attribute_isSet = false;
}

void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::cleanup() {
    if(path != nullptr) { 
        delete path;
    }
    if(service_ranking != nullptr) { 
        delete service_ranking;
    }
    if(jaas_control_flag != nullptr) { 
        delete jaas_control_flag;
    }
    if(jaas_realm_name != nullptr) { 
        delete jaas_realm_name;
    }
    if(jaas_ranking != nullptr) { 
        delete jaas_ranking;
    }
    if(headers != nullptr) { 
        delete headers;
    }
    if(cookies != nullptr) { 
        delete cookies;
    }
    if(parameters != nullptr) { 
        delete parameters;
    }
    if(usermap != nullptr) { 
        delete usermap;
    }
    if(format != nullptr) { 
        delete format;
    }
    if(trusted_credentials_attribute != nullptr) { 
        delete trusted_credentials_attribute;
    }
}

OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&path, pJson["path"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&service_ranking, pJson["service.ranking"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&jaas_control_flag, pJson["jaas.controlFlag"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&jaas_realm_name, pJson["jaas.realmName"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&jaas_ranking, pJson["jaas.ranking"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&headers, pJson["headers"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&cookies, pJson["cookies"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&parameters, pJson["parameters"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&usermap, pJson["usermap"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&format, pJson["format"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&trusted_credentials_attribute, pJson["trustedCredentialsAttribute"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::asJsonObject() {
    QJsonObject obj;
    if((path != nullptr) && (path->isSet())){
        toJsonValue(QString("path"), path, obj, QString("OAIConfigNodePropertyString"));
    }
    if((service_ranking != nullptr) && (service_ranking->isSet())){
        toJsonValue(QString("service.ranking"), service_ranking, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((jaas_control_flag != nullptr) && (jaas_control_flag->isSet())){
        toJsonValue(QString("jaas.controlFlag"), jaas_control_flag, obj, QString("OAIConfigNodePropertyString"));
    }
    if((jaas_realm_name != nullptr) && (jaas_realm_name->isSet())){
        toJsonValue(QString("jaas.realmName"), jaas_realm_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((jaas_ranking != nullptr) && (jaas_ranking->isSet())){
        toJsonValue(QString("jaas.ranking"), jaas_ranking, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((headers != nullptr) && (headers->isSet())){
        toJsonValue(QString("headers"), headers, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((cookies != nullptr) && (cookies->isSet())){
        toJsonValue(QString("cookies"), cookies, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((parameters != nullptr) && (parameters->isSet())){
        toJsonValue(QString("parameters"), parameters, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((usermap != nullptr) && (usermap->isSet())){
        toJsonValue(QString("usermap"), usermap, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((format != nullptr) && (format->isSet())){
        toJsonValue(QString("format"), format, obj, QString("OAIConfigNodePropertyString"));
    }
    if((trusted_credentials_attribute != nullptr) && (trusted_credentials_attribute->isSet())){
        toJsonValue(QString("trustedCredentialsAttribute"), trusted_credentials_attribute, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getPath() {
    return path;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setPath(OAIConfigNodePropertyString* path) {
    this->path = path;
    this->m_path_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getServiceRanking() {
    return service_ranking;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setServiceRanking(OAIConfigNodePropertyInteger* service_ranking) {
    this->service_ranking = service_ranking;
    this->m_service_ranking_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getJaasControlFlag() {
    return jaas_control_flag;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setJaasControlFlag(OAIConfigNodePropertyString* jaas_control_flag) {
    this->jaas_control_flag = jaas_control_flag;
    this->m_jaas_control_flag_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getJaasRealmName() {
    return jaas_realm_name;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setJaasRealmName(OAIConfigNodePropertyString* jaas_realm_name) {
    this->jaas_realm_name = jaas_realm_name;
    this->m_jaas_realm_name_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getJaasRanking() {
    return jaas_ranking;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setJaasRanking(OAIConfigNodePropertyInteger* jaas_ranking) {
    this->jaas_ranking = jaas_ranking;
    this->m_jaas_ranking_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getHeaders() {
    return headers;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setHeaders(OAIConfigNodePropertyArray* headers) {
    this->headers = headers;
    this->m_headers_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getCookies() {
    return cookies;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setCookies(OAIConfigNodePropertyArray* cookies) {
    this->cookies = cookies;
    this->m_cookies_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getParameters() {
    return parameters;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setParameters(OAIConfigNodePropertyArray* parameters) {
    this->parameters = parameters;
    this->m_parameters_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getUsermap() {
    return usermap;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setUsermap(OAIConfigNodePropertyArray* usermap) {
    this->usermap = usermap;
    this->m_usermap_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getFormat() {
    return format;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setFormat(OAIConfigNodePropertyString* format) {
    this->format = format;
    this->m_format_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getTrustedCredentialsAttribute() {
    return trusted_credentials_attribute;
}
void
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setTrustedCredentialsAttribute(OAIConfigNodePropertyString* trusted_credentials_attribute) {
    this->trusted_credentials_attribute = trusted_credentials_attribute;
    this->m_trusted_credentials_attribute_isSet = true;
}


bool
OAIComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(path != nullptr && path->isSet()){ isObjectUpdated = true; break;}
        if(service_ranking != nullptr && service_ranking->isSet()){ isObjectUpdated = true; break;}
        if(jaas_control_flag != nullptr && jaas_control_flag->isSet()){ isObjectUpdated = true; break;}
        if(jaas_realm_name != nullptr && jaas_realm_name->isSet()){ isObjectUpdated = true; break;}
        if(jaas_ranking != nullptr && jaas_ranking->isSet()){ isObjectUpdated = true; break;}
        if(headers != nullptr && headers->isSet()){ isObjectUpdated = true; break;}
        if(cookies != nullptr && cookies->isSet()){ isObjectUpdated = true; break;}
        if(parameters != nullptr && parameters->isSet()){ isObjectUpdated = true; break;}
        if(usermap != nullptr && usermap->isSet()){ isObjectUpdated = true; break;}
        if(format != nullptr && format->isSet()){ isObjectUpdated = true; break;}
        if(trusted_credentials_attribute != nullptr && trusted_credentials_attribute->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

