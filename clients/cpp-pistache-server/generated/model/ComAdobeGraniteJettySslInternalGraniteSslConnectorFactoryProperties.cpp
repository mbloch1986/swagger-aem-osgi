/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties()
{
    m_Com_adobe_granite_jetty_ssl_portIsSet = false;
    m_Com_adobe_granite_jetty_ssl_keystore_userIsSet = false;
    m_Com_adobe_granite_jetty_ssl_keystore_passwordIsSet = false;
    m_Com_adobe_granite_jetty_ssl_ciphersuites_excludedIsSet = false;
    m_Com_adobe_granite_jetty_ssl_ciphersuites_includedIsSet = false;
    m_Com_adobe_granite_jetty_ssl_client_certificateIsSet = false;
    
}

ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::~ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties()
{
}

void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Com_adobe_granite_jetty_ssl_portIsSet)
    {
        val["com.adobe.granite.jetty.ssl.port"] = ModelBase::toJson(m_Com_adobe_granite_jetty_ssl_port);
    }
    if(m_Com_adobe_granite_jetty_ssl_keystore_userIsSet)
    {
        val["com.adobe.granite.jetty.ssl.keystore.user"] = ModelBase::toJson(m_Com_adobe_granite_jetty_ssl_keystore_user);
    }
    if(m_Com_adobe_granite_jetty_ssl_keystore_passwordIsSet)
    {
        val["com.adobe.granite.jetty.ssl.keystore.password"] = ModelBase::toJson(m_Com_adobe_granite_jetty_ssl_keystore_password);
    }
    if(m_Com_adobe_granite_jetty_ssl_ciphersuites_excludedIsSet)
    {
        val["com.adobe.granite.jetty.ssl.ciphersuites.excluded"] = ModelBase::toJson(m_Com_adobe_granite_jetty_ssl_ciphersuites_excluded);
    }
    if(m_Com_adobe_granite_jetty_ssl_ciphersuites_includedIsSet)
    {
        val["com.adobe.granite.jetty.ssl.ciphersuites.included"] = ModelBase::toJson(m_Com_adobe_granite_jetty_ssl_ciphersuites_included);
    }
    if(m_Com_adobe_granite_jetty_ssl_client_certificateIsSet)
    {
        val["com.adobe.granite.jetty.ssl.client.certificate"] = ModelBase::toJson(m_Com_adobe_granite_jetty_ssl_client_certificate);
    }
    

    return val;
}

void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::fromJson(nlohmann::json& val)
{
    if(val.find("com.adobe.granite.jetty.ssl.port") != val.end())
    {
        if(!val["com.adobe.granite.jetty.ssl.port"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["com.adobe.granite.jetty.ssl.port"]);
            setComAdobeGraniteJettySslPort( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.jetty.ssl.keystore.user") != val.end())
    {
        if(!val["com.adobe.granite.jetty.ssl.keystore.user"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.jetty.ssl.keystore.user"]);
            setComAdobeGraniteJettySslKeystoreUser( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.jetty.ssl.keystore.password") != val.end())
    {
        if(!val["com.adobe.granite.jetty.ssl.keystore.password"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["com.adobe.granite.jetty.ssl.keystore.password"]);
            setComAdobeGraniteJettySslKeystorePassword( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.jetty.ssl.ciphersuites.excluded") != val.end())
    {
        if(!val["com.adobe.granite.jetty.ssl.ciphersuites.excluded"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["com.adobe.granite.jetty.ssl.ciphersuites.excluded"]);
            setComAdobeGraniteJettySslCiphersuitesExcluded( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.jetty.ssl.ciphersuites.included") != val.end())
    {
        if(!val["com.adobe.granite.jetty.ssl.ciphersuites.included"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["com.adobe.granite.jetty.ssl.ciphersuites.included"]);
            setComAdobeGraniteJettySslCiphersuitesIncluded( newItem );
        }
        
    }
    if(val.find("com.adobe.granite.jetty.ssl.client.certificate") != val.end())
    {
        if(!val["com.adobe.granite.jetty.ssl.client.certificate"].is_null())
        {
            ConfigNodePropertyDropDown newItem;
            newItem.fromJson(val["com.adobe.granite.jetty.ssl.client.certificate"]);
            setComAdobeGraniteJettySslClientCertificate( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslPort() const
{
    return m_Com_adobe_granite_jetty_ssl_port;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslPort(ConfigNodePropertyInteger const& value)
{
    m_Com_adobe_granite_jetty_ssl_port = value;
    m_Com_adobe_granite_jetty_ssl_portIsSet = true;
}
bool ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::comAdobeGraniteJettySslPortIsSet() const
{
    return m_Com_adobe_granite_jetty_ssl_portIsSet;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::unsetCom_adobe_granite_jetty_ssl_port()
{
    m_Com_adobe_granite_jetty_ssl_portIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslKeystoreUser() const
{
    return m_Com_adobe_granite_jetty_ssl_keystore_user;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslKeystoreUser(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_jetty_ssl_keystore_user = value;
    m_Com_adobe_granite_jetty_ssl_keystore_userIsSet = true;
}
bool ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::comAdobeGraniteJettySslKeystoreUserIsSet() const
{
    return m_Com_adobe_granite_jetty_ssl_keystore_userIsSet;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::unsetCom_adobe_granite_jetty_ssl_keystore_user()
{
    m_Com_adobe_granite_jetty_ssl_keystore_userIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslKeystorePassword() const
{
    return m_Com_adobe_granite_jetty_ssl_keystore_password;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslKeystorePassword(ConfigNodePropertyString const& value)
{
    m_Com_adobe_granite_jetty_ssl_keystore_password = value;
    m_Com_adobe_granite_jetty_ssl_keystore_passwordIsSet = true;
}
bool ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::comAdobeGraniteJettySslKeystorePasswordIsSet() const
{
    return m_Com_adobe_granite_jetty_ssl_keystore_passwordIsSet;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::unsetCom_adobe_granite_jetty_ssl_keystore_password()
{
    m_Com_adobe_granite_jetty_ssl_keystore_passwordIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslCiphersuitesExcluded() const
{
    return m_Com_adobe_granite_jetty_ssl_ciphersuites_excluded;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslCiphersuitesExcluded(ConfigNodePropertyArray const& value)
{
    m_Com_adobe_granite_jetty_ssl_ciphersuites_excluded = value;
    m_Com_adobe_granite_jetty_ssl_ciphersuites_excludedIsSet = true;
}
bool ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::comAdobeGraniteJettySslCiphersuitesExcludedIsSet() const
{
    return m_Com_adobe_granite_jetty_ssl_ciphersuites_excludedIsSet;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::unsetCom_adobe_granite_jetty_ssl_ciphersuites_excluded()
{
    m_Com_adobe_granite_jetty_ssl_ciphersuites_excludedIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslCiphersuitesIncluded() const
{
    return m_Com_adobe_granite_jetty_ssl_ciphersuites_included;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslCiphersuitesIncluded(ConfigNodePropertyArray const& value)
{
    m_Com_adobe_granite_jetty_ssl_ciphersuites_included = value;
    m_Com_adobe_granite_jetty_ssl_ciphersuites_includedIsSet = true;
}
bool ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::comAdobeGraniteJettySslCiphersuitesIncludedIsSet() const
{
    return m_Com_adobe_granite_jetty_ssl_ciphersuites_includedIsSet;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::unsetCom_adobe_granite_jetty_ssl_ciphersuites_included()
{
    m_Com_adobe_granite_jetty_ssl_ciphersuites_includedIsSet = false;
}
ConfigNodePropertyDropDown ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslClientCertificate() const
{
    return m_Com_adobe_granite_jetty_ssl_client_certificate;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslClientCertificate(ConfigNodePropertyDropDown const& value)
{
    m_Com_adobe_granite_jetty_ssl_client_certificate = value;
    m_Com_adobe_granite_jetty_ssl_client_certificateIsSet = true;
}
bool ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::comAdobeGraniteJettySslClientCertificateIsSet() const
{
    return m_Com_adobe_granite_jetty_ssl_client_certificateIsSet;
}
void ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::unsetCom_adobe_granite_jetty_ssl_client_certificate()
{
    m_Com_adobe_granite_jetty_ssl_client_certificateIsSet = false;
}

}
}
}
}

