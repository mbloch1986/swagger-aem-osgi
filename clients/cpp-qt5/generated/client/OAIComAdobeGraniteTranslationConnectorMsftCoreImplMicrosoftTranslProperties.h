/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties_H_
#define OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties: public OAIObject {
public:
    OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties();
    OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties(QString json);
    ~OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getTranslationFactory();
    void setTranslationFactory(OAIConfigNodePropertyString* translation_factory);

    OAIConfigNodePropertyString* getDefaultConnectorLabel();
    void setDefaultConnectorLabel(OAIConfigNodePropertyString* default_connector_label);

    OAIConfigNodePropertyString* getDefaultConnectorAttribution();
    void setDefaultConnectorAttribution(OAIConfigNodePropertyString* default_connector_attribution);

    OAIConfigNodePropertyString* getDefaultConnectorWorkspaceId();
    void setDefaultConnectorWorkspaceId(OAIConfigNodePropertyString* default_connector_workspace_id);

    OAIConfigNodePropertyString* getDefaultConnectorSubscriptionKey();
    void setDefaultConnectorSubscriptionKey(OAIConfigNodePropertyString* default_connector_subscription_key);

    OAIConfigNodePropertyString* getLanguageMapLocation();
    void setLanguageMapLocation(OAIConfigNodePropertyString* language_map_location);

    OAIConfigNodePropertyString* getCategoryMapLocation();
    void setCategoryMapLocation(OAIConfigNodePropertyString* category_map_location);

    OAIConfigNodePropertyInteger* getRetryAttempts();
    void setRetryAttempts(OAIConfigNodePropertyInteger* retry_attempts);

    OAIConfigNodePropertyInteger* getTimeoutCount();
    void setTimeoutCount(OAIConfigNodePropertyInteger* timeout_count);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* translation_factory;
    bool m_translation_factory_isSet;

    OAIConfigNodePropertyString* default_connector_label;
    bool m_default_connector_label_isSet;

    OAIConfigNodePropertyString* default_connector_attribution;
    bool m_default_connector_attribution_isSet;

    OAIConfigNodePropertyString* default_connector_workspace_id;
    bool m_default_connector_workspace_id_isSet;

    OAIConfigNodePropertyString* default_connector_subscription_key;
    bool m_default_connector_subscription_key_isSet;

    OAIConfigNodePropertyString* language_map_location;
    bool m_language_map_location_isSet;

    OAIConfigNodePropertyString* category_map_location;
    bool m_category_map_location_isSet;

    OAIConfigNodePropertyInteger* retry_attempts;
    bool m_retry_attempts_isSet;

    OAIConfigNodePropertyInteger* timeout_count;
    bool m_timeout_count_isSet;

};

}

#endif /* OAIComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties_H_ */
