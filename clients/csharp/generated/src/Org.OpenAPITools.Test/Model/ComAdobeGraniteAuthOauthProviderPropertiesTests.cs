/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ComAdobeGraniteAuthOauthProviderProperties
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ComAdobeGraniteAuthOauthProviderPropertiesTests
    {
        // TODO uncomment below to declare an instance variable for ComAdobeGraniteAuthOauthProviderProperties
        //private ComAdobeGraniteAuthOauthProviderProperties instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ComAdobeGraniteAuthOauthProviderProperties
            //instance = new ComAdobeGraniteAuthOauthProviderProperties();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ComAdobeGraniteAuthOauthProviderProperties
        /// </summary>
        [Test]
        public void ComAdobeGraniteAuthOauthProviderPropertiesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ComAdobeGraniteAuthOauthProviderProperties
            //Assert.IsInstanceOfType<ComAdobeGraniteAuthOauthProviderProperties> (instance, "variable 'instance' is a ComAdobeGraniteAuthOauthProviderProperties");
        }


        /// <summary>
        /// Test the property 'OauthConfigId'
        /// </summary>
        [Test]
        public void OauthConfigIdTest()
        {
            // TODO unit test for the property 'OauthConfigId'
        }
        /// <summary>
        /// Test the property 'OauthClientId'
        /// </summary>
        [Test]
        public void OauthClientIdTest()
        {
            // TODO unit test for the property 'OauthClientId'
        }
        /// <summary>
        /// Test the property 'OauthClientSecret'
        /// </summary>
        [Test]
        public void OauthClientSecretTest()
        {
            // TODO unit test for the property 'OauthClientSecret'
        }
        /// <summary>
        /// Test the property 'OauthScope'
        /// </summary>
        [Test]
        public void OauthScopeTest()
        {
            // TODO unit test for the property 'OauthScope'
        }
        /// <summary>
        /// Test the property 'OauthConfigProviderId'
        /// </summary>
        [Test]
        public void OauthConfigProviderIdTest()
        {
            // TODO unit test for the property 'OauthConfigProviderId'
        }
        /// <summary>
        /// Test the property 'OauthCreateUsers'
        /// </summary>
        [Test]
        public void OauthCreateUsersTest()
        {
            // TODO unit test for the property 'OauthCreateUsers'
        }
        /// <summary>
        /// Test the property 'OauthUseridProperty'
        /// </summary>
        [Test]
        public void OauthUseridPropertyTest()
        {
            // TODO unit test for the property 'OauthUseridProperty'
        }
        /// <summary>
        /// Test the property 'ForceStrictUsernameMatching'
        /// </summary>
        [Test]
        public void ForceStrictUsernameMatchingTest()
        {
            // TODO unit test for the property 'ForceStrictUsernameMatching'
        }
        /// <summary>
        /// Test the property 'OauthEncodeUserids'
        /// </summary>
        [Test]
        public void OauthEncodeUseridsTest()
        {
            // TODO unit test for the property 'OauthEncodeUserids'
        }
        /// <summary>
        /// Test the property 'OauthHashUserids'
        /// </summary>
        [Test]
        public void OauthHashUseridsTest()
        {
            // TODO unit test for the property 'OauthHashUserids'
        }
        /// <summary>
        /// Test the property 'OauthCallBackUrl'
        /// </summary>
        [Test]
        public void OauthCallBackUrlTest()
        {
            // TODO unit test for the property 'OauthCallBackUrl'
        }
        /// <summary>
        /// Test the property 'OauthAccessTokenPersist'
        /// </summary>
        [Test]
        public void OauthAccessTokenPersistTest()
        {
            // TODO unit test for the property 'OauthAccessTokenPersist'
        }
        /// <summary>
        /// Test the property 'OauthAccessTokenPersistCookie'
        /// </summary>
        [Test]
        public void OauthAccessTokenPersistCookieTest()
        {
            // TODO unit test for the property 'OauthAccessTokenPersistCookie'
        }
        /// <summary>
        /// Test the property 'OauthCsrfStateProtection'
        /// </summary>
        [Test]
        public void OauthCsrfStateProtectionTest()
        {
            // TODO unit test for the property 'OauthCsrfStateProtection'
        }
        /// <summary>
        /// Test the property 'OauthRedirectRequestParams'
        /// </summary>
        [Test]
        public void OauthRedirectRequestParamsTest()
        {
            // TODO unit test for the property 'OauthRedirectRequestParams'
        }
        /// <summary>
        /// Test the property 'OauthConfigSiblingsAllow'
        /// </summary>
        [Test]
        public void OauthConfigSiblingsAllowTest()
        {
            // TODO unit test for the property 'OauthConfigSiblingsAllow'
        }

    }

}
