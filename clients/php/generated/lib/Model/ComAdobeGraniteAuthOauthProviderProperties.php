<?php
/**
 * ComAdobeGraniteAuthOauthProviderProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ComAdobeGraniteAuthOauthProviderProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ComAdobeGraniteAuthOauthProviderProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'comAdobeGraniteAuthOauthProviderProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'oauth_config_id' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_client_id' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_client_secret' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_scope' => '\OpenAPI\Client\Model\ConfigNodePropertyArray',
        'oauth_config_provider_id' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_create_users' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'oauth_userid_property' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'force_strict_username_matching' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'oauth_encode_userids' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'oauth_hash_userids' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'oauth_call_back_url' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'oauth_access_token_persist' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'oauth_access_token_persist_cookie' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'oauth_csrf_state_protection' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'oauth_redirect_request_params' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'oauth_config_siblings_allow' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'oauth_config_id' => null,
        'oauth_client_id' => null,
        'oauth_client_secret' => null,
        'oauth_scope' => null,
        'oauth_config_provider_id' => null,
        'oauth_create_users' => null,
        'oauth_userid_property' => null,
        'force_strict_username_matching' => null,
        'oauth_encode_userids' => null,
        'oauth_hash_userids' => null,
        'oauth_call_back_url' => null,
        'oauth_access_token_persist' => null,
        'oauth_access_token_persist_cookie' => null,
        'oauth_csrf_state_protection' => null,
        'oauth_redirect_request_params' => null,
        'oauth_config_siblings_allow' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'oauth_config_id' => 'oauth.config.id',
        'oauth_client_id' => 'oauth.client.id',
        'oauth_client_secret' => 'oauth.client.secret',
        'oauth_scope' => 'oauth.scope',
        'oauth_config_provider_id' => 'oauth.config.provider.id',
        'oauth_create_users' => 'oauth.create.users',
        'oauth_userid_property' => 'oauth.userid.property',
        'force_strict_username_matching' => 'force.strict.username.matching',
        'oauth_encode_userids' => 'oauth.encode.userids',
        'oauth_hash_userids' => 'oauth.hash.userids',
        'oauth_call_back_url' => 'oauth.callBackUrl',
        'oauth_access_token_persist' => 'oauth.access.token.persist',
        'oauth_access_token_persist_cookie' => 'oauth.access.token.persist.cookie',
        'oauth_csrf_state_protection' => 'oauth.csrf.state.protection',
        'oauth_redirect_request_params' => 'oauth.redirect.request.params',
        'oauth_config_siblings_allow' => 'oauth.config.siblings.allow'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'oauth_config_id' => 'setOauthConfigId',
        'oauth_client_id' => 'setOauthClientId',
        'oauth_client_secret' => 'setOauthClientSecret',
        'oauth_scope' => 'setOauthScope',
        'oauth_config_provider_id' => 'setOauthConfigProviderId',
        'oauth_create_users' => 'setOauthCreateUsers',
        'oauth_userid_property' => 'setOauthUseridProperty',
        'force_strict_username_matching' => 'setForceStrictUsernameMatching',
        'oauth_encode_userids' => 'setOauthEncodeUserids',
        'oauth_hash_userids' => 'setOauthHashUserids',
        'oauth_call_back_url' => 'setOauthCallBackUrl',
        'oauth_access_token_persist' => 'setOauthAccessTokenPersist',
        'oauth_access_token_persist_cookie' => 'setOauthAccessTokenPersistCookie',
        'oauth_csrf_state_protection' => 'setOauthCsrfStateProtection',
        'oauth_redirect_request_params' => 'setOauthRedirectRequestParams',
        'oauth_config_siblings_allow' => 'setOauthConfigSiblingsAllow'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'oauth_config_id' => 'getOauthConfigId',
        'oauth_client_id' => 'getOauthClientId',
        'oauth_client_secret' => 'getOauthClientSecret',
        'oauth_scope' => 'getOauthScope',
        'oauth_config_provider_id' => 'getOauthConfigProviderId',
        'oauth_create_users' => 'getOauthCreateUsers',
        'oauth_userid_property' => 'getOauthUseridProperty',
        'force_strict_username_matching' => 'getForceStrictUsernameMatching',
        'oauth_encode_userids' => 'getOauthEncodeUserids',
        'oauth_hash_userids' => 'getOauthHashUserids',
        'oauth_call_back_url' => 'getOauthCallBackUrl',
        'oauth_access_token_persist' => 'getOauthAccessTokenPersist',
        'oauth_access_token_persist_cookie' => 'getOauthAccessTokenPersistCookie',
        'oauth_csrf_state_protection' => 'getOauthCsrfStateProtection',
        'oauth_redirect_request_params' => 'getOauthRedirectRequestParams',
        'oauth_config_siblings_allow' => 'getOauthConfigSiblingsAllow'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['oauth_config_id'] = isset($data['oauth_config_id']) ? $data['oauth_config_id'] : null;
        $this->container['oauth_client_id'] = isset($data['oauth_client_id']) ? $data['oauth_client_id'] : null;
        $this->container['oauth_client_secret'] = isset($data['oauth_client_secret']) ? $data['oauth_client_secret'] : null;
        $this->container['oauth_scope'] = isset($data['oauth_scope']) ? $data['oauth_scope'] : null;
        $this->container['oauth_config_provider_id'] = isset($data['oauth_config_provider_id']) ? $data['oauth_config_provider_id'] : null;
        $this->container['oauth_create_users'] = isset($data['oauth_create_users']) ? $data['oauth_create_users'] : null;
        $this->container['oauth_userid_property'] = isset($data['oauth_userid_property']) ? $data['oauth_userid_property'] : null;
        $this->container['force_strict_username_matching'] = isset($data['force_strict_username_matching']) ? $data['force_strict_username_matching'] : null;
        $this->container['oauth_encode_userids'] = isset($data['oauth_encode_userids']) ? $data['oauth_encode_userids'] : null;
        $this->container['oauth_hash_userids'] = isset($data['oauth_hash_userids']) ? $data['oauth_hash_userids'] : null;
        $this->container['oauth_call_back_url'] = isset($data['oauth_call_back_url']) ? $data['oauth_call_back_url'] : null;
        $this->container['oauth_access_token_persist'] = isset($data['oauth_access_token_persist']) ? $data['oauth_access_token_persist'] : null;
        $this->container['oauth_access_token_persist_cookie'] = isset($data['oauth_access_token_persist_cookie']) ? $data['oauth_access_token_persist_cookie'] : null;
        $this->container['oauth_csrf_state_protection'] = isset($data['oauth_csrf_state_protection']) ? $data['oauth_csrf_state_protection'] : null;
        $this->container['oauth_redirect_request_params'] = isset($data['oauth_redirect_request_params']) ? $data['oauth_redirect_request_params'] : null;
        $this->container['oauth_config_siblings_allow'] = isset($data['oauth_config_siblings_allow']) ? $data['oauth_config_siblings_allow'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets oauth_config_id
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthConfigId()
    {
        return $this->container['oauth_config_id'];
    }

    /**
     * Sets oauth_config_id
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_config_id oauth_config_id
     *
     * @return $this
     */
    public function setOauthConfigId($oauth_config_id)
    {
        $this->container['oauth_config_id'] = $oauth_config_id;

        return $this;
    }

    /**
     * Gets oauth_client_id
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthClientId()
    {
        return $this->container['oauth_client_id'];
    }

    /**
     * Sets oauth_client_id
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_client_id oauth_client_id
     *
     * @return $this
     */
    public function setOauthClientId($oauth_client_id)
    {
        $this->container['oauth_client_id'] = $oauth_client_id;

        return $this;
    }

    /**
     * Gets oauth_client_secret
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthClientSecret()
    {
        return $this->container['oauth_client_secret'];
    }

    /**
     * Sets oauth_client_secret
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_client_secret oauth_client_secret
     *
     * @return $this
     */
    public function setOauthClientSecret($oauth_client_secret)
    {
        $this->container['oauth_client_secret'] = $oauth_client_secret;

        return $this;
    }

    /**
     * Gets oauth_scope
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyArray|null
     */
    public function getOauthScope()
    {
        return $this->container['oauth_scope'];
    }

    /**
     * Sets oauth_scope
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyArray|null $oauth_scope oauth_scope
     *
     * @return $this
     */
    public function setOauthScope($oauth_scope)
    {
        $this->container['oauth_scope'] = $oauth_scope;

        return $this;
    }

    /**
     * Gets oauth_config_provider_id
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthConfigProviderId()
    {
        return $this->container['oauth_config_provider_id'];
    }

    /**
     * Sets oauth_config_provider_id
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_config_provider_id oauth_config_provider_id
     *
     * @return $this
     */
    public function setOauthConfigProviderId($oauth_config_provider_id)
    {
        $this->container['oauth_config_provider_id'] = $oauth_config_provider_id;

        return $this;
    }

    /**
     * Gets oauth_create_users
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOauthCreateUsers()
    {
        return $this->container['oauth_create_users'];
    }

    /**
     * Sets oauth_create_users
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $oauth_create_users oauth_create_users
     *
     * @return $this
     */
    public function setOauthCreateUsers($oauth_create_users)
    {
        $this->container['oauth_create_users'] = $oauth_create_users;

        return $this;
    }

    /**
     * Gets oauth_userid_property
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthUseridProperty()
    {
        return $this->container['oauth_userid_property'];
    }

    /**
     * Sets oauth_userid_property
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_userid_property oauth_userid_property
     *
     * @return $this
     */
    public function setOauthUseridProperty($oauth_userid_property)
    {
        $this->container['oauth_userid_property'] = $oauth_userid_property;

        return $this;
    }

    /**
     * Gets force_strict_username_matching
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getForceStrictUsernameMatching()
    {
        return $this->container['force_strict_username_matching'];
    }

    /**
     * Sets force_strict_username_matching
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $force_strict_username_matching force_strict_username_matching
     *
     * @return $this
     */
    public function setForceStrictUsernameMatching($force_strict_username_matching)
    {
        $this->container['force_strict_username_matching'] = $force_strict_username_matching;

        return $this;
    }

    /**
     * Gets oauth_encode_userids
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOauthEncodeUserids()
    {
        return $this->container['oauth_encode_userids'];
    }

    /**
     * Sets oauth_encode_userids
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $oauth_encode_userids oauth_encode_userids
     *
     * @return $this
     */
    public function setOauthEncodeUserids($oauth_encode_userids)
    {
        $this->container['oauth_encode_userids'] = $oauth_encode_userids;

        return $this;
    }

    /**
     * Gets oauth_hash_userids
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOauthHashUserids()
    {
        return $this->container['oauth_hash_userids'];
    }

    /**
     * Sets oauth_hash_userids
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $oauth_hash_userids oauth_hash_userids
     *
     * @return $this
     */
    public function setOauthHashUserids($oauth_hash_userids)
    {
        $this->container['oauth_hash_userids'] = $oauth_hash_userids;

        return $this;
    }

    /**
     * Gets oauth_call_back_url
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getOauthCallBackUrl()
    {
        return $this->container['oauth_call_back_url'];
    }

    /**
     * Sets oauth_call_back_url
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $oauth_call_back_url oauth_call_back_url
     *
     * @return $this
     */
    public function setOauthCallBackUrl($oauth_call_back_url)
    {
        $this->container['oauth_call_back_url'] = $oauth_call_back_url;

        return $this;
    }

    /**
     * Gets oauth_access_token_persist
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOauthAccessTokenPersist()
    {
        return $this->container['oauth_access_token_persist'];
    }

    /**
     * Sets oauth_access_token_persist
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $oauth_access_token_persist oauth_access_token_persist
     *
     * @return $this
     */
    public function setOauthAccessTokenPersist($oauth_access_token_persist)
    {
        $this->container['oauth_access_token_persist'] = $oauth_access_token_persist;

        return $this;
    }

    /**
     * Gets oauth_access_token_persist_cookie
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOauthAccessTokenPersistCookie()
    {
        return $this->container['oauth_access_token_persist_cookie'];
    }

    /**
     * Sets oauth_access_token_persist_cookie
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $oauth_access_token_persist_cookie oauth_access_token_persist_cookie
     *
     * @return $this
     */
    public function setOauthAccessTokenPersistCookie($oauth_access_token_persist_cookie)
    {
        $this->container['oauth_access_token_persist_cookie'] = $oauth_access_token_persist_cookie;

        return $this;
    }

    /**
     * Gets oauth_csrf_state_protection
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOauthCsrfStateProtection()
    {
        return $this->container['oauth_csrf_state_protection'];
    }

    /**
     * Sets oauth_csrf_state_protection
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $oauth_csrf_state_protection oauth_csrf_state_protection
     *
     * @return $this
     */
    public function setOauthCsrfStateProtection($oauth_csrf_state_protection)
    {
        $this->container['oauth_csrf_state_protection'] = $oauth_csrf_state_protection;

        return $this;
    }

    /**
     * Gets oauth_redirect_request_params
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOauthRedirectRequestParams()
    {
        return $this->container['oauth_redirect_request_params'];
    }

    /**
     * Sets oauth_redirect_request_params
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $oauth_redirect_request_params oauth_redirect_request_params
     *
     * @return $this
     */
    public function setOauthRedirectRequestParams($oauth_redirect_request_params)
    {
        $this->container['oauth_redirect_request_params'] = $oauth_redirect_request_params;

        return $this;
    }

    /**
     * Gets oauth_config_siblings_allow
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getOauthConfigSiblingsAllow()
    {
        return $this->container['oauth_config_siblings_allow'];
    }

    /**
     * Sets oauth_config_siblings_allow
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $oauth_config_siblings_allow oauth_config_siblings_allow
     *
     * @return $this
     */
    public function setOauthConfigSiblingsAllow($oauth_config_siblings_allow)
    {
        $this->container['oauth_config_siblings_allow'] = $oauth_config_siblings_allow;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


