/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties() {
    this->init();
}

OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::~OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties() {
    
}

void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::init() {
    m_oauth_cookie_login_timeout_isSet = false;
    m_oauth_cookie_max_age_isSet = false;
}

void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(oauth_cookie_login_timeout, json[QString("oauth.cookie.login.timeout")]);
    
    ::OpenAPI::fromJsonValue(oauth_cookie_max_age, json[QString("oauth.cookie.max.age")]);
    
}

QString
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::asJsonObject() const {
    QJsonObject obj;
	if(oauth_cookie_login_timeout.isSet()){
        obj.insert(QString("oauth.cookie.login.timeout"), ::OpenAPI::toJsonValue(oauth_cookie_login_timeout));
    }
	if(oauth_cookie_max_age.isSet()){
        obj.insert(QString("oauth.cookie.max.age"), ::OpenAPI::toJsonValue(oauth_cookie_max_age));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::getOauthCookieLoginTimeout() const {
    return oauth_cookie_login_timeout;
}
void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::setOauthCookieLoginTimeout(const OAIConfigNodePropertyString &oauth_cookie_login_timeout) {
    this->oauth_cookie_login_timeout = oauth_cookie_login_timeout;
    this->m_oauth_cookie_login_timeout_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::getOauthCookieMaxAge() const {
    return oauth_cookie_max_age;
}
void
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::setOauthCookieMaxAge(const OAIConfigNodePropertyString &oauth_cookie_max_age) {
    this->oauth_cookie_max_age = oauth_cookie_max_age;
    this->m_oauth_cookie_max_age_isSet = true;
}


bool
OAIComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(oauth_cookie_login_timeout.isSet()){ isObjectUpdated = true; break;}
    
        if(oauth_cookie_max_age.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

