/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqMcmCampaignImplIntegrationConfigImplProperties {
  #[serde(rename = "aem.mcm.campaign.formConstraints")]
  aem_mcm_campaign_form_constraints: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "aem.mcm.campaign.publicUrl")]
  aem_mcm_campaign_public_url: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "aem.mcm.campaign.relaxedSSL")]
  aem_mcm_campaign_relaxed_ssl: Option<::models::ConfigNodePropertyBoolean>
}

impl ComDayCqMcmCampaignImplIntegrationConfigImplProperties {
  pub fn new() -> ComDayCqMcmCampaignImplIntegrationConfigImplProperties {
    ComDayCqMcmCampaignImplIntegrationConfigImplProperties {
      aem_mcm_campaign_form_constraints: None,
      aem_mcm_campaign_public_url: None,
      aem_mcm_campaign_relaxed_ssl: None
    }
  }

  pub fn set_aem_mcm_campaign_form_constraints(&mut self, aem_mcm_campaign_form_constraints: ::models::ConfigNodePropertyArray) {
    self.aem_mcm_campaign_form_constraints = Some(aem_mcm_campaign_form_constraints);
  }

  pub fn with_aem_mcm_campaign_form_constraints(mut self, aem_mcm_campaign_form_constraints: ::models::ConfigNodePropertyArray) -> ComDayCqMcmCampaignImplIntegrationConfigImplProperties {
    self.aem_mcm_campaign_form_constraints = Some(aem_mcm_campaign_form_constraints);
    self
  }

  pub fn aem_mcm_campaign_form_constraints(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.aem_mcm_campaign_form_constraints.as_ref()
  }

  pub fn reset_aem_mcm_campaign_form_constraints(&mut self) {
    self.aem_mcm_campaign_form_constraints = None;
  }

  pub fn set_aem_mcm_campaign_public_url(&mut self, aem_mcm_campaign_public_url: ::models::ConfigNodePropertyString) {
    self.aem_mcm_campaign_public_url = Some(aem_mcm_campaign_public_url);
  }

  pub fn with_aem_mcm_campaign_public_url(mut self, aem_mcm_campaign_public_url: ::models::ConfigNodePropertyString) -> ComDayCqMcmCampaignImplIntegrationConfigImplProperties {
    self.aem_mcm_campaign_public_url = Some(aem_mcm_campaign_public_url);
    self
  }

  pub fn aem_mcm_campaign_public_url(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.aem_mcm_campaign_public_url.as_ref()
  }

  pub fn reset_aem_mcm_campaign_public_url(&mut self) {
    self.aem_mcm_campaign_public_url = None;
  }

  pub fn set_aem_mcm_campaign_relaxed_ssl(&mut self, aem_mcm_campaign_relaxed_ssl: ::models::ConfigNodePropertyBoolean) {
    self.aem_mcm_campaign_relaxed_ssl = Some(aem_mcm_campaign_relaxed_ssl);
  }

  pub fn with_aem_mcm_campaign_relaxed_ssl(mut self, aem_mcm_campaign_relaxed_ssl: ::models::ConfigNodePropertyBoolean) -> ComDayCqMcmCampaignImplIntegrationConfigImplProperties {
    self.aem_mcm_campaign_relaxed_ssl = Some(aem_mcm_campaign_relaxed_ssl);
    self
  }

  pub fn aem_mcm_campaign_relaxed_ssl(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.aem_mcm_campaign_relaxed_ssl.as_ref()
  }

  pub fn reset_aem_mcm_campaign_relaxed_ssl(&mut self) {
    self.aem_mcm_campaign_relaxed_ssl = None;
  }

}



