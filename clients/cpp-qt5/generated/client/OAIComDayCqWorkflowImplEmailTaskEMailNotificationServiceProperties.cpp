/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties() {
    init();
}

OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::~OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties() {
    this->cleanup();
}

void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::init() {
    notify_onupdate = new OAIConfigNodePropertyBoolean();
    m_notify_onupdate_isSet = false;
    notify_oncomplete = new OAIConfigNodePropertyBoolean();
    m_notify_oncomplete_isSet = false;
}

void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::cleanup() {
    if(notify_onupdate != nullptr) { 
        delete notify_onupdate;
    }
    if(notify_oncomplete != nullptr) { 
        delete notify_oncomplete;
    }
}

OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties*
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&notify_onupdate, pJson["notify.onupdate"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&notify_oncomplete, pJson["notify.oncomplete"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::asJsonObject() {
    QJsonObject obj;
    if((notify_onupdate != nullptr) && (notify_onupdate->isSet())){
        toJsonValue(QString("notify.onupdate"), notify_onupdate, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((notify_oncomplete != nullptr) && (notify_oncomplete->isSet())){
        toJsonValue(QString("notify.oncomplete"), notify_oncomplete, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::getNotifyOnupdate() {
    return notify_onupdate;
}
void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::setNotifyOnupdate(OAIConfigNodePropertyBoolean* notify_onupdate) {
    this->notify_onupdate = notify_onupdate;
    this->m_notify_onupdate_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::getNotifyOncomplete() {
    return notify_oncomplete;
}
void
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::setNotifyOncomplete(OAIConfigNodePropertyBoolean* notify_oncomplete) {
    this->notify_oncomplete = notify_oncomplete;
    this->m_notify_oncomplete_isSet = true;
}


bool
OAIComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(notify_onupdate != nullptr && notify_onupdate->isSet()){ isObjectUpdated = true; break;}
        if(notify_oncomplete != nullptr && notify_oncomplete->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

