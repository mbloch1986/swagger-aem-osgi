/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComDayCqDamIdsImplIDSJobProcessorProperties {
  
  @SerializedName("enable.multisession")
  private ConfigNodePropertyBoolean enableMultisession = null;
  @SerializedName("ids.cc.enable")
  private ConfigNodePropertyBoolean idsCcEnable = null;
  @SerializedName("enable.retry")
  private ConfigNodePropertyBoolean enableRetry = null;
  @SerializedName("enable.retry.scripterror")
  private ConfigNodePropertyBoolean enableRetryScripterror = null;
  @SerializedName("externalizer.domain.cqhost")
  private ConfigNodePropertyString externalizerDomainCqhost = null;
  @SerializedName("externalizer.domain.http")
  private ConfigNodePropertyString externalizerDomainHttp = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getEnableMultisession() {
    return enableMultisession;
  }
  public void setEnableMultisession(ConfigNodePropertyBoolean enableMultisession) {
    this.enableMultisession = enableMultisession;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getIdsCcEnable() {
    return idsCcEnable;
  }
  public void setIdsCcEnable(ConfigNodePropertyBoolean idsCcEnable) {
    this.idsCcEnable = idsCcEnable;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getEnableRetry() {
    return enableRetry;
  }
  public void setEnableRetry(ConfigNodePropertyBoolean enableRetry) {
    this.enableRetry = enableRetry;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getEnableRetryScripterror() {
    return enableRetryScripterror;
  }
  public void setEnableRetryScripterror(ConfigNodePropertyBoolean enableRetryScripterror) {
    this.enableRetryScripterror = enableRetryScripterror;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getExternalizerDomainCqhost() {
    return externalizerDomainCqhost;
  }
  public void setExternalizerDomainCqhost(ConfigNodePropertyString externalizerDomainCqhost) {
    this.externalizerDomainCqhost = externalizerDomainCqhost;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getExternalizerDomainHttp() {
    return externalizerDomainHttp;
  }
  public void setExternalizerDomainHttp(ConfigNodePropertyString externalizerDomainHttp) {
    this.externalizerDomainHttp = externalizerDomainHttp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComDayCqDamIdsImplIDSJobProcessorProperties comDayCqDamIdsImplIDSJobProcessorProperties = (ComDayCqDamIdsImplIDSJobProcessorProperties) o;
    return (this.enableMultisession == null ? comDayCqDamIdsImplIDSJobProcessorProperties.enableMultisession == null : this.enableMultisession.equals(comDayCqDamIdsImplIDSJobProcessorProperties.enableMultisession)) &&
        (this.idsCcEnable == null ? comDayCqDamIdsImplIDSJobProcessorProperties.idsCcEnable == null : this.idsCcEnable.equals(comDayCqDamIdsImplIDSJobProcessorProperties.idsCcEnable)) &&
        (this.enableRetry == null ? comDayCqDamIdsImplIDSJobProcessorProperties.enableRetry == null : this.enableRetry.equals(comDayCqDamIdsImplIDSJobProcessorProperties.enableRetry)) &&
        (this.enableRetryScripterror == null ? comDayCqDamIdsImplIDSJobProcessorProperties.enableRetryScripterror == null : this.enableRetryScripterror.equals(comDayCqDamIdsImplIDSJobProcessorProperties.enableRetryScripterror)) &&
        (this.externalizerDomainCqhost == null ? comDayCqDamIdsImplIDSJobProcessorProperties.externalizerDomainCqhost == null : this.externalizerDomainCqhost.equals(comDayCqDamIdsImplIDSJobProcessorProperties.externalizerDomainCqhost)) &&
        (this.externalizerDomainHttp == null ? comDayCqDamIdsImplIDSJobProcessorProperties.externalizerDomainHttp == null : this.externalizerDomainHttp.equals(comDayCqDamIdsImplIDSJobProcessorProperties.externalizerDomainHttp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.enableMultisession == null ? 0: this.enableMultisession.hashCode());
    result = 31 * result + (this.idsCcEnable == null ? 0: this.idsCcEnable.hashCode());
    result = 31 * result + (this.enableRetry == null ? 0: this.enableRetry.hashCode());
    result = 31 * result + (this.enableRetryScripterror == null ? 0: this.enableRetryScripterror.hashCode());
    result = 31 * result + (this.externalizerDomainCqhost == null ? 0: this.externalizerDomainCqhost.hashCode());
    result = 31 * result + (this.externalizerDomainHttp == null ? 0: this.externalizerDomainHttp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComDayCqDamIdsImplIDSJobProcessorProperties {\n");
    
    sb.append("  enableMultisession: ").append(enableMultisession).append("\n");
    sb.append("  idsCcEnable: ").append(idsCcEnable).append("\n");
    sb.append("  enableRetry: ").append(enableRetry).append("\n");
    sb.append("  enableRetryScripterror: ").append(enableRetryScripterror).append("\n");
    sb.append("  externalizerDomainCqhost: ").append(externalizerDomainCqhost).append("\n");
    sb.append("  externalizerDomainHttp: ").append(externalizerDomainHttp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
