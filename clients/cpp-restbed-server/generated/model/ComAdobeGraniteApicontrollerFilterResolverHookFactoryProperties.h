/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties.h
 *
 * 
 */

#ifndef ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties_H_
#define ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties_H_



#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties
{
public:
    ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties();
    virtual ~ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCdnCdnRewriter() const;
    void setComAdobeCqCdnCdnRewriter(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCloudConfigComponents() const;
    void setComAdobeCqCloudConfigComponents(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCloudConfigCore() const;
    void setComAdobeCqCloudConfigCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCloudConfigUi() const;
    void setComAdobeCqCloudConfigUi(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqComAdobeCqEditor() const;
    void setComAdobeCqComAdobeCqEditor(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqComAdobeCqProjectsCore() const;
    void setComAdobeCqComAdobeCqProjectsCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqComAdobeCqProjectsWcmCore() const;
    void setComAdobeCqComAdobeCqProjectsWcmCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqComAdobeCqUiCommons() const;
    void setComAdobeCqComAdobeCqUiCommons(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqComAdobeCqWcmStyle() const;
    void setComAdobeCqComAdobeCqWcmStyle(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCqActivitymapIntegration() const;
    void setComAdobeCqCqActivitymapIntegration(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCqContexthubCommons() const;
    void setComAdobeCqCqContexthubCommons(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCqDtm() const;
    void setComAdobeCqCqDtm(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCqHealthcheck() const;
    void setComAdobeCqCqHealthcheck(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCqMultisiteTargeting() const;
    void setComAdobeCqCqMultisiteTargeting(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCqPreUpgradeCleanup() const;
    void setComAdobeCqCqPreUpgradeCleanup(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCqProductInfoProvider() const;
    void setComAdobeCqCqProductInfoProvider(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCqRestSites() const;
    void setComAdobeCqCqRestSites(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqCqSecurityHc() const;
    void setComAdobeCqCqSecurityHc(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqDamCqDamSvgHandler() const;
    void setComAdobeCqDamCqDamSvgHandler(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqDamCqScene7Imaging() const;
    void setComAdobeCqDamCqScene7Imaging(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqDtmReactorCore() const;
    void setComAdobeCqDtmReactorCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqDtmReactorUi() const;
    void setComAdobeCqDtmReactorUi(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqExpJspelResolver() const;
    void setComAdobeCqExpJspelResolver(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqInboxCqInbox() const;
    void setComAdobeCqInboxCqInbox(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqJsonSchemaParser() const;
    void setComAdobeCqJsonSchemaParser(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqMediaCqMediaPublishingDpsFpCore() const;
    void setComAdobeCqMediaCqMediaPublishingDpsFpCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqMobileCqMobileCaas() const;
    void setComAdobeCqMobileCqMobileCaas(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqMobileCqMobileIndexBuilder() const;
    void setComAdobeCqMobileCqMobileIndexBuilder(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqMobileCqMobilePhonegapBuild() const;
    void setComAdobeCqMobileCqMobilePhonegapBuild(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqMyspell() const;
    void setComAdobeCqMyspell(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSampleWeRetailCore() const;
    void setComAdobeCqSampleWeRetailCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqScreensComAdobeCqScreensDcc() const;
    void setComAdobeCqScreensComAdobeCqScreensDcc(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqScreensComAdobeCqScreensMqCore() const;
    void setComAdobeCqScreensComAdobeCqScreensMqCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialAsProvider() const;
    void setComAdobeCqSocialCqSocialAsProvider(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialBadgingBasicImpl() const;
    void setComAdobeCqSocialCqSocialBadgingBasicImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialBadgingImpl() const;
    void setComAdobeCqSocialCqSocialBadgingImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialCalendarImpl() const;
    void setComAdobeCqSocialCqSocialCalendarImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialContentFragmentsImpl() const;
    void setComAdobeCqSocialCqSocialContentFragmentsImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialEnablementImpl() const;
    void setComAdobeCqSocialCqSocialEnablementImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialGraphImpl() const;
    void setComAdobeCqSocialCqSocialGraphImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialIdeationImpl() const;
    void setComAdobeCqSocialCqSocialIdeationImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialJcrProvider() const;
    void setComAdobeCqSocialCqSocialJcrProvider(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialMembersImpl() const;
    void setComAdobeCqSocialCqSocialMembersImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialMsProvider() const;
    void setComAdobeCqSocialCqSocialMsProvider(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialNotificationsChannelsWeb() const;
    void setComAdobeCqSocialCqSocialNotificationsChannelsWeb(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialNotificationsImpl() const;
    void setComAdobeCqSocialCqSocialNotificationsImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialRdbProvider() const;
    void setComAdobeCqSocialCqSocialRdbProvider(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialScfImpl() const;
    void setComAdobeCqSocialCqSocialScfImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialScoringBasicImpl() const;
    void setComAdobeCqSocialCqSocialScoringBasicImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialScoringImpl() const;
    void setComAdobeCqSocialCqSocialScoringImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialServiceusersImpl() const;
    void setComAdobeCqSocialCqSocialServiceusersImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialSrpImpl() const;
    void setComAdobeCqSocialCqSocialSrpImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqSocialCqSocialUgcbaseImpl() const;
    void setComAdobeCqSocialCqSocialUgcbaseImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeDamCqDamCfmImpl() const;
    void setComAdobeDamCqDamCfmImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeFormsFoundationFormsFoundationBase() const;
    void setComAdobeFormsFoundationFormsFoundationBase(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteApicontroller() const;
    void setComAdobeGraniteApicontroller(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteAssetCore() const;
    void setComAdobeGraniteAssetCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteAuthSso() const;
    void setComAdobeGraniteAuthSso(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteBundlesHcImpl() const;
    void setComAdobeGraniteBundlesHcImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteCompatRouter() const;
    void setComAdobeGraniteCompatRouter(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteConf() const;
    void setComAdobeGraniteConf(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteConfUiCore() const;
    void setComAdobeGraniteConfUiCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteCors() const;
    void setComAdobeGraniteCors(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteCrxExplorer() const;
    void setComAdobeGraniteCrxExplorer(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteCrxdeLite() const;
    void setComAdobeGraniteCrxdeLite(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteCryptoConfig() const;
    void setComAdobeGraniteCryptoConfig(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteCryptoExtension() const;
    void setComAdobeGraniteCryptoExtension(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteCryptoFile() const;
    void setComAdobeGraniteCryptoFile(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteCryptoJcr() const;
    void setComAdobeGraniteCryptoJcr(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteCsrf() const;
    void setComAdobeGraniteCsrf(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteDistributionCore() const;
    void setComAdobeGraniteDistributionCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteDropwizardMetrics() const;
    void setComAdobeGraniteDropwizardMetrics(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteFragsImpl() const;
    void setComAdobeGraniteFragsImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteGibson() const;
    void setComAdobeGraniteGibson(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteInfocollector() const;
    void setComAdobeGraniteInfocollector(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteInstallerFactoryPackages() const;
    void setComAdobeGraniteInstallerFactoryPackages(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteJettySsl() const;
    void setComAdobeGraniteJettySsl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteJobsAsync() const;
    void setComAdobeGraniteJobsAsync(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteMaintenanceOak() const;
    void setComAdobeGraniteMaintenanceOak(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteMonitoringCore() const;
    void setComAdobeGraniteMonitoringCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteQueries() const;
    void setComAdobeGraniteQueries(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteReplicationHcImpl() const;
    void setComAdobeGraniteReplicationHcImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteRepositoryChecker() const;
    void setComAdobeGraniteRepositoryChecker(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteRepositoryHcImpl() const;
    void setComAdobeGraniteRepositoryHcImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteRestAssets() const;
    void setComAdobeGraniteRestAssets(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteSecurityUi() const;
    void setComAdobeGraniteSecurityUi(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteStartup() const;
    void setComAdobeGraniteStartup(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteTagsoup() const;
    void setComAdobeGraniteTagsoup(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteTaskmanagementCore() const;
    void setComAdobeGraniteTaskmanagementCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteTaskmanagementWorkflow() const;
    void setComAdobeGraniteTaskmanagementWorkflow(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteUiClientlibsCompilerLess() const;
    void setComAdobeGraniteUiClientlibsCompilerLess(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteUiClientlibsProcessorGcc() const;
    void setComAdobeGraniteUiClientlibsProcessorGcc(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteWebconsolePlugins() const;
    void setComAdobeGraniteWebconsolePlugins(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeGraniteWorkflowConsole() const;
    void setComAdobeGraniteWorkflowConsole(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeXmpWorkerFilesNativeFragmentLinux() const;
    void setComAdobeXmpWorkerFilesNativeFragmentLinux(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeXmpWorkerFilesNativeFragmentMacosx() const;
    void setComAdobeXmpWorkerFilesNativeFragmentMacosx(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeXmpWorkerFilesNativeFragmentWin() const;
    void setComAdobeXmpWorkerFilesNativeFragmentWin(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCommonsOsgiWrapperSimpleJndi() const;
    void setComDayCommonsOsgiWrapperSimpleJndi(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqCqAuthhandler() const;
    void setComDayCqCqAuthhandler(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqCqCompatConfigupdate() const;
    void setComDayCqCqCompatConfigupdate(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqCqLicensebranding() const;
    void setComDayCqCqLicensebranding(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqCqNotifcationImpl() const;
    void setComDayCqCqNotifcationImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqCqReplicationAudit() const;
    void setComDayCqCqReplicationAudit(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqCqSearchExt() const;
    void setComDayCqCqSearchExt(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqDamCqDamAnnotationPrint() const;
    void setComDayCqDamCqDamAnnotationPrint(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqDamCqDamAssetUsage() const;
    void setComDayCqDamCqDamAssetUsage(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqDamCqDamS7dam() const;
    void setComDayCqDamCqDamS7dam(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqDamCqDamSimilaritysearch() const;
    void setComDayCqDamCqDamSimilaritysearch(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqDamDamWebdavSupport() const;
    void setComDayCqDamDamWebdavSupport(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqPreUpgradeTasks() const;
    void setComDayCqPreUpgradeTasks(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqReplicationExtensions() const;
    void setComDayCqReplicationExtensions(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqWcmCqMsmCore() const;
    void setComDayCqWcmCqMsmCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComDayCqWcmCqWcmTranslation() const;
    void setComDayCqWcmCqWcmTranslation(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDayCommonsJrawio() const;
    void setDayCommonsJrawio(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheAriesJmxWhiteboard() const;
    void setOrgApacheAriesJmxWhiteboard(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixHttpSslfilter() const;
    void setOrgApacheFelixHttpSslfilter(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixOrgApacheFelixThreaddump() const;
    void setOrgApacheFelixOrgApacheFelixThreaddump(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixWebconsolePluginsDs() const;
    void setOrgApacheFelixWebconsolePluginsDs(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixWebconsolePluginsEvent() const;
    void setOrgApacheFelixWebconsolePluginsEvent(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixWebconsolePluginsMemoryusage() const;
    void setOrgApacheFelixWebconsolePluginsMemoryusage(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheFelixWebconsolePluginsPackageadmin() const;
    void setOrgApacheFelixWebconsolePluginsPackageadmin(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheJackrabbitOakAuthLdap() const;
    void setOrgApacheJackrabbitOakAuthLdap(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheJackrabbitOakSegmentTar() const;
    void setOrgApacheJackrabbitOakSegmentTar(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheJackrabbitOakSolrOsgi() const;
    void setOrgApacheJackrabbitOakSolrOsgi(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingBundleresourceImpl() const;
    void setOrgApacheSlingBundleresourceImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingCommonsFsclassloader() const;
    void setOrgApacheSlingCommonsFsclassloader(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingCommonsLogWebconsole() const;
    void setOrgApacheSlingCommonsLogWebconsole(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingDatasource() const;
    void setOrgApacheSlingDatasource(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingDiscoveryBase() const;
    void setOrgApacheSlingDiscoveryBase(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingDiscoveryOak() const;
    void setOrgApacheSlingDiscoveryOak(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingDiscoverySupport() const;
    void setOrgApacheSlingDiscoverySupport(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingDistributionApi() const;
    void setOrgApacheSlingDistributionApi(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingDistributionCore() const;
    void setOrgApacheSlingDistributionCore(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingExtensionsWebconsolesecurityprovider() const;
    void setOrgApacheSlingExtensionsWebconsolesecurityprovider(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingHcWebconsole() const;
    void setOrgApacheSlingHcWebconsole(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingInstallerConsole() const;
    void setOrgApacheSlingInstallerConsole(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingInstallerProviderFile() const;
    void setOrgApacheSlingInstallerProviderFile(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingInstallerProviderJcr() const;
    void setOrgApacheSlingInstallerProviderJcr(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingJcrDavex() const;
    void setOrgApacheSlingJcrDavex(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingJcrResourcesecurity() const;
    void setOrgApacheSlingJcrResourcesecurity(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingJmxProvider() const;
    void setOrgApacheSlingJmxProvider(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingLaunchpadInstaller() const;
    void setOrgApacheSlingLaunchpadInstaller(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingModelsImpl() const;
    void setOrgApacheSlingModelsImpl(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingRepoinitParser() const;
    void setOrgApacheSlingRepoinitParser(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingResourceInventory() const;
    void setOrgApacheSlingResourceInventory(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingResourceresolver() const;
    void setOrgApacheSlingResourceresolver(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingScriptingJavascript() const;
    void setOrgApacheSlingScriptingJavascript(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingScriptingJst() const;
    void setOrgApacheSlingScriptingJst(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingScriptingSightlyJsProvider() const;
    void setOrgApacheSlingScriptingSightlyJsProvider(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingScriptingSightlyModelsProvider() const;
    void setOrgApacheSlingScriptingSightlyModelsProvider(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingSecurity() const;
    void setOrgApacheSlingSecurity(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingServletsCompat() const;
    void setOrgApacheSlingServletsCompat(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingServletsGet() const;
    void setOrgApacheSlingServletsGet(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingStartupfilterDisabler() const;
    void setOrgApacheSlingStartupfilterDisabler(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOrgApacheSlingTracer() const;
    void setOrgApacheSlingTracer(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getWeRetailClientAppCore() const;
    void setWeRetailClientAppCore(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cdn_cdn_rewriter;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cloud_config_components;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cloud_config_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cloud_config_ui;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_com_adobe_cq_editor;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_com_adobe_cq_projects_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_com_adobe_cq_projects_wcm_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_com_adobe_cq_ui_commons;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_com_adobe_cq_wcm_style;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cq_activitymap_integration;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cq_contexthub_commons;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cq_dtm;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cq_healthcheck;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cq_multisite_targeting;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cq_pre_upgrade_cleanup;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cq_product_info_provider;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cq_rest_sites;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_cq_security_hc;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_dam_cq_dam_svg_handler;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_dam_cq_scene7_imaging;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_dtm_reactor_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_dtm_reactor_ui;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_exp_jspel_resolver;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_inbox_cq_inbox;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_json_schema_parser;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_media_cq_media_publishing_dps_fp_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_mobile_cq_mobile_caas;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_mobile_cq_mobile_index_builder;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_mobile_cq_mobile_phonegap_build;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_myspell;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_sample_we_retail_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_screens_com_adobe_cq_screens_dcc;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_screens_com_adobe_cq_screens_mq_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_as_provider;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_badging_basic_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_badging_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_calendar_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_content_fragments_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_enablement_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_graph_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_ideation_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_jcr_provider;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_members_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_ms_provider;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_notifications_channels_web;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_notifications_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_rdb_provider;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_scf_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_scoring_basic_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_scoring_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_serviceusers_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_srp_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_social_cq_social_ugcbase_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_dam_cq_dam_cfm_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_forms_foundation_forms_foundation_base;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_apicontroller;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_asset_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_auth_sso;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_bundles_hc_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_compat_router;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_conf;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_conf_ui_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_cors;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_crx_explorer;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_crxde_lite;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_crypto_config;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_crypto_extension;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_crypto_file;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_crypto_jcr;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_csrf;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_distribution_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_dropwizard_metrics;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_frags_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_gibson;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_infocollector;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_installer_factory_packages;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_jetty_ssl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_jobs_async;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_maintenance_oak;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_monitoring_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_queries;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_replication_hc_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_repository_checker;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_repository_hc_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_rest_assets;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_security_ui;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_startup;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_tagsoup;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_taskmanagement_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_taskmanagement_workflow;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_ui_clientlibs_compiler_less;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_ui_clientlibs_processor_gcc;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_webconsole_plugins;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_granite_workflow_console;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_xmp_worker_files_native_fragment_linux;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_xmp_worker_files_native_fragment_macosx;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_xmp_worker_files_native_fragment_win;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_commons_osgi_wrapper_simple_jndi;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_cq_authhandler;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_cq_compat_configupdate;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_cq_licensebranding;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_cq_notifcation_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_cq_replication_audit;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_cq_search_ext;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_dam_cq_dam_annotation_print;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_dam_cq_dam_asset_usage;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_dam_cq_dam_s7dam;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_dam_cq_dam_similaritysearch;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_dam_dam_webdav_support;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_pre_upgrade_tasks;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_replication_extensions;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_wcm_cq_msm_core;
    std::shared_ptr<ConfigNodePropertyString> m_Com_day_cq_wcm_cq_wcm_translation;
    std::shared_ptr<ConfigNodePropertyString> m_Day_commons_jrawio;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_aries_jmx_whiteboard;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_http_sslfilter;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_org_apache_felix_threaddump;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_webconsole_plugins_ds;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_webconsole_plugins_event;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_webconsole_plugins_memoryusage;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_felix_webconsole_plugins_packageadmin;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_jackrabbit_oak_auth_ldap;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_jackrabbit_oak_segment_tar;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_jackrabbit_oak_solr_osgi;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_bundleresource_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_commons_fsclassloader;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_commons_log_webconsole;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_datasource;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_discovery_base;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_discovery_oak;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_discovery_support;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_distribution_api;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_distribution_core;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_extensions_webconsolesecurityprovider;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_hc_webconsole;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_installer_console;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_installer_provider_file;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_installer_provider_jcr;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_jcr_davex;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_jcr_resourcesecurity;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_jmx_provider;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_launchpad_installer;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_models_impl;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_repoinit_parser;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_resource_inventory;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_resourceresolver;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_scripting_javascript;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_scripting_jst;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_scripting_sightly_js_provider;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_scripting_sightly_models_provider;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_security;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_servlets_compat;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_servlets_get;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_startupfilter_disabler;
    std::shared_ptr<ConfigNodePropertyString> m_Org_apache_sling_tracer;
    std::shared_ptr<ConfigNodePropertyString> m_We_retail_client_app_core;
};

}
}
}
}

#endif /* ComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties_H_ */
