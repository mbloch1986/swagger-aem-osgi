/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComDayCommonsHttpclientProperties.h
 *
 * 
 */

#ifndef ComDayCommonsHttpclientProperties_H_
#define ComDayCommonsHttpclientProperties_H_



#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCommonsHttpclientProperties
{
public:
    ComDayCommonsHttpclientProperties();
    virtual ~ComDayCommonsHttpclientProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComDayCommonsHttpclientProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getProxyEnabled() const;
    void setProxyEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getProxyHost() const;
    void setProxyHost(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getProxyUser() const;
    void setProxyUser(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getProxyPassword() const;
    void setProxyPassword(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getProxyNtlmHost() const;
    void setProxyNtlmHost(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getProxyNtlmDomain() const;
    void setProxyNtlmDomain(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getProxyExceptions() const;
    void setProxyExceptions(std::shared_ptr<ConfigNodePropertyArray> value);

protected:
    std::shared_ptr<ConfigNodePropertyBoolean> m_Proxy_enabled;
    std::shared_ptr<ConfigNodePropertyString> m_Proxy_host;
    std::shared_ptr<ConfigNodePropertyString> m_Proxy_user;
    std::shared_ptr<ConfigNodePropertyString> m_Proxy_password;
    std::shared_ptr<ConfigNodePropertyString> m_Proxy_ntlm_host;
    std::shared_ptr<ConfigNodePropertyString> m_Proxy_ntlm_domain;
    std::shared_ptr<ConfigNodePropertyArray> m_Proxy_exceptions;
};

}
}
}
}

#endif /* ComDayCommonsHttpclientProperties_H_ */
