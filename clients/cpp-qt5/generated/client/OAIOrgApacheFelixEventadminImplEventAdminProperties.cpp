/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheFelixEventadminImplEventAdminProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheFelixEventadminImplEventAdminProperties::OAIOrgApacheFelixEventadminImplEventAdminProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheFelixEventadminImplEventAdminProperties::OAIOrgApacheFelixEventadminImplEventAdminProperties() {
    init();
}

OAIOrgApacheFelixEventadminImplEventAdminProperties::~OAIOrgApacheFelixEventadminImplEventAdminProperties() {
    this->cleanup();
}

void
OAIOrgApacheFelixEventadminImplEventAdminProperties::init() {
    org_apache_felix_eventadmin_thread_pool_size = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_eventadmin_thread_pool_size_isSet = false;
    org_apache_felix_eventadmin_async_to_sync_thread_ratio = new OAIConfigNodePropertyFloat();
    m_org_apache_felix_eventadmin_async_to_sync_thread_ratio_isSet = false;
    org_apache_felix_eventadmin_timeout = new OAIConfigNodePropertyInteger();
    m_org_apache_felix_eventadmin_timeout_isSet = false;
    org_apache_felix_eventadmin_require_topic = new OAIConfigNodePropertyBoolean();
    m_org_apache_felix_eventadmin_require_topic_isSet = false;
    org_apache_felix_eventadmin_ignore_timeout = new OAIConfigNodePropertyArray();
    m_org_apache_felix_eventadmin_ignore_timeout_isSet = false;
    org_apache_felix_eventadmin_ignore_topic = new OAIConfigNodePropertyArray();
    m_org_apache_felix_eventadmin_ignore_topic_isSet = false;
}

void
OAIOrgApacheFelixEventadminImplEventAdminProperties::cleanup() {
    if(org_apache_felix_eventadmin_thread_pool_size != nullptr) { 
        delete org_apache_felix_eventadmin_thread_pool_size;
    }
    if(org_apache_felix_eventadmin_async_to_sync_thread_ratio != nullptr) { 
        delete org_apache_felix_eventadmin_async_to_sync_thread_ratio;
    }
    if(org_apache_felix_eventadmin_timeout != nullptr) { 
        delete org_apache_felix_eventadmin_timeout;
    }
    if(org_apache_felix_eventadmin_require_topic != nullptr) { 
        delete org_apache_felix_eventadmin_require_topic;
    }
    if(org_apache_felix_eventadmin_ignore_timeout != nullptr) { 
        delete org_apache_felix_eventadmin_ignore_timeout;
    }
    if(org_apache_felix_eventadmin_ignore_topic != nullptr) { 
        delete org_apache_felix_eventadmin_ignore_topic;
    }
}

OAIOrgApacheFelixEventadminImplEventAdminProperties*
OAIOrgApacheFelixEventadminImplEventAdminProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheFelixEventadminImplEventAdminProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&org_apache_felix_eventadmin_thread_pool_size, pJson["org.apache.felix.eventadmin.ThreadPoolSize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_eventadmin_async_to_sync_thread_ratio, pJson["org.apache.felix.eventadmin.AsyncToSyncThreadRatio"], "OAIConfigNodePropertyFloat", "OAIConfigNodePropertyFloat");
    
    ::OpenAPI::setValue(&org_apache_felix_eventadmin_timeout, pJson["org.apache.felix.eventadmin.Timeout"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_felix_eventadmin_require_topic, pJson["org.apache.felix.eventadmin.RequireTopic"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_felix_eventadmin_ignore_timeout, pJson["org.apache.felix.eventadmin.IgnoreTimeout"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&org_apache_felix_eventadmin_ignore_topic, pJson["org.apache.felix.eventadmin.IgnoreTopic"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIOrgApacheFelixEventadminImplEventAdminProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheFelixEventadminImplEventAdminProperties::asJsonObject() {
    QJsonObject obj;
    if((org_apache_felix_eventadmin_thread_pool_size != nullptr) && (org_apache_felix_eventadmin_thread_pool_size->isSet())){
        toJsonValue(QString("org.apache.felix.eventadmin.ThreadPoolSize"), org_apache_felix_eventadmin_thread_pool_size, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_eventadmin_async_to_sync_thread_ratio != nullptr) && (org_apache_felix_eventadmin_async_to_sync_thread_ratio->isSet())){
        toJsonValue(QString("org.apache.felix.eventadmin.AsyncToSyncThreadRatio"), org_apache_felix_eventadmin_async_to_sync_thread_ratio, obj, QString("OAIConfigNodePropertyFloat"));
    }
    if((org_apache_felix_eventadmin_timeout != nullptr) && (org_apache_felix_eventadmin_timeout->isSet())){
        toJsonValue(QString("org.apache.felix.eventadmin.Timeout"), org_apache_felix_eventadmin_timeout, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_felix_eventadmin_require_topic != nullptr) && (org_apache_felix_eventadmin_require_topic->isSet())){
        toJsonValue(QString("org.apache.felix.eventadmin.RequireTopic"), org_apache_felix_eventadmin_require_topic, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_felix_eventadmin_ignore_timeout != nullptr) && (org_apache_felix_eventadmin_ignore_timeout->isSet())){
        toJsonValue(QString("org.apache.felix.eventadmin.IgnoreTimeout"), org_apache_felix_eventadmin_ignore_timeout, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((org_apache_felix_eventadmin_ignore_topic != nullptr) && (org_apache_felix_eventadmin_ignore_topic->isSet())){
        toJsonValue(QString("org.apache.felix.eventadmin.IgnoreTopic"), org_apache_felix_eventadmin_ignore_topic, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixEventadminImplEventAdminProperties::getOrgApacheFelixEventadminThreadPoolSize() {
    return org_apache_felix_eventadmin_thread_pool_size;
}
void
OAIOrgApacheFelixEventadminImplEventAdminProperties::setOrgApacheFelixEventadminThreadPoolSize(OAIConfigNodePropertyInteger* org_apache_felix_eventadmin_thread_pool_size) {
    this->org_apache_felix_eventadmin_thread_pool_size = org_apache_felix_eventadmin_thread_pool_size;
    this->m_org_apache_felix_eventadmin_thread_pool_size_isSet = true;
}

OAIConfigNodePropertyFloat*
OAIOrgApacheFelixEventadminImplEventAdminProperties::getOrgApacheFelixEventadminAsyncToSyncThreadRatio() {
    return org_apache_felix_eventadmin_async_to_sync_thread_ratio;
}
void
OAIOrgApacheFelixEventadminImplEventAdminProperties::setOrgApacheFelixEventadminAsyncToSyncThreadRatio(OAIConfigNodePropertyFloat* org_apache_felix_eventadmin_async_to_sync_thread_ratio) {
    this->org_apache_felix_eventadmin_async_to_sync_thread_ratio = org_apache_felix_eventadmin_async_to_sync_thread_ratio;
    this->m_org_apache_felix_eventadmin_async_to_sync_thread_ratio_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheFelixEventadminImplEventAdminProperties::getOrgApacheFelixEventadminTimeout() {
    return org_apache_felix_eventadmin_timeout;
}
void
OAIOrgApacheFelixEventadminImplEventAdminProperties::setOrgApacheFelixEventadminTimeout(OAIConfigNodePropertyInteger* org_apache_felix_eventadmin_timeout) {
    this->org_apache_felix_eventadmin_timeout = org_apache_felix_eventadmin_timeout;
    this->m_org_apache_felix_eventadmin_timeout_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheFelixEventadminImplEventAdminProperties::getOrgApacheFelixEventadminRequireTopic() {
    return org_apache_felix_eventadmin_require_topic;
}
void
OAIOrgApacheFelixEventadminImplEventAdminProperties::setOrgApacheFelixEventadminRequireTopic(OAIConfigNodePropertyBoolean* org_apache_felix_eventadmin_require_topic) {
    this->org_apache_felix_eventadmin_require_topic = org_apache_felix_eventadmin_require_topic;
    this->m_org_apache_felix_eventadmin_require_topic_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixEventadminImplEventAdminProperties::getOrgApacheFelixEventadminIgnoreTimeout() {
    return org_apache_felix_eventadmin_ignore_timeout;
}
void
OAIOrgApacheFelixEventadminImplEventAdminProperties::setOrgApacheFelixEventadminIgnoreTimeout(OAIConfigNodePropertyArray* org_apache_felix_eventadmin_ignore_timeout) {
    this->org_apache_felix_eventadmin_ignore_timeout = org_apache_felix_eventadmin_ignore_timeout;
    this->m_org_apache_felix_eventadmin_ignore_timeout_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheFelixEventadminImplEventAdminProperties::getOrgApacheFelixEventadminIgnoreTopic() {
    return org_apache_felix_eventadmin_ignore_topic;
}
void
OAIOrgApacheFelixEventadminImplEventAdminProperties::setOrgApacheFelixEventadminIgnoreTopic(OAIConfigNodePropertyArray* org_apache_felix_eventadmin_ignore_topic) {
    this->org_apache_felix_eventadmin_ignore_topic = org_apache_felix_eventadmin_ignore_topic;
    this->m_org_apache_felix_eventadmin_ignore_topic_isSet = true;
}


bool
OAIOrgApacheFelixEventadminImplEventAdminProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(org_apache_felix_eventadmin_thread_pool_size != nullptr && org_apache_felix_eventadmin_thread_pool_size->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_eventadmin_async_to_sync_thread_ratio != nullptr && org_apache_felix_eventadmin_async_to_sync_thread_ratio->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_eventadmin_timeout != nullptr && org_apache_felix_eventadmin_timeout->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_eventadmin_require_topic != nullptr && org_apache_felix_eventadmin_require_topic->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_eventadmin_ignore_timeout != nullptr && org_apache_felix_eventadmin_ignore_timeout->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_felix_eventadmin_ignore_topic != nullptr && org_apache_felix_eventadmin_ignore_topic->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

