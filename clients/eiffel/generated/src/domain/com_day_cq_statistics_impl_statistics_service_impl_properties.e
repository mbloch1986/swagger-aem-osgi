note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_STATISTICS_IMPL_STATISTICS_SERVICE_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    scheduler_period: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    scheduler_concurrent: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    workspace: detachable CONFIG_NODE_PROPERTY_STRING 
      
    keywords_path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    async_entries: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_scheduler_period (a_name: like scheduler_period)
        -- Set 'scheduler_period' with 'a_name'.
      do
        scheduler_period := a_name
      ensure
        scheduler_period_set: scheduler_period = a_name		
      end

    set_scheduler_concurrent (a_name: like scheduler_concurrent)
        -- Set 'scheduler_concurrent' with 'a_name'.
      do
        scheduler_concurrent := a_name
      ensure
        scheduler_concurrent_set: scheduler_concurrent = a_name		
      end

    set_path (a_name: like path)
        -- Set 'path' with 'a_name'.
      do
        path := a_name
      ensure
        path_set: path = a_name		
      end

    set_workspace (a_name: like workspace)
        -- Set 'workspace' with 'a_name'.
      do
        workspace := a_name
      ensure
        workspace_set: workspace = a_name		
      end

    set_keywords_path (a_name: like keywords_path)
        -- Set 'keywords_path' with 'a_name'.
      do
        keywords_path := a_name
      ensure
        keywords_path_set: keywords_path = a_name		
      end

    set_async_entries (a_name: like async_entries)
        -- Set 'async_entries' with 'a_name'.
      do
        async_entries := a_name
      ensure
        async_entries_set: async_entries = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_STATISTICS_IMPL_STATISTICS_SERVICE_IMPL_PROPERTIES%N")
        if attached scheduler_period as l_scheduler_period then
          Result.append ("%Nscheduler_period:")
          Result.append (l_scheduler_period.out)
          Result.append ("%N")    
        end  
        if attached scheduler_concurrent as l_scheduler_concurrent then
          Result.append ("%Nscheduler_concurrent:")
          Result.append (l_scheduler_concurrent.out)
          Result.append ("%N")    
        end  
        if attached path as l_path then
          Result.append ("%Npath:")
          Result.append (l_path.out)
          Result.append ("%N")    
        end  
        if attached workspace as l_workspace then
          Result.append ("%Nworkspace:")
          Result.append (l_workspace.out)
          Result.append ("%N")    
        end  
        if attached keywords_path as l_keywords_path then
          Result.append ("%Nkeywords_path:")
          Result.append (l_keywords_path.out)
          Result.append ("%N")    
        end  
        if attached async_entries as l_async_entries then
          Result.append ("%Nasync_entries:")
          Result.append (l_async_entries.out)
          Result.append ("%N")    
        end  
      end
end


