/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteRepositoryServiceUserConfigurationProperties {
  #[serde(rename = "service.ranking")]
  service_ranking: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "serviceusers.simpleSubjectPopulation")]
  serviceusers_simple_subject_population: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "serviceusers.list")]
  serviceusers_list: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeGraniteRepositoryServiceUserConfigurationProperties {
  pub fn new() -> ComAdobeGraniteRepositoryServiceUserConfigurationProperties {
    ComAdobeGraniteRepositoryServiceUserConfigurationProperties {
      service_ranking: None,
      serviceusers_simple_subject_population: None,
      serviceusers_list: None
    }
  }

  pub fn set_service_ranking(&mut self, service_ranking: ::models::ConfigNodePropertyInteger) {
    self.service_ranking = Some(service_ranking);
  }

  pub fn with_service_ranking(mut self, service_ranking: ::models::ConfigNodePropertyInteger) -> ComAdobeGraniteRepositoryServiceUserConfigurationProperties {
    self.service_ranking = Some(service_ranking);
    self
  }

  pub fn service_ranking(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.service_ranking.as_ref()
  }

  pub fn reset_service_ranking(&mut self) {
    self.service_ranking = None;
  }

  pub fn set_serviceusers_simple_subject_population(&mut self, serviceusers_simple_subject_population: ::models::ConfigNodePropertyBoolean) {
    self.serviceusers_simple_subject_population = Some(serviceusers_simple_subject_population);
  }

  pub fn with_serviceusers_simple_subject_population(mut self, serviceusers_simple_subject_population: ::models::ConfigNodePropertyBoolean) -> ComAdobeGraniteRepositoryServiceUserConfigurationProperties {
    self.serviceusers_simple_subject_population = Some(serviceusers_simple_subject_population);
    self
  }

  pub fn serviceusers_simple_subject_population(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.serviceusers_simple_subject_population.as_ref()
  }

  pub fn reset_serviceusers_simple_subject_population(&mut self) {
    self.serviceusers_simple_subject_population = None;
  }

  pub fn set_serviceusers_list(&mut self, serviceusers_list: ::models::ConfigNodePropertyArray) {
    self.serviceusers_list = Some(serviceusers_list);
  }

  pub fn with_serviceusers_list(mut self, serviceusers_list: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteRepositoryServiceUserConfigurationProperties {
    self.serviceusers_list = Some(serviceusers_list);
    self
  }

  pub fn serviceusers_list(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.serviceusers_list.as_ref()
  }

  pub fn reset_serviceusers_list(&mut self) {
    self.serviceusers_list = None;
  }

}



