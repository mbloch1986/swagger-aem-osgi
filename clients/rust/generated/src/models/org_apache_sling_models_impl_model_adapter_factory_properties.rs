/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingModelsImplModelAdapterFactoryProperties {
  #[serde(rename = "osgi.http.whiteboard.listener")]
  osgi_http_whiteboard_listener: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "osgi.http.whiteboard.context.select")]
  osgi_http_whiteboard_context_select: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "max.recursion.depth")]
  max_recursion_depth: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cleanup.job.period")]
  cleanup_job_period: Option<::models::ConfigNodePropertyInteger>
}

impl OrgApacheSlingModelsImplModelAdapterFactoryProperties {
  pub fn new() -> OrgApacheSlingModelsImplModelAdapterFactoryProperties {
    OrgApacheSlingModelsImplModelAdapterFactoryProperties {
      osgi_http_whiteboard_listener: None,
      osgi_http_whiteboard_context_select: None,
      max_recursion_depth: None,
      cleanup_job_period: None
    }
  }

  pub fn set_osgi_http_whiteboard_listener(&mut self, osgi_http_whiteboard_listener: ::models::ConfigNodePropertyString) {
    self.osgi_http_whiteboard_listener = Some(osgi_http_whiteboard_listener);
  }

  pub fn with_osgi_http_whiteboard_listener(mut self, osgi_http_whiteboard_listener: ::models::ConfigNodePropertyString) -> OrgApacheSlingModelsImplModelAdapterFactoryProperties {
    self.osgi_http_whiteboard_listener = Some(osgi_http_whiteboard_listener);
    self
  }

  pub fn osgi_http_whiteboard_listener(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.osgi_http_whiteboard_listener.as_ref()
  }

  pub fn reset_osgi_http_whiteboard_listener(&mut self) {
    self.osgi_http_whiteboard_listener = None;
  }

  pub fn set_osgi_http_whiteboard_context_select(&mut self, osgi_http_whiteboard_context_select: ::models::ConfigNodePropertyString) {
    self.osgi_http_whiteboard_context_select = Some(osgi_http_whiteboard_context_select);
  }

  pub fn with_osgi_http_whiteboard_context_select(mut self, osgi_http_whiteboard_context_select: ::models::ConfigNodePropertyString) -> OrgApacheSlingModelsImplModelAdapterFactoryProperties {
    self.osgi_http_whiteboard_context_select = Some(osgi_http_whiteboard_context_select);
    self
  }

  pub fn osgi_http_whiteboard_context_select(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.osgi_http_whiteboard_context_select.as_ref()
  }

  pub fn reset_osgi_http_whiteboard_context_select(&mut self) {
    self.osgi_http_whiteboard_context_select = None;
  }

  pub fn set_max_recursion_depth(&mut self, max_recursion_depth: ::models::ConfigNodePropertyInteger) {
    self.max_recursion_depth = Some(max_recursion_depth);
  }

  pub fn with_max_recursion_depth(mut self, max_recursion_depth: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingModelsImplModelAdapterFactoryProperties {
    self.max_recursion_depth = Some(max_recursion_depth);
    self
  }

  pub fn max_recursion_depth(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.max_recursion_depth.as_ref()
  }

  pub fn reset_max_recursion_depth(&mut self) {
    self.max_recursion_depth = None;
  }

  pub fn set_cleanup_job_period(&mut self, cleanup_job_period: ::models::ConfigNodePropertyInteger) {
    self.cleanup_job_period = Some(cleanup_job_period);
  }

  pub fn with_cleanup_job_period(mut self, cleanup_job_period: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingModelsImplModelAdapterFactoryProperties {
    self.cleanup_job_period = Some(cleanup_job_period);
    self
  }

  pub fn cleanup_job_period(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cleanup_job_period.as_ref()
  }

  pub fn reset_cleanup_job_period(&mut self) {
    self.cleanup_job_period = None;
  }

}



