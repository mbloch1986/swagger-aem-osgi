'use strict';


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * showPlaceholder Boolean  (optional)
 * maximumCacheEntries Integer  (optional)
 * afPeriodscriptingPeriodcompatversion String  (optional)
 * makeFileNameUnique Boolean  (optional)
 * generatingCompliantData Boolean  (optional)
 * returns adaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo
 **/
exports.adaptiveFormAndInteractiveCommunicationWebChannelConfiguration = function(post,apply,_delete,action,Dollarlocation,propertylist,showPlaceholder,maximumCacheEntries,afPeriodscriptingPeriodcompatversion,makeFileNameUnique,generatingCompliantData) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "generatingCompliantData" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "showPlaceholder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "makeFileNameUnique" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "af.scripting.compatversion" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "maximumCacheEntries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fontList List  (optional)
 * returns adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo
 **/
exports.adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur = function(post,apply,_delete,action,Dollarlocation,propertylist,fontList) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fontList" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodanalyticsPeriodcomponentPeriodqueryPeriodcachePeriodsize Integer  (optional)
 * returns analyticsComponentQueryCacheServiceInfo
 **/
exports.analyticsComponentQueryCacheService = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodanalyticsPeriodcomponentPeriodqueryPeriodcachePeriodsize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.analytics.component.query.cache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * styleString String  (optional)
 * returns apacheSlingHealthCheckResultHTMLSerializerInfo
 **/
exports.apacheSlingHealthCheckResultHTMLSerializer = function(post,apply,_delete,action,Dollarlocation,propertylist,styleString) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "styleString" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * formsManagerConfigPeriodincludeOOTBTemplates Boolean  (optional)
 * formsManagerConfigPeriodincludeDeprecatedTemplates Boolean  (optional)
 * returns comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo
 **/
exports.comAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration = function(post,apply,_delete,action,Dollarlocation,propertylist,formsManagerConfigPeriodincludeOOTBTemplates,formsManagerConfigPeriodincludeDeprecatedTemplates) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "formsManagerConfig.includeDeprecatedTemplates" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "formsManagerConfig.includeOOTBTemplates" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * isTransactionRecordingEnabled Boolean  (optional)
 * returns comAdobeAemTransactionCoreImplTransactionRecorderInfo
 **/
exports.comAdobeAemTransactionCoreImplTransactionRecorder = function(post,apply,_delete,action,Dollarlocation,propertylist,isTransactionRecordingEnabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "isTransactionRecordingEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodname String  (optional)
 * hcPeriodtags List  (optional)
 * hcPeriodmbeanPeriodname String  (optional)
 * returns comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo
 **/
exports.comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodname,hcPeriodtags,hcPeriodmbeanPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.mbean.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodname String  (optional)
 * hcPeriodtags List  (optional)
 * hcPeriodmbeanPeriodname String  (optional)
 * returns comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo
 **/
exports.comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodname,hcPeriodtags,hcPeriodmbeanPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.mbean.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * preUpgradePeriodmaintenancePeriodtasks List  (optional)
 * preUpgradePeriodhcPeriodtags List  (optional)
 * returns comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo
 **/
exports.comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,preUpgradePeriodmaintenancePeriodtasks,preUpgradePeriodhcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "pre-upgrade.hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "pre-upgrade.maintenance.tasks" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * rootPeriodpath String  (optional)
 * fixPeriodinconsistencies Boolean  (optional)
 * returns comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo
 **/
exports.comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,rootPeriodpath,fixPeriodinconsistencies) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fix.inconsistencies" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "root.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodaccountmanagerPeriodtokenPeriodvalidityPeriodperiod Integer  (optional)
 * cqPeriodaccountmanagerPeriodconfigPeriodrequestnewaccountPeriodmail String  (optional)
 * cqPeriodaccountmanagerPeriodconfigPeriodrequestnewpwdPeriodmail String  (optional)
 * returns comAdobeCqAccountApiAccountManagementServiceInfo
 **/
exports.comAdobeCqAccountApiAccountManagementService = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodaccountmanagerPeriodtokenPeriodvalidityPeriodperiod,cqPeriodaccountmanagerPeriodconfigPeriodrequestnewaccountPeriodmail,cqPeriodaccountmanagerPeriodconfigPeriodrequestnewpwdPeriodmail) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "cq.accountmanager.config.requestnewaccount.mail" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.accountmanager.token.validity.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.accountmanager.config.requestnewpwd.mail" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodaccountmanagerPeriodconfigPeriodinformnewaccountPeriodmail String  (optional)
 * cqPeriodaccountmanagerPeriodconfigPeriodinformnewpwdPeriodmail String  (optional)
 * returns comAdobeCqAccountImplAccountManagementServletInfo
 **/
exports.comAdobeCqAccountImplAccountManagementServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodaccountmanagerPeriodconfigPeriodinformnewaccountPeriodmail,cqPeriodaccountmanagerPeriodconfigPeriodinformnewpwdPeriodmail) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.accountmanager.config.informnewaccount.mail" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.accountmanager.config.informnewpwd.mail" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodaddressPeriodlocationPerioddefaultPeriodmaxResults Integer  (optional)
 * returns comAdobeCqAddressImplLocationLocationListServletInfo
 **/
exports.comAdobeCqAddressImplLocationLocationListServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodaddressPeriodlocationPerioddefaultPeriodmaxResults) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.address.location.default.maxResults" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * auditlogPeriodrulePeriodname String  (optional)
 * auditlogPeriodrulePeriodcontentpath String  (optional)
 * auditlogPeriodrulePeriodminimumage Integer  (optional)
 * auditlogPeriodrulePeriodtypes String  (optional)
 * returns comAdobeCqAuditPurgeDamInfo
 **/
exports.comAdobeCqAuditPurgeDam = function(post,apply,_delete,action,Dollarlocation,propertylist,auditlogPeriodrulePeriodname,auditlogPeriodrulePeriodcontentpath,auditlogPeriodrulePeriodminimumage,auditlogPeriodrulePeriodtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "auditlog.rule.contentpath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auditlog.rule.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auditlog.rule.minimumage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "auditlog.rule.types" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * auditlogPeriodrulePeriodname String  (optional)
 * auditlogPeriodrulePeriodcontentpath String  (optional)
 * auditlogPeriodrulePeriodminimumage Integer  (optional)
 * auditlogPeriodrulePeriodtypes String  (optional)
 * returns comAdobeCqAuditPurgePagesInfo
 **/
exports.comAdobeCqAuditPurgePages = function(post,apply,_delete,action,Dollarlocation,propertylist,auditlogPeriodrulePeriodname,auditlogPeriodrulePeriodcontentpath,auditlogPeriodrulePeriodminimumage,auditlogPeriodrulePeriodtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "auditlog.rule.contentpath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auditlog.rule.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auditlog.rule.minimumage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "auditlog.rule.types" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * auditlogPeriodrulePeriodname String  (optional)
 * auditlogPeriodrulePeriodcontentpath String  (optional)
 * auditlogPeriodrulePeriodminimumage Integer  (optional)
 * auditlogPeriodrulePeriodtypes String  (optional)
 * returns comAdobeCqAuditPurgeReplicationInfo
 **/
exports.comAdobeCqAuditPurgeReplication = function(post,apply,_delete,action,Dollarlocation,propertylist,auditlogPeriodrulePeriodname,auditlogPeriodrulePeriodcontentpath,auditlogPeriodrulePeriodminimumage,auditlogPeriodrulePeriodtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "auditlog.rule.contentpath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auditlog.rule.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auditlog.rule.minimumage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "auditlog.rule.types" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * keypairPeriodid String  (optional)
 * keypairPeriodalias String  (optional)
 * cdnrewriterPeriodattributes List  (optional)
 * cdnPeriodrewriterPerioddistributionPerioddomain String  (optional)
 * returns comAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo
 **/
exports.comAdobeCqCdnRewriterImplAWSCloudFrontRewriter = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,keypairPeriodid,keypairPeriodalias,cdnrewriterPeriodattributes,cdnPeriodrewriterPerioddistributionPerioddomain) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "keypair.alias" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cdnrewriter.attributes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cdn.rewriter.distribution.domain" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "keypair.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cdnPeriodconfigPerioddistributionPerioddomain String  (optional)
 * cdnPeriodconfigPeriodenablePeriodrewriting Boolean  (optional)
 * cdnPeriodconfigPeriodpathPeriodprefixes List  (optional)
 * cdnPeriodconfigPeriodcdnttl Integer  (optional)
 * cdnPeriodconfigPeriodapplicationPeriodprotocol String  (optional)
 * returns comAdobeCqCdnRewriterImplCDNConfigServiceImplInfo
 **/
exports.comAdobeCqCdnRewriterImplCDNConfigServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cdnPeriodconfigPerioddistributionPerioddomain,cdnPeriodconfigPeriodenablePeriodrewriting,cdnPeriodconfigPeriodpathPeriodprefixes,cdnPeriodconfigPeriodcdnttl,cdnPeriodconfigPeriodapplicationPeriodprotocol) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cdn.config.distribution.domain" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cdn.config.path.prefixes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cdn.config.enable.rewriting" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cdn.config.cdnttl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cdn.config.application.protocol" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * cdnrewriterPeriodattributes List  (optional)
 * cdnPeriodrewriterPerioddistributionPerioddomain String  (optional)
 * returns comAdobeCqCdnRewriterImplCDNRewriterInfo
 **/
exports.comAdobeCqCdnRewriterImplCDNRewriter = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,cdnrewriterPeriodattributes,cdnPeriodrewriterPerioddistributionPerioddomain) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cdnrewriter.attributes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cdn.rewriter.distribution.domain" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * flushPeriodagents List  (optional)
 * returns comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo
 **/
exports.comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle = function(post,apply,_delete,action,Dollarlocation,propertylist,flushPeriodagents) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "flush.agents" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodcommercePeriodassetPeriodhandlerPeriodactive Boolean  (optional)
 * cqPeriodcommercePeriodassetPeriodhandlerPeriodname String  (optional)
 * returns comAdobeCqCommerceImplAssetDynamicImageHandlerInfo
 **/
exports.comAdobeCqCommerceImplAssetDynamicImageHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodcommercePeriodassetPeriodhandlerPeriodactive,cqPeriodcommercePeriodassetPeriodhandlerPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.commerce.asset.handler.active" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.commerce.asset.handler.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodcommercePeriodassetPeriodhandlerPeriodfallback String  (optional)
 * returns comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo
 **/
exports.comAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodcommercePeriodassetPeriodhandlerPeriodfallback) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.commerce.asset.handler.fallback" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodcommercePeriodassetPeriodhandlerPeriodactive Boolean  (optional)
 * cqPeriodcommercePeriodassetPeriodhandlerPeriodname String  (optional)
 * returns comAdobeCqCommerceImplAssetStaticImageHandlerInfo
 **/
exports.comAdobeCqCommerceImplAssetStaticImageHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodcommercePeriodassetPeriodhandlerPeriodactive,cqPeriodcommercePeriodassetPeriodhandlerPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.commerce.asset.handler.active" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.commerce.asset.handler.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodcommercePeriodassetPeriodhandlerPeriodactive Boolean  (optional)
 * cqPeriodcommercePeriodassetPeriodhandlerPeriodname String  (optional)
 * returns comAdobeCqCommerceImplAssetVideoHandlerInfo
 **/
exports.comAdobeCqCommerceImplAssetVideoHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodcommercePeriodassetPeriodhandlerPeriodactive,cqPeriodcommercePeriodassetPeriodhandlerPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.commerce.asset.handler.active" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.commerce.asset.handler.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodcommercePeriodpromotionPeriodroot String  (optional)
 * returns comAdobeCqCommerceImplPromotionPromotionManagerImplInfo
 **/
exports.comAdobeCqCommerceImplPromotionPromotionManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodcommercePeriodpromotionPeriodroot) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.commerce.promotion.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodcommercePeriodcataloggeneratorPeriodbucketsize Integer  (optional)
 * cqPeriodcommercePeriodcataloggeneratorPeriodbucketname String  (optional)
 * cqPeriodcommercePeriodcataloggeneratorPeriodexcludedtemplateproperties List  (optional)
 * returns comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo
 **/
exports.comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodcommercePeriodcataloggeneratorPeriodbucketsize,cqPeriodcommercePeriodcataloggeneratorPeriodbucketname,cqPeriodcommercePeriodcataloggeneratorPeriodexcludedtemplateproperties) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.commerce.cataloggenerator.bucketname" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.commerce.cataloggenerator.bucketsize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.commerce.cataloggenerator.excludedtemplateproperties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodcommercePeriodpageeventlistenerPeriodenabled Boolean  (optional)
 * returns comAdobeCqCommercePimImplPageEventListenerInfo
 **/
exports.comAdobeCqCommercePimImplPageEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodcommercePeriodpageeventlistenerPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.commerce.pageeventlistener.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * feed generator algorithm String  (optional)
 * returns comAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo
 **/
exports.comAdobeCqCommercePimImplProductfeedProductFeedServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,feed generator algorithm) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "Feed generator algorithm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * reportingservicesPeriodurl String  (optional)
 * returns comAdobeCqContentinsightImplReportingServicesSettingsProviderInfo
 **/
exports.comAdobeCqContentinsightImplReportingServicesSettingsProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,reportingservicesPeriodurl) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "reportingservices.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * brightedgePeriodurl String  (optional)
 * returns comAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo
 **/
exports.comAdobeCqContentinsightImplServletsBrightEdgeProxyServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,brightedgePeriodurl) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "brightedge.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * reportingservicesPeriodproxyPeriodwhitelist List  (optional)
 * returns comAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo
 **/
exports.comAdobeCqContentinsightImplServletsReportingServicesProxyServle = function(post,apply,_delete,action,Dollarlocation,propertylist,reportingservicesPeriodproxyPeriodwhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "reportingservices.proxy.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * damPeriodcfmPeriodcomponentPeriodresourceType String  (optional)
 * damPeriodcfmPeriodcomponentPeriodfileReferenceProp String  (optional)
 * damPeriodcfmPeriodcomponentPeriodelementsProp String  (optional)
 * damPeriodcfmPeriodcomponentPeriodvariationProp String  (optional)
 * returns comAdobeCqDamCfmImplComponentComponentConfigImplInfo
 **/
exports.comAdobeCqDamCfmImplComponentComponentConfigImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,damPeriodcfmPeriodcomponentPeriodresourceType,damPeriodcfmPeriodcomponentPeriodfileReferenceProp,damPeriodcfmPeriodcomponentPeriodelementsProp,damPeriodcfmPeriodcomponentPeriodvariationProp) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "dam.cfm.component.variationProp" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dam.cfm.component.fileReferenceProp" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dam.cfm.component.resourceType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dam.cfm.component.elementsProp" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * damPeriodcfmPeriodresourceTypes List  (optional)
 * damPeriodcfmPeriodreferenceProperties List  (optional)
 * returns comAdobeCqDamCfmImplConfFeatureConfigImplInfo
 **/
exports.comAdobeCqDamCfmImplConfFeatureConfigImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,damPeriodcfmPeriodresourceTypes,damPeriodcfmPeriodreferenceProperties) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "dam.cfm.referenceProperties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "dam.cfm.resourceTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * pipelinePeriodtype String  (optional)
 * returns comAdobeCqDamCfmImplContentRewriterAssetProcessorInfo
 **/
exports.comAdobeCqDamCfmImplContentRewriterAssetProcessor = function(post,apply,_delete,action,Dollarlocation,propertylist,pipelinePeriodtype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "pipeline.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * pipelinePeriodtype String  (optional)
 * returns comAdobeCqDamCfmImplContentRewriterParRangeFilterInfo
 **/
exports.comAdobeCqDamCfmImplContentRewriterParRangeFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,pipelinePeriodtype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "pipeline.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * pipelinePeriodtype String  (optional)
 * returns comAdobeCqDamCfmImplContentRewriterPayloadFilterInfo
 **/
exports.comAdobeCqDamCfmImplContentRewriterPayloadFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,pipelinePeriodtype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "pipeline.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxMemory Integer  (optional)
 * returns comAdobeCqDamDmProcessImagePTiffManagerImplInfo
 **/
exports.comAdobeCqDamDmProcessImagePTiffManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,maxMemory) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "maxMemory" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * dmreplicateonmodifyPeriodenabled Boolean  (optional)
 * dmreplicateonmodifyPeriodforcesyncdeletes Boolean  (optional)
 * returns comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo
 **/
exports.comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker = function(post,apply,_delete,action,Dollarlocation,propertylist,dmreplicateonmodifyPeriodenabled,dmreplicateonmodifyPeriodforcesyncdeletes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "dmreplicateonmodify.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "dmreplicateonmodify.forcesyncdeletes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePerioddamPeriodmacPeriodsyncPeriodclientPeriodsoPeriodtimeout Integer  (optional)
 * returns comAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo
 **/
exports.comAdobeCqDamMacSyncHelperImplMACSyncClientImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePerioddamPeriodmacPeriodsyncPeriodclientPeriodsoPeriodtimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.dam.mac.sync.client.so.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodregisteredUnderscorepaths List  (optional)
 * comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodsyncPeriodrenditions Boolean  (optional)
 * comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodreplicatePeriodthreadPeriodwaitPeriodms Integer  (optional)
 * comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodplatform String  (optional)
 * returns comAdobeCqDamMacSyncImplDAMSyncServiceImplInfo
 **/
exports.comAdobeCqDamMacSyncImplDAMSyncServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodregisteredUnderscorepaths,comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodsyncPeriodrenditions,comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodreplicatePeriodthreadPeriodwaitPeriodms,comPeriodadobePeriodcqPerioddamPeriodmacPeriodsyncPerioddamsyncservicePeriodplatform) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "com.adobe.cq.dam.mac.sync.damsyncservice.sync.renditions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "com.adobe.cq.dam.mac.sync.damsyncservice.platform" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "com.adobe.cq.dam.mac.sync.damsyncservice.registered_paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * nuiEnabled Boolean  (optional)
 * nuiServiceUrl String  (optional)
 * nuiApiKey String  (optional)
 * returns comAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo
 **/
exports.comAdobeCqDamProcessorNuiImplNuiAssetProcessor = function(post,apply,_delete,action,Dollarlocation,propertylist,nuiEnabled,nuiServiceUrl,nuiApiKey) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "nuiServiceUrl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "nuiApiKey" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "nuiEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * tcpPort String  (optional)
 * allowRemoteAccess Boolean  (optional)
 * maxRenderRgnPixels String  (optional)
 * maxMessageSize String  (optional)
 * randomAccessUrlTimeout Integer  (optional)
 * workerThreads Integer  (optional)
 * returns comAdobeCqDamS7imagingImplIsImageServerComponentInfo
 **/
exports.comAdobeCqDamS7imagingImplIsImageServerComponent = function(post,apply,_delete,action,Dollarlocation,propertylist,tcpPort,allowRemoteAccess,maxRenderRgnPixels,maxMessageSize,randomAccessUrlTimeout,workerThreads) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "MaxRenderRgnPixels" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "RandomAccessUrlTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "AllowRemoteAccess" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "TcpPort" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "MaxMessageSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "WorkerThreads" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cachePeriodenable Boolean  (optional)
 * cachePeriodrootPaths List  (optional)
 * cachePeriodmaxSize Integer  (optional)
 * cachePeriodmaxEntries Integer  (optional)
 * returns comAdobeCqDamS7imagingImplPsPlatformServerServletInfo
 **/
exports.comAdobeCqDamS7imagingImplPsPlatformServerServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cachePeriodenable,cachePeriodrootPaths,cachePeriodmaxSize,cachePeriodmaxEntries) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cache.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cache.rootPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cache.maxEntries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache.maxSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * pathPrefix String  (optional)
 * createVersion Boolean  (optional)
 * returns comAdobeCqDamWebdavImplIoAssetIOHandlerInfo
 **/
exports.comAdobeCqDamWebdavImplIoAssetIOHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,pathPrefix,createVersion) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "createVersion" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "pathPrefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodenable Boolean  (optional)
 * cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodschedulerPeriodperiod Integer  (optional)
 * cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodstagingPeriodtimeout Integer  (optional)
 * returns comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo
 **/
exports.comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodenable,cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodschedulerPeriodperiod,cqPerioddamPeriodwebdavPeriodversionPeriodlinkingPeriodstagingPeriodtimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.webdav.version.linking.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.dam.webdav.version.linking.scheduler.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.webdav.version.linking.staging.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPerioddayPeriodcqPerioddamPeriodcorePeriodimplPeriodioPeriodSpecialFilesHandlerPeriodfilepatters List  (optional)
 * returns comAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo
 **/
exports.comAdobeCqDamWebdavImplIoSpecialFilesHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,comPerioddayPeriodcqPerioddamPeriodcorePeriodimplPeriodioPeriodSpecialFilesHandlerPeriodfilepatters) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * firewallPerioddeserializationPeriodwhitelist List  (optional)
 * firewallPerioddeserializationPeriodblacklist List  (optional)
 * firewallPerioddeserializationPerioddiagnostics String  (optional)
 * returns comAdobeCqDeserfwImplDeserializationFirewallImplInfo
 **/
exports.comAdobeCqDeserfwImplDeserializationFirewallImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,firewallPerioddeserializationPeriodwhitelist,firewallPerioddeserializationPeriodblacklist,firewallPerioddeserializationPerioddiagnostics) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "firewall.deserialization.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "firewall.deserialization.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "firewall.deserialization.diagnostics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * connectionPeriodtimeout Integer  (optional)
 * socketPeriodtimeout Integer  (optional)
 * returns comAdobeCqDtmImplServiceDTMWebServiceImplInfo
 **/
exports.comAdobeCqDtmImplServiceDTMWebServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,connectionPeriodtimeout,socketPeriodtimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "connection.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "socket.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * dtmPeriodstagingPeriodipPeriodwhitelist List  (optional)
 * dtmPeriodproductionPeriodipPeriodwhitelist List  (optional)
 * returns comAdobeCqDtmImplServletsDTMDeployHookServletInfo
 **/
exports.comAdobeCqDtmImplServletsDTMDeployHookServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,dtmPeriodstagingPeriodipPeriodwhitelist,dtmPeriodproductionPeriodipPeriodwhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "dtm.staging.ip.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "dtm.production.ip.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * endpointUri String  (optional)
 * connectionTimeout Integer  (optional)
 * socketTimeout Integer  (optional)
 * returns comAdobeCqDtmReactorImplServiceWebServiceImplInfo
 **/
exports.comAdobeCqDtmReactorImplServiceWebServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,endpointUri,connectionTimeout,socketTimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "socketTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "endpointUri" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "connectionTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * disabledForGroups List  (optional)
 * returns comAdobeCqExperiencelogImplExperienceLogConfigServletInfo
 **/
exports.comAdobeCqExperiencelogImplExperienceLogConfigServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled,disabledForGroups) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "disabledForGroups" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodname String  (optional)
 * hcPeriodtags List  (optional)
 * hcPeriodmbeanPeriodname String  (optional)
 * packagePeriodnames List  (optional)
 * returns comAdobeCqHcContentPackagesHealthCheckInfo
 **/
exports.comAdobeCqHcContentPackagesHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodname,hcPeriodtags,hcPeriodmbeanPeriodname,packagePeriodnames) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "package.names" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.mbean.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * historyPeriodrequestFilterPeriodexcludedSelectors List  (optional)
 * historyPeriodrequestFilterPeriodexcludedExtensions List  (optional)
 * returns comAdobeCqHistoryImplHistoryRequestFilterInfo
 **/
exports.comAdobeCqHistoryImplHistoryRequestFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,historyPeriodrequestFilterPeriodexcludedSelectors,historyPeriodrequestFilterPeriodexcludedExtensions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "history.requestFilter.excludedExtensions" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "history.requestFilter.excludedSelectors" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * historyPeriodservicePeriodresourceTypes List  (optional)
 * historyPeriodservicePeriodpathFilter List  (optional)
 * returns comAdobeCqHistoryImplHistoryServiceImplInfo
 **/
exports.comAdobeCqHistoryImplHistoryServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,historyPeriodservicePeriodresourceTypes,historyPeriodservicePeriodpathFilter) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "history.service.resourceTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "history.service.pathFilter" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * inboxPeriodimplPeriodtypeproviderPeriodregistrypaths List  (optional)
 * inboxPeriodimplPeriodtypeproviderPeriodlegacypaths List  (optional)
 * inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodfailureitem String  (optional)
 * inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodworkitem String  (optional)
 * inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodtask String  (optional)
 * returns comAdobeCqInboxImplTypeproviderItemTypeProviderInfo
 **/
exports.comAdobeCqInboxImplTypeproviderItemTypeProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,inboxPeriodimplPeriodtypeproviderPeriodregistrypaths,inboxPeriodimplPeriodtypeproviderPeriodlegacypaths,inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodfailureitem,inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodworkitem,inboxPeriodimplPeriodtypeproviderPerioddefaulturlPeriodtask) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "inbox.impl.typeprovider.defaulturl.workitem" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "inbox.impl.typeprovider.defaulturl.task" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "inbox.impl.typeprovider.legacypaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "inbox.impl.typeprovider.defaulturl.failureitem" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "inbox.impl.typeprovider.registrypaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * imagePeriodquality String  (optional)
 * imagePeriodsupportedPeriodresolutions String  (optional)
 * returns comAdobeCqProjectsImplServletProjectImageServletInfo
 **/
exports.comAdobeCqProjectsImplServletProjectImageServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,imagePeriodquality,imagePeriodsupportedPeriodresolutions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "image.quality" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "image.supported.resolutions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * scheduledpurgePeriodname String  (optional)
 * scheduledpurgePeriodpurgeActive Boolean  (optional)
 * scheduledpurgePeriodtemplates List  (optional)
 * scheduledpurgePeriodpurgeGroups Boolean  (optional)
 * scheduledpurgePeriodpurgeAssets Boolean  (optional)
 * scheduledpurgePeriodterminateRunningWorkflows Boolean  (optional)
 * scheduledpurgePerioddaysold Integer  (optional)
 * scheduledpurgePeriodsaveThreshold Integer  (optional)
 * returns comAdobeCqProjectsPurgeSchedulerInfo
 **/
exports.comAdobeCqProjectsPurgeScheduler = function(post,apply,_delete,action,Dollarlocation,propertylist,scheduledpurgePeriodname,scheduledpurgePeriodpurgeActive,scheduledpurgePeriodtemplates,scheduledpurgePeriodpurgeGroups,scheduledpurgePeriodpurgeAssets,scheduledpurgePeriodterminateRunningWorkflows,scheduledpurgePerioddaysold,scheduledpurgePeriodsaveThreshold) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduledpurge.templates" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "scheduledpurge.terminateRunningWorkflows" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "scheduledpurge.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "scheduledpurge.purgeActive" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "scheduledpurge.purgeAssets" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "scheduledpurge.purgeGroups" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "scheduledpurge.saveThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "scheduledpurge.daysold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * includePeriodpaths List  (optional)
 * exporterPerioduser String  (optional)
 * returns comAdobeCqScheduledExporterImplScheduledExporterImplInfo
 **/
exports.comAdobeCqScheduledExporterImplScheduledExporterImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,includePeriodpaths,exporterPerioduser) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "include.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "exporter.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodurl String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodapikey String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodproject String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodenvironment String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodsendFrequency Integer  (optional)
 * returns comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo
 **/
exports.comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodurl,comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodapikey,comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodproject,comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodenvironment,comPeriodadobePeriodcqPeriodscreensPeriodanalyticsPeriodimplPeriodsendFrequency) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.cq.screens.analytics.impl.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.screens.analytics.impl.apikey" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.screens.analytics.impl.environment" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "com.adobe.cq.screens.analytics.impl.project" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.screens.analytics.impl.sendFrequency" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodaemPeriodscreensPeriodplayerPeriodpingfrequency Integer  (optional)
 * comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodspecialchars String  (optional)
 * comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlowercasechars Integer  (optional)
 * comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminuppercasechars Integer  (optional)
 * comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminnumberchars Integer  (optional)
 * comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminspecialchars Integer  (optional)
 * comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlength Integer  (optional)
 * returns comAdobeCqScreensDeviceImplDeviceServiceInfo
 **/
exports.comAdobeCqScreensDeviceImplDeviceService = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodaemPeriodscreensPeriodplayerPeriodpingfrequency,comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodspecialchars,comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlowercasechars,comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminuppercasechars,comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminnumberchars,comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminspecialchars,comPeriodadobePeriodaemPeriodscreensPerioddevicePeriodpaswordPeriodminlength) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.aem.screens.device.pasword.specialchars" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.aem.screens.device.pasword.minnumberchars" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "com.adobe.aem.screens.device.pasword.minlowercasechars" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "com.adobe.aem.screens.device.pasword.minuppercasechars" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "com.adobe.aem.screens.player.pingfrequency" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "com.adobe.aem.screens.device.pasword.minspecialchars" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "com.adobe.aem.screens.device.pasword.minlength" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * deviceRegistrationTimeout Integer  (optional)
 * returns comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo
 **/
exports.comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,deviceRegistrationTimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "deviceRegistrationTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodpagesupdatehandlerPeriodimageresourcetypes List  (optional)
 * cqPeriodpagesupdatehandlerPeriodproductresourcetypes List  (optional)
 * cqPeriodpagesupdatehandlerPeriodvideoresourcetypes List  (optional)
 * cqPeriodpagesupdatehandlerPerioddynamicsequenceresourcetypes List  (optional)
 * cqPeriodpagesupdatehandlerPeriodpreviewmodepaths List  (optional)
 * returns comAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo
 **/
exports.comAdobeCqScreensImplHandlerChannelsUpdateHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodpagesupdatehandlerPeriodimageresourcetypes,cqPeriodpagesupdatehandlerPeriodproductresourcetypes,cqPeriodpagesupdatehandlerPeriodvideoresourcetypes,cqPeriodpagesupdatehandlerPerioddynamicsequenceresourcetypes,cqPeriodpagesupdatehandlerPeriodpreviewmodepaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.pagesupdatehandler.productresourcetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.pagesupdatehandler.dynamicsequenceresourcetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.pagesupdatehandler.videoresourcetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.pagesupdatehandler.imageresourcetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.pagesupdatehandler.previewmodepaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * returns comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo
 **/
exports.comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodaemPeriodscreensPeriodimplPeriodremotePeriodrequestUnderscoretimeout Integer  (optional)
 * returns comAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo
 **/
exports.comAdobeCqScreensImplRemoteImplDistributedHttpClientImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodaemPeriodscreensPeriodimplPeriodremotePeriodrequestUnderscoretimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.aem.screens.impl.remote.request_timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * screensPeriodchannelsPeriodpropertiesPeriodtoPeriodremove List  (optional)
 * returns comAdobeCqScreensImplScreensChannelPostProcessorInfo
 **/
exports.comAdobeCqScreensImplScreensChannelPostProcessor = function(post,apply,_delete,action,Dollarlocation,propertylist,screensPeriodchannelsPeriodpropertiesPeriodtoPeriodremove) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "screens.channels.properties.to.remove" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodprojectPath List  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodscheduleFrequency String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpingTimeout Integer  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodrecipients String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpserver String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpport Integer  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusetls Boolean  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusername String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpassword String  (optional)
 * returns comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo
 **/
exports.comAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodprojectPath,comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodscheduleFrequency,comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpingTimeout,comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodrecipients,comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpserver,comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodsmtpport,comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusetls,comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodusername,comPeriodadobePeriodcqPeriodscreensPeriodmonitoringPeriodimplPeriodScreensMonitoringServiceImplPeriodpassword) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * globalPeriodsize Integer  (optional)
 * maxPerioddiskPeriodusage Integer  (optional)
 * persistencePeriodenabled Boolean  (optional)
 * threadPeriodpoolPeriodmaxPeriodsize Integer  (optional)
 * scheduledPeriodthreadPeriodpoolPeriodmaxPeriodsize Integer  (optional)
 * gracefulPeriodshutdownPeriodtimeout Integer  (optional)
 * queues List  (optional)
 * topics List  (optional)
 * addressesPeriodmaxPerioddeliveryPeriodattempts Integer  (optional)
 * addressesPeriodexpiryPerioddelay Integer  (optional)
 * addressesPeriodaddressPeriodfullPeriodmessagePeriodpolicy String  (optional)
 * addressesPeriodmaxPeriodsizePeriodbytes Integer  (optional)
 * addressesPeriodpagePeriodsizePeriodbytes Integer  (optional)
 * addressesPeriodpagePeriodcachePeriodmaxPeriodsize Integer  (optional)
 * clusterPerioduser String  (optional)
 * clusterPeriodpassword String  (optional)
 * clusterPeriodcallPeriodtimeout Integer  (optional)
 * clusterPeriodcallPeriodfailoverPeriodtimeout Integer  (optional)
 * clusterPeriodclientPeriodfailurePeriodcheckPeriodperiod Integer  (optional)
 * clusterPeriodnotificationPeriodattempts Integer  (optional)
 * clusterPeriodnotificationPeriodinterval Integer  (optional)
 * idPeriodcachePeriodsize Integer  (optional)
 * clusterPeriodconfirmationPeriodwindowPeriodsize Integer  (optional)
 * clusterPeriodconnectionPeriodttl Integer  (optional)
 * clusterPeriodduplicatePerioddetection Boolean  (optional)
 * clusterPeriodinitialPeriodconnectPeriodattempts Integer  (optional)
 * clusterPeriodmaxPeriodretryPeriodinterval Integer  (optional)
 * clusterPeriodminPeriodlargePeriodmessagePeriodsize Integer  (optional)
 * clusterPeriodproducerPeriodwindowPeriodsize Integer  (optional)
 * clusterPeriodreconnectPeriodattempts Integer  (optional)
 * clusterPeriodretryPeriodinterval Integer  (optional)
 * clusterPeriodretryPeriodintervalPeriodmultiplier BigDecimal  (optional)
 * returns comAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo
 **/
exports.comAdobeCqScreensMqActivemqImplArtemisJMSProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,globalPeriodsize,maxPerioddiskPeriodusage,persistencePeriodenabled,threadPeriodpoolPeriodmaxPeriodsize,scheduledPeriodthreadPeriodpoolPeriodmaxPeriodsize,gracefulPeriodshutdownPeriodtimeout,queues,topics,addressesPeriodmaxPerioddeliveryPeriodattempts,addressesPeriodexpiryPerioddelay,addressesPeriodaddressPeriodfullPeriodmessagePeriodpolicy,addressesPeriodmaxPeriodsizePeriodbytes,addressesPeriodpagePeriodsizePeriodbytes,addressesPeriodpagePeriodcachePeriodmaxPeriodsize,clusterPerioduser,clusterPeriodpassword,clusterPeriodcallPeriodtimeout,clusterPeriodcallPeriodfailoverPeriodtimeout,clusterPeriodclientPeriodfailurePeriodcheckPeriodperiod,clusterPeriodnotificationPeriodattempts,clusterPeriodnotificationPeriodinterval,idPeriodcachePeriodsize,clusterPeriodconfirmationPeriodwindowPeriodsize,clusterPeriodconnectionPeriodttl,clusterPeriodduplicatePerioddetection,clusterPeriodinitialPeriodconnectPeriodattempts,clusterPeriodmaxPeriodretryPeriodinterval,clusterPeriodminPeriodlargePeriodmessagePeriodsize,clusterPeriodproducerPeriodwindowPeriodsize,clusterPeriodreconnectPeriodattempts,clusterPeriodretryPeriodinterval,clusterPeriodretryPeriodintervalPeriodmultiplier) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cluster.call.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.notification.interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.confirmation.window.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "global.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "addresses.address.full.message.policy" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "cluster.producer.window.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "addresses.page.size.bytes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.min.large.message.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "scheduled.thread.pool.max.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.call.failover.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.max.retry.interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "graceful.shutdown.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cluster.duplicate.detection" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "max.disk.usage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.initial.connect.attempts" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "id.cache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.retry.interval.multiplier" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : 6.02745618307040320615897144307382404804229736328125
    },
    "topics" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "addresses.max.size.bytes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.client.failure.check.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "addresses.page.cache.max.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.reconnect.attempts" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.retry.interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.connection.ttl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "queues" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "persistence.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "addresses.max.delivery.attempts" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cluster.notification.attempts" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "addresses.expiry.delay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "thread.pool.max.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodprojectPath List  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodscheduleFrequency String  (optional)
 * returns comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo
 **/
exports.comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodprojectPath,comPeriodadobePeriodcqPeriodscreensPeriodofflinecontentPeriodimplPeriodBulkOfflineUpdateServiceImplPeriodscheduleFrequency) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * disableSmartSync Boolean  (optional)
 * returns comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo
 **/
exports.comAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,disableSmartSync) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "disableSmartSync" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enableDataTriggeredContent Boolean  (optional)
 * returns comAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo
 **/
exports.comAdobeCqScreensSegmentationImplSegmentationFeatureFlag = function(post,apply,_delete,action,Dollarlocation,propertylist,enableDataTriggeredContent) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enableDataTriggeredContent" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo
 **/
exports.comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo
 **/
exports.comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * dispatcherPeriodaddress String  (optional)
 * dispatcherPeriodfilterPeriodallowed List  (optional)
 * dispatcherPeriodfilterPeriodblocked List  (optional)
 * returns comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo
 **/
exports.comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags,dispatcherPeriodaddress,dispatcherPeriodfilterPeriodallowed,dispatcherPeriodfilterPeriodblocked) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "dispatcher.filter.allowed" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "dispatcher.filter.blocked" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "dispatcher.address" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo
 **/
exports.comAdobeCqSecurityHcPackagesImplExampleContentHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * webserverPeriodaddress String  (optional)
 * returns comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo
 **/
exports.comAdobeCqSecurityHcWebserverImplClickjackingHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags,webserverPeriodaddress) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "webserver.address" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enable Boolean  (optional)
 * ttl1 Integer  (optional)
 * ttl2 Integer  (optional)
 * returns comAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo
 **/
exports.comAdobeCqSocialAccountverificationImplAccountManagementConfigIm = function(post,apply,_delete,action,Dollarlocation,propertylist,enable,ttl1,ttl2) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ttl2" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "ttl1" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priority Integer  (optional)
 * returns comAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo
 **/
exports.comAdobeCqSocialActivitystreamsClientImplSocialActivityComponen = function(post,apply,_delete,action,Dollarlocation,propertylist,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priority Integer  (optional)
 * returns comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo
 **/
exports.comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo = function(post,apply,_delete,action,Dollarlocation,propertylist,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodtopics String  (optional)
 * eventPeriodfilter String  (optional)
 * returns comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo
 **/
exports.comAdobeCqSocialActivitystreamsListenerImplEventListenerHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodtopics,eventPeriodfilter) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * accepted Boolean  (optional)
 * ranked Integer  (optional)
 * returns comAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo
 **/
exports.comAdobeCqSocialActivitystreamsListenerImplModerationEventExten = function(post,apply,_delete,action,Dollarlocation,propertylist,accepted,ranked) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "accepted" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "ranked" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * ranking Integer  (optional)
 * enable Boolean  (optional)
 * returns comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo
 **/
exports.comAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS = function(post,apply,_delete,action,Dollarlocation,propertylist,ranking,enable) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * streamPath String  (optional)
 * streamName String  (optional)
 * returns comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo
 **/
exports.comAdobeCqSocialActivitystreamsListenerImplResourceActivityStre = function(post,apply,_delete,action,Dollarlocation,propertylist,streamPath,streamName) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "streamPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "streamName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxRetry Integer  (optional)
 * fieldWhitelist List  (optional)
 * attachmentTypeBlacklist List  (optional)
 * returns comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo
 **/
exports.comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI = function(post,apply,_delete,action,Dollarlocation,propertylist,maxRetry,fieldWhitelist,attachmentTypeBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "MaxRetry" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * attachmentTypeBlacklist String  (optional)
 * extensionPeriodorder Integer  (optional)
 * returns comAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo
 **/
exports.comAdobeCqSocialCalendarClientOperationextensionsEventAttachmen = function(post,apply,_delete,action,Dollarlocation,propertylist,attachmentTypeBlacklist,extensionPeriodorder) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "extension.order" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * timezonesPeriodexpirytime Integer  (optional)
 * returns comAdobeCqSocialCalendarServletsTimeZoneServletInfo
 **/
exports.comAdobeCqSocialCalendarServletsTimeZoneServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,timezonesPeriodexpirytime) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "timezones.expirytime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * ranking Integer  (optional)
 * returns comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo
 **/
exports.comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent = function(post,apply,_delete,action,Dollarlocation,propertylist,ranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * attachmentTypeBlacklist List  (optional)
 * returns comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo
 **/
exports.comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist,attachmentTypeBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * attachmentTypeBlacklist List  (optional)
 * returns comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo
 **/
exports.comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist,attachmentTypeBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * numUserLimit Integer  (optional)
 * returns comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo
 **/
exports.comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC = function(post,apply,_delete,action,Dollarlocation,propertylist,numUserLimit) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "numUserLimit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enableScheduledPostsSearch Boolean  (optional)
 * numberOfMinutes Integer  (optional)
 * maxSearchLimit Integer  (optional)
 * returns comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo
 **/
exports.comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos = function(post,apply,_delete,action,Dollarlocation,propertylist,enableScheduledPostsSearch,numberOfMinutes,maxSearchLimit) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "maxSearchLimit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "enableScheduledPostsSearch" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "numberOfMinutes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * corsPeriodenabling Boolean  (optional)
 * returns comAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo
 **/
exports.comAdobeCqSocialCommonsCorsCORSAuthenticationFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,corsPeriodenabling) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cors.enabling" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priorityOrder Integer  (optional)
 * replyEmailPatterns List  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,priorityOrder,replyEmailPatterns) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priorityOrder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "replyEmailPatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * contextPeriodpath String  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,contextPeriodpath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "context.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodtopics String  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodtopics) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priorityOrder Integer  (optional)
 * replyEmailPatterns List  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,priorityOrder,replyEmailPatterns) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priorityOrder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "replyEmailPatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * patternPeriodtime String  (optional)
 * patternPeriodnewline String  (optional)
 * patternPerioddayOfMonth String  (optional)
 * patternPeriodmonth String  (optional)
 * patternPeriodyear String  (optional)
 * patternPerioddate String  (optional)
 * patternPerioddateTime String  (optional)
 * patternPeriodemail String  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp = function(post,apply,_delete,action,Dollarlocation,propertylist,patternPeriodtime,patternPeriodnewline,patternPerioddayOfMonth,patternPeriodmonth,patternPeriodyear,patternPerioddate,patternPerioddateTime,patternPeriodemail) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "pattern.time" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pattern.email" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pattern.month" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pattern.year" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pattern.dayOfMonth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pattern.newline" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pattern.date" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pattern.dateTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * emailPeriodname String  (optional)
 * emailPeriodcreatePostFromReply Boolean  (optional)
 * emailPeriodaddCommentIdTo String  (optional)
 * emailPeriodsubjectMaximumLength Integer  (optional)
 * emailPeriodreplyToAddress String  (optional)
 * emailPeriodreplyToDelimiter String  (optional)
 * emailPeriodtrackerIdPrefixInSubject String  (optional)
 * emailPeriodtrackerIdPrefixInBody String  (optional)
 * emailPeriodasHTML Boolean  (optional)
 * emailPerioddefaultUserName String  (optional)
 * emailPeriodtemplatesPeriodrootPath String  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp = function(post,apply,_delete,action,Dollarlocation,propertylist,emailPeriodname,emailPeriodcreatePostFromReply,emailPeriodaddCommentIdTo,emailPeriodsubjectMaximumLength,emailPeriodreplyToAddress,emailPeriodreplyToDelimiter,emailPeriodtrackerIdPrefixInSubject,emailPeriodtrackerIdPrefixInBody,emailPeriodasHTML,emailPerioddefaultUserName,emailPeriodtemplatesPeriodrootPath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "email.subjectMaximumLength" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "email.replyToAddress" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "email.trackerIdPrefixInSubject" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "email.addCommentIdTo" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "email.templates.rootPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "email.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "email.asHTML" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "email.createPostFromReply" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "email.trackerIdPrefixInBody" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "email.defaultUserName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "email.replyToDelimiter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * connectProtocol String  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter = function(post,apply,_delete,action,Dollarlocation,propertylist,connectProtocol) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "connectProtocol" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priorityOrder Integer  (optional)
 * replyEmailPatterns List  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,priorityOrder,replyEmailPatterns) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priorityOrder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "replyEmailPatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priorityOrder Integer  (optional)
 * replyEmailPatterns List  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,priorityOrder,replyEmailPatterns) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priorityOrder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "replyEmailPatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priorityOrder Integer  (optional)
 * replyEmailPatterns List  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,priorityOrder,replyEmailPatterns) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priorityOrder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "replyEmailPatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priorityOrder Integer  (optional)
 * replyEmailPatterns List  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,priorityOrder,replyEmailPatterns) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priorityOrder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "replyEmailPatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * replyEmailPatterns List  (optional)
 * priorityOrder Integer  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,replyEmailPatterns,priorityOrder) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priorityOrder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "replyEmailPatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priorityOrder Integer  (optional)
 * replyEmailPatterns List  (optional)
 * returns comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo
 **/
exports.comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,priorityOrder,replyEmailPatterns) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priorityOrder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "replyEmailPatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * numberOfDays Integer  (optional)
 * ageOfFile Integer  (optional)
 * returns comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo
 **/
exports.comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload = function(post,apply,_delete,action,Dollarlocation,propertylist,numberOfDays,ageOfFile) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ageOfFile" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "numberOfDays" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodtopics String  (optional)
 * eventPeriodfilter String  (optional)
 * verbs List  (optional)
 * returns comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo
 **/
exports.comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodtopics,eventPeriodfilter,verbs) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "verbs" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enable Boolean  (optional)
 * uGCLimit Integer  (optional)
 * ugcLimitDuration Integer  (optional)
 * domains List  (optional)
 * toList List  (optional)
 * returns comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo
 **/
exports.comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit = function(post,apply,_delete,action,Dollarlocation,propertylist,enable,uGCLimit,ugcLimitDuration,domains,toList) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ugcLimitDuration" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "UGCLimit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "domains" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "toList" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodproviderPeriodid String  (optional)
 * oauthPeriodcloudPeriodconfigPeriodroot String  (optional)
 * providerPeriodconfigPeriodroot String  (optional)
 * providerPeriodconfigPeriodcreatePeriodtagsPeriodenabled Boolean  (optional)
 * providerPeriodconfigPerioduserPeriodfolder String  (optional)
 * providerPeriodconfigPeriodfacebookPeriodfetchPeriodfields Boolean  (optional)
 * providerPeriodconfigPeriodfacebookPeriodfields List  (optional)
 * providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled Boolean  (optional)
 * returns comAdobeCqSocialConnectOauthImplFacebookProviderImplInfo
 **/
exports.comAdobeCqSocialConnectOauthImplFacebookProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodproviderPeriodid,oauthPeriodcloudPeriodconfigPeriodroot,providerPeriodconfigPeriodroot,providerPeriodconfigPeriodcreatePeriodtagsPeriodenabled,providerPeriodconfigPerioduserPeriodfolder,providerPeriodconfigPeriodfacebookPeriodfetchPeriodfields,providerPeriodconfigPeriodfacebookPeriodfields,providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "provider.config.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "provider.config.facebook.fetch.fields" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.cloud.config.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "provider.config.user.folder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "provider.config.facebook.fields" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "provider.config.refresh.userdata.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "provider.config.create.tags.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path List  (optional)
 * servicePeriodranking Integer  (optional)
 * returns comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo
 **/
exports.comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle = function(post,apply,_delete,action,Dollarlocation,propertylist,path,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * facebook List  (optional)
 * twitter List  (optional)
 * providerPeriodconfigPerioduserPeriodfolder String  (optional)
 * returns comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo
 **/
exports.comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper = function(post,apply,_delete,action,Dollarlocation,propertylist,facebook,twitter,providerPeriodconfigPerioduserPeriodfolder) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "twitter" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "facebook" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "provider.config.user.folder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodproviderPeriodid String  (optional)
 * oauthPeriodcloudPeriodconfigPeriodroot String  (optional)
 * providerPeriodconfigPeriodroot String  (optional)
 * providerPeriodconfigPerioduserPeriodfolder String  (optional)
 * providerPeriodconfigPeriodtwitterPeriodenablePeriodparams Boolean  (optional)
 * providerPeriodconfigPeriodtwitterPeriodparams List  (optional)
 * providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled Boolean  (optional)
 * returns comAdobeCqSocialConnectOauthImplTwitterProviderImplInfo
 **/
exports.comAdobeCqSocialConnectOauthImplTwitterProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodproviderPeriodid,oauthPeriodcloudPeriodconfigPeriodroot,providerPeriodconfigPeriodroot,providerPeriodconfigPerioduserPeriodfolder,providerPeriodconfigPeriodtwitterPeriodenablePeriodparams,providerPeriodconfigPeriodtwitterPeriodparams,providerPeriodconfigPeriodrefreshPerioduserdataPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "provider.config.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "provider.config.twitter.enable.params" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "provider.config.twitter.params" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "oauth.cloud.config.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "provider.config.user.folder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "provider.config.refresh.userdata.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodenabled Boolean  (optional)
 * cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodwaitTimeSeconds Integer  (optional)
 * returns comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo
 **/
exports.comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodenabled,cqPeriodsocialPeriodcontentPeriodfragmentsPeriodservicesPeriodwaitTimeSeconds) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.social.content.fragments.services.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.social.content.fragments.services.waitTimeSeconds" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * versionPeriodid String  (optional)
 * cachePeriodon Boolean  (optional)
 * concurrencyPeriodlevel Integer  (optional)
 * cachePeriodstartPeriodsize Integer  (optional)
 * cachePeriodttl Integer  (optional)
 * cachePeriodsize Integer  (optional)
 * timePeriodlimit Integer  (optional)
 * returns comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo
 **/
exports.comAdobeCqSocialDatastoreAsImplASResourceProviderFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,versionPeriodid,cachePeriodon,concurrencyPeriodlevel,cachePeriodstartPeriodsize,cachePeriodttl,cachePeriodsize,timePeriodlimit) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cache.on" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "concurrency.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "version.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "time.limit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache.start.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache.ttl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * solrPeriodzkPeriodtimeout String  (optional)
 * solrPeriodcommit String  (optional)
 * cachePeriodon Boolean  (optional)
 * concurrencyPeriodlevel Integer  (optional)
 * cachePeriodstartPeriodsize Integer  (optional)
 * cachePeriodttl Integer  (optional)
 * cachePeriodsize Integer  (optional)
 * returns comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo
 **/
exports.comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,solrPeriodzkPeriodtimeout,solrPeriodcommit,cachePeriodon,concurrencyPeriodlevel,cachePeriodstartPeriodsize,cachePeriodttl,cachePeriodsize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cache.on" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "concurrency.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "solr.zk.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "solr.commit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache.start.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache.ttl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * solrPeriodzkPeriodtimeout String  (optional)
 * solrPeriodcommit String  (optional)
 * cachePeriodon Boolean  (optional)
 * concurrencyPeriodlevel Integer  (optional)
 * cachePeriodstartPeriodsize Integer  (optional)
 * cachePeriodttl Integer  (optional)
 * cachePeriodsize Integer  (optional)
 * returns comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo
 **/
exports.comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor = function(post,apply,_delete,action,Dollarlocation,propertylist,solrPeriodzkPeriodtimeout,solrPeriodcommit,cachePeriodon,concurrencyPeriodlevel,cachePeriodstartPeriodsize,cachePeriodttl,cachePeriodsize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cache.on" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "concurrency.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "solr.zk.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "solr.commit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache.start.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache.ttl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * isMemberCheck Boolean  (optional)
 * returns comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo
 **/
exports.comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF = function(post,apply,_delete,action,Dollarlocation,propertylist,isMemberCheck) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "isMemberCheck" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * isMemberCheck Boolean  (optional)
 * returns comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo
 **/
exports.comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto = function(post,apply,_delete,action,Dollarlocation,propertylist,isMemberCheck) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "isMemberCheck" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * returns comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo
 **/
exports.comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * returns comAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo
 **/
exports.comAdobeCqSocialEnablementResourceEndpointsImplEnablementResou = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * returns comAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo
 **/
exports.comAdobeCqSocialEnablementServicesImplAuthorMarkerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodselectors String  (optional)
 * slingPeriodservletPeriodextensions String  (optional)
 * returns comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo
 **/
exports.comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodselectors,slingPeriodservletPeriodextensions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.servlet.extensions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.selectors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * attachmentTypeBlacklist List  (optional)
 * returns comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo
 **/
exports.comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist,attachmentTypeBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * attachmentTypeBlacklist List  (optional)
 * returns comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo
 **/
exports.comAdobeCqSocialForumClientEndpointsImplForumOperationsService = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist,attachmentTypeBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * extensionPeriodorder Integer  (optional)
 * flushPeriodforumontopic Boolean  (optional)
 * returns comAdobeCqSocialForumDispatcherImplFlushOperationsInfo
 **/
exports.comAdobeCqSocialForumDispatcherImplFlushOperations = function(post,apply,_delete,action,Dollarlocation,propertylist,extensionPeriodorder,flushPeriodforumontopic) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "extension.order" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "flush.forumontopic" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * groupPeriodlistingPeriodpaginationPeriodenable Boolean  (optional)
 * groupPeriodlistingPeriodlazyloadingPeriodenable Boolean  (optional)
 * pagePeriodsize Integer  (optional)
 * priority Integer  (optional)
 * returns comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo
 **/
exports.comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen = function(post,apply,_delete,action,Dollarlocation,propertylist,groupPeriodlistingPeriodpaginationPeriodenable,groupPeriodlistingPeriodlazyloadingPeriodenable,pagePeriodsize,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "page.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "group.listing.pagination.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "group.listing.lazyloading.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxWaitTime Integer  (optional)
 * minWaitBetweenRetries Integer  (optional)
 * returns comAdobeCqSocialGroupImplGroupServiceImplInfo
 **/
exports.comAdobeCqSocialGroupImplGroupServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,maxWaitTime,minWaitBetweenRetries) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "minWaitBetweenRetries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxWaitTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * parameterPeriodguavaPeriodcachePeriodenabled Boolean  (optional)
 * parameterPeriodguavaPeriodcachePeriodparams String  (optional)
 * parameterPeriodguavaPeriodcachePeriodreload Boolean  (optional)
 * servicePeriodranking Integer  (optional)
 * returns comAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo
 **/
exports.comAdobeCqSocialHandlebarsGuavaTemplateCacheImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,parameterPeriodguavaPeriodcachePeriodenabled,parameterPeriodguavaPeriodcachePeriodparams,parameterPeriodguavaPeriodcachePeriodreload,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "parameter.guava.cache.reload" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "parameter.guava.cache.params" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "parameter.guava.cache.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * attachmentTypeBlacklist List  (optional)
 * returns comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo
 **/
exports.comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist,attachmentTypeBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * attachmentTypeBlacklist List  (optional)
 * returns comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo
 **/
exports.comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist,attachmentTypeBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * returns comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo
 **/
exports.comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * returns comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo
 **/
exports.comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * everyoneLimit Integer  (optional)
 * priority Integer  (optional)
 * returns comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo
 **/
exports.comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF = function(post,apply,_delete,action,Dollarlocation,propertylist,everyoneLimit,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "everyoneLimit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * messagePeriodproperties List  (optional)
 * messageBoxSizeLimit Integer  (optional)
 * messageCountLimit Integer  (optional)
 * notifyFailure Boolean  (optional)
 * failureMessageFrom String  (optional)
 * failureTemplatePath String  (optional)
 * maxRetries Integer  (optional)
 * minWaitBetweenRetries Integer  (optional)
 * countUpdatePoolSize Integer  (optional)
 * inboxPeriodpath String  (optional)
 * sentitemsPeriodpath String  (optional)
 * supportAttachments Boolean  (optional)
 * supportGroupMessaging Boolean  (optional)
 * maxTotalRecipients Integer  (optional)
 * batchSize Integer  (optional)
 * maxTotalAttachmentSize Integer  (optional)
 * attachmentTypeBlacklist List  (optional)
 * allowedAttachmentTypes List  (optional)
 * serviceSelector String  (optional)
 * fieldWhitelist List  (optional)
 * returns comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo
 **/
exports.comAdobeCqSocialMessagingClientEndpointsImplMessagingOperation = function(post,apply,_delete,action,Dollarlocation,propertylist,messagePeriodproperties,messageBoxSizeLimit,messageCountLimit,notifyFailure,failureMessageFrom,failureTemplatePath,maxRetries,minWaitBetweenRetries,countUpdatePoolSize,inboxPeriodpath,sentitemsPeriodpath,supportAttachments,supportGroupMessaging,maxTotalRecipients,batchSize,maxTotalAttachmentSize,attachmentTypeBlacklist,allowedAttachmentTypes,serviceSelector,fieldWhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "failureMessageFrom" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "minWaitBetweenRetries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "allowedAttachmentTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "messageCountLimit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "sentitems.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "countUpdatePoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "message.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "supportGroupMessaging" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "failureTemplatePath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "maxRetries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxTotalAttachmentSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "serviceSelector" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "messageBoxSizeLimit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxTotalRecipients" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "notifyFailure" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "supportAttachments" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "batchSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "inbox.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * resourceTypePeriodfilters List  (optional)
 * priority Integer  (optional)
 * returns comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo
 **/
exports.comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen = function(post,apply,_delete,action,Dollarlocation,propertylist,resourceTypePeriodfilters,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "resourceType.filters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priority Integer  (optional)
 * returns comAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo
 **/
exports.comAdobeCqSocialModerationDashboardApiModerationDashboardSocial = function(post,apply,_delete,action,Dollarlocation,propertylist,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priority Integer  (optional)
 * returns comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo
 **/
exports.comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen = function(post,apply,_delete,action,Dollarlocation,propertylist,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * resourceTypePeriodfilters List  (optional)
 * priority Integer  (optional)
 * returns comAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo
 **/
exports.comAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci = function(post,apply,_delete,action,Dollarlocation,propertylist,resourceTypePeriodfilters,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "resourceType.filters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodtopics String  (optional)
 * eventPeriodfilter String  (optional)
 * returns comAdobeCqSocialNotificationsImplMentionsRouterInfo
 **/
exports.comAdobeCqSocialNotificationsImplMentionsRouter = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodtopics,eventPeriodfilter) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxPeriodunreadPeriodnotificationPeriodcount Integer  (optional)
 * returns comAdobeCqSocialNotificationsImplNotificationManagerImplInfo
 **/
exports.comAdobeCqSocialNotificationsImplNotificationManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,maxPeriodunreadPeriodnotificationPeriodcount) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "max.unread.notification.count" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodtopics String  (optional)
 * eventPeriodfilter String  (optional)
 * returns comAdobeCqSocialNotificationsImplNotificationsRouterInfo
 **/
exports.comAdobeCqSocialNotificationsImplNotificationsRouter = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodtopics,eventPeriodfilter) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * attachmentTypeBlacklist List  (optional)
 * returns comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo
 **/
exports.comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist,attachmentTypeBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodinterval Integer  (optional)
 * cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodpageSize Integer  (optional)
 * returns comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo
 **/
exports.comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodinterval,cqPeriodsocialPeriodreportingPeriodanalyticsPeriodpollingPeriodimporterPeriodpageSize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.social.reporting.analytics.polling.importer.pageSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.social.reporting.analytics.polling.importer.interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * reportPeriodfetchPerioddelay Integer  (optional)
 * returns comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo
 **/
exports.comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM = function(post,apply,_delete,action,Dollarlocation,propertylist,reportPeriodfetchPerioddelay) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "report.fetch.delay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodsocialPeriodconsolePeriodanalyticsPeriodsitesPeriodmapping List  (optional)
 * priority Integer  (optional)
 * returns comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo
 **/
exports.comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodsocialPeriodconsolePeriodanalyticsPeriodsitesPeriodmapping,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.social.console.analytics.sites.mapping" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * attachmentTypeBlacklist List  (optional)
 * returns comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo
 **/
exports.comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist,attachmentTypeBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "attachmentTypeBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodselectors String  (optional)
 * slingPeriodservletPeriodextensions String  (optional)
 * returns comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo
 **/
exports.comAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodselectors,slingPeriodservletPeriodextensions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.servlet.extensions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.selectors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodselectors List  (optional)
 * slingPeriodservletPeriodextensions String  (optional)
 * returns comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo
 **/
exports.comAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodselectors,slingPeriodservletPeriodextensions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.servlet.extensions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.selectors" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodtopics String  (optional)
 * eventPeriodfilter String  (optional)
 * returns comAdobeCqSocialScoringImplScoringEventListenerInfo
 **/
exports.comAdobeCqSocialScoringImplScoringEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodtopics,eventPeriodfilter) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enableFallback Boolean  (optional)
 * returns comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo
 **/
exports.comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,enableFallback) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enableFallback" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fieldWhitelist List  (optional)
 * sitePathFilters List  (optional)
 * sitePackageGroup String  (optional)
 * returns comAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo
 **/
exports.comAdobeCqSocialSiteEndpointsImplSiteOperationService = function(post,apply,_delete,action,Dollarlocation,propertylist,fieldWhitelist,sitePathFilters,sitePackageGroup) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sitePathFilters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "fieldWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "sitePackageGroup" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodsocialPeriodconsolePeriodanalyticsPeriodcomponents List  (optional)
 * returns comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo
 **/
exports.comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodsocialPeriodconsolePeriodanalyticsPeriodcomponents) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.social.console.analytics.components" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * componentsUsingTags List  (optional)
 * returns comAdobeCqSocialSiteImplSiteConfiguratorImplInfo
 **/
exports.comAdobeCqSocialSiteImplSiteConfiguratorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,componentsUsingTags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "componentsUsingTags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * srpPeriodtype String  (optional)
 * returns comAdobeCqSocialSrpImplSocialSolrConnectorInfo
 **/
exports.comAdobeCqSocialSrpImplSocialSolrConnector = function(post,apply,_delete,action,Dollarlocation,propertylist,srpPeriodtype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "srp.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * agentName String  (optional)
 * diffPath String  (optional)
 * propertyNames String  (optional)
 * returns comAdobeCqSocialSyncImplDiffChangesObserverInfo
 **/
exports.comAdobeCqSocialSyncImplDiffChangesObserver = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled,agentName,diffPath,propertyNames) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "propertyNames" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "agentName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "diffPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * nodetypes List  (optional)
 * ignorableprops List  (optional)
 * ignorablenodes String  (optional)
 * enabled Boolean  (optional)
 * distfolders String  (optional)
 * returns comAdobeCqSocialSyncImplGroupSyncListenerImplInfo
 **/
exports.comAdobeCqSocialSyncImplGroupSyncListenerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,nodetypes,ignorableprops,ignorablenodes,enabled,distfolders) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ignorablenodes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "nodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "ignorableprops" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "distfolders" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * activeRunModes List  (optional)
 * returns comAdobeCqSocialSyncImplPublisherSyncServiceImplInfo
 **/
exports.comAdobeCqSocialSyncImplPublisherSyncServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,activeRunModes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "activeRunModes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * nodetypes List  (optional)
 * ignorableprops List  (optional)
 * ignorablenodes List  (optional)
 * enabled Boolean  (optional)
 * distfolders List  (optional)
 * returns comAdobeCqSocialSyncImplUserSyncListenerImplInfo
 **/
exports.comAdobeCqSocialSyncImplUserSyncListenerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,nodetypes,ignorableprops,ignorablenodes,enabled,distfolders) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ignorablenodes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "nodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "ignorableprops" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "distfolders" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * translatePeriodlanguage String  (optional)
 * translatePerioddisplay String  (optional)
 * translatePeriodattribution Boolean  (optional)
 * translatePeriodcaching String  (optional)
 * translatePeriodsmartPeriodrendering String  (optional)
 * translatePeriodcachingPeriodduration String  (optional)
 * translatePeriodsessionPeriodsavePeriodinterval String  (optional)
 * translatePeriodsessionPeriodsavePeriodbatchLimit String  (optional)
 * returns comAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo
 **/
exports.comAdobeCqSocialTranslationImplTranslationServiceConfigManager = function(post,apply,_delete,action,Dollarlocation,propertylist,translatePeriodlanguage,translatePerioddisplay,translatePeriodattribution,translatePeriodcaching,translatePeriodsmartPeriodrendering,translatePeriodcachingPeriodduration,translatePeriodsessionPeriodsavePeriodinterval,translatePeriodsessionPeriodsavePeriodbatchLimit) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "translate.attribution" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "translate.caching.duration" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "translate.session.save.batchLimit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "translate.language" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "translate.display" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "translate.smart.rendering" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "translate.session.save.interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "translate.caching" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodtopics String  (optional)
 * eventPeriodfilter String  (optional)
 * translatePeriodlistenerPeriodtype List  (optional)
 * translatePeriodpropertyPeriodlist List  (optional)
 * poolSize Integer  (optional)
 * maxPoolSize Integer  (optional)
 * queueSize Integer  (optional)
 * keepAliveTime Integer  (optional)
 * returns comAdobeCqSocialTranslationImplUGCLanguageDetectorInfo
 **/
exports.comAdobeCqSocialTranslationImplUGCLanguageDetector = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodtopics,eventPeriodfilter,translatePeriodlistenerPeriodtype,translatePeriodpropertyPeriodlist,poolSize,maxPoolSize,queueSize,keepAliveTime) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "queueSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "keepAliveTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "translate.listener.type" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "translate.property.list" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "poolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "maxPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * threadPoolSize Integer  (optional)
 * delayTime Integer  (optional)
 * workerSleepTime Integer  (optional)
 * returns comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo
 **/
exports.comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,threadPoolSize,delayTime,workerSleepTime) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "threadPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "workerSleepTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "delayTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * poolSize Integer  (optional)
 * maxPoolSize Integer  (optional)
 * queueSize Integer  (optional)
 * keepAliveTime Integer  (optional)
 * returns comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo
 **/
exports.comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,poolSize,maxPoolSize,queueSize,keepAliveTime) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "queueSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "keepAliveTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "poolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * isPrimaryPublisher Boolean  (optional)
 * returns comAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo
 **/
exports.comAdobeCqSocialUgcbaseImplPublisherConfigurationImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,isPrimaryPublisher) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "isPrimaryPublisher" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * legacyCloudUGCPathMapping Boolean  (optional)
 * returns comAdobeCqSocialUgcbaseImplSocialUtilsImplInfo
 **/
exports.comAdobeCqSocialUgcbaseImplSocialUtilsImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,legacyCloudUGCPathMapping) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "legacyCloudUGCPathMapping" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * automoderationPeriodsequence List  (optional)
 * automoderationPeriodonfailurestop Boolean  (optional)
 * returns comAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo
 **/
exports.comAdobeCqSocialUgcbaseModerationImplAutoModerationImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,automoderationPeriodsequence,automoderationPeriodonfailurestop) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "automoderation.onfailurestop" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "automoderation.sequence" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * watchwordsPeriodpositive List  (optional)
 * watchwordsPeriodnegative List  (optional)
 * watchwordsPeriodpath String  (optional)
 * sentimentPeriodpath String  (optional)
 * returns comAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo
 **/
exports.comAdobeCqSocialUgcbaseModerationImplSentimentProcess = function(post,apply,_delete,action,Dollarlocation,propertylist,watchwordsPeriodpositive,watchwordsPeriodnegative,watchwordsPeriodpath,sentimentPeriodpath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "watchwords.negative" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "watchwords.positive" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "watchwords.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sentiment.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * defaultPeriodattachmentPeriodtypePeriodblacklist List  (optional)
 * baselinePeriodattachmentPeriodtypePeriodblacklist List  (optional)
 * returns comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo
 **/
exports.comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli = function(post,apply,_delete,action,Dollarlocation,propertylist,defaultPeriodattachmentPeriodtypePeriodblacklist,baselinePeriodattachmentPeriodtypePeriodblacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "default.attachment.type.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "baseline.attachment.type.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * parameterPeriodwhitelist List  (optional)
 * parameterPeriodwhitelistPeriodprefixes List  (optional)
 * binaryPeriodparameterPeriodwhitelist List  (optional)
 * modifierPeriodwhitelist List  (optional)
 * operationPeriodwhitelist List  (optional)
 * operationPeriodwhitelistPeriodprefixes List  (optional)
 * typehintPeriodwhitelist List  (optional)
 * resourcetypePeriodwhitelist List  (optional)
 * returns comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo
 **/
exports.comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,parameterPeriodwhitelist,parameterPeriodwhitelistPeriodprefixes,binaryPeriodparameterPeriodwhitelist,modifierPeriodwhitelist,operationPeriodwhitelist,operationPeriodwhitelistPeriodprefixes,typehintPeriodwhitelist,resourcetypePeriodwhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "parameter.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resourcetype.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "modifier.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "operation.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "operation.whitelist.prefixes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "typehint.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "binary.parameter.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "parameter.whitelist.prefixes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodextensions String  (optional)
 * slingPeriodservletPeriodpaths String  (optional)
 * slingPeriodservletPeriodmethods String  (optional)
 * returns comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo
 **/
exports.comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodextensions,slingPeriodservletPeriodpaths,slingPeriodservletPeriodmethods) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.servlet.extensions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.paths" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enable Boolean  (optional)
 * agentPeriodconfiguration List  (optional)
 * contextPeriodpath String  (optional)
 * disabledPeriodcipherPeriodsuites List  (optional)
 * enabledPeriodcipherPeriodsuites List  (optional)
 * returns comAdobeCqSocialUserImplTransportHttpToPublisherInfo
 **/
exports.comAdobeCqSocialUserImplTransportHttpToPublisher = function(post,apply,_delete,action,Dollarlocation,propertylist,enable,agentPeriodconfiguration,contextPeriodpath,disabledPeriodcipherPeriodsuites,enabledPeriodcipherPeriodsuites) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "agent.configuration" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enabled.cipher.suites" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "disabled.cipher.suites" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "context.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * resourcePeriodtypes List  (optional)
 * returns comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo
 **/
exports.comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact = function(post,apply,_delete,action,Dollarlocation,propertylist,resourcePeriodtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "resource.types" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * deletePeriodpathPeriodregexps List  (optional)
 * deletePeriodsql2Periodquery String  (optional)
 * returns comAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo
 **/
exports.comAdobeCqUpgradesCleanupImplUpgradeContentCleanup = function(post,apply,_delete,action,Dollarlocation,propertylist,deletePeriodpathPeriodregexps,deletePeriodsql2Periodquery) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "delete.path.regexps" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "delete.sql2.query" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * deletePeriodnamePeriodregexps List  (optional)
 * returns comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo
 **/
exports.comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup = function(post,apply,_delete,action,Dollarlocation,propertylist,deletePeriodnamePeriodregexps) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "delete.name.regexps" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * threshold Integer  (optional)
 * jobTopicName String  (optional)
 * emailEnabled Boolean  (optional)
 * returns comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo
 **/
exports.comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService = function(post,apply,_delete,action,Dollarlocation,propertylist,threshold,jobTopicName,emailEnabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "jobTopicName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "emailEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * jobPeriodpurgePeriodthreshold Integer  (optional)
 * jobPeriodpurgePeriodmaxPeriodjobs Integer  (optional)
 * returns comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo
 **/
exports.comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression,jobPeriodpurgePeriodthreshold,jobPeriodpurgePeriodmaxPeriodjobs) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "job.purge.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "job.purge.max.jobs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * threshold Integer  (optional)
 * jobTopicName String  (optional)
 * emailEnabled Boolean  (optional)
 * returns comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo
 **/
exports.comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService = function(post,apply,_delete,action,Dollarlocation,propertylist,threshold,jobTopicName,emailEnabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "jobTopicName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "emailEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * threshold Integer  (optional)
 * jobTopicName String  (optional)
 * emailEnabled Boolean  (optional)
 * returns comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo
 **/
exports.comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService = function(post,apply,_delete,action,Dollarlocation,propertylist,threshold,jobTopicName,emailEnabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "jobTopicName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "emailEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodfilter String  (optional)
 * launchesPeriodeventhandlerPeriodthreadpoolPeriodmaxsize Integer  (optional)
 * launchesPeriodeventhandlerPeriodthreadpoolPeriodpriority String  (optional)
 * launchesPeriodeventhandlerPeriodupdatelastmodification Boolean  (optional)
 * returns comAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo
 **/
exports.comAdobeCqWcmLaunchesImplLaunchesEventHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodfilter,launchesPeriodeventhandlerPeriodthreadpoolPeriodmaxsize,launchesPeriodeventhandlerPeriodthreadpoolPeriodpriority,launchesPeriodeventhandlerPeriodupdatelastmodification) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "launches.eventhandler.threadpool.maxsize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "launches.eventhandler.updatelastmodification" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "launches.eventhandler.threadpool.priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodwcmPeriodqrcodePeriodservletPeriodwhitelist List  (optional)
 * returns comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo
 **/
exports.comAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodwcmPeriodqrcodePeriodservletPeriodwhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.qrcode.servlet.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * size Integer  (optional)
 * returns comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo
 **/
exports.comAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,size) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * syncTranslationStatePeriodschedulingFormat String  (optional)
 * schedulingRepeatTranslationPeriodschedulingFormat String  (optional)
 * syncTranslationStatePeriodlockTimeoutInMinutes String  (optional)
 * exportPeriodformat String  (optional)
 * returns comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo
 **/
exports.comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,syncTranslationStatePeriodschedulingFormat,schedulingRepeatTranslationPeriodschedulingFormat,syncTranslationStatePeriodlockTimeoutInMinutes,exportPeriodformat) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "syncTranslationState.lockTimeoutInMinutes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "schedulingRepeatTranslation.schedulingFormat" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "syncTranslationState.schedulingFormat" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "export.format" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * portalPeriodoutboxes List  (optional)
 * draftPerioddataPeriodservice String  (optional)
 * draftPeriodmetadataPeriodservice String  (optional)
 * submitPerioddataPeriodservice String  (optional)
 * submitPeriodmetadataPeriodservice String  (optional)
 * pendingSignPerioddataPeriodservice String  (optional)
 * pendingSignPeriodmetadataPeriodservice String  (optional)
 * returns comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo
 **/
exports.comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService = function(post,apply,_delete,action,Dollarlocation,propertylist,portalPeriodoutboxes,draftPerioddataPeriodservice,draftPeriodmetadataPeriodservice,submitPerioddataPeriodservice,submitPeriodmetadataPeriodservice,pendingSignPerioddataPeriodservice,pendingSignPeriodmetadataPeriodservice) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "draft.data.service" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "submit.metadata.service" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pendingSign.metadata.service" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "portal.outboxes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "submit.data.service" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pendingSign.data.service" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "draft.metadata.service" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * formportalPeriodinterval String  (optional)
 * returns comAdobeFdFpConfigFormsPortalSchedulerServiceInfo
 **/
exports.comAdobeFdFpConfigFormsPortalSchedulerService = function(post,apply,_delete,action,Dollarlocation,propertylist,formportalPeriodinterval) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "formportal.interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * alloweddataFileLocations List  (optional)
 * returns comAdobeFormsCommonServiceImplDefaultDataProviderInfo
 **/
exports.comAdobeFormsCommonServiceImplDefaultDataProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,alloweddataFileLocations) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "alloweddataFileLocations" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * tempStorageConfig String  (optional)
 * returns comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo
 **/
exports.comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp = function(post,apply,_delete,action,Dollarlocation,propertylist,tempStorageConfig) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tempStorageConfig" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * duration for Temporary Storage String  (optional)
 * duration for Anonymous Storage String  (optional)
 * returns comAdobeFormsCommonServletTempCleanUpTaskInfo
 **/
exports.comAdobeFormsCommonServletTempCleanUpTask = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression,duration for Temporary Storage,duration for Anonymous Storage) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "Duration for Temporary Storage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "Duration for Anonymous Storage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * queryPeriodlimit Integer  (optional)
 * filePeriodtypePeriodextensionPeriodmap List  (optional)
 * returns comAdobeGraniteAcpPlatformPlatformServletInfo
 **/
exports.comAdobeGraniteAcpPlatformPlatformServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,queryPeriodlimit,filePeriodtypePeriodextensionPeriodmap) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "file.type.extension.map" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "query.limit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * aggregatePeriodrelationships List  (optional)
 * aggregatePerioddescendPeriodvirtual Boolean  (optional)
 * returns comAdobeGraniteActivitystreamsImplActivityManagerImplInfo
 **/
exports.comAdobeGraniteActivitystreamsImplActivityManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,aggregatePeriodrelationships,aggregatePerioddescendPeriodvirtual) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "aggregate.relationships" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "aggregate.descend.virtual" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * disabled Boolean  (optional)
 * returns comAdobeGraniteAnalyzerBaseSystemStatusServletInfo
 **/
exports.comAdobeGraniteAnalyzerBaseSystemStatusServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,disabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "disabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * disabled Boolean  (optional)
 * returns comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo
 **/
exports.comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,disabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "disabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodcqPeriodcdnPeriodcdnRewriter String  (optional)
 * comPeriodadobePeriodcqPeriodcloudConfigPeriodcomponents String  (optional)
 * comPeriodadobePeriodcqPeriodcloudConfigPeriodcore String  (optional)
 * comPeriodadobePeriodcqPeriodcloudConfigPeriodui String  (optional)
 * comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodeditor String  (optional)
 * comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodcore String  (optional)
 * comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodwcmPeriodcore String  (optional)
 * comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPerioduiPeriodcommons String  (optional)
 * comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodwcmPeriodstyle String  (optional)
 * comPeriodadobePeriodcqPeriodcqActivitymapIntegration String  (optional)
 * comPeriodadobePeriodcqPeriodcqContexthubCommons String  (optional)
 * comPeriodadobePeriodcqPeriodcqDtm String  (optional)
 * comPeriodadobePeriodcqPeriodcqHealthcheck String  (optional)
 * comPeriodadobePeriodcqPeriodcqMultisiteTargeting String  (optional)
 * comPeriodadobePeriodcqPeriodcqPreUpgradeCleanup String  (optional)
 * comPeriodadobePeriodcqPeriodcqProductInfoProvider String  (optional)
 * comPeriodadobePeriodcqPeriodcqRestSites String  (optional)
 * comPeriodadobePeriodcqPeriodcqSecurityHc String  (optional)
 * comPeriodadobePeriodcqPerioddamPeriodcqDamSvgHandler String  (optional)
 * comPeriodadobePeriodcqPerioddamPeriodcqScene7Imaging String  (optional)
 * comPeriodadobePeriodcqPerioddtmReactorPeriodcore String  (optional)
 * comPeriodadobePeriodcqPerioddtmReactorPeriodui String  (optional)
 * comPeriodadobePeriodcqPeriodexpJspelResolver String  (optional)
 * comPeriodadobePeriodcqPeriodinboxPeriodcqInbox String  (optional)
 * comPeriodadobePeriodcqPeriodjsonSchemaParser String  (optional)
 * comPeriodadobePeriodcqPeriodmediaPeriodcqMediaPublishingDpsFpCore String  (optional)
 * comPeriodadobePeriodcqPeriodmobilePeriodcqMobileCaas String  (optional)
 * comPeriodadobePeriodcqPeriodmobilePeriodcqMobileIndexBuilder String  (optional)
 * comPeriodadobePeriodcqPeriodmobilePeriodcqMobilePhonegapBuild String  (optional)
 * comPeriodadobePeriodcqPeriodmyspell String  (optional)
 * comPeriodadobePeriodcqPeriodsamplePeriodwePeriodretailPeriodcore String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPerioddcc String  (optional)
 * comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPeriodmqPeriodcore String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialAsProvider String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingBasicImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialCalendarImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialContentFragmentsImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialEnablementImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialGraphImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialIdeationImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialJcrProvider String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMembersImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMsProvider String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsChannelsWeb String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialRdbProvider String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScfImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringBasicImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialServiceusersImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialSrpImpl String  (optional)
 * comPeriodadobePeriodcqPeriodsocialPeriodcqSocialUgcbaseImpl String  (optional)
 * comPeriodadobePerioddamPeriodcqDamCfmImpl String  (optional)
 * comPeriodadobePeriodformsPeriodfoundationFormsFoundationBase String  (optional)
 * comPeriodadobePeriodgranitePeriodapicontroller String  (optional)
 * comPeriodadobePeriodgranitePeriodassetPeriodcore String  (optional)
 * comPeriodadobePeriodgranitePeriodauthPeriodsso String  (optional)
 * comPeriodadobePeriodgranitePeriodbundlesPeriodhcPeriodimpl String  (optional)
 * comPeriodadobePeriodgranitePeriodcompatRouter String  (optional)
 * comPeriodadobePeriodgranitePeriodconf String  (optional)
 * comPeriodadobePeriodgranitePeriodconfPerioduiPeriodcore String  (optional)
 * comPeriodadobePeriodgranitePeriodcors String  (optional)
 * comPeriodadobePeriodgranitePeriodcrxExplorer String  (optional)
 * comPeriodadobePeriodgranitePeriodcrxdeLite String  (optional)
 * comPeriodadobePeriodgranitePeriodcryptoPeriodconfig String  (optional)
 * comPeriodadobePeriodgranitePeriodcryptoPeriodextension String  (optional)
 * comPeriodadobePeriodgranitePeriodcryptoPeriodfile String  (optional)
 * comPeriodadobePeriodgranitePeriodcryptoPeriodjcr String  (optional)
 * comPeriodadobePeriodgranitePeriodcsrf String  (optional)
 * comPeriodadobePeriodgranitePerioddistributionPeriodcore String  (optional)
 * comPeriodadobePeriodgranitePerioddropwizardPeriodmetrics String  (optional)
 * comPeriodadobePeriodgranitePeriodfragsPeriodimpl String  (optional)
 * comPeriodadobePeriodgranitePeriodgibson String  (optional)
 * comPeriodadobePeriodgranitePeriodinfocollector String  (optional)
 * comPeriodadobePeriodgranitePeriodinstallerPeriodfactoryPeriodpackages String  (optional)
 * comPeriodadobePeriodgranitePeriodjettyPeriodssl String  (optional)
 * comPeriodadobePeriodgranitePeriodjobsPeriodasync String  (optional)
 * comPeriodadobePeriodgranitePeriodmaintenancePeriodoak String  (optional)
 * comPeriodadobePeriodgranitePeriodmonitoringPeriodcore String  (optional)
 * comPeriodadobePeriodgranitePeriodqueries String  (optional)
 * comPeriodadobePeriodgranitePeriodreplicationPeriodhcPeriodimpl String  (optional)
 * comPeriodadobePeriodgranitePeriodrepositoryPeriodchecker String  (optional)
 * comPeriodadobePeriodgranitePeriodrepositoryPeriodhcPeriodimpl String  (optional)
 * comPeriodadobePeriodgranitePeriodrestPeriodassets String  (optional)
 * comPeriodadobePeriodgranitePeriodsecurityPeriodui String  (optional)
 * comPeriodadobePeriodgranitePeriodstartup String  (optional)
 * comPeriodadobePeriodgranitePeriodtagsoup String  (optional)
 * comPeriodadobePeriodgranitePeriodtaskmanagementPeriodcore String  (optional)
 * comPeriodadobePeriodgranitePeriodtaskmanagementPeriodworkflow String  (optional)
 * comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodcompilerPeriodless String  (optional)
 * comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodprocessorPeriodgcc String  (optional)
 * comPeriodadobePeriodgranitePeriodwebconsolePeriodplugins String  (optional)
 * comPeriodadobePeriodgranitePeriodworkflowPeriodconsole String  (optional)
 * comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodlinux String  (optional)
 * comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodmacosx String  (optional)
 * comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodwin String  (optional)
 * comPerioddayPeriodcommonsPeriodosgiPeriodwrapperPeriodsimpleJndi String  (optional)
 * comPerioddayPeriodcqPeriodcqAuthhandler String  (optional)
 * comPerioddayPeriodcqPeriodcqCompatConfigupdate String  (optional)
 * comPerioddayPeriodcqPeriodcqLicensebranding String  (optional)
 * comPerioddayPeriodcqPeriodcqNotifcationImpl String  (optional)
 * comPerioddayPeriodcqPeriodcqReplicationAudit String  (optional)
 * comPerioddayPeriodcqPeriodcqSearchExt String  (optional)
 * comPerioddayPeriodcqPerioddamPeriodcqDamAnnotationPrint String  (optional)
 * comPerioddayPeriodcqPerioddamPeriodcqDamAssetUsage String  (optional)
 * comPerioddayPeriodcqPerioddamPeriodcqDamS7dam String  (optional)
 * comPerioddayPeriodcqPerioddamPeriodcqDamSimilaritysearch String  (optional)
 * comPerioddayPeriodcqPerioddamPerioddamWebdavSupport String  (optional)
 * comPerioddayPeriodcqPeriodpreUpgradeTasks String  (optional)
 * comPerioddayPeriodcqPeriodreplicationPeriodextensions String  (optional)
 * comPerioddayPeriodcqPeriodwcmPeriodcqMsmCore String  (optional)
 * comPerioddayPeriodcqPeriodwcmPeriodcqWcmTranslation String  (optional)
 * dayCommonsJrawio String  (optional)
 * orgPeriodapachePeriodariesPeriodjmxPeriodwhiteboard String  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodsslfilter String  (optional)
 * orgPeriodapachePeriodfelixPeriodorgPeriodapachePeriodfelixPeriodthreaddump String  (optional)
 * orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodds String  (optional)
 * orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodevent String  (optional)
 * orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodmemoryusage String  (optional)
 * orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodpackageadmin String  (optional)
 * orgPeriodapachePeriodjackrabbitPeriodoakAuthLdap String  (optional)
 * orgPeriodapachePeriodjackrabbitPeriodoakSegmentTar String  (optional)
 * orgPeriodapachePeriodjackrabbitPeriodoakSolrOsgi String  (optional)
 * orgPeriodapachePeriodslingPeriodbundleresourcePeriodimpl String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodfsclassloader String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodwebconsole String  (optional)
 * orgPeriodapachePeriodslingPerioddatasource String  (optional)
 * orgPeriodapachePeriodslingPerioddiscoveryPeriodbase String  (optional)
 * orgPeriodapachePeriodslingPerioddiscoveryPeriodoak String  (optional)
 * orgPeriodapachePeriodslingPerioddiscoveryPeriodsupport String  (optional)
 * orgPeriodapachePeriodslingPerioddistributionPeriodapi String  (optional)
 * orgPeriodapachePeriodslingPerioddistributionPeriodcore String  (optional)
 * orgPeriodapachePeriodslingPeriodextensionsPeriodwebconsolesecurityprovider String  (optional)
 * orgPeriodapachePeriodslingPeriodhcPeriodwebconsole String  (optional)
 * orgPeriodapachePeriodslingPeriodinstallerPeriodconsole String  (optional)
 * orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodfile String  (optional)
 * orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodjcr String  (optional)
 * orgPeriodapachePeriodslingPeriodjcrPerioddavex String  (optional)
 * orgPeriodapachePeriodslingPeriodjcrPeriodresourcesecurity String  (optional)
 * orgPeriodapachePeriodslingPeriodjmxPeriodprovider String  (optional)
 * orgPeriodapachePeriodslingPeriodlaunchpadPeriodinstaller String  (optional)
 * orgPeriodapachePeriodslingPeriodmodelsPeriodimpl String  (optional)
 * orgPeriodapachePeriodslingPeriodrepoinitPeriodparser String  (optional)
 * orgPeriodapachePeriodslingPeriodresourcePeriodinventory String  (optional)
 * orgPeriodapachePeriodslingPeriodresourceresolver String  (optional)
 * orgPeriodapachePeriodslingPeriodscriptingPeriodjavascript String  (optional)
 * orgPeriodapachePeriodslingPeriodscriptingPeriodjst String  (optional)
 * orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodprovider String  (optional)
 * orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodmodelsPeriodprovider String  (optional)
 * orgPeriodapachePeriodslingPeriodsecurity String  (optional)
 * orgPeriodapachePeriodslingPeriodservletsPeriodcompat String  (optional)
 * orgPeriodapachePeriodslingPeriodservletsPeriodget String  (optional)
 * orgPeriodapachePeriodslingPeriodstartupfilterPerioddisabler String  (optional)
 * orgPeriodapachePeriodslingPeriodtracer String  (optional)
 * wePeriodretailPeriodclientPeriodappPeriodcore String  (optional)
 * returns comAdobeGraniteApicontrollerFilterResolverHookFactoryInfo
 **/
exports.comAdobeGraniteApicontrollerFilterResolverHookFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodcqPeriodcdnPeriodcdnRewriter,comPeriodadobePeriodcqPeriodcloudConfigPeriodcomponents,comPeriodadobePeriodcqPeriodcloudConfigPeriodcore,comPeriodadobePeriodcqPeriodcloudConfigPeriodui,comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodeditor,comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodcore,comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodprojectsPeriodwcmPeriodcore,comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPerioduiPeriodcommons,comPeriodadobePeriodcqPeriodcomPeriodadobePeriodcqPeriodwcmPeriodstyle,comPeriodadobePeriodcqPeriodcqActivitymapIntegration,comPeriodadobePeriodcqPeriodcqContexthubCommons,comPeriodadobePeriodcqPeriodcqDtm,comPeriodadobePeriodcqPeriodcqHealthcheck,comPeriodadobePeriodcqPeriodcqMultisiteTargeting,comPeriodadobePeriodcqPeriodcqPreUpgradeCleanup,comPeriodadobePeriodcqPeriodcqProductInfoProvider,comPeriodadobePeriodcqPeriodcqRestSites,comPeriodadobePeriodcqPeriodcqSecurityHc,comPeriodadobePeriodcqPerioddamPeriodcqDamSvgHandler,comPeriodadobePeriodcqPerioddamPeriodcqScene7Imaging,comPeriodadobePeriodcqPerioddtmReactorPeriodcore,comPeriodadobePeriodcqPerioddtmReactorPeriodui,comPeriodadobePeriodcqPeriodexpJspelResolver,comPeriodadobePeriodcqPeriodinboxPeriodcqInbox,comPeriodadobePeriodcqPeriodjsonSchemaParser,comPeriodadobePeriodcqPeriodmediaPeriodcqMediaPublishingDpsFpCore,comPeriodadobePeriodcqPeriodmobilePeriodcqMobileCaas,comPeriodadobePeriodcqPeriodmobilePeriodcqMobileIndexBuilder,comPeriodadobePeriodcqPeriodmobilePeriodcqMobilePhonegapBuild,comPeriodadobePeriodcqPeriodmyspell,comPeriodadobePeriodcqPeriodsamplePeriodwePeriodretailPeriodcore,comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPerioddcc,comPeriodadobePeriodcqPeriodscreensPeriodcomPeriodadobePeriodcqPeriodscreensPeriodmqPeriodcore,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialAsProvider,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingBasicImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialBadgingImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialCalendarImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialContentFragmentsImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialEnablementImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialGraphImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialIdeationImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialJcrProvider,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMembersImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialMsProvider,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsChannelsWeb,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialNotificationsImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialRdbProvider,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScfImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringBasicImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialScoringImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialServiceusersImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialSrpImpl,comPeriodadobePeriodcqPeriodsocialPeriodcqSocialUgcbaseImpl,comPeriodadobePerioddamPeriodcqDamCfmImpl,comPeriodadobePeriodformsPeriodfoundationFormsFoundationBase,comPeriodadobePeriodgranitePeriodapicontroller,comPeriodadobePeriodgranitePeriodassetPeriodcore,comPeriodadobePeriodgranitePeriodauthPeriodsso,comPeriodadobePeriodgranitePeriodbundlesPeriodhcPeriodimpl,comPeriodadobePeriodgranitePeriodcompatRouter,comPeriodadobePeriodgranitePeriodconf,comPeriodadobePeriodgranitePeriodconfPerioduiPeriodcore,comPeriodadobePeriodgranitePeriodcors,comPeriodadobePeriodgranitePeriodcrxExplorer,comPeriodadobePeriodgranitePeriodcrxdeLite,comPeriodadobePeriodgranitePeriodcryptoPeriodconfig,comPeriodadobePeriodgranitePeriodcryptoPeriodextension,comPeriodadobePeriodgranitePeriodcryptoPeriodfile,comPeriodadobePeriodgranitePeriodcryptoPeriodjcr,comPeriodadobePeriodgranitePeriodcsrf,comPeriodadobePeriodgranitePerioddistributionPeriodcore,comPeriodadobePeriodgranitePerioddropwizardPeriodmetrics,comPeriodadobePeriodgranitePeriodfragsPeriodimpl,comPeriodadobePeriodgranitePeriodgibson,comPeriodadobePeriodgranitePeriodinfocollector,comPeriodadobePeriodgranitePeriodinstallerPeriodfactoryPeriodpackages,comPeriodadobePeriodgranitePeriodjettyPeriodssl,comPeriodadobePeriodgranitePeriodjobsPeriodasync,comPeriodadobePeriodgranitePeriodmaintenancePeriodoak,comPeriodadobePeriodgranitePeriodmonitoringPeriodcore,comPeriodadobePeriodgranitePeriodqueries,comPeriodadobePeriodgranitePeriodreplicationPeriodhcPeriodimpl,comPeriodadobePeriodgranitePeriodrepositoryPeriodchecker,comPeriodadobePeriodgranitePeriodrepositoryPeriodhcPeriodimpl,comPeriodadobePeriodgranitePeriodrestPeriodassets,comPeriodadobePeriodgranitePeriodsecurityPeriodui,comPeriodadobePeriodgranitePeriodstartup,comPeriodadobePeriodgranitePeriodtagsoup,comPeriodadobePeriodgranitePeriodtaskmanagementPeriodcore,comPeriodadobePeriodgranitePeriodtaskmanagementPeriodworkflow,comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodcompilerPeriodless,comPeriodadobePeriodgranitePerioduiPeriodclientlibsPeriodprocessorPeriodgcc,comPeriodadobePeriodgranitePeriodwebconsolePeriodplugins,comPeriodadobePeriodgranitePeriodworkflowPeriodconsole,comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodlinux,comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodmacosx,comPeriodadobePeriodxmpPeriodworkerPeriodfilesPeriodnativePeriodfragmentPeriodwin,comPerioddayPeriodcommonsPeriodosgiPeriodwrapperPeriodsimpleJndi,comPerioddayPeriodcqPeriodcqAuthhandler,comPerioddayPeriodcqPeriodcqCompatConfigupdate,comPerioddayPeriodcqPeriodcqLicensebranding,comPerioddayPeriodcqPeriodcqNotifcationImpl,comPerioddayPeriodcqPeriodcqReplicationAudit,comPerioddayPeriodcqPeriodcqSearchExt,comPerioddayPeriodcqPerioddamPeriodcqDamAnnotationPrint,comPerioddayPeriodcqPerioddamPeriodcqDamAssetUsage,comPerioddayPeriodcqPerioddamPeriodcqDamS7dam,comPerioddayPeriodcqPerioddamPeriodcqDamSimilaritysearch,comPerioddayPeriodcqPerioddamPerioddamWebdavSupport,comPerioddayPeriodcqPeriodpreUpgradeTasks,comPerioddayPeriodcqPeriodreplicationPeriodextensions,comPerioddayPeriodcqPeriodwcmPeriodcqMsmCore,comPerioddayPeriodcqPeriodwcmPeriodcqWcmTranslation,dayCommonsJrawio,orgPeriodapachePeriodariesPeriodjmxPeriodwhiteboard,orgPeriodapachePeriodfelixPeriodhttpPeriodsslfilter,orgPeriodapachePeriodfelixPeriodorgPeriodapachePeriodfelixPeriodthreaddump,orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodds,orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodevent,orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodmemoryusage,orgPeriodapachePeriodfelixPeriodwebconsolePeriodpluginsPeriodpackageadmin,orgPeriodapachePeriodjackrabbitPeriodoakAuthLdap,orgPeriodapachePeriodjackrabbitPeriodoakSegmentTar,orgPeriodapachePeriodjackrabbitPeriodoakSolrOsgi,orgPeriodapachePeriodslingPeriodbundleresourcePeriodimpl,orgPeriodapachePeriodslingPeriodcommonsPeriodfsclassloader,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodwebconsole,orgPeriodapachePeriodslingPerioddatasource,orgPeriodapachePeriodslingPerioddiscoveryPeriodbase,orgPeriodapachePeriodslingPerioddiscoveryPeriodoak,orgPeriodapachePeriodslingPerioddiscoveryPeriodsupport,orgPeriodapachePeriodslingPerioddistributionPeriodapi,orgPeriodapachePeriodslingPerioddistributionPeriodcore,orgPeriodapachePeriodslingPeriodextensionsPeriodwebconsolesecurityprovider,orgPeriodapachePeriodslingPeriodhcPeriodwebconsole,orgPeriodapachePeriodslingPeriodinstallerPeriodconsole,orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodfile,orgPeriodapachePeriodslingPeriodinstallerPeriodproviderPeriodjcr,orgPeriodapachePeriodslingPeriodjcrPerioddavex,orgPeriodapachePeriodslingPeriodjcrPeriodresourcesecurity,orgPeriodapachePeriodslingPeriodjmxPeriodprovider,orgPeriodapachePeriodslingPeriodlaunchpadPeriodinstaller,orgPeriodapachePeriodslingPeriodmodelsPeriodimpl,orgPeriodapachePeriodslingPeriodrepoinitPeriodparser,orgPeriodapachePeriodslingPeriodresourcePeriodinventory,orgPeriodapachePeriodslingPeriodresourceresolver,orgPeriodapachePeriodslingPeriodscriptingPeriodjavascript,orgPeriodapachePeriodslingPeriodscriptingPeriodjst,orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodprovider,orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodmodelsPeriodprovider,orgPeriodapachePeriodslingPeriodsecurity,orgPeriodapachePeriodslingPeriodservletsPeriodcompat,orgPeriodapachePeriodslingPeriodservletsPeriodget,orgPeriodapachePeriodslingPeriodstartupfilterPerioddisabler,orgPeriodapachePeriodslingPeriodtracer,wePeriodretailPeriodclientPeriodappPeriodcore) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.cq.social.cq-social-serviceusers-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.jcr.davex" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.xmp.worker.files.native.fragment.win" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.media.cq-media-publishing-dps-fp-core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.exp-jspel-resolver" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-calendar-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.com.adobe.cq.projects.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.models.impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.dam.cq-scene7-imaging" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cloud-config.components" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cq-pre-upgrade-cleanup" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-ms-provider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.dam.dam-webdav-support" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.cq-licensebranding" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.myspell" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.replication.hc.impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cq-contexthub-commons" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.webconsole.plugins.memoryusage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.bundleresource.impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.distribution.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.com.adobe.cq.wcm.style" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.compat-router" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.distribution.api" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.dam.cq-dam-cfm-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.datasource" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.scripting.sightly.models.provider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.bundles.hc.impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.jackrabbit.oak-solr-osgi" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-scoring-basic-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.com.adobe.cq.editor" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.crypto.config" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.queries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "we.retail.client.app.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.csrf" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.startup" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.tracer" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.servlets.get" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.crxde-lite" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.sample.we.retail.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.servlets.compat" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.discovery.base" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.jackrabbit.oak-segment-tar" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.screens.com.adobe.cq.screens.dcc" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.resourceresolver" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.launchpad.installer" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-badging-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.scripting.sightly.js.provider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.taskmanagement.workflow" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-jcr-provider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-scoring-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cloud-config.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-notifications-channels-web" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "day-commons-jrawio" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.crx-explorer" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.rest.assets" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-badging-basic-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cq-activitymap-integration" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.installer.provider.jcr" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.auth.sso" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.cq-authhandler" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.jetty.ssl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cq-rest-sites" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.org.apache.felix.threaddump" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.webconsole.plugins.event" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.scripting.jst" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.jobs.async" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.ui.clientlibs.compiler.less" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.discovery.oak" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.crypto.file" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-as-provider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.xmp.worker.files.native.fragment.linux" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.xmp.worker.files.native.fragment.macosx" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-scf-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.repository.hc.impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.security" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.jmx.provider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cq-security-hc" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.http.sslfilter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.extensions.webconsolesecurityprovider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.hc.webconsole" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.webconsole.plugins" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.cq-notifcation-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-notifications-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.security.ui" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.scripting.javascript" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.maintenance.oak" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-enablement-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.dam.cq-dam-asset-usage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-srp-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.commons.osgi.wrapper.simple-jndi" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.dropwizard.metrics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-members-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.installer.factory.packages" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.ui.clientlibs.processor.gcc" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.startupfilter.disabler" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cq-healthcheck" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.installer.provider.file" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.dtm-reactor.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cloud-config.ui" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.commons.log.webconsole" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.installer.console" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.webconsole.plugins.packageadmin" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.conf.ui.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-rdb-provider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.repoinit.parser" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.discovery.support" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-graph-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.dam.cq-dam-s7dam" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.apicontroller" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.jackrabbit.oak-auth-ldap" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.conf" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.dam.cq-dam-similaritysearch" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.wcm.cq-msm-core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.frags.impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.cors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.workflow.console" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.cq-compat-configupdate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.crypto.jcr" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.replication.extensions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.forms.foundation-forms-foundation-base" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.commons.fsclassloader" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.gibson" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.infocollector" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.taskmanagement.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cdn.cdn-rewriter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.tagsoup" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cq-multisite-targeting" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-ugcbase-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.json-schema-parser" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.pre-upgrade-tasks" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.mobile.cq-mobile-index-builder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.screens.com.adobe.cq.screens.mq.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.mobile.cq-mobile-caas" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-ideation-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.com.adobe.cq.ui.commons" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.cq-search-ext" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.dam.cq-dam-annotation-print" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.social.cq-social-content-fragments-impl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.crypto.extension" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.monitoring.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.wcm.cq-wcm-translation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.day.cq.cq-replication-audit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.inbox.cq-inbox" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.webconsole.plugins.ds" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.resource.inventory" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.dtm-reactor.ui" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.mobile.cq-mobile-phonegap-build" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.repository.checker" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.dam.cq-dam-svg-handler" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cq-dtm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.distribution.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.aries.jmx.whiteboard" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.com.adobe.cq.projects.wcm.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.cq.cq-product-info-provider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.jcr.resourcesecurity" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.asset.core" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * servicePeriodranking Integer  (optional)
 * returns comAdobeGraniteAuthCertImplClientCertAuthHandlerInfo
 **/
exports.comAdobeGraniteAuthCertImplClientCertAuthHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,path,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * configid String  (optional)
 * scope String  (optional)
 * returns comAdobeGraniteAuthImsInfo
 **/
exports.comAdobeGraniteAuthIms = function(post,apply,_delete,action,Dollarlocation,propertylist,configid,scope) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "configid" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "scope" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodproviderPeriodid String  (optional)
 * returns comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo
 **/
exports.comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodproviderPeriodid) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * authPeriodimsPeriodclientPeriodsecret String  (optional)
 * customizerPeriodtype String  (optional)
 * returns comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo
 **/
exports.comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,authPeriodimsPeriodclientPeriodsecret,customizerPeriodtype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "auth.ims.client.secret" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "customizer.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodproviderPeriodid String  (optional)
 * returns comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo
 **/
exports.comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodproviderPeriodid) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodproviderPeriodid String  (optional)
 * oauthPeriodproviderPeriodimsPeriodauthorizationPeriodurl String  (optional)
 * oauthPeriodproviderPeriodimsPeriodtokenPeriodurl String  (optional)
 * oauthPeriodproviderPeriodimsPeriodprofilePeriodurl String  (optional)
 * oauthPeriodproviderPeriodimsPeriodextendedPerioddetailsPeriodurls List  (optional)
 * oauthPeriodproviderPeriodimsPeriodvalidatePeriodtokenPeriodurl String  (optional)
 * oauthPeriodproviderPeriodimsPeriodsessionPeriodproperty String  (optional)
 * oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodid String  (optional)
 * oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodsecret String  (optional)
 * oauthPeriodproviderPeriodimsPeriodservicePeriodtoken String  (optional)
 * imsPeriodorgPeriodref String  (optional)
 * imsPeriodgroupPeriodmapping List  (optional)
 * oauthPeriodproviderPeriodimsPeriodonlyPeriodlicensePeriodgroup Boolean  (optional)
 * returns comAdobeGraniteAuthImsImplIMSProviderImplInfo
 **/
exports.comAdobeGraniteAuthImsImplIMSProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodproviderPeriodid,oauthPeriodproviderPeriodimsPeriodauthorizationPeriodurl,oauthPeriodproviderPeriodimsPeriodtokenPeriodurl,oauthPeriodproviderPeriodimsPeriodprofilePeriodurl,oauthPeriodproviderPeriodimsPeriodextendedPerioddetailsPeriodurls,oauthPeriodproviderPeriodimsPeriodvalidatePeriodtokenPeriodurl,oauthPeriodproviderPeriodimsPeriodsessionPeriodproperty,oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodid,oauthPeriodproviderPeriodimsPeriodservicePeriodtokenPeriodclientPeriodsecret,oauthPeriodproviderPeriodimsPeriodservicePeriodtoken,imsPeriodorgPeriodref,imsPeriodgroupPeriodmapping,oauthPeriodproviderPeriodimsPeriodonlyPeriodlicensePeriodgroup) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.provider.ims.session.property" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.ims.extended.details.urls" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "oauth.provider.ims.validate.token.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.ims.only.license.group" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.provider.ims.authorization.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.ims.service.token.client.secret" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "ims.org.ref" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.ims.profile.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.ims.service.token" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "ims.group.mapping" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "oauth.provider.ims.service.token.client.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.ims.token.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodconfigmanagerPeriodimsPeriodconfigid String  (optional)
 * imsPeriodowningEntity String  (optional)
 * aemPeriodinstanceId String  (optional)
 * imsPeriodserviceCode String  (optional)
 * returns comAdobeGraniteAuthImsImplImsConfigProviderImplInfo
 **/
exports.comAdobeGraniteAuthImsImplImsConfigProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodconfigmanagerPeriodimsPeriodconfigid,imsPeriodowningEntity,aemPeriodinstanceId,imsPeriodserviceCode) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ims.owningEntity" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.configmanager.ims.configid" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "aem.instanceId" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "ims.serviceCode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * authPeriodtokenPeriodproviderPeriodtitle String  (optional)
 * authPeriodtokenPeriodproviderPerioddefaultPeriodclaims List  (optional)
 * authPeriodtokenPeriodproviderPeriodendpoint String  (optional)
 * authPeriodaccessPeriodtokenPeriodrequest String  (optional)
 * authPeriodtokenPeriodproviderPeriodkeypairPeriodalias String  (optional)
 * authPeriodtokenPeriodproviderPeriodconnPeriodtimeout Integer  (optional)
 * authPeriodtokenPeriodproviderPeriodsoPeriodtimeout Integer  (optional)
 * authPeriodtokenPeriodproviderPeriodclientPeriodid String  (optional)
 * authPeriodtokenPeriodproviderPeriodscope String  (optional)
 * authPeriodtokenPeriodproviderPeriodreusePeriodaccessPeriodtoken Boolean  (optional)
 * authPeriodtokenPeriodproviderPeriodrelaxedPeriodssl Boolean  (optional)
 * tokenPeriodrequestPeriodcustomizerPeriodtype String  (optional)
 * authPeriodtokenPeriodvalidatorPeriodtype String  (optional)
 * returns comAdobeGraniteAuthOauthAccesstokenProviderInfo
 **/
exports.comAdobeGraniteAuthOauthAccesstokenProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,name,authPeriodtokenPeriodproviderPeriodtitle,authPeriodtokenPeriodproviderPerioddefaultPeriodclaims,authPeriodtokenPeriodproviderPeriodendpoint,authPeriodaccessPeriodtokenPeriodrequest,authPeriodtokenPeriodproviderPeriodkeypairPeriodalias,authPeriodtokenPeriodproviderPeriodconnPeriodtimeout,authPeriodtokenPeriodproviderPeriodsoPeriodtimeout,authPeriodtokenPeriodproviderPeriodclientPeriodid,authPeriodtokenPeriodproviderPeriodscope,authPeriodtokenPeriodproviderPeriodreusePeriodaccessPeriodtoken,authPeriodtokenPeriodproviderPeriodrelaxedPeriodssl,tokenPeriodrequestPeriodcustomizerPeriodtype,authPeriodtokenPeriodvalidatorPeriodtype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "auth.token.provider.relaxed.ssl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "auth.token.provider.conn.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "auth.token.provider.client.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.token.provider.endpoint" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "token.request.customizer.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.token.provider.default.claims" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "auth.token.validator.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.token.provider.so.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "auth.token.provider.title" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.access.token.request" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.token.provider.keypair.alias" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.token.provider.scope" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.token.provider.reuse.access.token" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * oauthPeriodclientIdsPeriodallowed List  (optional)
 * authPeriodbearerPeriodsyncPeriodims Boolean  (optional)
 * authPeriodtokenRequestParameter String  (optional)
 * oauthPeriodbearerPeriodconfigid String  (optional)
 * oauthPeriodjwtPeriodsupport Boolean  (optional)
 * returns comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo
 **/
exports.comAdobeGraniteAuthOauthImplBearerAuthenticationHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,path,oauthPeriodclientIdsPeriodallowed,authPeriodbearerPeriodsyncPeriodims,authPeriodtokenRequestParameter,oauthPeriodbearerPeriodconfigid,oauthPeriodjwtPeriodsupport) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.bearer.sync.ims" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "auth.tokenRequestParameter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.clientIds.allowed" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "oauth.jwt.support" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.bearer.configid" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * authPeriodtokenPeriodvalidatorPeriodtype String  (optional)
 * returns comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo
 **/
exports.comAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,authPeriodtokenPeriodvalidatorPeriodtype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "auth.token.validator.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodproviderPeriodid String  (optional)
 * returns comAdobeGraniteAuthOauthImplFacebookProviderImplInfo
 **/
exports.comAdobeGraniteAuthOauthImplFacebookProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodproviderPeriodid) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodproviderPeriodid String  (optional)
 * oauthPeriodproviderPeriodgithubPeriodauthorizationPeriodurl String  (optional)
 * oauthPeriodproviderPeriodgithubPeriodtokenPeriodurl String  (optional)
 * oauthPeriodproviderPeriodgithubPeriodprofilePeriodurl String  (optional)
 * returns comAdobeGraniteAuthOauthImplGithubProviderImplInfo
 **/
exports.comAdobeGraniteAuthOauthImplGithubProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodproviderPeriodid,oauthPeriodproviderPeriodgithubPeriodauthorizationPeriodurl,oauthPeriodproviderPeriodgithubPeriodtokenPeriodurl,oauthPeriodproviderPeriodgithubPeriodprofilePeriodurl) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.github.profile.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.github.authorization.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.github.token.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodproviderPeriodid String  (optional)
 * oauthPeriodproviderPeriodgranitePeriodauthorizationPeriodurl String  (optional)
 * oauthPeriodproviderPeriodgranitePeriodtokenPeriodurl String  (optional)
 * oauthPeriodproviderPeriodgranitePeriodprofilePeriodurl String  (optional)
 * oauthPeriodproviderPeriodgranitePeriodextendedPerioddetailsPeriodurls String  (optional)
 * returns comAdobeGraniteAuthOauthImplGraniteProviderInfo
 **/
exports.comAdobeGraniteAuthOauthImplGraniteProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodproviderPeriodid,oauthPeriodproviderPeriodgranitePeriodauthorizationPeriodurl,oauthPeriodproviderPeriodgranitePeriodtokenPeriodurl,oauthPeriodproviderPeriodgranitePeriodprofilePeriodurl,oauthPeriodproviderPeriodgranitePeriodextendedPerioddetailsPeriodurls) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.provider.granite.authorization.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.granite.profile.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.granite.token.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.provider.granite.extended.details.urls" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodcookiePeriodloginPeriodtimeout String  (optional)
 * oauthPeriodcookiePeriodmaxPeriodage String  (optional)
 * returns comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo
 **/
exports.comAdobeGraniteAuthOauthImplHelperProviderConfigManager = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodcookiePeriodloginPeriodtimeout,oauthPeriodcookiePeriodmaxPeriodage) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.cookie.login.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.cookie.max.age" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodcookiePeriodloginPeriodtimeout String  (optional)
 * oauthPeriodcookiePeriodmaxPeriodage String  (optional)
 * returns comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo
 **/
exports.comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodcookiePeriodloginPeriodtimeout,oauthPeriodcookiePeriodmaxPeriodage) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.cookie.login.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.cookie.max.age" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * returns comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo
 **/
exports.comAdobeGraniteAuthOauthImplOAuthAuthenticationHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,path) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodproviderPeriodid String  (optional)
 * returns comAdobeGraniteAuthOauthImplTwitterProviderImplInfo
 **/
exports.comAdobeGraniteAuthOauthImplTwitterProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodproviderPeriodid) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodconfigPeriodid String  (optional)
 * oauthPeriodclientPeriodid String  (optional)
 * oauthPeriodclientPeriodsecret String  (optional)
 * oauthPeriodscope List  (optional)
 * oauthPeriodconfigPeriodproviderPeriodid String  (optional)
 * oauthPeriodcreatePeriodusers Boolean  (optional)
 * oauthPerioduseridPeriodproperty String  (optional)
 * forcePeriodstrictPeriodusernamePeriodmatching Boolean  (optional)
 * oauthPeriodencodePerioduserids Boolean  (optional)
 * oauthPeriodhashPerioduserids Boolean  (optional)
 * oauthPeriodcallBackUrl String  (optional)
 * oauthPeriodaccessPeriodtokenPeriodpersist Boolean  (optional)
 * oauthPeriodaccessPeriodtokenPeriodpersistPeriodcookie Boolean  (optional)
 * oauthPeriodcsrfPeriodstatePeriodprotection Boolean  (optional)
 * oauthPeriodredirectPeriodrequestPeriodparams Boolean  (optional)
 * oauthPeriodconfigPeriodsiblingsPeriodallow Boolean  (optional)
 * returns comAdobeGraniteAuthOauthProviderInfo
 **/
exports.comAdobeGraniteAuthOauthProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodconfigPeriodid,oauthPeriodclientPeriodid,oauthPeriodclientPeriodsecret,oauthPeriodscope,oauthPeriodconfigPeriodproviderPeriodid,oauthPeriodcreatePeriodusers,oauthPerioduseridPeriodproperty,forcePeriodstrictPeriodusernamePeriodmatching,oauthPeriodencodePerioduserids,oauthPeriodhashPerioduserids,oauthPeriodcallBackUrl,oauthPeriodaccessPeriodtokenPeriodpersist,oauthPeriodaccessPeriodtokenPeriodpersistPeriodcookie,oauthPeriodcsrfPeriodstatePeriodprotection,oauthPeriodredirectPeriodrequestPeriodparams,oauthPeriodconfigPeriodsiblingsPeriodallow) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.create.users" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.config.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.userid.property" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.access.token.persist.cookie" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "force.strict.username.matching" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.scope" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "oauth.hash.userids" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.client.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.access.token.persist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.client.secret" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.callBackUrl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.redirect.request.params" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.encode.userids" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.csrf.state.protection" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.config.siblings.allow" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "oauth.config.provider.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * supportedPaths List  (optional)
 * returns comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo
 **/
exports.comAdobeGraniteAuthRequirementImplDefaultRequirementHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,supportedPaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "supportedPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path List  (optional)
 * servicePeriodranking Integer  (optional)
 * idpUrl String  (optional)
 * idpCertAlias String  (optional)
 * idpHttpRedirect Boolean  (optional)
 * serviceProviderEntityId String  (optional)
 * assertionConsumerServiceURL String  (optional)
 * spPrivateKeyAlias String  (optional)
 * keyStorePassword String  (optional)
 * defaultRedirectUrl String  (optional)
 * userIDAttribute String  (optional)
 * useEncryption Boolean  (optional)
 * createUser Boolean  (optional)
 * userIntermediatePath String  (optional)
 * addGroupMemberships Boolean  (optional)
 * groupMembershipAttribute String  (optional)
 * defaultGroups List  (optional)
 * nameIdFormat String  (optional)
 * synchronizeAttributes List  (optional)
 * handleLogout Boolean  (optional)
 * logoutUrl String  (optional)
 * clockTolerance Integer  (optional)
 * digestMethod String  (optional)
 * signatureMethod String  (optional)
 * identitySyncType String  (optional)
 * idpIdentifier String  (optional)
 * returns comAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo
 **/
exports.comAdobeGraniteAuthSamlSamlAuthenticationHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,path,servicePeriodranking,idpUrl,idpCertAlias,idpHttpRedirect,serviceProviderEntityId,assertionConsumerServiceURL,spPrivateKeyAlias,keyStorePassword,defaultRedirectUrl,userIDAttribute,useEncryption,createUser,userIntermediatePath,addGroupMemberships,groupMembershipAttribute,defaultGroups,nameIdFormat,synchronizeAttributes,handleLogout,logoutUrl,clockTolerance,digestMethod,signatureMethod,identitySyncType,idpIdentifier) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "groupMembershipAttribute" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "idpHttpRedirect" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "idpCertAlias" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "defaultGroups" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "addGroupMemberships" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "path" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "assertionConsumerServiceURL" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "idpUrl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "synchronizeAttributes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "userIntermediatePath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceProviderEntityId" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "clockTolerance" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "spPrivateKeyAlias" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "keyStorePassword" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "digestMethod" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "signatureMethod" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "defaultRedirectUrl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "identitySyncType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "idpIdentifier" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "nameIdFormat" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "logoutUrl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "useEncryption" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "createUser" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "handleLogout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "userIDAttribute" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * servicePeriodranking Integer  (optional)
 * jaasPeriodcontrolFlag String  (optional)
 * jaasPeriodrealmName String  (optional)
 * jaasPeriodranking Integer  (optional)
 * headers List  (optional)
 * cookies List  (optional)
 * parameters List  (optional)
 * usermap List  (optional)
 * format String  (optional)
 * trustedCredentialsAttribute String  (optional)
 * returns comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo
 **/
exports.comAdobeGraniteAuthSsoImplSsoAuthenticationHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,path,servicePeriodranking,jaasPeriodcontrolFlag,jaasPeriodrealmName,jaasPeriodranking,headers,cookies,parameters,usermap,format,trustedCredentialsAttribute) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "headers" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "jaas.controlFlag" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jaas.realmName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "format" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "usermap" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "jaas.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "trustedCredentialsAttribute" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "parameters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cookies" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * minimumPeriodcodePeriodcachePeriodsize Integer  (optional)
 * returns comAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplCodeCacheHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags,minimumPeriodcodePeriodcachePeriodsize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "minimum.code.cache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplDavExBundleHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * ignoredPeriodbundles List  (optional)
 * returns comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags,ignoredPeriodbundles) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ignored.bundles" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * maxPeriodqueuedPeriodjobs Integer  (optional)
 * returns comAdobeGraniteBundlesHcImplJobsHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplJobsHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags,maxPeriodqueuedPeriodjobs) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "max.queued.jobs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplSlingGetServletHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo
 **/
exports.comAdobeGraniteBundlesHcImplWebDavBundleHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * replicatePeriodcommentPeriodresourceTypes List  (optional)
 * returns comAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo
 **/
exports.comAdobeGraniteCommentsInternalCommentReplicationContentFilterFac = function(post,apply,_delete,action,Dollarlocation,propertylist,replicatePeriodcommentPeriodresourceTypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "replicate.comment.resourceTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * compatgroups List  (optional)
 * enabled Boolean  (optional)
 * returns comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo
 **/
exports.comAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,compatgroups,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "compatgroups" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * id String  (optional)
 * compatPath String  (optional)
 * newPath String  (optional)
 * returns comAdobeGraniteCompatrouterImplRoutingConfigInfo
 **/
exports.comAdobeGraniteCompatrouterImplRoutingConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,id,compatPath,newPath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "compatPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "newPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * group String  (optional)
 * ids List  (optional)
 * returns comAdobeGraniteCompatrouterImplSwitchMappingConfigInfo
 **/
exports.comAdobeGraniteCompatrouterImplSwitchMappingConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,group,ids) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ids" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "group" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * fallbackPaths List  (optional)
 * returns comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo
 **/
exports.comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled,fallbackPaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fallbackPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodgranitePeriodcontexthubPeriodsilentUnderscoremode Boolean  (optional)
 * comPeriodadobePeriodgranitePeriodcontexthubPeriodshowUnderscoreui Boolean  (optional)
 * returns comAdobeGraniteContexthubImplContextHubImplInfo
 **/
exports.comAdobeGraniteContexthubImplContextHubImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodgranitePeriodcontexthubPeriodsilentUnderscoremode,comPeriodadobePeriodgranitePeriodcontexthubPeriodshowUnderscoreui) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.granite.contexthub.show_ui" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "com.adobe.granite.contexthub.silent_mode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * alloworigin List  (optional)
 * alloworiginregexp List  (optional)
 * allowedpaths List  (optional)
 * exposedheaders List  (optional)
 * maxage Integer  (optional)
 * supportedheaders List  (optional)
 * supportedmethods List  (optional)
 * supportscredentials Boolean  (optional)
 * returns comAdobeGraniteCorsImplCORSPolicyImplInfo
 **/
exports.comAdobeGraniteCorsImplCORSPolicyImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,alloworigin,alloworiginregexp,allowedpaths,exposedheaders,maxage,supportedheaders,supportedmethods,supportscredentials) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "supportedheaders" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "alloworigin" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "maxage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "allowedpaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "alloworiginregexp" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "supportedmethods" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "supportscredentials" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "exposedheaders" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * filterPeriodmethods List  (optional)
 * filterPeriodenablePeriodsafePerioduserPeriodagents Boolean  (optional)
 * filterPeriodsafePerioduserPeriodagents List  (optional)
 * filterPeriodexcludedPeriodpaths List  (optional)
 * returns comAdobeGraniteCsrfImplCSRFFilterInfo
 **/
exports.comAdobeGraniteCsrfImplCSRFFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,filterPeriodmethods,filterPeriodenablePeriodsafePerioduserPeriodagents,filterPeriodsafePerioduserPeriodagents,filterPeriodexcludedPeriodpaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "filter.methods" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "filter.excluded.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "filter.safe.user.agents" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "filter.enable.safe.user.agents" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * csrfPeriodtokenPeriodexpiresPeriodin Integer  (optional)
 * slingPeriodauthPeriodrequirements String  (optional)
 * returns comAdobeGraniteCsrfImplCSRFServletInfo
 **/
exports.comAdobeGraniteCsrfImplCSRFServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,csrfPeriodtokenPeriodexpiresPeriodin,slingPeriodauthPeriodrequirements) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "csrf.token.expires.in" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "sling.auth.requirements" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * username String  (optional)
 * encryptedPassword String  (optional)
 * returns comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo
 **/
exports.comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe = function(post,apply,_delete,action,Dollarlocation,propertylist,name,username,encryptedPassword) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "username" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "encryptedPassword" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * agentName String  (optional)
 * diffPath String  (optional)
 * observedPath String  (optional)
 * serviceName String  (optional)
 * propertyNames String  (optional)
 * distributionDelay Integer  (optional)
 * serviceUserPeriodtarget String  (optional)
 * returns comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo
 **/
exports.comAdobeGraniteDistributionCoreImplDiffDiffChangesObserver = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled,agentName,diffPath,observedPath,serviceName,propertyNames,distributionDelay,serviceUserPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "serviceUser.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "propertyNames" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "agentName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "distributionDelay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "observedPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "diffPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * diffPath String  (optional)
 * serviceName String  (optional)
 * serviceUserPeriodtarget String  (optional)
 * returns comAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo
 **/
exports.comAdobeGraniteDistributionCoreImplDiffDiffEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,diffPath,serviceName,serviceUserPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "serviceUser.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "diffPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * importerPeriodname List  (optional)
 * returns comAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo
 **/
exports.comAdobeGraniteDistributionCoreImplDistributionToReplicationEven = function(post,apply,_delete,action,Dollarlocation,propertylist,importerPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "importer.name" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * providerName String  (optional)
 * forwardPeriodrequests Boolean  (optional)
 * returns comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo
 **/
exports.comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat = function(post,apply,_delete,action,Dollarlocation,propertylist,providerName,forwardPeriodrequests) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "forward.requests" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "providerName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * forwardPeriodrequests Boolean  (optional)
 * returns comAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo
 **/
exports.comAdobeGraniteDistributionCoreImplReplicationDistributionTrans = function(post,apply,_delete,action,Dollarlocation,propertylist,forwardPeriodrequests) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "forward.requests" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * serviceName String  (optional)
 * userId String  (optional)
 * accessTokenProviderPeriodtarget String  (optional)
 * returns comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo
 **/
exports.comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu = function(post,apply,_delete,action,Dollarlocation,propertylist,name,serviceName,userId,accessTokenProviderPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "accessTokenProvider.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "userId" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * featurePeriodname String  (optional)
 * featurePerioddescription String  (optional)
 * httpPeriodheaderPeriodname String  (optional)
 * httpPeriodheaderPeriodvaluepattern String  (optional)
 * returns comAdobeGraniteFragsImplCheckHttpHeaderFlagInfo
 **/
exports.comAdobeGraniteFragsImplCheckHttpHeaderFlag = function(post,apply,_delete,action,Dollarlocation,propertylist,featurePeriodname,featurePerioddescription,httpPeriodheaderPeriodname,httpPeriodheaderPeriodvaluepattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "feature.description" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "http.header.valuepattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "http.header.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "feature.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * featurePeriodname String  (optional)
 * featurePerioddescription String  (optional)
 * activePeriodpercentage String  (optional)
 * cookiePeriodname String  (optional)
 * cookiePeriodmaxAge Integer  (optional)
 * returns comAdobeGraniteFragsImplRandomFeatureInfo
 **/
exports.comAdobeGraniteFragsImplRandomFeature = function(post,apply,_delete,action,Dollarlocation,propertylist,featurePeriodname,featurePerioddescription,activePeriodpercentage,cookiePeriodname,cookiePeriodmaxAge) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "feature.description" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cookie.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cookie.maxAge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "active.percentage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "feature.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePerioddocumentRoot String  (optional)
 * comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePeriodincludeHost String  (optional)
 * returns comAdobeGraniteHttpcacheFileFileCacheStoreInfo
 **/
exports.comAdobeGraniteHttpcacheFileFileCacheStore = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePerioddocumentRoot,comPeriodadobePeriodgranitePeriodhttpcachePeriodfilePeriodincludeHost) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.granite.httpcache.file.documentRoot" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.httpcache.file.includeHost" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodgranitePeriodhttpcachePeriodurlPeriodpaths List  (optional)
 * returns comAdobeGraniteHttpcacheImplOuterCacheFilterInfo
 **/
exports.comAdobeGraniteHttpcacheImplOuterCacheFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodgranitePeriodhttpcachePeriodurlPeriodpaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.adobe.granite.httpcache.url.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * pseudoPeriodpatterns List  (optional)
 * returns comAdobeGraniteI18nImplBundlePseudoTranslationsInfo
 **/
exports.comAdobeGraniteI18nImplBundlePseudoTranslations = function(post,apply,_delete,action,Dollarlocation,propertylist,pseudoPeriodpatterns) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "pseudo.patterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * securityPeriodpreferencesPeriodname String  (optional)
 * returns comAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo
 **/
exports.comAdobeGraniteI18nImplPreferencesLocaleResolverService = function(post,apply,_delete,action,Dollarlocation,propertylist,securityPeriodpreferencesPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "security.preferences.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * granitePeriodinfocollectorPeriodincludeThreadDumps Boolean  (optional)
 * granitePeriodinfocollectorPeriodincludeHeapDump Boolean  (optional)
 * returns comAdobeGraniteInfocollectorInfoCollectorInfo
 **/
exports.comAdobeGraniteInfocollectorInfoCollector = function(post,apply,_delete,action,Dollarlocation,propertylist,granitePeriodinfocollectorPeriodincludeThreadDumps,granitePeriodinfocollectorPeriodincludeHeapDump) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "granite.infocollector.includeThreadDumps" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "granite.infocollector.includeHeapDump" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodport Integer  (optional)
 * comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePerioduser String  (optional)
 * comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePeriodpassword String  (optional)
 * comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodexcluded List  (optional)
 * comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodincluded List  (optional)
 * comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodclientPeriodcertificate String  (optional)
 * returns comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo
 **/
exports.comAdobeGraniteJettySslInternalGraniteSslConnectorFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodport,comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePerioduser,comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodkeystorePeriodpassword,comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodexcluded,comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodciphersuitesPeriodincluded,comPeriodadobePeriodgranitePeriodjettyPeriodsslPeriodclientPeriodcertificate) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "com.adobe.granite.jetty.ssl.ciphersuites.included" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "com.adobe.granite.jetty.ssl.keystore.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.jetty.ssl.keystore.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "com.adobe.granite.jetty.ssl.client.certificate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "com.adobe.granite.jetty.ssl.ciphersuites.excluded" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "com.adobe.granite.jetty.ssl.port" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * checkInternval Integer  (optional)
 * excludeIds List  (optional)
 * encryptPing Boolean  (optional)
 * returns comAdobeGraniteLicenseImplLicenseCheckFilterInfo
 **/
exports.comAdobeGraniteLicenseImplLicenseCheckFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,checkInternval,excludeIds,encryptPing) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "checkInternval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "excludeIds" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "encryptPing" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * messagesPeriodqueuePeriodsize Integer  (optional)
 * loggerPeriodconfig List  (optional)
 * messagesPeriodsize Integer  (optional)
 * returns comAdobeGraniteLoggingImplLogAnalyserImplInfo
 **/
exports.comAdobeGraniteLoggingImplLogAnalyserImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,messagesPeriodqueuePeriodsize,loggerPeriodconfig,messagesPeriodsize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "logger.config" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "messages.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "messages.queue.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteLoggingImplLogErrorHealthCheckInfo
 **/
exports.comAdobeGraniteLoggingImplLogErrorHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * granitePeriodmaintenancePeriodmandatory Boolean  (optional)
 * jobPeriodtopics String  (optional)
 * returns comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo
 **/
exports.comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask = function(post,apply,_delete,action,Dollarlocation,propertylist,granitePeriodmaintenancePeriodmandatory,jobPeriodtopics) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "job.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "granite.maintenance.mandatory" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jobPeriodtopics String  (optional)
 * returns comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo
 **/
exports.comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask = function(post,apply,_delete,action,Dollarlocation,propertylist,jobPeriodtopics) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "job.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fullPeriodgcPerioddays List  (optional)
 * returns comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo
 **/
exports.comAdobeGraniteMaintenanceCrxImplRevisionCleanupTask = function(post,apply,_delete,action,Dollarlocation,propertylist,fullPeriodgcPerioddays) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "full.gc.days" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * scriptPeriodfilename String  (optional)
 * scriptPerioddisplay String  (optional)
 * scriptPeriodpath String  (optional)
 * scriptPeriodplatform List  (optional)
 * interval Integer  (optional)
 * jmxdomain String  (optional)
 * returns comAdobeGraniteMonitoringImplScriptConfigImplInfo
 **/
exports.comAdobeGraniteMonitoringImplScriptConfigImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,scriptPeriodfilename,scriptPerioddisplay,scriptPeriodpath,scriptPeriodplatform,interval,jmxdomain) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "script.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "script.filename" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "script.display" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "script.platform" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "jmxdomain" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * jaasPeriodcontrolFlag String  (optional)
 * jaasPeriodrealmName String  (optional)
 * jaasPeriodranking Integer  (optional)
 * oauthPeriodofflinePeriodvalidation Boolean  (optional)
 * returns comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo
 **/
exports.comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan = function(post,apply,_delete,action,Dollarlocation,propertylist,path,jaasPeriodcontrolFlag,jaasPeriodrealmName,jaasPeriodranking,oauthPeriodofflinePeriodvalidation) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.offline.validation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jaas.controlFlag" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jaas.realmName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jaas.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * returns comAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo
 **/
exports.comAdobeGraniteOauthServerImplAccessTokenCleanupTask = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodclientPeriodrevocationPeriodactive Boolean  (optional)
 * returns comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo
 **/
exports.comAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodclientPeriodrevocationPeriodactive) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.client.revocation.active" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodpaths String  (optional)
 * oauthPeriodrevocationPeriodactive Boolean  (optional)
 * returns comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo
 **/
exports.comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodpaths,oauthPeriodrevocationPeriodactive) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.revocation.active" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "sling.servlet.paths" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodissuer String  (optional)
 * oauthPeriodaccessPeriodtokenPeriodexpiresPeriodin String  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern String  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect String  (optional)
 * returns comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo
 **/
exports.comAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodissuer,oauthPeriodaccessPeriodtokenPeriodexpiresPeriodin,osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern,osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.issuer" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "osgi.http.whiteboard.servlet.pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "osgi.http.whiteboard.context.select" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "oauth.access.token.expires.in" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * oauthPeriodtokenPeriodrevocationPeriodactive Boolean  (optional)
 * returns comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo
 **/
exports.comAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,oauthPeriodtokenPeriodrevocationPeriodactive) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "oauth.token.revocation.active" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * offloadingPeriodtransporter String  (optional)
 * offloadingPeriodcleanupPeriodpayload Boolean  (optional)
 * returns comAdobeGraniteOffloadingImplOffloadingConfiguratorInfo
 **/
exports.comAdobeGraniteOffloadingImplOffloadingConfigurator = function(post,apply,_delete,action,Dollarlocation,propertylist,offloadingPeriodtransporter,offloadingPeriodcleanupPeriodpayload) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "offloading.cleanup.payload" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "offloading.transporter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * offloadingPeriodjobclonerPeriodenabled Boolean  (optional)
 * returns comAdobeGraniteOffloadingImplOffloadingJobClonerInfo
 **/
exports.comAdobeGraniteOffloadingImplOffloadingJobCloner = function(post,apply,_delete,action,Dollarlocation,propertylist,offloadingPeriodjobclonerPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "offloading.jobcloner.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * offloadingPeriodoffloaderPeriodenabled Boolean  (optional)
 * returns comAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo
 **/
exports.comAdobeGraniteOffloadingImplOffloadingJobOffloader = function(post,apply,_delete,action,Dollarlocation,propertylist,offloadingPeriodoffloaderPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "offloading.offloader.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * offloadingPeriodagentmanagerPeriodenabled Boolean  (optional)
 * returns comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo
 **/
exports.comAdobeGraniteOffloadingImplTransporterOffloadingAgentManager = function(post,apply,_delete,action,Dollarlocation,propertylist,offloadingPeriodagentmanagerPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "offloading.agentmanager.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * defaultPeriodtransportPeriodagentToWorkerPeriodprefix String  (optional)
 * defaultPeriodtransportPeriodagentToMasterPeriodprefix String  (optional)
 * defaultPeriodtransportPeriodinputPeriodpackage String  (optional)
 * defaultPeriodtransportPeriodoutputPeriodpackage String  (optional)
 * defaultPeriodtransportPeriodreplicationPeriodsynchronous Boolean  (optional)
 * defaultPeriodtransportPeriodcontentpackage Boolean  (optional)
 * offloadingPeriodtransporterPerioddefaultPeriodenabled Boolean  (optional)
 * returns comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo
 **/
exports.comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo = function(post,apply,_delete,action,Dollarlocation,propertylist,defaultPeriodtransportPeriodagentToWorkerPeriodprefix,defaultPeriodtransportPeriodagentToMasterPeriodprefix,defaultPeriodtransportPeriodinputPeriodpackage,defaultPeriodtransportPeriodoutputPeriodpackage,defaultPeriodtransportPeriodreplicationPeriodsynchronous,defaultPeriodtransportPeriodcontentpackage,offloadingPeriodtransporterPerioddefaultPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "default.transport.agent-to-worker.prefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "default.transport.input.package" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "offloading.transporter.default.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "default.transport.contentpackage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "default.transport.agent-to-master.prefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "default.transport.output.package" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "default.transport.replication.synchronous" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * omnisearchPeriodsuggestionPeriodrequiretextPeriodmin Integer  (optional)
 * omnisearchPeriodsuggestionPeriodspellcheckPeriodrequire Boolean  (optional)
 * returns comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo
 **/
exports.comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,omnisearchPeriodsuggestionPeriodrequiretextPeriodmin,omnisearchPeriodsuggestionPeriodspellcheckPeriodrequire) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "omnisearch.suggestion.requiretext.min" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "omnisearch.suggestion.spellcheck.require" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * optoutPeriodcookies List  (optional)
 * optoutPeriodheaders List  (optional)
 * optoutPeriodwhitelistPeriodcookies List  (optional)
 * returns comAdobeGraniteOptoutImplOptOutServiceImplInfo
 **/
exports.comAdobeGraniteOptoutImplOptOutServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,optoutPeriodcookies,optoutPeriodheaders,optoutPeriodwhitelistPeriodcookies) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "optout.headers" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "optout.cookies" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "optout.whitelist.cookies" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * indexingPeriodcriticalPeriodthreshold Integer  (optional)
 * indexingPeriodwarnPeriodthreshold Integer  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo
 **/
exports.comAdobeGraniteQueriesImplHcAsyncIndexHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,indexingPeriodcriticalPeriodthreshold,indexingPeriodwarnPeriodthreshold,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "indexing.critical.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "indexing.warn.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * largePeriodindexPeriodcriticalPeriodthreshold Integer  (optional)
 * largePeriodindexPeriodwarnPeriodthreshold Integer  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo
 **/
exports.comAdobeGraniteQueriesImplHcLargeIndexHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,largePeriodindexPeriodcriticalPeriodthreshold,largePeriodindexPeriodwarnPeriodthreshold,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "large.index.critical.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "large.index.warn.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo
 **/
exports.comAdobeGraniteQueriesImplHcQueriesStatusHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * getPeriod Integer  (optional)
 * returns comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo
 **/
exports.comAdobeGraniteQueriesImplHcQueryHealthCheckMetrics = function(post,apply,_delete,action,Dollarlocation,propertylist,getPeriod) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "getPeriod" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo
 **/
exports.comAdobeGraniteQueriesImplHcQueryLimitsHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * numberPeriodofPeriodretriesPeriodallowed Integer  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo
 **/
exports.comAdobeGraniteReplicationHcImplReplicationQueueHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,numberPeriodofPeriodretriesPeriodallowed,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "number.of.retries.allowed" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo
 **/
exports.comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo
 **/
exports.comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * excludePeriodsearchPeriodpath List  (optional)
 * returns comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo
 **/
exports.comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags,excludePeriodsearchPeriodpath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "exclude.search.path" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo
 **/
exports.comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo
 **/
exports.comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * accountPeriodlogins List  (optional)
 * consolePeriodlogins List  (optional)
 * returns comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo
 **/
exports.comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags,accountPeriodlogins,consolePeriodlogins) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "account.logins" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "console.logins" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * diskPeriodspacePeriodwarnPeriodthreshold Integer  (optional)
 * diskPeriodspacePerioderrorPeriodthreshold Integer  (optional)
 * returns comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo
 **/
exports.comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags,diskPeriodspacePeriodwarnPeriodthreshold,diskPeriodspacePerioderrorPeriodthreshold) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "disk.space.warn.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "disk.space.error.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo
 **/
exports.comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * intervalSeconds Integer  (optional)
 * commitsPerIntervalThreshold Integer  (optional)
 * maxLocationLength Integer  (optional)
 * maxDetailsShown Integer  (optional)
 * minDetailsPercentage Integer  (optional)
 * threadMatchers List  (optional)
 * maxGreedyDepth Integer  (optional)
 * greedyStackMatchers String  (optional)
 * stackFilters List  (optional)
 * stackMatchers List  (optional)
 * stackCategorizers List  (optional)
 * stackShorteners List  (optional)
 * returns comAdobeGraniteRepositoryImplCommitStatsConfigInfo
 **/
exports.comAdobeGraniteRepositoryImplCommitStatsConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled,intervalSeconds,commitsPerIntervalThreshold,maxLocationLength,maxDetailsShown,minDetailsPercentage,threadMatchers,maxGreedyDepth,greedyStackMatchers,stackFilters,stackMatchers,stackCategorizers,stackShorteners) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "threadMatchers" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "greedyStackMatchers" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "minDetailsPercentage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "maxLocationLength" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxDetailsShown" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "commitsPerIntervalThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "stackShorteners" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "stackFilters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "stackCategorizers" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "maxGreedyDepth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "stackMatchers" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "intervalSeconds" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * serviceusersPeriodsimpleSubjectPopulation Boolean  (optional)
 * serviceusersPeriodlist List  (optional)
 * returns comAdobeGraniteRepositoryServiceUserConfigurationInfo
 **/
exports.comAdobeGraniteRepositoryServiceUserConfiguration = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,serviceusersPeriodsimpleSubjectPopulation,serviceusersPeriodlist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "serviceusers.list" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "serviceusers.simpleSubjectPopulation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo
 **/
exports.comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * types List  (optional)
 * returns comAdobeGraniteResourcestatusImplCompositeStatusTypeInfo
 **/
exports.comAdobeGraniteResourcestatusImplCompositeStatusType = function(post,apply,_delete,action,Dollarlocation,propertylist,name,types) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "types" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * providerPeriodroot String  (optional)
 * returns comAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo
 **/
exports.comAdobeGraniteResourcestatusImplStatusResourceProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,providerPeriodroot) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "provider.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mimePeriodallowEmpty Boolean  (optional)
 * mimePeriodallowed List  (optional)
 * returns comAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo
 **/
exports.comAdobeGraniteRestAssetsImplAssetContentDispositionFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,mimePeriodallowEmpty,mimePeriodallowed) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mime.allowed" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "mime.allowEmpty" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * providerPeriodroots String  (optional)
 * returns comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo
 **/
exports.comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,providerPeriodroots) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "provider.roots" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * defaultPeriodlimit Integer  (optional)
 * usePeriodabsolutePerioduri Boolean  (optional)
 * returns comAdobeGraniteRestImplServletDefaultGETServletInfo
 **/
exports.comAdobeGraniteRestImplServletDefaultGETServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,defaultPeriodlimit,usePeriodabsolutePerioduri) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "use.absolute.uri" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "default.limit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodtags List  (optional)
 * returns comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo
 **/
exports.comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodtags) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * adapterPeriodcondition String  (optional)
 * granitePerioduserpropertiesPeriodnodetypes List  (optional)
 * granitePerioduserpropertiesPeriodresourcetypes List  (optional)
 * returns comAdobeGraniteSecurityUserUserPropertiesServiceInfo
 **/
exports.comAdobeGraniteSecurityUserUserPropertiesService = function(post,apply,_delete,action,Dollarlocation,propertylist,adapterPeriodcondition,granitePerioduserpropertiesPeriodnodetypes,granitePerioduserpropertiesPeriodresourcetypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "granite.userproperties.resourcetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "granite.userproperties.nodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "adapter.condition" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * group2memberPeriodrelationshipPeriodoutgoing String  (optional)
 * group2memberPeriodexcludedPeriodoutgoing List  (optional)
 * group2memberPeriodrelationshipPeriodincoming String  (optional)
 * group2memberPeriodexcludedPeriodincoming List  (optional)
 * returns comAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo
 **/
exports.comAdobeGraniteSocialgraphImplSocialGraphFactoryImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,group2memberPeriodrelationshipPeriodoutgoing,group2memberPeriodexcludedPeriodoutgoing,group2memberPeriodrelationshipPeriodincoming,group2memberPeriodexcludedPeriodincoming) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "group2member.relationship.outgoing" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "group2member.excluded.incoming" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "group2member.relationship.incoming" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "group2member.excluded.outgoing" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * jmxPeriodobjectname String  (optional)
 * returns comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo
 **/
exports.comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression,jmxPeriodobjectname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jmx.objectname" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * adapterPeriodcondition String  (optional)
 * returns comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo
 **/
exports.comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,adapterPeriodcondition) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "adapter.condition" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * archivingPeriodenabled Boolean  (optional)
 * schedulerPeriodexpression String  (optional)
 * archivePeriodsincePerioddaysPeriodcompleted Integer  (optional)
 * returns comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo
 **/
exports.comAdobeGraniteTaskmanagementImplJcrTaskArchiveService = function(post,apply,_delete,action,Dollarlocation,propertylist,archivingPeriodenabled,schedulerPeriodexpression,archivePeriodsincePerioddaysPeriodcompleted) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "archive.since.days.completed" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "archiving.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * purgeCompleted Boolean  (optional)
 * completedAge Integer  (optional)
 * purgeActive Boolean  (optional)
 * activeAge Integer  (optional)
 * saveThreshold Integer  (optional)
 * returns comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo
 **/
exports.comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask = function(post,apply,_delete,action,Dollarlocation,propertylist,purgeCompleted,completedAge,purgeActive,activeAge,saveThreshold) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "completedAge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "purgeCompleted" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "activeAge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "purgeActive" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "saveThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * adapterPeriodcondition String  (optional)
 * taskmanagerPeriodadmingroups List  (optional)
 * returns comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo
 **/
exports.comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor = function(post,apply,_delete,action,Dollarlocation,propertylist,adapterPeriodcondition,taskmanagerPeriodadmingroups) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "adapter.condition" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "taskmanager.admingroups" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodperiod Integer  (optional)
 * schedulerPeriodrunOn String  (optional)
 * granitePeriodthreaddumpPeriodenabled Boolean  (optional)
 * granitePeriodthreaddumpPerioddumpsPerFile Integer  (optional)
 * granitePeriodthreaddumpPeriodenableGzipCompression Boolean  (optional)
 * granitePeriodthreaddumpPeriodenableDirectoriesCompression Boolean  (optional)
 * granitePeriodthreaddumpPeriodenableJStack Boolean  (optional)
 * granitePeriodthreaddumpPeriodmaxBackupDays Integer  (optional)
 * granitePeriodthreaddumpPeriodbackupCleanTrigger String  (optional)
 * returns comAdobeGraniteThreaddumpThreadDumpCollectorInfo
 **/
exports.comAdobeGraniteThreaddumpThreadDumpCollector = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodperiod,schedulerPeriodrunOn,granitePeriodthreaddumpPeriodenabled,granitePeriodthreaddumpPerioddumpsPerFile,granitePeriodthreaddumpPeriodenableGzipCompression,granitePeriodthreaddumpPeriodenableDirectoriesCompression,granitePeriodthreaddumpPeriodenableJStack,granitePeriodthreaddumpPeriodmaxBackupDays,granitePeriodthreaddumpPeriodbackupCleanTrigger) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.runOn" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "granite.threaddump.backupCleanTrigger" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "granite.threaddump.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "granite.threaddump.enableGzipCompression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "granite.threaddump.dumpsPerFile" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "scheduler.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "granite.threaddump.enableJStack" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "granite.threaddump.enableDirectoriesCompression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "granite.threaddump.maxBackupDays" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * translationFactory String  (optional)
 * defaultConnectorLabel String  (optional)
 * defaultConnectorAttribution String  (optional)
 * defaultConnectorWorkspaceId String  (optional)
 * defaultConnectorSubscriptionKey String  (optional)
 * languageMapLocation String  (optional)
 * categoryMapLocation String  (optional)
 * retryAttempts Integer  (optional)
 * timeoutCount Integer  (optional)
 * returns comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo
 **/
exports.comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl = function(post,apply,_delete,action,Dollarlocation,propertylist,translationFactory,defaultConnectorLabel,defaultConnectorAttribution,defaultConnectorWorkspaceId,defaultConnectorSubscriptionKey,languageMapLocation,categoryMapLocation,retryAttempts,timeoutCount) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "defaultConnectorWorkspaceId" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "defaultConnectorSubscriptionKey" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "languageMapLocation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "categoryMapLocation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "defaultConnectorLabel" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "translationFactory" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "timeoutCount" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "defaultConnectorAttribution" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "retryAttempts" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * defaultConnectorName String  (optional)
 * defaultCategory String  (optional)
 * returns comAdobeGraniteTranslationCoreImplTranslationManagerImplInfo
 **/
exports.comAdobeGraniteTranslationCoreImplTranslationManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,defaultConnectorName,defaultCategory) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "defaultCategory" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "defaultConnectorName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * htmllibmanagerPeriodtiming Boolean  (optional)
 * htmllibmanagerPerioddebugPeriodinitPeriodjs String  (optional)
 * htmllibmanagerPeriodminify Boolean  (optional)
 * htmllibmanagerPerioddebug Boolean  (optional)
 * htmllibmanagerPeriodgzip Boolean  (optional)
 * htmllibmanagerPeriodmaxDataUriSize Integer  (optional)
 * htmllibmanagerPeriodmaxage Integer  (optional)
 * htmllibmanagerPeriodforceCQUrlInfo Boolean  (optional)
 * htmllibmanagerPerioddefaultthemename String  (optional)
 * htmllibmanagerPerioddefaultuserthemename String  (optional)
 * htmllibmanagerPeriodclientmanager String  (optional)
 * htmllibmanagerPeriodpathPeriodlist List  (optional)
 * htmllibmanagerPeriodexcludedPeriodpathPeriodlist List  (optional)
 * htmllibmanagerPeriodprocessorPeriodjs List  (optional)
 * htmllibmanagerPeriodprocessorPeriodcss List  (optional)
 * htmllibmanagerPeriodlongcachePeriodpatterns List  (optional)
 * htmllibmanagerPeriodlongcachePeriodformat String  (optional)
 * htmllibmanagerPerioduseFileSystemOutputCache Boolean  (optional)
 * htmllibmanagerPeriodfileSystemOutputCacheLocation String  (optional)
 * htmllibmanagerPerioddisablePeriodreplacement List  (optional)
 * returns comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo
 **/
exports.comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,htmllibmanagerPeriodtiming,htmllibmanagerPerioddebugPeriodinitPeriodjs,htmllibmanagerPeriodminify,htmllibmanagerPerioddebug,htmllibmanagerPeriodgzip,htmllibmanagerPeriodmaxDataUriSize,htmllibmanagerPeriodmaxage,htmllibmanagerPeriodforceCQUrlInfo,htmllibmanagerPerioddefaultthemename,htmllibmanagerPerioddefaultuserthemename,htmllibmanagerPeriodclientmanager,htmllibmanagerPeriodpathPeriodlist,htmllibmanagerPeriodexcludedPeriodpathPeriodlist,htmllibmanagerPeriodprocessorPeriodjs,htmllibmanagerPeriodprocessorPeriodcss,htmllibmanagerPeriodlongcachePeriodpatterns,htmllibmanagerPeriodlongcachePeriodformat,htmllibmanagerPerioduseFileSystemOutputCache,htmllibmanagerPeriodfileSystemOutputCacheLocation,htmllibmanagerPerioddisablePeriodreplacement) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "htmllibmanager.gzip" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.defaultuserthemename" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.clientmanager" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.longcache.format" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.debug" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.maxage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "htmllibmanager.minify" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.disable.replacement" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "htmllibmanager.defaultthemename" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.useFileSystemOutputCache" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.longcache.patterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "htmllibmanager.processor.css" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "htmllibmanager.path.list" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "htmllibmanager.excluded.path.list" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "htmllibmanager.fileSystemOutputCacheLocation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.debug.init.js" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.processor.js" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "htmllibmanager.maxDataUriSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "htmllibmanager.forceCQUrlInfo" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.timing" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * returns comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo
 **/
exports.comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * granitePeriodworkflowPeriodWorkflowPublishEventServicePeriodenabled Boolean  (optional)
 * returns comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo
 **/
exports.comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService = function(post,apply,_delete,action,Dollarlocation,propertylist,granitePeriodworkflowPeriodWorkflowPublishEventServicePeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "granite.workflow.WorkflowPublishEventService.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * bucketSize Integer  (optional)
 * returns comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo
 **/
exports.comAdobeGraniteWorkflowCoreJcrWorkflowBucketManager = function(post,apply,_delete,action,Dollarlocation,propertylist,bucketSize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "bucketSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * defaultPeriodtimeout Integer  (optional)
 * maxPeriodtimeout Integer  (optional)
 * defaultPeriodperiod Integer  (optional)
 * returns comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo
 **/
exports.comAdobeGraniteWorkflowCoreJobExternalProcessJobHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,defaultPeriodtimeout,maxPeriodtimeout,defaultPeriodperiod) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "default.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "default.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "max.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jobPeriodtopics List  (optional)
 * allowPeriodselfPeriodprocessPeriodtermination Boolean  (optional)
 * returns comAdobeGraniteWorkflowCoreJobJobHandlerInfo
 **/
exports.comAdobeGraniteWorkflowCoreJobJobHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,jobPeriodtopics,allowPeriodselfPeriodprocessPeriodtermination) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "allow.self.process.termination" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "job.topics" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jobPeriodtopics String  (optional)
 * returns comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo
 **/
exports.comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum = function(post,apply,_delete,action,Dollarlocation,propertylist,jobPeriodtopics) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "job.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * getSystemWorkflowModels List  (optional)
 * getPackageRootPath String  (optional)
 * returns comAdobeGraniteWorkflowCorePayloadMapCacheInfo
 **/
exports.comAdobeGraniteWorkflowCorePayloadMapCache = function(post,apply,_delete,action,Dollarlocation,propertylist,getSystemWorkflowModels,getPackageRootPath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "getSystemWorkflowModels" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "getPackageRootPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * payloadPeriodmovePeriodwhitePeriodlist List  (optional)
 * payloadPeriodmovePeriodhandlePeriodfromPeriodworkflowPeriodprocess Boolean  (optional)
 * returns comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo
 **/
exports.comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener = function(post,apply,_delete,action,Dollarlocation,propertylist,payloadPeriodmovePeriodwhitePeriodlist,payloadPeriodmovePeriodhandlePeriodfromPeriodworkflowPeriodprocess) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "payload.move.white.list" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "payload.move.handle.from.workflow.process" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodworkflowPeriodconfigPeriodworkflowPeriodpackagesPeriodrootPeriodpath List  (optional)
 * cqPeriodworkflowPeriodconfigPeriodworkflowPeriodprocessPeriodlegacyPeriodmode Boolean  (optional)
 * cqPeriodworkflowPeriodconfigPeriodallowPeriodlocking Boolean  (optional)
 * returns comAdobeGraniteWorkflowCoreWorkflowConfigInfo
 **/
exports.comAdobeGraniteWorkflowCoreWorkflowConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodworkflowPeriodconfigPeriodworkflowPeriodpackagesPeriodrootPeriodpath,cqPeriodworkflowPeriodconfigPeriodworkflowPeriodprocessPeriodlegacyPeriodmode,cqPeriodworkflowPeriodconfigPeriodallowPeriodlocking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.workflow.config.workflow.process.legacy.mode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.workflow.config.allow.locking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.workflow.config.workflow.packages.root.path" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * granitePeriodworkflowinboxPeriodsortPeriodpropertyName String  (optional)
 * granitePeriodworkflowinboxPeriodsortPeriodorder String  (optional)
 * cqPeriodworkflowPeriodjobPeriodretry Integer  (optional)
 * cqPeriodworkflowPeriodsuperuser List  (optional)
 * granitePeriodworkflowPeriodinboxQuerySize Integer  (optional)
 * granitePeriodworkflowPeriodadminUserGroupFilter Boolean  (optional)
 * granitePeriodworkflowPeriodenforceWorkitemAssigneePermissions Boolean  (optional)
 * granitePeriodworkflowPeriodenforceWorkflowInitiatorPermissions Boolean  (optional)
 * granitePeriodworkflowPeriodinjectTenantIdInJobTopics Boolean  (optional)
 * granitePeriodworkflowPeriodmaxPurgeSaveThreshold Integer  (optional)
 * granitePeriodworkflowPeriodmaxPurgeQueryCount Integer  (optional)
 * returns comAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo
 **/
exports.comAdobeGraniteWorkflowCoreWorkflowSessionFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,granitePeriodworkflowinboxPeriodsortPeriodpropertyName,granitePeriodworkflowinboxPeriodsortPeriodorder,cqPeriodworkflowPeriodjobPeriodretry,cqPeriodworkflowPeriodsuperuser,granitePeriodworkflowPeriodinboxQuerySize,granitePeriodworkflowPeriodadminUserGroupFilter,granitePeriodworkflowPeriodenforceWorkitemAssigneePermissions,granitePeriodworkflowPeriodenforceWorkflowInitiatorPermissions,granitePeriodworkflowPeriodinjectTenantIdInJobTopics,granitePeriodworkflowPeriodmaxPurgeSaveThreshold,granitePeriodworkflowPeriodmaxPurgeQueryCount) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "granite.workflow.maxPurgeQueryCount" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "granite.workflow.enforceWorkitemAssigneePermissions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "granite.workflowinbox.sort.propertyName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "granite.workflowinbox.sort.order" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "granite.workflow.enforceWorkflowInitiatorPermissions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "granite.workflow.injectTenantIdInJobTopics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.workflow.job.retry" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.workflow.superuser" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "granite.workflow.maxPurgeSaveThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "granite.workflow.inboxQuerySize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "granite.workflow.adminUserGroupFilter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * scheduledpurgePeriodname String  (optional)
 * scheduledpurgePeriodworkflowStatus String  (optional)
 * scheduledpurgePeriodmodelIds List  (optional)
 * scheduledpurgePerioddaysold Integer  (optional)
 * returns comAdobeGraniteWorkflowPurgeSchedulerInfo
 **/
exports.comAdobeGraniteWorkflowPurgeScheduler = function(post,apply,_delete,action,Dollarlocation,propertylist,scheduledpurgePeriodname,scheduledpurgePeriodworkflowStatus,scheduledpurgePeriodmodelIds,scheduledpurgePerioddaysold) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduledpurge.modelIds" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "scheduledpurge.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "scheduledpurge.workflowStatus" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "scheduledpurge.daysold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxConnections Integer  (optional)
 * maxRequests Integer  (optional)
 * requestTimeout Integer  (optional)
 * requestRetries Integer  (optional)
 * launchTimeout Integer  (optional)
 * returns comAdobeOctopusNcommBootstrapInfo
 **/
exports.comAdobeOctopusNcommBootstrap = function(post,apply,_delete,action,Dollarlocation,propertylist,maxConnections,maxRequests,requestTimeout,requestRetries,launchTimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "requestRetries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxRequests" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "launchTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "requestTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxConnections" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * communitiesPeriodintegrationPeriodlivefyrePeriodslingPeriodeventPeriodfilter String  (optional)
 * returns comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo
 **/
exports.comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS = function(post,apply,_delete,action,Dollarlocation,propertylist,communitiesPeriodintegrationPeriodlivefyrePeriodslingPeriodeventPeriodfilter) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "communities.integration.livefyre.sling.event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxConnections String  (optional)
 * maxRequests String  (optional)
 * requestTimeout String  (optional)
 * logDir String  (optional)
 * returns comAdobeXmpWorkerFilesNcommXMPFilesNCommInfo
 **/
exports.comAdobeXmpWorkerFilesNcommXMPFilesNComm = function(post,apply,_delete,action,Dollarlocation,propertylist,maxConnections,maxRequests,requestTimeout,logDir) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "maxRequests" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "requestTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "logDir" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "maxConnections" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jdbcPerioddriverPeriodclass String  (optional)
 * jdbcPeriodconnectionPerioduri String  (optional)
 * jdbcPeriodusername String  (optional)
 * jdbcPeriodpassword String  (optional)
 * jdbcPeriodvalidationPeriodquery String  (optional)
 * defaultPeriodreadonly Boolean  (optional)
 * defaultPeriodautocommit Boolean  (optional)
 * poolPeriodsize Integer  (optional)
 * poolPeriodmaxPeriodwaitPeriodmsec Integer  (optional)
 * datasourcePeriodname String  (optional)
 * datasourcePeriodsvcPeriodproperties List  (optional)
 * returns comDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo
 **/
exports.comDayCommonsDatasourceJdbcpoolJdbcPoolService = function(post,apply,_delete,action,Dollarlocation,propertylist,jdbcPerioddriverPeriodclass,jdbcPeriodconnectionPerioduri,jdbcPeriodusername,jdbcPeriodpassword,jdbcPeriodvalidationPeriodquery,defaultPeriodreadonly,defaultPeriodautocommit,poolPeriodsize,poolPeriodmaxPeriodwaitPeriodmsec,datasourcePeriodname,datasourcePeriodsvcPeriodproperties) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "jdbc.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "default.autocommit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "pool.max.wait.msec" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "datasource.svc.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "jdbc.driver.class" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pool.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "jdbc.username" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jdbc.connection.uri" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "datasource.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "default.readonly" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "jdbc.validation.query" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * proxyPeriodenabled Boolean  (optional)
 * proxyPeriodhost String  (optional)
 * proxyPerioduser String  (optional)
 * proxyPeriodpassword String  (optional)
 * proxyPeriodntlmPeriodhost String  (optional)
 * proxyPeriodntlmPerioddomain String  (optional)
 * proxyPeriodexceptions List  (optional)
 * returns comDayCommonsHttpclientInfo
 **/
exports.comDayCommonsHttpclient = function(post,apply,_delete,action,Dollarlocation,propertylist,proxyPeriodenabled,proxyPeriodhost,proxyPerioduser,proxyPeriodpassword,proxyPeriodntlmPeriodhost,proxyPeriodntlmPerioddomain,proxyPeriodexceptions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "proxy.exceptions" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "proxy.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "proxy.ntlm.host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "proxy.host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "proxy.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "proxy.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "proxy.ntlm.domain" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodstorePeriodlistenerPeriodadditionalStorePaths List  (optional)
 * returns comDayCqAnalyticsImplStorePropertiesChangeListenerInfo
 **/
exports.comDayCqAnalyticsImplStorePropertiesChangeListener = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodstorePeriodlistenerPeriodadditionalStorePaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.store.listener.additionalStorePaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * allowedPeriodpaths List  (optional)
 * cqPeriodanalyticsPeriodsaintPeriodexporterPeriodpagesize Integer  (optional)
 * returns comDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo
 **/
exports.comDayCqAnalyticsSitecatalystImplExporterClassificationsExporte = function(post,apply,_delete,action,Dollarlocation,propertylist,allowedPeriodpaths,cqPeriodanalyticsPeriodsaintPeriodexporterPeriodpagesize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.analytics.saint.exporter.pagesize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "allowed.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * reportPeriodfetchPeriodattempts Integer  (optional)
 * reportPeriodfetchPerioddelay Integer  (optional)
 * returns comDayCqAnalyticsSitecatalystImplImporterReportImporterInfo
 **/
exports.comDayCqAnalyticsSitecatalystImplImporterReportImporter = function(post,apply,_delete,action,Dollarlocation,propertylist,reportPeriodfetchPeriodattempts,reportPeriodfetchPerioddelay) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "report.fetch.delay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "report.fetch.attempts" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodanalyticsPeriodadapterfactoryPeriodcontextstores List  (optional)
 * returns comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo
 **/
exports.comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodanalyticsPeriodadapterfactoryPeriodcontextstores) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.analytics.adapterfactory.contextstores" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodanalyticsPeriodsitecatalystPeriodservicePerioddatacenterPeriodurl List  (optional)
 * devhostnamepatterns List  (optional)
 * connectionPeriodtimeout Integer  (optional)
 * socketPeriodtimeout Integer  (optional)
 * returns comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo
 **/
exports.comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodanalyticsPeriodsitecatalystPeriodservicePerioddatacenterPeriodurl,devhostnamepatterns,connectionPeriodtimeout,socketPeriodtimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "connection.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.analytics.sitecatalyst.service.datacenter.url" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "socket.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "devhostnamepatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodanalyticsPeriodtestandtargetPeriodaccountoptionsupdaterPeriodenabled Boolean  (optional)
 * returns comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo
 **/
exports.comDayCqAnalyticsTestandtargetImplAccountOptionsUpdater = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodanalyticsPeriodtestandtargetPeriodaccountoptionsupdaterPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.analytics.testandtarget.accountoptionsupdater.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodanalyticsPeriodtestandtargetPerioddeleteauthoractivitylistenerPeriodenabled Boolean  (optional)
 * returns comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo
 **/
exports.comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodanalyticsPeriodtestandtargetPerioddeleteauthoractivitylistenerPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.analytics.testandtarget.deleteauthoractivitylistener.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodanalyticsPeriodtestandtargetPeriodpushauthorcampaignpagelistenerPeriodenabled Boolean  (optional)
 * returns comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo
 **/
exports.comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodanalyticsPeriodtestandtargetPeriodpushauthorcampaignpagelistenerPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.analytics.testandtarget.pushauthorcampaignpagelistener.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodanalyticsPeriodtestandtargetPeriodsegmentimporterPeriodenabled Boolean  (optional)
 * returns comDayCqAnalyticsTestandtargetImplSegmentImporterInfo
 **/
exports.comDayCqAnalyticsTestandtargetImplSegmentImporter = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodanalyticsPeriodtestandtargetPeriodsegmentimporterPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.analytics.testandtarget.segmentimporter.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * endpointUri String  (optional)
 * connectionTimeout Integer  (optional)
 * socketTimeout Integer  (optional)
 * returns comDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo
 **/
exports.comDayCqAnalyticsTestandtargetImplServiceWebServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,endpointUri,connectionTimeout,socketTimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "socketTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "endpointUri" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "connectionTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * testandtargetPeriodendpointPeriodurl String  (optional)
 * returns comDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo
 **/
exports.comDayCqAnalyticsTestandtargetImplServletsAdminServerServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,testandtargetPeriodendpointPeriodurl) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "testandtarget.endpoint.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodanalyticsPeriodtestandtargetPeriodapiPeriodurl String  (optional)
 * cqPeriodanalyticsPeriodtestandtargetPeriodtimeout Integer  (optional)
 * cqPeriodanalyticsPeriodtestandtargetPeriodsockettimeout Integer  (optional)
 * cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplace String  (optional)
 * cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplacewith String  (optional)
 * returns comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo
 **/
exports.comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodanalyticsPeriodtestandtargetPeriodapiPeriodurl,cqPeriodanalyticsPeriodtestandtargetPeriodtimeout,cqPeriodanalyticsPeriodtestandtargetPeriodsockettimeout,cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplace,cqPeriodanalyticsPeriodtestandtargetPeriodrecommendationsPeriodurlPeriodreplacewith) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.analytics.testandtarget.sockettimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.analytics.testandtarget.api.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.analytics.testandtarget.recommendations.url.replacewith" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.analytics.testandtarget.recommendations.url.replace" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.analytics.testandtarget.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cugPeriodexemptedPeriodprincipals List  (optional)
 * cugPeriodenabled Boolean  (optional)
 * cugPeriodprincipalsPeriodregex String  (optional)
 * cugPeriodprincipalsPeriodreplacement String  (optional)
 * returns comDayCqAuthImplCugCugSupportImplInfo
 **/
exports.comDayCqAuthImplCugCugSupportImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cugPeriodexemptedPeriodprincipals,cugPeriodenabled,cugPeriodprincipalsPeriodregex,cugPeriodprincipalsPeriodreplacement) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cug.principals.regex" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cug.principals.replacement" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cug.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cug.exempted.principals" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * servicePeriodranking Integer  (optional)
 * authPeriodloginselectorPeriodmappings List  (optional)
 * authPeriodloginselectorPeriodchangepwPeriodmappings List  (optional)
 * authPeriodloginselectorPerioddefaultloginpage String  (optional)
 * authPeriodloginselectorPerioddefaultchangepwpage String  (optional)
 * authPeriodloginselectorPeriodhandle List  (optional)
 * authPeriodloginselectorPeriodhandlePeriodallPeriodextensions Boolean  (optional)
 * returns comDayCqAuthImplLoginSelectorHandlerInfo
 **/
exports.comDayCqAuthImplLoginSelectorHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,path,servicePeriodranking,authPeriodloginselectorPeriodmappings,authPeriodloginselectorPeriodchangepwPeriodmappings,authPeriodloginselectorPerioddefaultloginpage,authPeriodloginselectorPerioddefaultchangepwpage,authPeriodloginselectorPeriodhandle,authPeriodloginselectorPeriodhandlePeriodallPeriodextensions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "auth.loginselector.handle.all.extensions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.loginselector.changepw.mappings" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "auth.loginselector.defaultloginpage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.loginselector.handle" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "auth.loginselector.mappings" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "auth.loginselector.defaultchangepwpage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * externalizerPerioddomains List  (optional)
 * externalizerPeriodhost String  (optional)
 * externalizerPeriodcontextpath String  (optional)
 * externalizerPeriodencodedpath Boolean  (optional)
 * returns comDayCqCommonsImplExternalizerImplInfo
 **/
exports.comDayCqCommonsImplExternalizerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,externalizerPerioddomains,externalizerPeriodhost,externalizerPeriodcontextpath,externalizerPeriodencodedpath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "externalizer.contextpath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "externalizer.domains" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "externalizer.host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "externalizer.encodedpath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * rootmappingPeriodtarget String  (optional)
 * returns comDayCqCommonsServletsRootMappingServletInfo
 **/
exports.comDayCqCommonsServletsRootMappingServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,rootmappingPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "rootmapping.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * codeupgradetasks List  (optional)
 * codeupgradetaskfilters List  (optional)
 * returns comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo
 **/
exports.comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke = function(post,apply,_delete,action,Dollarlocation,propertylist,codeupgradetasks,codeupgradetaskfilters) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "codeupgradetaskfilters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "codeupgradetasks" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * upgradeTaskIgnoreList List  (optional)
 * returns comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo
 **/
exports.comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList = function(post,apply,_delete,action,Dollarlocation,propertylist,upgradeTaskIgnoreList) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "upgradeTaskIgnoreList" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * effectiveBundleListPath String  (optional)
 * returns comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo
 **/
exports.comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist = function(post,apply,_delete,action,Dollarlocation,propertylist,effectiveBundleListPath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "effectiveBundleListPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * contentsyncPeriodfallbackPeriodauthorizable String  (optional)
 * contentsyncPeriodfallbackPeriodupdateuser String  (optional)
 * returns comDayCqContentsyncImplContentSyncManagerImplInfo
 **/
exports.comDayCqContentsyncImplContentSyncManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,contentsyncPeriodfallbackPeriodauthorizable,contentsyncPeriodfallbackPeriodupdateuser) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "contentsync.fallback.authorizable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "contentsync.fallback.updateuser" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * largeUnderscorefileUnderscorethreshold Integer  (optional)
 * largeUnderscorecommentUnderscorethreshold Integer  (optional)
 * cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction Boolean  (optional)
 * returns comDayCqDamCommonsHandlerStandardImageHandlerInfo
 **/
exports.comDayCqDamCommonsHandlerStandardImageHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,largeUnderscorefileUnderscorethreshold,largeUnderscorecommentUnderscorethreshold,cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "large_comment_threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "large_file_threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.enable.ext.meta.extraction" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * xmpPeriodfilterPeriodapplyUnderscorewhitelist Boolean  (optional)
 * xmpPeriodfilterPeriodwhitelist List  (optional)
 * xmpPeriodfilterPeriodapplyUnderscoreblacklist Boolean  (optional)
 * xmpPeriodfilterPeriodblacklist List  (optional)
 * returns comDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo
 **/
exports.comDayCqDamCommonsMetadataXmpFilterBlackWhite = function(post,apply,_delete,action,Dollarlocation,propertylist,xmpPeriodfilterPeriodapplyUnderscorewhitelist,xmpPeriodfilterPeriodwhitelist,xmpPeriodfilterPeriodapplyUnderscoreblacklist,xmpPeriodfilterPeriodblacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "xmp.filter.apply_whitelist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "xmp.filter.apply_blacklist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "xmp.filter.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "xmp.filter.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * largePeriodfilePeriodmin Integer  (optional)
 * cachePeriodapply Boolean  (optional)
 * mimePeriodtypes List  (optional)
 * returns comDayCqDamCommonsUtilImplAssetCacheImplInfo
 **/
exports.comDayCqDamCommonsUtilImplAssetCacheImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,largePeriodfilePeriodmin,cachePeriodapply,mimePeriodtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "large.file.min" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache.apply" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "mime.types" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodwidth Integer  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodheight Integer  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodhorizontal Integer  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodvertical Integer  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodsize Integer  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodcolor String  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodfamily String  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodlight String  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodmarginTextImage Integer  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodminImageHeight Integer  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodwidth Integer  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodapproved String  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodrejected String  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodchangesRequested String  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodannotationMarkerPeriodwidth Integer  (optional)
 * cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodassetPeriodminheight Integer  (optional)
 * returns comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo
 **/
exports.comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodwidth,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodheight,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodhorizontal,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPerioddocumentPeriodpaddingPeriodvertical,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodsize,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodcolor,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodfamily,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodfontPeriodlight,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodmarginTextImage,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodminImageHeight,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodwidth,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodapproved,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodrejected,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodreviewStatusPeriodcolorPeriodchangesRequested,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodannotationMarkerPeriodwidth,cqPerioddamPeriodconfigPeriodannotationPeriodpdfPeriodassetPeriodminheight) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.config.annotation.pdf.font.family" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.config.annotation.pdf.reviewStatus.color.approved" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.config.annotation.pdf.font.color" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.config.annotation.pdf.asset.minheight" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.config.annotation.pdf.document.padding.horizontal" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.config.annotation.pdf.font.light" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.config.annotation.pdf.reviewStatus.width" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.config.annotation.pdf.marginTextImage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.config.annotation.pdf.reviewStatus.color.rejected" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.config.annotation.pdf.document.width" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.config.annotation.pdf.minImageHeight" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.config.annotation.pdf.document.height" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.config.annotation.pdf.font.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.config.annotation.pdf.annotationMarker.width" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.config.annotation.pdf.document.padding.vertical" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * returns comDayCqDamCoreImplAssetMoveListenerInfo
 **/
exports.comDayCqDamCoreImplAssetMoveListener = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * isEnabled Boolean  (optional)
 * returns comDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo
 **/
exports.comDayCqDamCoreImplAssethomeAssetHomePageConfiguration = function(post,apply,_delete,action,Dollarlocation,propertylist,isEnabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "isEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodadhocPeriodassetPeriodsharePeriodprezipPeriodmaxcontentsize Integer  (optional)
 * returns comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo
 **/
exports.comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodadhocPeriodassetPeriodsharePeriodprezipPeriodmaxcontentsize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.adhoc.asset.share.prezip.maxcontentsize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodmemory Integer  (optional)
 * cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodage Integer  (optional)
 * cqPerioddamPeriodimagePeriodcachePeriodmaxPerioddimension String  (optional)
 * returns comDayCqDamCoreImplCacheCQBufferedImageCacheInfo
 **/
exports.comDayCqDamCoreImplCacheCQBufferedImageCache = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodmemory,cqPerioddamPeriodimagePeriodcachePeriodmaxPeriodage,cqPerioddamPeriodimagePeriodcachePeriodmaxPerioddimension) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.image.cache.max.memory" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.image.cache.max.dimension" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.image.cache.max.age" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * changeeventlistenerPeriodobservedPeriodpaths List  (optional)
 * returns comDayCqDamCoreImplDamChangeEventListenerInfo
 **/
exports.comDayCqDamCoreImplDamChangeEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,changeeventlistenerPeriodobservedPeriodpaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "changeeventlistener.observed.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * maxSavedActivities Integer  (optional)
 * saveInterval Integer  (optional)
 * enableActivityPurge Boolean  (optional)
 * eventTypes String  (optional)
 * returns comDayCqDamCoreImplDamEventPurgeServiceInfo
 **/
exports.comDayCqDamCoreImplDamEventPurgeService = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression,maxSavedActivities,saveInterval,enableActivityPurge,eventTypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "maxSavedActivities" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "saveInterval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "eventTypes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "enableActivityPurge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodfilter String  (optional)
 * eventPeriodqueuePeriodlength Integer  (optional)
 * eventrecorderPeriodenabled Boolean  (optional)
 * eventrecorderPeriodblacklist List  (optional)
 * eventrecorderPeriodeventtypes String  (optional)
 * returns comDayCqDamCoreImplDamEventRecorderImplInfo
 **/
exports.comDayCqDamCoreImplDamEventRecorderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodfilter,eventPeriodqueuePeriodlength,eventrecorderPeriodenabled,eventrecorderPeriodblacklist,eventrecorderPeriodeventtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "eventrecorder.eventtypes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "event.queue.length" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "eventrecorder.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "eventrecorder.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodfilter String  (optional)
 * enabled Boolean  (optional)
 * returns comDayCqDamCoreImplEventDamEventAuditListenerInfo
 **/
exports.comDayCqDamCoreImplEventDamEventAuditListener = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodfilter,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodistimebased Boolean  (optional)
 * cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule String  (optional)
 * cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodperiodPeriodrule Integer  (optional)
 * sendUnderscoreemail Boolean  (optional)
 * assetUnderscoreexpiredUnderscorelimit Integer  (optional)
 * priorUnderscorenotificationUnderscoreseconds Integer  (optional)
 * cqPerioddamPeriodexpiryPeriodnotificationPeriodurlPeriodprotocol String  (optional)
 * returns comDayCqDamCoreImplExpiryNotificationJobImplInfo
 **/
exports.comDayCqDamCoreImplExpiryNotificationJobImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodistimebased,cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule,cqPerioddamPeriodexpiryPeriodnotificationPeriodschedulerPeriodperiodPeriodrule,sendUnderscoreemail,assetUnderscoreexpiredUnderscorelimit,priorUnderscorenotificationUnderscoreseconds,cqPerioddamPeriodexpiryPeriodnotificationPeriodurlPeriodprotocol) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "asset_expired_limit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.expiry.notification.scheduler.istimebased" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.dam.expiry.notification.url.protocol" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "send_email" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.dam.expiry.notification.scheduler.period.rule" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.expiry.notification.scheduler.timebased.rule" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "prior_notification_seconds" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * isEnabled Boolean  (optional)
 * returns comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo
 **/
exports.comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat = function(post,apply,_delete,action,Dollarlocation,propertylist,isEnabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "isEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * skipPeriodbufferedcache Boolean  (optional)
 * returns comDayCqDamCoreImplGfxCommonsGfxRendererInfo
 **/
exports.comDayCqDamCoreImplGfxCommonsGfxRenderer = function(post,apply,_delete,action,Dollarlocation,propertylist,skipPeriodbufferedcache) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "skip.bufferedcache" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mimetype String  (optional)
 * returns comDayCqDamCoreImplHandlerEPSFormatHandlerInfo
 **/
exports.comDayCqDamCoreImplHandlerEPSFormatHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,mimetype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mimetype" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mimetype List  (optional)
 * returns comDayCqDamCoreImplHandlerIndesignFormatHandlerInfo
 **/
exports.comDayCqDamCoreImplHandlerIndesignFormatHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,mimetype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mimetype" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction Boolean  (optional)
 * largeUnderscorefileUnderscorethreshold Integer  (optional)
 * largeUnderscorecommentUnderscorethreshold Integer  (optional)
 * returns comDayCqDamCoreImplHandlerJpegHandlerInfo
 **/
exports.comDayCqDamCoreImplHandlerJpegHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodenablePeriodextPeriodmetaPeriodextraction,largeUnderscorefileUnderscorethreshold,largeUnderscorecommentUnderscorethreshold) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "large_comment_threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "large_file_threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.enable.ext.meta.extraction" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * xmphandlerPeriodcqPeriodformats List  (optional)
 * returns comDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo
 **/
exports.comDayCqDamCoreImplHandlerXmpNCommXMPHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,xmphandlerPeriodcqPeriodformats) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "xmphandler.cq.formats" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jmxPeriodobjectname String  (optional)
 * propertyPeriodmeasurePeriodenabled Boolean  (optional)
 * propertyPeriodname String  (optional)
 * propertyPeriodmaxPeriodwaitPeriodms Integer  (optional)
 * propertyPeriodmaxPeriodrate BigDecimal  (optional)
 * fulltextPeriodmeasurePeriodenabled Boolean  (optional)
 * fulltextPeriodname String  (optional)
 * fulltextPeriodmaxPeriodwaitPeriodms Integer  (optional)
 * fulltextPeriodmaxPeriodrate BigDecimal  (optional)
 * returns comDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo
 **/
exports.comDayCqDamCoreImplJmxAssetIndexUpdateMonitor = function(post,apply,_delete,action,Dollarlocation,propertylist,jmxPeriodobjectname,propertyPeriodmeasurePeriodenabled,propertyPeriodname,propertyPeriodmaxPeriodwaitPeriodms,propertyPeriodmaxPeriodrate,fulltextPeriodmeasurePeriodenabled,fulltextPeriodname,fulltextPeriodmaxPeriodwaitPeriodms,fulltextPeriodmaxPeriodrate) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "property.max.rate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : 6.02745618307040320615897144307382404804229736328125
    },
    "fulltext.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "fulltext.max.wait.ms" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "property.measure.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "fulltext.measure.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "fulltext.max.rate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : 6.02745618307040320615897144307382404804229736328125
    },
    "jmx.objectname" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "property.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "property.max.wait.ms" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jmxPeriodobjectname String  (optional)
 * returns comDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo
 **/
exports.comDayCqDamCoreImplJmxAssetMigrationMBeanImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,jmxPeriodobjectname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "jmx.objectname" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jmxPeriodobjectname String  (optional)
 * active Boolean  (optional)
 * returns comDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo
 **/
exports.comDayCqDamCoreImplJmxAssetUpdateMonitorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,jmxPeriodobjectname,active) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "active" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "jmx.objectname" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * operation String  (optional)
 * emailEnabled Boolean  (optional)
 * returns comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo
 **/
exports.comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,operation,emailEnabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "emailEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "operation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * operation String  (optional)
 * operationIcon String  (optional)
 * topicName String  (optional)
 * emailEnabled Boolean  (optional)
 * returns comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo
 **/
exports.comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,operation,operationIcon,topicName,emailEnabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "operationIcon" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "emailEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "topicName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "operation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodpaths String  (optional)
 * slingPeriodservletPeriodmethods List  (optional)
 * cqPerioddamPeriodenablePeriodanonymous Boolean  (optional)
 * returns comDayCqDamCoreImplLightboxLightboxServletInfo
 **/
exports.comDayCqDamCoreImplLightboxLightboxServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodpaths,slingPeriodservletPeriodmethods,cqPerioddamPeriodenablePeriodanonymous) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.servlet.paths" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.enable.anonymous" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * graniteData List  (optional)
 * returns comDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo
 **/
exports.comDayCqDamCoreImplMetadataEditorSelectComponentHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,graniteData) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "granite:data" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodallowPeriodallPeriodmime Boolean  (optional)
 * cqPerioddamPeriodallowedPeriodassetPeriodmimes List  (optional)
 * returns comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo
 **/
exports.comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodallowPeriodallPeriodmime,cqPerioddamPeriodallowedPeriodassetPeriodmimes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.allowed.asset.mimes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.dam.allow.all.mime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPerioddetectPeriodassetPeriodmimePeriodfromPeriodcontent Boolean  (optional)
 * returns comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo
 **/
exports.comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPerioddetectPeriodassetPeriodmimePeriodfromPeriodcontent) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.detect.asset.mime.from.content" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodistimebased Boolean  (optional)
 * cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule String  (optional)
 * cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodperiodPeriodrule Integer  (optional)
 * cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodrecipient String  (optional)
 * returns comDayCqDamCoreImplMissingMetadataNotificationJobInfo
 **/
exports.comDayCqDamCoreImplMissingMetadataNotificationJob = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodistimebased,cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodtimebasedPeriodrule,cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodschedulerPeriodperiodPeriodrule,cqPerioddamPeriodmissingmetadataPeriodnotificationPeriodrecipient) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.missingmetadata.notification.scheduler.period.rule" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.missingmetadata.notification.scheduler.istimebased" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.dam.missingmetadata.notification.scheduler.timebased.rule" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.missingmetadata.notification.recipient" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * processPeriodlabel String  (optional)
 * notify on Complete Boolean  (optional)
 * returns comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo
 **/
exports.comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr = function(post,apply,_delete,action,Dollarlocation,propertylist,processPeriodlabel,notify on Complete) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "Notify on Complete" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "process.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mimeTypes List  (optional)
 * maxExtract Integer  (optional)
 * returns comDayCqDamCoreImplProcessTextExtractionProcessInfo
 **/
exports.comDayCqDamCoreImplProcessTextExtractionProcess = function(post,apply,_delete,action,Dollarlocation,propertylist,mimeTypes,maxExtract) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mimeTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "maxExtract" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * xmpPeriodpropagate Boolean  (optional)
 * xmpPeriodexcludes List  (optional)
 * returns comDayCqDamCoreImplRenditionMakerImplInfo
 **/
exports.comDayCqDamCoreImplRenditionMakerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,xmpPeriodpropagate,xmpPeriodexcludes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "xmp.excludes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "xmp.propagate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * queryBatchSize Integer  (optional)
 * returns comDayCqDamCoreImplReportsReportExportServiceInfo
 **/
exports.comDayCqDamCoreImplReportsReportExportService = function(post,apply,_delete,action,Dollarlocation,propertylist,queryBatchSize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "queryBatchSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * maxSavedReports Integer  (optional)
 * timeDuration Integer  (optional)
 * enableReportPurge Boolean  (optional)
 * returns comDayCqDamCoreImplReportsReportPurgeServiceInfo
 **/
exports.comDayCqDamCoreImplReportsReportPurgeService = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression,maxSavedReports,timeDuration,enableReportPurge) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enableReportPurge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "maxSavedReports" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "timeDuration" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * returns comDayCqDamCoreImplServletAssetDownloadServletInfo
 **/
exports.comDayCqDamCoreImplServletAssetDownloadServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodbatchPeriodstatusPeriodmaxassets Integer  (optional)
 * returns comDayCqDamCoreImplServletAssetStatusServletInfo
 **/
exports.comDayCqDamCoreImplServletAssetStatusServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodbatchPeriodstatusPeriodmaxassets) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.batch.status.maxassets" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodbatchPeriodindesignPeriodmaxassets Integer  (optional)
 * returns comDayCqDamCoreImplServletAssetXMPSearchServletInfo
 **/
exports.comDayCqDamCoreImplServletAssetXMPSearchServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodbatchPeriodindesignPeriodmaxassets) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.batch.indesign.maxassets" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodbatchPeriodmetadataPeriodassetPerioddefault List  (optional)
 * cqPerioddamPeriodbatchPeriodmetadataPeriodcollectionPerioddefault List  (optional)
 * cqPerioddamPeriodbatchPeriodmetadataPeriodmaxresources Integer  (optional)
 * returns comDayCqDamCoreImplServletBatchMetadataServletInfo
 **/
exports.comDayCqDamCoreImplServletBatchMetadataServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodbatchPeriodmetadataPeriodassetPerioddefault,cqPerioddamPeriodbatchPeriodmetadataPeriodcollectionPerioddefault,cqPerioddamPeriodbatchPeriodmetadataPeriodmaxresources) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.batch.metadata.collection.default" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.dam.batch.metadata.maxresources" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.batch.metadata.asset.default" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodresourceTypes List  (optional)
 * slingPeriodservletPeriodmethods List  (optional)
 * cqPerioddamPerioddrmPeriodenable Boolean  (optional)
 * returns comDayCqDamCoreImplServletBinaryProviderServletInfo
 **/
exports.comDayCqDamCoreImplServletBinaryProviderServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodresourceTypes,slingPeriodservletPeriodmethods,cqPerioddamPerioddrmPeriodenable) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.drm.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "sling.servlet.resourceTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodbatchPeriodcollectionPeriodproperties List  (optional)
 * cqPerioddamPeriodbatchPeriodcollectionPeriodmaxcollections Integer  (optional)
 * returns comDayCqDamCoreImplServletCollectionServletInfo
 **/
exports.comDayCqDamCoreImplServletCollectionServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodbatchPeriodcollectionPeriodproperties,cqPerioddamPeriodbatchPeriodcollectionPeriodmaxcollections) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.batch.collection.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.dam.batch.collection.maxcollections" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodbatchPeriodcollectionsPeriodproperties List  (optional)
 * cqPerioddamPeriodbatchPeriodcollectionsPeriodlimit Integer  (optional)
 * returns comDayCqDamCoreImplServletCollectionsServletInfo
 **/
exports.comDayCqDamCoreImplServletCollectionsServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodbatchPeriodcollectionsPeriodproperties,cqPerioddamPeriodbatchPeriodcollectionsPeriodlimit) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.batch.collections.limit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.batch.collections.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * more Info String  (optional)
 * SlashmntSlashoverlaySlashdamSlashguiSlashcontentSlashassetsSlashmoreinfoPeriodhtmlSlashDollarLeft_Curly_BracketpathRight_Curly_Bracket String  (optional)
 * returns comDayCqDamCoreImplServletCompanionServletInfo
 **/
exports.comDayCqDamCoreImplServletCompanionServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,more Info,SlashmntSlashoverlaySlashdamSlashguiSlashcontentSlashassetsSlashmoreinfoPeriodhtmlSlashDollarLeft_Curly_BracketpathRight_Curly_Bracket) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "More Info" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path}" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * detectUnderscoreduplicate Boolean  (optional)
 * returns comDayCqDamCoreImplServletCreateAssetServletInfo
 **/
exports.comDayCqDamCoreImplServletCreateAssetServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,detectUnderscoreduplicate) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "detect_duplicate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodmimePeriodtypePeriodblacklist List  (optional)
 * cqPerioddamPeriodemptyPeriodmime Boolean  (optional)
 * returns comDayCqDamCoreImplServletDamContentDispositionFilterInfo
 **/
exports.comDayCqDamCoreImplServletDamContentDispositionFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodmimePeriodtypePeriodblacklist,cqPerioddamPeriodemptyPeriodmime) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.mime.type.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.dam.empty.mime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodcorePeriodguidlookupfilterPeriodenabled Boolean  (optional)
 * returns comDayCqDamCoreImplServletGuidLookupFilterInfo
 **/
exports.comDayCqDamCoreImplServletGuidLookupFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodcorePeriodguidlookupfilterPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.core.guidlookupfilter.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodsyncPeriodworkflowPeriodid String  (optional)
 * cqPerioddamPeriodsyncPeriodfolderPeriodtypes List  (optional)
 * returns comDayCqDamCoreImplServletHealthCheckServletInfo
 **/
exports.comDayCqDamCoreImplServletHealthCheckServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodsyncPeriodworkflowPeriodid,cqPerioddamPeriodsyncPeriodfolderPeriodtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.sync.workflow.id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.sync.folder.types" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodresourceTypes String  (optional)
 * slingPeriodservletPeriodmethods String  (optional)
 * slingPeriodservletPeriodextensions String  (optional)
 * slingPeriodservletPeriodselectors String  (optional)
 * returns comDayCqDamCoreImplServletMetadataGetServletInfo
 **/
exports.comDayCqDamCoreImplServletMetadataGetServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodresourceTypes,slingPeriodservletPeriodmethods,slingPeriodservletPeriodextensions,slingPeriodservletPeriodselectors) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.servlet.extensions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.selectors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.resourceTypes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPerioddrmPeriodenable Boolean  (optional)
 * returns comDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo
 **/
exports.comDayCqDamCoreImplServletMultipleLicenseAcceptServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPerioddrmPeriodenable) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.drm.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodresourceTypes List  (optional)
 * slingPeriodservletPeriodmethods String  (optional)
 * slingPeriodservletPeriodselectors String  (optional)
 * downloadPeriodconfig String  (optional)
 * viewPeriodselector String  (optional)
 * sendUnderscoreemail Boolean  (optional)
 * returns comDayCqDamCoreImplServletResourceCollectionServletInfo
 **/
exports.comDayCqDamCoreImplServletResourceCollectionServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodresourceTypes,slingPeriodservletPeriodmethods,slingPeriodservletPeriodselectors,downloadPeriodconfig,viewPeriodselector,sendUnderscoreemail) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.servlet.selectors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.resourceTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "view.selector" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "send_email" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "download.config" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * createPreviewEnabled Boolean  (optional)
 * updatePreviewEnabled Boolean  (optional)
 * queueSize Integer  (optional)
 * folderPreviewRenditionRegex String  (optional)
 * returns comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo
 **/
exports.comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,createPreviewEnabled,updatePreviewEnabled,queueSize,folderPreviewRenditionRegex) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "createPreviewEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "updatePreviewEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "queueSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "folderPreviewRenditionRegex" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodconfigPeriodunzipPeriodmaxuncompressedsize Integer  (optional)
 * cqPerioddamPeriodconfigPeriodunzipPeriodencoding String  (optional)
 * returns comDayCqDamCoreImplUnzipUnzipConfigInfo
 **/
exports.comDayCqDamCoreImplUnzipUnzipConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodconfigPeriodunzipPeriodmaxuncompressedsize,cqPerioddamPeriodconfigPeriodunzipPeriodencoding) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.config.unzip.encoding" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.config.unzip.maxuncompressedsize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * processPeriodlabel String  (optional)
 * cqPerioddamPeriodenablePeriodsha1 Boolean  (optional)
 * returns comDayCqDamCoreProcessExifToolExtractMetadataProcessInfo
 **/
exports.comDayCqDamCoreProcessExifToolExtractMetadataProcess = function(post,apply,_delete,action,Dollarlocation,propertylist,processPeriodlabel,cqPerioddamPeriodenablePeriodsha1) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.enable.sha1" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "process.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * processPeriodlabel String  (optional)
 * cqPerioddamPeriodenablePeriodsha1 Boolean  (optional)
 * returns comDayCqDamCoreProcessExtractMetadataProcessInfo
 **/
exports.comDayCqDamCoreProcessExtractMetadataProcess = function(post,apply,_delete,action,Dollarlocation,propertylist,processPeriodlabel,cqPerioddamPeriodenablePeriodsha1) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.enable.sha1" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "process.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * processPeriodlabel String  (optional)
 * cqPerioddamPeriodenablePeriodsha1 Boolean  (optional)
 * cqPerioddamPeriodmetadataPeriodxssprotectedPeriodproperties List  (optional)
 * returns comDayCqDamCoreProcessMetadataProcessorProcessInfo
 **/
exports.comDayCqDamCoreProcessMetadataProcessorProcess = function(post,apply,_delete,action,Dollarlocation,propertylist,processPeriodlabel,cqPerioddamPeriodenablePeriodsha1,cqPerioddamPeriodmetadataPeriodxssprotectedPeriodproperties) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.enable.sha1" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "process.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.metadata.xssprotected.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * executablePeriodsearchpath List  (optional)
 * returns comDayCqDamHandlerFfmpegLocatorImplInfo
 **/
exports.comDayCqDamHandlerFfmpegLocatorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,executablePeriodsearchpath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "executable.searchpath" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodfilter String  (optional)
 * fontmgrPeriodsystemPeriodfontPerioddir List  (optional)
 * fontmgrPeriodadobePeriodfontPerioddir String  (optional)
 * fontmgrPeriodcustomerPeriodfontPerioddir String  (optional)
 * returns comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo
 **/
exports.comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodfilter,fontmgrPeriodsystemPeriodfontPerioddir,fontmgrPeriodadobePeriodfontPerioddir,fontmgrPeriodcustomerPeriodfontPerioddir) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fontmgr.customer.font.dir" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "fontmgr.system.font.dir" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "fontmgr.adobe.font.dir" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * rasterPeriodannotation Boolean  (optional)
 * returns comDayCqDamHandlerStandardPdfPdfHandlerInfo
 **/
exports.comDayCqDamHandlerStandardPdfPdfHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,rasterPeriodannotation) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "raster.annotation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * rasterPeriodannotation Boolean  (optional)
 * returns comDayCqDamHandlerStandardPsPostScriptHandlerInfo
 **/
exports.comDayCqDamHandlerStandardPsPostScriptHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,rasterPeriodannotation) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "raster.annotation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * largeUnderscorefileUnderscorethreshold Integer  (optional)
 * returns comDayCqDamHandlerStandardPsdPsdHandlerInfo
 **/
exports.comDayCqDamHandlerStandardPsdPsdHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,largeUnderscorefileUnderscorethreshold) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "large_file_threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enablePeriodmultisession Boolean  (optional)
 * idsPeriodccPeriodenable Boolean  (optional)
 * enablePeriodretry Boolean  (optional)
 * enablePeriodretryPeriodscripterror Boolean  (optional)
 * externalizerPerioddomainPeriodcqhost String  (optional)
 * externalizerPerioddomainPeriodhttp String  (optional)
 * returns comDayCqDamIdsImplIDSJobProcessorInfo
 **/
exports.comDayCqDamIdsImplIDSJobProcessor = function(post,apply,_delete,action,Dollarlocation,propertylist,enablePeriodmultisession,idsPeriodccPeriodenable,enablePeriodretry,enablePeriodretryPeriodscripterror,externalizerPerioddomainPeriodcqhost,externalizerPerioddomainPeriodhttp) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "externalizer.domain.cqhost" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enable.multisession" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "ids.cc.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "enable.retry" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "enable.retry.scripterror" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "externalizer.domain.http" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxPerioderrorsPeriodtoPeriodblacklist Integer  (optional)
 * retryPeriodintervalPeriodtoPeriodwhitelist Integer  (optional)
 * connectPeriodtimeout Integer  (optional)
 * socketPeriodtimeout Integer  (optional)
 * processPeriodlabel String  (optional)
 * connectionPeriodusePeriodmax Integer  (optional)
 * returns comDayCqDamIdsImplIDSPoolManagerImplInfo
 **/
exports.comDayCqDamIdsImplIDSPoolManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,maxPerioderrorsPeriodtoPeriodblacklist,retryPeriodintervalPeriodtoPeriodwhitelist,connectPeriodtimeout,socketPeriodtimeout,processPeriodlabel,connectionPeriodusePeriodmax) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "retry.interval.to.whitelist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "connect.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "process.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "max.errors.to.blacklist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "socket.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "connection.use.max" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * processPeriodlabel String  (optional)
 * extractPeriodpages Boolean  (optional)
 * returns comDayCqDamInddImplHandlerIndesignXMPHandlerInfo
 **/
exports.comDayCqDamInddImplHandlerIndesignXMPHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,processPeriodlabel,extractPeriodpages) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "process.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "extract.pages" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * snippetcreationPeriodmaxcollections Integer  (optional)
 * returns comDayCqDamInddImplServletSnippetCreationServletInfo
 **/
exports.comDayCqDamInddImplServletSnippetCreationServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,snippetcreationPeriodmaxcollections) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "snippetcreation.maxcollections" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * processPeriodlabel String  (optional)
 * cqPerioddamPeriodinddPeriodpagesPeriodregex String  (optional)
 * idsPeriodjobPerioddecoupled Boolean  (optional)
 * idsPeriodjobPeriodworkflowPeriodmodel String  (optional)
 * returns comDayCqDamInddProcessINDDMediaExtractProcessInfo
 **/
exports.comDayCqDamInddProcessINDDMediaExtractProcess = function(post,apply,_delete,action,Dollarlocation,propertylist,processPeriodlabel,cqPerioddamPeriodinddPeriodpagesPeriodregex,idsPeriodjobPerioddecoupled,idsPeriodjobPeriodworkflowPeriodmodel) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "process.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.dam.indd.pages.regex" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "ids.job.workflow.model" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "ids.job.decoupled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * batchPeriodcommitPeriodsize Integer  (optional)
 * returns comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo
 **/
exports.comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,batchPeriodcommitPeriodsize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "batch.commit.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * returns comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo
 **/
exports.comDayCqDamPerformanceInternalAssetPerformanceReportSyncJob = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * deletePeriodzipPeriodfile Boolean  (optional)
 * returns comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo
 **/
exports.comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro = function(post,apply,_delete,action,Dollarlocation,propertylist,deletePeriodzipPeriodfile) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "delete.zip.file" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriods7damPerioddynamicmediaconfigeventlistenerPeriodenabled Boolean  (optional)
 * returns comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo
 **/
exports.comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriods7damPerioddynamicmediaconfigeventlistenerPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * schedulerPeriodconcurrent Boolean  (optional)
 * returns comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo
 **/
exports.comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression,schedulerPeriodconcurrent) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.concurrent" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodpostPeriodoperation String  (optional)
 * slingPeriodservletPeriodmethods String  (optional)
 * returns comDayCqDamS7damCommonPostServletsSetCreateHandlerInfo
 **/
exports.comDayCqDamS7damCommonPostServletsSetCreateHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodpostPeriodoperation,slingPeriodservletPeriodmethods) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.post.operation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodpostPeriodoperation String  (optional)
 * slingPeriodservletPeriodmethods String  (optional)
 * returns comDayCqDamS7damCommonPostServletsSetModifyHandlerInfo
 **/
exports.comDayCqDamS7damCommonPostServletsSetModifyHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodpostPeriodoperation,slingPeriodservletPeriodmethods) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.post.operation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * processPeriodlabel String  (optional)
 * returns comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo
 **/
exports.comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess = function(post,apply,_delete,action,Dollarlocation,propertylist,processPeriodlabel) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "process.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriods7damPerioddamchangeeventlistenerPeriodenabled Boolean  (optional)
 * returns comDayCqDamS7damCommonS7damDamChangeEventListenerInfo
 **/
exports.comDayCqDamS7damCommonS7damDamChangeEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriods7damPerioddamchangeeventlistenerPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.s7dam.damchangeeventlistener.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodpaths String  (optional)
 * slingPeriodservletPeriodmethods String  (optional)
 * returns comDayCqDamS7damCommonServletsS7damProductInfoServletInfo
 **/
exports.comDayCqDamS7damCommonServletsS7damProductInfoServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodpaths,slingPeriodservletPeriodmethods) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.servlet.paths" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodminsizePeriodname Integer  (optional)
 * cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodpartsizePeriodname Integer  (optional)
 * cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodnumthreadPeriodname Integer  (optional)
 * cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodreadtimeoutPeriodname Integer  (optional)
 * cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodconnectiontimeoutPeriodname Integer  (optional)
 * cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodmaxretrycountPeriodname Integer  (optional)
 * cqPerioddamPeriods7damPeriodvideoproxyclientservicePerioduploadprogressPeriodintervalPeriodname Integer  (optional)
 * returns comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo
 **/
exports.comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodminsizePeriodname,cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodpartsizePeriodname,cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodmultipartuploadPeriodnumthreadPeriodname,cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodreadtimeoutPeriodname,cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodconnectiontimeoutPeriodname,cqPerioddamPeriods7damPeriodvideoproxyclientservicePeriodhttpPeriodmaxretrycountPeriodname,cqPerioddamPeriods7damPeriodvideoproxyclientservicePerioduploadprogressPeriodintervalPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodnofilterPeriodname Integer  (optional)
 * cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodwithfilterPeriodname Integer  (optional)
 * returns comDayCqDamScene7ImplScene7APIClientImplInfo
 **/
exports.comDayCqDamScene7ImplScene7APIClientImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodnofilterPeriodname,cqPerioddamPeriodscene7PeriodapiclientPeriodrecordsperpagePeriodwithfilterPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.scene7.apiclient.recordsperpage.withfilter.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.scene7.apiclient.recordsperpage.nofilter.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodscene7PeriodassetmimetypeservicePeriodmapping List  (optional)
 * returns comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo
 **/
exports.comDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodscene7PeriodassetmimetypeservicePeriodmapping) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.scene7.assetmimetypeservice.mapping" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodscene7PeriodconfigurationeventlistenerPeriodenabled Boolean  (optional)
 * returns comDayCqDamScene7ImplScene7ConfigurationEventListenerInfo
 **/
exports.comDayCqDamScene7ImplScene7ConfigurationEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodscene7PeriodconfigurationeventlistenerPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.scene7.configurationeventlistener.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodenabled Boolean  (optional)
 * cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodobservedPeriodpaths List  (optional)
 * returns comDayCqDamScene7ImplScene7DamChangeEventListenerInfo
 **/
exports.comDayCqDamScene7ImplScene7DamChangeEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodenabled,cqPerioddamPeriodscene7PerioddamchangeeventlistenerPeriodobservedPeriodpaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.scene7.damchangeeventlistener.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.dam.scene7.damchangeeventlistener.observed.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * scene7FlashTemplatesPeriodrti String  (optional)
 * scene7FlashTemplatesPeriodrsi String  (optional)
 * scene7FlashTemplatesPeriodrb String  (optional)
 * scene7FlashTemplatesPeriodrurl String  (optional)
 * scene7FlashTemplatePeriodurlFormatParameter String  (optional)
 * returns comDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo
 **/
exports.comDayCqDamScene7ImplScene7FlashTemplatesServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,scene7FlashTemplatesPeriodrti,scene7FlashTemplatesPeriodrsi,scene7FlashTemplatesPeriodrb,scene7FlashTemplatesPeriodrurl,scene7FlashTemplatePeriodurlFormatParameter) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scene7FlashTemplates.rti" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "scene7FlashTemplates.rb" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "scene7FlashTemplates.rurl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "scene7FlashTemplates.rsi" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "scene7FlashTemplate.urlFormatParameter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPerioddamPeriodscene7PerioduploadservicePeriodactivejobtimeoutPeriodlabel Integer  (optional)
 * cqPerioddamPeriodscene7PerioduploadservicePeriodconnectionmaxperroutePeriodlabel Integer  (optional)
 * returns comDayCqDamScene7ImplScene7UploadServiceImplInfo
 **/
exports.comDayCqDamScene7ImplScene7UploadServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPerioddamPeriodscene7PerioduploadservicePeriodactivejobtimeoutPeriodlabel,cqPerioddamPeriodscene7PerioduploadservicePeriodconnectionmaxperroutePeriodlabel) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.dam.scene7.uploadservice.connectionmaxperroute.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.dam.scene7.uploadservice.activejobtimeout.label" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * getCacheExpirationUnit String  (optional)
 * getCacheExpirationValue Integer  (optional)
 * returns comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo
 **/
exports.comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer = function(post,apply,_delete,action,Dollarlocation,propertylist,getCacheExpirationUnit,getCacheExpirationValue) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "getCacheExpirationUnit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "getCacheExpirationValue" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * locale String  (optional)
 * imsConfig String  (optional)
 * returns comDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo
 **/
exports.comDayCqDamStockIntegrationImplConfigurationStockConfiguration = function(post,apply,_delete,action,Dollarlocation,propertylist,name,locale,imsConfig) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "imsConfig" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "locale" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * returns comDayCqDamVideoImplServletVideoTestServletInfo
 **/
exports.comDayCqDamVideoImplServletVideoTestServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxWidth Integer  (optional)
 * maxHeight Integer  (optional)
 * returns comDayCqExtwidgetServletsImageSpriteServletInfo
 **/
exports.comDayCqExtwidgetServletsImageSpriteServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,maxWidth,maxHeight) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "maxHeight" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxWidth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fontpath List  (optional)
 * oversamplingFactor Integer  (optional)
 * returns comDayCqImageInternalFontFontHelperInfo
 **/
exports.comDayCqImageInternalFontFontHelper = function(post,apply,_delete,action,Dollarlocation,propertylist,fontpath,oversamplingFactor) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "fontpath" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "oversamplingFactor" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * clusterPeriodlevelPeriodenable Boolean  (optional)
 * clusterPeriodmasterPeriodlevel Integer  (optional)
 * clusterPeriodslavePeriodlevel Integer  (optional)
 * returns comDayCqJcrclustersupportClusterStartLevelControllerInfo
 **/
exports.comDayCqJcrclustersupportClusterStartLevelController = function(post,apply,_delete,action,Dollarlocation,propertylist,clusterPeriodlevelPeriodenable,clusterPeriodmasterPeriodlevel,clusterPeriodslavePeriodlevel) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cluster.level.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cluster.slave.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cluster.master.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * smtpPeriodhost String  (optional)
 * smtpPeriodport Integer  (optional)
 * smtpPerioduser String  (optional)
 * smtpPeriodpassword String  (optional)
 * fromPeriodaddress String  (optional)
 * smtpPeriodssl Boolean  (optional)
 * smtpPeriodstarttls Boolean  (optional)
 * debugPeriodemail Boolean  (optional)
 * returns comDayCqMailerDefaultMailServiceInfo
 **/
exports.comDayCqMailerDefaultMailService = function(post,apply,_delete,action,Dollarlocation,propertylist,smtpPeriodhost,smtpPeriodport,smtpPerioduser,smtpPeriodpassword,fromPeriodaddress,smtpPeriodssl,smtpPeriodstarttls,debugPeriodemail) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "smtp.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "smtp.port" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "smtp.ssl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "smtp.host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "from.address" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "smtp.starttls" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "smtp.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "debug.email" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxPeriodrecipientPeriodcount String  (optional)
 * returns comDayCqMailerImplCqMailingServiceInfo
 **/
exports.comDayCqMailerImplCqMailingService = function(post,apply,_delete,action,Dollarlocation,propertylist,maxPeriodrecipientPeriodcount) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "max.recipient.count" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mailerPeriodemailPeriodcharset String  (optional)
 * returns comDayCqMailerImplEmailCqEmailTemplateFactoryInfo
 **/
exports.comDayCqMailerImplEmailCqEmailTemplateFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,mailerPeriodemailPeriodcharset) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mailer.email.charset" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mailerPeriodemailPeriodembed Boolean  (optional)
 * mailerPeriodemailPeriodcharset String  (optional)
 * mailerPeriodemailPeriodretrieverUserID String  (optional)
 * mailerPeriodemailPeriodretrieverUserPWD String  (optional)
 * returns comDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo
 **/
exports.comDayCqMailerImplEmailCqRetrieverTemplateFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,mailerPeriodemailPeriodembed,mailerPeriodemailPeriodcharset,mailerPeriodemailPeriodretrieverUserID,mailerPeriodemailPeriodretrieverUserPWD) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mailer.email.charset" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "mailer.email.embed" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "mailer.email.retrieverUserPWD" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "mailer.email.retrieverUserID" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * aemPeriodmcmPeriodcampaignPeriodformConstraints List  (optional)
 * aemPeriodmcmPeriodcampaignPeriodpublicUrl String  (optional)
 * aemPeriodmcmPeriodcampaignPeriodrelaxedSSL Boolean  (optional)
 * returns comDayCqMcmCampaignImplIntegrationConfigImplInfo
 **/
exports.comDayCqMcmCampaignImplIntegrationConfigImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,aemPeriodmcmPeriodcampaignPeriodformConstraints,aemPeriodmcmPeriodcampaignPeriodpublicUrl,aemPeriodmcmPeriodcampaignPeriodrelaxedSSL) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "aem.mcm.campaign.formConstraints" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "aem.mcm.campaign.relaxedSSL" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "aem.mcm.campaign.publicUrl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo
 **/
exports.comDayCqMcmCampaignImporterPersonalizedTextHandlerFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fromPeriodaddress String  (optional)
 * senderPeriodhost String  (optional)
 * maxPeriodbouncePeriodcount String  (optional)
 * returns comDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo
 **/
exports.comDayCqMcmCoreNewsletterNewsletterEmailServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,fromPeriodaddress,senderPeriodhost,maxPeriodbouncePeriodcount) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "max.bounce.count" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "from.address" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sender.host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * experiencePeriodindirection List  (optional)
 * touchpointPeriodindirection List  (optional)
 * returns comDayCqMcmImplMCMConfigurationInfo
 **/
exports.comDayCqMcmImplMCMConfiguration = function(post,apply,_delete,action,Dollarlocation,propertylist,experiencePeriodindirection,touchpointPeriodindirection) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "touchpoint.indirection" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "experience.indirection" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * componentPeriodresourceType String  (optional)
 * returns comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo
 **/
exports.comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern,componentPeriodresourceType) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "component.resourceType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * componentPeriodresourceType String  (optional)
 * returns comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo
 **/
exports.comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern,componentPeriodresourceType) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "component.resourceType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo
 **/
exports.comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo
 **/
exports.comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * componentPeriodresourceType String  (optional)
 * returns comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo
 **/
exports.comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern,componentPeriodresourceType) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "component.resourceType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodfilter String  (optional)
 * returns comDayCqNotificationImplNotificationServiceImplInfo
 **/
exports.comDayCqNotificationImplNotificationServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodfilter) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * forcelocation Boolean  (optional)
 * returns comDayCqPersonalizationImplServletsTargetingConfigurationServletInfo
 **/
exports.comDayCqPersonalizationImplServletsTargetingConfigurationServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,forcelocation) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "forcelocation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * id String  (optional)
 * enabled Boolean  (optional)
 * reference Boolean  (optional)
 * interval Integer  (optional)
 * expression String  (optional)
 * source String  (optional)
 * target String  (optional)
 * login String  (optional)
 * password String  (optional)
 * returns comDayCqPollingImporterImplManagedPollConfigImplInfo
 **/
exports.comDayCqPollingImporterImplManagedPollConfigImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,id,enabled,reference,interval,expression,source,target,login,password) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "reference" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "id" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "source" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "login" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * importerPerioduser String  (optional)
 * returns comDayCqPollingImporterImplManagedPollingImporterImplInfo
 **/
exports.comDayCqPollingImporterImplManagedPollingImporterImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,importerPerioduser) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "importer.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * importerPeriodminPeriodinterval Integer  (optional)
 * importerPerioduser String  (optional)
 * excludePeriodpaths List  (optional)
 * includePeriodpaths List  (optional)
 * returns comDayCqPollingImporterImplPollingImporterImplInfo
 **/
exports.comDayCqPollingImporterImplPollingImporterImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,importerPeriodminPeriodinterval,importerPerioduser,excludePeriodpaths,includePeriodpaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "include.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "importer.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "importer.min.interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "exclude.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * returns comDayCqReplicationAuditReplicationEventListenerInfo
 **/
exports.comDayCqReplicationAuditReplicationEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * host String  (optional)
 * port Integer  (optional)
 * returns comDayCqReplicationContentStaticContentBuilderInfo
 **/
exports.comDayCqReplicationContentStaticContentBuilder = function(post,apply,_delete,action,Dollarlocation,propertylist,host,port) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "port" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jobPeriodtopics String  (optional)
 * serviceUserPeriodtarget String  (optional)
 * agentProviderPeriodtarget String  (optional)
 * returns comDayCqReplicationImplAgentManagerImplInfo
 **/
exports.comDayCqReplicationImplAgentManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,jobPeriodtopics,serviceUserPeriodtarget,agentProviderPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "serviceUser.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "agentProvider.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "job.topics" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * binaryPeriodthreshold Integer  (optional)
 * returns comDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo
 **/
exports.comDayCqReplicationImplContentDurboBinaryLessContentBuilder = function(post,apply,_delete,action,Dollarlocation,propertylist,binaryPeriodthreshold) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "binary.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * preservePeriodhierarchyPeriodnodes Boolean  (optional)
 * ignorePeriodversioning Boolean  (optional)
 * importPeriodacl Boolean  (optional)
 * savePeriodthreshold Integer  (optional)
 * preservePerioduserPeriodpaths Boolean  (optional)
 * preservePerioduuid Boolean  (optional)
 * preservePerioduuidPeriodnodetypes List  (optional)
 * preservePerioduuidPeriodsubtrees List  (optional)
 * autoPeriodcommit Boolean  (optional)
 * returns comDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo
 **/
exports.comDayCqReplicationImplContentDurboDurboImportConfigurationProv = function(post,apply,_delete,action,Dollarlocation,propertylist,preservePeriodhierarchyPeriodnodes,ignorePeriodversioning,importPeriodacl,savePeriodthreshold,preservePerioduserPeriodpaths,preservePerioduuid,preservePerioduuidPeriodnodetypes,preservePerioduuidPeriodsubtrees,autoPeriodcommit) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "preserve.hierarchy.nodes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "save.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "preserve.uuid.nodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "ignore.versioning" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "preserve.uuid" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "import.acl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "preserve.user.paths" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "preserve.uuid.subtrees" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "auto.commit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * replicationPeriodcontentPerioduseFileStorage Boolean  (optional)
 * replicationPeriodcontentPeriodmaxCommitAttempts Integer  (optional)
 * returns comDayCqReplicationImplReplicationContentFactoryProviderImplInfo
 **/
exports.comDayCqReplicationImplReplicationContentFactoryProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,replicationPeriodcontentPerioduseFileStorage,replicationPeriodcontentPeriodmaxCommitAttempts) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "replication.content.maxCommitAttempts" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "replication.content.useFileStorage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * receiverPeriodtmpfilePeriodthreshold Integer  (optional)
 * receiverPeriodpackagesPeriodusePeriodinstall Boolean  (optional)
 * returns comDayCqReplicationImplReplicationReceiverImplInfo
 **/
exports.comDayCqReplicationImplReplicationReceiverImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,receiverPeriodtmpfilePeriodthreshold,receiverPeriodpackagesPeriodusePeriodinstall) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "receiver.packages.use.install" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "receiver.tmpfile.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * distributeUnderscoreevents Boolean  (optional)
 * returns comDayCqReplicationImplReplicatorImplInfo
 **/
exports.comDayCqReplicationImplReplicatorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,distributeUnderscoreevents) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "distribute_events" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodperiod Integer  (optional)
 * returns comDayCqReplicationImplReverseReplicatorInfo
 **/
exports.comDayCqReplicationImplReverseReplicator = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodperiod) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "scheduler.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * disabledPeriodcipherPeriodsuites List  (optional)
 * enabledPeriodcipherPeriodsuites List  (optional)
 * returns comDayCqReplicationImplTransportBinaryLessTransportHandlerInfo
 **/
exports.comDayCqReplicationImplTransportBinaryLessTransportHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,disabledPeriodcipherPeriodsuites,enabledPeriodcipherPeriodsuites) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled.cipher.suites" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "disabled.cipher.suites" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * disabledPeriodcipherPeriodsuites List  (optional)
 * enabledPeriodcipherPeriodsuites List  (optional)
 * returns comDayCqReplicationImplTransportHttpInfo
 **/
exports.comDayCqReplicationImplTransportHttp = function(post,apply,_delete,action,Dollarlocation,propertylist,disabledPeriodcipherPeriodsuites,enabledPeriodcipherPeriodsuites) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled.cipher.suites" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "disabled.cipher.suites" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * repcachePeriodenable Boolean  (optional)
 * repcachePeriodttl Integer  (optional)
 * repcachePeriodmax Integer  (optional)
 * returns comDayCqReportingImplCacheCacheImplInfo
 **/
exports.comDayCqReportingImplCacheCacheImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,repcachePeriodenable,repcachePeriodttl,repcachePeriodmax) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "repcache.ttl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "repcache.max" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "repcache.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * repconfPeriodtimezone String  (optional)
 * repconfPeriodlocale String  (optional)
 * repconfPeriodsnapshots String  (optional)
 * repconfPeriodrepdir String  (optional)
 * repconfPeriodhourofday Integer  (optional)
 * repconfPeriodminofhour Integer  (optional)
 * repconfPeriodmaxrows Integer  (optional)
 * repconfPeriodfakedata Boolean  (optional)
 * repconfPeriodsnapshotuser String  (optional)
 * repconfPeriodenforcesnapshotuser Boolean  (optional)
 * returns comDayCqReportingImplConfigServiceImplInfo
 **/
exports.comDayCqReportingImplConfigServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,repconfPeriodtimezone,repconfPeriodlocale,repconfPeriodsnapshots,repconfPeriodrepdir,repconfPeriodhourofday,repconfPeriodminofhour,repconfPeriodmaxrows,repconfPeriodfakedata,repconfPeriodsnapshotuser,repconfPeriodenforcesnapshotuser) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "repconf.fakedata" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "repconf.timezone" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "repconf.snapshots" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "repconf.maxrows" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "repconf.snapshotuser" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "repconf.locale" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "repconf.repdir" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "repconf.hourofday" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "repconf.minofhour" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "repconf.enforcesnapshotuser" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * requestPeriodlogPeriodoutput String  (optional)
 * returns comDayCqReportingImplRLogAnalyzerInfo
 **/
exports.comDayCqReportingImplRLogAnalyzer = function(post,apply,_delete,action,Dollarlocation,propertylist,requestPeriodlogPeriodoutput) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "request.log.output" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodperiod Integer  (optional)
 * schedulerPeriodconcurrent Boolean  (optional)
 * servicePeriodbadUnderscorelinkUnderscoretoleranceUnderscoreinterval Integer  (optional)
 * servicePeriodcheckUnderscoreoverrideUnderscorepatterns List  (optional)
 * servicePeriodcacheUnderscorebrokenUnderscoreinternalUnderscorelinks Boolean  (optional)
 * servicePeriodspecialUnderscorelinkUnderscoreprefix List  (optional)
 * servicePeriodspecialUnderscorelinkUnderscorepatterns List  (optional)
 * returns comDayCqRewriterLinkcheckerImplLinkCheckerImplInfo
 **/
exports.comDayCqRewriterLinkcheckerImplLinkCheckerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodperiod,schedulerPeriodconcurrent,servicePeriodbadUnderscorelinkUnderscoretoleranceUnderscoreinterval,servicePeriodcheckUnderscoreoverrideUnderscorepatterns,servicePeriodcacheUnderscorebrokenUnderscoreinternalUnderscorelinks,servicePeriodspecialUnderscorelinkUnderscoreprefix,servicePeriodspecialUnderscorelinkUnderscorepatterns) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "service.special_link_prefix" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "scheduler.concurrent" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "service.special_link_patterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "service.check_override_patterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "service.cache_broken_internal_links" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "scheduler.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "service.bad_link_tolerance_interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodperiod Integer  (optional)
 * schedulerPeriodconcurrent Boolean  (optional)
 * goodUnderscorelinkUnderscoretestUnderscoreinterval Integer  (optional)
 * badUnderscorelinkUnderscoretestUnderscoreinterval Integer  (optional)
 * linkUnderscoreunusedUnderscoreinterval Integer  (optional)
 * connectionPeriodtimeout Integer  (optional)
 * returns comDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo
 **/
exports.comDayCqRewriterLinkcheckerImplLinkCheckerTask = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodperiod,schedulerPeriodconcurrent,goodUnderscorelinkUnderscoretestUnderscoreinterval,badUnderscorelinkUnderscoretestUnderscoreinterval,linkUnderscoreunusedUnderscoreinterval,connectionPeriodtimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.concurrent" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "good_link_test_interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "link_unused_interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "connection.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "bad_link_test_interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "scheduler.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * linkcheckertransformerPerioddisableRewriting Boolean  (optional)
 * linkcheckertransformerPerioddisableChecking Boolean  (optional)
 * linkcheckertransformerPeriodmapCacheSize Integer  (optional)
 * linkcheckertransformerPeriodstrictExtensionCheck Boolean  (optional)
 * linkcheckertransformerPeriodstripHtmltExtension Boolean  (optional)
 * linkcheckertransformerPeriodrewriteElements List  (optional)
 * linkcheckertransformerPeriodstripExtensionPathBlacklist List  (optional)
 * returns comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo
 **/
exports.comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,linkcheckertransformerPerioddisableRewriting,linkcheckertransformerPerioddisableChecking,linkcheckertransformerPeriodmapCacheSize,linkcheckertransformerPeriodstrictExtensionCheck,linkcheckertransformerPeriodstripHtmltExtension,linkcheckertransformerPeriodrewriteElements,linkcheckertransformerPeriodstripExtensionPathBlacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "linkcheckertransformer.rewriteElements" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "linkcheckertransformer.mapCacheSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "linkcheckertransformer.stripExtensionPathBlacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "linkcheckertransformer.strictExtensionCheck" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "linkcheckertransformer.stripHtmltExtension" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "linkcheckertransformer.disableChecking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "linkcheckertransformer.disableRewriting" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodmaxUnderscorelinksUnderscoreperUnderscorehost Integer  (optional)
 * servicePeriodsaveUnderscoreexternalUnderscorelinkUnderscorereferences Boolean  (optional)
 * returns comDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo
 **/
exports.comDayCqRewriterLinkcheckerImplLinkInfoStorageImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodmaxUnderscorelinksUnderscoreperUnderscorehost,servicePeriodsaveUnderscoreexternalUnderscorelinkUnderscorereferences) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "service.max_links_per_host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "service.save_external_link_references" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * htmlparserPeriodprocessTags List  (optional)
 * htmlparserPeriodpreserveCamelCase Boolean  (optional)
 * returns comDayCqRewriterProcessorImplHtmlParserFactoryInfo
 **/
exports.comDayCqRewriterProcessorImplHtmlParserFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,htmlparserPeriodprocessTags,htmlparserPeriodpreserveCamelCase) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "htmlparser.preserveCamelCase" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmlparser.processTags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * excerptPeriodproperties List  (optional)
 * cachePeriodmaxPeriodentries Integer  (optional)
 * cachePeriodentryPeriodlifetime Integer  (optional)
 * xpathPeriodunion Boolean  (optional)
 * returns comDayCqSearchImplBuilderQueryBuilderImplInfo
 **/
exports.comDayCqSearchImplBuilderQueryBuilderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,excerptPeriodproperties,cachePeriodmaxPeriodentries,cachePeriodentryPeriodlifetime,xpathPeriodunion) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "excerpt.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cache.entry.lifetime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "xpath.union" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cache.max.entries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * pathBuilderPeriodtarget String  (optional)
 * suggestPeriodbasepath String  (optional)
 * returns comDayCqSearchSuggestImplSuggestionIndexManagerImplInfo
 **/
exports.comDayCqSearchSuggestImplSuggestionIndexManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,pathBuilderPeriodtarget,suggestPeriodbasepath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "suggest.basepath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pathBuilder.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodsearchpromotePeriodconfighandlerPeriodenabled Boolean  (optional)
 * returns comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo
 **/
exports.comDayCqSearchpromoteImplPublishSearchPromoteConfigHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodsearchpromotePeriodconfighandlerPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.searchpromote.confighandler.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodsearchpromotePeriodconfigurationPeriodserverPerioduri String  (optional)
 * cqPeriodsearchpromotePeriodconfigurationPeriodenvironment String  (optional)
 * connectionPeriodtimeout Integer  (optional)
 * socketPeriodtimeout Integer  (optional)
 * returns comDayCqSearchpromoteImplSearchPromoteServiceImplInfo
 **/
exports.comDayCqSearchpromoteImplSearchPromoteServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodsearchpromotePeriodconfigurationPeriodserverPerioduri,cqPeriodsearchpromotePeriodconfigurationPeriodenvironment,connectionPeriodtimeout,socketPeriodtimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.searchpromote.configuration.environment" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "connection.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "socket.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.searchpromote.configuration.server.uri" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodaclsetupPeriodrules List  (optional)
 * returns comDayCqSecurityACLSetupInfo
 **/
exports.comDayCqSecurityACLSetup = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodaclsetupPeriodrules) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.aclsetup.rules" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodperiod Integer  (optional)
 * schedulerPeriodconcurrent Boolean  (optional)
 * path String  (optional)
 * workspace String  (optional)
 * keywordsPath String  (optional)
 * asyncEntries Boolean  (optional)
 * returns comDayCqStatisticsImplStatisticsServiceImplInfo
 **/
exports.comDayCqStatisticsImplStatisticsServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodperiod,schedulerPeriodconcurrent,path,workspace,keywordsPath,asyncEntries) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "scheduler.concurrent" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "workspace" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "keywordsPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "asyncEntries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "scheduler.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * validationPeriodenabled Boolean  (optional)
 * returns comDayCqTaggingImplJcrTagManagerFactoryImplInfo
 **/
exports.comDayCqTaggingImplJcrTagManagerFactoryImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,validationPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "validation.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * ignoreUnderscorepath Boolean  (optional)
 * returns comDayCqTaggingImplSearchTagPredicateEvaluatorInfo
 **/
exports.comDayCqTaggingImplSearchTagPredicateEvaluator = function(post,apply,_delete,action,Dollarlocation,propertylist,ignoreUnderscorepath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ignore_path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * returns comDayCqTaggingImplTagGarbageCollectorInfo
 **/
exports.comDayCqTaggingImplTagGarbageCollector = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodpagesupdatehandlerPeriodimageresourcetypes List  (optional)
 * returns comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo
 **/
exports.comDayCqWcmContentsyncImplHandlerPagesUpdateHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodpagesupdatehandlerPeriodimageresourcetypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.pagesupdatehandler.imageresourcetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodlinks List  (optional)
 * cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodclientlibs List  (optional)
 * cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodimages List  (optional)
 * cqPeriodcontentsyncPeriodpathrewritertransformerPeriodattributePeriodpattern String  (optional)
 * cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodpattern String  (optional)
 * cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodreplace String  (optional)
 * returns comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo
 **/
exports.comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodlinks,cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodclientlibs,cqPeriodcontentsyncPeriodpathrewritertransformerPeriodmappingPeriodimages,cqPeriodcontentsyncPeriodpathrewritertransformerPeriodattributePeriodpattern,cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodpattern,cqPeriodcontentsyncPeriodpathrewritertransformerPeriodclientlibraryPeriodreplace) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.contentsync.pathrewritertransformer.mapping.links" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.contentsync.pathrewritertransformer.clientlibrary.pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.contentsync.pathrewritertransformer.clientlibrary.replace" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.contentsync.pathrewritertransformer.mapping.images" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.contentsync.pathrewritertransformer.attribute.pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.contentsync.pathrewritertransformer.mapping.clientlibs" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * authoringUIModeServicePerioddefault String  (optional)
 * returns comDayCqWcmCoreImplAuthoringUIModeServiceImplInfo
 **/
exports.comDayCqWcmCoreImplAuthoringUIModeServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,authoringUIModeServicePerioddefault) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "authoringUIModeService.default" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * wcmcommandservletPerioddeleteUnderscorewhitelist List  (optional)
 * returns comDayCqWcmCoreImplCommandsWCMCommandServletInfo
 **/
exports.comDayCqWcmCoreImplCommandsWCMCommandServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,wcmcommandservletPerioddeleteUnderscorewhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "wcmcommandservlet.delete_whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * dimPerioddefaultPeriodmode String  (optional)
 * dimPeriodappcachePeriodenabled Boolean  (optional)
 * returns comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo
 **/
exports.comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,dimPerioddefaultPeriodmode,dimPeriodappcachePeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "dim.appcache.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "dim.default.mode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * configured String  (optional)
 * returns comDayCqWcmCoreImplEventPageEventAuditListenerInfo
 **/
exports.comDayCqWcmCoreImplEventPageEventAuditListener = function(post,apply,_delete,action,Dollarlocation,propertylist,configured) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "configured" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * paths List  (optional)
 * returns comDayCqWcmCoreImplEventPagePostProcessorInfo
 **/
exports.comDayCqWcmCoreImplEventPagePostProcessor = function(post,apply,_delete,action,Dollarlocation,propertylist,paths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * paths List  (optional)
 * excludedPaths List  (optional)
 * returns comDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo
 **/
exports.comDayCqWcmCoreImplEventRepositoryChangeEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,paths,excludedPaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "excludedPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * paths String  (optional)
 * returns comDayCqWcmCoreImplEventTemplatePostProcessorInfo
 **/
exports.comDayCqWcmCoreImplEventTemplatePostProcessor = function(post,apply,_delete,action,Dollarlocation,propertylist,paths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "paths" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * langmgrPeriodlistPeriodpath String  (optional)
 * langmgrPeriodcountryPerioddefault List  (optional)
 * returns comDayCqWcmCoreImplLanguageManagerImplInfo
 **/
exports.comDayCqWcmCoreImplLanguageManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,langmgrPeriodlistPeriodpath,langmgrPeriodcountryPerioddefault) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "langmgr.list.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "langmgr.country.default" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * linkPeriodexpiredPeriodprefix String  (optional)
 * linkPeriodexpiredPeriodremove Boolean  (optional)
 * linkPeriodexpiredPeriodsuffix String  (optional)
 * linkPeriodinvalidPeriodprefix String  (optional)
 * linkPeriodinvalidPeriodremove Boolean  (optional)
 * linkPeriodinvalidPeriodsuffix String  (optional)
 * linkPeriodpredatedPeriodprefix String  (optional)
 * linkPeriodpredatedPeriodremove Boolean  (optional)
 * linkPeriodpredatedPeriodsuffix String  (optional)
 * linkPeriodwcmmodes List  (optional)
 * returns comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo
 **/
exports.comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,linkPeriodexpiredPeriodprefix,linkPeriodexpiredPeriodremove,linkPeriodexpiredPeriodsuffix,linkPeriodinvalidPeriodprefix,linkPeriodinvalidPeriodremove,linkPeriodinvalidPeriodsuffix,linkPeriodpredatedPeriodprefix,linkPeriodpredatedPeriodremove,linkPeriodpredatedPeriodsuffix,linkPeriodwcmmodes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "link.invalid.prefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "link.predated.prefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "link.expired.prefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "link.predated.remove" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "link.invalid.remove" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "link.invalid.suffix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "link.expired.remove" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "link.wcmmodes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "link.expired.suffix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "link.predated.suffix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * pagePeriodinfoPeriodproviderPeriodpropertyPeriodregexPerioddefault String  (optional)
 * pagePeriodinfoPeriodproviderPeriodpropertyPeriodname String  (optional)
 * returns comDayCqWcmCoreImplPagePageInfoAggregatorImplInfo
 **/
exports.comDayCqWcmCoreImplPagePageInfoAggregatorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,pagePeriodinfoPeriodproviderPeriodpropertyPeriodregexPerioddefault,pagePeriodinfoPeriodproviderPeriodpropertyPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "page.info.provider.property.regex.default" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "page.info.provider.property.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * illegalCharMapping String  (optional)
 * pageSubTreeActivationCheck Boolean  (optional)
 * returns comDayCqWcmCoreImplPagePageManagerFactoryImplInfo
 **/
exports.comDayCqWcmCoreImplPagePageManagerFactoryImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,illegalCharMapping,pageSubTreeActivationCheck) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "illegalCharMapping" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pageSubTreeActivationCheck" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * contentReferenceConfigPeriodresourceTypes List  (optional)
 * returns comDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo
 **/
exports.comDayCqWcmCoreImplReferencesContentContentReferenceConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,contentReferenceConfigPeriodresourceTypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "contentReferenceConfig.resourceTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * damPeriodshowexpired Boolean  (optional)
 * damPeriodshowhidden Boolean  (optional)
 * tagTitleSearch Boolean  (optional)
 * guessTotal String  (optional)
 * damPeriodexpiryProperty String  (optional)
 * returns comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo
 **/
exports.comDayCqWcmCoreImplServletsContentfinderAssetViewHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,damPeriodshowexpired,damPeriodshowhidden,tagTitleSearch,guessTotal,damPeriodexpiryProperty) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "dam.showhidden" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "tagTitleSearch" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "guessTotal" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dam.expiryProperty" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dam.showexpired" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * itemPeriodresourcePeriodtypes List  (optional)
 * returns comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo
 **/
exports.comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie = function(post,apply,_delete,action,Dollarlocation,propertylist,itemPeriodresourcePeriodtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "item.resource.types" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * guessTotal String  (optional)
 * tagTitleSearch Boolean  (optional)
 * returns comDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo
 **/
exports.comDayCqWcmCoreImplServletsContentfinderPageViewHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,guessTotal,tagTitleSearch) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagTitleSearch" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "guessTotal" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * scope List  (optional)
 * returns comDayCqWcmCoreImplServletsFindReplaceServletInfo
 **/
exports.comDayCqWcmCoreImplServletsFindReplaceServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,scope) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scope" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * referencesearchservletPeriodmaxReferencesPerPage Integer  (optional)
 * referencesearchservletPeriodmaxPages Integer  (optional)
 * returns comDayCqWcmCoreImplServletsReferenceSearchServletInfo
 **/
exports.comDayCqWcmCoreImplServletsReferenceSearchServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,referencesearchservletPeriodmaxReferencesPerPage,referencesearchservletPeriodmaxPages) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "referencesearchservlet.maxPages" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "referencesearchservlet.maxReferencesPerPage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * workspace String  (optional)
 * dimensions List  (optional)
 * returns comDayCqWcmCoreImplServletsThumbnailServletInfo
 **/
exports.comDayCqWcmCoreImplServletsThumbnailServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,workspace,dimensions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "workspace" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dimensions" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * nonValidChars String  (optional)
 * returns comDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo
 **/
exports.comDayCqWcmCoreImplUtilsDefaultPageNameValidator = function(post,apply,_delete,action,Dollarlocation,propertylist,nonValidChars) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "nonValidChars" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * defaultPeriodexternalizerPerioddomain String  (optional)
 * returns comDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo
 **/
exports.comDayCqWcmCoreImplVariantsPageVariantsProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,defaultPeriodexternalizerPerioddomain) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "default.externalizer.domain" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * versionmanagerPeriodcreateVersionOnActivation Boolean  (optional)
 * versionmanagerPeriodpurgingEnabled Boolean  (optional)
 * versionmanagerPeriodpurgePaths List  (optional)
 * versionmanagerPeriodivPaths List  (optional)
 * versionmanagerPeriodmaxAgeDays Integer  (optional)
 * versionmanagerPeriodmaxNumberVersions Integer  (optional)
 * versionmanagerPeriodminNumberVersions Integer  (optional)
 * returns comDayCqWcmCoreImplVersionManagerImplInfo
 **/
exports.comDayCqWcmCoreImplVersionManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,versionmanagerPeriodcreateVersionOnActivation,versionmanagerPeriodpurgingEnabled,versionmanagerPeriodpurgePaths,versionmanagerPeriodivPaths,versionmanagerPeriodmaxAgeDays,versionmanagerPeriodmaxNumberVersions,versionmanagerPeriodminNumberVersions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "versionmanager.createVersionOnActivation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "versionmanager.minNumberVersions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "versionmanager.maxAgeDays" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "versionmanager.purgingEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "versionmanager.ivPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "versionmanager.maxNumberVersions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "versionmanager.purgePaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * versionpurgePeriodpaths List  (optional)
 * versionpurgePeriodrecursive Boolean  (optional)
 * versionpurgePeriodmaxVersions Integer  (optional)
 * versionpurgePeriodminVersions Integer  (optional)
 * versionpurgePeriodmaxAgeDays Integer  (optional)
 * returns comDayCqWcmCoreImplVersionPurgeTaskInfo
 **/
exports.comDayCqWcmCoreImplVersionPurgeTask = function(post,apply,_delete,action,Dollarlocation,propertylist,versionpurgePeriodpaths,versionpurgePeriodrecursive,versionpurgePeriodmaxVersions,versionpurgePeriodminVersions,versionpurgePeriodmaxAgeDays) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "versionpurge.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "versionpurge.minVersions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "versionpurge.maxAgeDays" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "versionpurge.maxVersions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "versionpurge.recursive" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * wcmdbgfilterPeriodenabled Boolean  (optional)
 * wcmdbgfilterPeriodjspDebug Boolean  (optional)
 * returns comDayCqWcmCoreImplWCMDebugFilterInfo
 **/
exports.comDayCqWcmCoreImplWCMDebugFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,wcmdbgfilterPeriodenabled,wcmdbgfilterPeriodjspDebug) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "wcmdbgfilter.jspDebug" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "wcmdbgfilter.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * wcmdevmodefilterPeriodenabled Boolean  (optional)
 * returns comDayCqWcmCoreImplWCMDeveloperModeFilterInfo
 **/
exports.comDayCqWcmCoreImplWCMDeveloperModeFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,wcmdevmodefilterPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "wcmdevmodefilter.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * filterPeriodorder String  (optional)
 * filterPeriodscope String  (optional)
 * returns comDayCqWcmCoreImplWarpTimeWarpFilterInfo
 **/
exports.comDayCqWcmCoreImplWarpTimeWarpFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,filterPeriodorder,filterPeriodscope) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "filter.order" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "filter.scope" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mvtstatisticsPeriodtrackingurl String  (optional)
 * returns comDayCqWcmCoreMvtMVTStatisticsImplInfo
 **/
exports.comDayCqWcmCoreMvtMVTStatisticsImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,mvtstatisticsPeriodtrackingurl) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mvtstatistics.trackingurl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * pageviewstatisticsPeriodtrackingurl String  (optional)
 * pageviewstatisticsPeriodtrackingscriptPeriodenabled String  (optional)
 * returns comDayCqWcmCoreStatsPageViewStatisticsImplInfo
 **/
exports.comDayCqWcmCoreStatsPageViewStatisticsImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,pageviewstatisticsPeriodtrackingurl,pageviewstatisticsPeriodtrackingscriptPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "pageviewstatistics.trackingscript.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pageviewstatistics.trackingurl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * wcmfilterPeriodmode String  (optional)
 * returns comDayCqWcmCoreWCMRequestFilterInfo
 **/
exports.comDayCqWcmCoreWCMRequestFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,wcmfilterPeriodmode) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "wcmfilter.mode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * extractPeriodfilter List  (optional)
 * returns comDayCqWcmDesignimporterDesignPackageImporterInfo
 **/
exports.comDayCqWcmDesignimporterDesignPackageImporter = function(post,apply,_delete,action,Dollarlocation,propertylist,extractPeriodfilter) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "extract.filter" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * filepattern String  (optional)
 * buildPeriodpagePeriodnodes Boolean  (optional)
 * buildPeriodclientPeriodlibs Boolean  (optional)
 * buildPeriodcanvasPeriodcomponent Boolean  (optional)
 * returns comDayCqWcmDesignimporterImplCanvasBuilderImplInfo
 **/
exports.comDayCqWcmDesignimporterImplCanvasBuilderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,filepattern,buildPeriodpagePeriodnodes,buildPeriodclientPeriodlibs,buildPeriodcanvasPeriodcomponent) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "filepattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "build.page.nodes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "build.client.libs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "build.canvas.component" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * minThreadPoolSize Integer  (optional)
 * maxThreadPoolSize Integer  (optional)
 * returns comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo
 **/
exports.comDayCqWcmDesignimporterImplCanvasPageDeleteHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,minThreadPoolSize,maxThreadPoolSize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "minThreadPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxThreadPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * searchPeriodpattern String  (optional)
 * replacePeriodpattern String  (optional)
 * returns comDayCqWcmDesignimporterImplEntryPreprocessorImplInfo
 **/
exports.comDayCqWcmDesignimporterImplEntryPreprocessorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,searchPeriodpattern,replacePeriodpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "replace.pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "search.pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * filepattern String  (optional)
 * devicePeriodgroups List  (optional)
 * buildPeriodpagePeriodnodes Boolean  (optional)
 * buildPeriodclientPeriodlibs Boolean  (optional)
 * buildPeriodcanvasPeriodcomponent Boolean  (optional)
 * returns comDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo
 **/
exports.comDayCqWcmDesignimporterImplMobileCanvasBuilderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,filepattern,devicePeriodgroups,buildPeriodpagePeriodnodes,buildPeriodclientPeriodlibs,buildPeriodcanvasPeriodcomponent) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "device.groups" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "filepattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "build.page.nodes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "build.client.libs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "build.canvas.component" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * componentPeriodresourceType String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern,componentPeriodresourceType) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "component.resourceType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * componentPeriodresourceType String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern,componentPeriodresourceType) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "component.resourceType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * componentPeriodresourceType String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern,componentPeriodresourceType) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "component.resourceType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * componentPeriodresourceType String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern,componentPeriodresourceType) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "component.resourceType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * tagpattern String  (optional)
 * returns comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo
 **/
exports.comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,tagpattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tagpattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodname String  (optional)
 * slingPeriodservletPeriodresourceTypes String  (optional)
 * slingPeriodservletPeriodselectors String  (optional)
 * slingPeriodservletPeriodmethods List  (optional)
 * formsPeriodformchooserservletPeriodadvansesearchPeriodrequire Boolean  (optional)
 * returns comDayCqWcmFoundationFormsImplFormChooserServletInfo
 **/
exports.comDayCqWcmFoundationFormsImplFormChooserServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodname,slingPeriodservletPeriodresourceTypes,slingPeriodservletPeriodselectors,slingPeriodservletPeriodmethods,formsPeriodformchooserservletPeriodadvansesearchPeriodrequire) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "service.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.selectors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.resourceTypes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "forms.formchooserservlet.advansesearch.require" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * formsPeriodformparagraphpostprocessorPeriodenabled Boolean  (optional)
 * formsPeriodformparagraphpostprocessorPeriodformresourcetypes List  (optional)
 * returns comDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo
 **/
exports.comDayCqWcmFoundationFormsImplFormParagraphPostProcessor = function(post,apply,_delete,action,Dollarlocation,propertylist,formsPeriodformparagraphpostprocessorPeriodenabled,formsPeriodformparagraphpostprocessorPeriodformresourcetypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "forms.formparagraphpostprocessor.formresourcetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "forms.formparagraphpostprocessor.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * namePeriodwhitelist String  (optional)
 * allowPeriodexpressions Boolean  (optional)
 * returns comDayCqWcmFoundationFormsImplFormsHandlingServletInfo
 **/
exports.comDayCqWcmFoundationFormsImplFormsHandlingServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,namePeriodwhitelist,allowPeriodexpressions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "name.whitelist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "allow.expressions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodresourceTypes String  (optional)
 * slingPeriodservletPeriodselectors String  (optional)
 * resourcePeriodwhitelist List  (optional)
 * resourcePeriodblacklist String  (optional)
 * returns comDayCqWcmFoundationFormsImplMailServletInfo
 **/
exports.comDayCqWcmFoundationFormsImplMailServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodresourceTypes,slingPeriodservletPeriodselectors,resourcePeriodwhitelist,resourcePeriodblacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "resource.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resource.blacklist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.selectors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.resourceTypes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * adaptPeriodsupportedPeriodwidths List  (optional)
 * returns comDayCqWcmFoundationImplAdaptiveImageComponentServletInfo
 **/
exports.comDayCqWcmFoundationImplAdaptiveImageComponentServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,adaptPeriodsupportedPeriodwidths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "adapt.supported.widths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * authPeriodhttpPeriodnologin Boolean  (optional)
 * authPeriodhttpPeriodrealm String  (optional)
 * authPerioddefaultPeriodloginpage String  (optional)
 * authPeriodcredPeriodform List  (optional)
 * authPeriodcredPeriodutf8 List  (optional)
 * returns comDayCqWcmFoundationImplHTTPAuthHandlerInfo
 **/
exports.comDayCqWcmFoundationImplHTTPAuthHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,path,authPeriodhttpPeriodnologin,authPeriodhttpPeriodrealm,authPerioddefaultPeriodloginpage,authPeriodcredPeriodform,authPeriodcredPeriodutf8) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "auth.cred.utf8" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.http.nologin" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "auth.default.loginpage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.cred.form" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "auth.http.realm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodauthPeriodrequirements String  (optional)
 * returns comDayCqWcmFoundationImplPageImpressionsTrackerInfo
 **/
exports.comDayCqWcmFoundationImplPageImpressionsTracker = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodauthPeriodrequirements) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.auth.requirements" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * excludedPeriodresourcePeriodtypes List  (optional)
 * returns comDayCqWcmFoundationImplPageRedirectServletInfo
 **/
exports.comDayCqWcmFoundationImplPageRedirectServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,excludedPeriodresourcePeriodtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "excluded.resource.types" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * defaultPeriodattachmentPeriodtypePeriodblacklist List  (optional)
 * baselinePeriodattachmentPeriodtypePeriodblacklist List  (optional)
 * returns comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo
 **/
exports.comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist = function(post,apply,_delete,action,Dollarlocation,propertylist,defaultPeriodattachmentPeriodtypePeriodblacklist,baselinePeriodattachmentPeriodtypePeriodblacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "default.attachment.type.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "baseline.attachment.type.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * parameterPeriodwhitelist List  (optional)
 * parameterPeriodwhitelistPeriodprefixes List  (optional)
 * binaryPeriodparameterPeriodwhitelist List  (optional)
 * modifierPeriodwhitelist List  (optional)
 * operationPeriodwhitelist List  (optional)
 * operationPeriodwhitelistPeriodprefixes List  (optional)
 * typehintPeriodwhitelist List  (optional)
 * resourcetypePeriodwhitelist List  (optional)
 * returns comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo
 **/
exports.comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,parameterPeriodwhitelist,parameterPeriodwhitelistPeriodprefixes,binaryPeriodparameterPeriodwhitelist,modifierPeriodwhitelist,operationPeriodwhitelist,operationPeriodwhitelistPeriodprefixes,typehintPeriodwhitelist,resourcetypePeriodwhitelist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "parameter.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resourcetype.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "modifier.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "operation.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "operation.whitelist.prefixes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "typehint.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "binary.parameter.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "parameter.whitelist.prefixes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * devicePeriodinfoPeriodtransformerPeriodenabled Boolean  (optional)
 * devicePeriodinfoPeriodtransformerPeriodcssPeriodstyle String  (optional)
 * returns comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo
 **/
exports.comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,devicePeriodinfoPeriodtransformerPeriodenabled,devicePeriodinfoPeriodtransformerPeriodcssPeriodstyle) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "device.info.transformer.css.style" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "device.info.transformer.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * redirectPeriodenabled Boolean  (optional)
 * redirectPeriodstatsPeriodenabled Boolean  (optional)
 * redirectPeriodextensions List  (optional)
 * redirectPeriodpaths List  (optional)
 * returns comDayCqWcmMobileCoreImplRedirectRedirectFilterInfo
 **/
exports.comDayCqWcmMobileCoreImplRedirectRedirectFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,redirectPeriodenabled,redirectPeriodstatsPeriodenabled,redirectPeriodextensions,redirectPeriodpaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "redirect.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "redirect.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "redirect.stats.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "redirect.extensions" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops List  (optional)
 * contentcopyactionPeriodorderPeriodstyle String  (optional)
 * returns comDayCqWcmMsmImplActionsContentCopyActionFactoryInfo
 **/
exports.comDayCqWcmMsmImplActionsContentCopyActionFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops,contentcopyactionPeriodorderPeriodstyle) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.msm.action.excludedparagraphitems" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludedprops" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludednodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "contentcopyaction.order.style" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops List  (optional)
 * returns comDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo
 **/
exports.comDayCqWcmMsmImplActionsContentDeleteActionFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.msm.action.excludedparagraphitems" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludedprops" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludednodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodignoredMixin List  (optional)
 * returns comDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo
 **/
exports.comDayCqWcmMsmImplActionsContentUpdateActionFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops,cqPeriodwcmPeriodmsmPeriodactionPeriodignoredMixin) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.msm.action.excludedparagraphitems" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludedprops" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludednodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.ignoredMixin" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops List  (optional)
 * returns comDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo
 **/
exports.comDayCqWcmMsmImplActionsOrderChildrenActionFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.msm.action.excludedparagraphitems" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludedprops" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludednodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops List  (optional)
 * cqPeriodwcmPeriodmsmPeriodimplPeriodactionsPeriodpagemovePeriodpropUnderscorereferenceUpdate Boolean  (optional)
 * returns comDayCqWcmMsmImplActionsPageMoveActionFactoryInfo
 **/
exports.comDayCqWcmMsmImplActionsPageMoveActionFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops,cqPeriodwcmPeriodmsmPeriodimplPeriodactionsPeriodpagemovePeriodpropUnderscorereferenceUpdate) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.msm.impl.actions.pagemove.prop_referenceUpdate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.wcm.msm.action.excludedparagraphitems" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludedprops" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludednodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops List  (optional)
 * cqPeriodwcmPeriodmsmPeriodimplPeriodactionPeriodreferencesupdatePeriodpropUnderscoreupdateNested Boolean  (optional)
 * returns comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo
 **/
exports.comDayCqWcmMsmImplActionsReferencesUpdateActionFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops,cqPeriodwcmPeriodmsmPeriodimplPeriodactionPeriodreferencesupdatePeriodpropUnderscoreupdateNested) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.msm.impl.action.referencesupdate.prop_updateNested" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.wcm.msm.action.excludedparagraphitems" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludedprops" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludednodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems List  (optional)
 * cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops List  (optional)
 * returns comDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo
 **/
exports.comDayCqWcmMsmImplActionsVersionCopyActionFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludednodetypes,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedparagraphitems,cqPeriodwcmPeriodmsmPeriodactionPeriodexcludedprops) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.msm.action.excludedparagraphitems" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludedprops" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.msm.action.excludednodetypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * liverelationshipmgrPeriodrelationsconfigPerioddefault String  (optional)
 * returns comDayCqWcmMsmImplLiveRelationshipManagerImplInfo
 **/
exports.comDayCqWcmMsmImplLiveRelationshipManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,liverelationshipmgrPeriodrelationsconfigPerioddefault) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "liverelationshipmgr.relationsconfig.default" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodfilter String  (optional)
 * rolloutmgrPeriodexcludedpropsPerioddefault List  (optional)
 * rolloutmgrPeriodexcludedparagraphpropsPerioddefault List  (optional)
 * rolloutmgrPeriodexcludednodetypesPerioddefault List  (optional)
 * rolloutmgrPeriodthreadpoolPeriodmaxsize Integer  (optional)
 * rolloutmgrPeriodthreadpoolPeriodmaxshutdowntime Integer  (optional)
 * rolloutmgrPeriodthreadpoolPeriodpriority String  (optional)
 * rolloutmgrPeriodcommitPeriodsize Integer  (optional)
 * rolloutmgrPeriodconflicthandlingPeriodenabled Boolean  (optional)
 * returns comDayCqWcmMsmImplRolloutManagerImplInfo
 **/
exports.comDayCqWcmMsmImplRolloutManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodfilter,rolloutmgrPeriodexcludedpropsPerioddefault,rolloutmgrPeriodexcludedparagraphpropsPerioddefault,rolloutmgrPeriodexcludednodetypesPerioddefault,rolloutmgrPeriodthreadpoolPeriodmaxsize,rolloutmgrPeriodthreadpoolPeriodmaxshutdowntime,rolloutmgrPeriodthreadpoolPeriodpriority,rolloutmgrPeriodcommitPeriodsize,rolloutmgrPeriodconflicthandlingPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "rolloutmgr.excludedprops.default" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "rolloutmgr.excludednodetypes.default" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "rolloutmgr.conflicthandling.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "rolloutmgr.threadpool.maxshutdowntime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "rolloutmgr.commit.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "rolloutmgr.threadpool.priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "rolloutmgr.excludedparagraphprops.default" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "rolloutmgr.threadpool.maxsize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * auditlogservletPerioddefaultPeriodeventsPeriodcount Integer  (optional)
 * auditlogservletPerioddefaultPeriodpath String  (optional)
 * returns comDayCqWcmMsmImplServletsAuditLogServletInfo
 **/
exports.comDayCqWcmMsmImplServletsAuditLogServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,auditlogservletPerioddefaultPeriodeventsPeriodcount,auditlogservletPerioddefaultPeriodpath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "auditlogservlet.default.events.count" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "auditlogservlet.default.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * emailPeriodfrom String  (optional)
 * returns comDayCqWcmNotificationEmailImplEmailChannelInfo
 **/
exports.comDayCqWcmNotificationEmailImplEmailChannel = function(post,apply,_delete,action,Dollarlocation,propertylist,emailPeriodfrom) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "email.from" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodtopics List  (optional)
 * returns comDayCqWcmNotificationImplNotificationManagerImplInfo
 **/
exports.comDayCqWcmNotificationImplNotificationManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodtopics) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "event.topics" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * comPerioddayPeriodcqPeriodwcmPeriodscriptingPeriodbvpPeriodscriptPeriodengines List  (optional)
 * returns comDayCqWcmScriptingImplBVPManagerInfo
 **/
exports.comDayCqWcmScriptingImplBVPManager = function(post,apply,_delete,action,Dollarlocation,propertylist,comPerioddayPeriodcqPeriodwcmPeriodscriptingPeriodbvpPeriodscriptPeriodengines) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "com.day.cq.wcm.scripting.bvp.script.engines" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cqPeriodwcmPeriodundoPeriodenabled Boolean  (optional)
 * cqPeriodwcmPeriodundoPeriodpath String  (optional)
 * cqPeriodwcmPeriodundoPeriodvalidity Integer  (optional)
 * cqPeriodwcmPeriodundoPeriodsteps Integer  (optional)
 * cqPeriodwcmPeriodundoPeriodpersistence String  (optional)
 * cqPeriodwcmPeriodundoPeriodpersistencePeriodmode Boolean  (optional)
 * cqPeriodwcmPeriodundoPeriodmarkermode String  (optional)
 * cqPeriodwcmPeriodundoPeriodwhitelist List  (optional)
 * cqPeriodwcmPeriodundoPeriodblacklist List  (optional)
 * returns comDayCqWcmUndoUndoConfigInfo
 **/
exports.comDayCqWcmUndoUndoConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,cqPeriodwcmPeriodundoPeriodenabled,cqPeriodwcmPeriodundoPeriodpath,cqPeriodwcmPeriodundoPeriodvalidity,cqPeriodwcmPeriodundoPeriodsteps,cqPeriodwcmPeriodundoPeriodpersistence,cqPeriodwcmPeriodundoPeriodpersistencePeriodmode,cqPeriodwcmPeriodundoPeriodmarkermode,cqPeriodwcmPeriodundoPeriodwhitelist,cqPeriodwcmPeriodundoPeriodblacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.undo.steps" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.wcm.undo.persistence.mode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.wcm.undo.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.wcm.undo.markermode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.wcm.undo.persistence" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cq.wcm.undo.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "cq.wcm.undo.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "cq.wcm.undo.validity" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.wcm.undo.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * flush agents List  (optional)
 * returns comDayCqWcmWebservicesupportImplReplicationEventListenerInfo
 **/
exports.comDayCqWcmWebservicesupportImplReplicationEventListener = function(post,apply,_delete,action,Dollarlocation,propertylist,flush agents) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "Flush agents" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * eventPeriodfilter String  (optional)
 * minThreadPoolSize Integer  (optional)
 * maxThreadPoolSize Integer  (optional)
 * cqPeriodwcmPeriodworkflowPeriodterminatePeriodonPeriodactivate Boolean  (optional)
 * cqPeriodwcmPeriodworklfowPeriodterminatePeriodexclusionPeriodlist List  (optional)
 * returns comDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo
 **/
exports.comDayCqWcmWorkflowImplWcmWorkflowServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,eventPeriodfilter,minThreadPoolSize,maxThreadPoolSize,cqPeriodwcmPeriodworkflowPeriodterminatePeriodonPeriodactivate,cqPeriodwcmPeriodworklfowPeriodterminatePeriodexclusionPeriodlist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cq.wcm.worklfow.terminate.exclusion.list" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "minThreadPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxThreadPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cq.wcm.workflow.terminate.on.activate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "event.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * workflowpackageinfoproviderPeriodfilter List  (optional)
 * workflowpackageinfoproviderPeriodfilterPeriodrootpath String  (optional)
 * returns comDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo
 **/
exports.comDayCqWcmWorkflowImplWorkflowPackageInfoProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,workflowpackageinfoproviderPeriodfilter,workflowpackageinfoproviderPeriodfilterPeriodrootpath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "workflowpackageinfoprovider.filter.rootpath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "workflowpackageinfoprovider.filter" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * htmllibmanagerPeriodclientmanager String  (optional)
 * htmllibmanagerPerioddebug Boolean  (optional)
 * htmllibmanagerPerioddebugPeriodconsole Boolean  (optional)
 * htmllibmanagerPerioddebugPeriodinitPeriodjs String  (optional)
 * htmllibmanagerPerioddefaultthemename String  (optional)
 * htmllibmanagerPerioddefaultuserthemename String  (optional)
 * htmllibmanagerPeriodfirebuglitePeriodpath String  (optional)
 * htmllibmanagerPeriodforceCQUrlInfo Boolean  (optional)
 * htmllibmanagerPeriodgzip Boolean  (optional)
 * htmllibmanagerPeriodmaxage Integer  (optional)
 * htmllibmanagerPeriodmaxDataUriSize Integer  (optional)
 * htmllibmanagerPeriodminify Boolean  (optional)
 * htmllibmanagerPeriodpathPeriodlist List  (optional)
 * htmllibmanagerPeriodtiming Boolean  (optional)
 * returns comDayCqWidgetImplHtmlLibraryManagerImplInfo
 **/
exports.comDayCqWidgetImplHtmlLibraryManagerImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,htmllibmanagerPeriodclientmanager,htmllibmanagerPerioddebug,htmllibmanagerPerioddebugPeriodconsole,htmllibmanagerPerioddebugPeriodinitPeriodjs,htmllibmanagerPerioddefaultthemename,htmllibmanagerPerioddefaultuserthemename,htmllibmanagerPeriodfirebuglitePeriodpath,htmllibmanagerPeriodforceCQUrlInfo,htmllibmanagerPeriodgzip,htmllibmanagerPeriodmaxage,htmllibmanagerPeriodmaxDataUriSize,htmllibmanagerPeriodminify,htmllibmanagerPeriodpathPeriodlist,htmllibmanagerPeriodtiming) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "htmllibmanager.defaultuserthemename" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.gzip" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.clientmanager" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.debug" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.maxage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "htmllibmanager.minify" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.defaultthemename" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.path.list" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "htmllibmanager.firebuglite.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.debug.init.js" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "htmllibmanager.maxDataUriSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "htmllibmanager.debug.console" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.forceCQUrlInfo" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "htmllibmanager.timing" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * extendablePeriodwidgets List  (optional)
 * widgetextensionproviderPerioddebug Boolean  (optional)
 * returns comDayCqWidgetImplWidgetExtensionProviderImplInfo
 **/
exports.comDayCqWidgetImplWidgetExtensionProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,extendablePeriodwidgets,widgetextensionproviderPerioddebug) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "extendable.widgets" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "widgetextensionprovider.debug" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * fromPeriodaddress String  (optional)
 * hostPeriodprefix String  (optional)
 * notifyPeriodonabort Boolean  (optional)
 * notifyPeriodoncomplete Boolean  (optional)
 * notifyPeriodoncontainercomplete Boolean  (optional)
 * notifyPerioduseronly Boolean  (optional)
 * returns comDayCqWorkflowImplEmailEMailNotificationServiceInfo
 **/
exports.comDayCqWorkflowImplEmailEMailNotificationService = function(post,apply,_delete,action,Dollarlocation,propertylist,fromPeriodaddress,hostPeriodprefix,notifyPeriodonabort,notifyPeriodoncomplete,notifyPeriodoncontainercomplete,notifyPerioduseronly) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "host.prefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "notify.onabort" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "notify.oncomplete" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "notify.useronly" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "from.address" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "notify.oncontainercomplete" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * notifyPeriodonupdate Boolean  (optional)
 * notifyPeriodoncomplete Boolean  (optional)
 * returns comDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo
 **/
exports.comDayCqWorkflowImplEmailTaskEMailNotificationService = function(post,apply,_delete,action,Dollarlocation,propertylist,notifyPeriodonupdate,notifyPeriodoncomplete) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "notify.onupdate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "notify.oncomplete" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * tokenPeriodrequiredPeriodattr String  (optional)
 * tokenPeriodalternatePeriodurl String  (optional)
 * tokenPeriodencapsulated Boolean  (optional)
 * skipPeriodtokenPeriodrefresh List  (optional)
 * returns comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo
 **/
exports.comDayCrxSecurityTokenImplImplTokenAuthenticationHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,path,tokenPeriodrequiredPeriodattr,tokenPeriodalternatePeriodurl,tokenPeriodencapsulated,skipPeriodtokenPeriodrefresh) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "token.encapsulated" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "token.alternate.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "token.required.attr" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "skip.token.refresh" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enablePeriodtokenPeriodcleanupPeriodtask Boolean  (optional)
 * schedulerPeriodexpression String  (optional)
 * batchPeriodsize Integer  (optional)
 * returns comDayCrxSecurityTokenImplTokenCleanupTaskInfo
 **/
exports.comDayCrxSecurityTokenImplTokenCleanupTask = function(post,apply,_delete,action,Dollarlocation,propertylist,enablePeriodtokenPeriodcleanupPeriodtask,schedulerPeriodexpression,batchPeriodsize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "batch.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enable.token.cleanup.task" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * supportedLocales List  (optional)
 * localizable Properties List  (optional)
 * returns guideLocalizationServiceInfo
 **/
exports.guideLocalizationService = function(post,apply,_delete,action,Dollarlocation,propertylist,supportedLocales,localizable Properties) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "supportedLocales" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "Localizable Properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * priority Integer  (optional)
 * returns MessagingUserComponentFactoryInfo
 **/
exports.messagingUserComponentFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * attributeChangeNotificationEnabled Boolean  (optional)
 * returns orgApacheAriesJmxFrameworkStateConfigInfo
 **/
exports.orgApacheAriesJmxFrameworkStateConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,attributeChangeNotificationEnabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "attributeChangeNotificationEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodfelixPeriodeventadminPeriodThreadPoolSize Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodeventadminPeriodAsyncToSyncThreadRatio BigDecimal  (optional)
 * orgPeriodapachePeriodfelixPeriodeventadminPeriodTimeout Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodeventadminPeriodRequireTopic Boolean  (optional)
 * orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTimeout List  (optional)
 * orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTopic List  (optional)
 * returns orgApacheFelixEventadminImplEventAdminInfo
 **/
exports.orgApacheFelixEventadminImplEventAdmin = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodfelixPeriodeventadminPeriodThreadPoolSize,orgPeriodapachePeriodfelixPeriodeventadminPeriodAsyncToSyncThreadRatio,orgPeriodapachePeriodfelixPeriodeventadminPeriodTimeout,orgPeriodapachePeriodfelixPeriodeventadminPeriodRequireTopic,orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTimeout,orgPeriodapachePeriodfelixPeriodeventadminPeriodIgnoreTopic) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.felix.eventadmin.IgnoreTopic" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.eventadmin.IgnoreTimeout" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.eventadmin.AsyncToSyncThreadRatio" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : 6.02745618307040320615897144307382404804229736328125
    },
    "org.apache.felix.eventadmin.Timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.eventadmin.RequireTopic" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.eventadmin.ThreadPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodhost String  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodenable Boolean  (optional)
 * orgPeriodosgiPeriodservicePeriodhttpPeriodport Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodtimeout Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodenable Boolean  (optional)
 * orgPeriodosgiPeriodservicePeriodhttpPeriodportPeriodsecure Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystore String  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodpassword String  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodkeyPeriodpassword String  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststore String  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststorePeriodpassword String  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodclientcertificate String  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodcontextUnderscorepath String  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodmbeans Boolean  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodtimeout Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodthreadpoolPeriodmax Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodacceptors Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodselectors Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodheaderBufferSize Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodrequestBufferSize Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodresponseBufferSize Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodmaxFormSize Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodpathUnderscoreexclusions List  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodexcluded List  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodincluded List  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodsendServerHeader Boolean  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodincluded List  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodexcluded List  (optional)
 * orgPeriodapachePeriodfelixPeriodproxyPeriodloadPeriodbalancerPeriodconnectionPeriodenable Boolean  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodrenegotiateAllowed Boolean  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodhttpOnly Boolean  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodsecure Boolean  (optional)
 * orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionIdPathParameterName String  (optional)
 * orgPeriodeclipsePeriodjettyPeriodservletPeriodCheckingRemoteSessionIdEncoding Boolean  (optional)
 * orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionCookie String  (optional)
 * orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionDomain String  (optional)
 * orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionPath String  (optional)
 * orgPeriodeclipsePeriodjettyPeriodservletPeriodMaxAge Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodname String  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgziphandlerPeriodenable Boolean  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodminGzipSize Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodcompressionLevel Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodinflateBufferSize Integer  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodsyncFlush Boolean  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedUserAgents List  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMethods List  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMethods List  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedPaths List  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedPaths List  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMimeTypes List  (optional)
 * orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMimeTypes List  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodinvalidate Boolean  (optional)
 * orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPerioduniqueid Boolean  (optional)
 * returns orgApacheFelixHttpInfo
 **/
exports.orgApacheFelixHttp = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodfelixPeriodhttpPeriodhost,orgPeriodapachePeriodfelixPeriodhttpPeriodenable,orgPeriodosgiPeriodservicePeriodhttpPeriodport,orgPeriodapachePeriodfelixPeriodhttpPeriodtimeout,orgPeriodapachePeriodfelixPeriodhttpsPeriodenable,orgPeriodosgiPeriodservicePeriodhttpPeriodportPeriodsecure,orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystore,orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodpassword,orgPeriodapachePeriodfelixPeriodhttpsPeriodkeystorePeriodkeyPeriodpassword,orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststore,orgPeriodapachePeriodfelixPeriodhttpsPeriodtruststorePeriodpassword,orgPeriodapachePeriodfelixPeriodhttpsPeriodclientcertificate,orgPeriodapachePeriodfelixPeriodhttpPeriodcontextUnderscorepath,orgPeriodapachePeriodfelixPeriodhttpPeriodmbeans,orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodtimeout,orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodthreadpoolPeriodmax,orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodacceptors,orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodselectors,orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodheaderBufferSize,orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodrequestBufferSize,orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodresponseBufferSize,orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodmaxFormSize,orgPeriodapachePeriodfelixPeriodhttpPeriodpathUnderscoreexclusions,orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodexcluded,orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodciphersuitesPeriodincluded,orgPeriodapachePeriodfelixPeriodhttpPeriodjettyPeriodsendServerHeader,orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodincluded,orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodprotocolsPeriodexcluded,orgPeriodapachePeriodfelixPeriodproxyPeriodloadPeriodbalancerPeriodconnectionPeriodenable,orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodrenegotiateAllowed,orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodhttpOnly,orgPeriodapachePeriodfelixPeriodhttpsPeriodjettyPeriodsessionPeriodcookiePeriodsecure,orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionIdPathParameterName,orgPeriodeclipsePeriodjettyPeriodservletPeriodCheckingRemoteSessionIdEncoding,orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionCookie,orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionDomain,orgPeriodeclipsePeriodjettyPeriodservletPeriodSessionPath,orgPeriodeclipsePeriodjettyPeriodservletPeriodMaxAge,orgPeriodapachePeriodfelixPeriodhttpPeriodname,orgPeriodapachePeriodfelixPeriodjettyPeriodgziphandlerPeriodenable,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodminGzipSize,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodcompressionLevel,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodinflateBufferSize,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodsyncFlush,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedUserAgents,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMethods,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMethods,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedPaths,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedPaths,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodincludedMimeTypes,orgPeriodapachePeriodfelixPeriodjettyPeriodgzipPeriodexcludedMimeTypes,orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPeriodinvalidate,orgPeriodapachePeriodfelixPeriodhttpPeriodsessionPerioduniqueid) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.felix.http.jetty.sendServerHeader" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.jetty.gzip.includedPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.http.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.osgi.service.http.port" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.http.jetty.selectors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.http.jetty.maxFormSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.jetty.gzip.minGzipSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.jetty.gzip.compressionLevel" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.http.host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.http.session.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.jetty.gziphandler.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.https.truststore.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.eclipse.jetty.servlet.SessionIdPathParameterName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.http.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.eclipse.jetty.servlet.SessionCookie" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.jetty.gzip.inflateBufferSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.jetty.gzip.includedMimeTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.jetty.gzip.includedMethods" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.jetty.gzip.excludedMimeTypes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.http.jetty.headerBufferSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.https.jetty.ciphersuites.excluded" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.https.truststore" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.jetty.gzip.excludedMethods" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.https.keystore.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.http.mbeans" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.jetty.gzip.excludedPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.http.context_path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.http.session.invalidate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.https.jetty.ciphersuites.included" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.http.session.uniqueid" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.eclipse.jetty.servlet.SessionDomain" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.http.jetty.responseBufferSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.http.path_exclusions" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.eclipse.jetty.servlet.MaxAge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.http.jetty.threadpool.max" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.osgi.service.http.port.secure" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.jetty.gzip.excludedUserAgents" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.felix.http.jetty.requestBufferSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.https.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.https.jetty.session.cookie.httpOnly" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.https.keystore.key.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.http.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.jetty.gzip.syncFlush" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.https.jetty.protocols.excluded" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.eclipse.jetty.servlet.SessionPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.https.keystore" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.felix.http.jetty.acceptors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.felix.https.jetty.renegotiateAllowed" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.https.jetty.session.cookie.secure" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.https.clientcertificate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "org.apache.felix.proxy.load.balancer.connection.enable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.felix.https.jetty.protocols.included" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * sslForwardPeriodheader String  (optional)
 * sslForwardPeriodvalue String  (optional)
 * sslForwardCertPeriodheader String  (optional)
 * rewritePeriodabsolutePeriodurls Boolean  (optional)
 * returns orgApacheFelixHttpSslfilterSslFilterInfo
 **/
exports.orgApacheFelixHttpSslfilterSslFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,sslForwardPeriodheader,sslForwardPeriodvalue,sslForwardCertPeriodheader,rewritePeriodabsolutePeriodurls) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ssl-forward.value" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "ssl-forward-cert.header" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "ssl-forward.header" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "rewrite.absolute.urls" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jaasPeriodcontrolFlag String  (optional)
 * jaasPeriodranking Integer  (optional)
 * jaasPeriodrealmName String  (optional)
 * jaasPeriodclassname String  (optional)
 * jaasPeriodoptions List  (optional)
 * returns orgApacheFelixJaasConfigurationFactoryInfo
 **/
exports.orgApacheFelixJaasConfigurationFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,jaasPeriodcontrolFlag,jaasPeriodranking,jaasPeriodrealmName,jaasPeriodclassname,jaasPeriodoptions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "jaas.controlFlag" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "jaas.realmName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jaas.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "jaas.options" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "jaas.classname" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jaasPerioddefaultRealmName String  (optional)
 * jaasPeriodconfigProviderName String  (optional)
 * jaasPeriodglobalConfigPolicy String  (optional)
 * returns orgApacheFelixJaasConfigurationSpiInfo
 **/
exports.orgApacheFelixJaasConfigurationSpi = function(post,apply,_delete,action,Dollarlocation,propertylist,jaasPerioddefaultRealmName,jaasPeriodconfigProviderName,jaasPeriodglobalConfigPolicy) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "jaas.configProviderName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jaas.globalConfigPolicy" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "jaas.defaultRealmName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * dsPeriodloglevel Integer  (optional)
 * dsPeriodfactoryPeriodenabled Boolean  (optional)
 * dsPerioddelayedPeriodkeepInstances Boolean  (optional)
 * dsPeriodlockPeriodtimeoutPeriodmilliseconds Integer  (optional)
 * dsPeriodstopPeriodtimeoutPeriodmilliseconds Integer  (optional)
 * dsPeriodglobalPeriodextender Boolean  (optional)
 * returns orgApacheFelixScrScrServiceInfo
 **/
exports.orgApacheFelixScrScrService = function(post,apply,_delete,action,Dollarlocation,propertylist,dsPeriodloglevel,dsPeriodfactoryPeriodenabled,dsPerioddelayedPeriodkeepInstances,dsPeriodlockPeriodtimeoutPeriodmilliseconds,dsPeriodstopPeriodtimeoutPeriodmilliseconds,dsPeriodglobalPeriodextender) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ds.global.extender" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "ds.factory.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "ds.delayed.keepInstances" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "ds.loglevel" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "ds.lock.timeout.milliseconds" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "ds.stop.timeout.milliseconds" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * componentsPeriodlist List  (optional)
 * type String  (optional)
 * returns orgApacheFelixSystemreadyImplComponentsCheckInfo
 **/
exports.orgApacheFelixSystemreadyImplComponentsCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,componentsPeriodlist,type) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "components.list" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * timeout Integer  (optional)
 * targetPeriodstartPeriodlevel Integer  (optional)
 * targetPeriodstartPeriodlevelPeriodpropPeriodname String  (optional)
 * type String  (optional)
 * returns orgApacheFelixSystemreadyImplFrameworkStartCheckInfo
 **/
exports.orgApacheFelixSystemreadyImplFrameworkStartCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,timeout,targetPeriodstartPeriodlevel,targetPeriodstartPeriodlevelPeriodpropPeriodname,type) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "target.start.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "target.start.level.prop.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicesPeriodlist List  (optional)
 * type String  (optional)
 * returns orgApacheFelixSystemreadyImplServicesCheckInfo
 **/
exports.orgApacheFelixSystemreadyImplServicesCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,servicesPeriodlist,type) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "services.list" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern String  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect String  (optional)
 * returns orgApacheFelixSystemreadyImplServletSystemAliveServletInfo
 **/
exports.orgApacheFelixSystemreadyImplServletSystemAliveServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern,osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "osgi.http.whiteboard.servlet.pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "osgi.http.whiteboard.context.select" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern String  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect String  (optional)
 * returns orgApacheFelixSystemreadyImplServletSystemReadyServletInfo
 **/
exports.orgApacheFelixSystemreadyImplServletSystemReadyServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,osgiPeriodhttpPeriodwhiteboardPeriodservletPeriodpattern,osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "osgi.http.whiteboard.servlet.pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "osgi.http.whiteboard.context.select" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * pollPeriodinterval Integer  (optional)
 * returns orgApacheFelixSystemreadySystemReadyMonitorInfo
 **/
exports.orgApacheFelixSystemreadySystemReadyMonitor = function(post,apply,_delete,action,Dollarlocation,propertylist,pollPeriodinterval) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "poll.interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * managerPeriodroot String  (optional)
 * httpPeriodservicePeriodfilter String  (optional)
 * defaultPeriodrender String  (optional)
 * realm String  (optional)
 * username String  (optional)
 * password String  (optional)
 * category String  (optional)
 * locale String  (optional)
 * loglevel Integer  (optional)
 * plugins String  (optional)
 * returns orgApacheFelixWebconsoleInternalServletOsgiManagerInfo
 **/
exports.orgApacheFelixWebconsoleInternalServletOsgiManager = function(post,apply,_delete,action,Dollarlocation,propertylist,managerPeriodroot,httpPeriodservicePeriodfilter,defaultPeriodrender,realm,username,password,category,locale,loglevel,plugins) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "http.service.filter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "default.render" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "plugins" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "loglevel" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "realm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "category" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "locale" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "manager.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "username" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxPeriodsize Integer  (optional)
 * returns orgApacheFelixWebconsolePluginsEventInternalPluginServletInfo
 **/
exports.orgApacheFelixWebconsolePluginsEventInternalPluginServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,maxPeriodsize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "max.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * felixPeriodmemoryusagePerioddumpPeriodthreshold Integer  (optional)
 * felixPeriodmemoryusagePerioddumpPeriodinterval Integer  (optional)
 * felixPeriodmemoryusagePerioddumpPeriodlocation String  (optional)
 * returns orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo
 **/
exports.orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo = function(post,apply,_delete,action,Dollarlocation,propertylist,felixPeriodmemoryusagePerioddumpPeriodthreshold,felixPeriodmemoryusagePerioddumpPeriodinterval,felixPeriodmemoryusagePerioddumpPeriodlocation) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "felix.memoryusage.dump.interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "felix.memoryusage.dump.location" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "felix.memoryusage.dump.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * proxyPeriodenabled Boolean  (optional)
 * proxyPeriodhost String  (optional)
 * proxyPeriodport Integer  (optional)
 * proxyPerioduser String  (optional)
 * proxyPeriodpassword String  (optional)
 * proxyPeriodexceptions List  (optional)
 * returns orgApacheHttpProxyconfiguratorInfo
 **/
exports.orgApacheHttpProxyconfigurator = function(post,apply,_delete,action,Dollarlocation,propertylist,proxyPeriodenabled,proxyPeriodhost,proxyPeriodport,proxyPerioduser,proxyPeriodpassword,proxyPeriodexceptions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "proxy.port" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "proxy.exceptions" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "proxy.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "proxy.host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "proxy.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "proxy.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * dir String  (optional)
 * returns orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo
 **/
exports.orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,dir) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "dir" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * returns orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo
 **/
exports.orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore = function(post,apply,_delete,action,Dollarlocation,propertylist,path) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mongouri String  (optional)
 * db String  (optional)
 * socketKeepAlive Boolean  (optional)
 * cache Integer  (optional)
 * nodeCachePercentage Integer  (optional)
 * prevDocCachePercentage Integer  (optional)
 * childrenCachePercentage Integer  (optional)
 * diffCachePercentage Integer  (optional)
 * cacheSegmentCount Integer  (optional)
 * cacheStackMoveDistance Integer  (optional)
 * blobCacheSize Integer  (optional)
 * persistentCache String  (optional)
 * journalCache String  (optional)
 * customBlobStore Boolean  (optional)
 * journalGCInterval Integer  (optional)
 * journalGCMaxAge Integer  (optional)
 * prefetchExternalChanges Boolean  (optional)
 * role String  (optional)
 * versionGcMaxAgeInSecs Integer  (optional)
 * versionGCExpression String  (optional)
 * versionGCTimeLimitInSecs Integer  (optional)
 * blobGcMaxAgeInSecs Integer  (optional)
 * blobTrackSnapshotIntervalInSecs Integer  (optional)
 * repositoryPeriodhome String  (optional)
 * maxReplicationLagInSecs Integer  (optional)
 * documentStoreType String  (optional)
 * bundlingDisabled Boolean  (optional)
 * updateLimit Integer  (optional)
 * persistentCacheIncludes List  (optional)
 * leaseCheckMode String  (optional)
 * returns orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo
 **/
exports.orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService = function(post,apply,_delete,action,Dollarlocation,propertylist,mongouri,db,socketKeepAlive,cache,nodeCachePercentage,prevDocCachePercentage,childrenCachePercentage,diffCachePercentage,cacheSegmentCount,cacheStackMoveDistance,blobCacheSize,persistentCache,journalCache,customBlobStore,journalGCInterval,journalGCMaxAge,prefetchExternalChanges,role,versionGcMaxAgeInSecs,versionGCExpression,versionGCTimeLimitInSecs,blobGcMaxAgeInSecs,blobTrackSnapshotIntervalInSecs,repositoryPeriodhome,maxReplicationLagInSecs,documentStoreType,bundlingDisabled,updateLimit,persistentCacheIncludes,leaseCheckMode) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "prefetchExternalChanges" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "role" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cacheSegmentCount" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "versionGCExpression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "repository.home" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "journalGCMaxAge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "persistentCacheIncludes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "prevDocCachePercentage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxReplicationLagInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "socketKeepAlive" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "blobCacheSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "blobTrackSnapshotIntervalInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "blobGcMaxAgeInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "childrenCachePercentage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "nodeCachePercentage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cache" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "journalGCInterval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "journalCache" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "leaseCheckMode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "customBlobStore" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "documentStoreType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "versionGcMaxAgeInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "bundlingDisabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "persistentCache" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "diffCachePercentage" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "mongouri" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cacheStackMoveDistance" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "updateLimit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "versionGCTimeLimitInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "db" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * persistentCacheIncludes List  (optional)
 * returns orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo
 **/
exports.orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre = function(post,apply,_delete,action,Dollarlocation,propertylist,persistentCacheIncludes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "persistentCacheIncludes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * includedPaths List  (optional)
 * enableAsyncObserver Boolean  (optional)
 * observerQueueSize Integer  (optional)
 * returns orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo
 **/
exports.orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac = function(post,apply,_delete,action,Dollarlocation,propertylist,includedPaths,enableAsyncObserver,observerQueueSize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enableAsyncObserver" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "observerQueueSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "includedPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * asyncConfigs List  (optional)
 * leaseTimeOutMinutes Integer  (optional)
 * failingIndexTimeoutSeconds Integer  (optional)
 * errorWarnIntervalSeconds Integer  (optional)
 * returns orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo
 **/
exports.orgApacheJackrabbitOakPluginsIndexAsyncIndexerService = function(post,apply,_delete,action,Dollarlocation,propertylist,asyncConfigs,leaseTimeOutMinutes,failingIndexTimeoutSeconds,errorWarnIntervalSeconds) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "errorWarnIntervalSeconds" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "asyncConfigs" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "failingIndexTimeoutSeconds" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "leaseTimeOutMinutes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * disabled Boolean  (optional)
 * debug Boolean  (optional)
 * localIndexDir String  (optional)
 * enableOpenIndexAsync Boolean  (optional)
 * threadPoolSize Integer  (optional)
 * prefetchIndexFiles Boolean  (optional)
 * extractedTextCacheSizeInMB Integer  (optional)
 * extractedTextCacheExpiryInSecs Integer  (optional)
 * alwaysUsePreExtractedCache Boolean  (optional)
 * booleanClauseLimit Integer  (optional)
 * enableHybridIndexing Boolean  (optional)
 * hybridQueueSize Integer  (optional)
 * disableStoredIndexDefinition Boolean  (optional)
 * deletedBlobsCollectionEnabled Boolean  (optional)
 * propIndexCleanerIntervalInSecs Integer  (optional)
 * enableSingleBlobIndexFiles Boolean  (optional)
 * returns orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo
 **/
exports.orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ = function(post,apply,_delete,action,Dollarlocation,propertylist,disabled,debug,localIndexDir,enableOpenIndexAsync,threadPoolSize,prefetchIndexFiles,extractedTextCacheSizeInMB,extractedTextCacheExpiryInSecs,alwaysUsePreExtractedCache,booleanClauseLimit,enableHybridIndexing,hybridQueueSize,disableStoredIndexDefinition,deletedBlobsCollectionEnabled,propIndexCleanerIntervalInSecs,enableSingleBlobIndexFiles) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "alwaysUsePreExtractedCache" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "enableSingleBlobIndexFiles" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "debug" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "localIndexDir" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enableHybridIndexing" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "propIndexCleanerIntervalInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "hybridQueueSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "disableStoredIndexDefinition" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "extractedTextCacheSizeInMB" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "threadPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "deletedBlobsCollectionEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "extractedTextCacheExpiryInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "disabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "booleanClauseLimit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "prefetchIndexFiles" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "enableOpenIndexAsync" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * solrPeriodhomePeriodpath String  (optional)
 * solrPeriodcorePeriodname String  (optional)
 * returns orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo
 **/
exports.orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo = function(post,apply,_delete,action,Dollarlocation,propertylist,solrPeriodhomePeriodpath,solrPeriodcorePeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "solr.home.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "solr.core.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * returns orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo
 **/
exports.orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * pathPerioddescPeriodfield String  (optional)
 * pathPeriodchildPeriodfield String  (optional)
 * pathPeriodparentPeriodfield String  (optional)
 * pathPeriodexactPeriodfield String  (optional)
 * catchPeriodallPeriodfield String  (optional)
 * collapsedPeriodpathPeriodfield String  (optional)
 * pathPerioddepthPeriodfield String  (optional)
 * commitPeriodpolicy String  (optional)
 * rows Integer  (optional)
 * pathPeriodrestrictions Boolean  (optional)
 * propertyPeriodrestrictions Boolean  (optional)
 * primarytypesPeriodrestrictions Boolean  (optional)
 * ignoredPeriodproperties List  (optional)
 * usedPeriodproperties List  (optional)
 * typePeriodmappings List  (optional)
 * propertyPeriodmappings List  (optional)
 * collapsePeriodjcrcontentPeriodnodes Boolean  (optional)
 * returns orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo
 **/
exports.orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration = function(post,apply,_delete,action,Dollarlocation,propertylist,pathPerioddescPeriodfield,pathPeriodchildPeriodfield,pathPeriodparentPeriodfield,pathPeriodexactPeriodfield,catchPeriodallPeriodfield,collapsedPeriodpathPeriodfield,pathPerioddepthPeriodfield,commitPeriodpolicy,rows,pathPeriodrestrictions,propertyPeriodrestrictions,primarytypesPeriodrestrictions,ignoredPeriodproperties,usedPeriodproperties,typePeriodmappings,propertyPeriodmappings,collapsePeriodjcrcontentPeriodnodes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "used.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "path.parent.field" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "property.restrictions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "collapsed.path.field" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "path.restrictions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "path.exact.field" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "property.mappings" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "rows" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "collapse.jcrcontent.nodes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "path.desc.field" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "path.child.field" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "catch.all.field" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "ignored.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "commit.policy" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "primarytypes.restrictions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "type.mappings" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "path.depth.field" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * solrPeriodhttpPeriodurl String  (optional)
 * solrPeriodzkPeriodhost String  (optional)
 * solrPeriodcollection String  (optional)
 * solrPeriodsocketPeriodtimeout Integer  (optional)
 * solrPeriodconnectionPeriodtimeout Integer  (optional)
 * solrPeriodshardsPeriodno Integer  (optional)
 * solrPeriodreplicationPeriodfactor Integer  (optional)
 * solrPeriodconfPerioddir String  (optional)
 * returns orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo
 **/
exports.orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf = function(post,apply,_delete,action,Dollarlocation,propertylist,solrPeriodhttpPeriodurl,solrPeriodzkPeriodhost,solrPeriodcollection,solrPeriodsocketPeriodtimeout,solrPeriodconnectionPeriodtimeout,solrPeriodshardsPeriodno,solrPeriodreplicationPeriodfactor,solrPeriodconfPerioddir) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "solr.zk.host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "solr.socket.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "solr.conf.dir" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "solr.collection" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "solr.connection.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "solr.replication.factor" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "solr.http.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "solr.shards.no" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * queryPeriodaggregation Boolean  (optional)
 * returns orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo
 **/
exports.orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid = function(post,apply,_delete,action,Dollarlocation,propertylist,queryPeriodaggregation) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "query.aggregation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * serverPeriodtype String  (optional)
 * returns orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo
 **/
exports.orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe = function(post,apply,_delete,action,Dollarlocation,propertylist,serverPeriodtype) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "server.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * providerType String  (optional)
 * returns orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo
 **/
exports.orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,providerType) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "providerType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxItems Integer  (optional)
 * maxPathDepth Integer  (optional)
 * enabled Boolean  (optional)
 * returns orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo
 **/
exports.orgApacheJackrabbitOakPluginsObservationChangeCollectorProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,maxItems,maxPathDepth,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "maxItems" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "maxPathDepth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * queryLimitInMemory Integer  (optional)
 * queryLimitReads Integer  (optional)
 * queryFailTraversal Boolean  (optional)
 * fastQuerySize Boolean  (optional)
 * returns orgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo
 **/
exports.orgApacheJackrabbitOakQueryQueryEngineSettingsService = function(post,apply,_delete,action,Dollarlocation,propertylist,queryLimitInMemory,queryLimitReads,queryFailTraversal,fastQuerySize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "queryLimitInMemory" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "queryLimitReads" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "queryFailTraversal" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "fastQuerySize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodappName String  (optional)
 * orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodconfigSpiName String  (optional)
 * returns orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo
 **/
exports.orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodappName,orgPeriodapachePeriodjackrabbitPeriodoakPeriodauthenticationPeriodconfigSpiName) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.jackrabbit.oak.authentication.configSpiName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.jackrabbit.oak.authentication.appName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * providerPeriodname String  (optional)
 * hostPeriodname String  (optional)
 * hostPeriodport Integer  (optional)
 * hostPeriodssl Boolean  (optional)
 * hostPeriodtls Boolean  (optional)
 * hostPeriodnoCertCheck Boolean  (optional)
 * bindPerioddn String  (optional)
 * bindPeriodpassword String  (optional)
 * searchTimeout String  (optional)
 * adminPoolPeriodmaxActive Integer  (optional)
 * adminPoolPeriodlookupOnValidate Boolean  (optional)
 * userPoolPeriodmaxActive Integer  (optional)
 * userPoolPeriodlookupOnValidate Boolean  (optional)
 * userPeriodbaseDN String  (optional)
 * userPeriodobjectclass List  (optional)
 * userPeriodidAttribute String  (optional)
 * userPeriodextraFilter String  (optional)
 * userPeriodmakeDnPath Boolean  (optional)
 * groupPeriodbaseDN String  (optional)
 * groupPeriodobjectclass List  (optional)
 * groupPeriodnameAttribute String  (optional)
 * groupPeriodextraFilter String  (optional)
 * groupPeriodmakeDnPath Boolean  (optional)
 * groupPeriodmemberAttribute String  (optional)
 * useUidForExtId Boolean  (optional)
 * customattributes List  (optional)
 * returns orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo
 **/
exports.orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti = function(post,apply,_delete,action,Dollarlocation,propertylist,providerPeriodname,hostPeriodname,hostPeriodport,hostPeriodssl,hostPeriodtls,hostPeriodnoCertCheck,bindPerioddn,bindPeriodpassword,searchTimeout,adminPoolPeriodmaxActive,adminPoolPeriodlookupOnValidate,userPoolPeriodmaxActive,userPoolPeriodlookupOnValidate,userPeriodbaseDN,userPeriodobjectclass,userPeriodidAttribute,userPeriodextraFilter,userPeriodmakeDnPath,groupPeriodbaseDN,groupPeriodobjectclass,groupPeriodnameAttribute,groupPeriodextraFilter,groupPeriodmakeDnPath,groupPeriodmemberAttribute,useUidForExtId,customattributes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "host.ssl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "group.objectclass" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "group.makeDnPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "host.port" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "customattributes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "bind.dn" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "user.makeDnPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "adminPool.lookupOnValidate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "host.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "group.extraFilter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "user.extraFilter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "user.objectclass" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "bind.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "group.memberAttribute" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "adminPool.maxActive" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "userPool.maxActive" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "user.idAttribute" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "userPool.lookupOnValidate" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "useUidForExtId" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "host.tls" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "user.baseDN" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "group.baseDN" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "provider.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "host.noCertCheck" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "group.nameAttribute" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "searchTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * tokenExpiration String  (optional)
 * tokenLength String  (optional)
 * tokenRefresh Boolean  (optional)
 * tokenCleanupThreshold Integer  (optional)
 * passwordHashAlgorithm String  (optional)
 * passwordHashIterations Integer  (optional)
 * passwordSaltSize Integer  (optional)
 * returns orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo
 **/
exports.orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura = function(post,apply,_delete,action,Dollarlocation,propertylist,tokenExpiration,tokenLength,tokenRefresh,tokenCleanupThreshold,passwordHashAlgorithm,passwordHashIterations,passwordSaltSize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "passwordSaltSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "tokenCleanupThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "passwordHashIterations" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "tokenExpiration" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "tokenRefresh" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "tokenLength" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "passwordHashAlgorithm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * permissionsJr2 String  (optional)
 * importBehavior String  (optional)
 * readPaths List  (optional)
 * administrativePrincipals List  (optional)
 * configurationRanking Integer  (optional)
 * returns orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo
 **/
exports.orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur = function(post,apply,_delete,action,Dollarlocation,propertylist,permissionsJr2,importBehavior,readPaths,administrativePrincipals,configurationRanking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "permissionsJr2" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "importBehavior" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "administrativePrincipals" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "configurationRanking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "readPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * requiredServicePids List  (optional)
 * authorizationCompositionType String  (optional)
 * returns orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo
 **/
exports.orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati = function(post,apply,_delete,action,Dollarlocation,propertylist,requiredServicePids,authorizationCompositionType) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "requiredServicePids" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "authorizationCompositionType" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * length Integer  (optional)
 * returns orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo
 **/
exports.orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName = function(post,apply,_delete,action,Dollarlocation,propertylist,length) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "length" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * usersPath String  (optional)
 * groupsPath String  (optional)
 * systemRelativePath String  (optional)
 * defaultDepth Integer  (optional)
 * importBehavior String  (optional)
 * passwordHashAlgorithm String  (optional)
 * passwordHashIterations Integer  (optional)
 * passwordSaltSize Integer  (optional)
 * omitAdminPw Boolean  (optional)
 * supportAutoSave Boolean  (optional)
 * passwordMaxAge Integer  (optional)
 * initialPasswordChange Boolean  (optional)
 * passwordHistorySize Integer  (optional)
 * passwordExpiryForAdmin Boolean  (optional)
 * cacheExpiration Integer  (optional)
 * enableRFC7613UsercaseMappedProfile Boolean  (optional)
 * returns orgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo
 **/
exports.orgApacheJackrabbitOakSecurityUserUserConfigurationImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,usersPath,groupsPath,systemRelativePath,defaultDepth,importBehavior,passwordHashAlgorithm,passwordHashIterations,passwordSaltSize,omitAdminPw,supportAutoSave,passwordMaxAge,initialPasswordChange,passwordHistorySize,passwordExpiryForAdmin,cacheExpiration,enableRFC7613UsercaseMappedProfile) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "passwordSaltSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "systemRelativePath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enableRFC7613UsercaseMappedProfile" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "groupsPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "passwordHashIterations" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cacheExpiration" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "usersPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "initialPasswordChange" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "passwordHistorySize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "supportAutoSave" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "importBehavior" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "defaultDepth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "passwordMaxAge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "passwordHashAlgorithm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "omitAdminPw" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "passwordExpiryForAdmin" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * accountName String  (optional)
 * containerName String  (optional)
 * accessKey String  (optional)
 * rootPath String  (optional)
 * connectionURL String  (optional)
 * returns orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo
 **/
exports.orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService = function(post,apply,_delete,action,Dollarlocation,propertylist,accountName,containerName,accessKey,rootPath,connectionURL) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "accountName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "accessKey" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "containerName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "connectionURL" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "rootPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * repositoryPeriodhome String  (optional)
 * tarmkPeriodmode String  (optional)
 * tarmkPeriodsize Integer  (optional)
 * segmentCachePeriodsize Integer  (optional)
 * stringCachePeriodsize Integer  (optional)
 * templateCachePeriodsize Integer  (optional)
 * stringDeduplicationCachePeriodsize Integer  (optional)
 * templateDeduplicationCachePeriodsize Integer  (optional)
 * nodeDeduplicationCachePeriodsize Integer  (optional)
 * pauseCompaction Boolean  (optional)
 * compactionPeriodretryCount Integer  (optional)
 * compactionPeriodforcePeriodtimeout Integer  (optional)
 * compactionPeriodsizeDeltaEstimation Integer  (optional)
 * compactionPerioddisableEstimation Boolean  (optional)
 * compactionPeriodretainedGenerations Integer  (optional)
 * compactionPeriodmemoryThreshold Integer  (optional)
 * compactionPeriodprogressLog Integer  (optional)
 * standby Boolean  (optional)
 * customBlobStore Boolean  (optional)
 * customSegmentStore Boolean  (optional)
 * splitPersistence Boolean  (optional)
 * repositoryPeriodbackupPerioddir String  (optional)
 * blobGcMaxAgeInSecs Integer  (optional)
 * blobTrackSnapshotIntervalInSecs Integer  (optional)
 * role String  (optional)
 * registerDescriptors Boolean  (optional)
 * dispatchChanges Boolean  (optional)
 * returns orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo
 **/
exports.orgApacheJackrabbitOakSegmentSegmentNodeStoreFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,repositoryPeriodhome,tarmkPeriodmode,tarmkPeriodsize,segmentCachePeriodsize,stringCachePeriodsize,templateCachePeriodsize,stringDeduplicationCachePeriodsize,templateDeduplicationCachePeriodsize,nodeDeduplicationCachePeriodsize,pauseCompaction,compactionPeriodretryCount,compactionPeriodforcePeriodtimeout,compactionPeriodsizeDeltaEstimation,compactionPerioddisableEstimation,compactionPeriodretainedGenerations,compactionPeriodmemoryThreshold,compactionPeriodprogressLog,standby,customBlobStore,customSegmentStore,splitPersistence,repositoryPeriodbackupPerioddir,blobGcMaxAgeInSecs,blobTrackSnapshotIntervalInSecs,role,registerDescriptors,dispatchChanges) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "compaction.force.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "role" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "templateCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "pauseCompaction" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "standby" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "splitPersistence" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "repository.home" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "customSegmentStore" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "dispatchChanges" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "segmentCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "registerDescriptors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "stringDeduplicationCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "blobTrackSnapshotIntervalInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "tarmk.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "nodeDeduplicationCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "compaction.sizeDeltaEstimation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "blobGcMaxAgeInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "repository.backup.dir" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "compaction.retryCount" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "customBlobStore" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "compaction.disableEstimation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "compaction.progressLog" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "templateDeduplicationCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "compaction.memoryThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "stringCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "tarmk.mode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "compaction.retainedGenerations" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * commitsTrackerWriterGroups List  (optional)
 * returns orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo
 **/
exports.orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService = function(post,apply,_delete,action,Dollarlocation,propertylist,commitsTrackerWriterGroups) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "commitsTrackerWriterGroups" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * repositoryPeriodhome String  (optional)
 * tarmkPeriodmode String  (optional)
 * tarmkPeriodsize Integer  (optional)
 * segmentCachePeriodsize Integer  (optional)
 * stringCachePeriodsize Integer  (optional)
 * templateCachePeriodsize Integer  (optional)
 * stringDeduplicationCachePeriodsize Integer  (optional)
 * templateDeduplicationCachePeriodsize Integer  (optional)
 * nodeDeduplicationCachePeriodsize Integer  (optional)
 * pauseCompaction Boolean  (optional)
 * compactionPeriodretryCount Integer  (optional)
 * compactionPeriodforcePeriodtimeout Integer  (optional)
 * compactionPeriodsizeDeltaEstimation Integer  (optional)
 * compactionPerioddisableEstimation Boolean  (optional)
 * compactionPeriodretainedGenerations Integer  (optional)
 * compactionPeriodmemoryThreshold Integer  (optional)
 * compactionPeriodprogressLog Integer  (optional)
 * standby Boolean  (optional)
 * customBlobStore Boolean  (optional)
 * customSegmentStore Boolean  (optional)
 * splitPersistence Boolean  (optional)
 * repositoryPeriodbackupPerioddir String  (optional)
 * blobGcMaxAgeInSecs Integer  (optional)
 * blobTrackSnapshotIntervalInSecs Integer  (optional)
 * returns orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo
 **/
exports.orgApacheJackrabbitOakSegmentSegmentNodeStoreService = function(post,apply,_delete,action,Dollarlocation,propertylist,repositoryPeriodhome,tarmkPeriodmode,tarmkPeriodsize,segmentCachePeriodsize,stringCachePeriodsize,templateCachePeriodsize,stringDeduplicationCachePeriodsize,templateDeduplicationCachePeriodsize,nodeDeduplicationCachePeriodsize,pauseCompaction,compactionPeriodretryCount,compactionPeriodforcePeriodtimeout,compactionPeriodsizeDeltaEstimation,compactionPerioddisableEstimation,compactionPeriodretainedGenerations,compactionPeriodmemoryThreshold,compactionPeriodprogressLog,standby,customBlobStore,customSegmentStore,splitPersistence,repositoryPeriodbackupPerioddir,blobGcMaxAgeInSecs,blobTrackSnapshotIntervalInSecs) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "compaction.force.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "repository.backup.dir" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "templateCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "pauseCompaction" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "standby" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "splitPersistence" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "compaction.retryCount" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "customBlobStore" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "repository.home" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "customSegmentStore" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "compaction.disableEstimation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "compaction.progressLog" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "segmentCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "templateDeduplicationCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "compaction.memoryThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "stringCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "stringDeduplicationCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "blobTrackSnapshotIntervalInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "tarmk.mode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "tarmk.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "nodeDeduplicationCache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "compaction.sizeDeltaEstimation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "blobGcMaxAgeInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "compaction.retainedGenerations" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist Boolean  (optional)
 * mode String  (optional)
 * port Integer  (optional)
 * primaryPeriodhost String  (optional)
 * interval Integer  (optional)
 * primaryPeriodallowedClientIpRanges List  (optional)
 * secure Boolean  (optional)
 * standbyPeriodreadtimeout Integer  (optional)
 * standbyPeriodautoclean Boolean  (optional)
 * returns orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo
 **/
exports.orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist,mode,port,primaryPeriodhost,interval,primaryPeriodallowedClientIpRanges,secure,standbyPeriodreadtimeout,standbyPeriodautoclean) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "standby.autoclean" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "standby.readtimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "port" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "primary.allowed-client-ip-ranges" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "primary.host" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "interval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "secure" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.sling.installer.configuration.persist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * handlerPeriodname String  (optional)
 * userPeriodexpirationTime String  (optional)
 * userPeriodautoMembership List  (optional)
 * userPeriodpropertyMapping List  (optional)
 * userPeriodpathPrefix String  (optional)
 * userPeriodmembershipExpTime String  (optional)
 * userPeriodmembershipNestingDepth Integer  (optional)
 * userPerioddynamicMembership Boolean  (optional)
 * userPerioddisableMissing Boolean  (optional)
 * groupPeriodexpirationTime String  (optional)
 * groupPeriodautoMembership List  (optional)
 * groupPeriodpropertyMapping List  (optional)
 * groupPeriodpathPrefix String  (optional)
 * enableRFC7613UsercaseMappedProfile Boolean  (optional)
 * returns orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo
 **/
exports.orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe = function(post,apply,_delete,action,Dollarlocation,propertylist,handlerPeriodname,userPeriodexpirationTime,userPeriodautoMembership,userPeriodpropertyMapping,userPeriodpathPrefix,userPeriodmembershipExpTime,userPeriodmembershipNestingDepth,userPerioddynamicMembership,userPerioddisableMissing,groupPeriodexpirationTime,groupPeriodautoMembership,groupPeriodpropertyMapping,groupPeriodpathPrefix,enableRFC7613UsercaseMappedProfile) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "user.membershipExpTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enableRFC7613UsercaseMappedProfile" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "group.expirationTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "user.expirationTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "user.disableMissing" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "user.propertyMapping" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "user.membershipNestingDepth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "user.pathPrefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "group.propertyMapping" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "group.autoMembership" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "user.autoMembership" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "handler.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "group.pathPrefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "user.dynamicMembership" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jaasPeriodranking Integer  (optional)
 * jaasPeriodcontrolFlag String  (optional)
 * jaasPeriodrealmName String  (optional)
 * idpPeriodname String  (optional)
 * syncPeriodhandlerName String  (optional)
 * returns orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo
 **/
exports.orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx = function(post,apply,_delete,action,Dollarlocation,propertylist,jaasPeriodranking,jaasPeriodcontrolFlag,jaasPeriodrealmName,idpPeriodname,syncPeriodhandlerName) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "idp.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jaas.controlFlag" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jaas.realmName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jaas.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "sync.handlerName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * protectExternalId Boolean  (optional)
 * returns orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo
 **/
exports.orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr = function(post,apply,_delete,action,Dollarlocation,propertylist,protectExternalId) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "protectExternalId" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * cugSupportedPaths List  (optional)
 * cugEnabled Boolean  (optional)
 * configurationRanking Integer  (optional)
 * returns orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo
 **/
exports.orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi = function(post,apply,_delete,action,Dollarlocation,propertylist,cugSupportedPaths,cugEnabled,configurationRanking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cugEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "configurationRanking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cugSupportedPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * principalNames List  (optional)
 * returns orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo
 **/
exports.orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu = function(post,apply,_delete,action,Dollarlocation,propertylist,principalNames) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "principalNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabledActions String  (optional)
 * userPrivilegeNames List  (optional)
 * groupPrivilegeNames List  (optional)
 * constraint String  (optional)
 * returns orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo
 **/
exports.orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable = function(post,apply,_delete,action,Dollarlocation,propertylist,enabledActions,userPrivilegeNames,groupPrivilegeNames,constraint) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "userPrivilegeNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "groupPrivilegeNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "constraint" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabledActions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * packageRoots List  (optional)
 * returns orgApacheJackrabbitVaultPackagingImplPackagingImplInfo
 **/
exports.orgApacheJackrabbitVaultPackagingImplPackagingImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,packageRoots) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "packageRoots" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * homePath String  (optional)
 * returns orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo
 **/
exports.orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry = function(post,apply,_delete,action,Dollarlocation,propertylist,homePath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "homePath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodmethods List  (optional)
 * slingPeriodservletPeriodpaths String  (optional)
 * returns orgApacheSlingAuthCoreImplLogoutServletInfo
 **/
exports.orgApacheSlingAuthCoreImplLogoutServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodmethods,slingPeriodservletPeriodpaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.servlet.paths" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.servlet.methods" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * returns orgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo
 **/
exports.orgApacheSlingCaconfigImplConfigurationBindingsValueProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * configBucketNames List  (optional)
 * returns orgApacheSlingCaconfigImplConfigurationResolverImplInfo
 **/
exports.orgApacheSlingCaconfigImplConfigurationResolverImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,configBucketNames) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "configBucketNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * configPropertyInheritancePropertyNames List  (optional)
 * returns orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo
 **/
exports.orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled,configPropertyInheritancePropertyNames) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "configPropertyInheritancePropertyNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * returns orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo
 **/
exports.orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * description String  (optional)
 * overrides List  (optional)
 * enabled Boolean  (optional)
 * servicePeriodranking Integer  (optional)
 * returns orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo
 **/
exports.orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi = function(post,apply,_delete,action,Dollarlocation,propertylist,description,overrides,enabled,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "description" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "overrides" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * servicePeriodranking Integer  (optional)
 * returns orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo
 **/
exports.orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * ignorePropertyNameRegex List  (optional)
 * configCollectionPropertiesResourceNames List  (optional)
 * returns orgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo
 **/
exports.orgApacheSlingCaconfigManagementImplConfigurationManagementSetti = function(post,apply,_delete,action,Dollarlocation,propertylist,ignorePropertyNameRegex,configCollectionPropertiesResourceNames) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ignorePropertyNameRegex" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "configCollectionPropertiesResourceNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * configPath String  (optional)
 * fallbackPaths List  (optional)
 * configCollectionInheritancePropertyNames List  (optional)
 * returns orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo
 **/
exports.orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled,configPath,fallbackPaths,configCollectionInheritancePropertyNames) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "configCollectionInheritancePropertyNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "fallbackPaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "configPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * enabled Boolean  (optional)
 * configRefResourceNames List  (optional)
 * configRefPropertyNames List  (optional)
 * servicePeriodranking Integer  (optional)
 * returns orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo
 **/
exports.orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy = function(post,apply,_delete,action,Dollarlocation,propertylist,enabled,configRefResourceNames,configRefPropertyNames,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "configRefPropertyNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "configRefResourceNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * parserPeriodfeatures List  (optional)
 * returns orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo
 **/
exports.orgApacheSlingCommonsHtmlInternalTagsoupHtmlParser = function(post,apply,_delete,action,Dollarlocation,propertylist,parserPeriodfeatures) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "parser.features" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber Integer  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodconfigurationFile String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpackagingDataEnabled Boolean  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxCallerDataDepth Integer  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxOldFileCountInDump Integer  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnumOfLines Integer  (optional)
 * returns orgApacheSlingCommonsLogLogManagerInfo
 **/
exports.orgApacheSlingCommonsLogLogManager = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodconfigurationFile,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpackagingDataEnabled,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxCallerDataDepth,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodmaxOldFileCountInDump,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnumOfLines) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.sling.commons.log.file.number" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.sling.commons.log.maxCallerDataDepth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.sling.commons.log.file.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.commons.log.packagingDataEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.sling.commons.log.numOfLines" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.sling.commons.log.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "org.apache.sling.commons.log.maxOldFileCountInDump" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.sling.commons.log.pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.commons.log.configurationFile" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.commons.log.file" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnames List  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodadditiv Boolean  (optional)
 * returns orgApacheSlingCommonsLogLogManagerFactoryConfigInfo
 **/
exports.orgApacheSlingCommonsLogLogManagerFactoryConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodlevel,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodpattern,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodnames,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodadditiv) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.sling.commons.log.names" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.sling.commons.log.additiv" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.sling.commons.log.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "org.apache.sling.commons.log.pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.commons.log.file" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber Integer  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize String  (optional)
 * orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodbuffered Boolean  (optional)
 * returns orgApacheSlingCommonsLogLogManagerFactoryWriterInfo
 **/
exports.orgApacheSlingCommonsLogLogManagerFactoryWriter = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfile,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodnumber,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodsize,orgPeriodapachePeriodslingPeriodcommonsPeriodlogPeriodfilePeriodbuffered) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.sling.commons.log.file.number" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.sling.commons.log.file.buffered" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.sling.commons.log.file.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.commons.log.file" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * period Integer  (optional)
 * timeUnit String  (optional)
 * level String  (optional)
 * loggerName String  (optional)
 * prefix String  (optional)
 * pattern String  (optional)
 * registryName String  (optional)
 * returns orgApacheSlingCommonsMetricsInternalLogReporterInfo
 **/
exports.orgApacheSlingCommonsMetricsInternalLogReporter = function(post,apply,_delete,action,Dollarlocation,propertylist,period,timeUnit,level,loggerName,prefix,pattern,registryName) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "prefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "pattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "loggerName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "registryName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "timeUnit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * datasources List  (optional)
 * step Integer  (optional)
 * archives List  (optional)
 * path String  (optional)
 * returns orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo
 **/
exports.orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter = function(post,apply,_delete,action,Dollarlocation,propertylist,datasources,step,archives,path) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "archives" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "datasources" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "step" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mimePeriodtypes List  (optional)
 * returns orgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo
 **/
exports.orgApacheSlingCommonsMimeInternalMimeTypeServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,mimePeriodtypes) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mime.types" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * poolName String  (optional)
 * allowedPoolNames List  (optional)
 * schedulerPerioduseleaderforsingle Boolean  (optional)
 * metricsPeriodfilters List  (optional)
 * slowThresholdMillis Integer  (optional)
 * returns orgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo
 **/
exports.orgApacheSlingCommonsSchedulerImplQuartzScheduler = function(post,apply,_delete,action,Dollarlocation,propertylist,poolName,allowedPoolNames,schedulerPerioduseleaderforsingle,metricsPeriodfilters,slowThresholdMillis) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "metrics.filters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "allowedPoolNames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "scheduler.useleaderforsingle" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "slowThresholdMillis" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "poolName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxPeriodquartzJobPerioddurationPeriodacceptable Integer  (optional)
 * returns orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo
 **/
exports.orgApacheSlingCommonsSchedulerImplSchedulerHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,maxPeriodquartzJobPerioddurationPeriodacceptable) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "max.quartzJob.duration.acceptable" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * minPoolSize Integer  (optional)
 * maxPoolSize Integer  (optional)
 * queueSize Integer  (optional)
 * maxThreadAge Integer  (optional)
 * keepAliveTime Integer  (optional)
 * blockPolicy String  (optional)
 * shutdownGraceful Boolean  (optional)
 * daemon Boolean  (optional)
 * shutdownWaitTime Integer  (optional)
 * priority String  (optional)
 * returns orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo
 **/
exports.orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,name,minPoolSize,maxPoolSize,queueSize,maxThreadAge,keepAliveTime,blockPolicy,shutdownGraceful,daemon,shutdownWaitTime,priority) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "shutdownWaitTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "minPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "queueSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "keepAliveTime" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "blockPolicy" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "shutdownGraceful" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "maxPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxThreadAge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "daemon" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * datasourcePeriodname String  (optional)
 * datasourcePeriodsvcPeriodpropPeriodname String  (optional)
 * driverClassName String  (optional)
 * url String  (optional)
 * username String  (optional)
 * password String  (optional)
 * defaultAutoCommit String  (optional)
 * defaultReadOnly String  (optional)
 * defaultTransactionIsolation String  (optional)
 * defaultCatalog String  (optional)
 * maxActive Integer  (optional)
 * maxIdle Integer  (optional)
 * minIdle Integer  (optional)
 * initialSize Integer  (optional)
 * maxWait Integer  (optional)
 * maxAge Integer  (optional)
 * testOnBorrow Boolean  (optional)
 * testOnReturn Boolean  (optional)
 * testWhileIdle Boolean  (optional)
 * validationQuery String  (optional)
 * validationQueryTimeout Integer  (optional)
 * timeBetweenEvictionRunsMillis Integer  (optional)
 * minEvictableIdleTimeMillis Integer  (optional)
 * connectionProperties String  (optional)
 * initSQL String  (optional)
 * jdbcInterceptors String  (optional)
 * validationInterval Integer  (optional)
 * logValidationErrors Boolean  (optional)
 * datasourcePeriodsvcPeriodproperties List  (optional)
 * returns orgApacheSlingDatasourceDataSourceFactoryInfo
 **/
exports.orgApacheSlingDatasourceDataSourceFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,datasourcePeriodname,datasourcePeriodsvcPeriodpropPeriodname,driverClassName,url,username,password,defaultAutoCommit,defaultReadOnly,defaultTransactionIsolation,defaultCatalog,maxActive,maxIdle,minIdle,initialSize,maxWait,maxAge,testOnBorrow,testOnReturn,testWhileIdle,validationQuery,validationQueryTimeout,timeBetweenEvictionRunsMillis,minEvictableIdleTimeMillis,connectionProperties,initSQL,jdbcInterceptors,validationInterval,logValidationErrors,datasourcePeriodsvcPeriodproperties) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "connectionProperties" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "validationQuery" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "defaultCatalog" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "datasource.svc.prop.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "validationInterval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "datasource.svc.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "maxIdle" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "testWhileIdle" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "defaultAutoCommit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "minIdle" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "jdbcInterceptors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "defaultReadOnly" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "initialSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxWait" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "defaultTransactionIsolation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "testOnBorrow" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "logValidationErrors" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "maxAge" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "timeBetweenEvictionRunsMillis" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "minEvictableIdleTimeMillis" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "testOnReturn" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "datasource.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "driverClassName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "username" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "maxActive" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "validationQueryTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "initSQL" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * datasourcePeriodname String  (optional)
 * datasourcePeriodsvcPeriodpropPeriodname String  (optional)
 * datasourcePeriodjndiPeriodname String  (optional)
 * jndiPeriodproperties List  (optional)
 * returns orgApacheSlingDatasourceJNDIDataSourceFactoryInfo
 **/
exports.orgApacheSlingDatasourceJNDIDataSourceFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,datasourcePeriodname,datasourcePeriodsvcPeriodpropPeriodname,datasourcePeriodjndiPeriodname,jndiPeriodproperties) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "datasource.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "datasource.jndi.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "datasource.svc.prop.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jndi.properties" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * connectorPingTimeout Integer  (optional)
 * connectorPingInterval Integer  (optional)
 * discoveryLiteCheckInterval Integer  (optional)
 * clusterSyncServiceTimeout Integer  (optional)
 * clusterSyncServiceInterval Integer  (optional)
 * enableSyncToken Boolean  (optional)
 * minEventDelay Integer  (optional)
 * socketConnectTimeout Integer  (optional)
 * soTimeout Integer  (optional)
 * topologyConnectorUrls List  (optional)
 * topologyConnectorWhitelist List  (optional)
 * autoStopLocalLoopEnabled Boolean  (optional)
 * gzipConnectorRequestsEnabled Boolean  (optional)
 * hmacEnabled Boolean  (optional)
 * enableEncryption Boolean  (optional)
 * sharedKey String  (optional)
 * hmacSharedKeyTTL Integer  (optional)
 * backoffStandbyFactor String  (optional)
 * backoffStableFactor String  (optional)
 * returns orgApacheSlingDiscoveryOakConfigInfo
 **/
exports.orgApacheSlingDiscoveryOakConfig = function(post,apply,_delete,action,Dollarlocation,propertylist,connectorPingTimeout,connectorPingInterval,discoveryLiteCheckInterval,clusterSyncServiceTimeout,clusterSyncServiceInterval,enableSyncToken,minEventDelay,socketConnectTimeout,soTimeout,topologyConnectorUrls,topologyConnectorWhitelist,autoStopLocalLoopEnabled,gzipConnectorRequestsEnabled,hmacEnabled,enableEncryption,sharedKey,hmacSharedKeyTTL,backoffStandbyFactor,backoffStableFactor) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sharedKey" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hmacEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "hmacSharedKeyTTL" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "socketConnectTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "topologyConnectorWhitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "soTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "autoStopLocalLoopEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "gzipConnectorRequestsEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "clusterSyncServiceTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "topologyConnectorUrls" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "connectorPingInterval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "enableSyncToken" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "clusterSyncServiceInterval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "discoveryLiteCheckInterval" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "backoffStandbyFactor" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "connectorPingTimeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "backoffStableFactor" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "minEventDelay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "enableEncryption" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodname String  (optional)
 * hcPeriodtags List  (optional)
 * hcPeriodmbeanPeriodname String  (optional)
 * returns orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo
 **/
exports.orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodname,hcPeriodtags,hcPeriodmbeanPeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.mbean.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * title String  (optional)
 * details String  (optional)
 * enabled Boolean  (optional)
 * serviceName String  (optional)
 * logPeriodlevel String  (optional)
 * allowedPeriodroots List  (optional)
 * queuePeriodprocessingPeriodenabled Boolean  (optional)
 * packageImporterPeriodendpoints List  (optional)
 * passiveQueues List  (optional)
 * priorityQueues List  (optional)
 * retryPeriodstrategy String  (optional)
 * retryPeriodattempts Integer  (optional)
 * requestAuthorizationStrategyPeriodtarget String  (optional)
 * transportSecretProviderPeriodtarget String  (optional)
 * packageBuilderPeriodtarget String  (optional)
 * triggersPeriodtarget String  (optional)
 * queuePeriodprovider String  (optional)
 * asyncPerioddelivery Boolean  (optional)
 * httpPeriodconnPeriodtimeout Integer  (optional)
 * returns orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo
 **/
exports.orgApacheSlingDistributionAgentImplForwardDistributionAgentFacto = function(post,apply,_delete,action,Dollarlocation,propertylist,name,title,details,enabled,serviceName,logPeriodlevel,allowedPeriodroots,queuePeriodprocessingPeriodenabled,packageImporterPeriodendpoints,passiveQueues,priorityQueues,retryPeriodstrategy,retryPeriodattempts,requestAuthorizationStrategyPeriodtarget,transportSecretProviderPeriodtarget,packageBuilderPeriodtarget,triggersPeriodtarget,queuePeriodprovider,asyncPerioddelivery,httpPeriodconnPeriodtimeout) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "queue.processing.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "queue.provider" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "retry.strategy" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "priorityQueues" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "triggers.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "retry.attempts" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "title" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "passiveQueues" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "async.delivery" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "allowed.roots" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "requestAuthorizationStrategy.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "http.conn.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "log.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "details" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "transportSecretProvider.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageBuilder.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageImporter.endpoints" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * jcrPrivilege String  (optional)
 * returns orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo
 **/
exports.orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA = function(post,apply,_delete,action,Dollarlocation,propertylist,name,jcrPrivilege) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jcrPrivilege" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * title String  (optional)
 * details String  (optional)
 * enabled Boolean  (optional)
 * serviceName String  (optional)
 * logPeriodlevel String  (optional)
 * allowedPeriodroots List  (optional)
 * requestAuthorizationStrategyPeriodtarget String  (optional)
 * queueProviderFactoryPeriodtarget String  (optional)
 * packageBuilderPeriodtarget String  (optional)
 * triggersPeriodtarget String  (optional)
 * priorityQueues List  (optional)
 * returns orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo
 **/
exports.orgApacheSlingDistributionAgentImplQueueDistributionAgentFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,name,title,details,enabled,serviceName,logPeriodlevel,allowedPeriodroots,requestAuthorizationStrategyPeriodtarget,queueProviderFactoryPeriodtarget,packageBuilderPeriodtarget,triggersPeriodtarget,priorityQueues) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "allowed.roots" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "triggers.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "priorityQueues" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "requestAuthorizationStrategy.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "log.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "details" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "title" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "queueProviderFactory.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "packageBuilder.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * title String  (optional)
 * details String  (optional)
 * enabled Boolean  (optional)
 * serviceName String  (optional)
 * logPeriodlevel String  (optional)
 * queuePeriodprocessingPeriodenabled Boolean  (optional)
 * packageExporterPeriodendpoints List  (optional)
 * pullPerioditems Integer  (optional)
 * httpPeriodconnPeriodtimeout Integer  (optional)
 * requestAuthorizationStrategyPeriodtarget String  (optional)
 * transportSecretProviderPeriodtarget String  (optional)
 * packageBuilderPeriodtarget String  (optional)
 * triggersPeriodtarget String  (optional)
 * returns orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo
 **/
exports.orgApacheSlingDistributionAgentImplReverseDistributionAgentFacto = function(post,apply,_delete,action,Dollarlocation,propertylist,name,title,details,enabled,serviceName,logPeriodlevel,queuePeriodprocessingPeriodenabled,packageExporterPeriodendpoints,pullPerioditems,httpPeriodconnPeriodtimeout,requestAuthorizationStrategyPeriodtarget,transportSecretProviderPeriodtarget,packageBuilderPeriodtarget,triggersPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "queue.processing.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "triggers.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageExporter.endpoints" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "title" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "pull.items" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "http.conn.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "requestAuthorizationStrategy.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "log.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "details" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "transportSecretProvider.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageBuilder.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * title String  (optional)
 * details String  (optional)
 * enabled Boolean  (optional)
 * serviceName String  (optional)
 * logPeriodlevel String  (optional)
 * queuePeriodprocessingPeriodenabled Boolean  (optional)
 * packageExporterPeriodtarget String  (optional)
 * packageImporterPeriodtarget String  (optional)
 * requestAuthorizationStrategyPeriodtarget String  (optional)
 * triggersPeriodtarget String  (optional)
 * returns orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo
 **/
exports.orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor = function(post,apply,_delete,action,Dollarlocation,propertylist,name,title,details,enabled,serviceName,logPeriodlevel,queuePeriodprocessingPeriodenabled,packageExporterPeriodtarget,packageImporterPeriodtarget,requestAuthorizationStrategyPeriodtarget,triggersPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "queue.processing.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "triggers.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "requestAuthorizationStrategy.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "log.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "details" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "title" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageExporter.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageImporter.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * title String  (optional)
 * details String  (optional)
 * enabled Boolean  (optional)
 * serviceName String  (optional)
 * logPeriodlevel String  (optional)
 * queuePeriodprocessingPeriodenabled Boolean  (optional)
 * passiveQueues List  (optional)
 * packageExporterPeriodendpoints List  (optional)
 * packageImporterPeriodendpoints List  (optional)
 * retryPeriodstrategy String  (optional)
 * retryPeriodattempts Integer  (optional)
 * pullPerioditems Integer  (optional)
 * httpPeriodconnPeriodtimeout Integer  (optional)
 * requestAuthorizationStrategyPeriodtarget String  (optional)
 * transportSecretProviderPeriodtarget String  (optional)
 * packageBuilderPeriodtarget String  (optional)
 * triggersPeriodtarget String  (optional)
 * returns orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo
 **/
exports.orgApacheSlingDistributionAgentImplSyncDistributionAgentFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,name,title,details,enabled,serviceName,logPeriodlevel,queuePeriodprocessingPeriodenabled,passiveQueues,packageExporterPeriodendpoints,packageImporterPeriodendpoints,retryPeriodstrategy,retryPeriodattempts,pullPerioditems,httpPeriodconnPeriodtimeout,requestAuthorizationStrategyPeriodtarget,transportSecretProviderPeriodtarget,packageBuilderPeriodtarget,triggersPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "queue.processing.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "retry.strategy" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "triggers.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageExporter.endpoints" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "retry.attempts" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "title" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "passiveQueues" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "pull.items" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "http.conn.timeout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "requestAuthorizationStrategy.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "log.level" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "details" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "transportSecretProvider.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageBuilder.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageImporter.endpoints" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodname String  (optional)
 * hcPeriodtags List  (optional)
 * hcPeriodmbeanPeriodname String  (optional)
 * numberOfRetriesAllowed Integer  (optional)
 * returns orgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo
 **/
exports.orgApacheSlingDistributionMonitorDistributionQueueHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodname,hcPeriodtags,hcPeriodmbeanPeriodname,numberOfRetriesAllowed) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "numberOfRetriesAllowed" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.mbean.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * queue String  (optional)
 * dropPeriodinvalidPerioditems Boolean  (optional)
 * agentPeriodtarget String  (optional)
 * returns orgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo
 **/
exports.orgApacheSlingDistributionPackagingImplExporterAgentDistributio = function(post,apply,_delete,action,Dollarlocation,propertylist,name,queue,dropPeriodinvalidPerioditems,agentPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "agent.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "drop.invalid.items" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "queue" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * packageBuilderPeriodtarget String  (optional)
 * returns orgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo
 **/
exports.orgApacheSlingDistributionPackagingImplExporterLocalDistributio = function(post,apply,_delete,action,Dollarlocation,propertylist,name,packageBuilderPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageBuilder.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * endpoints List  (optional)
 * pullPerioditems Integer  (optional)
 * packageBuilderPeriodtarget String  (optional)
 * transportSecretProviderPeriodtarget String  (optional)
 * returns orgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo
 **/
exports.orgApacheSlingDistributionPackagingImplExporterRemoteDistributi = function(post,apply,_delete,action,Dollarlocation,propertylist,name,endpoints,pullPerioditems,packageBuilderPeriodtarget,transportSecretProviderPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "endpoints" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "pull.items" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "transportSecretProvider.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageBuilder.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * packageBuilderPeriodtarget String  (optional)
 * returns orgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo
 **/
exports.orgApacheSlingDistributionPackagingImplImporterLocalDistributio = function(post,apply,_delete,action,Dollarlocation,propertylist,name,packageBuilderPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "packageBuilder.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * endpoints List  (optional)
 * transportSecretProviderPeriodtarget String  (optional)
 * returns orgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo
 **/
exports.orgApacheSlingDistributionPackagingImplImporterRemoteDistributi = function(post,apply,_delete,action,Dollarlocation,propertylist,name,endpoints,transportSecretProviderPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "endpoints" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "transportSecretProvider.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * servicePeriodname String  (optional)
 * path String  (optional)
 * privilegePeriodname String  (optional)
 * returns orgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo
 **/
exports.orgApacheSlingDistributionPackagingImplImporterRepositoryDistri = function(post,apply,_delete,action,Dollarlocation,propertylist,name,servicePeriodname,path,privilegePeriodname) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "privilege.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * providerPeriodroots String  (optional)
 * kind String  (optional)
 * returns orgApacheSlingDistributionResourcesImplDistributionConfigurationInfo
 **/
exports.orgApacheSlingDistributionResourcesImplDistributionConfiguration = function(post,apply,_delete,action,Dollarlocation,propertylist,providerPeriodroots,kind) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "kind" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "provider.roots" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * providerPeriodroots String  (optional)
 * kind String  (optional)
 * returns orgApacheSlingDistributionResourcesImplDistributionServiceResourInfo
 **/
exports.orgApacheSlingDistributionResourcesImplDistributionServiceResour = function(post,apply,_delete,action,Dollarlocation,propertylist,providerPeriodroots,kind) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "kind" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "provider.roots" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * type String  (optional)
 * formatPeriodtarget String  (optional)
 * tempFsFolder String  (optional)
 * fileThreshold Integer  (optional)
 * memoryUnit String  (optional)
 * useOffHeapMemory Boolean  (optional)
 * digestAlgorithm String  (optional)
 * monitoringQueueSize Integer  (optional)
 * cleanupDelay Integer  (optional)
 * packagePeriodfilters List  (optional)
 * propertyPeriodfilters List  (optional)
 * returns orgApacheSlingDistributionSerializationImplDistributionPackageBuInfo
 **/
exports.orgApacheSlingDistributionSerializationImplDistributionPackageBu = function(post,apply,_delete,action,Dollarlocation,propertylist,name,type,formatPeriodtarget,tempFsFolder,fileThreshold,memoryUnit,useOffHeapMemory,digestAlgorithm,monitoringQueueSize,cleanupDelay,packagePeriodfilters,propertyPeriodfilters) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "format.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cleanupDelay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "fileThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "monitoringQueueSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "property.filters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "memoryUnit" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "useOffHeapMemory" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "digestAlgorithm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "package.filters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "tempFsFolder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * type String  (optional)
 * importMode String  (optional)
 * aclHandling String  (optional)
 * packagePeriodroots String  (optional)
 * packagePeriodfilters List  (optional)
 * propertyPeriodfilters List  (optional)
 * tempFsFolder String  (optional)
 * useBinaryReferences Boolean  (optional)
 * autoSaveThreshold Integer  (optional)
 * cleanupDelay Integer  (optional)
 * fileThreshold Integer  (optional)
 * mEGAUnderscoreBYTES String  (optional)
 * useOffHeapMemory Boolean  (optional)
 * digestAlgorithm String  (optional)
 * monitoringQueueSize Integer  (optional)
 * pathsMapping List  (optional)
 * strictImport Boolean  (optional)
 * returns orgApacheSlingDistributionSerializationImplVltVaultDistributionInfo
 **/
exports.orgApacheSlingDistributionSerializationImplVltVaultDistribution = function(post,apply,_delete,action,Dollarlocation,propertylist,name,type,importMode,aclHandling,packagePeriodroots,packagePeriodfilters,propertyPeriodfilters,tempFsFolder,useBinaryReferences,autoSaveThreshold,cleanupDelay,fileThreshold,mEGAUnderscoreBYTES,useOffHeapMemory,digestAlgorithm,monitoringQueueSize,pathsMapping,strictImport) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "pathsMapping" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "importMode" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cleanupDelay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "MEGA_BYTES" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "aclHandling" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "digestAlgorithm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "strictImport" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "package.roots" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "property.filters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "fileThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "monitoringQueueSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "useOffHeapMemory" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "useBinaryReferences" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "package.filters" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "tempFsFolder" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "autoSaveThreshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * username String  (optional)
 * password String  (optional)
 * returns orgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo
 **/
exports.orgApacheSlingDistributionTransportImplUserCredentialsDistributi = function(post,apply,_delete,action,Dollarlocation,propertylist,name,username,password) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "username" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * path String  (optional)
 * returns orgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo
 **/
exports.orgApacheSlingDistributionTriggerImplDistributionEventDistribute = function(post,apply,_delete,action,Dollarlocation,propertylist,name,path) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * path String  (optional)
 * ignoredPathsPatterns List  (optional)
 * serviceName String  (optional)
 * deep Boolean  (optional)
 * returns orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo
 **/
exports.orgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger = function(post,apply,_delete,action,Dollarlocation,propertylist,name,path,ignoredPathsPatterns,serviceName,deep) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "deep" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "ignoredPathsPatterns" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * path String  (optional)
 * serviceName String  (optional)
 * nuggetsPath String  (optional)
 * returns orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo
 **/
exports.orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi = function(post,apply,_delete,action,Dollarlocation,propertylist,name,path,serviceName,nuggetsPath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "nuggetsPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * endpoint String  (optional)
 * transportSecretProviderPeriodtarget String  (optional)
 * returns orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo
 **/
exports.orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig = function(post,apply,_delete,action,Dollarlocation,propertylist,name,endpoint,transportSecretProviderPeriodtarget) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "endpoint" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "transportSecretProvider.target" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * path String  (optional)
 * returns orgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo
 **/
exports.orgApacheSlingDistributionTriggerImplResourceEventDistributionTr = function(post,apply,_delete,action,Dollarlocation,propertylist,name,path) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * path String  (optional)
 * seconds String  (optional)
 * serviceName String  (optional)
 * returns orgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo
 **/
exports.orgApacheSlingDistributionTriggerImplScheduledDistributionTrigge = function(post,apply,_delete,action,Dollarlocation,propertylist,name,path,seconds,serviceName) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "seconds" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "serviceName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect String  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodlistener String  (optional)
 * authPeriodsudoPeriodcookie String  (optional)
 * authPeriodsudoPeriodparameter String  (optional)
 * authPeriodannonymous Boolean  (optional)
 * slingPeriodauthPeriodrequirements List  (optional)
 * slingPeriodauthPeriodanonymousPerioduser String  (optional)
 * slingPeriodauthPeriodanonymousPeriodpassword String  (optional)
 * authPeriodhttp String  (optional)
 * authPeriodhttpPeriodrealm String  (optional)
 * authPerioduriPeriodsuffix List  (optional)
 * returns orgApacheSlingEngineImplAuthSlingAuthenticatorInfo
 **/
exports.orgApacheSlingEngineImplAuthSlingAuthenticator = function(post,apply,_delete,action,Dollarlocation,propertylist,osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect,osgiPeriodhttpPeriodwhiteboardPeriodlistener,authPeriodsudoPeriodcookie,authPeriodsudoPeriodparameter,authPeriodannonymous,slingPeriodauthPeriodrequirements,slingPeriodauthPeriodanonymousPerioduser,slingPeriodauthPeriodanonymousPeriodpassword,authPeriodhttp,authPeriodhttpPeriodrealm,authPerioduriPeriodsuffix) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.auth.anonymous.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.sudo.cookie" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.auth.anonymous.password" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.http" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "osgi.http.whiteboard.listener" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.auth.requirements" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "osgi.http.whiteboard.context.select" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.sudo.parameter" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "auth.annonymous" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "auth.uri.suffix" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "auth.http.realm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * extensions List  (optional)
 * minDurationMs Integer  (optional)
 * maxDurationMs Integer  (optional)
 * compactLogFormat Boolean  (optional)
 * returns orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo
 **/
exports.orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,extensions,minDurationMs,maxDurationMs,compactLogFormat) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "extensions" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "compactLogFormat" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "minDurationMs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "maxDurationMs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * requestPeriodlogPeriodoutput String  (optional)
 * requestPeriodlogPeriodoutputtype Integer  (optional)
 * requestPeriodlogPeriodenabled Boolean  (optional)
 * accessPeriodlogPeriodoutput String  (optional)
 * accessPeriodlogPeriodoutputtype Integer  (optional)
 * accessPeriodlogPeriodenabled Boolean  (optional)
 * returns orgApacheSlingEngineImplLogRequestLoggerInfo
 **/
exports.orgApacheSlingEngineImplLogRequestLogger = function(post,apply,_delete,action,Dollarlocation,propertylist,requestPeriodlogPeriodoutput,requestPeriodlogPeriodoutputtype,requestPeriodlogPeriodenabled,accessPeriodlogPeriodoutput,accessPeriodlogPeriodoutputtype,accessPeriodlogPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "access.log.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "request.log.output" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "access.log.output" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "request.log.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "access.log.outputtype" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "request.log.outputtype" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * requestPeriodlogPeriodservicePeriodformat String  (optional)
 * requestPeriodlogPeriodservicePeriodoutput String  (optional)
 * requestPeriodlogPeriodservicePeriodoutputtype Integer  (optional)
 * requestPeriodlogPeriodservicePeriodonentry Boolean  (optional)
 * returns orgApacheSlingEngineImplLogRequestLoggerServiceInfo
 **/
exports.orgApacheSlingEngineImplLogRequestLoggerService = function(post,apply,_delete,action,Dollarlocation,propertylist,requestPeriodlogPeriodservicePeriodformat,requestPeriodlogPeriodservicePeriodoutput,requestPeriodlogPeriodservicePeriodoutputtype,requestPeriodlogPeriodservicePeriodonentry) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "request.log.service.output" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "request.log.service.outputtype" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "request.log.service.format" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "request.log.service.onentry" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodmaxPeriodcalls Integer  (optional)
 * slingPeriodmaxPeriodinclusions Integer  (optional)
 * slingPeriodtracePeriodallow Boolean  (optional)
 * slingPeriodmaxPeriodrecordPeriodrequests Integer  (optional)
 * slingPeriodstorePeriodpatternPeriodrequests List  (optional)
 * slingPeriodserverinfo String  (optional)
 * slingPeriodadditionalPeriodresponsePeriodheaders List  (optional)
 * returns orgApacheSlingEngineImplSlingMainServletInfo
 **/
exports.orgApacheSlingEngineImplSlingMainServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodmaxPeriodcalls,slingPeriodmaxPeriodinclusions,slingPeriodtracePeriodallow,slingPeriodmaxPeriodrecordPeriodrequests,slingPeriodstorePeriodpatternPeriodrequests,slingPeriodserverinfo,slingPeriodadditionalPeriodresponsePeriodheaders) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.max.inclusions" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "sling.trace.allow" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "sling.store.pattern.requests" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "sling.serverinfo" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.max.record.requests" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "sling.additional.response.headers" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "sling.max.calls" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPerioddefaultPeriodparameterPeriodencoding String  (optional)
 * slingPerioddefaultPeriodmaxPeriodparameters Integer  (optional)
 * filePeriodlocation String  (optional)
 * filePeriodthreshold Integer  (optional)
 * filePeriodmax Integer  (optional)
 * requestPeriodmax Integer  (optional)
 * slingPerioddefaultPeriodparameterPeriodcheckForAdditionalContainerParameters Boolean  (optional)
 * returns orgApacheSlingEngineParametersInfo
 **/
exports.orgApacheSlingEngineParameters = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPerioddefaultPeriodparameterPeriodencoding,slingPerioddefaultPeriodmaxPeriodparameters,filePeriodlocation,filePeriodthreshold,filePeriodmax,requestPeriodmax,slingPerioddefaultPeriodparameterPeriodcheckForAdditionalContainerParameters) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.default.parameter.encoding" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "file.location" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "file.threshold" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "file.max" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "sling.default.max.parameters" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "sling.default.parameter.checkForAdditionalContainerParameters" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "request.max" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * minPoolSize Integer  (optional)
 * returns orgApacheSlingEventImplEventingThreadPoolInfo
 **/
exports.orgApacheSlingEventImplEventingThreadPool = function(post,apply,_delete,action,Dollarlocation,propertylist,minPoolSize) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "minPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * queuePeriodpriority String  (optional)
 * queuePeriodretries Integer  (optional)
 * queuePeriodretrydelay Integer  (optional)
 * queuePeriodmaxparallel Integer  (optional)
 * returns orgApacheSlingEventImplJobsDefaultJobManagerInfo
 **/
exports.orgApacheSlingEventImplJobsDefaultJobManager = function(post,apply,_delete,action,Dollarlocation,propertylist,queuePeriodpriority,queuePeriodretries,queuePeriodretrydelay,queuePeriodmaxparallel) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "queue.priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "queue.retrydelay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "queue.maxparallel" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "queue.retries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jobPeriodconsumermanagerPerioddisableDistribution Boolean  (optional)
 * startupPerioddelay Integer  (optional)
 * cleanupPeriodperiod Integer  (optional)
 * returns orgApacheSlingEventImplJobsJcrPersistenceHandlerInfo
 **/
exports.orgApacheSlingEventImplJobsJcrPersistenceHandler = function(post,apply,_delete,action,Dollarlocation,propertylist,jobPeriodconsumermanagerPerioddisableDistribution,startupPerioddelay,cleanupPeriodperiod) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "job.consumermanager.disableDistribution" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "startup.delay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "cleanup.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist Boolean  (optional)
 * jobPeriodconsumermanagerPeriodwhitelist List  (optional)
 * jobPeriodconsumermanagerPeriodblacklist List  (optional)
 * returns orgApacheSlingEventImplJobsJobConsumerManagerInfo
 **/
exports.orgApacheSlingEventImplJobsJobConsumerManager = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodslingPeriodinstallerPeriodconfigurationPeriodpersist,jobPeriodconsumermanagerPeriodwhitelist,jobPeriodconsumermanagerPeriodblacklist) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "job.consumermanager.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "job.consumermanager.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "org.apache.sling.installer.configuration.persist" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * queuePeriodname String  (optional)
 * queuePeriodtopics List  (optional)
 * queuePeriodtype String  (optional)
 * queuePeriodpriority String  (optional)
 * queuePeriodretries Integer  (optional)
 * queuePeriodretrydelay Integer  (optional)
 * queuePeriodmaxparallel BigDecimal  (optional)
 * queuePeriodkeepJobs Boolean  (optional)
 * queuePeriodpreferRunOnCreationInstance Boolean  (optional)
 * queuePeriodthreadPoolSize Integer  (optional)
 * servicePeriodranking Integer  (optional)
 * returns orgApacheSlingEventJobsQueueConfigurationInfo
 **/
exports.orgApacheSlingEventJobsQueueConfiguration = function(post,apply,_delete,action,Dollarlocation,propertylist,queuePeriodname,queuePeriodtopics,queuePeriodtype,queuePeriodpriority,queuePeriodretries,queuePeriodretrydelay,queuePeriodmaxparallel,queuePeriodkeepJobs,queuePeriodpreferRunOnCreationInstance,queuePeriodthreadPoolSize,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "queue.priority" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "queue.retrydelay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "queue.maxparallel" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : 6.02745618307040320615897144307382404804229736328125
    },
    "queue.retries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "queue.threadPoolSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "queue.topics" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "queue.keepJobs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "queue.preferRunOnCreationInstance" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "queue.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "queue.type" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : {
        "values" : "",
        "labels" : ""
      },
      "value" : ""
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * users List  (optional)
 * groups List  (optional)
 * returns orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo
 **/
exports.orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW = function(post,apply,_delete,action,Dollarlocation,propertylist,users,groups) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "groups" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "users" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * description String  (optional)
 * enabled Boolean  (optional)
 * returns orgApacheSlingFeatureflagsFeatureInfo
 **/
exports.orgApacheSlingFeatureflagsFeature = function(post,apply,_delete,action,Dollarlocation,propertylist,name,description,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "description" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * name String  (optional)
 * description String  (optional)
 * enabled Boolean  (optional)
 * returns orgApacheSlingFeatureflagsImplConfiguredFeatureInfo
 **/
exports.orgApacheSlingFeatureflagsImplConfiguredFeature = function(post,apply,_delete,action,Dollarlocation,propertylist,name,description,enabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "description" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodresourcetype String  (optional)
 * orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodcollectionresourcetype String  (optional)
 * orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodsearchpaths List  (optional)
 * orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodexternalurl String  (optional)
 * orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodenabled Boolean  (optional)
 * returns orgApacheSlingHapiImplHApiUtilImplInfo
 **/
exports.orgApacheSlingHapiImplHApiUtilImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodresourcetype,orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodcollectionresourcetype,orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodsearchpaths,orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodexternalurl,orgPeriodapachePeriodslingPeriodhapiPeriodtoolsPeriodenabled) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.sling.hapi.tools.externalurl" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.hapi.tools.collectionresourcetype" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.hapi.tools.enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "org.apache.sling.hapi.tools.resourcetype" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "org.apache.sling.hapi.tools.searchpaths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodname String  (optional)
 * hcPeriodtags List  (optional)
 * hcPeriodmbeanPeriodname String  (optional)
 * filterPeriodtags List  (optional)
 * filterPeriodcombineTagsWithOr Boolean  (optional)
 * returns orgApacheSlingHcCoreImplCompositeHealthCheckInfo
 **/
exports.orgApacheSlingHcCoreImplCompositeHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodname,hcPeriodtags,hcPeriodmbeanPeriodname,filterPeriodtags,filterPeriodcombineTagsWithOr) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "filter.combineTagsWithOr" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "hc.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "filter.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.mbean.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * timeoutInMs Integer  (optional)
 * longRunningFutureThresholdForCriticalMs Integer  (optional)
 * resultCacheTtlInMs Integer  (optional)
 * returns orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo
 **/
exports.orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,timeoutInMs,longRunningFutureThresholdForCriticalMs,resultCacheTtlInMs) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "longRunningFutureThresholdForCriticalMs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "timeoutInMs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "resultCacheTtlInMs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodname String  (optional)
 * hcPeriodtags List  (optional)
 * hcPeriodmbeanPeriodname String  (optional)
 * mbeanPeriodname String  (optional)
 * attributePeriodname String  (optional)
 * attributePeriodvaluePeriodconstraint String  (optional)
 * returns orgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo
 **/
exports.orgApacheSlingHcCoreImplJmxAttributeHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodname,hcPeriodtags,hcPeriodmbeanPeriodname,mbeanPeriodname,attributePeriodname,attributePeriodvaluePeriodconstraint) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "mbean.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "attribute.value.constraint" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "hc.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.mbean.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "attribute.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * hcPeriodname String  (optional)
 * hcPeriodtags List  (optional)
 * hcPeriodmbeanPeriodname String  (optional)
 * expression String  (optional)
 * languagePeriodextension String  (optional)
 * returns orgApacheSlingHcCoreImplScriptableHealthCheckInfo
 **/
exports.orgApacheSlingHcCoreImplScriptableHealthCheck = function(post,apply,_delete,action,Dollarlocation,propertylist,hcPeriodname,hcPeriodtags,hcPeriodmbeanPeriodname,expression,languagePeriodextension) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.tags" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "language.extension" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "hc.mbean.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servletPath String  (optional)
 * disabled Boolean  (optional)
 * corsPeriodaccessControlAllowOrigin String  (optional)
 * returns orgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo
 **/
exports.orgApacheSlingHcCoreImplServletHealthCheckExecutorServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,servletPath,disabled,corsPeriodaccessControlAllowOrigin) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "servletPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "cors.accessControlAllowOrigin" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "disabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * totalWidth Integer  (optional)
 * colWidthName Integer  (optional)
 * colWidthResult Integer  (optional)
 * colWidthTiming Integer  (optional)
 * returns orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo
 **/
exports.orgApacheSlingHcCoreImplServletResultTxtVerboseSerializer = function(post,apply,_delete,action,Dollarlocation,propertylist,totalWidth,colWidthName,colWidthResult,colWidthTiming) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "colWidthName" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "totalWidth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "colWidthTiming" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "colWidthResult" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * slingPeriodfilterPeriodscope List  (optional)
 * returns orgApacheSlingI18nImplI18NFilterInfo
 **/
exports.orgApacheSlingI18nImplI18NFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,slingPeriodfilterPeriodscope) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.filter.scope" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * localePerioddefault String  (optional)
 * preloadPeriodbundles Boolean  (optional)
 * invalidationPerioddelay Integer  (optional)
 * returns orgApacheSlingI18nImplJcrResourceBundleProviderInfo
 **/
exports.orgApacheSlingI18nImplJcrResourceBundleProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,localePerioddefault,preloadPeriodbundles,invalidationPerioddelay) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "invalidation.delay" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "preload.bundles" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "locale.default" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * handlerPeriodschemes List  (optional)
 * slingPeriodjcrinstallPeriodfolderPeriodnamePeriodregexp String  (optional)
 * slingPeriodjcrinstallPeriodfolderPeriodmaxPerioddepth Integer  (optional)
 * slingPeriodjcrinstallPeriodsearchPeriodpath List  (optional)
 * slingPeriodjcrinstallPeriodnewPeriodconfigPeriodpath String  (optional)
 * slingPeriodjcrinstallPeriodsignalPeriodpath String  (optional)
 * slingPeriodjcrinstallPeriodenablePeriodwriteback Boolean  (optional)
 * returns orgApacheSlingInstallerProviderJcrImplJcrInstallerInfo
 **/
exports.orgApacheSlingInstallerProviderJcrImplJcrInstaller = function(post,apply,_delete,action,Dollarlocation,propertylist,handlerPeriodschemes,slingPeriodjcrinstallPeriodfolderPeriodnamePeriodregexp,slingPeriodjcrinstallPeriodfolderPeriodmaxPerioddepth,slingPeriodjcrinstallPeriodsearchPeriodpath,slingPeriodjcrinstallPeriodnewPeriodconfigPeriodpath,slingPeriodjcrinstallPeriodsignalPeriodpath,slingPeriodjcrinstallPeriodenablePeriodwriteback) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.jcrinstall.search.path" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "sling.jcrinstall.enable.writeback" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "sling.jcrinstall.new.config.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.jcrinstall.signal.path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "handler.schemes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "sling.jcrinstall.folder.name.regexp" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.jcrinstall.folder.max.depth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * whitelistPeriodbypass Boolean  (optional)
 * whitelistPeriodbundlesPeriodregexp String  (optional)
 * returns orgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo
 **/
exports.orgApacheSlingJcrBaseInternalLoginAdminWhitelist = function(post,apply,_delete,action,Dollarlocation,propertylist,whitelistPeriodbypass,whitelistPeriodbundlesPeriodregexp) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "whitelist.bundles.regexp" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "whitelist.bypass" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * whitelistPeriodname String  (optional)
 * whitelistPeriodbundles List  (optional)
 * returns orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo
 **/
exports.orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment = function(post,apply,_delete,action,Dollarlocation,propertylist,whitelistPeriodname,whitelistPeriodbundles) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "whitelist.bundles" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "whitelist.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * alias String  (optional)
 * davPeriodcreateAbsoluteUri Boolean  (optional)
 * davPeriodprotectedhandlers String  (optional)
 * returns orgApacheSlingJcrDavexImplServletsSlingDavExServletInfo
 **/
exports.orgApacheSlingJcrDavexImplServletsSlingDavExServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,alias,davPeriodcreateAbsoluteUri,davPeriodprotectedhandlers) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "dav.protectedhandlers" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "alias" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dav.create-absolute-uri" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * javaPeriodnamingPeriodfactoryPeriodinitial String  (optional)
 * javaPeriodnamingPeriodproviderPeriodurl String  (optional)
 * returns orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo
 **/
exports.orgApacheSlingJcrJackrabbitServerJndiRegistrationSupport = function(post,apply,_delete,action,Dollarlocation,propertylist,javaPeriodnamingPeriodfactoryPeriodinitial,javaPeriodnamingPeriodproviderPeriodurl) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "java.naming.factory.initial" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "java.naming.provider.url" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * port Integer  (optional)
 * returns orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo
 **/
exports.orgApacheSlingJcrJackrabbitServerRmiRegistrationSupport = function(post,apply,_delete,action,Dollarlocation,propertylist,port) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "port" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * references List  (optional)
 * returns orgApacheSlingJcrRepoinitImplRepositoryInitializerInfo
 **/
exports.orgApacheSlingJcrRepoinitImplRepositoryInitializer = function(post,apply,_delete,action,Dollarlocation,propertylist,references) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "references" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * references List  (optional)
 * scripts List  (optional)
 * returns orgApacheSlingJcrRepoinitRepositoryInitializerInfo
 **/
exports.orgApacheSlingJcrRepoinitRepositoryInitializer = function(post,apply,_delete,action,Dollarlocation,propertylist,references,scripts) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "references" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "scripts" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * resourcePeriodresolverPeriodsearchpath List  (optional)
 * resourcePeriodresolverPeriodmanglenamespaces Boolean  (optional)
 * resourcePeriodresolverPeriodallowDirect Boolean  (optional)
 * resourcePeriodresolverPeriodrequiredPeriodproviders List  (optional)
 * resourcePeriodresolverPeriodrequiredPeriodprovidernames List  (optional)
 * resourcePeriodresolverPeriodvirtual List  (optional)
 * resourcePeriodresolverPeriodmapping List  (optional)
 * resourcePeriodresolverPeriodmapPeriodlocation String  (optional)
 * resourcePeriodresolverPeriodmapPeriodobservation List  (optional)
 * resourcePeriodresolverPerioddefaultPeriodvanityPeriodredirectPeriodstatus Integer  (optional)
 * resourcePeriodresolverPeriodenablePeriodvanitypath Boolean  (optional)
 * resourcePeriodresolverPeriodvanitypathPeriodmaxEntries Integer  (optional)
 * resourcePeriodresolverPeriodvanitypathPeriodmaxEntriesPeriodstartup Boolean  (optional)
 * resourcePeriodresolverPeriodvanitypathPeriodbloomfilterPeriodmaxBytes Integer  (optional)
 * resourcePeriodresolverPeriodoptimizePeriodaliasPeriodresolution Boolean  (optional)
 * resourcePeriodresolverPeriodvanitypathPeriodwhitelist List  (optional)
 * resourcePeriodresolverPeriodvanitypathPeriodblacklist List  (optional)
 * resourcePeriodresolverPeriodvanityPeriodprecedence Boolean  (optional)
 * resourcePeriodresolverPeriodproviderhandlingPeriodparanoid Boolean  (optional)
 * resourcePeriodresolverPeriodlogPeriodclosing Boolean  (optional)
 * resourcePeriodresolverPeriodlogPeriodunclosed Boolean  (optional)
 * returns orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo
 **/
exports.orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,resourcePeriodresolverPeriodsearchpath,resourcePeriodresolverPeriodmanglenamespaces,resourcePeriodresolverPeriodallowDirect,resourcePeriodresolverPeriodrequiredPeriodproviders,resourcePeriodresolverPeriodrequiredPeriodprovidernames,resourcePeriodresolverPeriodvirtual,resourcePeriodresolverPeriodmapping,resourcePeriodresolverPeriodmapPeriodlocation,resourcePeriodresolverPeriodmapPeriodobservation,resourcePeriodresolverPerioddefaultPeriodvanityPeriodredirectPeriodstatus,resourcePeriodresolverPeriodenablePeriodvanitypath,resourcePeriodresolverPeriodvanitypathPeriodmaxEntries,resourcePeriodresolverPeriodvanitypathPeriodmaxEntriesPeriodstartup,resourcePeriodresolverPeriodvanitypathPeriodbloomfilterPeriodmaxBytes,resourcePeriodresolverPeriodoptimizePeriodaliasPeriodresolution,resourcePeriodresolverPeriodvanitypathPeriodwhitelist,resourcePeriodresolverPeriodvanitypathPeriodblacklist,resourcePeriodresolverPeriodvanityPeriodprecedence,resourcePeriodresolverPeriodproviderhandlingPeriodparanoid,resourcePeriodresolverPeriodlogPeriodclosing,resourcePeriodresolverPeriodlogPeriodunclosed) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "resource.resolver.searchpath" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resource.resolver.map.location" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "resource.resolver.providerhandling.paranoid" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "resource.resolver.enable.vanitypath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "resource.resolver.vanitypath.maxEntries" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "resource.resolver.log.closing" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "resource.resolver.vanitypath.maxEntries.startup" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "resource.resolver.vanity.precedence" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "resource.resolver.vanitypath.blacklist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resource.resolver.manglenamespaces" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "resource.resolver.vanitypath.bloomfilter.maxBytes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "resource.resolver.default.vanity.redirect.status" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "resource.resolver.optimize.alias.resolution" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "resource.resolver.log.unclosed" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "resource.resolver.allowDirect" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "resource.resolver.vanitypath.whitelist" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resource.resolver.required.providers" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resource.resolver.required.providernames" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resource.resolver.virtual" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resource.resolver.map.observation" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "resource.resolver.mapping" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * allowPeriodonlyPeriodsystemPerioduser Boolean  (optional)
 * returns orgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo
 **/
exports.orgApacheSlingJcrResourceInternalJcrSystemUserValidator = function(post,apply,_delete,action,Dollarlocation,propertylist,allowPeriodonlyPeriodsystemPerioduser) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "allow.only.system.user" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * path String  (optional)
 * checkpathPeriodprefix String  (optional)
 * jcrPath String  (optional)
 * returns orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo
 **/
exports.orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,path,checkpathPeriodprefix,jcrPath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "checkpath.prefix" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jcrPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * typePeriodcollections String  (optional)
 * typePeriodnoncollections String  (optional)
 * typePeriodcontent String  (optional)
 * returns orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo
 **/
exports.orgApacheSlingJcrWebdavImplHandlerDefaultHandlerService = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,typePeriodcollections,typePeriodnoncollections,typePeriodcontent) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "type.content" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "type.collections" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "type.noncollections" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * returns orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo
 **/
exports.orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * davPeriodroot String  (optional)
 * davPeriodcreateAbsoluteUri Boolean  (optional)
 * davPeriodrealm String  (optional)
 * collectionPeriodtypes List  (optional)
 * filterPeriodprefixes List  (optional)
 * filterPeriodtypes String  (optional)
 * filterPerioduris String  (optional)
 * typePeriodcollections String  (optional)
 * typePeriodnoncollections String  (optional)
 * typePeriodcontent String  (optional)
 * returns orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo
 **/
exports.orgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,davPeriodroot,davPeriodcreateAbsoluteUri,davPeriodrealm,collectionPeriodtypes,filterPeriodprefixes,filterPeriodtypes,filterPerioduris,typePeriodcollections,typePeriodnoncollections,typePeriodcontent) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "filter.prefixes" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "type.content" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "type.collections" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "collection.types" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "type.noncollections" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "filter.types" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dav.realm" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dav.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "dav.create-absolute-uri" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "filter.uris" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * providerPeriodroots String  (optional)
 * returns orgApacheSlingJmxProviderImplJMXResourceProviderInfo
 **/
exports.orgApacheSlingJmxProviderImplJMXResourceProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,providerPeriodroots) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "provider.roots" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodlistener String  (optional)
 * osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect String  (optional)
 * maxPeriodrecursionPerioddepth Integer  (optional)
 * cleanupPeriodjobPeriodperiod Integer  (optional)
 * returns orgApacheSlingModelsImplModelAdapterFactoryInfo
 **/
exports.orgApacheSlingModelsImplModelAdapterFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,osgiPeriodhttpPeriodwhiteboardPeriodlistener,osgiPeriodhttpPeriodwhiteboardPeriodcontextPeriodselect,maxPeriodrecursionPerioddepth,cleanupPeriodjobPeriodperiod) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "cleanup.job.period" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "osgi.http.whiteboard.listener" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "osgi.http.whiteboard.context.select" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "max.recursion.depth" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * maxPeriodrecursionPeriodlevels Integer  (optional)
 * returns orgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo
 **/
exports.orgApacheSlingModelsJacksonexporterImplResourceModuleProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,maxPeriodrecursionPeriodlevels) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "max.recursion.levels" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * felixPeriodinventoryPeriodprinterPeriodname String  (optional)
 * felixPeriodinventoryPeriodprinterPeriodtitle String  (optional)
 * path String  (optional)
 * returns orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo
 **/
exports.orgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto = function(post,apply,_delete,action,Dollarlocation,propertylist,felixPeriodinventoryPeriodprinterPeriodname,felixPeriodinventoryPeriodprinterPeriodtitle,path) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "felix.inventory.printer.title" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "path" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "felix.inventory.printer.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mergePeriodroot String  (optional)
 * mergePeriodreadOnly Boolean  (optional)
 * returns orgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo
 **/
exports.orgApacheSlingResourcemergerImplMergedResourceProviderFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,mergePeriodroot,mergePeriodreadOnly) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "merge.readOnly" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "merge.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * mergePeriodroot String  (optional)
 * mergePeriodreadOnly Boolean  (optional)
 * returns orgApacheSlingResourcemergerPickerOverridingInfo
 **/
exports.orgApacheSlingResourcemergerPickerOverriding = function(post,apply,_delete,action,Dollarlocation,propertylist,mergePeriodroot,mergePeriodreadOnly) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "additionalProperties" : "additionalProperties",
  "title" : "title",
  "properties" : {
    "merge.readOnly" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "merge.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodsize Integer  (optional)
 * orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodadditionalUnderscoreextensions List  (optional)
 * returns orgApacheSlingScriptingCoreImplScriptCacheImplInfo
 **/
exports.orgApacheSlingScriptingCoreImplScriptCacheImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodsize,orgPeriodapachePeriodslingPeriodscriptingPeriodcachePeriodadditionalUnderscoreextensions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.sling.scripting.cache.size" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "org.apache.sling.scripting.cache.additional_extensions" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * logPeriodstacktracePeriodonclose Boolean  (optional)
 * returns orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo
 **/
exports.orgApacheSlingScriptingCoreImplScriptingResourceResolverProvider = function(post,apply,_delete,action,Dollarlocation,propertylist,logPeriodstacktracePeriodonclose) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "log.stacktrace.onclose" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * javaPeriodclassdebuginfo Boolean  (optional)
 * javaPeriodjavaEncoding String  (optional)
 * javaPeriodcompilerSourceVM String  (optional)
 * javaPeriodcompilerTargetVM String  (optional)
 * returns orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo
 **/
exports.orgApacheSlingScriptingJavaImplJavaScriptEngineFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,javaPeriodclassdebuginfo,javaPeriodjavaEncoding,javaPeriodcompilerSourceVM,javaPeriodcompilerTargetVM) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "java.classdebuginfo" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "java.compilerSourceVM" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "java.compilerTargetVM" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "java.javaEncoding" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodslingPeriodscriptingPeriodjavascriptPeriodrhinoPeriodoptLevel Integer  (optional)
 * returns orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo
 **/
exports.orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodslingPeriodscriptingPeriodjavascriptPeriodrhinoPeriodoptLevel) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.sling.scripting.javascript.rhino.optLevel" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * jasperPeriodcompilerTargetVM String  (optional)
 * jasperPeriodcompilerSourceVM String  (optional)
 * jasperPeriodclassdebuginfo Boolean  (optional)
 * jasperPeriodenablePooling Boolean  (optional)
 * jasperPeriodieClassId String  (optional)
 * jasperPeriodgenStringAsCharArray Boolean  (optional)
 * jasperPeriodkeepgenerated Boolean  (optional)
 * jasperPeriodmappedfile Boolean  (optional)
 * jasperPeriodtrimSpaces Boolean  (optional)
 * jasperPerioddisplaySourceFragments Boolean  (optional)
 * defaultPeriodisPeriodsession Boolean  (optional)
 * returns orgApacheSlingScriptingJspJspScriptEngineFactoryInfo
 **/
exports.orgApacheSlingScriptingJspJspScriptEngineFactory = function(post,apply,_delete,action,Dollarlocation,propertylist,jasperPeriodcompilerTargetVM,jasperPeriodcompilerSourceVM,jasperPeriodclassdebuginfo,jasperPeriodenablePooling,jasperPeriodieClassId,jasperPeriodgenStringAsCharArray,jasperPeriodkeepgenerated,jasperPeriodmappedfile,jasperPeriodtrimSpaces,jasperPerioddisplaySourceFragments,defaultPeriodisPeriodsession) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "jasper.enablePooling" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "jasper.genStringAsCharArray" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "jasper.ieClassId" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jasper.keepgenerated" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "jasper.compilerSourceVM" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "jasper.displaySourceFragments" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "jasper.mappedfile" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "jasper.trimSpaces" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "jasper.compilerTargetVM" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "default.is.session" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "jasper.classdebuginfo" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodbindings List  (optional)
 * returns orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo
 **/
exports.orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv = function(post,apply,_delete,action,Dollarlocation,propertylist,orgPeriodapachePeriodslingPeriodscriptingPeriodsightlyPeriodjsPeriodbindings) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "org.apache.sling.scripting.sightly.js.bindings" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodcontentPerioddispositionPeriodpaths List  (optional)
 * slingPeriodcontentPerioddispositionPeriodexcludedPeriodpaths List  (optional)
 * slingPeriodcontentPerioddispositionPeriodallPeriodpaths Boolean  (optional)
 * returns orgApacheSlingSecurityImplContentDispositionFilterInfo
 **/
exports.orgApacheSlingSecurityImplContentDispositionFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodcontentPerioddispositionPeriodpaths,slingPeriodcontentPerioddispositionPeriodexcludedPeriodpaths,slingPeriodcontentPerioddispositionPeriodallPeriodpaths) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.content.disposition.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "sling.content.disposition.excluded.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "sling.content.disposition.all.paths" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * allowPeriodempty Boolean  (optional)
 * allowPeriodhosts List  (optional)
 * allowPeriodhostsPeriodregexp List  (optional)
 * filterPeriodmethods List  (optional)
 * excludePeriodagentsPeriodregexp List  (optional)
 * returns orgApacheSlingSecurityImplReferrerFilterInfo
 **/
exports.orgApacheSlingSecurityImplReferrerFilter = function(post,apply,_delete,action,Dollarlocation,propertylist,allowPeriodempty,allowPeriodhosts,allowPeriodhostsPeriodregexp,filterPeriodmethods,excludePeriodagentsPeriodregexp) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "allow.hosts" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "filter.methods" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "exclude.agents.regexp" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "allow.hosts.regexp" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "allow.empty" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * userPeriodmapping List  (optional)
 * userPerioddefault String  (optional)
 * userPeriodenablePerioddefaultPeriodmapping Boolean  (optional)
 * requirePeriodvalidation Boolean  (optional)
 * returns orgApacheSlingServiceusermappingImplServiceUserMapperImplInfo
 **/
exports.orgApacheSlingServiceusermappingImplServiceUserMapperImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,userPeriodmapping,userPerioddefault,userPeriodenablePerioddefaultPeriodmapping,requirePeriodvalidation) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "user.default" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "user.mapping" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "user.enable.default.mapping" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "require.validation" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servicePeriodranking Integer  (optional)
 * userPeriodmapping List  (optional)
 * returns orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo
 **/
exports.orgApacheSlingServiceusermappingImplServiceUserMapperImplAmended = function(post,apply,_delete,action,Dollarlocation,propertylist,servicePeriodranking,userPeriodmapping) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "user.mapping" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "service.ranking" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * aliases List  (optional)
 * index Boolean  (optional)
 * indexPeriodfiles List  (optional)
 * enablePeriodhtml Boolean  (optional)
 * enablePeriodjson Boolean  (optional)
 * enablePeriodtxt Boolean  (optional)
 * enablePeriodxml Boolean  (optional)
 * jsonPeriodmaximumresults Integer  (optional)
 * ecmaSuport Boolean  (optional)
 * returns orgApacheSlingServletsGetDefaultGetServletInfo
 **/
exports.orgApacheSlingServletsGetDefaultGetServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,aliases,index,indexPeriodfiles,enablePeriodhtml,enablePeriodjson,enablePeriodtxt,enablePeriodxml,jsonPeriodmaximumresults,ecmaSuport) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ecmaSuport" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "enable.txt" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "aliases" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enable.html" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "index" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "json.maximumresults" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "enable.xml" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "index.files" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "enable.json" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodservletPeriodselectors List  (optional)
 * ecmaSuport Boolean  (optional)
 * returns orgApacheSlingServletsGetImplVersionVersionInfoServletInfo
 **/
exports.orgApacheSlingServletsGetImplVersionVersionInfoServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodservletPeriodselectors,ecmaSuport) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "ecmaSuport" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "sling.servlet.selectors" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * schedulerPeriodexpression String  (optional)
 * schedulerPeriodconcurrent Boolean  (optional)
 * chunkPeriodcleanupPeriodage Integer  (optional)
 * returns orgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo
 **/
exports.orgApacheSlingServletsPostImplHelperChunkCleanUpTask = function(post,apply,_delete,action,Dollarlocation,propertylist,schedulerPeriodexpression,schedulerPeriodconcurrent,chunkPeriodcleanupPeriodage) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "scheduler.concurrent" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "scheduler.expression" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "chunk.cleanup.age" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servletPeriodpostPerioddateFormats List  (optional)
 * servletPeriodpostPeriodnodeNameHints List  (optional)
 * servletPeriodpostPeriodnodeNameMaxLength Integer  (optional)
 * servletPeriodpostPeriodcheckinNewVersionableNodes Boolean  (optional)
 * servletPeriodpostPeriodautoCheckout Boolean  (optional)
 * servletPeriodpostPeriodautoCheckin Boolean  (optional)
 * servletPeriodpostPeriodignorePattern String  (optional)
 * returns orgApacheSlingServletsPostImplSlingPostServletInfo
 **/
exports.orgApacheSlingServletsPostImplSlingPostServlet = function(post,apply,_delete,action,Dollarlocation,propertylist,servletPeriodpostPerioddateFormats,servletPeriodpostPeriodnodeNameHints,servletPeriodpostPeriodnodeNameMaxLength,servletPeriodpostPeriodcheckinNewVersionableNodes,servletPeriodpostPeriodautoCheckout,servletPeriodpostPeriodautoCheckin,servletPeriodpostPeriodignorePattern) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "servlet.post.dateFormats" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "servlet.post.checkinNewVersionableNodes" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "servlet.post.ignorePattern" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "servlet.post.autoCheckout" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "servlet.post.nodeNameHints" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "servlet.post.nodeNameMaxLength" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "servlet.post.autoCheckin" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * servletresolverPeriodservletRoot String  (optional)
 * servletresolverPeriodcacheSize Integer  (optional)
 * servletresolverPeriodpaths List  (optional)
 * servletresolverPerioddefaultExtensions List  (optional)
 * returns orgApacheSlingServletsResolverSlingServletResolverInfo
 **/
exports.orgApacheSlingServletsResolverSlingServletResolver = function(post,apply,_delete,action,Dollarlocation,propertylist,servletresolverPeriodservletRoot,servletresolverPeriodcacheSize,servletresolverPeriodpaths,servletresolverPerioddefaultExtensions) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "servletresolver.defaultExtensions" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "servletresolver.cacheSize" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "servletresolver.paths" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "servletresolver.servletRoot" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * slingPeriodname String  (optional)
 * slingPerioddescription String  (optional)
 * returns orgApacheSlingSettingsImplSlingSettingsServiceImplInfo
 **/
exports.orgApacheSlingSettingsImplSlingSettingsServiceImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,slingPeriodname,slingPerioddescription) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "sling.name" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "sling.description" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * activePeriodbyPerioddefault Boolean  (optional)
 * defaultPeriodmessage String  (optional)
 * returns orgApacheSlingStartupfilterImplStartupFilterImplInfo
 **/
exports.orgApacheSlingStartupfilterImplStartupFilterImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,activePeriodbyPerioddefault,defaultPeriodmessage) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "default.message" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "active.by.default" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * tenantPeriodroot String  (optional)
 * tenantPeriodpathPeriodmatcher List  (optional)
 * returns orgApacheSlingTenantInternalTenantProviderImplInfo
 **/
exports.orgApacheSlingTenantInternalTenantProviderImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,tenantPeriodroot,tenantPeriodpathPeriodmatcher) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "tenant.root" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    },
    "tenant.path.matcher" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * tracerSets List  (optional)
 * enabled Boolean  (optional)
 * servletEnabled Boolean  (optional)
 * recordingCacheSizeInMB Integer  (optional)
 * recordingCacheDurationInSecs Integer  (optional)
 * recordingCompressionEnabled Boolean  (optional)
 * gzipResponse Boolean  (optional)
 * returns orgApacheSlingTracerInternalLogTracerInfo
 **/
exports.orgApacheSlingTracerInternalLogTracer = function(post,apply,_delete,action,Dollarlocation,propertylist,tracerSets,enabled,servletEnabled,recordingCacheSizeInMB,recordingCacheDurationInSecs,recordingCompressionEnabled,gzipResponse) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "recordingCompressionEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "gzipResponse" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "servletEnabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    },
    "recordingCacheSizeInMB" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "tracerSets" : {
      "is_set" : true,
      "values" : [ "values", "values" ],
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0
    },
    "recordingCacheDurationInSecs" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 6,
      "value" : 1
    },
    "enabled" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : true
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}


/**
 *
 * post Boolean  (optional)
 * apply Boolean  (optional)
 * _delete Boolean  (optional)
 * action String  (optional)
 * Dollarlocation String  (optional)
 * propertylist List  (optional)
 * policyPath String  (optional)
 * returns orgApacheSlingXssImplXSSFilterImplInfo
 **/
exports.orgApacheSlingXssImplXSSFilterImpl = function(post,apply,_delete,action,Dollarlocation,propertylist,policyPath) {
  return new Promise(function(resolve, reject) {
    var examples = {};
    examples['application/json'] = {
  "service_location" : "service_location",
  "bundle_location" : "bundle_location",
  "description" : "description",
  "pid" : "pid",
  "title" : "title",
  "properties" : {
    "policyPath" : {
      "is_set" : true,
      "name" : "name",
      "description" : "description",
      "optional" : true,
      "type" : 0,
      "value" : "value"
    }
  }
};
    if (Object.keys(examples).length > 0) {
      resolve(examples[Object.keys(examples)[0]]);
    } else {
      resolve();
    }
  });
}

