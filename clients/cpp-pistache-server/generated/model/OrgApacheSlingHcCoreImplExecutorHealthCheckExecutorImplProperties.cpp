/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties()
{
    m_TimeoutInMsIsSet = false;
    m_LongRunningFutureThresholdForCriticalMsIsSet = false;
    m_ResultCacheTtlInMsIsSet = false;
    
}

OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::~OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties()
{
}

void OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_TimeoutInMsIsSet)
    {
        val["timeoutInMs"] = ModelBase::toJson(m_TimeoutInMs);
    }
    if(m_LongRunningFutureThresholdForCriticalMsIsSet)
    {
        val["longRunningFutureThresholdForCriticalMs"] = ModelBase::toJson(m_LongRunningFutureThresholdForCriticalMs);
    }
    if(m_ResultCacheTtlInMsIsSet)
    {
        val["resultCacheTtlInMs"] = ModelBase::toJson(m_ResultCacheTtlInMs);
    }
    

    return val;
}

void OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("timeoutInMs") != val.end())
    {
        if(!val["timeoutInMs"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["timeoutInMs"]);
            setTimeoutInMs( newItem );
        }
        
    }
    if(val.find("longRunningFutureThresholdForCriticalMs") != val.end())
    {
        if(!val["longRunningFutureThresholdForCriticalMs"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["longRunningFutureThresholdForCriticalMs"]);
            setLongRunningFutureThresholdForCriticalMs( newItem );
        }
        
    }
    if(val.find("resultCacheTtlInMs") != val.end())
    {
        if(!val["resultCacheTtlInMs"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["resultCacheTtlInMs"]);
            setResultCacheTtlInMs( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::getTimeoutInMs() const
{
    return m_TimeoutInMs;
}
void OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::setTimeoutInMs(ConfigNodePropertyInteger const& value)
{
    m_TimeoutInMs = value;
    m_TimeoutInMsIsSet = true;
}
bool OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::timeoutInMsIsSet() const
{
    return m_TimeoutInMsIsSet;
}
void OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::unsetTimeoutInMs()
{
    m_TimeoutInMsIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::getLongRunningFutureThresholdForCriticalMs() const
{
    return m_LongRunningFutureThresholdForCriticalMs;
}
void OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::setLongRunningFutureThresholdForCriticalMs(ConfigNodePropertyInteger const& value)
{
    m_LongRunningFutureThresholdForCriticalMs = value;
    m_LongRunningFutureThresholdForCriticalMsIsSet = true;
}
bool OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::longRunningFutureThresholdForCriticalMsIsSet() const
{
    return m_LongRunningFutureThresholdForCriticalMsIsSet;
}
void OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::unsetLongRunningFutureThresholdForCriticalMs()
{
    m_LongRunningFutureThresholdForCriticalMsIsSet = false;
}
ConfigNodePropertyInteger OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::getResultCacheTtlInMs() const
{
    return m_ResultCacheTtlInMs;
}
void OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::setResultCacheTtlInMs(ConfigNodePropertyInteger const& value)
{
    m_ResultCacheTtlInMs = value;
    m_ResultCacheTtlInMsIsSet = true;
}
bool OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::resultCacheTtlInMsIsSet() const
{
    return m_ResultCacheTtlInMsIsSet;
}
void OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties::unsetResultCacheTtlInMs()
{
    m_ResultCacheTtlInMsIsSet = false;
}

}
}
}
}

