/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties() {
    init();
}

OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::~OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties() {
    this->cleanup();
}

void
OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::init() {
    device_registration_timeout = new OAIConfigNodePropertyInteger();
    m_device_registration_timeout_isSet = false;
}

void
OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::cleanup() {
    if(device_registration_timeout != nullptr) { 
        delete device_registration_timeout;
    }
}

OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties*
OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&device_registration_timeout, pJson["deviceRegistrationTimeout"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::asJsonObject() {
    QJsonObject obj;
    if((device_registration_timeout != nullptr) && (device_registration_timeout->isSet())){
        toJsonValue(QString("deviceRegistrationTimeout"), device_registration_timeout, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::getDeviceRegistrationTimeout() {
    return device_registration_timeout;
}
void
OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::setDeviceRegistrationTimeout(OAIConfigNodePropertyInteger* device_registration_timeout) {
    this->device_registration_timeout = device_registration_timeout;
    this->m_device_registration_timeout_isSet = true;
}


bool
OAIComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(device_registration_timeout != nullptr && device_registration_timeout->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

