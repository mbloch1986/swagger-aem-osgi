/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceProperties
 */
public class OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServicePropertiesTest {
    private final OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceProperties model = new OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceProperties();

    /**
     * Model tests for OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceProperties
     */
    @Test
    public void testOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceProperties() {
        // TODO: test OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceProperties
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    public void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'debug'
     */
    @Test
    public void debugTest() {
        // TODO: test debug
    }

    /**
     * Test the property 'localIndexDir'
     */
    @Test
    public void localIndexDirTest() {
        // TODO: test localIndexDir
    }

    /**
     * Test the property 'enableOpenIndexAsync'
     */
    @Test
    public void enableOpenIndexAsyncTest() {
        // TODO: test enableOpenIndexAsync
    }

    /**
     * Test the property 'threadPoolSize'
     */
    @Test
    public void threadPoolSizeTest() {
        // TODO: test threadPoolSize
    }

    /**
     * Test the property 'prefetchIndexFiles'
     */
    @Test
    public void prefetchIndexFilesTest() {
        // TODO: test prefetchIndexFiles
    }

    /**
     * Test the property 'extractedTextCacheSizeInMB'
     */
    @Test
    public void extractedTextCacheSizeInMBTest() {
        // TODO: test extractedTextCacheSizeInMB
    }

    /**
     * Test the property 'extractedTextCacheExpiryInSecs'
     */
    @Test
    public void extractedTextCacheExpiryInSecsTest() {
        // TODO: test extractedTextCacheExpiryInSecs
    }

    /**
     * Test the property 'alwaysUsePreExtractedCache'
     */
    @Test
    public void alwaysUsePreExtractedCacheTest() {
        // TODO: test alwaysUsePreExtractedCache
    }

    /**
     * Test the property 'booleanClauseLimit'
     */
    @Test
    public void booleanClauseLimitTest() {
        // TODO: test booleanClauseLimit
    }

    /**
     * Test the property 'enableHybridIndexing'
     */
    @Test
    public void enableHybridIndexingTest() {
        // TODO: test enableHybridIndexing
    }

    /**
     * Test the property 'hybridQueueSize'
     */
    @Test
    public void hybridQueueSizeTest() {
        // TODO: test hybridQueueSize
    }

    /**
     * Test the property 'disableStoredIndexDefinition'
     */
    @Test
    public void disableStoredIndexDefinitionTest() {
        // TODO: test disableStoredIndexDefinition
    }

    /**
     * Test the property 'deletedBlobsCollectionEnabled'
     */
    @Test
    public void deletedBlobsCollectionEnabledTest() {
        // TODO: test deletedBlobsCollectionEnabled
    }

    /**
     * Test the property 'propIndexCleanerIntervalInSecs'
     */
    @Test
    public void propIndexCleanerIntervalInSecsTest() {
        // TODO: test propIndexCleanerIntervalInSecs
    }

    /**
     * Test the property 'enableSingleBlobIndexFiles'
     */
    @Test
    public void enableSingleBlobIndexFilesTest() {
        // TODO: test enableSingleBlobIndexFiles
    }

}
