//
// OrgApacheSlingDatasourceDataSourceFactoryProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct OrgApacheSlingDatasourceDataSourceFactoryProperties: Codable {

    public var datasourceName: ConfigNodePropertyString?
    public var datasourceSvcPropName: ConfigNodePropertyString?
    public var driverClassName: ConfigNodePropertyString?
    public var url: ConfigNodePropertyString?
    public var username: ConfigNodePropertyString?
    public var password: ConfigNodePropertyString?
    public var defaultAutoCommit: ConfigNodePropertyDropDown?
    public var defaultReadOnly: ConfigNodePropertyDropDown?
    public var defaultTransactionIsolation: ConfigNodePropertyDropDown?
    public var defaultCatalog: ConfigNodePropertyString?
    public var maxActive: ConfigNodePropertyInteger?
    public var maxIdle: ConfigNodePropertyInteger?
    public var minIdle: ConfigNodePropertyInteger?
    public var initialSize: ConfigNodePropertyInteger?
    public var maxWait: ConfigNodePropertyInteger?
    public var maxAge: ConfigNodePropertyInteger?
    public var testOnBorrow: ConfigNodePropertyBoolean?
    public var testOnReturn: ConfigNodePropertyBoolean?
    public var testWhileIdle: ConfigNodePropertyBoolean?
    public var validationQuery: ConfigNodePropertyString?
    public var validationQueryTimeout: ConfigNodePropertyInteger?
    public var timeBetweenEvictionRunsMillis: ConfigNodePropertyInteger?
    public var minEvictableIdleTimeMillis: ConfigNodePropertyInteger?
    public var connectionProperties: ConfigNodePropertyString?
    public var initSQL: ConfigNodePropertyString?
    public var jdbcInterceptors: ConfigNodePropertyString?
    public var validationInterval: ConfigNodePropertyInteger?
    public var logValidationErrors: ConfigNodePropertyBoolean?
    public var datasourceSvcProperties: ConfigNodePropertyArray?

    public init(datasourceName: ConfigNodePropertyString?, datasourceSvcPropName: ConfigNodePropertyString?, driverClassName: ConfigNodePropertyString?, url: ConfigNodePropertyString?, username: ConfigNodePropertyString?, password: ConfigNodePropertyString?, defaultAutoCommit: ConfigNodePropertyDropDown?, defaultReadOnly: ConfigNodePropertyDropDown?, defaultTransactionIsolation: ConfigNodePropertyDropDown?, defaultCatalog: ConfigNodePropertyString?, maxActive: ConfigNodePropertyInteger?, maxIdle: ConfigNodePropertyInteger?, minIdle: ConfigNodePropertyInteger?, initialSize: ConfigNodePropertyInteger?, maxWait: ConfigNodePropertyInteger?, maxAge: ConfigNodePropertyInteger?, testOnBorrow: ConfigNodePropertyBoolean?, testOnReturn: ConfigNodePropertyBoolean?, testWhileIdle: ConfigNodePropertyBoolean?, validationQuery: ConfigNodePropertyString?, validationQueryTimeout: ConfigNodePropertyInteger?, timeBetweenEvictionRunsMillis: ConfigNodePropertyInteger?, minEvictableIdleTimeMillis: ConfigNodePropertyInteger?, connectionProperties: ConfigNodePropertyString?, initSQL: ConfigNodePropertyString?, jdbcInterceptors: ConfigNodePropertyString?, validationInterval: ConfigNodePropertyInteger?, logValidationErrors: ConfigNodePropertyBoolean?, datasourceSvcProperties: ConfigNodePropertyArray?) {
        self.datasourceName = datasourceName
        self.datasourceSvcPropName = datasourceSvcPropName
        self.driverClassName = driverClassName
        self.url = url
        self.username = username
        self.password = password
        self.defaultAutoCommit = defaultAutoCommit
        self.defaultReadOnly = defaultReadOnly
        self.defaultTransactionIsolation = defaultTransactionIsolation
        self.defaultCatalog = defaultCatalog
        self.maxActive = maxActive
        self.maxIdle = maxIdle
        self.minIdle = minIdle
        self.initialSize = initialSize
        self.maxWait = maxWait
        self.maxAge = maxAge
        self.testOnBorrow = testOnBorrow
        self.testOnReturn = testOnReturn
        self.testWhileIdle = testWhileIdle
        self.validationQuery = validationQuery
        self.validationQueryTimeout = validationQueryTimeout
        self.timeBetweenEvictionRunsMillis = timeBetweenEvictionRunsMillis
        self.minEvictableIdleTimeMillis = minEvictableIdleTimeMillis
        self.connectionProperties = connectionProperties
        self.initSQL = initSQL
        self.jdbcInterceptors = jdbcInterceptors
        self.validationInterval = validationInterval
        self.logValidationErrors = logValidationErrors
        self.datasourceSvcProperties = datasourceSvcProperties
    }

    public enum CodingKeys: String, CodingKey { 
        case datasourceName = "datasource.name"
        case datasourceSvcPropName = "datasource.svc.prop.name"
        case driverClassName
        case url
        case username
        case password
        case defaultAutoCommit
        case defaultReadOnly
        case defaultTransactionIsolation
        case defaultCatalog
        case maxActive
        case maxIdle
        case minIdle
        case initialSize
        case maxWait
        case maxAge
        case testOnBorrow
        case testOnReturn
        case testWhileIdle
        case validationQuery
        case validationQueryTimeout
        case timeBetweenEvictionRunsMillis
        case minEvictableIdleTimeMillis
        case connectionProperties
        case initSQL
        case jdbcInterceptors
        case validationInterval
        case logValidationErrors
        case datasourceSvcProperties = "datasource.svc.properties"
    }


}

