<?php
/**
 * ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("scheduler.period")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $schedulerPeriod;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("scheduler.concurrent")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $schedulerConcurrent;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("service.bad_link_tolerance_interval")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $serviceBadLinkToleranceInterval;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("service.check_override_patterns")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $serviceCheckOverridePatterns;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("service.cache_broken_internal_links")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $serviceCacheBrokenInternalLinks;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("service.special_link_prefix")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $serviceSpecialLinkPrefix;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("service.special_link_patterns")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $serviceSpecialLinkPatterns;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->schedulerPeriod = isset($data['schedulerPeriod']) ? $data['schedulerPeriod'] : null;
        $this->schedulerConcurrent = isset($data['schedulerConcurrent']) ? $data['schedulerConcurrent'] : null;
        $this->serviceBadLinkToleranceInterval = isset($data['serviceBadLinkToleranceInterval']) ? $data['serviceBadLinkToleranceInterval'] : null;
        $this->serviceCheckOverridePatterns = isset($data['serviceCheckOverridePatterns']) ? $data['serviceCheckOverridePatterns'] : null;
        $this->serviceCacheBrokenInternalLinks = isset($data['serviceCacheBrokenInternalLinks']) ? $data['serviceCacheBrokenInternalLinks'] : null;
        $this->serviceSpecialLinkPrefix = isset($data['serviceSpecialLinkPrefix']) ? $data['serviceSpecialLinkPrefix'] : null;
        $this->serviceSpecialLinkPatterns = isset($data['serviceSpecialLinkPatterns']) ? $data['serviceSpecialLinkPatterns'] : null;
    }

    /**
     * Gets schedulerPeriod.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getSchedulerPeriod()
    {
        return $this->schedulerPeriod;
    }

    /**
     * Sets schedulerPeriod.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $schedulerPeriod
     *
     * @return $this
     */
    public function setSchedulerPeriod(ConfigNodePropertyInteger $schedulerPeriod = null)
    {
        $this->schedulerPeriod = $schedulerPeriod;

        return $this;
    }

    /**
     * Gets schedulerConcurrent.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getSchedulerConcurrent()
    {
        return $this->schedulerConcurrent;
    }

    /**
     * Sets schedulerConcurrent.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $schedulerConcurrent
     *
     * @return $this
     */
    public function setSchedulerConcurrent(ConfigNodePropertyBoolean $schedulerConcurrent = null)
    {
        $this->schedulerConcurrent = $schedulerConcurrent;

        return $this;
    }

    /**
     * Gets serviceBadLinkToleranceInterval.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getServiceBadLinkToleranceInterval()
    {
        return $this->serviceBadLinkToleranceInterval;
    }

    /**
     * Sets serviceBadLinkToleranceInterval.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $serviceBadLinkToleranceInterval
     *
     * @return $this
     */
    public function setServiceBadLinkToleranceInterval(ConfigNodePropertyInteger $serviceBadLinkToleranceInterval = null)
    {
        $this->serviceBadLinkToleranceInterval = $serviceBadLinkToleranceInterval;

        return $this;
    }

    /**
     * Gets serviceCheckOverridePatterns.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getServiceCheckOverridePatterns()
    {
        return $this->serviceCheckOverridePatterns;
    }

    /**
     * Sets serviceCheckOverridePatterns.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $serviceCheckOverridePatterns
     *
     * @return $this
     */
    public function setServiceCheckOverridePatterns(ConfigNodePropertyArray $serviceCheckOverridePatterns = null)
    {
        $this->serviceCheckOverridePatterns = $serviceCheckOverridePatterns;

        return $this;
    }

    /**
     * Gets serviceCacheBrokenInternalLinks.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getServiceCacheBrokenInternalLinks()
    {
        return $this->serviceCacheBrokenInternalLinks;
    }

    /**
     * Sets serviceCacheBrokenInternalLinks.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $serviceCacheBrokenInternalLinks
     *
     * @return $this
     */
    public function setServiceCacheBrokenInternalLinks(ConfigNodePropertyBoolean $serviceCacheBrokenInternalLinks = null)
    {
        $this->serviceCacheBrokenInternalLinks = $serviceCacheBrokenInternalLinks;

        return $this;
    }

    /**
     * Gets serviceSpecialLinkPrefix.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getServiceSpecialLinkPrefix()
    {
        return $this->serviceSpecialLinkPrefix;
    }

    /**
     * Sets serviceSpecialLinkPrefix.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $serviceSpecialLinkPrefix
     *
     * @return $this
     */
    public function setServiceSpecialLinkPrefix(ConfigNodePropertyArray $serviceSpecialLinkPrefix = null)
    {
        $this->serviceSpecialLinkPrefix = $serviceSpecialLinkPrefix;

        return $this;
    }

    /**
     * Gets serviceSpecialLinkPatterns.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getServiceSpecialLinkPatterns()
    {
        return $this->serviceSpecialLinkPatterns;
    }

    /**
     * Sets serviceSpecialLinkPatterns.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $serviceSpecialLinkPatterns
     *
     * @return $this
     */
    public function setServiceSpecialLinkPatterns(ConfigNodePropertyArray $serviceSpecialLinkPatterns = null)
    {
        $this->serviceSpecialLinkPatterns = $serviceSpecialLinkPatterns;

        return $this;
    }
}


