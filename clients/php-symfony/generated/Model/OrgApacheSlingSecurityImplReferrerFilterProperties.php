<?php
/**
 * OrgApacheSlingSecurityImplReferrerFilterProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheSlingSecurityImplReferrerFilterProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheSlingSecurityImplReferrerFilterProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("allow.empty")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $allowEmpty;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("allow.hosts")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $allowHosts;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("allow.hosts.regexp")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $allowHostsRegexp;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("filter.methods")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $filterMethods;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("exclude.agents.regexp")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $excludeAgentsRegexp;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->allowEmpty = isset($data['allowEmpty']) ? $data['allowEmpty'] : null;
        $this->allowHosts = isset($data['allowHosts']) ? $data['allowHosts'] : null;
        $this->allowHostsRegexp = isset($data['allowHostsRegexp']) ? $data['allowHostsRegexp'] : null;
        $this->filterMethods = isset($data['filterMethods']) ? $data['filterMethods'] : null;
        $this->excludeAgentsRegexp = isset($data['excludeAgentsRegexp']) ? $data['excludeAgentsRegexp'] : null;
    }

    /**
     * Gets allowEmpty.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getAllowEmpty()
    {
        return $this->allowEmpty;
    }

    /**
     * Sets allowEmpty.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $allowEmpty
     *
     * @return $this
     */
    public function setAllowEmpty(ConfigNodePropertyBoolean $allowEmpty = null)
    {
        $this->allowEmpty = $allowEmpty;

        return $this;
    }

    /**
     * Gets allowHosts.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getAllowHosts()
    {
        return $this->allowHosts;
    }

    /**
     * Sets allowHosts.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $allowHosts
     *
     * @return $this
     */
    public function setAllowHosts(ConfigNodePropertyArray $allowHosts = null)
    {
        $this->allowHosts = $allowHosts;

        return $this;
    }

    /**
     * Gets allowHostsRegexp.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getAllowHostsRegexp()
    {
        return $this->allowHostsRegexp;
    }

    /**
     * Sets allowHostsRegexp.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $allowHostsRegexp
     *
     * @return $this
     */
    public function setAllowHostsRegexp(ConfigNodePropertyArray $allowHostsRegexp = null)
    {
        $this->allowHostsRegexp = $allowHostsRegexp;

        return $this;
    }

    /**
     * Gets filterMethods.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getFilterMethods()
    {
        return $this->filterMethods;
    }

    /**
     * Sets filterMethods.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $filterMethods
     *
     * @return $this
     */
    public function setFilterMethods(ConfigNodePropertyArray $filterMethods = null)
    {
        $this->filterMethods = $filterMethods;

        return $this;
    }

    /**
     * Gets excludeAgentsRegexp.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getExcludeAgentsRegexp()
    {
        return $this->excludeAgentsRegexp;
    }

    /**
     * Sets excludeAgentsRegexp.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $excludeAgentsRegexp
     *
     * @return $this
     */
    public function setExcludeAgentsRegexp(ConfigNodePropertyArray $excludeAgentsRegexp = null)
    {
        $this->excludeAgentsRegexp = $excludeAgentsRegexp;

        return $this;
    }
}


