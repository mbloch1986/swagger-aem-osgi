<?php
/**
 * ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("hc.tags")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $hcTags;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("dispatcher.address")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $dispatcherAddress;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("dispatcher.filter.allowed")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $dispatcherFilterAllowed;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("dispatcher.filter.blocked")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $dispatcherFilterBlocked;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->hcTags = isset($data['hcTags']) ? $data['hcTags'] : null;
        $this->dispatcherAddress = isset($data['dispatcherAddress']) ? $data['dispatcherAddress'] : null;
        $this->dispatcherFilterAllowed = isset($data['dispatcherFilterAllowed']) ? $data['dispatcherFilterAllowed'] : null;
        $this->dispatcherFilterBlocked = isset($data['dispatcherFilterBlocked']) ? $data['dispatcherFilterBlocked'] : null;
    }

    /**
     * Gets hcTags.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getHcTags()
    {
        return $this->hcTags;
    }

    /**
     * Sets hcTags.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $hcTags
     *
     * @return $this
     */
    public function setHcTags(ConfigNodePropertyArray $hcTags = null)
    {
        $this->hcTags = $hcTags;

        return $this;
    }

    /**
     * Gets dispatcherAddress.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDispatcherAddress()
    {
        return $this->dispatcherAddress;
    }

    /**
     * Sets dispatcherAddress.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $dispatcherAddress
     *
     * @return $this
     */
    public function setDispatcherAddress(ConfigNodePropertyString $dispatcherAddress = null)
    {
        $this->dispatcherAddress = $dispatcherAddress;

        return $this;
    }

    /**
     * Gets dispatcherFilterAllowed.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getDispatcherFilterAllowed()
    {
        return $this->dispatcherFilterAllowed;
    }

    /**
     * Sets dispatcherFilterAllowed.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $dispatcherFilterAllowed
     *
     * @return $this
     */
    public function setDispatcherFilterAllowed(ConfigNodePropertyArray $dispatcherFilterAllowed = null)
    {
        $this->dispatcherFilterAllowed = $dispatcherFilterAllowed;

        return $this;
    }

    /**
     * Gets dispatcherFilterBlocked.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getDispatcherFilterBlocked()
    {
        return $this->dispatcherFilterBlocked;
    }

    /**
     * Sets dispatcherFilterBlocked.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $dispatcherFilterBlocked
     *
     * @return $this
     */
    public function setDispatcherFilterBlocked(ConfigNodePropertyArray $dispatcherFilterBlocked = null)
    {
        $this->dispatcherFilterBlocked = $dispatcherFilterBlocked;

        return $this;
    }
}


