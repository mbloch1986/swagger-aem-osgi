/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties() {
    init();
}

OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::~OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties() {
    this->cleanup();
}

void
OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::init() {
    formportal_interval = new OAIConfigNodePropertyString();
    m_formportal_interval_isSet = false;
}

void
OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::cleanup() {
    if(formportal_interval != nullptr) { 
        delete formportal_interval;
    }
}

OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties*
OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&formportal_interval, pJson["formportal.interval"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::asJsonObject() {
    QJsonObject obj;
    if((formportal_interval != nullptr) && (formportal_interval->isSet())){
        toJsonValue(QString("formportal.interval"), formportal_interval, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::getFormportalInterval() {
    return formportal_interval;
}
void
OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::setFormportalInterval(OAIConfigNodePropertyString* formportal_interval) {
    this->formportal_interval = formportal_interval;
    this->m_formportal_interval_isSet = true;
}


bool
OAIComAdobeFdFpConfigFormsPortalSchedulerServiceProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(formportal_interval != nullptr && formportal_interval->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

