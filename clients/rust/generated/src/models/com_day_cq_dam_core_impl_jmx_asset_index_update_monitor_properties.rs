/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
  #[serde(rename = "jmx.objectname")]
  jmx_objectname: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "property.measure.enabled")]
  property_measure_enabled: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "property.name")]
  property_name: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "property.max.wait.ms")]
  property_max_wait_ms: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "property.max.rate")]
  property_max_rate: Option<::models::ConfigNodePropertyFloat>,
  #[serde(rename = "fulltext.measure.enabled")]
  fulltext_measure_enabled: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "fulltext.name")]
  fulltext_name: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "fulltext.max.wait.ms")]
  fulltext_max_wait_ms: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "fulltext.max.rate")]
  fulltext_max_rate: Option<::models::ConfigNodePropertyFloat>
}

impl ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
  pub fn new() -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
      jmx_objectname: None,
      property_measure_enabled: None,
      property_name: None,
      property_max_wait_ms: None,
      property_max_rate: None,
      fulltext_measure_enabled: None,
      fulltext_name: None,
      fulltext_max_wait_ms: None,
      fulltext_max_rate: None
    }
  }

  pub fn set_jmx_objectname(&mut self, jmx_objectname: ::models::ConfigNodePropertyString) {
    self.jmx_objectname = Some(jmx_objectname);
  }

  pub fn with_jmx_objectname(mut self, jmx_objectname: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    self.jmx_objectname = Some(jmx_objectname);
    self
  }

  pub fn jmx_objectname(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.jmx_objectname.as_ref()
  }

  pub fn reset_jmx_objectname(&mut self) {
    self.jmx_objectname = None;
  }

  pub fn set_property_measure_enabled(&mut self, property_measure_enabled: ::models::ConfigNodePropertyBoolean) {
    self.property_measure_enabled = Some(property_measure_enabled);
  }

  pub fn with_property_measure_enabled(mut self, property_measure_enabled: ::models::ConfigNodePropertyBoolean) -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    self.property_measure_enabled = Some(property_measure_enabled);
    self
  }

  pub fn property_measure_enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.property_measure_enabled.as_ref()
  }

  pub fn reset_property_measure_enabled(&mut self) {
    self.property_measure_enabled = None;
  }

  pub fn set_property_name(&mut self, property_name: ::models::ConfigNodePropertyString) {
    self.property_name = Some(property_name);
  }

  pub fn with_property_name(mut self, property_name: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    self.property_name = Some(property_name);
    self
  }

  pub fn property_name(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.property_name.as_ref()
  }

  pub fn reset_property_name(&mut self) {
    self.property_name = None;
  }

  pub fn set_property_max_wait_ms(&mut self, property_max_wait_ms: ::models::ConfigNodePropertyInteger) {
    self.property_max_wait_ms = Some(property_max_wait_ms);
  }

  pub fn with_property_max_wait_ms(mut self, property_max_wait_ms: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    self.property_max_wait_ms = Some(property_max_wait_ms);
    self
  }

  pub fn property_max_wait_ms(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.property_max_wait_ms.as_ref()
  }

  pub fn reset_property_max_wait_ms(&mut self) {
    self.property_max_wait_ms = None;
  }

  pub fn set_property_max_rate(&mut self, property_max_rate: ::models::ConfigNodePropertyFloat) {
    self.property_max_rate = Some(property_max_rate);
  }

  pub fn with_property_max_rate(mut self, property_max_rate: ::models::ConfigNodePropertyFloat) -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    self.property_max_rate = Some(property_max_rate);
    self
  }

  pub fn property_max_rate(&self) -> Option<&::models::ConfigNodePropertyFloat> {
    self.property_max_rate.as_ref()
  }

  pub fn reset_property_max_rate(&mut self) {
    self.property_max_rate = None;
  }

  pub fn set_fulltext_measure_enabled(&mut self, fulltext_measure_enabled: ::models::ConfigNodePropertyBoolean) {
    self.fulltext_measure_enabled = Some(fulltext_measure_enabled);
  }

  pub fn with_fulltext_measure_enabled(mut self, fulltext_measure_enabled: ::models::ConfigNodePropertyBoolean) -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    self.fulltext_measure_enabled = Some(fulltext_measure_enabled);
    self
  }

  pub fn fulltext_measure_enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.fulltext_measure_enabled.as_ref()
  }

  pub fn reset_fulltext_measure_enabled(&mut self) {
    self.fulltext_measure_enabled = None;
  }

  pub fn set_fulltext_name(&mut self, fulltext_name: ::models::ConfigNodePropertyString) {
    self.fulltext_name = Some(fulltext_name);
  }

  pub fn with_fulltext_name(mut self, fulltext_name: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    self.fulltext_name = Some(fulltext_name);
    self
  }

  pub fn fulltext_name(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.fulltext_name.as_ref()
  }

  pub fn reset_fulltext_name(&mut self) {
    self.fulltext_name = None;
  }

  pub fn set_fulltext_max_wait_ms(&mut self, fulltext_max_wait_ms: ::models::ConfigNodePropertyInteger) {
    self.fulltext_max_wait_ms = Some(fulltext_max_wait_ms);
  }

  pub fn with_fulltext_max_wait_ms(mut self, fulltext_max_wait_ms: ::models::ConfigNodePropertyInteger) -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    self.fulltext_max_wait_ms = Some(fulltext_max_wait_ms);
    self
  }

  pub fn fulltext_max_wait_ms(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.fulltext_max_wait_ms.as_ref()
  }

  pub fn reset_fulltext_max_wait_ms(&mut self) {
    self.fulltext_max_wait_ms = None;
  }

  pub fn set_fulltext_max_rate(&mut self, fulltext_max_rate: ::models::ConfigNodePropertyFloat) {
    self.fulltext_max_rate = Some(fulltext_max_rate);
  }

  pub fn with_fulltext_max_rate(mut self, fulltext_max_rate: ::models::ConfigNodePropertyFloat) -> ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties {
    self.fulltext_max_rate = Some(fulltext_max_rate);
    self
  }

  pub fn fulltext_max_rate(&self) -> Option<&::models::ConfigNodePropertyFloat> {
    self.fulltext_max_rate.as_ref()
  }

  pub fn reset_fulltext_max_rate(&mut self) {
    self.fulltext_max_rate = None;
  }

}



