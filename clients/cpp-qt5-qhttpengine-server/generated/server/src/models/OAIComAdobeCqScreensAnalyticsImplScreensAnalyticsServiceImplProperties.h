/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties_H
#define OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties: public OAIObject {
public:
    OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties();
    OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties(QString json);
    ~OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getComAdobeCqScreensAnalyticsImplUrl() const;
    void setComAdobeCqScreensAnalyticsImplUrl(const OAIConfigNodePropertyString &com_adobe_cq_screens_analytics_impl_url);

    OAIConfigNodePropertyString getComAdobeCqScreensAnalyticsImplApikey() const;
    void setComAdobeCqScreensAnalyticsImplApikey(const OAIConfigNodePropertyString &com_adobe_cq_screens_analytics_impl_apikey);

    OAIConfigNodePropertyString getComAdobeCqScreensAnalyticsImplProject() const;
    void setComAdobeCqScreensAnalyticsImplProject(const OAIConfigNodePropertyString &com_adobe_cq_screens_analytics_impl_project);

    OAIConfigNodePropertyDropDown getComAdobeCqScreensAnalyticsImplEnvironment() const;
    void setComAdobeCqScreensAnalyticsImplEnvironment(const OAIConfigNodePropertyDropDown &com_adobe_cq_screens_analytics_impl_environment);

    OAIConfigNodePropertyInteger getComAdobeCqScreensAnalyticsImplSendFrequency() const;
    void setComAdobeCqScreensAnalyticsImplSendFrequency(const OAIConfigNodePropertyInteger &com_adobe_cq_screens_analytics_impl_send_frequency);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString com_adobe_cq_screens_analytics_impl_url;
    bool m_com_adobe_cq_screens_analytics_impl_url_isSet;

    OAIConfigNodePropertyString com_adobe_cq_screens_analytics_impl_apikey;
    bool m_com_adobe_cq_screens_analytics_impl_apikey_isSet;

    OAIConfigNodePropertyString com_adobe_cq_screens_analytics_impl_project;
    bool m_com_adobe_cq_screens_analytics_impl_project_isSet;

    OAIConfigNodePropertyDropDown com_adobe_cq_screens_analytics_impl_environment;
    bool m_com_adobe_cq_screens_analytics_impl_environment_isSet;

    OAIConfigNodePropertyInteger com_adobe_cq_screens_analytics_impl_send_frequency;
    bool m_com_adobe_cq_screens_analytics_impl_send_frequency_isSet;

};

}

#endif // OAIComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties_H
