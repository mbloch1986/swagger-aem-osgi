/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingEventImplJobsDefaultJobManagerProperties {
  #[serde(rename = "queue.priority")]
  queue_priority: Option<::models::ConfigNodePropertyDropDown>,
  #[serde(rename = "queue.retries")]
  queue_retries: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "queue.retrydelay")]
  queue_retrydelay: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "queue.maxparallel")]
  queue_maxparallel: Option<::models::ConfigNodePropertyInteger>
}

impl OrgApacheSlingEventImplJobsDefaultJobManagerProperties {
  pub fn new() -> OrgApacheSlingEventImplJobsDefaultJobManagerProperties {
    OrgApacheSlingEventImplJobsDefaultJobManagerProperties {
      queue_priority: None,
      queue_retries: None,
      queue_retrydelay: None,
      queue_maxparallel: None
    }
  }

  pub fn set_queue_priority(&mut self, queue_priority: ::models::ConfigNodePropertyDropDown) {
    self.queue_priority = Some(queue_priority);
  }

  pub fn with_queue_priority(mut self, queue_priority: ::models::ConfigNodePropertyDropDown) -> OrgApacheSlingEventImplJobsDefaultJobManagerProperties {
    self.queue_priority = Some(queue_priority);
    self
  }

  pub fn queue_priority(&self) -> Option<&::models::ConfigNodePropertyDropDown> {
    self.queue_priority.as_ref()
  }

  pub fn reset_queue_priority(&mut self) {
    self.queue_priority = None;
  }

  pub fn set_queue_retries(&mut self, queue_retries: ::models::ConfigNodePropertyInteger) {
    self.queue_retries = Some(queue_retries);
  }

  pub fn with_queue_retries(mut self, queue_retries: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingEventImplJobsDefaultJobManagerProperties {
    self.queue_retries = Some(queue_retries);
    self
  }

  pub fn queue_retries(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.queue_retries.as_ref()
  }

  pub fn reset_queue_retries(&mut self) {
    self.queue_retries = None;
  }

  pub fn set_queue_retrydelay(&mut self, queue_retrydelay: ::models::ConfigNodePropertyInteger) {
    self.queue_retrydelay = Some(queue_retrydelay);
  }

  pub fn with_queue_retrydelay(mut self, queue_retrydelay: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingEventImplJobsDefaultJobManagerProperties {
    self.queue_retrydelay = Some(queue_retrydelay);
    self
  }

  pub fn queue_retrydelay(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.queue_retrydelay.as_ref()
  }

  pub fn reset_queue_retrydelay(&mut self) {
    self.queue_retrydelay = None;
  }

  pub fn set_queue_maxparallel(&mut self, queue_maxparallel: ::models::ConfigNodePropertyInteger) {
    self.queue_maxparallel = Some(queue_maxparallel);
  }

  pub fn with_queue_maxparallel(mut self, queue_maxparallel: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingEventImplJobsDefaultJobManagerProperties {
    self.queue_maxparallel = Some(queue_maxparallel);
    self
  }

  pub fn queue_maxparallel(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.queue_maxparallel.as_ref()
  }

  pub fn reset_queue_maxparallel(&mut self) {
    self.queue_maxparallel = None;
  }

}



