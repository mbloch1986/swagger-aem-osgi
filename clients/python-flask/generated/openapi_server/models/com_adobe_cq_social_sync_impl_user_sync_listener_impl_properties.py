# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSocialSyncImplUserSyncListenerImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nodetypes: ConfigNodePropertyArray=None, ignorableprops: ConfigNodePropertyArray=None, ignorablenodes: ConfigNodePropertyArray=None, enabled: ConfigNodePropertyBoolean=None, distfolders: ConfigNodePropertyArray=None):  # noqa: E501
        """ComAdobeCqSocialSyncImplUserSyncListenerImplProperties - a model defined in OpenAPI

        :param nodetypes: The nodetypes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.  # noqa: E501
        :type nodetypes: ConfigNodePropertyArray
        :param ignorableprops: The ignorableprops of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.  # noqa: E501
        :type ignorableprops: ConfigNodePropertyArray
        :param ignorablenodes: The ignorablenodes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.  # noqa: E501
        :type ignorablenodes: ConfigNodePropertyArray
        :param enabled: The enabled of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.  # noqa: E501
        :type enabled: ConfigNodePropertyBoolean
        :param distfolders: The distfolders of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.  # noqa: E501
        :type distfolders: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'nodetypes': ConfigNodePropertyArray,
            'ignorableprops': ConfigNodePropertyArray,
            'ignorablenodes': ConfigNodePropertyArray,
            'enabled': ConfigNodePropertyBoolean,
            'distfolders': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'nodetypes': 'nodetypes',
            'ignorableprops': 'ignorableprops',
            'ignorablenodes': 'ignorablenodes',
            'enabled': 'enabled',
            'distfolders': 'distfolders'
        }

        self._nodetypes = nodetypes
        self._ignorableprops = ignorableprops
        self._ignorablenodes = ignorablenodes
        self._enabled = enabled
        self._distfolders = distfolders

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSocialSyncImplUserSyncListenerImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSocialSyncImplUserSyncListenerImplProperties of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.  # noqa: E501
        :rtype: ComAdobeCqSocialSyncImplUserSyncListenerImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nodetypes(self) -> ConfigNodePropertyArray:
        """Gets the nodetypes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :return: The nodetypes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._nodetypes

    @nodetypes.setter
    def nodetypes(self, nodetypes: ConfigNodePropertyArray):
        """Sets the nodetypes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :param nodetypes: The nodetypes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :type nodetypes: ConfigNodePropertyArray
        """

        self._nodetypes = nodetypes

    @property
    def ignorableprops(self) -> ConfigNodePropertyArray:
        """Gets the ignorableprops of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :return: The ignorableprops of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._ignorableprops

    @ignorableprops.setter
    def ignorableprops(self, ignorableprops: ConfigNodePropertyArray):
        """Sets the ignorableprops of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :param ignorableprops: The ignorableprops of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :type ignorableprops: ConfigNodePropertyArray
        """

        self._ignorableprops = ignorableprops

    @property
    def ignorablenodes(self) -> ConfigNodePropertyArray:
        """Gets the ignorablenodes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :return: The ignorablenodes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._ignorablenodes

    @ignorablenodes.setter
    def ignorablenodes(self, ignorablenodes: ConfigNodePropertyArray):
        """Sets the ignorablenodes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :param ignorablenodes: The ignorablenodes of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :type ignorablenodes: ConfigNodePropertyArray
        """

        self._ignorablenodes = ignorablenodes

    @property
    def enabled(self) -> ConfigNodePropertyBoolean:
        """Gets the enabled of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :return: The enabled of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled: ConfigNodePropertyBoolean):
        """Sets the enabled of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :param enabled: The enabled of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :type enabled: ConfigNodePropertyBoolean
        """

        self._enabled = enabled

    @property
    def distfolders(self) -> ConfigNodePropertyArray:
        """Gets the distfolders of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :return: The distfolders of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._distfolders

    @distfolders.setter
    def distfolders(self, distfolders: ConfigNodePropertyArray):
        """Sets the distfolders of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.


        :param distfolders: The distfolders of this ComAdobeCqSocialSyncImplUserSyncListenerImplProperties.
        :type distfolders: ConfigNodePropertyArray
        """

        self._distfolders = distfolders
