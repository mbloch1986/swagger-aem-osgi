/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties()
{
    m_Dim_default_modeIsSet = false;
    m_Dim_appcache_enabledIsSet = false;
    
}

ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::~ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties()
{
}

void ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Dim_default_modeIsSet)
    {
        val["dim.default.mode"] = ModelBase::toJson(m_Dim_default_mode);
    }
    if(m_Dim_appcache_enabledIsSet)
    {
        val["dim.appcache.enabled"] = ModelBase::toJson(m_Dim_appcache_enabled);
    }
    

    return val;
}

void ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("dim.default.mode") != val.end())
    {
        if(!val["dim.default.mode"].is_null())
        {
            ConfigNodePropertyDropDown newItem;
            newItem.fromJson(val["dim.default.mode"]);
            setDimDefaultMode( newItem );
        }
        
    }
    if(val.find("dim.appcache.enabled") != val.end())
    {
        if(!val["dim.appcache.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["dim.appcache.enabled"]);
            setDimAppcacheEnabled( newItem );
        }
        
    }
    
}


ConfigNodePropertyDropDown ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::getDimDefaultMode() const
{
    return m_Dim_default_mode;
}
void ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::setDimDefaultMode(ConfigNodePropertyDropDown const& value)
{
    m_Dim_default_mode = value;
    m_Dim_default_modeIsSet = true;
}
bool ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::dimDefaultModeIsSet() const
{
    return m_Dim_default_modeIsSet;
}
void ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::unsetDim_default_mode()
{
    m_Dim_default_modeIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::getDimAppcacheEnabled() const
{
    return m_Dim_appcache_enabled;
}
void ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::setDimAppcacheEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Dim_appcache_enabled = value;
    m_Dim_appcache_enabledIsSet = true;
}
bool ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::dimAppcacheEnabledIsSet() const
{
    return m_Dim_appcache_enabledIsSet;
}
void ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties::unsetDim_appcache_enabled()
{
    m_Dim_appcache_enabledIsSet = false;
}

}
}
}
}

