/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties()
{
    m_PathIsSet = false;
    m_Service_rankingIsSet = false;
    m_Jaas_controlFlagIsSet = false;
    m_Jaas_realmNameIsSet = false;
    m_Jaas_rankingIsSet = false;
    m_HeadersIsSet = false;
    m_CookiesIsSet = false;
    m_ParametersIsSet = false;
    m_UsermapIsSet = false;
    m_FormatIsSet = false;
    m_TrustedCredentialsAttributeIsSet = false;
    
}

ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::~ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties()
{
}

void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_PathIsSet)
    {
        val["path"] = ModelBase::toJson(m_Path);
    }
    if(m_Service_rankingIsSet)
    {
        val["service.ranking"] = ModelBase::toJson(m_Service_ranking);
    }
    if(m_Jaas_controlFlagIsSet)
    {
        val["jaas.controlFlag"] = ModelBase::toJson(m_Jaas_controlFlag);
    }
    if(m_Jaas_realmNameIsSet)
    {
        val["jaas.realmName"] = ModelBase::toJson(m_Jaas_realmName);
    }
    if(m_Jaas_rankingIsSet)
    {
        val["jaas.ranking"] = ModelBase::toJson(m_Jaas_ranking);
    }
    if(m_HeadersIsSet)
    {
        val["headers"] = ModelBase::toJson(m_Headers);
    }
    if(m_CookiesIsSet)
    {
        val["cookies"] = ModelBase::toJson(m_Cookies);
    }
    if(m_ParametersIsSet)
    {
        val["parameters"] = ModelBase::toJson(m_Parameters);
    }
    if(m_UsermapIsSet)
    {
        val["usermap"] = ModelBase::toJson(m_Usermap);
    }
    if(m_FormatIsSet)
    {
        val["format"] = ModelBase::toJson(m_Format);
    }
    if(m_TrustedCredentialsAttributeIsSet)
    {
        val["trustedCredentialsAttribute"] = ModelBase::toJson(m_TrustedCredentialsAttribute);
    }
    

    return val;
}

void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::fromJson(nlohmann::json& val)
{
    if(val.find("path") != val.end())
    {
        if(!val["path"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["path"]);
            setPath( newItem );
        }
        
    }
    if(val.find("service.ranking") != val.end())
    {
        if(!val["service.ranking"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["service.ranking"]);
            setServiceRanking( newItem );
        }
        
    }
    if(val.find("jaas.controlFlag") != val.end())
    {
        if(!val["jaas.controlFlag"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jaas.controlFlag"]);
            setJaasControlFlag( newItem );
        }
        
    }
    if(val.find("jaas.realmName") != val.end())
    {
        if(!val["jaas.realmName"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jaas.realmName"]);
            setJaasRealmName( newItem );
        }
        
    }
    if(val.find("jaas.ranking") != val.end())
    {
        if(!val["jaas.ranking"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["jaas.ranking"]);
            setJaasRanking( newItem );
        }
        
    }
    if(val.find("headers") != val.end())
    {
        if(!val["headers"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["headers"]);
            setHeaders( newItem );
        }
        
    }
    if(val.find("cookies") != val.end())
    {
        if(!val["cookies"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cookies"]);
            setCookies( newItem );
        }
        
    }
    if(val.find("parameters") != val.end())
    {
        if(!val["parameters"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["parameters"]);
            setParameters( newItem );
        }
        
    }
    if(val.find("usermap") != val.end())
    {
        if(!val["usermap"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["usermap"]);
            setUsermap( newItem );
        }
        
    }
    if(val.find("format") != val.end())
    {
        if(!val["format"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["format"]);
            setFormat( newItem );
        }
        
    }
    if(val.find("trustedCredentialsAttribute") != val.end())
    {
        if(!val["trustedCredentialsAttribute"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["trustedCredentialsAttribute"]);
            setTrustedCredentialsAttribute( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getPath() const
{
    return m_Path;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setPath(ConfigNodePropertyString const& value)
{
    m_Path = value;
    m_PathIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::pathIsSet() const
{
    return m_PathIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetPath()
{
    m_PathIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getServiceRanking() const
{
    return m_Service_ranking;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setServiceRanking(ConfigNodePropertyInteger const& value)
{
    m_Service_ranking = value;
    m_Service_rankingIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::serviceRankingIsSet() const
{
    return m_Service_rankingIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetService_ranking()
{
    m_Service_rankingIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getJaasControlFlag() const
{
    return m_Jaas_controlFlag;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setJaasControlFlag(ConfigNodePropertyString const& value)
{
    m_Jaas_controlFlag = value;
    m_Jaas_controlFlagIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::jaasControlFlagIsSet() const
{
    return m_Jaas_controlFlagIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetJaas_controlFlag()
{
    m_Jaas_controlFlagIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getJaasRealmName() const
{
    return m_Jaas_realmName;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setJaasRealmName(ConfigNodePropertyString const& value)
{
    m_Jaas_realmName = value;
    m_Jaas_realmNameIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::jaasRealmNameIsSet() const
{
    return m_Jaas_realmNameIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetJaas_realmName()
{
    m_Jaas_realmNameIsSet = false;
}
ConfigNodePropertyInteger ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getJaasRanking() const
{
    return m_Jaas_ranking;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setJaasRanking(ConfigNodePropertyInteger const& value)
{
    m_Jaas_ranking = value;
    m_Jaas_rankingIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::jaasRankingIsSet() const
{
    return m_Jaas_rankingIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetJaas_ranking()
{
    m_Jaas_rankingIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getHeaders() const
{
    return m_Headers;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setHeaders(ConfigNodePropertyArray const& value)
{
    m_Headers = value;
    m_HeadersIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::headersIsSet() const
{
    return m_HeadersIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetHeaders()
{
    m_HeadersIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getCookies() const
{
    return m_Cookies;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setCookies(ConfigNodePropertyArray const& value)
{
    m_Cookies = value;
    m_CookiesIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::cookiesIsSet() const
{
    return m_CookiesIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetCookies()
{
    m_CookiesIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getParameters() const
{
    return m_Parameters;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setParameters(ConfigNodePropertyArray const& value)
{
    m_Parameters = value;
    m_ParametersIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::parametersIsSet() const
{
    return m_ParametersIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetParameters()
{
    m_ParametersIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getUsermap() const
{
    return m_Usermap;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setUsermap(ConfigNodePropertyArray const& value)
{
    m_Usermap = value;
    m_UsermapIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::usermapIsSet() const
{
    return m_UsermapIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetUsermap()
{
    m_UsermapIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getFormat() const
{
    return m_Format;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setFormat(ConfigNodePropertyString const& value)
{
    m_Format = value;
    m_FormatIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::formatIsSet() const
{
    return m_FormatIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetFormat()
{
    m_FormatIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::getTrustedCredentialsAttribute() const
{
    return m_TrustedCredentialsAttribute;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::setTrustedCredentialsAttribute(ConfigNodePropertyString const& value)
{
    m_TrustedCredentialsAttribute = value;
    m_TrustedCredentialsAttributeIsSet = true;
}
bool ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::trustedCredentialsAttributeIsSet() const
{
    return m_TrustedCredentialsAttributeIsSet;
}
void ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties::unsetTrustedCredentialsAttribute()
{
    m_TrustedCredentialsAttributeIsSet = false;
}

}
}
}
}

