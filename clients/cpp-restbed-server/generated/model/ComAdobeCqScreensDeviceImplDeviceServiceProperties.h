/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeCqScreensDeviceImplDeviceServiceProperties.h
 *
 * 
 */

#ifndef ComAdobeCqScreensDeviceImplDeviceServiceProperties_H_
#define ComAdobeCqScreensDeviceImplDeviceServiceProperties_H_



#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqScreensDeviceImplDeviceServiceProperties
{
public:
    ComAdobeCqScreensDeviceImplDeviceServiceProperties();
    virtual ~ComAdobeCqScreensDeviceImplDeviceServiceProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComAdobeCqScreensDeviceImplDeviceServiceProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getComAdobeAemScreensPlayerPingfrequency() const;
    void setComAdobeAemScreensPlayerPingfrequency(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeAemScreensDevicePaswordSpecialchars() const;
    void setComAdobeAemScreensDevicePaswordSpecialchars(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getComAdobeAemScreensDevicePaswordMinlowercasechars() const;
    void setComAdobeAemScreensDevicePaswordMinlowercasechars(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getComAdobeAemScreensDevicePaswordMinuppercasechars() const;
    void setComAdobeAemScreensDevicePaswordMinuppercasechars(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getComAdobeAemScreensDevicePaswordMinnumberchars() const;
    void setComAdobeAemScreensDevicePaswordMinnumberchars(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getComAdobeAemScreensDevicePaswordMinspecialchars() const;
    void setComAdobeAemScreensDevicePaswordMinspecialchars(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getComAdobeAemScreensDevicePaswordMinlength() const;
    void setComAdobeAemScreensDevicePaswordMinlength(std::shared_ptr<ConfigNodePropertyInteger> value);

protected:
    std::shared_ptr<ConfigNodePropertyInteger> m_Com_adobe_aem_screens_player_pingfrequency;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_aem_screens_device_pasword_specialchars;
    std::shared_ptr<ConfigNodePropertyInteger> m_Com_adobe_aem_screens_device_pasword_minlowercasechars;
    std::shared_ptr<ConfigNodePropertyInteger> m_Com_adobe_aem_screens_device_pasword_minuppercasechars;
    std::shared_ptr<ConfigNodePropertyInteger> m_Com_adobe_aem_screens_device_pasword_minnumberchars;
    std::shared_ptr<ConfigNodePropertyInteger> m_Com_adobe_aem_screens_device_pasword_minspecialchars;
    std::shared_ptr<ConfigNodePropertyInteger> m_Com_adobe_aem_screens_device_pasword_minlength;
};

}
}
}
}

#endif /* ComAdobeCqScreensDeviceImplDeviceServiceProperties_H_ */
