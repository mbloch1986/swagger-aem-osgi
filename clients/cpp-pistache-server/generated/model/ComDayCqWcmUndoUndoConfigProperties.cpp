/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmUndoUndoConfigProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmUndoUndoConfigProperties::ComDayCqWcmUndoUndoConfigProperties()
{
    m_Cq_wcm_undo_enabledIsSet = false;
    m_Cq_wcm_undo_pathIsSet = false;
    m_Cq_wcm_undo_validityIsSet = false;
    m_Cq_wcm_undo_stepsIsSet = false;
    m_Cq_wcm_undo_persistenceIsSet = false;
    m_Cq_wcm_undo_persistence_modeIsSet = false;
    m_Cq_wcm_undo_markermodeIsSet = false;
    m_Cq_wcm_undo_whitelistIsSet = false;
    m_Cq_wcm_undo_blacklistIsSet = false;
    
}

ComDayCqWcmUndoUndoConfigProperties::~ComDayCqWcmUndoUndoConfigProperties()
{
}

void ComDayCqWcmUndoUndoConfigProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmUndoUndoConfigProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cq_wcm_undo_enabledIsSet)
    {
        val["cq.wcm.undo.enabled"] = ModelBase::toJson(m_Cq_wcm_undo_enabled);
    }
    if(m_Cq_wcm_undo_pathIsSet)
    {
        val["cq.wcm.undo.path"] = ModelBase::toJson(m_Cq_wcm_undo_path);
    }
    if(m_Cq_wcm_undo_validityIsSet)
    {
        val["cq.wcm.undo.validity"] = ModelBase::toJson(m_Cq_wcm_undo_validity);
    }
    if(m_Cq_wcm_undo_stepsIsSet)
    {
        val["cq.wcm.undo.steps"] = ModelBase::toJson(m_Cq_wcm_undo_steps);
    }
    if(m_Cq_wcm_undo_persistenceIsSet)
    {
        val["cq.wcm.undo.persistence"] = ModelBase::toJson(m_Cq_wcm_undo_persistence);
    }
    if(m_Cq_wcm_undo_persistence_modeIsSet)
    {
        val["cq.wcm.undo.persistence.mode"] = ModelBase::toJson(m_Cq_wcm_undo_persistence_mode);
    }
    if(m_Cq_wcm_undo_markermodeIsSet)
    {
        val["cq.wcm.undo.markermode"] = ModelBase::toJson(m_Cq_wcm_undo_markermode);
    }
    if(m_Cq_wcm_undo_whitelistIsSet)
    {
        val["cq.wcm.undo.whitelist"] = ModelBase::toJson(m_Cq_wcm_undo_whitelist);
    }
    if(m_Cq_wcm_undo_blacklistIsSet)
    {
        val["cq.wcm.undo.blacklist"] = ModelBase::toJson(m_Cq_wcm_undo_blacklist);
    }
    

    return val;
}

void ComDayCqWcmUndoUndoConfigProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cq.wcm.undo.enabled") != val.end())
    {
        if(!val["cq.wcm.undo.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["cq.wcm.undo.enabled"]);
            setCqWcmUndoEnabled( newItem );
        }
        
    }
    if(val.find("cq.wcm.undo.path") != val.end())
    {
        if(!val["cq.wcm.undo.path"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cq.wcm.undo.path"]);
            setCqWcmUndoPath( newItem );
        }
        
    }
    if(val.find("cq.wcm.undo.validity") != val.end())
    {
        if(!val["cq.wcm.undo.validity"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.wcm.undo.validity"]);
            setCqWcmUndoValidity( newItem );
        }
        
    }
    if(val.find("cq.wcm.undo.steps") != val.end())
    {
        if(!val["cq.wcm.undo.steps"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.wcm.undo.steps"]);
            setCqWcmUndoSteps( newItem );
        }
        
    }
    if(val.find("cq.wcm.undo.persistence") != val.end())
    {
        if(!val["cq.wcm.undo.persistence"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cq.wcm.undo.persistence"]);
            setCqWcmUndoPersistence( newItem );
        }
        
    }
    if(val.find("cq.wcm.undo.persistence.mode") != val.end())
    {
        if(!val["cq.wcm.undo.persistence.mode"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["cq.wcm.undo.persistence.mode"]);
            setCqWcmUndoPersistenceMode( newItem );
        }
        
    }
    if(val.find("cq.wcm.undo.markermode") != val.end())
    {
        if(!val["cq.wcm.undo.markermode"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["cq.wcm.undo.markermode"]);
            setCqWcmUndoMarkermode( newItem );
        }
        
    }
    if(val.find("cq.wcm.undo.whitelist") != val.end())
    {
        if(!val["cq.wcm.undo.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cq.wcm.undo.whitelist"]);
            setCqWcmUndoWhitelist( newItem );
        }
        
    }
    if(val.find("cq.wcm.undo.blacklist") != val.end())
    {
        if(!val["cq.wcm.undo.blacklist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cq.wcm.undo.blacklist"]);
            setCqWcmUndoBlacklist( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoEnabled() const
{
    return m_Cq_wcm_undo_enabled;
}
void ComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Cq_wcm_undo_enabled = value;
    m_Cq_wcm_undo_enabledIsSet = true;
}
bool ComDayCqWcmUndoUndoConfigProperties::cqWcmUndoEnabledIsSet() const
{
    return m_Cq_wcm_undo_enabledIsSet;
}
void ComDayCqWcmUndoUndoConfigProperties::unsetCq_wcm_undo_enabled()
{
    m_Cq_wcm_undo_enabledIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoPath() const
{
    return m_Cq_wcm_undo_path;
}
void ComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoPath(ConfigNodePropertyString const& value)
{
    m_Cq_wcm_undo_path = value;
    m_Cq_wcm_undo_pathIsSet = true;
}
bool ComDayCqWcmUndoUndoConfigProperties::cqWcmUndoPathIsSet() const
{
    return m_Cq_wcm_undo_pathIsSet;
}
void ComDayCqWcmUndoUndoConfigProperties::unsetCq_wcm_undo_path()
{
    m_Cq_wcm_undo_pathIsSet = false;
}
ConfigNodePropertyInteger ComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoValidity() const
{
    return m_Cq_wcm_undo_validity;
}
void ComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoValidity(ConfigNodePropertyInteger const& value)
{
    m_Cq_wcm_undo_validity = value;
    m_Cq_wcm_undo_validityIsSet = true;
}
bool ComDayCqWcmUndoUndoConfigProperties::cqWcmUndoValidityIsSet() const
{
    return m_Cq_wcm_undo_validityIsSet;
}
void ComDayCqWcmUndoUndoConfigProperties::unsetCq_wcm_undo_validity()
{
    m_Cq_wcm_undo_validityIsSet = false;
}
ConfigNodePropertyInteger ComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoSteps() const
{
    return m_Cq_wcm_undo_steps;
}
void ComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoSteps(ConfigNodePropertyInteger const& value)
{
    m_Cq_wcm_undo_steps = value;
    m_Cq_wcm_undo_stepsIsSet = true;
}
bool ComDayCqWcmUndoUndoConfigProperties::cqWcmUndoStepsIsSet() const
{
    return m_Cq_wcm_undo_stepsIsSet;
}
void ComDayCqWcmUndoUndoConfigProperties::unsetCq_wcm_undo_steps()
{
    m_Cq_wcm_undo_stepsIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoPersistence() const
{
    return m_Cq_wcm_undo_persistence;
}
void ComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoPersistence(ConfigNodePropertyString const& value)
{
    m_Cq_wcm_undo_persistence = value;
    m_Cq_wcm_undo_persistenceIsSet = true;
}
bool ComDayCqWcmUndoUndoConfigProperties::cqWcmUndoPersistenceIsSet() const
{
    return m_Cq_wcm_undo_persistenceIsSet;
}
void ComDayCqWcmUndoUndoConfigProperties::unsetCq_wcm_undo_persistence()
{
    m_Cq_wcm_undo_persistenceIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoPersistenceMode() const
{
    return m_Cq_wcm_undo_persistence_mode;
}
void ComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoPersistenceMode(ConfigNodePropertyBoolean const& value)
{
    m_Cq_wcm_undo_persistence_mode = value;
    m_Cq_wcm_undo_persistence_modeIsSet = true;
}
bool ComDayCqWcmUndoUndoConfigProperties::cqWcmUndoPersistenceModeIsSet() const
{
    return m_Cq_wcm_undo_persistence_modeIsSet;
}
void ComDayCqWcmUndoUndoConfigProperties::unsetCq_wcm_undo_persistence_mode()
{
    m_Cq_wcm_undo_persistence_modeIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoMarkermode() const
{
    return m_Cq_wcm_undo_markermode;
}
void ComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoMarkermode(ConfigNodePropertyString const& value)
{
    m_Cq_wcm_undo_markermode = value;
    m_Cq_wcm_undo_markermodeIsSet = true;
}
bool ComDayCqWcmUndoUndoConfigProperties::cqWcmUndoMarkermodeIsSet() const
{
    return m_Cq_wcm_undo_markermodeIsSet;
}
void ComDayCqWcmUndoUndoConfigProperties::unsetCq_wcm_undo_markermode()
{
    m_Cq_wcm_undo_markermodeIsSet = false;
}
ConfigNodePropertyArray ComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoWhitelist() const
{
    return m_Cq_wcm_undo_whitelist;
}
void ComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoWhitelist(ConfigNodePropertyArray const& value)
{
    m_Cq_wcm_undo_whitelist = value;
    m_Cq_wcm_undo_whitelistIsSet = true;
}
bool ComDayCqWcmUndoUndoConfigProperties::cqWcmUndoWhitelistIsSet() const
{
    return m_Cq_wcm_undo_whitelistIsSet;
}
void ComDayCqWcmUndoUndoConfigProperties::unsetCq_wcm_undo_whitelist()
{
    m_Cq_wcm_undo_whitelistIsSet = false;
}
ConfigNodePropertyArray ComDayCqWcmUndoUndoConfigProperties::getCqWcmUndoBlacklist() const
{
    return m_Cq_wcm_undo_blacklist;
}
void ComDayCqWcmUndoUndoConfigProperties::setCqWcmUndoBlacklist(ConfigNodePropertyArray const& value)
{
    m_Cq_wcm_undo_blacklist = value;
    m_Cq_wcm_undo_blacklistIsSet = true;
}
bool ComDayCqWcmUndoUndoConfigProperties::cqWcmUndoBlacklistIsSet() const
{
    return m_Cq_wcm_undo_blacklistIsSet;
}
void ComDayCqWcmUndoUndoConfigProperties::unsetCq_wcm_undo_blacklist()
{
    m_Cq_wcm_undo_blacklistIsSet = false;
}

}
}
}
}

