//
// ComDayCqWidgetImplHtmlLibraryManagerImplProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct ComDayCqWidgetImplHtmlLibraryManagerImplProperties: Codable {

    public var htmllibmanagerClientmanager: ConfigNodePropertyString?
    public var htmllibmanagerDebug: ConfigNodePropertyBoolean?
    public var htmllibmanagerDebugConsole: ConfigNodePropertyBoolean?
    public var htmllibmanagerDebugInitJs: ConfigNodePropertyString?
    public var htmllibmanagerDefaultthemename: ConfigNodePropertyString?
    public var htmllibmanagerDefaultuserthemename: ConfigNodePropertyString?
    public var htmllibmanagerFirebuglitePath: ConfigNodePropertyString?
    public var htmllibmanagerForceCQUrlInfo: ConfigNodePropertyBoolean?
    public var htmllibmanagerGzip: ConfigNodePropertyBoolean?
    public var htmllibmanagerMaxage: ConfigNodePropertyInteger?
    public var htmllibmanagerMaxDataUriSize: ConfigNodePropertyInteger?
    public var htmllibmanagerMinify: ConfigNodePropertyBoolean?
    public var htmllibmanagerPathList: ConfigNodePropertyArray?
    public var htmllibmanagerTiming: ConfigNodePropertyBoolean?

    public init(htmllibmanagerClientmanager: ConfigNodePropertyString?, htmllibmanagerDebug: ConfigNodePropertyBoolean?, htmllibmanagerDebugConsole: ConfigNodePropertyBoolean?, htmllibmanagerDebugInitJs: ConfigNodePropertyString?, htmllibmanagerDefaultthemename: ConfigNodePropertyString?, htmllibmanagerDefaultuserthemename: ConfigNodePropertyString?, htmllibmanagerFirebuglitePath: ConfigNodePropertyString?, htmllibmanagerForceCQUrlInfo: ConfigNodePropertyBoolean?, htmllibmanagerGzip: ConfigNodePropertyBoolean?, htmllibmanagerMaxage: ConfigNodePropertyInteger?, htmllibmanagerMaxDataUriSize: ConfigNodePropertyInteger?, htmllibmanagerMinify: ConfigNodePropertyBoolean?, htmllibmanagerPathList: ConfigNodePropertyArray?, htmllibmanagerTiming: ConfigNodePropertyBoolean?) {
        self.htmllibmanagerClientmanager = htmllibmanagerClientmanager
        self.htmllibmanagerDebug = htmllibmanagerDebug
        self.htmllibmanagerDebugConsole = htmllibmanagerDebugConsole
        self.htmllibmanagerDebugInitJs = htmllibmanagerDebugInitJs
        self.htmllibmanagerDefaultthemename = htmllibmanagerDefaultthemename
        self.htmllibmanagerDefaultuserthemename = htmllibmanagerDefaultuserthemename
        self.htmllibmanagerFirebuglitePath = htmllibmanagerFirebuglitePath
        self.htmllibmanagerForceCQUrlInfo = htmllibmanagerForceCQUrlInfo
        self.htmllibmanagerGzip = htmllibmanagerGzip
        self.htmllibmanagerMaxage = htmllibmanagerMaxage
        self.htmllibmanagerMaxDataUriSize = htmllibmanagerMaxDataUriSize
        self.htmllibmanagerMinify = htmllibmanagerMinify
        self.htmllibmanagerPathList = htmllibmanagerPathList
        self.htmllibmanagerTiming = htmllibmanagerTiming
    }

    public enum CodingKeys: String, CodingKey { 
        case htmllibmanagerClientmanager = "htmllibmanager.clientmanager"
        case htmllibmanagerDebug = "htmllibmanager.debug"
        case htmllibmanagerDebugConsole = "htmllibmanager.debug.console"
        case htmllibmanagerDebugInitJs = "htmllibmanager.debug.init.js"
        case htmllibmanagerDefaultthemename = "htmllibmanager.defaultthemename"
        case htmllibmanagerDefaultuserthemename = "htmllibmanager.defaultuserthemename"
        case htmllibmanagerFirebuglitePath = "htmllibmanager.firebuglite.path"
        case htmllibmanagerForceCQUrlInfo = "htmllibmanager.forceCQUrlInfo"
        case htmllibmanagerGzip = "htmllibmanager.gzip"
        case htmllibmanagerMaxage = "htmllibmanager.maxage"
        case htmllibmanagerMaxDataUriSize = "htmllibmanager.maxDataUriSize"
        case htmllibmanagerMinify = "htmllibmanager.minify"
        case htmllibmanagerPathList = "htmllibmanager.path.list"
        case htmllibmanagerTiming = "htmllibmanager.timing"
    }


}

