/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties() {
    this->init();
}

OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::~OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties() {
    
}

void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::init() {
    m_enable_isSet = false;
    m_ttl1_isSet = false;
    m_ttl2_isSet = false;
}

void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(enable, json[QString("enable")]);
    
    ::OpenAPI::fromJsonValue(ttl1, json[QString("ttl1")]);
    
    ::OpenAPI::fromJsonValue(ttl2, json[QString("ttl2")]);
    
}

QString
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::asJsonObject() const {
    QJsonObject obj;
	if(enable.isSet()){
        obj.insert(QString("enable"), ::OpenAPI::toJsonValue(enable));
    }
	if(ttl1.isSet()){
        obj.insert(QString("ttl1"), ::OpenAPI::toJsonValue(ttl1));
    }
	if(ttl2.isSet()){
        obj.insert(QString("ttl2"), ::OpenAPI::toJsonValue(ttl2));
    }
    return obj;
}

OAIConfigNodePropertyBoolean
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::getEnable() const {
    return enable;
}
void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::setEnable(const OAIConfigNodePropertyBoolean &enable) {
    this->enable = enable;
    this->m_enable_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::getTtl1() const {
    return ttl1;
}
void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::setTtl1(const OAIConfigNodePropertyInteger &ttl1) {
    this->ttl1 = ttl1;
    this->m_ttl1_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::getTtl2() const {
    return ttl2;
}
void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::setTtl2(const OAIConfigNodePropertyInteger &ttl2) {
    this->ttl2 = ttl2;
    this->m_ttl2_isSet = true;
}


bool
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(enable.isSet()){ isObjectUpdated = true; break;}
    
        if(ttl1.isSet()){ isObjectUpdated = true; break;}
    
        if(ttl2.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

