/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties() {
    this->init();
}

OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::~OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties() {
    
}

void
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::init() {
    m_auth_ims_client_secret_isSet = false;
    m_customizer_type_isSet = false;
}

void
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(auth_ims_client_secret, json[QString("auth.ims.client.secret")]);
    
    ::OpenAPI::fromJsonValue(customizer_type, json[QString("customizer.type")]);
    
}

QString
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(auth_ims_client_secret.isSet()){
        obj.insert(QString("auth.ims.client.secret"), ::OpenAPI::toJsonValue(auth_ims_client_secret));
    }
	if(customizer_type.isSet()){
        obj.insert(QString("customizer.type"), ::OpenAPI::toJsonValue(customizer_type));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::getAuthImsClientSecret() const {
    return auth_ims_client_secret;
}
void
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::setAuthImsClientSecret(const OAIConfigNodePropertyString &auth_ims_client_secret) {
    this->auth_ims_client_secret = auth_ims_client_secret;
    this->m_auth_ims_client_secret_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::getCustomizerType() const {
    return customizer_type;
}
void
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::setCustomizerType(const OAIConfigNodePropertyString &customizer_type) {
    this->customizer_type = customizer_type;
    this->m_customizer_type_isSet = true;
}


bool
OAIComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(auth_ims_client_secret.isSet()){ isObjectUpdated = true; break;}
    
        if(customizer_type.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

