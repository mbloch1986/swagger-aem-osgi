/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties()
{
    m_TimeoutIsSet = false;
    m_Target_start_levelIsSet = false;
    m_Target_start_level_prop_nameIsSet = false;
    m_TypeIsSet = false;
    
}

OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::~OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties()
{
}

void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_TimeoutIsSet)
    {
        val["timeout"] = ModelBase::toJson(m_Timeout);
    }
    if(m_Target_start_levelIsSet)
    {
        val["target.start.level"] = ModelBase::toJson(m_Target_start_level);
    }
    if(m_Target_start_level_prop_nameIsSet)
    {
        val["target.start.level.prop.name"] = ModelBase::toJson(m_Target_start_level_prop_name);
    }
    if(m_TypeIsSet)
    {
        val["type"] = ModelBase::toJson(m_Type);
    }
    

    return val;
}

void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::fromJson(nlohmann::json& val)
{
    if(val.find("timeout") != val.end())
    {
        if(!val["timeout"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["timeout"]);
            setTimeout( newItem );
        }
        
    }
    if(val.find("target.start.level") != val.end())
    {
        if(!val["target.start.level"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["target.start.level"]);
            setTargetStartLevel( newItem );
        }
        
    }
    if(val.find("target.start.level.prop.name") != val.end())
    {
        if(!val["target.start.level.prop.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["target.start.level.prop.name"]);
            setTargetStartLevelPropName( newItem );
        }
        
    }
    if(val.find("type") != val.end())
    {
        if(!val["type"].is_null())
        {
            ConfigNodePropertyDropDown newItem;
            newItem.fromJson(val["type"]);
            setType( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::getTimeout() const
{
    return m_Timeout;
}
void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::setTimeout(ConfigNodePropertyInteger const& value)
{
    m_Timeout = value;
    m_TimeoutIsSet = true;
}
bool OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::timeoutIsSet() const
{
    return m_TimeoutIsSet;
}
void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::unsetTimeout()
{
    m_TimeoutIsSet = false;
}
ConfigNodePropertyInteger OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::getTargetStartLevel() const
{
    return m_Target_start_level;
}
void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::setTargetStartLevel(ConfigNodePropertyInteger const& value)
{
    m_Target_start_level = value;
    m_Target_start_levelIsSet = true;
}
bool OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::targetStartLevelIsSet() const
{
    return m_Target_start_levelIsSet;
}
void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::unsetTarget_start_level()
{
    m_Target_start_levelIsSet = false;
}
ConfigNodePropertyString OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::getTargetStartLevelPropName() const
{
    return m_Target_start_level_prop_name;
}
void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::setTargetStartLevelPropName(ConfigNodePropertyString const& value)
{
    m_Target_start_level_prop_name = value;
    m_Target_start_level_prop_nameIsSet = true;
}
bool OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::targetStartLevelPropNameIsSet() const
{
    return m_Target_start_level_prop_nameIsSet;
}
void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::unsetTarget_start_level_prop_name()
{
    m_Target_start_level_prop_nameIsSet = false;
}
ConfigNodePropertyDropDown OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::getType() const
{
    return m_Type;
}
void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::setType(ConfigNodePropertyDropDown const& value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::typeIsSet() const
{
    return m_TypeIsSet;
}
void OrgApacheFelixSystemreadyImplFrameworkStartCheckProperties::unsetType()
{
    m_TypeIsSet = false;
}

}
}
}
}

