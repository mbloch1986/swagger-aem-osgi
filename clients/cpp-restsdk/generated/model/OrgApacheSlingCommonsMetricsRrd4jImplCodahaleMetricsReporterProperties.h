/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties
    : public ModelBase
{
public:
    OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties();
    virtual ~OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getDatasources() const;
    bool datasourcesIsSet() const;
    void unsetDatasources();
    void setDatasources(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getStep() const;
    bool stepIsSet() const;
    void unsetStep();
    void setStep(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getArchives() const;
    bool archivesIsSet() const;
    void unsetArchives();
    void setArchives(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getPath() const;
    bool pathIsSet() const;
    void unsetPath();
    void setPath(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyArray> m_Datasources;
    bool m_DatasourcesIsSet;
    std::shared_ptr<ConfigNodePropertyInteger> m_Step;
    bool m_StepIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Archives;
    bool m_ArchivesIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Path;
    bool m_PathIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties_H_ */
