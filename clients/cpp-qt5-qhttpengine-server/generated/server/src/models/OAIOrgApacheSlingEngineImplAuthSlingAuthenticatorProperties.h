/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties_H
#define OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties: public OAIObject {
public:
    OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties();
    OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties(QString json);
    ~OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getOsgiHttpWhiteboardContextSelect() const;
    void setOsgiHttpWhiteboardContextSelect(const OAIConfigNodePropertyString &osgi_http_whiteboard_context_select);

    OAIConfigNodePropertyString getOsgiHttpWhiteboardListener() const;
    void setOsgiHttpWhiteboardListener(const OAIConfigNodePropertyString &osgi_http_whiteboard_listener);

    OAIConfigNodePropertyString getAuthSudoCookie() const;
    void setAuthSudoCookie(const OAIConfigNodePropertyString &auth_sudo_cookie);

    OAIConfigNodePropertyString getAuthSudoParameter() const;
    void setAuthSudoParameter(const OAIConfigNodePropertyString &auth_sudo_parameter);

    OAIConfigNodePropertyBoolean getAuthAnnonymous() const;
    void setAuthAnnonymous(const OAIConfigNodePropertyBoolean &auth_annonymous);

    OAIConfigNodePropertyArray getSlingAuthRequirements() const;
    void setSlingAuthRequirements(const OAIConfigNodePropertyArray &sling_auth_requirements);

    OAIConfigNodePropertyString getSlingAuthAnonymousUser() const;
    void setSlingAuthAnonymousUser(const OAIConfigNodePropertyString &sling_auth_anonymous_user);

    OAIConfigNodePropertyString getSlingAuthAnonymousPassword() const;
    void setSlingAuthAnonymousPassword(const OAIConfigNodePropertyString &sling_auth_anonymous_password);

    OAIConfigNodePropertyDropDown getAuthHttp() const;
    void setAuthHttp(const OAIConfigNodePropertyDropDown &auth_http);

    OAIConfigNodePropertyString getAuthHttpRealm() const;
    void setAuthHttpRealm(const OAIConfigNodePropertyString &auth_http_realm);

    OAIConfigNodePropertyArray getAuthUriSuffix() const;
    void setAuthUriSuffix(const OAIConfigNodePropertyArray &auth_uri_suffix);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString osgi_http_whiteboard_context_select;
    bool m_osgi_http_whiteboard_context_select_isSet;

    OAIConfigNodePropertyString osgi_http_whiteboard_listener;
    bool m_osgi_http_whiteboard_listener_isSet;

    OAIConfigNodePropertyString auth_sudo_cookie;
    bool m_auth_sudo_cookie_isSet;

    OAIConfigNodePropertyString auth_sudo_parameter;
    bool m_auth_sudo_parameter_isSet;

    OAIConfigNodePropertyBoolean auth_annonymous;
    bool m_auth_annonymous_isSet;

    OAIConfigNodePropertyArray sling_auth_requirements;
    bool m_sling_auth_requirements_isSet;

    OAIConfigNodePropertyString sling_auth_anonymous_user;
    bool m_sling_auth_anonymous_user_isSet;

    OAIConfigNodePropertyString sling_auth_anonymous_password;
    bool m_sling_auth_anonymous_password_isSet;

    OAIConfigNodePropertyDropDown auth_http;
    bool m_auth_http_isSet;

    OAIConfigNodePropertyString auth_http_realm;
    bool m_auth_http_realm_isSet;

    OAIConfigNodePropertyArray auth_uri_suffix;
    bool m_auth_uri_suffix_isSet;

};

}

#endif // OAIOrgApacheSlingEngineImplAuthSlingAuthenticatorProperties_H
