/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties() {
    init();
}

OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::~OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties() {
    this->cleanup();
}

void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::init() {
    enable = new OAIConfigNodePropertyBoolean();
    m_enable_isSet = false;
    ttl1 = new OAIConfigNodePropertyInteger();
    m_ttl1_isSet = false;
    ttl2 = new OAIConfigNodePropertyInteger();
    m_ttl2_isSet = false;
}

void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::cleanup() {
    if(enable != nullptr) { 
        delete enable;
    }
    if(ttl1 != nullptr) { 
        delete ttl1;
    }
    if(ttl2 != nullptr) { 
        delete ttl2;
    }
}

OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties*
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&enable, pJson["enable"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&ttl1, pJson["ttl1"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&ttl2, pJson["ttl2"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::asJsonObject() {
    QJsonObject obj;
    if((enable != nullptr) && (enable->isSet())){
        toJsonValue(QString("enable"), enable, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((ttl1 != nullptr) && (ttl1->isSet())){
        toJsonValue(QString("ttl1"), ttl1, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((ttl2 != nullptr) && (ttl2->isSet())){
        toJsonValue(QString("ttl2"), ttl2, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::getEnable() {
    return enable;
}
void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::setEnable(OAIConfigNodePropertyBoolean* enable) {
    this->enable = enable;
    this->m_enable_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::getTtl1() {
    return ttl1;
}
void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::setTtl1(OAIConfigNodePropertyInteger* ttl1) {
    this->ttl1 = ttl1;
    this->m_ttl1_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::getTtl2() {
    return ttl2;
}
void
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::setTtl2(OAIConfigNodePropertyInteger* ttl2) {
    this->ttl2 = ttl2;
    this->m_ttl2_isSet = true;
}


bool
OAIComAdobeCqSocialAccountverificationImplAccountManagementConfigImProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(enable != nullptr && enable->isSet()){ isObjectUpdated = true; break;}
        if(ttl1 != nullptr && ttl1->isSet()){ isObjectUpdated = true; break;}
        if(ttl2 != nullptr && ttl2->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

