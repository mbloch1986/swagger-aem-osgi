/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties()
{
    m_Felix_memoryusage_dump_thresholdIsSet = false;
    m_Felix_memoryusage_dump_intervalIsSet = false;
    m_Felix_memoryusage_dump_locationIsSet = false;
    
}

OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::~OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties()
{
}

void OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Felix_memoryusage_dump_thresholdIsSet)
    {
        val["felix.memoryusage.dump.threshold"] = ModelBase::toJson(m_Felix_memoryusage_dump_threshold);
    }
    if(m_Felix_memoryusage_dump_intervalIsSet)
    {
        val["felix.memoryusage.dump.interval"] = ModelBase::toJson(m_Felix_memoryusage_dump_interval);
    }
    if(m_Felix_memoryusage_dump_locationIsSet)
    {
        val["felix.memoryusage.dump.location"] = ModelBase::toJson(m_Felix_memoryusage_dump_location);
    }
    

    return val;
}

void OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::fromJson(nlohmann::json& val)
{
    if(val.find("felix.memoryusage.dump.threshold") != val.end())
    {
        if(!val["felix.memoryusage.dump.threshold"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["felix.memoryusage.dump.threshold"]);
            setFelixMemoryusageDumpThreshold( newItem );
        }
        
    }
    if(val.find("felix.memoryusage.dump.interval") != val.end())
    {
        if(!val["felix.memoryusage.dump.interval"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["felix.memoryusage.dump.interval"]);
            setFelixMemoryusageDumpInterval( newItem );
        }
        
    }
    if(val.find("felix.memoryusage.dump.location") != val.end())
    {
        if(!val["felix.memoryusage.dump.location"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["felix.memoryusage.dump.location"]);
            setFelixMemoryusageDumpLocation( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::getFelixMemoryusageDumpThreshold() const
{
    return m_Felix_memoryusage_dump_threshold;
}
void OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::setFelixMemoryusageDumpThreshold(ConfigNodePropertyInteger const& value)
{
    m_Felix_memoryusage_dump_threshold = value;
    m_Felix_memoryusage_dump_thresholdIsSet = true;
}
bool OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::felixMemoryusageDumpThresholdIsSet() const
{
    return m_Felix_memoryusage_dump_thresholdIsSet;
}
void OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::unsetFelix_memoryusage_dump_threshold()
{
    m_Felix_memoryusage_dump_thresholdIsSet = false;
}
ConfigNodePropertyInteger OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::getFelixMemoryusageDumpInterval() const
{
    return m_Felix_memoryusage_dump_interval;
}
void OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::setFelixMemoryusageDumpInterval(ConfigNodePropertyInteger const& value)
{
    m_Felix_memoryusage_dump_interval = value;
    m_Felix_memoryusage_dump_intervalIsSet = true;
}
bool OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::felixMemoryusageDumpIntervalIsSet() const
{
    return m_Felix_memoryusage_dump_intervalIsSet;
}
void OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::unsetFelix_memoryusage_dump_interval()
{
    m_Felix_memoryusage_dump_intervalIsSet = false;
}
ConfigNodePropertyString OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::getFelixMemoryusageDumpLocation() const
{
    return m_Felix_memoryusage_dump_location;
}
void OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::setFelixMemoryusageDumpLocation(ConfigNodePropertyString const& value)
{
    m_Felix_memoryusage_dump_location = value;
    m_Felix_memoryusage_dump_locationIsSet = true;
}
bool OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::felixMemoryusageDumpLocationIsSet() const
{
    return m_Felix_memoryusage_dump_locationIsSet;
}
void OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoProperties::unsetFelix_memoryusage_dump_location()
{
    m_Felix_memoryusage_dump_locationIsSet = false;
}

}
}
}
}

