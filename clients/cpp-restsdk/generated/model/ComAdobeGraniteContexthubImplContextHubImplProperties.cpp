/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteContexthubImplContextHubImplProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ComAdobeGraniteContexthubImplContextHubImplProperties::ComAdobeGraniteContexthubImplContextHubImplProperties()
{
    m_Com_adobe_granite_contexthub_silent_modeIsSet = false;
    m_Com_adobe_granite_contexthub_show_uiIsSet = false;
}

ComAdobeGraniteContexthubImplContextHubImplProperties::~ComAdobeGraniteContexthubImplContextHubImplProperties()
{
}

void ComAdobeGraniteContexthubImplContextHubImplProperties::validate()
{
    // TODO: implement validation
}

web::json::value ComAdobeGraniteContexthubImplContextHubImplProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Com_adobe_granite_contexthub_silent_modeIsSet)
    {
        val[utility::conversions::to_string_t("com.adobe.granite.contexthub.silent_mode")] = ModelBase::toJson(m_Com_adobe_granite_contexthub_silent_mode);
    }
    if(m_Com_adobe_granite_contexthub_show_uiIsSet)
    {
        val[utility::conversions::to_string_t("com.adobe.granite.contexthub.show_ui")] = ModelBase::toJson(m_Com_adobe_granite_contexthub_show_ui);
    }

    return val;
}

void ComAdobeGraniteContexthubImplContextHubImplProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("com.adobe.granite.contexthub.silent_mode")))
    {
        if(!val[utility::conversions::to_string_t("com.adobe.granite.contexthub.silent_mode")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromJson(val[utility::conversions::to_string_t("com.adobe.granite.contexthub.silent_mode")]);
            setComAdobeGraniteContexthubSilentMode( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("com.adobe.granite.contexthub.show_ui")))
    {
        if(!val[utility::conversions::to_string_t("com.adobe.granite.contexthub.show_ui")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromJson(val[utility::conversions::to_string_t("com.adobe.granite.contexthub.show_ui")]);
            setComAdobeGraniteContexthubShowUi( newItem );
        }
    }
}

void ComAdobeGraniteContexthubImplContextHubImplProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Com_adobe_granite_contexthub_silent_modeIsSet)
    {
        if (m_Com_adobe_granite_contexthub_silent_mode.get())
        {
            m_Com_adobe_granite_contexthub_silent_mode->toMultipart(multipart, utility::conversions::to_string_t("com.adobe.granite.contexthub.silent_mode."));
        }
    }
    if(m_Com_adobe_granite_contexthub_show_uiIsSet)
    {
        if (m_Com_adobe_granite_contexthub_show_ui.get())
        {
            m_Com_adobe_granite_contexthub_show_ui->toMultipart(multipart, utility::conversions::to_string_t("com.adobe.granite.contexthub.show_ui."));
        }
    }
}

void ComAdobeGraniteContexthubImplContextHubImplProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("com.adobe.granite.contexthub.silent_mode")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("com.adobe.granite.contexthub.silent_mode")))
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("com.adobe.granite.contexthub.silent_mode."));
            setComAdobeGraniteContexthubSilentMode( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("com.adobe.granite.contexthub.show_ui")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("com.adobe.granite.contexthub.show_ui")))
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("com.adobe.granite.contexthub.show_ui."));
            setComAdobeGraniteContexthubShowUi( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteContexthubImplContextHubImplProperties::getComAdobeGraniteContexthubSilentMode() const
{
    return m_Com_adobe_granite_contexthub_silent_mode;
}


void ComAdobeGraniteContexthubImplContextHubImplProperties::setComAdobeGraniteContexthubSilentMode(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Com_adobe_granite_contexthub_silent_mode = value;
    m_Com_adobe_granite_contexthub_silent_modeIsSet = true;
}
bool ComAdobeGraniteContexthubImplContextHubImplProperties::comAdobeGraniteContexthubSilentModeIsSet() const
{
    return m_Com_adobe_granite_contexthub_silent_modeIsSet;
}

void ComAdobeGraniteContexthubImplContextHubImplProperties::unsetCom_adobe_granite_contexthub_silent_mode()
{
    m_Com_adobe_granite_contexthub_silent_modeIsSet = false;
}

std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteContexthubImplContextHubImplProperties::getComAdobeGraniteContexthubShowUi() const
{
    return m_Com_adobe_granite_contexthub_show_ui;
}


void ComAdobeGraniteContexthubImplContextHubImplProperties::setComAdobeGraniteContexthubShowUi(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Com_adobe_granite_contexthub_show_ui = value;
    m_Com_adobe_granite_contexthub_show_uiIsSet = true;
}
bool ComAdobeGraniteContexthubImplContextHubImplProperties::comAdobeGraniteContexthubShowUiIsSet() const
{
    return m_Com_adobe_granite_contexthub_show_uiIsSet;
}

void ComAdobeGraniteContexthubImplContextHubImplProperties::unsetCom_adobe_granite_contexthub_show_ui()
{
    m_Com_adobe_granite_contexthub_show_uiIsSet = false;
}

}
}
}
}

