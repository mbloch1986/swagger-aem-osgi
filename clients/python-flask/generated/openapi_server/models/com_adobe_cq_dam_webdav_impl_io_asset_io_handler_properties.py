# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_ranking: ConfigNodePropertyInteger=None, path_prefix: ConfigNodePropertyString=None, create_version: ConfigNodePropertyBoolean=None):  # noqa: E501
        """ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties - a model defined in OpenAPI

        :param service_ranking: The service_ranking of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.  # noqa: E501
        :type service_ranking: ConfigNodePropertyInteger
        :param path_prefix: The path_prefix of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.  # noqa: E501
        :type path_prefix: ConfigNodePropertyString
        :param create_version: The create_version of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.  # noqa: E501
        :type create_version: ConfigNodePropertyBoolean
        """
        self.openapi_types = {
            'service_ranking': ConfigNodePropertyInteger,
            'path_prefix': ConfigNodePropertyString,
            'create_version': ConfigNodePropertyBoolean
        }

        self.attribute_map = {
            'service_ranking': 'service.ranking',
            'path_prefix': 'pathPrefix',
            'create_version': 'createVersion'
        }

        self._service_ranking = service_ranking
        self._path_prefix = path_prefix
        self._create_version = create_version

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqDamWebdavImplIoAssetIOHandlerProperties of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.  # noqa: E501
        :rtype: ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_ranking(self) -> ConfigNodePropertyInteger:
        """Gets the service_ranking of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.


        :return: The service_ranking of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._service_ranking

    @service_ranking.setter
    def service_ranking(self, service_ranking: ConfigNodePropertyInteger):
        """Sets the service_ranking of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.


        :param service_ranking: The service_ranking of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.
        :type service_ranking: ConfigNodePropertyInteger
        """

        self._service_ranking = service_ranking

    @property
    def path_prefix(self) -> ConfigNodePropertyString:
        """Gets the path_prefix of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.


        :return: The path_prefix of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._path_prefix

    @path_prefix.setter
    def path_prefix(self, path_prefix: ConfigNodePropertyString):
        """Sets the path_prefix of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.


        :param path_prefix: The path_prefix of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.
        :type path_prefix: ConfigNodePropertyString
        """

        self._path_prefix = path_prefix

    @property
    def create_version(self) -> ConfigNodePropertyBoolean:
        """Gets the create_version of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.


        :return: The create_version of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._create_version

    @create_version.setter
    def create_version(self, create_version: ConfigNodePropertyBoolean):
        """Sets the create_version of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.


        :param create_version: The create_version of this ComAdobeCqDamWebdavImplIoAssetIOHandlerProperties.
        :type create_version: ConfigNodePropertyBoolean
        """

        self._create_version = create_version
