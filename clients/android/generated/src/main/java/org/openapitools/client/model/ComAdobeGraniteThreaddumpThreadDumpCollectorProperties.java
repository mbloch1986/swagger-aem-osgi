/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyDropDown;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeGraniteThreaddumpThreadDumpCollectorProperties {
  
  @SerializedName("scheduler.period")
  private ConfigNodePropertyInteger schedulerPeriod = null;
  @SerializedName("scheduler.runOn")
  private ConfigNodePropertyDropDown schedulerRunOn = null;
  @SerializedName("granite.threaddump.enabled")
  private ConfigNodePropertyBoolean graniteThreaddumpEnabled = null;
  @SerializedName("granite.threaddump.dumpsPerFile")
  private ConfigNodePropertyInteger graniteThreaddumpDumpsPerFile = null;
  @SerializedName("granite.threaddump.enableGzipCompression")
  private ConfigNodePropertyBoolean graniteThreaddumpEnableGzipCompression = null;
  @SerializedName("granite.threaddump.enableDirectoriesCompression")
  private ConfigNodePropertyBoolean graniteThreaddumpEnableDirectoriesCompression = null;
  @SerializedName("granite.threaddump.enableJStack")
  private ConfigNodePropertyBoolean graniteThreaddumpEnableJStack = null;
  @SerializedName("granite.threaddump.maxBackupDays")
  private ConfigNodePropertyInteger graniteThreaddumpMaxBackupDays = null;
  @SerializedName("granite.threaddump.backupCleanTrigger")
  private ConfigNodePropertyString graniteThreaddumpBackupCleanTrigger = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getSchedulerPeriod() {
    return schedulerPeriod;
  }
  public void setSchedulerPeriod(ConfigNodePropertyInteger schedulerPeriod) {
    this.schedulerPeriod = schedulerPeriod;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getSchedulerRunOn() {
    return schedulerRunOn;
  }
  public void setSchedulerRunOn(ConfigNodePropertyDropDown schedulerRunOn) {
    this.schedulerRunOn = schedulerRunOn;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getGraniteThreaddumpEnabled() {
    return graniteThreaddumpEnabled;
  }
  public void setGraniteThreaddumpEnabled(ConfigNodePropertyBoolean graniteThreaddumpEnabled) {
    this.graniteThreaddumpEnabled = graniteThreaddumpEnabled;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getGraniteThreaddumpDumpsPerFile() {
    return graniteThreaddumpDumpsPerFile;
  }
  public void setGraniteThreaddumpDumpsPerFile(ConfigNodePropertyInteger graniteThreaddumpDumpsPerFile) {
    this.graniteThreaddumpDumpsPerFile = graniteThreaddumpDumpsPerFile;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getGraniteThreaddumpEnableGzipCompression() {
    return graniteThreaddumpEnableGzipCompression;
  }
  public void setGraniteThreaddumpEnableGzipCompression(ConfigNodePropertyBoolean graniteThreaddumpEnableGzipCompression) {
    this.graniteThreaddumpEnableGzipCompression = graniteThreaddumpEnableGzipCompression;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getGraniteThreaddumpEnableDirectoriesCompression() {
    return graniteThreaddumpEnableDirectoriesCompression;
  }
  public void setGraniteThreaddumpEnableDirectoriesCompression(ConfigNodePropertyBoolean graniteThreaddumpEnableDirectoriesCompression) {
    this.graniteThreaddumpEnableDirectoriesCompression = graniteThreaddumpEnableDirectoriesCompression;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getGraniteThreaddumpEnableJStack() {
    return graniteThreaddumpEnableJStack;
  }
  public void setGraniteThreaddumpEnableJStack(ConfigNodePropertyBoolean graniteThreaddumpEnableJStack) {
    this.graniteThreaddumpEnableJStack = graniteThreaddumpEnableJStack;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getGraniteThreaddumpMaxBackupDays() {
    return graniteThreaddumpMaxBackupDays;
  }
  public void setGraniteThreaddumpMaxBackupDays(ConfigNodePropertyInteger graniteThreaddumpMaxBackupDays) {
    this.graniteThreaddumpMaxBackupDays = graniteThreaddumpMaxBackupDays;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getGraniteThreaddumpBackupCleanTrigger() {
    return graniteThreaddumpBackupCleanTrigger;
  }
  public void setGraniteThreaddumpBackupCleanTrigger(ConfigNodePropertyString graniteThreaddumpBackupCleanTrigger) {
    this.graniteThreaddumpBackupCleanTrigger = graniteThreaddumpBackupCleanTrigger;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeGraniteThreaddumpThreadDumpCollectorProperties comAdobeGraniteThreaddumpThreadDumpCollectorProperties = (ComAdobeGraniteThreaddumpThreadDumpCollectorProperties) o;
    return (this.schedulerPeriod == null ? comAdobeGraniteThreaddumpThreadDumpCollectorProperties.schedulerPeriod == null : this.schedulerPeriod.equals(comAdobeGraniteThreaddumpThreadDumpCollectorProperties.schedulerPeriod)) &&
        (this.schedulerRunOn == null ? comAdobeGraniteThreaddumpThreadDumpCollectorProperties.schedulerRunOn == null : this.schedulerRunOn.equals(comAdobeGraniteThreaddumpThreadDumpCollectorProperties.schedulerRunOn)) &&
        (this.graniteThreaddumpEnabled == null ? comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpEnabled == null : this.graniteThreaddumpEnabled.equals(comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpEnabled)) &&
        (this.graniteThreaddumpDumpsPerFile == null ? comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpDumpsPerFile == null : this.graniteThreaddumpDumpsPerFile.equals(comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpDumpsPerFile)) &&
        (this.graniteThreaddumpEnableGzipCompression == null ? comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpEnableGzipCompression == null : this.graniteThreaddumpEnableGzipCompression.equals(comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpEnableGzipCompression)) &&
        (this.graniteThreaddumpEnableDirectoriesCompression == null ? comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpEnableDirectoriesCompression == null : this.graniteThreaddumpEnableDirectoriesCompression.equals(comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpEnableDirectoriesCompression)) &&
        (this.graniteThreaddumpEnableJStack == null ? comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpEnableJStack == null : this.graniteThreaddumpEnableJStack.equals(comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpEnableJStack)) &&
        (this.graniteThreaddumpMaxBackupDays == null ? comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpMaxBackupDays == null : this.graniteThreaddumpMaxBackupDays.equals(comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpMaxBackupDays)) &&
        (this.graniteThreaddumpBackupCleanTrigger == null ? comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpBackupCleanTrigger == null : this.graniteThreaddumpBackupCleanTrigger.equals(comAdobeGraniteThreaddumpThreadDumpCollectorProperties.graniteThreaddumpBackupCleanTrigger));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.schedulerPeriod == null ? 0: this.schedulerPeriod.hashCode());
    result = 31 * result + (this.schedulerRunOn == null ? 0: this.schedulerRunOn.hashCode());
    result = 31 * result + (this.graniteThreaddumpEnabled == null ? 0: this.graniteThreaddumpEnabled.hashCode());
    result = 31 * result + (this.graniteThreaddumpDumpsPerFile == null ? 0: this.graniteThreaddumpDumpsPerFile.hashCode());
    result = 31 * result + (this.graniteThreaddumpEnableGzipCompression == null ? 0: this.graniteThreaddumpEnableGzipCompression.hashCode());
    result = 31 * result + (this.graniteThreaddumpEnableDirectoriesCompression == null ? 0: this.graniteThreaddumpEnableDirectoriesCompression.hashCode());
    result = 31 * result + (this.graniteThreaddumpEnableJStack == null ? 0: this.graniteThreaddumpEnableJStack.hashCode());
    result = 31 * result + (this.graniteThreaddumpMaxBackupDays == null ? 0: this.graniteThreaddumpMaxBackupDays.hashCode());
    result = 31 * result + (this.graniteThreaddumpBackupCleanTrigger == null ? 0: this.graniteThreaddumpBackupCleanTrigger.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeGraniteThreaddumpThreadDumpCollectorProperties {\n");
    
    sb.append("  schedulerPeriod: ").append(schedulerPeriod).append("\n");
    sb.append("  schedulerRunOn: ").append(schedulerRunOn).append("\n");
    sb.append("  graniteThreaddumpEnabled: ").append(graniteThreaddumpEnabled).append("\n");
    sb.append("  graniteThreaddumpDumpsPerFile: ").append(graniteThreaddumpDumpsPerFile).append("\n");
    sb.append("  graniteThreaddumpEnableGzipCompression: ").append(graniteThreaddumpEnableGzipCompression).append("\n");
    sb.append("  graniteThreaddumpEnableDirectoriesCompression: ").append(graniteThreaddumpEnableDirectoriesCompression).append("\n");
    sb.append("  graniteThreaddumpEnableJStack: ").append(graniteThreaddumpEnableJStack).append("\n");
    sb.append("  graniteThreaddumpMaxBackupDays: ").append(graniteThreaddumpMaxBackupDays).append("\n");
    sb.append("  graniteThreaddumpBackupCleanTrigger: ").append(graniteThreaddumpBackupCleanTrigger).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
