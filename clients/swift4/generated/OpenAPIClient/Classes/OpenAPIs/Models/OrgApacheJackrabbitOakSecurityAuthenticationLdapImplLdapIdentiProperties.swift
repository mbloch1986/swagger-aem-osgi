//
// OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties: Codable {

    public var providerName: ConfigNodePropertyString?
    public var hostName: ConfigNodePropertyString?
    public var hostPort: ConfigNodePropertyInteger?
    public var hostSsl: ConfigNodePropertyBoolean?
    public var hostTls: ConfigNodePropertyBoolean?
    public var hostNoCertCheck: ConfigNodePropertyBoolean?
    public var bindDn: ConfigNodePropertyString?
    public var bindPassword: ConfigNodePropertyString?
    public var searchTimeout: ConfigNodePropertyString?
    public var adminPoolMaxActive: ConfigNodePropertyInteger?
    public var adminPoolLookupOnValidate: ConfigNodePropertyBoolean?
    public var userPoolMaxActive: ConfigNodePropertyInteger?
    public var userPoolLookupOnValidate: ConfigNodePropertyBoolean?
    public var userBaseDN: ConfigNodePropertyString?
    public var userObjectclass: ConfigNodePropertyArray?
    public var userIdAttribute: ConfigNodePropertyString?
    public var userExtraFilter: ConfigNodePropertyString?
    public var userMakeDnPath: ConfigNodePropertyBoolean?
    public var groupBaseDN: ConfigNodePropertyString?
    public var groupObjectclass: ConfigNodePropertyArray?
    public var groupNameAttribute: ConfigNodePropertyString?
    public var groupExtraFilter: ConfigNodePropertyString?
    public var groupMakeDnPath: ConfigNodePropertyBoolean?
    public var groupMemberAttribute: ConfigNodePropertyString?
    public var useUidForExtId: ConfigNodePropertyBoolean?
    public var customattributes: ConfigNodePropertyArray?

    public init(providerName: ConfigNodePropertyString?, hostName: ConfigNodePropertyString?, hostPort: ConfigNodePropertyInteger?, hostSsl: ConfigNodePropertyBoolean?, hostTls: ConfigNodePropertyBoolean?, hostNoCertCheck: ConfigNodePropertyBoolean?, bindDn: ConfigNodePropertyString?, bindPassword: ConfigNodePropertyString?, searchTimeout: ConfigNodePropertyString?, adminPoolMaxActive: ConfigNodePropertyInteger?, adminPoolLookupOnValidate: ConfigNodePropertyBoolean?, userPoolMaxActive: ConfigNodePropertyInteger?, userPoolLookupOnValidate: ConfigNodePropertyBoolean?, userBaseDN: ConfigNodePropertyString?, userObjectclass: ConfigNodePropertyArray?, userIdAttribute: ConfigNodePropertyString?, userExtraFilter: ConfigNodePropertyString?, userMakeDnPath: ConfigNodePropertyBoolean?, groupBaseDN: ConfigNodePropertyString?, groupObjectclass: ConfigNodePropertyArray?, groupNameAttribute: ConfigNodePropertyString?, groupExtraFilter: ConfigNodePropertyString?, groupMakeDnPath: ConfigNodePropertyBoolean?, groupMemberAttribute: ConfigNodePropertyString?, useUidForExtId: ConfigNodePropertyBoolean?, customattributes: ConfigNodePropertyArray?) {
        self.providerName = providerName
        self.hostName = hostName
        self.hostPort = hostPort
        self.hostSsl = hostSsl
        self.hostTls = hostTls
        self.hostNoCertCheck = hostNoCertCheck
        self.bindDn = bindDn
        self.bindPassword = bindPassword
        self.searchTimeout = searchTimeout
        self.adminPoolMaxActive = adminPoolMaxActive
        self.adminPoolLookupOnValidate = adminPoolLookupOnValidate
        self.userPoolMaxActive = userPoolMaxActive
        self.userPoolLookupOnValidate = userPoolLookupOnValidate
        self.userBaseDN = userBaseDN
        self.userObjectclass = userObjectclass
        self.userIdAttribute = userIdAttribute
        self.userExtraFilter = userExtraFilter
        self.userMakeDnPath = userMakeDnPath
        self.groupBaseDN = groupBaseDN
        self.groupObjectclass = groupObjectclass
        self.groupNameAttribute = groupNameAttribute
        self.groupExtraFilter = groupExtraFilter
        self.groupMakeDnPath = groupMakeDnPath
        self.groupMemberAttribute = groupMemberAttribute
        self.useUidForExtId = useUidForExtId
        self.customattributes = customattributes
    }

    public enum CodingKeys: String, CodingKey { 
        case providerName = "provider.name"
        case hostName = "host.name"
        case hostPort = "host.port"
        case hostSsl = "host.ssl"
        case hostTls = "host.tls"
        case hostNoCertCheck = "host.noCertCheck"
        case bindDn = "bind.dn"
        case bindPassword = "bind.password"
        case searchTimeout
        case adminPoolMaxActive = "adminPool.maxActive"
        case adminPoolLookupOnValidate = "adminPool.lookupOnValidate"
        case userPoolMaxActive = "userPool.maxActive"
        case userPoolLookupOnValidate = "userPool.lookupOnValidate"
        case userBaseDN = "user.baseDN"
        case userObjectclass = "user.objectclass"
        case userIdAttribute = "user.idAttribute"
        case userExtraFilter = "user.extraFilter"
        case userMakeDnPath = "user.makeDnPath"
        case groupBaseDN = "group.baseDN"
        case groupObjectclass = "group.objectclass"
        case groupNameAttribute = "group.nameAttribute"
        case groupExtraFilter = "group.extraFilter"
        case groupMakeDnPath = "group.makeDnPath"
        case groupMemberAttribute = "group.memberAttribute"
        case useUidForExtId
        case customattributes
    }


}

