/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties() {
    this->init();
}

OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::~OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties() {
    
}

void
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::init() {
    m_omnisearch_suggestion_requiretext_min_isSet = false;
    m_omnisearch_suggestion_spellcheck_require_isSet = false;
}

void
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(omnisearch_suggestion_requiretext_min, json[QString("omnisearch.suggestion.requiretext.min")]);
    
    ::OpenAPI::fromJsonValue(omnisearch_suggestion_spellcheck_require, json[QString("omnisearch.suggestion.spellcheck.require")]);
    
}

QString
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(omnisearch_suggestion_requiretext_min.isSet()){
        obj.insert(QString("omnisearch.suggestion.requiretext.min"), ::OpenAPI::toJsonValue(omnisearch_suggestion_requiretext_min));
    }
	if(omnisearch_suggestion_spellcheck_require.isSet()){
        obj.insert(QString("omnisearch.suggestion.spellcheck.require"), ::OpenAPI::toJsonValue(omnisearch_suggestion_spellcheck_require));
    }
    return obj;
}

OAIConfigNodePropertyInteger
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::getOmnisearchSuggestionRequiretextMin() const {
    return omnisearch_suggestion_requiretext_min;
}
void
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::setOmnisearchSuggestionRequiretextMin(const OAIConfigNodePropertyInteger &omnisearch_suggestion_requiretext_min) {
    this->omnisearch_suggestion_requiretext_min = omnisearch_suggestion_requiretext_min;
    this->m_omnisearch_suggestion_requiretext_min_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::getOmnisearchSuggestionSpellcheckRequire() const {
    return omnisearch_suggestion_spellcheck_require;
}
void
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::setOmnisearchSuggestionSpellcheckRequire(const OAIConfigNodePropertyBoolean &omnisearch_suggestion_spellcheck_require) {
    this->omnisearch_suggestion_spellcheck_require = omnisearch_suggestion_spellcheck_require;
    this->m_omnisearch_suggestion_spellcheck_require_isSet = true;
}


bool
OAIComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(omnisearch_suggestion_requiretext_min.isSet()){ isObjectUpdated = true; break;}
    
        if(omnisearch_suggestion_spellcheck_require.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

