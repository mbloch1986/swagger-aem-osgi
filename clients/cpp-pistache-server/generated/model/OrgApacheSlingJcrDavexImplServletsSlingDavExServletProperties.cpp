/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties()
{
    m_AliasIsSet = false;
    m_Dav_create_absolute_uriIsSet = false;
    m_Dav_protectedhandlersIsSet = false;
    
}

OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::~OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties()
{
}

void OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_AliasIsSet)
    {
        val["alias"] = ModelBase::toJson(m_Alias);
    }
    if(m_Dav_create_absolute_uriIsSet)
    {
        val["dav.create-absolute-uri"] = ModelBase::toJson(m_Dav_create_absolute_uri);
    }
    if(m_Dav_protectedhandlersIsSet)
    {
        val["dav.protectedhandlers"] = ModelBase::toJson(m_Dav_protectedhandlers);
    }
    

    return val;
}

void OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("alias") != val.end())
    {
        if(!val["alias"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["alias"]);
            setAlias( newItem );
        }
        
    }
    if(val.find("dav.create-absolute-uri") != val.end())
    {
        if(!val["dav.create-absolute-uri"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["dav.create-absolute-uri"]);
            setDavCreateAbsoluteUri( newItem );
        }
        
    }
    if(val.find("dav.protectedhandlers") != val.end())
    {
        if(!val["dav.protectedhandlers"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["dav.protectedhandlers"]);
            setDavProtectedhandlers( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::getAlias() const
{
    return m_Alias;
}
void OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::setAlias(ConfigNodePropertyString const& value)
{
    m_Alias = value;
    m_AliasIsSet = true;
}
bool OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::aliasIsSet() const
{
    return m_AliasIsSet;
}
void OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::unsetAlias()
{
    m_AliasIsSet = false;
}
ConfigNodePropertyBoolean OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::getDavCreateAbsoluteUri() const
{
    return m_Dav_create_absolute_uri;
}
void OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::setDavCreateAbsoluteUri(ConfigNodePropertyBoolean const& value)
{
    m_Dav_create_absolute_uri = value;
    m_Dav_create_absolute_uriIsSet = true;
}
bool OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::davCreateAbsoluteUriIsSet() const
{
    return m_Dav_create_absolute_uriIsSet;
}
void OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::unsetDav_create_absolute_uri()
{
    m_Dav_create_absolute_uriIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::getDavProtectedhandlers() const
{
    return m_Dav_protectedhandlers;
}
void OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::setDavProtectedhandlers(ConfigNodePropertyString const& value)
{
    m_Dav_protectedhandlers = value;
    m_Dav_protectedhandlersIsSet = true;
}
bool OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::davProtectedhandlersIsSet() const
{
    return m_Dav_protectedhandlersIsSet;
}
void OrgApacheSlingJcrDavexImplServletsSlingDavExServletProperties::unsetDav_protectedhandlers()
{
    m_Dav_protectedhandlersIsSet = false;
}

}
}
}
}

