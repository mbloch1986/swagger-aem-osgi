/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ComDayCqWcmCoreImplVersionManagerImplProperties
 */
public class ComDayCqWcmCoreImplVersionManagerImplPropertiesTest {
    private final ComDayCqWcmCoreImplVersionManagerImplProperties model = new ComDayCqWcmCoreImplVersionManagerImplProperties();

    /**
     * Model tests for ComDayCqWcmCoreImplVersionManagerImplProperties
     */
    @Test
    public void testComDayCqWcmCoreImplVersionManagerImplProperties() {
        // TODO: test ComDayCqWcmCoreImplVersionManagerImplProperties
    }

    /**
     * Test the property 'versionmanagerCreateVersionOnActivation'
     */
    @Test
    public void versionmanagerCreateVersionOnActivationTest() {
        // TODO: test versionmanagerCreateVersionOnActivation
    }

    /**
     * Test the property 'versionmanagerPurgingEnabled'
     */
    @Test
    public void versionmanagerPurgingEnabledTest() {
        // TODO: test versionmanagerPurgingEnabled
    }

    /**
     * Test the property 'versionmanagerPurgePaths'
     */
    @Test
    public void versionmanagerPurgePathsTest() {
        // TODO: test versionmanagerPurgePaths
    }

    /**
     * Test the property 'versionmanagerIvPaths'
     */
    @Test
    public void versionmanagerIvPathsTest() {
        // TODO: test versionmanagerIvPaths
    }

    /**
     * Test the property 'versionmanagerMaxAgeDays'
     */
    @Test
    public void versionmanagerMaxAgeDaysTest() {
        // TODO: test versionmanagerMaxAgeDays
    }

    /**
     * Test the property 'versionmanagerMaxNumberVersions'
     */
    @Test
    public void versionmanagerMaxNumberVersionsTest() {
        // TODO: test versionmanagerMaxNumberVersions
    }

    /**
     * Test the property 'versionmanagerMinNumberVersions'
     */
    @Test
    public void versionmanagerMinNumberVersionsTest() {
        // TODO: test versionmanagerMinNumberVersions
    }

}
