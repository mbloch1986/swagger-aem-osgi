/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties {
  
  @SerializedName("scheduler.period")
  private ConfigNodePropertyInteger schedulerPeriod = null;
  @SerializedName("scheduler.concurrent")
  private ConfigNodePropertyBoolean schedulerConcurrent = null;
  @SerializedName("service.bad_link_tolerance_interval")
  private ConfigNodePropertyInteger serviceBadLinkToleranceInterval = null;
  @SerializedName("service.check_override_patterns")
  private ConfigNodePropertyArray serviceCheckOverridePatterns = null;
  @SerializedName("service.cache_broken_internal_links")
  private ConfigNodePropertyBoolean serviceCacheBrokenInternalLinks = null;
  @SerializedName("service.special_link_prefix")
  private ConfigNodePropertyArray serviceSpecialLinkPrefix = null;
  @SerializedName("service.special_link_patterns")
  private ConfigNodePropertyArray serviceSpecialLinkPatterns = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getSchedulerPeriod() {
    return schedulerPeriod;
  }
  public void setSchedulerPeriod(ConfigNodePropertyInteger schedulerPeriod) {
    this.schedulerPeriod = schedulerPeriod;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getSchedulerConcurrent() {
    return schedulerConcurrent;
  }
  public void setSchedulerConcurrent(ConfigNodePropertyBoolean schedulerConcurrent) {
    this.schedulerConcurrent = schedulerConcurrent;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getServiceBadLinkToleranceInterval() {
    return serviceBadLinkToleranceInterval;
  }
  public void setServiceBadLinkToleranceInterval(ConfigNodePropertyInteger serviceBadLinkToleranceInterval) {
    this.serviceBadLinkToleranceInterval = serviceBadLinkToleranceInterval;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getServiceCheckOverridePatterns() {
    return serviceCheckOverridePatterns;
  }
  public void setServiceCheckOverridePatterns(ConfigNodePropertyArray serviceCheckOverridePatterns) {
    this.serviceCheckOverridePatterns = serviceCheckOverridePatterns;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getServiceCacheBrokenInternalLinks() {
    return serviceCacheBrokenInternalLinks;
  }
  public void setServiceCacheBrokenInternalLinks(ConfigNodePropertyBoolean serviceCacheBrokenInternalLinks) {
    this.serviceCacheBrokenInternalLinks = serviceCacheBrokenInternalLinks;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getServiceSpecialLinkPrefix() {
    return serviceSpecialLinkPrefix;
  }
  public void setServiceSpecialLinkPrefix(ConfigNodePropertyArray serviceSpecialLinkPrefix) {
    this.serviceSpecialLinkPrefix = serviceSpecialLinkPrefix;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getServiceSpecialLinkPatterns() {
    return serviceSpecialLinkPatterns;
  }
  public void setServiceSpecialLinkPatterns(ConfigNodePropertyArray serviceSpecialLinkPatterns) {
    this.serviceSpecialLinkPatterns = serviceSpecialLinkPatterns;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties = (ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties) o;
    return (this.schedulerPeriod == null ? comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.schedulerPeriod == null : this.schedulerPeriod.equals(comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.schedulerPeriod)) &&
        (this.schedulerConcurrent == null ? comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.schedulerConcurrent == null : this.schedulerConcurrent.equals(comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.schedulerConcurrent)) &&
        (this.serviceBadLinkToleranceInterval == null ? comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceBadLinkToleranceInterval == null : this.serviceBadLinkToleranceInterval.equals(comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceBadLinkToleranceInterval)) &&
        (this.serviceCheckOverridePatterns == null ? comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceCheckOverridePatterns == null : this.serviceCheckOverridePatterns.equals(comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceCheckOverridePatterns)) &&
        (this.serviceCacheBrokenInternalLinks == null ? comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceCacheBrokenInternalLinks == null : this.serviceCacheBrokenInternalLinks.equals(comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceCacheBrokenInternalLinks)) &&
        (this.serviceSpecialLinkPrefix == null ? comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceSpecialLinkPrefix == null : this.serviceSpecialLinkPrefix.equals(comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceSpecialLinkPrefix)) &&
        (this.serviceSpecialLinkPatterns == null ? comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceSpecialLinkPatterns == null : this.serviceSpecialLinkPatterns.equals(comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties.serviceSpecialLinkPatterns));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.schedulerPeriod == null ? 0: this.schedulerPeriod.hashCode());
    result = 31 * result + (this.schedulerConcurrent == null ? 0: this.schedulerConcurrent.hashCode());
    result = 31 * result + (this.serviceBadLinkToleranceInterval == null ? 0: this.serviceBadLinkToleranceInterval.hashCode());
    result = 31 * result + (this.serviceCheckOverridePatterns == null ? 0: this.serviceCheckOverridePatterns.hashCode());
    result = 31 * result + (this.serviceCacheBrokenInternalLinks == null ? 0: this.serviceCacheBrokenInternalLinks.hashCode());
    result = 31 * result + (this.serviceSpecialLinkPrefix == null ? 0: this.serviceSpecialLinkPrefix.hashCode());
    result = 31 * result + (this.serviceSpecialLinkPatterns == null ? 0: this.serviceSpecialLinkPatterns.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties {\n");
    
    sb.append("  schedulerPeriod: ").append(schedulerPeriod).append("\n");
    sb.append("  schedulerConcurrent: ").append(schedulerConcurrent).append("\n");
    sb.append("  serviceBadLinkToleranceInterval: ").append(serviceBadLinkToleranceInterval).append("\n");
    sb.append("  serviceCheckOverridePatterns: ").append(serviceCheckOverridePatterns).append("\n");
    sb.append("  serviceCacheBrokenInternalLinks: ").append(serviceCacheBrokenInternalLinks).append("\n");
    sb.append("  serviceSpecialLinkPrefix: ").append(serviceSpecialLinkPrefix).append("\n");
    sb.append("  serviceSpecialLinkPatterns: ").append(serviceSpecialLinkPatterns).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
