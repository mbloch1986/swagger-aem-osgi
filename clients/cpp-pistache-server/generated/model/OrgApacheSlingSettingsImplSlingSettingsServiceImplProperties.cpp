/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties()
{
    m_Sling_nameIsSet = false;
    m_Sling_descriptionIsSet = false;
    
}

OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::~OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties()
{
}

void OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Sling_nameIsSet)
    {
        val["sling.name"] = ModelBase::toJson(m_Sling_name);
    }
    if(m_Sling_descriptionIsSet)
    {
        val["sling.description"] = ModelBase::toJson(m_Sling_description);
    }
    

    return val;
}

void OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("sling.name") != val.end())
    {
        if(!val["sling.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sling.name"]);
            setSlingName( newItem );
        }
        
    }
    if(val.find("sling.description") != val.end())
    {
        if(!val["sling.description"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sling.description"]);
            setSlingDescription( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::getSlingName() const
{
    return m_Sling_name;
}
void OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::setSlingName(ConfigNodePropertyString const& value)
{
    m_Sling_name = value;
    m_Sling_nameIsSet = true;
}
bool OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::slingNameIsSet() const
{
    return m_Sling_nameIsSet;
}
void OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::unsetSling_name()
{
    m_Sling_nameIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::getSlingDescription() const
{
    return m_Sling_description;
}
void OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::setSlingDescription(ConfigNodePropertyString const& value)
{
    m_Sling_description = value;
    m_Sling_descriptionIsSet = true;
}
bool OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::slingDescriptionIsSet() const
{
    return m_Sling_descriptionIsSet;
}
void OrgApacheSlingSettingsImplSlingSettingsServiceImplProperties::unsetSling_description()
{
    m_Sling_descriptionIsSet = false;
}

}
}
}
}

