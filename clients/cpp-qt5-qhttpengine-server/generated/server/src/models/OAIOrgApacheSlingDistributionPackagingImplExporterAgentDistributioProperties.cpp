/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties() {
    this->init();
}

OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::~OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties() {
    
}

void
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::init() {
    m_name_isSet = false;
    m_queue_isSet = false;
    m_drop_invalid_items_isSet = false;
    m_agent_target_isSet = false;
}

void
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    
    ::OpenAPI::fromJsonValue(queue, json[QString("queue")]);
    
    ::OpenAPI::fromJsonValue(drop_invalid_items, json[QString("drop.invalid.items")]);
    
    ::OpenAPI::fromJsonValue(agent_target, json[QString("agent.target")]);
    
}

QString
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::asJsonObject() const {
    QJsonObject obj;
	if(name.isSet()){
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
	if(queue.isSet()){
        obj.insert(QString("queue"), ::OpenAPI::toJsonValue(queue));
    }
	if(drop_invalid_items.isSet()){
        obj.insert(QString("drop.invalid.items"), ::OpenAPI::toJsonValue(drop_invalid_items));
    }
	if(agent_target.isSet()){
        obj.insert(QString("agent.target"), ::OpenAPI::toJsonValue(agent_target));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::getName() const {
    return name;
}
void
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::setName(const OAIConfigNodePropertyString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::getQueue() const {
    return queue;
}
void
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::setQueue(const OAIConfigNodePropertyString &queue) {
    this->queue = queue;
    this->m_queue_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::getDropInvalidItems() const {
    return drop_invalid_items;
}
void
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::setDropInvalidItems(const OAIConfigNodePropertyBoolean &drop_invalid_items) {
    this->drop_invalid_items = drop_invalid_items;
    this->m_drop_invalid_items_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::getAgentTarget() const {
    return agent_target;
}
void
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::setAgentTarget(const OAIConfigNodePropertyString &agent_target) {
    this->agent_target = agent_target;
    this->m_agent_target_isSet = true;
}


bool
OAIOrgApacheSlingDistributionPackagingImplExporterAgentDistributioProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(name.isSet()){ isObjectUpdated = true; break;}
    
        if(queue.isSet()){ isObjectUpdated = true; break;}
    
        if(drop_invalid_items.isSet()){ isObjectUpdated = true; break;}
    
        if(agent_target.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

