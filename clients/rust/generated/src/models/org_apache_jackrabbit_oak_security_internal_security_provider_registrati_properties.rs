/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiProperties {
  #[serde(rename = "requiredServicePids")]
  required_service_pids: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "authorizationCompositionType")]
  authorization_composition_type: Option<::models::ConfigNodePropertyDropDown>
}

impl OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiProperties {
  pub fn new() -> OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiProperties {
    OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiProperties {
      required_service_pids: None,
      authorization_composition_type: None
    }
  }

  pub fn set_required_service_pids(&mut self, required_service_pids: ::models::ConfigNodePropertyArray) {
    self.required_service_pids = Some(required_service_pids);
  }

  pub fn with_required_service_pids(mut self, required_service_pids: ::models::ConfigNodePropertyArray) -> OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiProperties {
    self.required_service_pids = Some(required_service_pids);
    self
  }

  pub fn required_service_pids(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.required_service_pids.as_ref()
  }

  pub fn reset_required_service_pids(&mut self) {
    self.required_service_pids = None;
  }

  pub fn set_authorization_composition_type(&mut self, authorization_composition_type: ::models::ConfigNodePropertyDropDown) {
    self.authorization_composition_type = Some(authorization_composition_type);
  }

  pub fn with_authorization_composition_type(mut self, authorization_composition_type: ::models::ConfigNodePropertyDropDown) -> OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiProperties {
    self.authorization_composition_type = Some(authorization_composition_type);
    self
  }

  pub fn authorization_composition_type(&self) -> Option<&::models::ConfigNodePropertyDropDown> {
    self.authorization_composition_type.as_ref()
  }

  pub fn reset_authorization_composition_type(&mut self) {
    self.authorization_composition_type = None;
  }

}



