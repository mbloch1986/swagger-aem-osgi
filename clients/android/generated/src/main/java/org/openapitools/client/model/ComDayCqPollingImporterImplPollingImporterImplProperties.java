/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComDayCqPollingImporterImplPollingImporterImplProperties {
  
  @SerializedName("importer.min.interval")
  private ConfigNodePropertyInteger importerMinInterval = null;
  @SerializedName("importer.user")
  private ConfigNodePropertyString importerUser = null;
  @SerializedName("exclude.paths")
  private ConfigNodePropertyArray excludePaths = null;
  @SerializedName("include.paths")
  private ConfigNodePropertyArray includePaths = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getImporterMinInterval() {
    return importerMinInterval;
  }
  public void setImporterMinInterval(ConfigNodePropertyInteger importerMinInterval) {
    this.importerMinInterval = importerMinInterval;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getImporterUser() {
    return importerUser;
  }
  public void setImporterUser(ConfigNodePropertyString importerUser) {
    this.importerUser = importerUser;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getExcludePaths() {
    return excludePaths;
  }
  public void setExcludePaths(ConfigNodePropertyArray excludePaths) {
    this.excludePaths = excludePaths;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getIncludePaths() {
    return includePaths;
  }
  public void setIncludePaths(ConfigNodePropertyArray includePaths) {
    this.includePaths = includePaths;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComDayCqPollingImporterImplPollingImporterImplProperties comDayCqPollingImporterImplPollingImporterImplProperties = (ComDayCqPollingImporterImplPollingImporterImplProperties) o;
    return (this.importerMinInterval == null ? comDayCqPollingImporterImplPollingImporterImplProperties.importerMinInterval == null : this.importerMinInterval.equals(comDayCqPollingImporterImplPollingImporterImplProperties.importerMinInterval)) &&
        (this.importerUser == null ? comDayCqPollingImporterImplPollingImporterImplProperties.importerUser == null : this.importerUser.equals(comDayCqPollingImporterImplPollingImporterImplProperties.importerUser)) &&
        (this.excludePaths == null ? comDayCqPollingImporterImplPollingImporterImplProperties.excludePaths == null : this.excludePaths.equals(comDayCqPollingImporterImplPollingImporterImplProperties.excludePaths)) &&
        (this.includePaths == null ? comDayCqPollingImporterImplPollingImporterImplProperties.includePaths == null : this.includePaths.equals(comDayCqPollingImporterImplPollingImporterImplProperties.includePaths));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.importerMinInterval == null ? 0: this.importerMinInterval.hashCode());
    result = 31 * result + (this.importerUser == null ? 0: this.importerUser.hashCode());
    result = 31 * result + (this.excludePaths == null ? 0: this.excludePaths.hashCode());
    result = 31 * result + (this.includePaths == null ? 0: this.includePaths.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComDayCqPollingImporterImplPollingImporterImplProperties {\n");
    
    sb.append("  importerMinInterval: ").append(importerMinInterval).append("\n");
    sb.append("  importerUser: ").append(importerUser).append("\n");
    sb.append("  excludePaths: ").append(excludePaths).append("\n");
    sb.append("  includePaths: ").append(includePaths).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
