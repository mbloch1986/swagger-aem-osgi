/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties() {
    init();
}

OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::~OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties() {
    this->cleanup();
}

void
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::init() {
    get_cache_expiration_unit = new OAIConfigNodePropertyDropDown();
    m_get_cache_expiration_unit_isSet = false;
    get_cache_expiration_value = new OAIConfigNodePropertyInteger();
    m_get_cache_expiration_value_isSet = false;
}

void
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::cleanup() {
    if(get_cache_expiration_unit != nullptr) { 
        delete get_cache_expiration_unit;
    }
    if(get_cache_expiration_value != nullptr) { 
        delete get_cache_expiration_value;
    }
}

OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties*
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&get_cache_expiration_unit, pJson["getCacheExpirationUnit"], "OAIConfigNodePropertyDropDown", "OAIConfigNodePropertyDropDown");
    
    ::OpenAPI::setValue(&get_cache_expiration_value, pJson["getCacheExpirationValue"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::asJsonObject() {
    QJsonObject obj;
    if((get_cache_expiration_unit != nullptr) && (get_cache_expiration_unit->isSet())){
        toJsonValue(QString("getCacheExpirationUnit"), get_cache_expiration_unit, obj, QString("OAIConfigNodePropertyDropDown"));
    }
    if((get_cache_expiration_value != nullptr) && (get_cache_expiration_value->isSet())){
        toJsonValue(QString("getCacheExpirationValue"), get_cache_expiration_value, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyDropDown*
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::getGetCacheExpirationUnit() {
    return get_cache_expiration_unit;
}
void
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::setGetCacheExpirationUnit(OAIConfigNodePropertyDropDown* get_cache_expiration_unit) {
    this->get_cache_expiration_unit = get_cache_expiration_unit;
    this->m_get_cache_expiration_unit_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::getGetCacheExpirationValue() {
    return get_cache_expiration_value;
}
void
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::setGetCacheExpirationValue(OAIConfigNodePropertyInteger* get_cache_expiration_value) {
    this->get_cache_expiration_value = get_cache_expiration_value;
    this->m_get_cache_expiration_value_isSet = true;
}


bool
OAIComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(get_cache_expiration_unit != nullptr && get_cache_expiration_unit->isSet()){ isObjectUpdated = true; break;}
        if(get_cache_expiration_value != nullptr && get_cache_expiration_value->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

