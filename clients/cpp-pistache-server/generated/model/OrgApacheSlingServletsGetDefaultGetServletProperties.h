/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingServletsGetDefaultGetServletProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingServletsGetDefaultGetServletProperties_H_
#define OrgApacheSlingServletsGetDefaultGetServletProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingServletsGetDefaultGetServletProperties
    : public ModelBase
{
public:
    OrgApacheSlingServletsGetDefaultGetServletProperties();
    virtual ~OrgApacheSlingServletsGetDefaultGetServletProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingServletsGetDefaultGetServletProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getAliases() const;
    void setAliases(ConfigNodePropertyArray const& value);
    bool aliasesIsSet() const;
    void unsetAliases();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getIndex() const;
    void setIndex(ConfigNodePropertyBoolean const& value);
    bool indexIsSet() const;
    void unsetIndex();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getIndexFiles() const;
    void setIndexFiles(ConfigNodePropertyArray const& value);
    bool indexFilesIsSet() const;
    void unsetIndex_files();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnableHtml() const;
    void setEnableHtml(ConfigNodePropertyBoolean const& value);
    bool enableHtmlIsSet() const;
    void unsetEnable_html();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnableJson() const;
    void setEnableJson(ConfigNodePropertyBoolean const& value);
    bool enableJsonIsSet() const;
    void unsetEnable_json();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnableTxt() const;
    void setEnableTxt(ConfigNodePropertyBoolean const& value);
    bool enableTxtIsSet() const;
    void unsetEnable_txt();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnableXml() const;
    void setEnableXml(ConfigNodePropertyBoolean const& value);
    bool enableXmlIsSet() const;
    void unsetEnable_xml();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getJsonMaximumresults() const;
    void setJsonMaximumresults(ConfigNodePropertyInteger const& value);
    bool jsonMaximumresultsIsSet() const;
    void unsetJson_maximumresults();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEcmaSuport() const;
    void setEcmaSuport(ConfigNodePropertyBoolean const& value);
    bool ecmaSuportIsSet() const;
    void unsetEcmaSuport();

protected:
    ConfigNodePropertyArray m_Aliases;
    bool m_AliasesIsSet;
    ConfigNodePropertyBoolean m_Index;
    bool m_IndexIsSet;
    ConfigNodePropertyArray m_Index_files;
    bool m_Index_filesIsSet;
    ConfigNodePropertyBoolean m_Enable_html;
    bool m_Enable_htmlIsSet;
    ConfigNodePropertyBoolean m_Enable_json;
    bool m_Enable_jsonIsSet;
    ConfigNodePropertyBoolean m_Enable_txt;
    bool m_Enable_txtIsSet;
    ConfigNodePropertyBoolean m_Enable_xml;
    bool m_Enable_xmlIsSet;
    ConfigNodePropertyInteger m_Json_maximumresults;
    bool m_Json_maximumresultsIsSet;
    ConfigNodePropertyBoolean m_EcmaSuport;
    bool m_EcmaSuportIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingServletsGetDefaultGetServletProperties_H_ */
