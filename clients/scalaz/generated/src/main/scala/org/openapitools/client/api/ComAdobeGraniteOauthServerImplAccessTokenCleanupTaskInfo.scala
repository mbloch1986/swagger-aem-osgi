package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo._

case class ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskProperties])

object ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfoCodecJson: CodecJson[ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo] = CodecJson.derive[ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo]
  implicit val ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfoDecoder: EntityDecoder[ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo] = jsonOf[ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo]
  implicit val ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfoEncoder: EntityEncoder[ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo] = jsonEncoderOf[ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo]
}
