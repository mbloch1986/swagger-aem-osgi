/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties_H_
#define OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyInteger.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties: public OAIObject {
public:
    OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties();
    OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties(QString json);
    ~OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyBoolean* getEnabled();
    void setEnabled(OAIConfigNodePropertyBoolean* enabled);

    OAIConfigNodePropertyString* getAgentName();
    void setAgentName(OAIConfigNodePropertyString* agent_name);

    OAIConfigNodePropertyString* getDiffPath();
    void setDiffPath(OAIConfigNodePropertyString* diff_path);

    OAIConfigNodePropertyString* getObservedPath();
    void setObservedPath(OAIConfigNodePropertyString* observed_path);

    OAIConfigNodePropertyString* getServiceName();
    void setServiceName(OAIConfigNodePropertyString* service_name);

    OAIConfigNodePropertyString* getPropertyNames();
    void setPropertyNames(OAIConfigNodePropertyString* property_names);

    OAIConfigNodePropertyInteger* getDistributionDelay();
    void setDistributionDelay(OAIConfigNodePropertyInteger* distribution_delay);

    OAIConfigNodePropertyString* getServiceUserTarget();
    void setServiceUserTarget(OAIConfigNodePropertyString* service_user_target);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyBoolean* enabled;
    bool m_enabled_isSet;

    OAIConfigNodePropertyString* agent_name;
    bool m_agent_name_isSet;

    OAIConfigNodePropertyString* diff_path;
    bool m_diff_path_isSet;

    OAIConfigNodePropertyString* observed_path;
    bool m_observed_path_isSet;

    OAIConfigNodePropertyString* service_name;
    bool m_service_name_isSet;

    OAIConfigNodePropertyString* property_names;
    bool m_property_names_isSet;

    OAIConfigNodePropertyInteger* distribution_delay;
    bool m_distribution_delay_isSet;

    OAIConfigNodePropertyString* service_user_target;
    bool m_service_user_target_isSet;

};

}

#endif /* OAIComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties_H_ */
