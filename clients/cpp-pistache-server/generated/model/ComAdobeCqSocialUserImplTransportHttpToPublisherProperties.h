/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeCqSocialUserImplTransportHttpToPublisherProperties.h
 *
 * 
 */

#ifndef ComAdobeCqSocialUserImplTransportHttpToPublisherProperties_H_
#define ComAdobeCqSocialUserImplTransportHttpToPublisherProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqSocialUserImplTransportHttpToPublisherProperties
    : public ModelBase
{
public:
    ComAdobeCqSocialUserImplTransportHttpToPublisherProperties();
    virtual ~ComAdobeCqSocialUserImplTransportHttpToPublisherProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeCqSocialUserImplTransportHttpToPublisherProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEnable() const;
    void setEnable(ConfigNodePropertyBoolean const& value);
    bool enableIsSet() const;
    void unsetEnable();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getAgentConfiguration() const;
    void setAgentConfiguration(ConfigNodePropertyArray const& value);
    bool agentConfigurationIsSet() const;
    void unsetAgent_configuration();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getContextPath() const;
    void setContextPath(ConfigNodePropertyString const& value);
    bool contextPathIsSet() const;
    void unsetContext_path();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getDisabledCipherSuites() const;
    void setDisabledCipherSuites(ConfigNodePropertyArray const& value);
    bool disabledCipherSuitesIsSet() const;
    void unsetDisabled_cipher_suites();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getEnabledCipherSuites() const;
    void setEnabledCipherSuites(ConfigNodePropertyArray const& value);
    bool enabledCipherSuitesIsSet() const;
    void unsetEnabled_cipher_suites();

protected:
    ConfigNodePropertyBoolean m_Enable;
    bool m_EnableIsSet;
    ConfigNodePropertyArray m_Agent_configuration;
    bool m_Agent_configurationIsSet;
    ConfigNodePropertyString m_Context_path;
    bool m_Context_pathIsSet;
    ConfigNodePropertyArray m_Disabled_cipher_suites;
    bool m_Disabled_cipher_suitesIsSet;
    ConfigNodePropertyArray m_Enabled_cipher_suites;
    bool m_Enabled_cipher_suitesIsSet;
};

}
}
}
}

#endif /* ComAdobeCqSocialUserImplTransportHttpToPublisherProperties_H_ */
