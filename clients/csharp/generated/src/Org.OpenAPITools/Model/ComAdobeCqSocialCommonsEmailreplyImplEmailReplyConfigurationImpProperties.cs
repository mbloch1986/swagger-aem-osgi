/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties
    /// </summary>
    [DataContract]
    public partial class ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties :  IEquatable<ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties" /> class.
        /// </summary>
        /// <param name="emailName">emailName.</param>
        /// <param name="emailCreatePostFromReply">emailCreatePostFromReply.</param>
        /// <param name="emailAddCommentIdTo">emailAddCommentIdTo.</param>
        /// <param name="emailSubjectMaximumLength">emailSubjectMaximumLength.</param>
        /// <param name="emailReplyToAddress">emailReplyToAddress.</param>
        /// <param name="emailReplyToDelimiter">emailReplyToDelimiter.</param>
        /// <param name="emailTrackerIdPrefixInSubject">emailTrackerIdPrefixInSubject.</param>
        /// <param name="emailTrackerIdPrefixInBody">emailTrackerIdPrefixInBody.</param>
        /// <param name="emailAsHTML">emailAsHTML.</param>
        /// <param name="emailDefaultUserName">emailDefaultUserName.</param>
        /// <param name="emailTemplatesRootPath">emailTemplatesRootPath.</param>
        public ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties(ConfigNodePropertyString emailName = default(ConfigNodePropertyString), ConfigNodePropertyBoolean emailCreatePostFromReply = default(ConfigNodePropertyBoolean), ConfigNodePropertyDropDown emailAddCommentIdTo = default(ConfigNodePropertyDropDown), ConfigNodePropertyInteger emailSubjectMaximumLength = default(ConfigNodePropertyInteger), ConfigNodePropertyString emailReplyToAddress = default(ConfigNodePropertyString), ConfigNodePropertyString emailReplyToDelimiter = default(ConfigNodePropertyString), ConfigNodePropertyString emailTrackerIdPrefixInSubject = default(ConfigNodePropertyString), ConfigNodePropertyString emailTrackerIdPrefixInBody = default(ConfigNodePropertyString), ConfigNodePropertyBoolean emailAsHTML = default(ConfigNodePropertyBoolean), ConfigNodePropertyString emailDefaultUserName = default(ConfigNodePropertyString), ConfigNodePropertyString emailTemplatesRootPath = default(ConfigNodePropertyString))
        {
            this.EmailName = emailName;
            this.EmailCreatePostFromReply = emailCreatePostFromReply;
            this.EmailAddCommentIdTo = emailAddCommentIdTo;
            this.EmailSubjectMaximumLength = emailSubjectMaximumLength;
            this.EmailReplyToAddress = emailReplyToAddress;
            this.EmailReplyToDelimiter = emailReplyToDelimiter;
            this.EmailTrackerIdPrefixInSubject = emailTrackerIdPrefixInSubject;
            this.EmailTrackerIdPrefixInBody = emailTrackerIdPrefixInBody;
            this.EmailAsHTML = emailAsHTML;
            this.EmailDefaultUserName = emailDefaultUserName;
            this.EmailTemplatesRootPath = emailTemplatesRootPath;
        }
        
        /// <summary>
        /// Gets or Sets EmailName
        /// </summary>
        [DataMember(Name="email.name", EmitDefaultValue=false)]
        public ConfigNodePropertyString EmailName { get; set; }

        /// <summary>
        /// Gets or Sets EmailCreatePostFromReply
        /// </summary>
        [DataMember(Name="email.createPostFromReply", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean EmailCreatePostFromReply { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddCommentIdTo
        /// </summary>
        [DataMember(Name="email.addCommentIdTo", EmitDefaultValue=false)]
        public ConfigNodePropertyDropDown EmailAddCommentIdTo { get; set; }

        /// <summary>
        /// Gets or Sets EmailSubjectMaximumLength
        /// </summary>
        [DataMember(Name="email.subjectMaximumLength", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger EmailSubjectMaximumLength { get; set; }

        /// <summary>
        /// Gets or Sets EmailReplyToAddress
        /// </summary>
        [DataMember(Name="email.replyToAddress", EmitDefaultValue=false)]
        public ConfigNodePropertyString EmailReplyToAddress { get; set; }

        /// <summary>
        /// Gets or Sets EmailReplyToDelimiter
        /// </summary>
        [DataMember(Name="email.replyToDelimiter", EmitDefaultValue=false)]
        public ConfigNodePropertyString EmailReplyToDelimiter { get; set; }

        /// <summary>
        /// Gets or Sets EmailTrackerIdPrefixInSubject
        /// </summary>
        [DataMember(Name="email.trackerIdPrefixInSubject", EmitDefaultValue=false)]
        public ConfigNodePropertyString EmailTrackerIdPrefixInSubject { get; set; }

        /// <summary>
        /// Gets or Sets EmailTrackerIdPrefixInBody
        /// </summary>
        [DataMember(Name="email.trackerIdPrefixInBody", EmitDefaultValue=false)]
        public ConfigNodePropertyString EmailTrackerIdPrefixInBody { get; set; }

        /// <summary>
        /// Gets or Sets EmailAsHTML
        /// </summary>
        [DataMember(Name="email.asHTML", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean EmailAsHTML { get; set; }

        /// <summary>
        /// Gets or Sets EmailDefaultUserName
        /// </summary>
        [DataMember(Name="email.defaultUserName", EmitDefaultValue=false)]
        public ConfigNodePropertyString EmailDefaultUserName { get; set; }

        /// <summary>
        /// Gets or Sets EmailTemplatesRootPath
        /// </summary>
        [DataMember(Name="email.templates.rootPath", EmitDefaultValue=false)]
        public ConfigNodePropertyString EmailTemplatesRootPath { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties {\n");
            sb.Append("  EmailName: ").Append(EmailName).Append("\n");
            sb.Append("  EmailCreatePostFromReply: ").Append(EmailCreatePostFromReply).Append("\n");
            sb.Append("  EmailAddCommentIdTo: ").Append(EmailAddCommentIdTo).Append("\n");
            sb.Append("  EmailSubjectMaximumLength: ").Append(EmailSubjectMaximumLength).Append("\n");
            sb.Append("  EmailReplyToAddress: ").Append(EmailReplyToAddress).Append("\n");
            sb.Append("  EmailReplyToDelimiter: ").Append(EmailReplyToDelimiter).Append("\n");
            sb.Append("  EmailTrackerIdPrefixInSubject: ").Append(EmailTrackerIdPrefixInSubject).Append("\n");
            sb.Append("  EmailTrackerIdPrefixInBody: ").Append(EmailTrackerIdPrefixInBody).Append("\n");
            sb.Append("  EmailAsHTML: ").Append(EmailAsHTML).Append("\n");
            sb.Append("  EmailDefaultUserName: ").Append(EmailDefaultUserName).Append("\n");
            sb.Append("  EmailTemplatesRootPath: ").Append(EmailTemplatesRootPath).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties);
        }

        /// <summary>
        /// Returns true if ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.EmailName == input.EmailName ||
                    (this.EmailName != null &&
                    this.EmailName.Equals(input.EmailName))
                ) && 
                (
                    this.EmailCreatePostFromReply == input.EmailCreatePostFromReply ||
                    (this.EmailCreatePostFromReply != null &&
                    this.EmailCreatePostFromReply.Equals(input.EmailCreatePostFromReply))
                ) && 
                (
                    this.EmailAddCommentIdTo == input.EmailAddCommentIdTo ||
                    (this.EmailAddCommentIdTo != null &&
                    this.EmailAddCommentIdTo.Equals(input.EmailAddCommentIdTo))
                ) && 
                (
                    this.EmailSubjectMaximumLength == input.EmailSubjectMaximumLength ||
                    (this.EmailSubjectMaximumLength != null &&
                    this.EmailSubjectMaximumLength.Equals(input.EmailSubjectMaximumLength))
                ) && 
                (
                    this.EmailReplyToAddress == input.EmailReplyToAddress ||
                    (this.EmailReplyToAddress != null &&
                    this.EmailReplyToAddress.Equals(input.EmailReplyToAddress))
                ) && 
                (
                    this.EmailReplyToDelimiter == input.EmailReplyToDelimiter ||
                    (this.EmailReplyToDelimiter != null &&
                    this.EmailReplyToDelimiter.Equals(input.EmailReplyToDelimiter))
                ) && 
                (
                    this.EmailTrackerIdPrefixInSubject == input.EmailTrackerIdPrefixInSubject ||
                    (this.EmailTrackerIdPrefixInSubject != null &&
                    this.EmailTrackerIdPrefixInSubject.Equals(input.EmailTrackerIdPrefixInSubject))
                ) && 
                (
                    this.EmailTrackerIdPrefixInBody == input.EmailTrackerIdPrefixInBody ||
                    (this.EmailTrackerIdPrefixInBody != null &&
                    this.EmailTrackerIdPrefixInBody.Equals(input.EmailTrackerIdPrefixInBody))
                ) && 
                (
                    this.EmailAsHTML == input.EmailAsHTML ||
                    (this.EmailAsHTML != null &&
                    this.EmailAsHTML.Equals(input.EmailAsHTML))
                ) && 
                (
                    this.EmailDefaultUserName == input.EmailDefaultUserName ||
                    (this.EmailDefaultUserName != null &&
                    this.EmailDefaultUserName.Equals(input.EmailDefaultUserName))
                ) && 
                (
                    this.EmailTemplatesRootPath == input.EmailTemplatesRootPath ||
                    (this.EmailTemplatesRootPath != null &&
                    this.EmailTemplatesRootPath.Equals(input.EmailTemplatesRootPath))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EmailName != null)
                    hashCode = hashCode * 59 + this.EmailName.GetHashCode();
                if (this.EmailCreatePostFromReply != null)
                    hashCode = hashCode * 59 + this.EmailCreatePostFromReply.GetHashCode();
                if (this.EmailAddCommentIdTo != null)
                    hashCode = hashCode * 59 + this.EmailAddCommentIdTo.GetHashCode();
                if (this.EmailSubjectMaximumLength != null)
                    hashCode = hashCode * 59 + this.EmailSubjectMaximumLength.GetHashCode();
                if (this.EmailReplyToAddress != null)
                    hashCode = hashCode * 59 + this.EmailReplyToAddress.GetHashCode();
                if (this.EmailReplyToDelimiter != null)
                    hashCode = hashCode * 59 + this.EmailReplyToDelimiter.GetHashCode();
                if (this.EmailTrackerIdPrefixInSubject != null)
                    hashCode = hashCode * 59 + this.EmailTrackerIdPrefixInSubject.GetHashCode();
                if (this.EmailTrackerIdPrefixInBody != null)
                    hashCode = hashCode * 59 + this.EmailTrackerIdPrefixInBody.GetHashCode();
                if (this.EmailAsHTML != null)
                    hashCode = hashCode * 59 + this.EmailAsHTML.GetHashCode();
                if (this.EmailDefaultUserName != null)
                    hashCode = hashCode * 59 + this.EmailDefaultUserName.GetHashCode();
                if (this.EmailTemplatesRootPath != null)
                    hashCode = hashCode * 59 + this.EmailTemplatesRootPath.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
