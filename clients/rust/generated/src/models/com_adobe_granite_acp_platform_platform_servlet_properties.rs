/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteAcpPlatformPlatformServletProperties {
  #[serde(rename = "query.limit")]
  query_limit: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "file.type.extension.map")]
  file_type_extension_map: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeGraniteAcpPlatformPlatformServletProperties {
  pub fn new() -> ComAdobeGraniteAcpPlatformPlatformServletProperties {
    ComAdobeGraniteAcpPlatformPlatformServletProperties {
      query_limit: None,
      file_type_extension_map: None
    }
  }

  pub fn set_query_limit(&mut self, query_limit: ::models::ConfigNodePropertyInteger) {
    self.query_limit = Some(query_limit);
  }

  pub fn with_query_limit(mut self, query_limit: ::models::ConfigNodePropertyInteger) -> ComAdobeGraniteAcpPlatformPlatformServletProperties {
    self.query_limit = Some(query_limit);
    self
  }

  pub fn query_limit(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.query_limit.as_ref()
  }

  pub fn reset_query_limit(&mut self) {
    self.query_limit = None;
  }

  pub fn set_file_type_extension_map(&mut self, file_type_extension_map: ::models::ConfigNodePropertyArray) {
    self.file_type_extension_map = Some(file_type_extension_map);
  }

  pub fn with_file_type_extension_map(mut self, file_type_extension_map: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteAcpPlatformPlatformServletProperties {
    self.file_type_extension_map = Some(file_type_extension_map);
    self
  }

  pub fn file_type_extension_map(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.file_type_extension_map.as_ref()
  }

  pub fn reset_file_type_extension_map(&mut self) {
    self.file_type_extension_map = None;
  }

}



