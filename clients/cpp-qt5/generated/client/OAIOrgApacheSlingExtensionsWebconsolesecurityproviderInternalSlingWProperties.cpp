/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties() {
    init();
}

OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::~OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties() {
    this->cleanup();
}

void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::init() {
    users = new OAIConfigNodePropertyArray();
    m_users_isSet = false;
    groups = new OAIConfigNodePropertyArray();
    m_groups_isSet = false;
}

void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::cleanup() {
    if(users != nullptr) { 
        delete users;
    }
    if(groups != nullptr) { 
        delete groups;
    }
}

OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties*
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&users, pJson["users"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&groups, pJson["groups"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::asJsonObject() {
    QJsonObject obj;
    if((users != nullptr) && (users->isSet())){
        toJsonValue(QString("users"), users, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((groups != nullptr) && (groups->isSet())){
        toJsonValue(QString("groups"), groups, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::getUsers() {
    return users;
}
void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::setUsers(OAIConfigNodePropertyArray* users) {
    this->users = users;
    this->m_users_isSet = true;
}

OAIConfigNodePropertyArray*
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::getGroups() {
    return groups;
}
void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::setGroups(OAIConfigNodePropertyArray* groups) {
    this->groups = groups;
    this->m_groups_isSet = true;
}


bool
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(users != nullptr && users->isSet()){ isObjectUpdated = true; break;}
        if(groups != nullptr && groups->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

