/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties() {
    this->init();
}

OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::~OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties() {
    
}

void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::init() {
    m_cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name_isSet = false;
    m_cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name_isSet = false;
    m_cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name_isSet = false;
    m_cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name_isSet = false;
    m_cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name_isSet = false;
    m_cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name_isSet = false;
    m_cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name_isSet = false;
}

void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name, json[QString("cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name")]);
    
    ::OpenAPI::fromJsonValue(cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name, json[QString("cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name")]);
    
    ::OpenAPI::fromJsonValue(cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name, json[QString("cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name")]);
    
    ::OpenAPI::fromJsonValue(cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name, json[QString("cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name")]);
    
    ::OpenAPI::fromJsonValue(cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name, json[QString("cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name")]);
    
    ::OpenAPI::fromJsonValue(cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name, json[QString("cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name")]);
    
    ::OpenAPI::fromJsonValue(cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name, json[QString("cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name")]);
    
}

QString
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name.isSet()){
        obj.insert(QString("cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name"), ::OpenAPI::toJsonValue(cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name));
    }
	if(cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name.isSet()){
        obj.insert(QString("cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name"), ::OpenAPI::toJsonValue(cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name));
    }
	if(cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name.isSet()){
        obj.insert(QString("cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name"), ::OpenAPI::toJsonValue(cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name));
    }
	if(cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name.isSet()){
        obj.insert(QString("cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name"), ::OpenAPI::toJsonValue(cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name));
    }
	if(cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name.isSet()){
        obj.insert(QString("cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name"), ::OpenAPI::toJsonValue(cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name));
    }
	if(cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name.isSet()){
        obj.insert(QString("cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name"), ::OpenAPI::toJsonValue(cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name));
    }
	if(cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name.isSet()){
        obj.insert(QString("cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name"), ::OpenAPI::toJsonValue(cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name));
    }
    return obj;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::getCqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName() const {
    return cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name;
}
void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::setCqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName(const OAIConfigNodePropertyInteger &cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name) {
    this->cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name = cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name;
    this->m_cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::getCqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName() const {
    return cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name;
}
void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::setCqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName(const OAIConfigNodePropertyInteger &cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name) {
    this->cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name = cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name;
    this->m_cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::getCqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName() const {
    return cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name;
}
void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::setCqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName(const OAIConfigNodePropertyInteger &cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name) {
    this->cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name = cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name;
    this->m_cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::getCqDamS7damVideoproxyclientserviceHttpReadtimeoutName() const {
    return cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name;
}
void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::setCqDamS7damVideoproxyclientserviceHttpReadtimeoutName(const OAIConfigNodePropertyInteger &cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name) {
    this->cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name = cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name;
    this->m_cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::getCqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName() const {
    return cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name;
}
void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::setCqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName(const OAIConfigNodePropertyInteger &cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name) {
    this->cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name = cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name;
    this->m_cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::getCqDamS7damVideoproxyclientserviceHttpMaxretrycountName() const {
    return cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name;
}
void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::setCqDamS7damVideoproxyclientserviceHttpMaxretrycountName(const OAIConfigNodePropertyInteger &cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name) {
    this->cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name = cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name;
    this->m_cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::getCqDamS7damVideoproxyclientserviceUploadprogressIntervalName() const {
    return cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name;
}
void
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::setCqDamS7damVideoproxyclientserviceUploadprogressIntervalName(const OAIConfigNodePropertyInteger &cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name) {
    this->cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name = cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name;
    this->m_cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name_isSet = true;
}


bool
OAIComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(cq_dam_s7dam_videoproxyclientservice_multipartupload_minsize_name.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_dam_s7dam_videoproxyclientservice_multipartupload_partsize_name.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_dam_s7dam_videoproxyclientservice_multipartupload_numthread_name.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_dam_s7dam_videoproxyclientservice_http_readtimeout_name.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_dam_s7dam_videoproxyclientservice_http_connectiontimeout_name.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_dam_s7dam_videoproxyclientservice_http_maxretrycount_name.isSet()){ isObjectUpdated = true; break;}
    
        if(cq_dam_s7dam_videoproxyclientservice_uploadprogress_interval_name.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

