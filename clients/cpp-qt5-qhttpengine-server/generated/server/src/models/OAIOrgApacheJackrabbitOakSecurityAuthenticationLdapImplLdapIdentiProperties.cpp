/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties() {
    this->init();
}

OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::~OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties() {
    
}

void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::init() {
    m_provider_name_isSet = false;
    m_host_name_isSet = false;
    m_host_port_isSet = false;
    m_host_ssl_isSet = false;
    m_host_tls_isSet = false;
    m_host_no_cert_check_isSet = false;
    m_bind_dn_isSet = false;
    m_bind_password_isSet = false;
    m_search_timeout_isSet = false;
    m_admin_pool_max_active_isSet = false;
    m_admin_pool_lookup_on_validate_isSet = false;
    m_user_pool_max_active_isSet = false;
    m_user_pool_lookup_on_validate_isSet = false;
    m_user_base_dn_isSet = false;
    m_user_objectclass_isSet = false;
    m_user_id_attribute_isSet = false;
    m_user_extra_filter_isSet = false;
    m_user_make_dn_path_isSet = false;
    m_group_base_dn_isSet = false;
    m_group_objectclass_isSet = false;
    m_group_name_attribute_isSet = false;
    m_group_extra_filter_isSet = false;
    m_group_make_dn_path_isSet = false;
    m_group_member_attribute_isSet = false;
    m_use_uid_for_ext_id_isSet = false;
    m_customattributes_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(provider_name, json[QString("provider.name")]);
    
    ::OpenAPI::fromJsonValue(host_name, json[QString("host.name")]);
    
    ::OpenAPI::fromJsonValue(host_port, json[QString("host.port")]);
    
    ::OpenAPI::fromJsonValue(host_ssl, json[QString("host.ssl")]);
    
    ::OpenAPI::fromJsonValue(host_tls, json[QString("host.tls")]);
    
    ::OpenAPI::fromJsonValue(host_no_cert_check, json[QString("host.noCertCheck")]);
    
    ::OpenAPI::fromJsonValue(bind_dn, json[QString("bind.dn")]);
    
    ::OpenAPI::fromJsonValue(bind_password, json[QString("bind.password")]);
    
    ::OpenAPI::fromJsonValue(search_timeout, json[QString("searchTimeout")]);
    
    ::OpenAPI::fromJsonValue(admin_pool_max_active, json[QString("adminPool.maxActive")]);
    
    ::OpenAPI::fromJsonValue(admin_pool_lookup_on_validate, json[QString("adminPool.lookupOnValidate")]);
    
    ::OpenAPI::fromJsonValue(user_pool_max_active, json[QString("userPool.maxActive")]);
    
    ::OpenAPI::fromJsonValue(user_pool_lookup_on_validate, json[QString("userPool.lookupOnValidate")]);
    
    ::OpenAPI::fromJsonValue(user_base_dn, json[QString("user.baseDN")]);
    
    ::OpenAPI::fromJsonValue(user_objectclass, json[QString("user.objectclass")]);
    
    ::OpenAPI::fromJsonValue(user_id_attribute, json[QString("user.idAttribute")]);
    
    ::OpenAPI::fromJsonValue(user_extra_filter, json[QString("user.extraFilter")]);
    
    ::OpenAPI::fromJsonValue(user_make_dn_path, json[QString("user.makeDnPath")]);
    
    ::OpenAPI::fromJsonValue(group_base_dn, json[QString("group.baseDN")]);
    
    ::OpenAPI::fromJsonValue(group_objectclass, json[QString("group.objectclass")]);
    
    ::OpenAPI::fromJsonValue(group_name_attribute, json[QString("group.nameAttribute")]);
    
    ::OpenAPI::fromJsonValue(group_extra_filter, json[QString("group.extraFilter")]);
    
    ::OpenAPI::fromJsonValue(group_make_dn_path, json[QString("group.makeDnPath")]);
    
    ::OpenAPI::fromJsonValue(group_member_attribute, json[QString("group.memberAttribute")]);
    
    ::OpenAPI::fromJsonValue(use_uid_for_ext_id, json[QString("useUidForExtId")]);
    
    ::OpenAPI::fromJsonValue(customattributes, json[QString("customattributes")]);
    
}

QString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::asJsonObject() const {
    QJsonObject obj;
	if(provider_name.isSet()){
        obj.insert(QString("provider.name"), ::OpenAPI::toJsonValue(provider_name));
    }
	if(host_name.isSet()){
        obj.insert(QString("host.name"), ::OpenAPI::toJsonValue(host_name));
    }
	if(host_port.isSet()){
        obj.insert(QString("host.port"), ::OpenAPI::toJsonValue(host_port));
    }
	if(host_ssl.isSet()){
        obj.insert(QString("host.ssl"), ::OpenAPI::toJsonValue(host_ssl));
    }
	if(host_tls.isSet()){
        obj.insert(QString("host.tls"), ::OpenAPI::toJsonValue(host_tls));
    }
	if(host_no_cert_check.isSet()){
        obj.insert(QString("host.noCertCheck"), ::OpenAPI::toJsonValue(host_no_cert_check));
    }
	if(bind_dn.isSet()){
        obj.insert(QString("bind.dn"), ::OpenAPI::toJsonValue(bind_dn));
    }
	if(bind_password.isSet()){
        obj.insert(QString("bind.password"), ::OpenAPI::toJsonValue(bind_password));
    }
	if(search_timeout.isSet()){
        obj.insert(QString("searchTimeout"), ::OpenAPI::toJsonValue(search_timeout));
    }
	if(admin_pool_max_active.isSet()){
        obj.insert(QString("adminPool.maxActive"), ::OpenAPI::toJsonValue(admin_pool_max_active));
    }
	if(admin_pool_lookup_on_validate.isSet()){
        obj.insert(QString("adminPool.lookupOnValidate"), ::OpenAPI::toJsonValue(admin_pool_lookup_on_validate));
    }
	if(user_pool_max_active.isSet()){
        obj.insert(QString("userPool.maxActive"), ::OpenAPI::toJsonValue(user_pool_max_active));
    }
	if(user_pool_lookup_on_validate.isSet()){
        obj.insert(QString("userPool.lookupOnValidate"), ::OpenAPI::toJsonValue(user_pool_lookup_on_validate));
    }
	if(user_base_dn.isSet()){
        obj.insert(QString("user.baseDN"), ::OpenAPI::toJsonValue(user_base_dn));
    }
	if(user_objectclass.isSet()){
        obj.insert(QString("user.objectclass"), ::OpenAPI::toJsonValue(user_objectclass));
    }
	if(user_id_attribute.isSet()){
        obj.insert(QString("user.idAttribute"), ::OpenAPI::toJsonValue(user_id_attribute));
    }
	if(user_extra_filter.isSet()){
        obj.insert(QString("user.extraFilter"), ::OpenAPI::toJsonValue(user_extra_filter));
    }
	if(user_make_dn_path.isSet()){
        obj.insert(QString("user.makeDnPath"), ::OpenAPI::toJsonValue(user_make_dn_path));
    }
	if(group_base_dn.isSet()){
        obj.insert(QString("group.baseDN"), ::OpenAPI::toJsonValue(group_base_dn));
    }
	if(group_objectclass.isSet()){
        obj.insert(QString("group.objectclass"), ::OpenAPI::toJsonValue(group_objectclass));
    }
	if(group_name_attribute.isSet()){
        obj.insert(QString("group.nameAttribute"), ::OpenAPI::toJsonValue(group_name_attribute));
    }
	if(group_extra_filter.isSet()){
        obj.insert(QString("group.extraFilter"), ::OpenAPI::toJsonValue(group_extra_filter));
    }
	if(group_make_dn_path.isSet()){
        obj.insert(QString("group.makeDnPath"), ::OpenAPI::toJsonValue(group_make_dn_path));
    }
	if(group_member_attribute.isSet()){
        obj.insert(QString("group.memberAttribute"), ::OpenAPI::toJsonValue(group_member_attribute));
    }
	if(use_uid_for_ext_id.isSet()){
        obj.insert(QString("useUidForExtId"), ::OpenAPI::toJsonValue(use_uid_for_ext_id));
    }
	if(customattributes.isSet()){
        obj.insert(QString("customattributes"), ::OpenAPI::toJsonValue(customattributes));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getProviderName() const {
    return provider_name;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setProviderName(const OAIConfigNodePropertyString &provider_name) {
    this->provider_name = provider_name;
    this->m_provider_name_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getHostName() const {
    return host_name;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setHostName(const OAIConfigNodePropertyString &host_name) {
    this->host_name = host_name;
    this->m_host_name_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getHostPort() const {
    return host_port;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setHostPort(const OAIConfigNodePropertyInteger &host_port) {
    this->host_port = host_port;
    this->m_host_port_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getHostSsl() const {
    return host_ssl;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setHostSsl(const OAIConfigNodePropertyBoolean &host_ssl) {
    this->host_ssl = host_ssl;
    this->m_host_ssl_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getHostTls() const {
    return host_tls;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setHostTls(const OAIConfigNodePropertyBoolean &host_tls) {
    this->host_tls = host_tls;
    this->m_host_tls_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getHostNoCertCheck() const {
    return host_no_cert_check;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setHostNoCertCheck(const OAIConfigNodePropertyBoolean &host_no_cert_check) {
    this->host_no_cert_check = host_no_cert_check;
    this->m_host_no_cert_check_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getBindDn() const {
    return bind_dn;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setBindDn(const OAIConfigNodePropertyString &bind_dn) {
    this->bind_dn = bind_dn;
    this->m_bind_dn_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getBindPassword() const {
    return bind_password;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setBindPassword(const OAIConfigNodePropertyString &bind_password) {
    this->bind_password = bind_password;
    this->m_bind_password_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getSearchTimeout() const {
    return search_timeout;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setSearchTimeout(const OAIConfigNodePropertyString &search_timeout) {
    this->search_timeout = search_timeout;
    this->m_search_timeout_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getAdminPoolMaxActive() const {
    return admin_pool_max_active;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setAdminPoolMaxActive(const OAIConfigNodePropertyInteger &admin_pool_max_active) {
    this->admin_pool_max_active = admin_pool_max_active;
    this->m_admin_pool_max_active_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getAdminPoolLookupOnValidate() const {
    return admin_pool_lookup_on_validate;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setAdminPoolLookupOnValidate(const OAIConfigNodePropertyBoolean &admin_pool_lookup_on_validate) {
    this->admin_pool_lookup_on_validate = admin_pool_lookup_on_validate;
    this->m_admin_pool_lookup_on_validate_isSet = true;
}

OAIConfigNodePropertyInteger
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getUserPoolMaxActive() const {
    return user_pool_max_active;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setUserPoolMaxActive(const OAIConfigNodePropertyInteger &user_pool_max_active) {
    this->user_pool_max_active = user_pool_max_active;
    this->m_user_pool_max_active_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getUserPoolLookupOnValidate() const {
    return user_pool_lookup_on_validate;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setUserPoolLookupOnValidate(const OAIConfigNodePropertyBoolean &user_pool_lookup_on_validate) {
    this->user_pool_lookup_on_validate = user_pool_lookup_on_validate;
    this->m_user_pool_lookup_on_validate_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getUserBaseDn() const {
    return user_base_dn;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setUserBaseDn(const OAIConfigNodePropertyString &user_base_dn) {
    this->user_base_dn = user_base_dn;
    this->m_user_base_dn_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getUserObjectclass() const {
    return user_objectclass;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setUserObjectclass(const OAIConfigNodePropertyArray &user_objectclass) {
    this->user_objectclass = user_objectclass;
    this->m_user_objectclass_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getUserIdAttribute() const {
    return user_id_attribute;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setUserIdAttribute(const OAIConfigNodePropertyString &user_id_attribute) {
    this->user_id_attribute = user_id_attribute;
    this->m_user_id_attribute_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getUserExtraFilter() const {
    return user_extra_filter;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setUserExtraFilter(const OAIConfigNodePropertyString &user_extra_filter) {
    this->user_extra_filter = user_extra_filter;
    this->m_user_extra_filter_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getUserMakeDnPath() const {
    return user_make_dn_path;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setUserMakeDnPath(const OAIConfigNodePropertyBoolean &user_make_dn_path) {
    this->user_make_dn_path = user_make_dn_path;
    this->m_user_make_dn_path_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getGroupBaseDn() const {
    return group_base_dn;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setGroupBaseDn(const OAIConfigNodePropertyString &group_base_dn) {
    this->group_base_dn = group_base_dn;
    this->m_group_base_dn_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getGroupObjectclass() const {
    return group_objectclass;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setGroupObjectclass(const OAIConfigNodePropertyArray &group_objectclass) {
    this->group_objectclass = group_objectclass;
    this->m_group_objectclass_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getGroupNameAttribute() const {
    return group_name_attribute;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setGroupNameAttribute(const OAIConfigNodePropertyString &group_name_attribute) {
    this->group_name_attribute = group_name_attribute;
    this->m_group_name_attribute_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getGroupExtraFilter() const {
    return group_extra_filter;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setGroupExtraFilter(const OAIConfigNodePropertyString &group_extra_filter) {
    this->group_extra_filter = group_extra_filter;
    this->m_group_extra_filter_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getGroupMakeDnPath() const {
    return group_make_dn_path;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setGroupMakeDnPath(const OAIConfigNodePropertyBoolean &group_make_dn_path) {
    this->group_make_dn_path = group_make_dn_path;
    this->m_group_make_dn_path_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getGroupMemberAttribute() const {
    return group_member_attribute;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setGroupMemberAttribute(const OAIConfigNodePropertyString &group_member_attribute) {
    this->group_member_attribute = group_member_attribute;
    this->m_group_member_attribute_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getUseUidForExtId() const {
    return use_uid_for_ext_id;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setUseUidForExtId(const OAIConfigNodePropertyBoolean &use_uid_for_ext_id) {
    this->use_uid_for_ext_id = use_uid_for_ext_id;
    this->m_use_uid_for_ext_id_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::getCustomattributes() const {
    return customattributes;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::setCustomattributes(const OAIConfigNodePropertyArray &customattributes) {
    this->customattributes = customattributes;
    this->m_customattributes_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(provider_name.isSet()){ isObjectUpdated = true; break;}
    
        if(host_name.isSet()){ isObjectUpdated = true; break;}
    
        if(host_port.isSet()){ isObjectUpdated = true; break;}
    
        if(host_ssl.isSet()){ isObjectUpdated = true; break;}
    
        if(host_tls.isSet()){ isObjectUpdated = true; break;}
    
        if(host_no_cert_check.isSet()){ isObjectUpdated = true; break;}
    
        if(bind_dn.isSet()){ isObjectUpdated = true; break;}
    
        if(bind_password.isSet()){ isObjectUpdated = true; break;}
    
        if(search_timeout.isSet()){ isObjectUpdated = true; break;}
    
        if(admin_pool_max_active.isSet()){ isObjectUpdated = true; break;}
    
        if(admin_pool_lookup_on_validate.isSet()){ isObjectUpdated = true; break;}
    
        if(user_pool_max_active.isSet()){ isObjectUpdated = true; break;}
    
        if(user_pool_lookup_on_validate.isSet()){ isObjectUpdated = true; break;}
    
        if(user_base_dn.isSet()){ isObjectUpdated = true; break;}
    
        if(user_objectclass.isSet()){ isObjectUpdated = true; break;}
    
        if(user_id_attribute.isSet()){ isObjectUpdated = true; break;}
    
        if(user_extra_filter.isSet()){ isObjectUpdated = true; break;}
    
        if(user_make_dn_path.isSet()){ isObjectUpdated = true; break;}
    
        if(group_base_dn.isSet()){ isObjectUpdated = true; break;}
    
        if(group_objectclass.isSet()){ isObjectUpdated = true; break;}
    
        if(group_name_attribute.isSet()){ isObjectUpdated = true; break;}
    
        if(group_extra_filter.isSet()){ isObjectUpdated = true; break;}
    
        if(group_make_dn_path.isSet()){ isObjectUpdated = true; break;}
    
        if(group_member_attribute.isSet()){ isObjectUpdated = true; break;}
    
        if(use_uid_for_ext_id.isSet()){ isObjectUpdated = true; break;}
    
        if(customattributes.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

