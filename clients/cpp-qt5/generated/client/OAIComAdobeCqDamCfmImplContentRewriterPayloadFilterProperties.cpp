/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties() {
    init();
}

OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::~OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties() {
    this->cleanup();
}

void
OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::init() {
    pipeline_type = new OAIConfigNodePropertyString();
    m_pipeline_type_isSet = false;
}

void
OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::cleanup() {
    if(pipeline_type != nullptr) { 
        delete pipeline_type;
    }
}

OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties*
OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&pipeline_type, pJson["pipeline.type"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::asJsonObject() {
    QJsonObject obj;
    if((pipeline_type != nullptr) && (pipeline_type->isSet())){
        toJsonValue(QString("pipeline.type"), pipeline_type, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::getPipelineType() {
    return pipeline_type;
}
void
OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::setPipelineType(OAIConfigNodePropertyString* pipeline_type) {
    this->pipeline_type = pipeline_type;
    this->m_pipeline_type_isSet = true;
}


bool
OAIComAdobeCqDamCfmImplContentRewriterPayloadFilterProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(pipeline_type != nullptr && pipeline_type->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

