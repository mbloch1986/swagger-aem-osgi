# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hc_tags: ConfigNodePropertyArray=None, dispatcher_address: ConfigNodePropertyString=None, dispatcher_filter_allowed: ConfigNodePropertyArray=None, dispatcher_filter_blocked: ConfigNodePropertyArray=None):  # noqa: E501
        """ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties - a model defined in OpenAPI

        :param hc_tags: The hc_tags of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.  # noqa: E501
        :type hc_tags: ConfigNodePropertyArray
        :param dispatcher_address: The dispatcher_address of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.  # noqa: E501
        :type dispatcher_address: ConfigNodePropertyString
        :param dispatcher_filter_allowed: The dispatcher_filter_allowed of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.  # noqa: E501
        :type dispatcher_filter_allowed: ConfigNodePropertyArray
        :param dispatcher_filter_blocked: The dispatcher_filter_blocked of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.  # noqa: E501
        :type dispatcher_filter_blocked: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'hc_tags': ConfigNodePropertyArray,
            'dispatcher_address': ConfigNodePropertyString,
            'dispatcher_filter_allowed': ConfigNodePropertyArray,
            'dispatcher_filter_blocked': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'hc_tags': 'hc.tags',
            'dispatcher_address': 'dispatcher.address',
            'dispatcher_filter_allowed': 'dispatcher.filter.allowed',
            'dispatcher_filter_blocked': 'dispatcher.filter.blocked'
        }

        self._hc_tags = hc_tags
        self._dispatcher_address = dispatcher_address
        self._dispatcher_filter_allowed = dispatcher_filter_allowed
        self._dispatcher_filter_blocked = dispatcher_filter_blocked

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.  # noqa: E501
        :rtype: ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hc_tags(self) -> ConfigNodePropertyArray:
        """Gets the hc_tags of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.


        :return: The hc_tags of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._hc_tags

    @hc_tags.setter
    def hc_tags(self, hc_tags: ConfigNodePropertyArray):
        """Sets the hc_tags of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.


        :param hc_tags: The hc_tags of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.
        :type hc_tags: ConfigNodePropertyArray
        """

        self._hc_tags = hc_tags

    @property
    def dispatcher_address(self) -> ConfigNodePropertyString:
        """Gets the dispatcher_address of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.


        :return: The dispatcher_address of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._dispatcher_address

    @dispatcher_address.setter
    def dispatcher_address(self, dispatcher_address: ConfigNodePropertyString):
        """Sets the dispatcher_address of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.


        :param dispatcher_address: The dispatcher_address of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.
        :type dispatcher_address: ConfigNodePropertyString
        """

        self._dispatcher_address = dispatcher_address

    @property
    def dispatcher_filter_allowed(self) -> ConfigNodePropertyArray:
        """Gets the dispatcher_filter_allowed of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.


        :return: The dispatcher_filter_allowed of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._dispatcher_filter_allowed

    @dispatcher_filter_allowed.setter
    def dispatcher_filter_allowed(self, dispatcher_filter_allowed: ConfigNodePropertyArray):
        """Sets the dispatcher_filter_allowed of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.


        :param dispatcher_filter_allowed: The dispatcher_filter_allowed of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.
        :type dispatcher_filter_allowed: ConfigNodePropertyArray
        """

        self._dispatcher_filter_allowed = dispatcher_filter_allowed

    @property
    def dispatcher_filter_blocked(self) -> ConfigNodePropertyArray:
        """Gets the dispatcher_filter_blocked of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.


        :return: The dispatcher_filter_blocked of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._dispatcher_filter_blocked

    @dispatcher_filter_blocked.setter
    def dispatcher_filter_blocked(self, dispatcher_filter_blocked: ConfigNodePropertyArray):
        """Sets the dispatcher_filter_blocked of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.


        :param dispatcher_filter_blocked: The dispatcher_filter_blocked of this ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.
        :type dispatcher_filter_blocked: ConfigNodePropertyArray
        """

        self._dispatcher_filter_blocked = dispatcher_filter_blocked
