/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties()
{
    m_Notify_onupdateIsSet = false;
    m_Notify_oncompleteIsSet = false;
    
}

ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::~ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties()
{
}

void ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Notify_onupdateIsSet)
    {
        val["notify.onupdate"] = ModelBase::toJson(m_Notify_onupdate);
    }
    if(m_Notify_oncompleteIsSet)
    {
        val["notify.oncomplete"] = ModelBase::toJson(m_Notify_oncomplete);
    }
    

    return val;
}

void ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::fromJson(nlohmann::json& val)
{
    if(val.find("notify.onupdate") != val.end())
    {
        if(!val["notify.onupdate"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["notify.onupdate"]);
            setNotifyOnupdate( newItem );
        }
        
    }
    if(val.find("notify.oncomplete") != val.end())
    {
        if(!val["notify.oncomplete"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["notify.oncomplete"]);
            setNotifyOncomplete( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::getNotifyOnupdate() const
{
    return m_Notify_onupdate;
}
void ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::setNotifyOnupdate(ConfigNodePropertyBoolean const& value)
{
    m_Notify_onupdate = value;
    m_Notify_onupdateIsSet = true;
}
bool ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::notifyOnupdateIsSet() const
{
    return m_Notify_onupdateIsSet;
}
void ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::unsetNotify_onupdate()
{
    m_Notify_onupdateIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::getNotifyOncomplete() const
{
    return m_Notify_oncomplete;
}
void ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::setNotifyOncomplete(ConfigNodePropertyBoolean const& value)
{
    m_Notify_oncomplete = value;
    m_Notify_oncompleteIsSet = true;
}
bool ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::notifyOncompleteIsSet() const
{
    return m_Notify_oncompleteIsSet;
}
void ComDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties::unsetNotify_oncomplete()
{
    m_Notify_oncompleteIsSet = false;
}

}
}
}
}

