<?php
/**
 * OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheFelixWebconsoleInternalServletOsgiManagerProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("manager.root")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $managerRoot;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("http.service.filter")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $httpServiceFilter;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("default.render")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $defaultRender;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("realm")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $realm;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("username")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $username;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("password")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $password;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("category")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $category;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("locale")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $locale;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     * @SerializedName("loglevel")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     */
    protected $loglevel;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     * @SerializedName("plugins")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     */
    protected $plugins;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->managerRoot = isset($data['managerRoot']) ? $data['managerRoot'] : null;
        $this->httpServiceFilter = isset($data['httpServiceFilter']) ? $data['httpServiceFilter'] : null;
        $this->defaultRender = isset($data['defaultRender']) ? $data['defaultRender'] : null;
        $this->realm = isset($data['realm']) ? $data['realm'] : null;
        $this->username = isset($data['username']) ? $data['username'] : null;
        $this->password = isset($data['password']) ? $data['password'] : null;
        $this->category = isset($data['category']) ? $data['category'] : null;
        $this->locale = isset($data['locale']) ? $data['locale'] : null;
        $this->loglevel = isset($data['loglevel']) ? $data['loglevel'] : null;
        $this->plugins = isset($data['plugins']) ? $data['plugins'] : null;
    }

    /**
     * Gets managerRoot.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getManagerRoot()
    {
        return $this->managerRoot;
    }

    /**
     * Sets managerRoot.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $managerRoot
     *
     * @return $this
     */
    public function setManagerRoot(ConfigNodePropertyString $managerRoot = null)
    {
        $this->managerRoot = $managerRoot;

        return $this;
    }

    /**
     * Gets httpServiceFilter.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getHttpServiceFilter()
    {
        return $this->httpServiceFilter;
    }

    /**
     * Sets httpServiceFilter.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $httpServiceFilter
     *
     * @return $this
     */
    public function setHttpServiceFilter(ConfigNodePropertyString $httpServiceFilter = null)
    {
        $this->httpServiceFilter = $httpServiceFilter;

        return $this;
    }

    /**
     * Gets defaultRender.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDefaultRender()
    {
        return $this->defaultRender;
    }

    /**
     * Sets defaultRender.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $defaultRender
     *
     * @return $this
     */
    public function setDefaultRender(ConfigNodePropertyString $defaultRender = null)
    {
        $this->defaultRender = $defaultRender;

        return $this;
    }

    /**
     * Gets realm.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getRealm()
    {
        return $this->realm;
    }

    /**
     * Sets realm.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $realm
     *
     * @return $this
     */
    public function setRealm(ConfigNodePropertyString $realm = null)
    {
        $this->realm = $realm;

        return $this;
    }

    /**
     * Gets username.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Sets username.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $username
     *
     * @return $this
     */
    public function setUsername(ConfigNodePropertyString $username = null)
    {
        $this->username = $username;

        return $this;
    }

    /**
     * Gets password.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Sets password.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $password
     *
     * @return $this
     */
    public function setPassword(ConfigNodePropertyString $password = null)
    {
        $this->password = $password;

        return $this;
    }

    /**
     * Gets category.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getCategory()
    {
        return $this->category;
    }

    /**
     * Sets category.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $category
     *
     * @return $this
     */
    public function setCategory(ConfigNodePropertyString $category = null)
    {
        $this->category = $category;

        return $this;
    }

    /**
     * Gets locale.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getLocale()
    {
        return $this->locale;
    }

    /**
     * Sets locale.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $locale
     *
     * @return $this
     */
    public function setLocale(ConfigNodePropertyString $locale = null)
    {
        $this->locale = $locale;

        return $this;
    }

    /**
     * Gets loglevel.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     */
    public function getLoglevel()
    {
        return $this->loglevel;
    }

    /**
     * Sets loglevel.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyDropDown|null $loglevel
     *
     * @return $this
     */
    public function setLoglevel(ConfigNodePropertyDropDown $loglevel = null)
    {
        $this->loglevel = $loglevel;

        return $this;
    }

    /**
     * Gets plugins.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     */
    public function getPlugins()
    {
        return $this->plugins;
    }

    /**
     * Sets plugins.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyDropDown|null $plugins
     *
     * @return $this
     */
    public function setPlugins(ConfigNodePropertyDropDown $plugins = null)
    {
        $this->plugins = $plugins;

        return $this;
    }
}


