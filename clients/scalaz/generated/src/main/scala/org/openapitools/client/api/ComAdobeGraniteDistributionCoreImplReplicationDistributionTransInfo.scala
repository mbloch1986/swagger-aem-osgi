package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo._

case class ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteDistributionCoreImplReplicationDistributionTransProperties])

object ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfoCodecJson: CodecJson[ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo] = CodecJson.derive[ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo]
  implicit val ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfoDecoder: EntityDecoder[ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo] = jsonOf[ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo]
  implicit val ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfoEncoder: EntityEncoder[ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo] = jsonEncoderOf[ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo]
}
