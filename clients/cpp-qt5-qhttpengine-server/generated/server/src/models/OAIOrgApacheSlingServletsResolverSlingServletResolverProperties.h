/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingServletsResolverSlingServletResolverProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingServletsResolverSlingServletResolverProperties_H
#define OAIOrgApacheSlingServletsResolverSlingServletResolverProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingServletsResolverSlingServletResolverProperties: public OAIObject {
public:
    OAIOrgApacheSlingServletsResolverSlingServletResolverProperties();
    OAIOrgApacheSlingServletsResolverSlingServletResolverProperties(QString json);
    ~OAIOrgApacheSlingServletsResolverSlingServletResolverProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getServletresolverServletRoot() const;
    void setServletresolverServletRoot(const OAIConfigNodePropertyString &servletresolver_servlet_root);

    OAIConfigNodePropertyInteger getServletresolverCacheSize() const;
    void setServletresolverCacheSize(const OAIConfigNodePropertyInteger &servletresolver_cache_size);

    OAIConfigNodePropertyArray getServletresolverPaths() const;
    void setServletresolverPaths(const OAIConfigNodePropertyArray &servletresolver_paths);

    OAIConfigNodePropertyArray getServletresolverDefaultExtensions() const;
    void setServletresolverDefaultExtensions(const OAIConfigNodePropertyArray &servletresolver_default_extensions);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString servletresolver_servlet_root;
    bool m_servletresolver_servlet_root_isSet;

    OAIConfigNodePropertyInteger servletresolver_cache_size;
    bool m_servletresolver_cache_size_isSet;

    OAIConfigNodePropertyArray servletresolver_paths;
    bool m_servletresolver_paths_isSet;

    OAIConfigNodePropertyArray servletresolver_default_extensions;
    bool m_servletresolver_default_extensions_isSet;

};

}

#endif // OAIOrgApacheSlingServletsResolverSlingServletResolverProperties_H
