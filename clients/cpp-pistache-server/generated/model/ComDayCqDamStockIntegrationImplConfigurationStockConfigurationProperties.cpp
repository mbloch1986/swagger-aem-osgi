/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties()
{
    m_NameIsSet = false;
    m_LocaleIsSet = false;
    m_ImsConfigIsSet = false;
    
}

ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::~ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties()
{
}

void ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_NameIsSet)
    {
        val["name"] = ModelBase::toJson(m_Name);
    }
    if(m_LocaleIsSet)
    {
        val["locale"] = ModelBase::toJson(m_Locale);
    }
    if(m_ImsConfigIsSet)
    {
        val["imsConfig"] = ModelBase::toJson(m_ImsConfig);
    }
    

    return val;
}

void ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::fromJson(nlohmann::json& val)
{
    if(val.find("name") != val.end())
    {
        if(!val["name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["name"]);
            setName( newItem );
        }
        
    }
    if(val.find("locale") != val.end())
    {
        if(!val["locale"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["locale"]);
            setLocale( newItem );
        }
        
    }
    if(val.find("imsConfig") != val.end())
    {
        if(!val["imsConfig"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["imsConfig"]);
            setImsConfig( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::getName() const
{
    return m_Name;
}
void ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::setName(ConfigNodePropertyString const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::nameIsSet() const
{
    return m_NameIsSet;
}
void ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::unsetName()
{
    m_NameIsSet = false;
}
ConfigNodePropertyString ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::getLocale() const
{
    return m_Locale;
}
void ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::setLocale(ConfigNodePropertyString const& value)
{
    m_Locale = value;
    m_LocaleIsSet = true;
}
bool ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::localeIsSet() const
{
    return m_LocaleIsSet;
}
void ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::unsetLocale()
{
    m_LocaleIsSet = false;
}
ConfigNodePropertyString ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::getImsConfig() const
{
    return m_ImsConfig;
}
void ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::setImsConfig(ConfigNodePropertyString const& value)
{
    m_ImsConfig = value;
    m_ImsConfigIsSet = true;
}
bool ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::imsConfigIsSet() const
{
    return m_ImsConfigIsSet;
}
void ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties::unsetImsConfig()
{
    m_ImsConfigIsSet = false;
}

}
}
}
}

