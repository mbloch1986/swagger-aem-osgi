/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties()
{
    m_Default_transport_agent_to_worker_prefixIsSet = false;
    m_Default_transport_agent_to_master_prefixIsSet = false;
    m_Default_transport_input_packageIsSet = false;
    m_Default_transport_output_packageIsSet = false;
    m_Default_transport_replication_synchronousIsSet = false;
    m_Default_transport_contentpackageIsSet = false;
    m_Offloading_transporter_default_enabledIsSet = false;
    
}

ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::~ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties()
{
}

void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Default_transport_agent_to_worker_prefixIsSet)
    {
        val["default.transport.agent-to-worker.prefix"] = ModelBase::toJson(m_Default_transport_agent_to_worker_prefix);
    }
    if(m_Default_transport_agent_to_master_prefixIsSet)
    {
        val["default.transport.agent-to-master.prefix"] = ModelBase::toJson(m_Default_transport_agent_to_master_prefix);
    }
    if(m_Default_transport_input_packageIsSet)
    {
        val["default.transport.input.package"] = ModelBase::toJson(m_Default_transport_input_package);
    }
    if(m_Default_transport_output_packageIsSet)
    {
        val["default.transport.output.package"] = ModelBase::toJson(m_Default_transport_output_package);
    }
    if(m_Default_transport_replication_synchronousIsSet)
    {
        val["default.transport.replication.synchronous"] = ModelBase::toJson(m_Default_transport_replication_synchronous);
    }
    if(m_Default_transport_contentpackageIsSet)
    {
        val["default.transport.contentpackage"] = ModelBase::toJson(m_Default_transport_contentpackage);
    }
    if(m_Offloading_transporter_default_enabledIsSet)
    {
        val["offloading.transporter.default.enabled"] = ModelBase::toJson(m_Offloading_transporter_default_enabled);
    }
    

    return val;
}

void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::fromJson(nlohmann::json& val)
{
    if(val.find("default.transport.agent-to-worker.prefix") != val.end())
    {
        if(!val["default.transport.agent-to-worker.prefix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["default.transport.agent-to-worker.prefix"]);
            setDefaultTransportAgentToWorkerPrefix( newItem );
        }
        
    }
    if(val.find("default.transport.agent-to-master.prefix") != val.end())
    {
        if(!val["default.transport.agent-to-master.prefix"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["default.transport.agent-to-master.prefix"]);
            setDefaultTransportAgentToMasterPrefix( newItem );
        }
        
    }
    if(val.find("default.transport.input.package") != val.end())
    {
        if(!val["default.transport.input.package"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["default.transport.input.package"]);
            setDefaultTransportInputPackage( newItem );
        }
        
    }
    if(val.find("default.transport.output.package") != val.end())
    {
        if(!val["default.transport.output.package"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["default.transport.output.package"]);
            setDefaultTransportOutputPackage( newItem );
        }
        
    }
    if(val.find("default.transport.replication.synchronous") != val.end())
    {
        if(!val["default.transport.replication.synchronous"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["default.transport.replication.synchronous"]);
            setDefaultTransportReplicationSynchronous( newItem );
        }
        
    }
    if(val.find("default.transport.contentpackage") != val.end())
    {
        if(!val["default.transport.contentpackage"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["default.transport.contentpackage"]);
            setDefaultTransportContentpackage( newItem );
        }
        
    }
    if(val.find("offloading.transporter.default.enabled") != val.end())
    {
        if(!val["offloading.transporter.default.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["offloading.transporter.default.enabled"]);
            setOffloadingTransporterDefaultEnabled( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportAgentToWorkerPrefix() const
{
    return m_Default_transport_agent_to_worker_prefix;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportAgentToWorkerPrefix(ConfigNodePropertyString const& value)
{
    m_Default_transport_agent_to_worker_prefix = value;
    m_Default_transport_agent_to_worker_prefixIsSet = true;
}
bool ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::defaultTransportAgentToWorkerPrefixIsSet() const
{
    return m_Default_transport_agent_to_worker_prefixIsSet;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::unsetDefault_transport_agent_to_worker_prefix()
{
    m_Default_transport_agent_to_worker_prefixIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportAgentToMasterPrefix() const
{
    return m_Default_transport_agent_to_master_prefix;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportAgentToMasterPrefix(ConfigNodePropertyString const& value)
{
    m_Default_transport_agent_to_master_prefix = value;
    m_Default_transport_agent_to_master_prefixIsSet = true;
}
bool ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::defaultTransportAgentToMasterPrefixIsSet() const
{
    return m_Default_transport_agent_to_master_prefixIsSet;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::unsetDefault_transport_agent_to_master_prefix()
{
    m_Default_transport_agent_to_master_prefixIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportInputPackage() const
{
    return m_Default_transport_input_package;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportInputPackage(ConfigNodePropertyString const& value)
{
    m_Default_transport_input_package = value;
    m_Default_transport_input_packageIsSet = true;
}
bool ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::defaultTransportInputPackageIsSet() const
{
    return m_Default_transport_input_packageIsSet;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::unsetDefault_transport_input_package()
{
    m_Default_transport_input_packageIsSet = false;
}
ConfigNodePropertyString ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportOutputPackage() const
{
    return m_Default_transport_output_package;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportOutputPackage(ConfigNodePropertyString const& value)
{
    m_Default_transport_output_package = value;
    m_Default_transport_output_packageIsSet = true;
}
bool ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::defaultTransportOutputPackageIsSet() const
{
    return m_Default_transport_output_packageIsSet;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::unsetDefault_transport_output_package()
{
    m_Default_transport_output_packageIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportReplicationSynchronous() const
{
    return m_Default_transport_replication_synchronous;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportReplicationSynchronous(ConfigNodePropertyBoolean const& value)
{
    m_Default_transport_replication_synchronous = value;
    m_Default_transport_replication_synchronousIsSet = true;
}
bool ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::defaultTransportReplicationSynchronousIsSet() const
{
    return m_Default_transport_replication_synchronousIsSet;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::unsetDefault_transport_replication_synchronous()
{
    m_Default_transport_replication_synchronousIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getDefaultTransportContentpackage() const
{
    return m_Default_transport_contentpackage;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setDefaultTransportContentpackage(ConfigNodePropertyBoolean const& value)
{
    m_Default_transport_contentpackage = value;
    m_Default_transport_contentpackageIsSet = true;
}
bool ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::defaultTransportContentpackageIsSet() const
{
    return m_Default_transport_contentpackageIsSet;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::unsetDefault_transport_contentpackage()
{
    m_Default_transport_contentpackageIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::getOffloadingTransporterDefaultEnabled() const
{
    return m_Offloading_transporter_default_enabled;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::setOffloadingTransporterDefaultEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Offloading_transporter_default_enabled = value;
    m_Offloading_transporter_default_enabledIsSet = true;
}
bool ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::offloadingTransporterDefaultEnabledIsSet() const
{
    return m_Offloading_transporter_default_enabledIsSet;
}
void ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties::unsetOffloading_transporter_default_enabled()
{
    m_Offloading_transporter_default_enabledIsSet = false;
}

}
}
}
}

