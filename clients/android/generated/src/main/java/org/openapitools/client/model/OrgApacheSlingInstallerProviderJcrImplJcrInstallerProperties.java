/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties {
  
  @SerializedName("handler.schemes")
  private ConfigNodePropertyArray handlerSchemes = null;
  @SerializedName("sling.jcrinstall.folder.name.regexp")
  private ConfigNodePropertyString slingJcrinstallFolderNameRegexp = null;
  @SerializedName("sling.jcrinstall.folder.max.depth")
  private ConfigNodePropertyInteger slingJcrinstallFolderMaxDepth = null;
  @SerializedName("sling.jcrinstall.search.path")
  private ConfigNodePropertyArray slingJcrinstallSearchPath = null;
  @SerializedName("sling.jcrinstall.new.config.path")
  private ConfigNodePropertyString slingJcrinstallNewConfigPath = null;
  @SerializedName("sling.jcrinstall.signal.path")
  private ConfigNodePropertyString slingJcrinstallSignalPath = null;
  @SerializedName("sling.jcrinstall.enable.writeback")
  private ConfigNodePropertyBoolean slingJcrinstallEnableWriteback = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getHandlerSchemes() {
    return handlerSchemes;
  }
  public void setHandlerSchemes(ConfigNodePropertyArray handlerSchemes) {
    this.handlerSchemes = handlerSchemes;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getSlingJcrinstallFolderNameRegexp() {
    return slingJcrinstallFolderNameRegexp;
  }
  public void setSlingJcrinstallFolderNameRegexp(ConfigNodePropertyString slingJcrinstallFolderNameRegexp) {
    this.slingJcrinstallFolderNameRegexp = slingJcrinstallFolderNameRegexp;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getSlingJcrinstallFolderMaxDepth() {
    return slingJcrinstallFolderMaxDepth;
  }
  public void setSlingJcrinstallFolderMaxDepth(ConfigNodePropertyInteger slingJcrinstallFolderMaxDepth) {
    this.slingJcrinstallFolderMaxDepth = slingJcrinstallFolderMaxDepth;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getSlingJcrinstallSearchPath() {
    return slingJcrinstallSearchPath;
  }
  public void setSlingJcrinstallSearchPath(ConfigNodePropertyArray slingJcrinstallSearchPath) {
    this.slingJcrinstallSearchPath = slingJcrinstallSearchPath;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getSlingJcrinstallNewConfigPath() {
    return slingJcrinstallNewConfigPath;
  }
  public void setSlingJcrinstallNewConfigPath(ConfigNodePropertyString slingJcrinstallNewConfigPath) {
    this.slingJcrinstallNewConfigPath = slingJcrinstallNewConfigPath;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getSlingJcrinstallSignalPath() {
    return slingJcrinstallSignalPath;
  }
  public void setSlingJcrinstallSignalPath(ConfigNodePropertyString slingJcrinstallSignalPath) {
    this.slingJcrinstallSignalPath = slingJcrinstallSignalPath;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getSlingJcrinstallEnableWriteback() {
    return slingJcrinstallEnableWriteback;
  }
  public void setSlingJcrinstallEnableWriteback(ConfigNodePropertyBoolean slingJcrinstallEnableWriteback) {
    this.slingJcrinstallEnableWriteback = slingJcrinstallEnableWriteback;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties = (OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties) o;
    return (this.handlerSchemes == null ? orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.handlerSchemes == null : this.handlerSchemes.equals(orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.handlerSchemes)) &&
        (this.slingJcrinstallFolderNameRegexp == null ? orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallFolderNameRegexp == null : this.slingJcrinstallFolderNameRegexp.equals(orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallFolderNameRegexp)) &&
        (this.slingJcrinstallFolderMaxDepth == null ? orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallFolderMaxDepth == null : this.slingJcrinstallFolderMaxDepth.equals(orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallFolderMaxDepth)) &&
        (this.slingJcrinstallSearchPath == null ? orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallSearchPath == null : this.slingJcrinstallSearchPath.equals(orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallSearchPath)) &&
        (this.slingJcrinstallNewConfigPath == null ? orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallNewConfigPath == null : this.slingJcrinstallNewConfigPath.equals(orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallNewConfigPath)) &&
        (this.slingJcrinstallSignalPath == null ? orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallSignalPath == null : this.slingJcrinstallSignalPath.equals(orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallSignalPath)) &&
        (this.slingJcrinstallEnableWriteback == null ? orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallEnableWriteback == null : this.slingJcrinstallEnableWriteback.equals(orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.slingJcrinstallEnableWriteback));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.handlerSchemes == null ? 0: this.handlerSchemes.hashCode());
    result = 31 * result + (this.slingJcrinstallFolderNameRegexp == null ? 0: this.slingJcrinstallFolderNameRegexp.hashCode());
    result = 31 * result + (this.slingJcrinstallFolderMaxDepth == null ? 0: this.slingJcrinstallFolderMaxDepth.hashCode());
    result = 31 * result + (this.slingJcrinstallSearchPath == null ? 0: this.slingJcrinstallSearchPath.hashCode());
    result = 31 * result + (this.slingJcrinstallNewConfigPath == null ? 0: this.slingJcrinstallNewConfigPath.hashCode());
    result = 31 * result + (this.slingJcrinstallSignalPath == null ? 0: this.slingJcrinstallSignalPath.hashCode());
    result = 31 * result + (this.slingJcrinstallEnableWriteback == null ? 0: this.slingJcrinstallEnableWriteback.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties {\n");
    
    sb.append("  handlerSchemes: ").append(handlerSchemes).append("\n");
    sb.append("  slingJcrinstallFolderNameRegexp: ").append(slingJcrinstallFolderNameRegexp).append("\n");
    sb.append("  slingJcrinstallFolderMaxDepth: ").append(slingJcrinstallFolderMaxDepth).append("\n");
    sb.append("  slingJcrinstallSearchPath: ").append(slingJcrinstallSearchPath).append("\n");
    sb.append("  slingJcrinstallNewConfigPath: ").append(slingJcrinstallNewConfigPath).append("\n");
    sb.append("  slingJcrinstallSignalPath: ").append(slingJcrinstallSignalPath).append("\n");
    sb.append("  slingJcrinstallEnableWriteback: ").append(slingJcrinstallEnableWriteback).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
