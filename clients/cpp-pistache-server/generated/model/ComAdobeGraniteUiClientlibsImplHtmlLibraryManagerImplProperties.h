/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties.h
 *
 * 
 */

#ifndef ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties_H_
#define ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties
    : public ModelBase
{
public:
    ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties();
    virtual ~ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerTiming() const;
    void setHtmllibmanagerTiming(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerTimingIsSet() const;
    void unsetHtmllibmanager_timing();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerDebugInitJs() const;
    void setHtmllibmanagerDebugInitJs(ConfigNodePropertyString const& value);
    bool htmllibmanagerDebugInitJsIsSet() const;
    void unsetHtmllibmanager_debug_init_js();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerMinify() const;
    void setHtmllibmanagerMinify(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerMinifyIsSet() const;
    void unsetHtmllibmanager_minify();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerDebug() const;
    void setHtmllibmanagerDebug(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerDebugIsSet() const;
    void unsetHtmllibmanager_debug();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerGzip() const;
    void setHtmllibmanagerGzip(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerGzipIsSet() const;
    void unsetHtmllibmanager_gzip();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getHtmllibmanagerMaxDataUriSize() const;
    void setHtmllibmanagerMaxDataUriSize(ConfigNodePropertyInteger const& value);
    bool htmllibmanagerMaxDataUriSizeIsSet() const;
    void unsetHtmllibmanager_maxDataUriSize();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getHtmllibmanagerMaxage() const;
    void setHtmllibmanagerMaxage(ConfigNodePropertyInteger const& value);
    bool htmllibmanagerMaxageIsSet() const;
    void unsetHtmllibmanager_maxage();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerForceCQUrlInfo() const;
    void setHtmllibmanagerForceCQUrlInfo(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerForceCQUrlInfoIsSet() const;
    void unsetHtmllibmanager_forceCQUrlInfo();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerDefaultthemename() const;
    void setHtmllibmanagerDefaultthemename(ConfigNodePropertyString const& value);
    bool htmllibmanagerDefaultthemenameIsSet() const;
    void unsetHtmllibmanager_defaultthemename();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerDefaultuserthemename() const;
    void setHtmllibmanagerDefaultuserthemename(ConfigNodePropertyString const& value);
    bool htmllibmanagerDefaultuserthemenameIsSet() const;
    void unsetHtmllibmanager_defaultuserthemename();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerClientmanager() const;
    void setHtmllibmanagerClientmanager(ConfigNodePropertyString const& value);
    bool htmllibmanagerClientmanagerIsSet() const;
    void unsetHtmllibmanager_clientmanager();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getHtmllibmanagerPathList() const;
    void setHtmllibmanagerPathList(ConfigNodePropertyArray const& value);
    bool htmllibmanagerPathListIsSet() const;
    void unsetHtmllibmanager_path_list();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getHtmllibmanagerExcludedPathList() const;
    void setHtmllibmanagerExcludedPathList(ConfigNodePropertyArray const& value);
    bool htmllibmanagerExcludedPathListIsSet() const;
    void unsetHtmllibmanager_excluded_path_list();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getHtmllibmanagerProcessorJs() const;
    void setHtmllibmanagerProcessorJs(ConfigNodePropertyArray const& value);
    bool htmllibmanagerProcessorJsIsSet() const;
    void unsetHtmllibmanager_processor_js();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getHtmllibmanagerProcessorCss() const;
    void setHtmllibmanagerProcessorCss(ConfigNodePropertyArray const& value);
    bool htmllibmanagerProcessorCssIsSet() const;
    void unsetHtmllibmanager_processor_css();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getHtmllibmanagerLongcachePatterns() const;
    void setHtmllibmanagerLongcachePatterns(ConfigNodePropertyArray const& value);
    bool htmllibmanagerLongcachePatternsIsSet() const;
    void unsetHtmllibmanager_longcache_patterns();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerLongcacheFormat() const;
    void setHtmllibmanagerLongcacheFormat(ConfigNodePropertyString const& value);
    bool htmllibmanagerLongcacheFormatIsSet() const;
    void unsetHtmllibmanager_longcache_format();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getHtmllibmanagerUseFileSystemOutputCache() const;
    void setHtmllibmanagerUseFileSystemOutputCache(ConfigNodePropertyBoolean const& value);
    bool htmllibmanagerUseFileSystemOutputCacheIsSet() const;
    void unsetHtmllibmanager_useFileSystemOutputCache();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getHtmllibmanagerFileSystemOutputCacheLocation() const;
    void setHtmllibmanagerFileSystemOutputCacheLocation(ConfigNodePropertyString const& value);
    bool htmllibmanagerFileSystemOutputCacheLocationIsSet() const;
    void unsetHtmllibmanager_fileSystemOutputCacheLocation();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getHtmllibmanagerDisableReplacement() const;
    void setHtmllibmanagerDisableReplacement(ConfigNodePropertyArray const& value);
    bool htmllibmanagerDisableReplacementIsSet() const;
    void unsetHtmllibmanager_disable_replacement();

protected:
    ConfigNodePropertyBoolean m_Htmllibmanager_timing;
    bool m_Htmllibmanager_timingIsSet;
    ConfigNodePropertyString m_Htmllibmanager_debug_init_js;
    bool m_Htmllibmanager_debug_init_jsIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_minify;
    bool m_Htmllibmanager_minifyIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_debug;
    bool m_Htmllibmanager_debugIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_gzip;
    bool m_Htmllibmanager_gzipIsSet;
    ConfigNodePropertyInteger m_Htmllibmanager_maxDataUriSize;
    bool m_Htmllibmanager_maxDataUriSizeIsSet;
    ConfigNodePropertyInteger m_Htmllibmanager_maxage;
    bool m_Htmllibmanager_maxageIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_forceCQUrlInfo;
    bool m_Htmllibmanager_forceCQUrlInfoIsSet;
    ConfigNodePropertyString m_Htmllibmanager_defaultthemename;
    bool m_Htmllibmanager_defaultthemenameIsSet;
    ConfigNodePropertyString m_Htmllibmanager_defaultuserthemename;
    bool m_Htmllibmanager_defaultuserthemenameIsSet;
    ConfigNodePropertyString m_Htmllibmanager_clientmanager;
    bool m_Htmllibmanager_clientmanagerIsSet;
    ConfigNodePropertyArray m_Htmllibmanager_path_list;
    bool m_Htmllibmanager_path_listIsSet;
    ConfigNodePropertyArray m_Htmllibmanager_excluded_path_list;
    bool m_Htmllibmanager_excluded_path_listIsSet;
    ConfigNodePropertyArray m_Htmllibmanager_processor_js;
    bool m_Htmllibmanager_processor_jsIsSet;
    ConfigNodePropertyArray m_Htmllibmanager_processor_css;
    bool m_Htmllibmanager_processor_cssIsSet;
    ConfigNodePropertyArray m_Htmllibmanager_longcache_patterns;
    bool m_Htmllibmanager_longcache_patternsIsSet;
    ConfigNodePropertyString m_Htmllibmanager_longcache_format;
    bool m_Htmllibmanager_longcache_formatIsSet;
    ConfigNodePropertyBoolean m_Htmllibmanager_useFileSystemOutputCache;
    bool m_Htmllibmanager_useFileSystemOutputCacheIsSet;
    ConfigNodePropertyString m_Htmllibmanager_fileSystemOutputCacheLocation;
    bool m_Htmllibmanager_fileSystemOutputCacheLocationIsSet;
    ConfigNodePropertyArray m_Htmllibmanager_disable_replacement;
    bool m_Htmllibmanager_disable_replacementIsSet;
};

}
}
}
}

#endif /* ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties_H_ */
