/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties()
{
    
}

OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::~OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties()
{
}

std::string OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getPathDescField() const
{
    return m_Path_desc_field;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setPathDescField(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Path_desc_field = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getPathChildField() const
{
    return m_Path_child_field;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setPathChildField(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Path_child_field = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getPathParentField() const
{
    return m_Path_parent_field;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setPathParentField(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Path_parent_field = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getPathExactField() const
{
    return m_Path_exact_field;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setPathExactField(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Path_exact_field = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getCatchAllField() const
{
    return m_Catch_all_field;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setCatchAllField(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Catch_all_field = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getCollapsedPathField() const
{
    return m_Collapsed_path_field;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setCollapsedPathField(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Collapsed_path_field = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getPathDepthField() const
{
    return m_Path_depth_field;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setPathDepthField(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Path_depth_field = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getCommitPolicy() const
{
    return m_Commit_policy;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setCommitPolicy(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Commit_policy = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getRows() const
{
    return m_Rows;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setRows(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Rows = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getPathRestrictions() const
{
    return m_Path_restrictions;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setPathRestrictions(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Path_restrictions = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getPropertyRestrictions() const
{
    return m_Property_restrictions;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setPropertyRestrictions(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Property_restrictions = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getPrimarytypesRestrictions() const
{
    return m_Primarytypes_restrictions;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setPrimarytypesRestrictions(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Primarytypes_restrictions = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getIgnoredProperties() const
{
    return m_Ignored_properties;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setIgnoredProperties(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Ignored_properties = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getUsedProperties() const
{
    return m_Used_properties;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setUsedProperties(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Used_properties = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getTypeMappings() const
{
    return m_Type_mappings;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setTypeMappings(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Type_mappings = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getPropertyMappings() const
{
    return m_Property_mappings;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setPropertyMappings(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Property_mappings = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::getCollapseJcrcontentNodes() const
{
    return m_Collapse_jcrcontent_nodes;
}
void OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProperties::setCollapseJcrcontentNodes(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Collapse_jcrcontent_nodes = value;
}

}
}
}
}

