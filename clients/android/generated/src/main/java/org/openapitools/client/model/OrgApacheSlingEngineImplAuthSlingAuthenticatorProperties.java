/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyDropDown;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheSlingEngineImplAuthSlingAuthenticatorProperties {
  
  @SerializedName("osgi.http.whiteboard.context.select")
  private ConfigNodePropertyString osgiHttpWhiteboardContextSelect = null;
  @SerializedName("osgi.http.whiteboard.listener")
  private ConfigNodePropertyString osgiHttpWhiteboardListener = null;
  @SerializedName("auth.sudo.cookie")
  private ConfigNodePropertyString authSudoCookie = null;
  @SerializedName("auth.sudo.parameter")
  private ConfigNodePropertyString authSudoParameter = null;
  @SerializedName("auth.annonymous")
  private ConfigNodePropertyBoolean authAnnonymous = null;
  @SerializedName("sling.auth.requirements")
  private ConfigNodePropertyArray slingAuthRequirements = null;
  @SerializedName("sling.auth.anonymous.user")
  private ConfigNodePropertyString slingAuthAnonymousUser = null;
  @SerializedName("sling.auth.anonymous.password")
  private ConfigNodePropertyString slingAuthAnonymousPassword = null;
  @SerializedName("auth.http")
  private ConfigNodePropertyDropDown authHttp = null;
  @SerializedName("auth.http.realm")
  private ConfigNodePropertyString authHttpRealm = null;
  @SerializedName("auth.uri.suffix")
  private ConfigNodePropertyArray authUriSuffix = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getOsgiHttpWhiteboardContextSelect() {
    return osgiHttpWhiteboardContextSelect;
  }
  public void setOsgiHttpWhiteboardContextSelect(ConfigNodePropertyString osgiHttpWhiteboardContextSelect) {
    this.osgiHttpWhiteboardContextSelect = osgiHttpWhiteboardContextSelect;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getOsgiHttpWhiteboardListener() {
    return osgiHttpWhiteboardListener;
  }
  public void setOsgiHttpWhiteboardListener(ConfigNodePropertyString osgiHttpWhiteboardListener) {
    this.osgiHttpWhiteboardListener = osgiHttpWhiteboardListener;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getAuthSudoCookie() {
    return authSudoCookie;
  }
  public void setAuthSudoCookie(ConfigNodePropertyString authSudoCookie) {
    this.authSudoCookie = authSudoCookie;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getAuthSudoParameter() {
    return authSudoParameter;
  }
  public void setAuthSudoParameter(ConfigNodePropertyString authSudoParameter) {
    this.authSudoParameter = authSudoParameter;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getAuthAnnonymous() {
    return authAnnonymous;
  }
  public void setAuthAnnonymous(ConfigNodePropertyBoolean authAnnonymous) {
    this.authAnnonymous = authAnnonymous;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getSlingAuthRequirements() {
    return slingAuthRequirements;
  }
  public void setSlingAuthRequirements(ConfigNodePropertyArray slingAuthRequirements) {
    this.slingAuthRequirements = slingAuthRequirements;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getSlingAuthAnonymousUser() {
    return slingAuthAnonymousUser;
  }
  public void setSlingAuthAnonymousUser(ConfigNodePropertyString slingAuthAnonymousUser) {
    this.slingAuthAnonymousUser = slingAuthAnonymousUser;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getSlingAuthAnonymousPassword() {
    return slingAuthAnonymousPassword;
  }
  public void setSlingAuthAnonymousPassword(ConfigNodePropertyString slingAuthAnonymousPassword) {
    this.slingAuthAnonymousPassword = slingAuthAnonymousPassword;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getAuthHttp() {
    return authHttp;
  }
  public void setAuthHttp(ConfigNodePropertyDropDown authHttp) {
    this.authHttp = authHttp;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getAuthHttpRealm() {
    return authHttpRealm;
  }
  public void setAuthHttpRealm(ConfigNodePropertyString authHttpRealm) {
    this.authHttpRealm = authHttpRealm;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getAuthUriSuffix() {
    return authUriSuffix;
  }
  public void setAuthUriSuffix(ConfigNodePropertyArray authUriSuffix) {
    this.authUriSuffix = authUriSuffix;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheSlingEngineImplAuthSlingAuthenticatorProperties orgApacheSlingEngineImplAuthSlingAuthenticatorProperties = (OrgApacheSlingEngineImplAuthSlingAuthenticatorProperties) o;
    return (this.osgiHttpWhiteboardContextSelect == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.osgiHttpWhiteboardContextSelect == null : this.osgiHttpWhiteboardContextSelect.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.osgiHttpWhiteboardContextSelect)) &&
        (this.osgiHttpWhiteboardListener == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.osgiHttpWhiteboardListener == null : this.osgiHttpWhiteboardListener.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.osgiHttpWhiteboardListener)) &&
        (this.authSudoCookie == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authSudoCookie == null : this.authSudoCookie.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authSudoCookie)) &&
        (this.authSudoParameter == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authSudoParameter == null : this.authSudoParameter.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authSudoParameter)) &&
        (this.authAnnonymous == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authAnnonymous == null : this.authAnnonymous.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authAnnonymous)) &&
        (this.slingAuthRequirements == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.slingAuthRequirements == null : this.slingAuthRequirements.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.slingAuthRequirements)) &&
        (this.slingAuthAnonymousUser == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.slingAuthAnonymousUser == null : this.slingAuthAnonymousUser.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.slingAuthAnonymousUser)) &&
        (this.slingAuthAnonymousPassword == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.slingAuthAnonymousPassword == null : this.slingAuthAnonymousPassword.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.slingAuthAnonymousPassword)) &&
        (this.authHttp == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authHttp == null : this.authHttp.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authHttp)) &&
        (this.authHttpRealm == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authHttpRealm == null : this.authHttpRealm.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authHttpRealm)) &&
        (this.authUriSuffix == null ? orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authUriSuffix == null : this.authUriSuffix.equals(orgApacheSlingEngineImplAuthSlingAuthenticatorProperties.authUriSuffix));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.osgiHttpWhiteboardContextSelect == null ? 0: this.osgiHttpWhiteboardContextSelect.hashCode());
    result = 31 * result + (this.osgiHttpWhiteboardListener == null ? 0: this.osgiHttpWhiteboardListener.hashCode());
    result = 31 * result + (this.authSudoCookie == null ? 0: this.authSudoCookie.hashCode());
    result = 31 * result + (this.authSudoParameter == null ? 0: this.authSudoParameter.hashCode());
    result = 31 * result + (this.authAnnonymous == null ? 0: this.authAnnonymous.hashCode());
    result = 31 * result + (this.slingAuthRequirements == null ? 0: this.slingAuthRequirements.hashCode());
    result = 31 * result + (this.slingAuthAnonymousUser == null ? 0: this.slingAuthAnonymousUser.hashCode());
    result = 31 * result + (this.slingAuthAnonymousPassword == null ? 0: this.slingAuthAnonymousPassword.hashCode());
    result = 31 * result + (this.authHttp == null ? 0: this.authHttp.hashCode());
    result = 31 * result + (this.authHttpRealm == null ? 0: this.authHttpRealm.hashCode());
    result = 31 * result + (this.authUriSuffix == null ? 0: this.authUriSuffix.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheSlingEngineImplAuthSlingAuthenticatorProperties {\n");
    
    sb.append("  osgiHttpWhiteboardContextSelect: ").append(osgiHttpWhiteboardContextSelect).append("\n");
    sb.append("  osgiHttpWhiteboardListener: ").append(osgiHttpWhiteboardListener).append("\n");
    sb.append("  authSudoCookie: ").append(authSudoCookie).append("\n");
    sb.append("  authSudoParameter: ").append(authSudoParameter).append("\n");
    sb.append("  authAnnonymous: ").append(authAnnonymous).append("\n");
    sb.append("  slingAuthRequirements: ").append(slingAuthRequirements).append("\n");
    sb.append("  slingAuthAnonymousUser: ").append(slingAuthAnonymousUser).append("\n");
    sb.append("  slingAuthAnonymousPassword: ").append(slingAuthAnonymousPassword).append("\n");
    sb.append("  authHttp: ").append(authHttp).append("\n");
    sb.append("  authHttpRealm: ").append(authHttpRealm).append("\n");
    sb.append("  authUriSuffix: ").append(authUriSuffix).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
