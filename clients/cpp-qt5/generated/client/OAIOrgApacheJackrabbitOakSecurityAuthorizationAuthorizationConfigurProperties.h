/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties_H_
#define OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyInteger.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties: public OAIObject {
public:
    OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties();
    OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties(QString json);
    ~OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyDropDown* getPermissionsJr2();
    void setPermissionsJr2(OAIConfigNodePropertyDropDown* permissions_jr2);

    OAIConfigNodePropertyDropDown* getImportBehavior();
    void setImportBehavior(OAIConfigNodePropertyDropDown* import_behavior);

    OAIConfigNodePropertyArray* getReadPaths();
    void setReadPaths(OAIConfigNodePropertyArray* read_paths);

    OAIConfigNodePropertyArray* getAdministrativePrincipals();
    void setAdministrativePrincipals(OAIConfigNodePropertyArray* administrative_principals);

    OAIConfigNodePropertyInteger* getConfigurationRanking();
    void setConfigurationRanking(OAIConfigNodePropertyInteger* configuration_ranking);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyDropDown* permissions_jr2;
    bool m_permissions_jr2_isSet;

    OAIConfigNodePropertyDropDown* import_behavior;
    bool m_import_behavior_isSet;

    OAIConfigNodePropertyArray* read_paths;
    bool m_read_paths_isSet;

    OAIConfigNodePropertyArray* administrative_principals;
    bool m_administrative_principals_isSet;

    OAIConfigNodePropertyInteger* configuration_ranking;
    bool m_configuration_ranking_isSet;

};

}

#endif /* OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties_H_ */
