/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties::ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties()
{
    m_Batch_commit_sizeIsSet = false;
    
}

ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties::~ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties()
{
}

void ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Batch_commit_sizeIsSet)
    {
        val["batch.commit.size"] = ModelBase::toJson(m_Batch_commit_size);
    }
    

    return val;
}

void ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("batch.commit.size") != val.end())
    {
        if(!val["batch.commit.size"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["batch.commit.size"]);
            setBatchCommitSize( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties::getBatchCommitSize() const
{
    return m_Batch_commit_size;
}
void ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties::setBatchCommitSize(ConfigNodePropertyInteger const& value)
{
    m_Batch_commit_size = value;
    m_Batch_commit_sizeIsSet = true;
}
bool ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties::batchCommitSizeIsSet() const
{
    return m_Batch_commit_sizeIsSet;
}
void ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties::unsetBatch_commit_size()
{
    m_Batch_commit_sizeIsSet = false;
}

}
}
}
}

