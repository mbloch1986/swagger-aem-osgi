<?php
/**
 * OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("handler.schemes")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $handlerSchemes;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("sling.jcrinstall.folder.name.regexp")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $slingJcrinstallFolderNameRegexp;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("sling.jcrinstall.folder.max.depth")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $slingJcrinstallFolderMaxDepth;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("sling.jcrinstall.search.path")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $slingJcrinstallSearchPath;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("sling.jcrinstall.new.config.path")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $slingJcrinstallNewConfigPath;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("sling.jcrinstall.signal.path")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $slingJcrinstallSignalPath;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("sling.jcrinstall.enable.writeback")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $slingJcrinstallEnableWriteback;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->handlerSchemes = isset($data['handlerSchemes']) ? $data['handlerSchemes'] : null;
        $this->slingJcrinstallFolderNameRegexp = isset($data['slingJcrinstallFolderNameRegexp']) ? $data['slingJcrinstallFolderNameRegexp'] : null;
        $this->slingJcrinstallFolderMaxDepth = isset($data['slingJcrinstallFolderMaxDepth']) ? $data['slingJcrinstallFolderMaxDepth'] : null;
        $this->slingJcrinstallSearchPath = isset($data['slingJcrinstallSearchPath']) ? $data['slingJcrinstallSearchPath'] : null;
        $this->slingJcrinstallNewConfigPath = isset($data['slingJcrinstallNewConfigPath']) ? $data['slingJcrinstallNewConfigPath'] : null;
        $this->slingJcrinstallSignalPath = isset($data['slingJcrinstallSignalPath']) ? $data['slingJcrinstallSignalPath'] : null;
        $this->slingJcrinstallEnableWriteback = isset($data['slingJcrinstallEnableWriteback']) ? $data['slingJcrinstallEnableWriteback'] : null;
    }

    /**
     * Gets handlerSchemes.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getHandlerSchemes()
    {
        return $this->handlerSchemes;
    }

    /**
     * Sets handlerSchemes.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $handlerSchemes
     *
     * @return $this
     */
    public function setHandlerSchemes(ConfigNodePropertyArray $handlerSchemes = null)
    {
        $this->handlerSchemes = $handlerSchemes;

        return $this;
    }

    /**
     * Gets slingJcrinstallFolderNameRegexp.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSlingJcrinstallFolderNameRegexp()
    {
        return $this->slingJcrinstallFolderNameRegexp;
    }

    /**
     * Sets slingJcrinstallFolderNameRegexp.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $slingJcrinstallFolderNameRegexp
     *
     * @return $this
     */
    public function setSlingJcrinstallFolderNameRegexp(ConfigNodePropertyString $slingJcrinstallFolderNameRegexp = null)
    {
        $this->slingJcrinstallFolderNameRegexp = $slingJcrinstallFolderNameRegexp;

        return $this;
    }

    /**
     * Gets slingJcrinstallFolderMaxDepth.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getSlingJcrinstallFolderMaxDepth()
    {
        return $this->slingJcrinstallFolderMaxDepth;
    }

    /**
     * Sets slingJcrinstallFolderMaxDepth.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $slingJcrinstallFolderMaxDepth
     *
     * @return $this
     */
    public function setSlingJcrinstallFolderMaxDepth(ConfigNodePropertyInteger $slingJcrinstallFolderMaxDepth = null)
    {
        $this->slingJcrinstallFolderMaxDepth = $slingJcrinstallFolderMaxDepth;

        return $this;
    }

    /**
     * Gets slingJcrinstallSearchPath.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getSlingJcrinstallSearchPath()
    {
        return $this->slingJcrinstallSearchPath;
    }

    /**
     * Sets slingJcrinstallSearchPath.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $slingJcrinstallSearchPath
     *
     * @return $this
     */
    public function setSlingJcrinstallSearchPath(ConfigNodePropertyArray $slingJcrinstallSearchPath = null)
    {
        $this->slingJcrinstallSearchPath = $slingJcrinstallSearchPath;

        return $this;
    }

    /**
     * Gets slingJcrinstallNewConfigPath.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSlingJcrinstallNewConfigPath()
    {
        return $this->slingJcrinstallNewConfigPath;
    }

    /**
     * Sets slingJcrinstallNewConfigPath.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $slingJcrinstallNewConfigPath
     *
     * @return $this
     */
    public function setSlingJcrinstallNewConfigPath(ConfigNodePropertyString $slingJcrinstallNewConfigPath = null)
    {
        $this->slingJcrinstallNewConfigPath = $slingJcrinstallNewConfigPath;

        return $this;
    }

    /**
     * Gets slingJcrinstallSignalPath.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSlingJcrinstallSignalPath()
    {
        return $this->slingJcrinstallSignalPath;
    }

    /**
     * Sets slingJcrinstallSignalPath.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $slingJcrinstallSignalPath
     *
     * @return $this
     */
    public function setSlingJcrinstallSignalPath(ConfigNodePropertyString $slingJcrinstallSignalPath = null)
    {
        $this->slingJcrinstallSignalPath = $slingJcrinstallSignalPath;

        return $this;
    }

    /**
     * Gets slingJcrinstallEnableWriteback.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getSlingJcrinstallEnableWriteback()
    {
        return $this->slingJcrinstallEnableWriteback;
    }

    /**
     * Sets slingJcrinstallEnableWriteback.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $slingJcrinstallEnableWriteback
     *
     * @return $this
     */
    public function setSlingJcrinstallEnableWriteback(ConfigNodePropertyBoolean $slingJcrinstallEnableWriteback = null)
    {
        $this->slingJcrinstallEnableWriteback = $slingJcrinstallEnableWriteback;

        return $this;
    }
}


