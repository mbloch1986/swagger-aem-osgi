/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeCqProjectsPurgeSchedulerProperties {
  
  @SerializedName("scheduledpurge.name")
  private ConfigNodePropertyString scheduledpurgeName = null;
  @SerializedName("scheduledpurge.purgeActive")
  private ConfigNodePropertyBoolean scheduledpurgePurgeActive = null;
  @SerializedName("scheduledpurge.templates")
  private ConfigNodePropertyArray scheduledpurgeTemplates = null;
  @SerializedName("scheduledpurge.purgeGroups")
  private ConfigNodePropertyBoolean scheduledpurgePurgeGroups = null;
  @SerializedName("scheduledpurge.purgeAssets")
  private ConfigNodePropertyBoolean scheduledpurgePurgeAssets = null;
  @SerializedName("scheduledpurge.terminateRunningWorkflows")
  private ConfigNodePropertyBoolean scheduledpurgeTerminateRunningWorkflows = null;
  @SerializedName("scheduledpurge.daysold")
  private ConfigNodePropertyInteger scheduledpurgeDaysold = null;
  @SerializedName("scheduledpurge.saveThreshold")
  private ConfigNodePropertyInteger scheduledpurgeSaveThreshold = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getScheduledpurgeName() {
    return scheduledpurgeName;
  }
  public void setScheduledpurgeName(ConfigNodePropertyString scheduledpurgeName) {
    this.scheduledpurgeName = scheduledpurgeName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getScheduledpurgePurgeActive() {
    return scheduledpurgePurgeActive;
  }
  public void setScheduledpurgePurgeActive(ConfigNodePropertyBoolean scheduledpurgePurgeActive) {
    this.scheduledpurgePurgeActive = scheduledpurgePurgeActive;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getScheduledpurgeTemplates() {
    return scheduledpurgeTemplates;
  }
  public void setScheduledpurgeTemplates(ConfigNodePropertyArray scheduledpurgeTemplates) {
    this.scheduledpurgeTemplates = scheduledpurgeTemplates;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getScheduledpurgePurgeGroups() {
    return scheduledpurgePurgeGroups;
  }
  public void setScheduledpurgePurgeGroups(ConfigNodePropertyBoolean scheduledpurgePurgeGroups) {
    this.scheduledpurgePurgeGroups = scheduledpurgePurgeGroups;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getScheduledpurgePurgeAssets() {
    return scheduledpurgePurgeAssets;
  }
  public void setScheduledpurgePurgeAssets(ConfigNodePropertyBoolean scheduledpurgePurgeAssets) {
    this.scheduledpurgePurgeAssets = scheduledpurgePurgeAssets;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getScheduledpurgeTerminateRunningWorkflows() {
    return scheduledpurgeTerminateRunningWorkflows;
  }
  public void setScheduledpurgeTerminateRunningWorkflows(ConfigNodePropertyBoolean scheduledpurgeTerminateRunningWorkflows) {
    this.scheduledpurgeTerminateRunningWorkflows = scheduledpurgeTerminateRunningWorkflows;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getScheduledpurgeDaysold() {
    return scheduledpurgeDaysold;
  }
  public void setScheduledpurgeDaysold(ConfigNodePropertyInteger scheduledpurgeDaysold) {
    this.scheduledpurgeDaysold = scheduledpurgeDaysold;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getScheduledpurgeSaveThreshold() {
    return scheduledpurgeSaveThreshold;
  }
  public void setScheduledpurgeSaveThreshold(ConfigNodePropertyInteger scheduledpurgeSaveThreshold) {
    this.scheduledpurgeSaveThreshold = scheduledpurgeSaveThreshold;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeCqProjectsPurgeSchedulerProperties comAdobeCqProjectsPurgeSchedulerProperties = (ComAdobeCqProjectsPurgeSchedulerProperties) o;
    return (this.scheduledpurgeName == null ? comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeName == null : this.scheduledpurgeName.equals(comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeName)) &&
        (this.scheduledpurgePurgeActive == null ? comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgePurgeActive == null : this.scheduledpurgePurgeActive.equals(comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgePurgeActive)) &&
        (this.scheduledpurgeTemplates == null ? comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeTemplates == null : this.scheduledpurgeTemplates.equals(comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeTemplates)) &&
        (this.scheduledpurgePurgeGroups == null ? comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgePurgeGroups == null : this.scheduledpurgePurgeGroups.equals(comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgePurgeGroups)) &&
        (this.scheduledpurgePurgeAssets == null ? comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgePurgeAssets == null : this.scheduledpurgePurgeAssets.equals(comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgePurgeAssets)) &&
        (this.scheduledpurgeTerminateRunningWorkflows == null ? comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeTerminateRunningWorkflows == null : this.scheduledpurgeTerminateRunningWorkflows.equals(comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeTerminateRunningWorkflows)) &&
        (this.scheduledpurgeDaysold == null ? comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeDaysold == null : this.scheduledpurgeDaysold.equals(comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeDaysold)) &&
        (this.scheduledpurgeSaveThreshold == null ? comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeSaveThreshold == null : this.scheduledpurgeSaveThreshold.equals(comAdobeCqProjectsPurgeSchedulerProperties.scheduledpurgeSaveThreshold));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.scheduledpurgeName == null ? 0: this.scheduledpurgeName.hashCode());
    result = 31 * result + (this.scheduledpurgePurgeActive == null ? 0: this.scheduledpurgePurgeActive.hashCode());
    result = 31 * result + (this.scheduledpurgeTemplates == null ? 0: this.scheduledpurgeTemplates.hashCode());
    result = 31 * result + (this.scheduledpurgePurgeGroups == null ? 0: this.scheduledpurgePurgeGroups.hashCode());
    result = 31 * result + (this.scheduledpurgePurgeAssets == null ? 0: this.scheduledpurgePurgeAssets.hashCode());
    result = 31 * result + (this.scheduledpurgeTerminateRunningWorkflows == null ? 0: this.scheduledpurgeTerminateRunningWorkflows.hashCode());
    result = 31 * result + (this.scheduledpurgeDaysold == null ? 0: this.scheduledpurgeDaysold.hashCode());
    result = 31 * result + (this.scheduledpurgeSaveThreshold == null ? 0: this.scheduledpurgeSaveThreshold.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeCqProjectsPurgeSchedulerProperties {\n");
    
    sb.append("  scheduledpurgeName: ").append(scheduledpurgeName).append("\n");
    sb.append("  scheduledpurgePurgeActive: ").append(scheduledpurgePurgeActive).append("\n");
    sb.append("  scheduledpurgeTemplates: ").append(scheduledpurgeTemplates).append("\n");
    sb.append("  scheduledpurgePurgeGroups: ").append(scheduledpurgePurgeGroups).append("\n");
    sb.append("  scheduledpurgePurgeAssets: ").append(scheduledpurgePurgeAssets).append("\n");
    sb.append("  scheduledpurgeTerminateRunningWorkflows: ").append(scheduledpurgeTerminateRunningWorkflows).append("\n");
    sb.append("  scheduledpurgeDaysold: ").append(scheduledpurgeDaysold).append("\n");
    sb.append("  scheduledpurgeSaveThreshold: ").append(scheduledpurgeSaveThreshold).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
