/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties() {
    init();
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::~OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties() {
    this->cleanup();
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::init() {
    principal_names = new OAIConfigNodePropertyArray();
    m_principal_names_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::cleanup() {
    if(principal_names != nullptr) { 
        delete principal_names;
    }
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties*
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&principal_names, pJson["principalNames"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::asJsonObject() {
    QJsonObject obj;
    if((principal_names != nullptr) && (principal_names->isSet())){
        toJsonValue(QString("principalNames"), principal_names, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::getPrincipalNames() {
    return principal_names;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::setPrincipalNames(OAIConfigNodePropertyArray* principal_names) {
    this->principal_names = principal_names;
    this->m_principal_names_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(principal_names != nullptr && principal_names->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

