/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties() {
    init();
}

OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::~OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties() {
    this->cleanup();
}

void
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::init() {
    parameter_guava_cache_enabled = new OAIConfigNodePropertyBoolean();
    m_parameter_guava_cache_enabled_isSet = false;
    parameter_guava_cache_params = new OAIConfigNodePropertyString();
    m_parameter_guava_cache_params_isSet = false;
    parameter_guava_cache_reload = new OAIConfigNodePropertyBoolean();
    m_parameter_guava_cache_reload_isSet = false;
    service_ranking = new OAIConfigNodePropertyInteger();
    m_service_ranking_isSet = false;
}

void
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::cleanup() {
    if(parameter_guava_cache_enabled != nullptr) { 
        delete parameter_guava_cache_enabled;
    }
    if(parameter_guava_cache_params != nullptr) { 
        delete parameter_guava_cache_params;
    }
    if(parameter_guava_cache_reload != nullptr) { 
        delete parameter_guava_cache_reload;
    }
    if(service_ranking != nullptr) { 
        delete service_ranking;
    }
}

OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties*
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&parameter_guava_cache_enabled, pJson["parameter.guava.cache.enabled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&parameter_guava_cache_params, pJson["parameter.guava.cache.params"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&parameter_guava_cache_reload, pJson["parameter.guava.cache.reload"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&service_ranking, pJson["service.ranking"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::asJsonObject() {
    QJsonObject obj;
    if((parameter_guava_cache_enabled != nullptr) && (parameter_guava_cache_enabled->isSet())){
        toJsonValue(QString("parameter.guava.cache.enabled"), parameter_guava_cache_enabled, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((parameter_guava_cache_params != nullptr) && (parameter_guava_cache_params->isSet())){
        toJsonValue(QString("parameter.guava.cache.params"), parameter_guava_cache_params, obj, QString("OAIConfigNodePropertyString"));
    }
    if((parameter_guava_cache_reload != nullptr) && (parameter_guava_cache_reload->isSet())){
        toJsonValue(QString("parameter.guava.cache.reload"), parameter_guava_cache_reload, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((service_ranking != nullptr) && (service_ranking->isSet())){
        toJsonValue(QString("service.ranking"), service_ranking, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::getParameterGuavaCacheEnabled() {
    return parameter_guava_cache_enabled;
}
void
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::setParameterGuavaCacheEnabled(OAIConfigNodePropertyBoolean* parameter_guava_cache_enabled) {
    this->parameter_guava_cache_enabled = parameter_guava_cache_enabled;
    this->m_parameter_guava_cache_enabled_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::getParameterGuavaCacheParams() {
    return parameter_guava_cache_params;
}
void
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::setParameterGuavaCacheParams(OAIConfigNodePropertyString* parameter_guava_cache_params) {
    this->parameter_guava_cache_params = parameter_guava_cache_params;
    this->m_parameter_guava_cache_params_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::getParameterGuavaCacheReload() {
    return parameter_guava_cache_reload;
}
void
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::setParameterGuavaCacheReload(OAIConfigNodePropertyBoolean* parameter_guava_cache_reload) {
    this->parameter_guava_cache_reload = parameter_guava_cache_reload;
    this->m_parameter_guava_cache_reload_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::getServiceRanking() {
    return service_ranking;
}
void
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::setServiceRanking(OAIConfigNodePropertyInteger* service_ranking) {
    this->service_ranking = service_ranking;
    this->m_service_ranking_isSet = true;
}


bool
OAIComAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(parameter_guava_cache_enabled != nullptr && parameter_guava_cache_enabled->isSet()){ isObjectUpdated = true; break;}
        if(parameter_guava_cache_params != nullptr && parameter_guava_cache_params->isSet()){ isObjectUpdated = true; break;}
        if(parameter_guava_cache_reload != nullptr && parameter_guava_cache_reload->isSet()){ isObjectUpdated = true; break;}
        if(service_ranking != nullptr && service_ranking->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

