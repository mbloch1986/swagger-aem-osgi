/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties() {
    init();
}

OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::~OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::init() {
    feature_name = new OAIConfigNodePropertyString();
    m_feature_name_isSet = false;
    feature_description = new OAIConfigNodePropertyString();
    m_feature_description_isSet = false;
    http_header_name = new OAIConfigNodePropertyString();
    m_http_header_name_isSet = false;
    http_header_valuepattern = new OAIConfigNodePropertyString();
    m_http_header_valuepattern_isSet = false;
}

void
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::cleanup() {
    if(feature_name != nullptr) { 
        delete feature_name;
    }
    if(feature_description != nullptr) { 
        delete feature_description;
    }
    if(http_header_name != nullptr) { 
        delete http_header_name;
    }
    if(http_header_valuepattern != nullptr) { 
        delete http_header_valuepattern;
    }
}

OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties*
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&feature_name, pJson["feature.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&feature_description, pJson["feature.description"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&http_header_name, pJson["http.header.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&http_header_valuepattern, pJson["http.header.valuepattern"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::asJsonObject() {
    QJsonObject obj;
    if((feature_name != nullptr) && (feature_name->isSet())){
        toJsonValue(QString("feature.name"), feature_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((feature_description != nullptr) && (feature_description->isSet())){
        toJsonValue(QString("feature.description"), feature_description, obj, QString("OAIConfigNodePropertyString"));
    }
    if((http_header_name != nullptr) && (http_header_name->isSet())){
        toJsonValue(QString("http.header.name"), http_header_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((http_header_valuepattern != nullptr) && (http_header_valuepattern->isSet())){
        toJsonValue(QString("http.header.valuepattern"), http_header_valuepattern, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::getFeatureName() {
    return feature_name;
}
void
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::setFeatureName(OAIConfigNodePropertyString* feature_name) {
    this->feature_name = feature_name;
    this->m_feature_name_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::getFeatureDescription() {
    return feature_description;
}
void
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::setFeatureDescription(OAIConfigNodePropertyString* feature_description) {
    this->feature_description = feature_description;
    this->m_feature_description_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::getHttpHeaderName() {
    return http_header_name;
}
void
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::setHttpHeaderName(OAIConfigNodePropertyString* http_header_name) {
    this->http_header_name = http_header_name;
    this->m_http_header_name_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::getHttpHeaderValuepattern() {
    return http_header_valuepattern;
}
void
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::setHttpHeaderValuepattern(OAIConfigNodePropertyString* http_header_valuepattern) {
    this->http_header_valuepattern = http_header_valuepattern;
    this->m_http_header_valuepattern_isSet = true;
}


bool
OAIComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(feature_name != nullptr && feature_name->isSet()){ isObjectUpdated = true; break;}
        if(feature_description != nullptr && feature_description->isSet()){ isObjectUpdated = true; break;}
        if(http_header_name != nullptr && http_header_name->isSet()){ isObjectUpdated = true; break;}
        if(http_header_valuepattern != nullptr && http_header_valuepattern->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

