//
// ComAdobeGraniteAuthOauthAccesstokenProviderProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


open class ComAdobeGraniteAuthOauthAccesstokenProviderProperties: JSONEncodable {

    public var name: ConfigNodePropertyString?
    public var authTokenProviderTitle: ConfigNodePropertyString?
    public var authTokenProviderDefaultClaims: ConfigNodePropertyArray?
    public var authTokenProviderEndpoint: ConfigNodePropertyString?
    public var authAccessTokenRequest: ConfigNodePropertyString?
    public var authTokenProviderKeypairAlias: ConfigNodePropertyString?
    public var authTokenProviderConnTimeout: ConfigNodePropertyInteger?
    public var authTokenProviderSoTimeout: ConfigNodePropertyInteger?
    public var authTokenProviderClientId: ConfigNodePropertyString?
    public var authTokenProviderScope: ConfigNodePropertyString?
    public var authTokenProviderReuseAccessToken: ConfigNodePropertyBoolean?
    public var authTokenProviderRelaxedSsl: ConfigNodePropertyBoolean?
    public var tokenRequestCustomizerType: ConfigNodePropertyString?
    public var authTokenValidatorType: ConfigNodePropertyString?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["name"] = self.name?.encodeToJSON()
        nillableDictionary["auth.token.provider.title"] = self.authTokenProviderTitle?.encodeToJSON()
        nillableDictionary["auth.token.provider.default.claims"] = self.authTokenProviderDefaultClaims?.encodeToJSON()
        nillableDictionary["auth.token.provider.endpoint"] = self.authTokenProviderEndpoint?.encodeToJSON()
        nillableDictionary["auth.access.token.request"] = self.authAccessTokenRequest?.encodeToJSON()
        nillableDictionary["auth.token.provider.keypair.alias"] = self.authTokenProviderKeypairAlias?.encodeToJSON()
        nillableDictionary["auth.token.provider.conn.timeout"] = self.authTokenProviderConnTimeout?.encodeToJSON()
        nillableDictionary["auth.token.provider.so.timeout"] = self.authTokenProviderSoTimeout?.encodeToJSON()
        nillableDictionary["auth.token.provider.client.id"] = self.authTokenProviderClientId?.encodeToJSON()
        nillableDictionary["auth.token.provider.scope"] = self.authTokenProviderScope?.encodeToJSON()
        nillableDictionary["auth.token.provider.reuse.access.token"] = self.authTokenProviderReuseAccessToken?.encodeToJSON()
        nillableDictionary["auth.token.provider.relaxed.ssl"] = self.authTokenProviderRelaxedSsl?.encodeToJSON()
        nillableDictionary["token.request.customizer.type"] = self.tokenRequestCustomizerType?.encodeToJSON()
        nillableDictionary["auth.token.validator.type"] = self.authTokenValidatorType?.encodeToJSON()

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}

