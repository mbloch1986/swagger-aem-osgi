/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComDayCqWcmMsmImplActionsContentCopyActionFactoryProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqWcmMsmImplActionsContentCopyActionFactoryProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqWcmMsmImplActionsContentCopyActionFactoryProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqWcmMsmImplActionsContentCopyActionFactoryProperties
    : public ModelBase
{
public:
    ComDayCqWcmMsmImplActionsContentCopyActionFactoryProperties();
    virtual ~ComDayCqWcmMsmImplActionsContentCopyActionFactoryProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComDayCqWcmMsmImplActionsContentCopyActionFactoryProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getCqWcmMsmActionExcludednodetypes() const;
    bool cqWcmMsmActionExcludednodetypesIsSet() const;
    void unsetCq_wcm_msm_action_excludednodetypes();
    void setCqWcmMsmActionExcludednodetypes(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getCqWcmMsmActionExcludedparagraphitems() const;
    bool cqWcmMsmActionExcludedparagraphitemsIsSet() const;
    void unsetCq_wcm_msm_action_excludedparagraphitems();
    void setCqWcmMsmActionExcludedparagraphitems(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getCqWcmMsmActionExcludedprops() const;
    bool cqWcmMsmActionExcludedpropsIsSet() const;
    void unsetCq_wcm_msm_action_excludedprops();
    void setCqWcmMsmActionExcludedprops(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown> getContentcopyactionOrderStyle() const;
    bool contentcopyactionOrderStyleIsSet() const;
    void unsetContentcopyaction_order_style();
    void setContentcopyactionOrderStyle(std::shared_ptr<ConfigNodePropertyDropDown> value);

protected:
    std::shared_ptr<ConfigNodePropertyArray> m_Cq_wcm_msm_action_excludednodetypes;
    bool m_Cq_wcm_msm_action_excludednodetypesIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Cq_wcm_msm_action_excludedparagraphitems;
    bool m_Cq_wcm_msm_action_excludedparagraphitemsIsSet;
    std::shared_ptr<ConfigNodePropertyArray> m_Cq_wcm_msm_action_excludedprops;
    bool m_Cq_wcm_msm_action_excludedpropsIsSet;
    std::shared_ptr<ConfigNodePropertyDropDown> m_Contentcopyaction_order_style;
    bool m_Contentcopyaction_order_styleIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ComDayCqWcmMsmImplActionsContentCopyActionFactoryProperties_H_ */
