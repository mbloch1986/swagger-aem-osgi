/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyFloat;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties
 */
public class ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorPropertiesTest {
    private final ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties model = new ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties();

    /**
     * Model tests for ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties
     */
    @Test
    public void testComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties() {
        // TODO: test ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties
    }

    /**
     * Test the property 'jmxObjectname'
     */
    @Test
    public void jmxObjectnameTest() {
        // TODO: test jmxObjectname
    }

    /**
     * Test the property 'propertyMeasureEnabled'
     */
    @Test
    public void propertyMeasureEnabledTest() {
        // TODO: test propertyMeasureEnabled
    }

    /**
     * Test the property 'propertyName'
     */
    @Test
    public void propertyNameTest() {
        // TODO: test propertyName
    }

    /**
     * Test the property 'propertyMaxWaitMs'
     */
    @Test
    public void propertyMaxWaitMsTest() {
        // TODO: test propertyMaxWaitMs
    }

    /**
     * Test the property 'propertyMaxRate'
     */
    @Test
    public void propertyMaxRateTest() {
        // TODO: test propertyMaxRate
    }

    /**
     * Test the property 'fulltextMeasureEnabled'
     */
    @Test
    public void fulltextMeasureEnabledTest() {
        // TODO: test fulltextMeasureEnabled
    }

    /**
     * Test the property 'fulltextName'
     */
    @Test
    public void fulltextNameTest() {
        // TODO: test fulltextName
    }

    /**
     * Test the property 'fulltextMaxWaitMs'
     */
    @Test
    public void fulltextMaxWaitMsTest() {
        // TODO: test fulltextMaxWaitMs
    }

    /**
     * Test the property 'fulltextMaxRate'
     */
    @Test
    public void fulltextMaxRateTest() {
        // TODO: test fulltextMaxRate
    }

}
