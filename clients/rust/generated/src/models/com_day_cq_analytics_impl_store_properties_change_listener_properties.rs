/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqAnalyticsImplStorePropertiesChangeListenerProperties {
  #[serde(rename = "cq.store.listener.additionalStorePaths")]
  cq_store_listener_additional_store_paths: Option<::models::ConfigNodePropertyArray>
}

impl ComDayCqAnalyticsImplStorePropertiesChangeListenerProperties {
  pub fn new() -> ComDayCqAnalyticsImplStorePropertiesChangeListenerProperties {
    ComDayCqAnalyticsImplStorePropertiesChangeListenerProperties {
      cq_store_listener_additional_store_paths: None
    }
  }

  pub fn set_cq_store_listener_additional_store_paths(&mut self, cq_store_listener_additional_store_paths: ::models::ConfigNodePropertyArray) {
    self.cq_store_listener_additional_store_paths = Some(cq_store_listener_additional_store_paths);
  }

  pub fn with_cq_store_listener_additional_store_paths(mut self, cq_store_listener_additional_store_paths: ::models::ConfigNodePropertyArray) -> ComDayCqAnalyticsImplStorePropertiesChangeListenerProperties {
    self.cq_store_listener_additional_store_paths = Some(cq_store_listener_additional_store_paths);
    self
  }

  pub fn cq_store_listener_additional_store_paths(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.cq_store_listener_additional_store_paths.as_ref()
  }

  pub fn reset_cq_store_listener_additional_store_paths(&mut self) {
    self.cq_store_listener_additional_store_paths = None;
  }

}



