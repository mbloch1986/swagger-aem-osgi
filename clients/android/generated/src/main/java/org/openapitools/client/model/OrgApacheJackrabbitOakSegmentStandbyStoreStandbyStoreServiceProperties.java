/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyDropDown;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties {
  
  @SerializedName("org.apache.sling.installer.configuration.persist")
  private ConfigNodePropertyBoolean orgApacheSlingInstallerConfigurationPersist = null;
  @SerializedName("mode")
  private ConfigNodePropertyDropDown mode = null;
  @SerializedName("port")
  private ConfigNodePropertyInteger port = null;
  @SerializedName("primary.host")
  private ConfigNodePropertyString primaryHost = null;
  @SerializedName("interval")
  private ConfigNodePropertyInteger interval = null;
  @SerializedName("primary.allowed-client-ip-ranges")
  private ConfigNodePropertyArray primaryAllowedClientIpRanges = null;
  @SerializedName("secure")
  private ConfigNodePropertyBoolean secure = null;
  @SerializedName("standby.readtimeout")
  private ConfigNodePropertyInteger standbyReadtimeout = null;
  @SerializedName("standby.autoclean")
  private ConfigNodePropertyBoolean standbyAutoclean = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getOrgApacheSlingInstallerConfigurationPersist() {
    return orgApacheSlingInstallerConfigurationPersist;
  }
  public void setOrgApacheSlingInstallerConfigurationPersist(ConfigNodePropertyBoolean orgApacheSlingInstallerConfigurationPersist) {
    this.orgApacheSlingInstallerConfigurationPersist = orgApacheSlingInstallerConfigurationPersist;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getMode() {
    return mode;
  }
  public void setMode(ConfigNodePropertyDropDown mode) {
    this.mode = mode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getPort() {
    return port;
  }
  public void setPort(ConfigNodePropertyInteger port) {
    this.port = port;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getPrimaryHost() {
    return primaryHost;
  }
  public void setPrimaryHost(ConfigNodePropertyString primaryHost) {
    this.primaryHost = primaryHost;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getInterval() {
    return interval;
  }
  public void setInterval(ConfigNodePropertyInteger interval) {
    this.interval = interval;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getPrimaryAllowedClientIpRanges() {
    return primaryAllowedClientIpRanges;
  }
  public void setPrimaryAllowedClientIpRanges(ConfigNodePropertyArray primaryAllowedClientIpRanges) {
    this.primaryAllowedClientIpRanges = primaryAllowedClientIpRanges;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getSecure() {
    return secure;
  }
  public void setSecure(ConfigNodePropertyBoolean secure) {
    this.secure = secure;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getStandbyReadtimeout() {
    return standbyReadtimeout;
  }
  public void setStandbyReadtimeout(ConfigNodePropertyInteger standbyReadtimeout) {
    this.standbyReadtimeout = standbyReadtimeout;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getStandbyAutoclean() {
    return standbyAutoclean;
  }
  public void setStandbyAutoclean(ConfigNodePropertyBoolean standbyAutoclean) {
    this.standbyAutoclean = standbyAutoclean;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties = (OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties) o;
    return (this.orgApacheSlingInstallerConfigurationPersist == null ? orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.orgApacheSlingInstallerConfigurationPersist == null : this.orgApacheSlingInstallerConfigurationPersist.equals(orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.orgApacheSlingInstallerConfigurationPersist)) &&
        (this.mode == null ? orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.mode == null : this.mode.equals(orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.mode)) &&
        (this.port == null ? orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.port == null : this.port.equals(orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.port)) &&
        (this.primaryHost == null ? orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.primaryHost == null : this.primaryHost.equals(orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.primaryHost)) &&
        (this.interval == null ? orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.interval == null : this.interval.equals(orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.interval)) &&
        (this.primaryAllowedClientIpRanges == null ? orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.primaryAllowedClientIpRanges == null : this.primaryAllowedClientIpRanges.equals(orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.primaryAllowedClientIpRanges)) &&
        (this.secure == null ? orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.secure == null : this.secure.equals(orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.secure)) &&
        (this.standbyReadtimeout == null ? orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.standbyReadtimeout == null : this.standbyReadtimeout.equals(orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.standbyReadtimeout)) &&
        (this.standbyAutoclean == null ? orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.standbyAutoclean == null : this.standbyAutoclean.equals(orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.standbyAutoclean));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.orgApacheSlingInstallerConfigurationPersist == null ? 0: this.orgApacheSlingInstallerConfigurationPersist.hashCode());
    result = 31 * result + (this.mode == null ? 0: this.mode.hashCode());
    result = 31 * result + (this.port == null ? 0: this.port.hashCode());
    result = 31 * result + (this.primaryHost == null ? 0: this.primaryHost.hashCode());
    result = 31 * result + (this.interval == null ? 0: this.interval.hashCode());
    result = 31 * result + (this.primaryAllowedClientIpRanges == null ? 0: this.primaryAllowedClientIpRanges.hashCode());
    result = 31 * result + (this.secure == null ? 0: this.secure.hashCode());
    result = 31 * result + (this.standbyReadtimeout == null ? 0: this.standbyReadtimeout.hashCode());
    result = 31 * result + (this.standbyAutoclean == null ? 0: this.standbyAutoclean.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties {\n");
    
    sb.append("  orgApacheSlingInstallerConfigurationPersist: ").append(orgApacheSlingInstallerConfigurationPersist).append("\n");
    sb.append("  mode: ").append(mode).append("\n");
    sb.append("  port: ").append(port).append("\n");
    sb.append("  primaryHost: ").append(primaryHost).append("\n");
    sb.append("  interval: ").append(interval).append("\n");
    sb.append("  primaryAllowedClientIpRanges: ").append(primaryAllowedClientIpRanges).append("\n");
    sb.append("  secure: ").append(secure).append("\n");
    sb.append("  standbyReadtimeout: ").append(standbyReadtimeout).append("\n");
    sb.append("  standbyAutoclean: ").append(standbyAutoclean).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
