note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_ADOBE_CQ_SOCIAL_CALENDAR_CLIENT_OPERATIONEXTENSIONS_EVENT_ATTACHMEN_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    attachment_type_blacklist: detachable CONFIG_NODE_PROPERTY_STRING 
      
    extension_order: detachable CONFIG_NODE_PROPERTY_INTEGER 
      

feature -- Change Element  
 
    set_attachment_type_blacklist (a_name: like attachment_type_blacklist)
        -- Set 'attachment_type_blacklist' with 'a_name'.
      do
        attachment_type_blacklist := a_name
      ensure
        attachment_type_blacklist_set: attachment_type_blacklist = a_name		
      end

    set_extension_order (a_name: like extension_order)
        -- Set 'extension_order' with 'a_name'.
      do
        extension_order := a_name
      ensure
        extension_order_set: extension_order = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_ADOBE_CQ_SOCIAL_CALENDAR_CLIENT_OPERATIONEXTENSIONS_EVENT_ATTACHMEN_PROPERTIES%N")
        if attached attachment_type_blacklist as l_attachment_type_blacklist then
          Result.append ("%Nattachment_type_blacklist:")
          Result.append (l_attachment_type_blacklist.out)
          Result.append ("%N")    
        end  
        if attached extension_order as l_extension_order then
          Result.append ("%Nextension_order:")
          Result.append (l_extension_order.out)
          Result.append ("%N")    
        end  
      end
end


