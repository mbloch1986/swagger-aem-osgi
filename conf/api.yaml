---
openapi: 3.0.0
info:
  title: Adobe Experience Manager OSGI config (AEM) API
  description: Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager
    (AEM) OSGI Configurations API
  version: 1.0.0
  contact:
    name: Shine Solutions
    url: http://shinesolutions.com
    email: opensource@shinesolutions.com
security:
- aemAuth: []
paths:
  "/system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Configuration":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: showPlaceholder
        in: query
        schema:
          type: boolean
      - name: maximumCacheEntries
        in: query
        schema:
          type: integer
      - name: af.scripting.compatversion
        in: query
        schema:
          type: string
      - name: makeFileNameUnique
        in: query
        schema:
          type: boolean
      - name: generatingCompliantData
        in: query
        schema:
          type: boolean
      operationId: adaptiveFormAndInteractiveCommunicationWebChannelConfiguration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/Adaptive Form and Interactive Communication Web Channel Theme Configuration":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fontList
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: adaptiveFormAndInteractiveCommunicationWebChannelThemeConfiguration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/Analytics Component Query Cache Service":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.analytics.component.query.cache.size
        in: query
        schema:
          type: integer
      operationId: analyticsComponentQueryCacheService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/analyticsComponentQueryCacheServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/Apache Sling Health Check Result HTML Serializer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: styleString
        in: query
        schema:
          type: string
      operationId: apacheSlingHealthCheckResultHTMLSerializer
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/apacheSlingHealthCheckResultHTMLSerializerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.aem.formsndocuments.config.AEMFormsManagerConfiguration":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: formsManagerConfig.includeOOTBTemplates
        in: query
        schema:
          type: boolean
      - name: formsManagerConfig.includeDeprecatedTemplates
        in: query
        schema:
          type: boolean
      operationId: comAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.aem.transaction.core.impl.TransactionRecorder":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: isTransactionRecordingEnabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeAemTransactionCoreImplTransactionRecorder
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeAemTransactionCoreImplTransactionRecorderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.DeprecateIndexesHC":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.name
        in: query
        schema:
          type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: hc.mbean.name
        in: query
        schema:
          type: string
      operationId: comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.aem.upgrade.prechecks.hc.impl.ReplicationAgentsDisabledHC":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.name
        in: query
        schema:
          type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: hc.mbean.name
        in: query
        schema:
          type: string
      operationId: comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.aem.upgrade.prechecks.mbean.impl.PreUpgradeTasksMBeanImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: pre-upgrade.maintenance.tasks
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pre-upgrade.hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.aem.upgrade.prechecks.tasks.impl.ConsistencyCheckTaskImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: root.path
        in: query
        schema:
          type: string
      - name: fix.inconsistencies
        in: query
        schema:
          type: boolean
      operationId: comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.account.api.AccountManagementService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.accountmanager.token.validity.period
        in: query
        schema:
          type: integer
      - name: cq.accountmanager.config.requestnewaccount.mail
        in: query
        schema:
          type: string
      - name: cq.accountmanager.config.requestnewpwd.mail
        in: query
        schema:
          type: string
      operationId: comAdobeCqAccountApiAccountManagementService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqAccountApiAccountManagementServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.account.impl.AccountManagementServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.accountmanager.config.informnewaccount.mail
        in: query
        schema:
          type: string
      - name: cq.accountmanager.config.informnewpwd.mail
        in: query
        schema:
          type: string
      operationId: comAdobeCqAccountImplAccountManagementServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqAccountImplAccountManagementServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.address.impl.location.LocationListServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.address.location.default.maxResults
        in: query
        schema:
          type: integer
      operationId: comAdobeCqAddressImplLocationLocationListServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqAddressImplLocationLocationListServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.AWSCloudFrontRewriter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: keypair.id
        in: query
        schema:
          type: string
      - name: keypair.alias
        in: query
        schema:
          type: string
      - name: cdnrewriter.attributes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cdn.rewriter.distribution.domain
        in: query
        schema:
          type: string
      operationId: comAdobeCqCdnRewriterImplAWSCloudFrontRewriter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNConfigServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cdn.config.distribution.domain
        in: query
        schema:
          type: string
      - name: cdn.config.enable.rewriting
        in: query
        schema:
          type: boolean
      - name: cdn.config.path.prefixes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cdn.config.cdnttl
        in: query
        schema:
          type: integer
      - name: cdn.config.application.protocol
        in: query
        schema:
          type: string
      operationId: comAdobeCqCdnRewriterImplCDNConfigServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCdnRewriterImplCDNConfigServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.cdn.rewriter.impl.CDNRewriter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: cdnrewriter.attributes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cdn.rewriter.distribution.domain
        in: query
        schema:
          type: string
      operationId: comAdobeCqCdnRewriterImplCDNRewriter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCdnRewriterImplCDNRewriterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.cloudconfig.core.impl.ConfigurationReplicationEventHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: flush.agents
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.commerce.impl.asset.DynamicImageHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.commerce.asset.handler.active
        in: query
        schema:
          type: boolean
      - name: cq.commerce.asset.handler.name
        in: query
        schema:
          type: string
      operationId: comAdobeCqCommerceImplAssetDynamicImageHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCommerceImplAssetDynamicImageHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.commerce.impl.asset.ProductAssetHandlerProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.commerce.asset.handler.fallback
        in: query
        schema:
          type: string
      operationId: comAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.commerce.impl.asset.StaticImageHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.commerce.asset.handler.active
        in: query
        schema:
          type: boolean
      - name: cq.commerce.asset.handler.name
        in: query
        schema:
          type: string
      operationId: comAdobeCqCommerceImplAssetStaticImageHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCommerceImplAssetStaticImageHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.commerce.impl.asset.VideoHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.commerce.asset.handler.active
        in: query
        schema:
          type: boolean
      - name: cq.commerce.asset.handler.name
        in: query
        schema:
          type: string
      operationId: comAdobeCqCommerceImplAssetVideoHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCommerceImplAssetVideoHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.commerce.impl.promotion.PromotionManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.commerce.promotion.root
        in: query
        schema:
          type: string
      operationId: comAdobeCqCommerceImplPromotionPromotionManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCommerceImplPromotionPromotionManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.commerce.pim.impl.cataloggenerator.CatalogGeneratorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.commerce.cataloggenerator.bucketsize
        in: query
        schema:
          type: integer
      - name: cq.commerce.cataloggenerator.bucketname
        in: query
        schema:
          type: string
      - name: cq.commerce.cataloggenerator.excludedtemplateproperties
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.commerce.pim.impl.PageEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.commerce.pageeventlistener.enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqCommercePimImplPageEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCommercePimImplPageEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.commerce.pim.impl.productfeed.ProductFeedServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: Feed generator algorithm
        in: query
        schema:
          type: string
      operationId: comAdobeCqCommercePimImplProductfeedProductFeedServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.contentinsight.impl.ReportingServicesSettingsProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: reportingservices.url
        in: query
        schema:
          type: string
      operationId: comAdobeCqContentinsightImplReportingServicesSettingsProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqContentinsightImplReportingServicesSettingsProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.BrightEdgeProxyServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: brightedge.url
        in: query
        schema:
          type: string
      operationId: comAdobeCqContentinsightImplServletsBrightEdgeProxyServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.contentinsight.impl.servlets.ReportingServicesProxyServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: reportingservices.proxy.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqContentinsightImplServletsReportingServicesProxyServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqContentinsightImplServletsReportingServicesProxyServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.conf.FeatureConfigImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: dam.cfm.resourceTypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: dam.cfm.referenceProperties
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqDamCfmImplConfFeatureConfigImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamCfmImplConfFeatureConfigImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.AssetProcessor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: pipeline.type
        in: query
        schema:
          type: string
      operationId: comAdobeCqDamCfmImplContentRewriterAssetProcessor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamCfmImplContentRewriterAssetProcessorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.ParRangeFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: pipeline.type
        in: query
        schema:
          type: string
      operationId: comAdobeCqDamCfmImplContentRewriterParRangeFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamCfmImplContentRewriterParRangeFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.content.rewriter.PayloadFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: pipeline.type
        in: query
        schema:
          type: string
      operationId: comAdobeCqDamCfmImplContentRewriterPayloadFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamCfmImplContentRewriterPayloadFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.dm.process.image.PTiffManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: maxMemory
        in: query
        schema:
          type: integer
      operationId: comAdobeCqDamDmProcessImagePTiffManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamDmProcessImagePTiffManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.ips.impl.replication.trigger.ReplicateOnModifyWorker":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: dmreplicateonmodify.enabled
        in: query
        schema:
          type: boolean
      - name: dmreplicateonmodify.forcesyncdeletes
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.mac.sync.helper.impl.MACSyncClientImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.dam.mac.sync.client.so.timeout
        in: query
        schema:
          type: integer
      operationId: comAdobeCqDamMacSyncHelperImplMACSyncClientImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.mac.sync.impl.DAMSyncServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.cq.dam.mac.sync.damsyncservice.registered_paths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.cq.dam.mac.sync.damsyncservice.sync.renditions
        in: query
        schema:
          type: boolean
      - name: com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms
        in: query
        schema:
          type: integer
      - name: com.adobe.cq.dam.mac.sync.damsyncservice.platform
        in: query
        schema:
          type: string
      operationId: comAdobeCqDamMacSyncImplDAMSyncServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamMacSyncImplDAMSyncServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.processor.nui.impl.NuiAssetProcessor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: nuiEnabled
        in: query
        schema:
          type: boolean
      - name: nuiServiceUrl
        in: query
        schema:
          type: string
      - name: nuiApiKey
        in: query
        schema:
          type: string
      operationId: comAdobeCqDamProcessorNuiImplNuiAssetProcessor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.is.ImageServerComponent":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: TcpPort
        in: query
        schema:
          type: string
      - name: AllowRemoteAccess
        in: query
        schema:
          type: boolean
      - name: MaxRenderRgnPixels
        in: query
        schema:
          type: string
      - name: MaxMessageSize
        in: query
        schema:
          type: string
      - name: RandomAccessUrlTimeout
        in: query
        schema:
          type: integer
      - name: WorkerThreads
        in: query
        schema:
          type: integer
      operationId: comAdobeCqDamS7imagingImplIsImageServerComponent
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamS7imagingImplIsImageServerComponentInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.s7imaging.impl.ps.PlatformServerServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cache.enable
        in: query
        schema:
          type: boolean
      - name: cache.rootPaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cache.maxSize
        in: query
        schema:
          type: integer
      - name: cache.maxEntries
        in: query
        schema:
          type: integer
      operationId: comAdobeCqDamS7imagingImplPsPlatformServerServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamS7imagingImplPsPlatformServerServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.AssetIOHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: pathPrefix
        in: query
        schema:
          type: string
      - name: createVersion
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqDamWebdavImplIoAssetIOHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamWebdavImplIoAssetIOHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.DamWebdavVersionLinkingJob":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.webdav.version.linking.enable
        in: query
        schema:
          type: boolean
      - name: cq.dam.webdav.version.linking.scheduler.period
        in: query
        schema:
          type: integer
      - name: cq.dam.webdav.version.linking.staging.timeout
        in: query
        schema:
          type: integer
      operationId: comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.webdav.impl.io.SpecialFilesHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqDamWebdavImplIoSpecialFilesHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.deserfw.impl.DeserializationFirewallImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: firewall.deserialization.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: firewall.deserialization.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: firewall.deserialization.diagnostics
        in: query
        schema:
          type: string
      operationId: comAdobeCqDeserfwImplDeserializationFirewallImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDeserfwImplDeserializationFirewallImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dtm.impl.service.DTMWebServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: connection.timeout
        in: query
        schema:
          type: integer
      - name: socket.timeout
        in: query
        schema:
          type: integer
      operationId: comAdobeCqDtmImplServiceDTMWebServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDtmImplServiceDTMWebServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dtm.impl.servlets.DTMDeployHookServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: dtm.staging.ip.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: dtm.production.ip.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqDtmImplServletsDTMDeployHookServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDtmImplServletsDTMDeployHookServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dtm.reactor.impl.service.WebServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: endpointUri
        in: query
        schema:
          type: string
      - name: connectionTimeout
        in: query
        schema:
          type: integer
      - name: socketTimeout
        in: query
        schema:
          type: integer
      operationId: comAdobeCqDtmReactorImplServiceWebServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDtmReactorImplServiceWebServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.experiencelog.impl.ExperienceLogConfigServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: disabledForGroups
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqExperiencelogImplExperienceLogConfigServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqExperiencelogImplExperienceLogConfigServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.history.impl.HistoryRequestFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: history.requestFilter.excludedSelectors
        in: query
        schema:
          type: array
          items:
            type: string
      - name: history.requestFilter.excludedExtensions
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqHistoryImplHistoryRequestFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqHistoryImplHistoryRequestFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.history.impl.HistoryServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: history.service.resourceTypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: history.service.pathFilter
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqHistoryImplHistoryServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqHistoryImplHistoryServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.inbox.impl.typeprovider.ItemTypeProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: inbox.impl.typeprovider.registrypaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: inbox.impl.typeprovider.legacypaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: inbox.impl.typeprovider.defaulturl.failureitem
        in: query
        schema:
          type: string
      - name: inbox.impl.typeprovider.defaulturl.workitem
        in: query
        schema:
          type: string
      - name: inbox.impl.typeprovider.defaulturl.task
        in: query
        schema:
          type: string
      operationId: comAdobeCqInboxImplTypeproviderItemTypeProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqInboxImplTypeproviderItemTypeProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.projects.impl.servlet.ProjectImageServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: image.quality
        in: query
        schema:
          type: string
      - name: image.supported.resolutions
        in: query
        schema:
          type: string
      operationId: comAdobeCqProjectsImplServletProjectImageServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqProjectsImplServletProjectImageServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.scheduled.exporter.impl.ScheduledExporterImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: include.paths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: exporter.user
        in: query
        schema:
          type: string
      operationId: comAdobeCqScheduledExporterImplScheduledExporterImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScheduledExporterImplScheduledExporterImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.analytics.impl.ScreensAnalyticsServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.cq.screens.analytics.impl.url
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.analytics.impl.apikey
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.analytics.impl.project
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.analytics.impl.environment
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.analytics.impl.sendFrequency
        in: query
        schema:
          type: integer
      operationId: comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.device.impl.DeviceService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.aem.screens.player.pingfrequency
        in: query
        schema:
          type: integer
      - name: com.adobe.aem.screens.device.pasword.specialchars
        in: query
        schema:
          type: string
      - name: com.adobe.aem.screens.device.pasword.minlowercasechars
        in: query
        schema:
          type: integer
      - name: com.adobe.aem.screens.device.pasword.minuppercasechars
        in: query
        schema:
          type: integer
      - name: com.adobe.aem.screens.device.pasword.minnumberchars
        in: query
        schema:
          type: integer
      - name: com.adobe.aem.screens.device.pasword.minspecialchars
        in: query
        schema:
          type: integer
      - name: com.adobe.aem.screens.device.pasword.minlength
        in: query
        schema:
          type: integer
      operationId: comAdobeCqScreensDeviceImplDeviceService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensDeviceImplDeviceServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.device.registration.impl.RegistrationServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: deviceRegistrationTimeout
        in: query
        schema:
          type: integer
      operationId: comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.impl.handler.ChannelsUpdateHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.pagesupdatehandler.imageresourcetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.pagesupdatehandler.productresourcetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.pagesupdatehandler.videoresourcetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.pagesupdatehandler.dynamicsequenceresourcetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.pagesupdatehandler.previewmodepaths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqScreensImplHandlerChannelsUpdateHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.impl.jobs.DistributedDevicesStatiUpdateJob":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      operationId: comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.impl.remote.impl.DistributedHttpClientImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.aem.screens.impl.remote.request_timeout
        in: query
        schema:
          type: integer
      operationId: comAdobeCqScreensImplRemoteImplDistributedHttpClientImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.impl.ScreensChannelPostProcessor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: screens.channels.properties.to.remove
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqScreensImplScreensChannelPostProcessor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensImplScreensChannelPostProcessorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath
        in: query
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout
        in: query
        schema:
          type: integer
      - name: com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport
        in: query
        schema:
          type: integer
      - name: com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls
        in: query
        schema:
          type: boolean
      - name: com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password
        in: query
        schema:
          type: string
      operationId: comAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.mq.activemq.impl.ArtemisJMSProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: global.size
        in: query
        schema:
          type: integer
      - name: max.disk.usage
        in: query
        schema:
          type: integer
      - name: persistence.enabled
        in: query
        schema:
          type: boolean
      - name: thread.pool.max.size
        in: query
        schema:
          type: integer
      - name: scheduled.thread.pool.max.size
        in: query
        schema:
          type: integer
      - name: graceful.shutdown.timeout
        in: query
        schema:
          type: integer
      - name: queues
        in: query
        schema:
          type: array
          items:
            type: string
      - name: topics
        in: query
        schema:
          type: array
          items:
            type: string
      - name: addresses.max.delivery.attempts
        in: query
        schema:
          type: integer
      - name: addresses.expiry.delay
        in: query
        schema:
          type: integer
      - name: addresses.address.full.message.policy
        in: query
        schema:
          type: string
      - name: addresses.max.size.bytes
        in: query
        schema:
          type: integer
      - name: addresses.page.size.bytes
        in: query
        schema:
          type: integer
      - name: addresses.page.cache.max.size
        in: query
        schema:
          type: integer
      - name: cluster.user
        in: query
        schema:
          type: string
      - name: cluster.password
        in: query
        schema:
          type: string
      - name: cluster.call.timeout
        in: query
        schema:
          type: integer
      - name: cluster.call.failover.timeout
        in: query
        schema:
          type: integer
      - name: cluster.client.failure.check.period
        in: query
        schema:
          type: integer
      - name: cluster.notification.attempts
        in: query
        schema:
          type: integer
      - name: cluster.notification.interval
        in: query
        schema:
          type: integer
      - name: id.cache.size
        in: query
        schema:
          type: integer
      - name: cluster.confirmation.window.size
        in: query
        schema:
          type: integer
      - name: cluster.connection.ttl
        in: query
        schema:
          type: integer
      - name: cluster.duplicate.detection
        in: query
        schema:
          type: boolean
      - name: cluster.initial.connect.attempts
        in: query
        schema:
          type: integer
      - name: cluster.max.retry.interval
        in: query
        schema:
          type: integer
      - name: cluster.min.large.message.size
        in: query
        schema:
          type: integer
      - name: cluster.producer.window.size
        in: query
        schema:
          type: integer
      - name: cluster.reconnect.attempts
        in: query
        schema:
          type: integer
      - name: cluster.retry.interval
        in: query
        schema:
          type: integer
      - name: cluster.retry.interval.multiplier
        in: query
        schema:
          type: number
      operationId: comAdobeCqScreensMqActivemqImplArtemisJMSProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath
        in: query
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency
        in: query
        schema:
          type: string
      operationId: comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.offlinecontent.impl.OfflineContentServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: disableSmartSync
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.screens.segmentation.impl.SegmentationFeatureFlag":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enableDataTriggeredContent
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqScreensSegmentationImplSegmentationFeatureFlag
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.HtmlLibraryManagerConfigHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.security.hc.bundles.impl.WcmFilterHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.security.hc.dispatcher.impl.DispatcherAccessHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: dispatcher.address
        in: query
        schema:
          type: string
      - name: dispatcher.filter.allowed
        in: query
        schema:
          type: array
          items:
            type: string
      - name: dispatcher.filter.blocked
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.security.hc.packages.impl.ExampleContentHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSecurityHcPackagesImplExampleContentHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.security.hc.webserver.impl.ClickjackingHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: webserver.address
        in: query
        schema:
          type: string
      operationId: comAdobeCqSecurityHcWebserverImplClickjackingHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.accountverification.impl.AccountManagementConfigImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enable
        in: query
        schema:
          type: boolean
      - name: ttl1
        in: query
        schema:
          type: integer
      - name: ttl2
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialAccountverificationImplAccountManagementConfigImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialAccountverificationImplAccountManagementConfigImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityComponentFactoryImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priority
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialActivitystreamsClientImplSocialActivityComponentFactoryImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsClientImplSocialActivityComponentFactoryImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.activitystreams.client.impl.SocialActivityStreamComponentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priority
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamComponentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamComponentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.EventListenerHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.topics
        in: query
        schema:
          type: string
      - name: event.filter
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialActivitystreamsListenerImplEventListenerHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ModerationEventExtension":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: accepted
        in: query
        schema:
          type: boolean
      - name: ranked
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialActivitystreamsListenerImplModerationEventExtension
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsListenerImplModerationEventExtensionInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.RatingEventActivitySuppressor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: ranking
        in: query
        schema:
          type: integer
      - name: enable
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySuppressor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySuppressorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.activitystreams.listener.impl.ResourceActivityStreamProviderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: streamPath
        in: query
        schema:
          type: string
      - name: streamName
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreamProviderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreamProviderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.calendar.client.endpoints.impl.CalendarOperationsImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: MaxRetry
        in: query
        schema:
          type: integer
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.calendar.client.operationextensions.EventAttachment":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: string
      - name: extension.order
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialCalendarClientOperationextensionsEventAttachment
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCalendarClientOperationextensionsEventAttachmentInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.calendar.servlets.TimeZoneServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: timezones.expirytime
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialCalendarServletsTimeZoneServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCalendarServletsTimeZoneServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentDeleteEventActivitySuppressor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: ranking
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventActivitySuppressor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventActivitySuppressorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.CommentOperationService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.comments.endpoints.impl.TranslationOperationService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.comments.listing.impl.SearchCommentSocialComponentListProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: numUserLimit
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialComponentListProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialComponentListProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.comments.scheduler.impl.SearchScheduledPosts":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enableScheduledPostsSearch
        in: query
        schema:
          type: boolean
      - name: numberOfMinutes
        in: query
        schema:
          type: integer
      - name: maxSearchLimit
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosts
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPostsInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.cors.CORSAuthenticationFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cors.enabling
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialCommonsCorsCORSAuthenticationFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.AndroidEmailClientProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priorityOrder
        in: query
        schema:
          type: integer
      - name: replyEmailPatterns
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailBuilderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: context.path
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CommentEmailEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.topics
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.CustomEmailClientProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priorityOrder
        in: query
        schema:
          type: integer
      - name: replyEmailPatterns
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailQuotedTextPatternsImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: pattern.time
        in: query
        schema:
          type: string
      - name: pattern.newline
        in: query
        schema:
          type: string
      - name: pattern.dayOfMonth
        in: query
        schema:
          type: string
      - name: pattern.month
        in: query
        schema:
          type: string
      - name: pattern.year
        in: query
        schema:
          type: string
      - name: pattern.date
        in: query
        schema:
          type: string
      - name: pattern.dateTime
        in: query
        schema:
          type: string
      - name: pattern.email
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyImporter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: connectProtocol
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.GmailEmailClientProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priorityOrder
        in: query
        schema:
          type: integer
      - name: replyEmailPatterns
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.IOSEmailClientProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priorityOrder
        in: query
        schema:
          type: integer
      - name: replyEmailPatterns
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.MacmailEmailClientProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priorityOrder
        in: query
        schema:
          type: integer
      - name: replyEmailPatterns
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.OutLookEmailClientProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priorityOrder
        in: query
        schema:
          type: integer
      - name: replyEmailPatterns
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.UnknownEmailClientProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: replyEmailPatterns
        in: query
        schema:
          type: array
          items:
            type: string
      - name: priorityOrder
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.YahooEmailClientProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priorityOrder
        in: query
        schema:
          type: integer
      - name: replyEmailPatterns
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.maintainance.impl.DeleteTempUGCImageUploads":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: numberOfDays
        in: query
        schema:
          type: integer
      - name: ageOfFile
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploads
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadsInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.ugclimiter.impl.UGCLimiterServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.topics
        in: query
        schema:
          type: string
      - name: event.filter
        in: query
        schema:
          type: string
      - name: verbs
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.ugclimitsconfig.impl.CommunityUserUGCLimitsConfigImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enable
        in: query
        schema:
          type: boolean
      - name: UGCLimit
        in: query
        schema:
          type: integer
      - name: ugcLimitDuration
        in: query
        schema:
          type: integer
      - name: domains
        in: query
        schema:
          type: array
          items:
            type: string
      - name: toList
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitsConfigImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitsConfigImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.FacebookProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.id
        in: query
        schema:
          type: string
      - name: oauth.cloud.config.root
        in: query
        schema:
          type: string
      - name: provider.config.root
        in: query
        schema:
          type: string
      - name: provider.config.create.tags.enabled
        in: query
        schema:
          type: boolean
      - name: provider.config.user.folder
        in: query
        schema:
          type: string
      - name: provider.config.facebook.fetch.fields
        in: query
        schema:
          type: boolean
      - name: provider.config.facebook.fields
        in: query
        schema:
          type: array
          items:
            type: string
      - name: provider.config.refresh.userdata.enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialConnectOauthImplFacebookProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialConnectOauthImplFacebookProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthAuthenticationHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.SocialOAuthUserProfileMapper":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: facebook
        in: query
        schema:
          type: array
          items:
            type: string
      - name: twitter
        in: query
        schema:
          type: array
          items:
            type: string
      - name: provider.config.user.folder
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.connect.oauth.impl.TwitterProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.id
        in: query
        schema:
          type: string
      - name: oauth.cloud.config.root
        in: query
        schema:
          type: string
      - name: provider.config.root
        in: query
        schema:
          type: string
      - name: provider.config.user.folder
        in: query
        schema:
          type: string
      - name: provider.config.twitter.enable.params
        in: query
        schema:
          type: boolean
      - name: provider.config.twitter.params
        in: query
        schema:
          type: array
          items:
            type: string
      - name: provider.config.refresh.userdata.enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialConnectOauthImplTwitterProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialConnectOauthImplTwitterProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.content.fragments.services.impl.CommunitiesFragmentCreationServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.social.content.fragments.services.enabled
        in: query
        schema:
          type: boolean
      - name: cq.social.content.fragments.services.waitTimeSeconds
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmentCreationServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmentCreationServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementLearningPathAdaptorFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: isMemberCheck
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.enablement.adaptors.EnablementResourceAdaptorFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: isMemberCheck
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.enablement.learningpath.endpoints.impl.EnablementLearningPathModelOperationService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLearningPathModelOperationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLearningPathModelOperationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.enablement.resource.endpoints.impl.EnablementResourceModelOperationService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialEnablementResourceEndpointsImplEnablementResourceModelOperationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialEnablementResourceEndpointsImplEnablementResourceModelOperationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.enablement.services.impl.AuthorMarkerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialEnablementServicesImplAuthorMarkerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.FilelibraryDownloadGetServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.selectors
        in: query
        schema:
          type: string
      - name: sling.servlet.extensions
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGetServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGetServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.filelibrary.client.endpoints.impl.FileLibraryOperationsService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperationsService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperationsServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.forum.client.endpoints.impl.ForumOperationsService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialForumClientEndpointsImplForumOperationsService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.forum.dispatcher.impl.FlushOperations":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: extension.order
        in: query
        schema:
          type: integer
      - name: flush.forumontopic
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialForumDispatcherImplFlushOperations
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialForumDispatcherImplFlushOperationsInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.group.client.impl.CommunityGroupCollectionComponentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: group.listing.pagination.enable
        in: query
        schema:
          type: boolean
      - name: group.listing.lazyloading.enable
        in: query
        schema:
          type: boolean
      - name: page.size
        in: query
        schema:
          type: integer
      - name: priority
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.group.impl.GroupServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: maxWaitTime
        in: query
        schema:
          type: integer
      - name: minWaitBetweenRetries
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialGroupImplGroupServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialGroupImplGroupServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.handlebars.GuavaTemplateCacheImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: parameter.guava.cache.enabled
        in: query
        schema:
          type: boolean
      - name: parameter.guava.cache.params
        in: query
        schema:
          type: string
      - name: parameter.guava.cache.reload
        in: query
        schema:
          type: boolean
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialHandlebarsGuavaTemplateCacheImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.ideation.client.endpoints.impl.IdeationOperationsService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.journal.client.endpoints.impl.JournalOperationsService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialJournalClientEndpointsImplJournalOperationsService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialJournalClientEndpointsImplJournalOperationsServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberGroupProfileOperationService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileOperationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileOperationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.members.endpoints.impl.CommunityMemberUserProfileOperationService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOperationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOperationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.members.impl.CommunityMemberGroupProfileComponentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: everyoneLimit
        in: query
        schema:
          type: integer
      - name: priority
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.FilterGroupSocialComponentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: resourceType.filters
        in: query
        schema:
          type: array
          items:
            type: string
      - name: priority
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.ModerationDashboardSocialComponentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priority
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialModerationDashboardApiModerationDashboardSocialComponentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialModerationDashboardApiModerationDashboardSocialComponentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.api.UserDetailsSocialComponentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priority
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.moderation.dashboard.internal.impl.FilterGroupSocialComponentFactoryV2":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: resourceType.filters
        in: query
        schema:
          type: array
          items:
            type: string
      - name: priority
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialModerationDashboardInternalImplFilterGroupSocialComponentFactoryV2
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialModerationDashboardInternalImplFilterGroupSocialComponentFactoryV2Info"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.notifications.impl.MentionsRouter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.topics
        in: query
        schema:
          type: string
      - name: event.filter
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialNotificationsImplMentionsRouter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialNotificationsImplMentionsRouterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: max.unread.notification.count
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialNotificationsImplNotificationManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialNotificationsImplNotificationManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.notifications.impl.NotificationsRouter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.topics
        in: query
        schema:
          type: string
      - name: event.filter
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialNotificationsImplNotificationsRouter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialNotificationsImplNotificationsRouterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.qna.client.endpoints.impl.QnaForumOperationsService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportImporterServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.social.reporting.analytics.polling.importer.interval
        in: query
        schema:
          type: integer
      - name: cq.social.reporting.analytics.polling.importer.pageSize
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportImporterServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportImporterServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportManagementServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: report.fetch.delay
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportManagementServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportManagementServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.reporting.analytics.services.impl.SiteTrendReportSocialComponentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.social.console.analytics.sites.mapping
        in: query
        schema:
          type: array
          items:
            type: string
      - name: priority
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSocialComponentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSocialComponentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.review.client.endpoints.impl.ReviewOperationsService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialReviewClientEndpointsImplReviewOperationsService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.scf.core.operations.impl.SocialOperationsServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.selectors
        in: query
        schema:
          type: string
      - name: sling.servlet.extensions
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.scf.endpoints.impl.DefaultSocialGetServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.selectors
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.extensions
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.scoring.impl.ScoringEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.topics
        in: query
        schema:
          type: string
      - name: event.filter
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialScoringImplScoringEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialScoringImplScoringEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.serviceusers.internal.impl.ServiceUserWrapperImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enableFallback
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.site.endpoints.impl.SiteOperationService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sitePathFilters
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sitePackageGroup
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialSiteEndpointsImplSiteOperationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.site.impl.AnalyticsComponentConfigurationServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.social.console.analytics.components
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.site.impl.SiteConfiguratorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: componentsUsingTags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialSiteImplSiteConfiguratorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialSiteImplSiteConfiguratorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.sync.impl.GroupSyncListenerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: nodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: ignorableprops
        in: query
        schema:
          type: array
          items:
            type: string
      - name: ignorablenodes
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: distfolders
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialSyncImplGroupSyncListenerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialSyncImplGroupSyncListenerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.sync.impl.PublisherSyncServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: activeRunModes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialSyncImplPublisherSyncServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialSyncImplPublisherSyncServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.sync.impl.UserSyncListenerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: nodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: ignorableprops
        in: query
        schema:
          type: array
          items:
            type: string
      - name: ignorablenodes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: distfolders
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialSyncImplUserSyncListenerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialSyncImplUserSyncListenerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.translation.impl.TranslationServiceConfigManager":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: translate.language
        in: query
        schema:
          type: string
      - name: translate.display
        in: query
        schema:
          type: string
      - name: translate.attribution
        in: query
        schema:
          type: boolean
      - name: translate.caching
        in: query
        schema:
          type: string
      - name: translate.smart.rendering
        in: query
        schema:
          type: string
      - name: translate.caching.duration
        in: query
        schema:
          type: string
      - name: translate.session.save.interval
        in: query
        schema:
          type: string
      - name: translate.session.save.batchLimit
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialTranslationImplTranslationServiceConfigManager
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.translation.impl.UGCLanguageDetector":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.topics
        in: query
        schema:
          type: string
      - name: event.filter
        in: query
        schema:
          type: string
      - name: translate.listener.type
        in: query
        schema:
          type: array
          items:
            type: string
      - name: translate.property.list
        in: query
        schema:
          type: array
          items:
            type: string
      - name: poolSize
        in: query
        schema:
          type: integer
      - name: maxPoolSize
        in: query
        schema:
          type: integer
      - name: queueSize
        in: query
        schema:
          type: integer
      - name: keepAliveTime
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialTranslationImplUGCLanguageDetector
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialTranslationImplUGCLanguageDetectorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.ugcbase.dispatcher.impl.FlushServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: threadPoolSize
        in: query
        schema:
          type: integer
      - name: delayTime
        in: query
        schema:
          type: integer
      - name: workerSleepTime
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.AysncReverseReplicatorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: poolSize
        in: query
        schema:
          type: integer
      - name: maxPoolSize
        in: query
        schema:
          type: integer
      - name: queueSize
        in: query
        schema:
          type: integer
      - name: keepAliveTime
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.PublisherConfigurationImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: isPrimaryPublisher
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialUgcbaseImplPublisherConfigurationImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.ugcbase.impl.SocialUtilsImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: legacyCloudUGCPathMapping
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialUgcbaseImplSocialUtilsImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseImplSocialUtilsImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.AutoModerationImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: automoderation.sequence
        in: query
        schema:
          type: array
          items:
            type: string
      - name: automoderation.onfailurestop
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqSocialUgcbaseModerationImplAutoModerationImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.ugcbase.moderation.impl.SentimentProcess":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: watchwords.positive
        in: query
        schema:
          type: array
          items:
            type: string
      - name: watchwords.negative
        in: query
        schema:
          type: array
          items:
            type: string
      - name: watchwords.path
        in: query
        schema:
          type: string
      - name: sentiment.path
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialUgcbaseModerationImplSentimentProcess
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.DefaultAttachmentTypeBlacklistService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: default.attachment.type.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: baseline.attachment.type.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlacklistService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlacklistServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.ugcbase.security.impl.SaferSlingPostValidatorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: parameter.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: parameter.whitelist.prefixes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: binary.parameter.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: modifier.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: operation.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: operation.whitelist.prefixes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: typehint.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resourcetype.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.user.endpoints.impl.UsersGroupFromPublishServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.extensions
        in: query
        schema:
          type: string
      - name: sling.servlet.paths
        in: query
        schema:
          type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.user.impl.transport.HttpToPublisher":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enable
        in: query
        schema:
          type: boolean
      - name: agent.configuration
        in: query
        schema:
          type: array
          items:
            type: string
      - name: context.path
        in: query
        schema:
          type: string
      - name: disabled.cipher.suites
        in: query
        schema:
          type: array
          items:
            type: string
      - name: enabled.cipher.suites
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialUserImplTransportHttpToPublisher
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialUserImplTransportHttpToPublisherInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncDeleteConfigProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: threshold
        in: query
        schema:
          type: integer
      - name: jobTopicName
        in: query
        schema:
          type: string
      - name: emailEnabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncJobCleanUpTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      - name: job.purge.threshold
        in: query
        schema:
          type: integer
      - name: job.purge.max.jobs
        in: query
        schema:
          type: integer
      operationId: comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncMoveConfigProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: threshold
        in: query
        schema:
          type: integer
      - name: jobTopicName
        in: query
        schema:
          type: string
      - name: emailEnabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.wcm.jobs.async.impl.AsyncPageMoveConfigProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: threshold
        in: query
        schema:
          type: integer
      - name: jobTopicName
        in: query
        schema:
          type: string
      - name: emailEnabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.wcm.launches.impl.LaunchesEventHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.filter
        in: query
        schema:
          type: string
      - name: launches.eventhandler.threadpool.maxsize
        in: query
        schema:
          type: integer
      - name: launches.eventhandler.threadpool.priority
        in: query
        schema:
          type: string
      - name: launches.eventhandler.updatelastmodification
        in: query
        schema:
          type: boolean
      operationId: comAdobeCqWcmLaunchesImplLaunchesEventHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.wcm.mobile.qrcode.servlet.QRCodeImageGenerator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.qrcode.servlet.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.wcm.style.internal.ComponentStyleInfoCacheImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: size
        in: query
        schema:
          type: integer
      operationId: comAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.wcm.translation.impl.TranslationPlatformConfigurationImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: syncTranslationState.schedulingFormat
        in: query
        schema:
          type: string
      - name: schedulingRepeatTranslation.schedulingFormat
        in: query
        schema:
          type: string
      - name: syncTranslationState.lockTimeoutInMinutes
        in: query
        schema:
          type: string
      - name: export.format
        in: query
        schema:
          type: string
      operationId: comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.fd.fp.config.FormsPortalDraftsandSubmissionConfigService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: portal.outboxes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: draft.data.service
        in: query
        schema:
          type: string
      - name: draft.metadata.service
        in: query
        schema:
          type: string
      - name: submit.data.service
        in: query
        schema:
          type: string
      - name: submit.metadata.service
        in: query
        schema:
          type: string
      - name: pendingSign.data.service
        in: query
        schema:
          type: string
      - name: pendingSign.metadata.service
        in: query
        schema:
          type: string
      operationId: comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.fd.fp.config.FormsPortalSchedulerService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: formportal.interval
        in: query
        schema:
          type: string
      operationId: comAdobeFdFpConfigFormsPortalSchedulerService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeFdFpConfigFormsPortalSchedulerServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.forms.common.service.impl.DefaultDataProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: alloweddataFileLocations
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeFormsCommonServiceImplDefaultDataProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeFormsCommonServiceImplDefaultDataProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.forms.common.service.impl.FormsCommonConfigurationServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: tempStorageConfig
        in: query
        schema:
          type: string
      operationId: comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.forms.common.servlet.TempCleanUpTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      - name: Duration for Temporary Storage
        in: query
        schema:
          type: string
      - name: Duration for Anonymous Storage
        in: query
        schema:
          type: string
      operationId: comAdobeFormsCommonServletTempCleanUpTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeFormsCommonServletTempCleanUpTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.acp.platform.PlatformServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: query.limit
        in: query
        schema:
          type: integer
      - name: file.type.extension.map
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteAcpPlatformPlatformServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAcpPlatformPlatformServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.activitystreams.impl.ActivityManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: aggregate.relationships
        in: query
        schema:
          type: array
          items:
            type: string
      - name: aggregate.descend.virtual
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteActivitystreamsImplActivityManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteActivitystreamsImplActivityManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.analyzer.base.SystemStatusServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: disabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteAnalyzerBaseSystemStatusServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAnalyzerBaseSystemStatusServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.analyzer.scripts.compile.AllScriptsCompilerServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: disabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.apicontroller.FilterResolverHookFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.cq.cdn.cdn-rewriter
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cloud-config.components
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cloud-config.core
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cloud-config.ui
        in: query
        schema:
          type: string
      - name: com.adobe.cq.com.adobe.cq.editor
        in: query
        schema:
          type: string
      - name: com.adobe.cq.com.adobe.cq.projects.core
        in: query
        schema:
          type: string
      - name: com.adobe.cq.com.adobe.cq.projects.wcm.core
        in: query
        schema:
          type: string
      - name: com.adobe.cq.com.adobe.cq.ui.commons
        in: query
        schema:
          type: string
      - name: com.adobe.cq.com.adobe.cq.wcm.style
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cq-activitymap-integration
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cq-contexthub-commons
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cq-dtm
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cq-healthcheck
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cq-multisite-targeting
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cq-pre-upgrade-cleanup
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cq-product-info-provider
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cq-rest-sites
        in: query
        schema:
          type: string
      - name: com.adobe.cq.cq-security-hc
        in: query
        schema:
          type: string
      - name: com.adobe.cq.dam.cq-dam-svg-handler
        in: query
        schema:
          type: string
      - name: com.adobe.cq.dam.cq-scene7-imaging
        in: query
        schema:
          type: string
      - name: com.adobe.cq.dtm-reactor.core
        in: query
        schema:
          type: string
      - name: com.adobe.cq.dtm-reactor.ui
        in: query
        schema:
          type: string
      - name: com.adobe.cq.exp-jspel-resolver
        in: query
        schema:
          type: string
      - name: com.adobe.cq.inbox.cq-inbox
        in: query
        schema:
          type: string
      - name: com.adobe.cq.json-schema-parser
        in: query
        schema:
          type: string
      - name: com.adobe.cq.media.cq-media-publishing-dps-fp-core
        in: query
        schema:
          type: string
      - name: com.adobe.cq.mobile.cq-mobile-caas
        in: query
        schema:
          type: string
      - name: com.adobe.cq.mobile.cq-mobile-index-builder
        in: query
        schema:
          type: string
      - name: com.adobe.cq.mobile.cq-mobile-phonegap-build
        in: query
        schema:
          type: string
      - name: com.adobe.cq.myspell
        in: query
        schema:
          type: string
      - name: com.adobe.cq.sample.we.retail.core
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.com.adobe.cq.screens.dcc
        in: query
        schema:
          type: string
      - name: com.adobe.cq.screens.com.adobe.cq.screens.mq.core
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-as-provider
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-badging-basic-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-badging-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-calendar-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-content-fragments-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-enablement-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-graph-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-ideation-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-jcr-provider
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-members-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-ms-provider
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-notifications-channels-web
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-notifications-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-rdb-provider
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-scf-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-scoring-basic-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-scoring-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-serviceusers-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-srp-impl
        in: query
        schema:
          type: string
      - name: com.adobe.cq.social.cq-social-ugcbase-impl
        in: query
        schema:
          type: string
      - name: com.adobe.dam.cq-dam-cfm-impl
        in: query
        schema:
          type: string
      - name: com.adobe.forms.foundation-forms-foundation-base
        in: query
        schema:
          type: string
      - name: com.adobe.granite.apicontroller
        in: query
        schema:
          type: string
      - name: com.adobe.granite.asset.core
        in: query
        schema:
          type: string
      - name: com.adobe.granite.auth.sso
        in: query
        schema:
          type: string
      - name: com.adobe.granite.bundles.hc.impl
        in: query
        schema:
          type: string
      - name: com.adobe.granite.compat-router
        in: query
        schema:
          type: string
      - name: com.adobe.granite.conf
        in: query
        schema:
          type: string
      - name: com.adobe.granite.conf.ui.core
        in: query
        schema:
          type: string
      - name: com.adobe.granite.cors
        in: query
        schema:
          type: string
      - name: com.adobe.granite.crx-explorer
        in: query
        schema:
          type: string
      - name: com.adobe.granite.crxde-lite
        in: query
        schema:
          type: string
      - name: com.adobe.granite.crypto.config
        in: query
        schema:
          type: string
      - name: com.adobe.granite.crypto.extension
        in: query
        schema:
          type: string
      - name: com.adobe.granite.crypto.file
        in: query
        schema:
          type: string
      - name: com.adobe.granite.crypto.jcr
        in: query
        schema:
          type: string
      - name: com.adobe.granite.csrf
        in: query
        schema:
          type: string
      - name: com.adobe.granite.distribution.core
        in: query
        schema:
          type: string
      - name: com.adobe.granite.dropwizard.metrics
        in: query
        schema:
          type: string
      - name: com.adobe.granite.frags.impl
        in: query
        schema:
          type: string
      - name: com.adobe.granite.gibson
        in: query
        schema:
          type: string
      - name: com.adobe.granite.infocollector
        in: query
        schema:
          type: string
      - name: com.adobe.granite.installer.factory.packages
        in: query
        schema:
          type: string
      - name: com.adobe.granite.jetty.ssl
        in: query
        schema:
          type: string
      - name: com.adobe.granite.jobs.async
        in: query
        schema:
          type: string
      - name: com.adobe.granite.maintenance.oak
        in: query
        schema:
          type: string
      - name: com.adobe.granite.monitoring.core
        in: query
        schema:
          type: string
      - name: com.adobe.granite.queries
        in: query
        schema:
          type: string
      - name: com.adobe.granite.replication.hc.impl
        in: query
        schema:
          type: string
      - name: com.adobe.granite.repository.checker
        in: query
        schema:
          type: string
      - name: com.adobe.granite.repository.hc.impl
        in: query
        schema:
          type: string
      - name: com.adobe.granite.rest.assets
        in: query
        schema:
          type: string
      - name: com.adobe.granite.security.ui
        in: query
        schema:
          type: string
      - name: com.adobe.granite.startup
        in: query
        schema:
          type: string
      - name: com.adobe.granite.tagsoup
        in: query
        schema:
          type: string
      - name: com.adobe.granite.taskmanagement.core
        in: query
        schema:
          type: string
      - name: com.adobe.granite.taskmanagement.workflow
        in: query
        schema:
          type: string
      - name: com.adobe.granite.ui.clientlibs.compiler.less
        in: query
        schema:
          type: string
      - name: com.adobe.granite.ui.clientlibs.processor.gcc
        in: query
        schema:
          type: string
      - name: com.adobe.granite.webconsole.plugins
        in: query
        schema:
          type: string
      - name: com.adobe.granite.workflow.console
        in: query
        schema:
          type: string
      - name: com.adobe.xmp.worker.files.native.fragment.linux
        in: query
        schema:
          type: string
      - name: com.adobe.xmp.worker.files.native.fragment.macosx
        in: query
        schema:
          type: string
      - name: com.adobe.xmp.worker.files.native.fragment.win
        in: query
        schema:
          type: string
      - name: com.day.commons.osgi.wrapper.simple-jndi
        in: query
        schema:
          type: string
      - name: com.day.cq.cq-authhandler
        in: query
        schema:
          type: string
      - name: com.day.cq.cq-compat-configupdate
        in: query
        schema:
          type: string
      - name: com.day.cq.cq-licensebranding
        in: query
        schema:
          type: string
      - name: com.day.cq.cq-notifcation-impl
        in: query
        schema:
          type: string
      - name: com.day.cq.cq-replication-audit
        in: query
        schema:
          type: string
      - name: com.day.cq.cq-search-ext
        in: query
        schema:
          type: string
      - name: com.day.cq.dam.cq-dam-annotation-print
        in: query
        schema:
          type: string
      - name: com.day.cq.dam.cq-dam-asset-usage
        in: query
        schema:
          type: string
      - name: com.day.cq.dam.cq-dam-s7dam
        in: query
        schema:
          type: string
      - name: com.day.cq.dam.cq-dam-similaritysearch
        in: query
        schema:
          type: string
      - name: com.day.cq.dam.dam-webdav-support
        in: query
        schema:
          type: string
      - name: com.day.cq.pre-upgrade-tasks
        in: query
        schema:
          type: string
      - name: com.day.cq.replication.extensions
        in: query
        schema:
          type: string
      - name: com.day.cq.wcm.cq-msm-core
        in: query
        schema:
          type: string
      - name: com.day.cq.wcm.cq-wcm-translation
        in: query
        schema:
          type: string
      - name: day-commons-jrawio
        in: query
        schema:
          type: string
      - name: org.apache.aries.jmx.whiteboard
        in: query
        schema:
          type: string
      - name: org.apache.felix.http.sslfilter
        in: query
        schema:
          type: string
      - name: org.apache.felix.org.apache.felix.threaddump
        in: query
        schema:
          type: string
      - name: org.apache.felix.webconsole.plugins.ds
        in: query
        schema:
          type: string
      - name: org.apache.felix.webconsole.plugins.event
        in: query
        schema:
          type: string
      - name: org.apache.felix.webconsole.plugins.memoryusage
        in: query
        schema:
          type: string
      - name: org.apache.felix.webconsole.plugins.packageadmin
        in: query
        schema:
          type: string
      - name: org.apache.jackrabbit.oak-auth-ldap
        in: query
        schema:
          type: string
      - name: org.apache.jackrabbit.oak-segment-tar
        in: query
        schema:
          type: string
      - name: org.apache.jackrabbit.oak-solr-osgi
        in: query
        schema:
          type: string
      - name: org.apache.sling.bundleresource.impl
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.fsclassloader
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.webconsole
        in: query
        schema:
          type: string
      - name: org.apache.sling.datasource
        in: query
        schema:
          type: string
      - name: org.apache.sling.discovery.base
        in: query
        schema:
          type: string
      - name: org.apache.sling.discovery.oak
        in: query
        schema:
          type: string
      - name: org.apache.sling.discovery.support
        in: query
        schema:
          type: string
      - name: org.apache.sling.distribution.api
        in: query
        schema:
          type: string
      - name: org.apache.sling.distribution.core
        in: query
        schema:
          type: string
      - name: org.apache.sling.extensions.webconsolesecurityprovider
        in: query
        schema:
          type: string
      - name: org.apache.sling.hc.webconsole
        in: query
        schema:
          type: string
      - name: org.apache.sling.installer.console
        in: query
        schema:
          type: string
      - name: org.apache.sling.installer.provider.file
        in: query
        schema:
          type: string
      - name: org.apache.sling.installer.provider.jcr
        in: query
        schema:
          type: string
      - name: org.apache.sling.jcr.davex
        in: query
        schema:
          type: string
      - name: org.apache.sling.jcr.resourcesecurity
        in: query
        schema:
          type: string
      - name: org.apache.sling.jmx.provider
        in: query
        schema:
          type: string
      - name: org.apache.sling.launchpad.installer
        in: query
        schema:
          type: string
      - name: org.apache.sling.models.impl
        in: query
        schema:
          type: string
      - name: org.apache.sling.repoinit.parser
        in: query
        schema:
          type: string
      - name: org.apache.sling.resource.inventory
        in: query
        schema:
          type: string
      - name: org.apache.sling.resourceresolver
        in: query
        schema:
          type: string
      - name: org.apache.sling.scripting.javascript
        in: query
        schema:
          type: string
      - name: org.apache.sling.scripting.jst
        in: query
        schema:
          type: string
      - name: org.apache.sling.scripting.sightly.js.provider
        in: query
        schema:
          type: string
      - name: org.apache.sling.scripting.sightly.models.provider
        in: query
        schema:
          type: string
      - name: org.apache.sling.security
        in: query
        schema:
          type: string
      - name: org.apache.sling.servlets.compat
        in: query
        schema:
          type: string
      - name: org.apache.sling.servlets.get
        in: query
        schema:
          type: string
      - name: org.apache.sling.startupfilter.disabler
        in: query
        schema:
          type: string
      - name: org.apache.sling.tracer
        in: query
        schema:
          type: string
      - name: we.retail.client.app.core
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteApicontrollerFilterResolverHookFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteApicontrollerFilterResolverHookFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.cert.impl.ClientCertAuthHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteAuthCertImplClientCertAuthHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthCertImplClientCertAuthHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.ims":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: configid
        in: query
        schema:
          type: string
      - name: scope
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthIms
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthImsInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.ims.impl.ExternalUserIdMappingProviderExtension":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.id
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.ims.impl.ImsConfigProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.configmanager.ims.configid
        in: query
        schema:
          type: string
      - name: ims.owningEntity
        in: query
        schema:
          type: string
      - name: aem.instanceId
        in: query
        schema:
          type: string
      - name: ims.serviceCode
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthImsImplImsConfigProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplImsConfigProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSInstanceCredentialsValidator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.id
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.id
        in: query
        schema:
          type: string
      - name: oauth.provider.ims.authorization.url
        in: query
        schema:
          type: string
      - name: oauth.provider.ims.token.url
        in: query
        schema:
          type: string
      - name: oauth.provider.ims.profile.url
        in: query
        schema:
          type: string
      - name: oauth.provider.ims.extended.details.urls
        in: query
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.ims.validate.token.url
        in: query
        schema:
          type: string
      - name: oauth.provider.ims.session.property
        in: query
        schema:
          type: string
      - name: oauth.provider.ims.service.token.client.id
        in: query
        schema:
          type: string
      - name: oauth.provider.ims.service.token.client.secret
        in: query
        schema:
          type: string
      - name: oauth.provider.ims.service.token
        in: query
        schema:
          type: string
      - name: ims.org.ref
        in: query
        schema:
          type: string
      - name: ims.group.mapping
        in: query
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.ims.only.license.group
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteAuthImsImplIMSProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplIMSProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.BearerAuthenticationHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      - name: oauth.clientIds.allowed
        in: query
        schema:
          type: array
          items:
            type: string
      - name: auth.bearer.sync.ims
        in: query
        schema:
          type: boolean
      - name: auth.tokenRequestParameter
        in: query
        schema:
          type: string
      - name: oauth.bearer.configid
        in: query
        schema:
          type: string
      - name: oauth.jwt.support
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteAuthOauthImplBearerAuthenticationHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.DefaultTokenValidatorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: auth.token.validator.type
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.FacebookProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.id
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthOauthImplFacebookProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplFacebookProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.GithubProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.id
        in: query
        schema:
          type: string
      - name: oauth.provider.github.authorization.url
        in: query
        schema:
          type: string
      - name: oauth.provider.github.token.url
        in: query
        schema:
          type: string
      - name: oauth.provider.github.profile.url
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthOauthImplGithubProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplGithubProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.GraniteProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.id
        in: query
        schema:
          type: string
      - name: oauth.provider.granite.authorization.url
        in: query
        schema:
          type: string
      - name: oauth.provider.granite.token.url
        in: query
        schema:
          type: string
      - name: oauth.provider.granite.profile.url
        in: query
        schema:
          type: string
      - name: oauth.provider.granite.extended.details.urls
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthOauthImplGraniteProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplGraniteProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManager":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.cookie.login.timeout
        in: query
        schema:
          type: string
      - name: oauth.cookie.max.age
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthOauthImplHelperProviderConfigManager
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManagerInternal":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.cookie.login.timeout
        in: query
        schema:
          type: string
      - name: oauth.cookie.max.age
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.OAuthAuthenticationHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthOauthImplOAuthAuthenticationHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.impl.TwitterProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.provider.id
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthOauthImplTwitterProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplTwitterProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.requirement.impl.DefaultRequirementHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: supportedPaths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteAuthRequirementImplDefaultRequirementHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.sso.impl.SsoAuthenticationHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: jaas.controlFlag
        in: query
        schema:
          type: string
      - name: jaas.realmName
        in: query
        schema:
          type: string
      - name: jaas.ranking
        in: query
        schema:
          type: integer
      - name: headers
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cookies
        in: query
        schema:
          type: array
          items:
            type: string
      - name: parameters
        in: query
        schema:
          type: array
          items:
            type: string
      - name: usermap
        in: query
        schema:
          type: array
          items:
            type: string
      - name: format
        in: query
        schema:
          type: string
      - name: trustedCredentialsAttribute
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthSsoImplSsoAuthenticationHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.CodeCacheHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: minimum.code.cache.size
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteBundlesHcImplCodeCacheHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.CrxdeSupportBundleHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.DavExBundleHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteBundlesHcImplDavExBundleHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.InactiveBundlesHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: ignored.bundles
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.JobsHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: max.queued.jobs
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteBundlesHcImplJobsHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplJobsHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingGetServletHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteBundlesHcImplSlingGetServletHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJavaScriptHandlerHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingJspScriptHandlerHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.SlingReferrerFilterHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.bundles.hc.impl.WebDavBundleHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteBundlesHcImplWebDavBundleHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.comments.internal.CommentReplicationContentFilterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: replicate.comment.resourceTypes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteCommentsInternalCommentReplicationContentFilterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteCommentsInternalCommentReplicationContentFilterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.compatrouter.impl.CompatSwitchingServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: compatgroups
        in: query
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.conf.impl.RuntimeAwareConfigurationResourceResolvingStrategy":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: fallbackPaths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingStrategy
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingStrategyInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.contexthub.impl.ContextHubImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.granite.contexthub.silent_mode
        in: query
        schema:
          type: boolean
      - name: com.adobe.granite.contexthub.show_ui
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteContexthubImplContextHubImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteContexthubImplContextHubImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.csrf.impl.CSRFFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: filter.methods
        in: query
        schema:
          type: array
          items:
            type: string
      - name: filter.enable.safe.user.agents
        in: query
        schema:
          type: boolean
      - name: filter.safe.user.agents
        in: query
        schema:
          type: array
          items:
            type: string
      - name: filter.excluded.paths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteCsrfImplCSRFFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteCsrfImplCSRFFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.csrf.impl.CSRFServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: csrf.token.expires.in
        in: query
        schema:
          type: integer
      - name: sling.auth.requirements
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteCsrfImplCSRFServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteCsrfImplCSRFServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: providerName
        in: query
        schema:
          type: string
      - name: forward.requests
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicationAgentProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicationAgentProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.distribution.core.impl.replication.DistributionTransportHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: forward.requests
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteDistributionCoreImplReplicationDistributionTransportHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplReplicationDistributionTransportHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.httpcache.file.FileCacheStore":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.granite.httpcache.file.documentRoot
        in: query
        schema:
          type: string
      - name: com.adobe.granite.httpcache.file.includeHost
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteHttpcacheFileFileCacheStore
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteHttpcacheFileFileCacheStoreInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.httpcache.impl.OuterCacheFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.granite.httpcache.url.paths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteHttpcacheImplOuterCacheFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteHttpcacheImplOuterCacheFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.i18n.impl.bundle.PseudoTranslations":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: pseudo.patterns
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteI18nImplBundlePseudoTranslations
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteI18nImplBundlePseudoTranslationsInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.i18n.impl.PreferencesLocaleResolverService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: security.preferences.name
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteI18nImplPreferencesLocaleResolverService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.infocollector.InfoCollector":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: granite.infocollector.includeThreadDumps
        in: query
        schema:
          type: boolean
      - name: granite.infocollector.includeHeapDump
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteInfocollectorInfoCollector
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteInfocollectorInfoCollectorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.jetty.ssl.internal.GraniteSslConnectorFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.granite.jetty.ssl.port
        in: query
        schema:
          type: integer
      - name: com.adobe.granite.jetty.ssl.keystore.user
        in: query
        schema:
          type: string
      - name: com.adobe.granite.jetty.ssl.keystore.password
        in: query
        schema:
          type: string
      - name: com.adobe.granite.jetty.ssl.ciphersuites.excluded
        in: query
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.granite.jetty.ssl.ciphersuites.included
        in: query
        schema:
          type: array
          items:
            type: string
      - name: com.adobe.granite.jetty.ssl.client.certificate
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteJettySslInternalGraniteSslConnectorFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.license.impl.LicenseCheckFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: checkInternval
        in: query
        schema:
          type: integer
      - name: excludeIds
        in: query
        schema:
          type: array
          items:
            type: string
      - name: encryptPing
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteLicenseImplLicenseCheckFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteLicenseImplLicenseCheckFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.logging.impl.LogAnalyserImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: messages.queue.size
        in: query
        schema:
          type: integer
      - name: logger.config
        in: query
        schema:
          type: array
          items:
            type: string
      - name: messages.size
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteLoggingImplLogAnalyserImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteLoggingImplLogAnalyserImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.logging.impl.LogErrorHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteLoggingImplLogErrorHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteLoggingImplLogErrorHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.DataStoreGarbageCollectionTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: granite.maintenance.mandatory
        in: query
        schema:
          type: boolean
      - name: job.topics
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.LuceneBinariesCleanupTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: job.topics
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.oauth.server.auth.impl.OAuth2ServerAuthenticationHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      - name: jaas.controlFlag
        in: query
        schema:
          type: string
      - name: jaas.realmName
        in: query
        schema:
          type: string
      - name: jaas.ranking
        in: query
        schema:
          type: integer
      - name: oauth.offline.validation
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.oauth.server.impl.AccessTokenCleanupTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteOauthServerImplAccessTokenCleanupTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2ClientRevocationServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.client.revocation.active
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2RevocationEndpointServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.paths
        in: query
        schema:
          type: string
      - name: oauth.revocation.active
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenEndpointServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.issuer
        in: query
        schema:
          type: string
      - name: oauth.access.token.expires.in
        in: query
        schema:
          type: string
      - name: osgi.http.whiteboard.servlet.pattern
        in: query
        schema:
          type: string
      - name: osgi.http.whiteboard.context.select
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.oauth.server.impl.OAuth2TokenRevocationServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.token.revocation.active
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingConfigurator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: offloading.transporter
        in: query
        schema:
          type: string
      - name: offloading.cleanup.payload
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOffloadingImplOffloadingConfigurator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplOffloadingConfiguratorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobCloner":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: offloading.jobcloner.enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOffloadingImplOffloadingJobCloner
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplOffloadingJobClonerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.offloading.impl.OffloadingJobOffloader":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: offloading.offloader.enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOffloadingImplOffloadingJobOffloader
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingAgentManager":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: offloading.agentmanager.enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOffloadingImplTransporterOffloadingAgentManager
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.offloading.impl.transporter.OffloadingDefaultTransporter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: default.transport.agent-to-worker.prefix
        in: query
        schema:
          type: string
      - name: default.transport.agent-to-master.prefix
        in: query
        schema:
          type: string
      - name: default.transport.input.package
        in: query
        schema:
          type: string
      - name: default.transport.output.package
        in: query
        schema:
          type: string
      - name: default.transport.replication.synchronous
        in: query
        schema:
          type: boolean
      - name: default.transport.contentpackage
        in: query
        schema:
          type: boolean
      - name: offloading.transporter.default.enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTransporter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTransporterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.omnisearch.impl.core.OmniSearchServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: omnisearch.suggestion.requiretext.min
        in: query
        schema:
          type: integer
      - name: omnisearch.suggestion.spellcheck.require
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.optout.impl.OptOutServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: optout.cookies
        in: query
        schema:
          type: array
          items:
            type: string
      - name: optout.headers
        in: query
        schema:
          type: array
          items:
            type: string
      - name: optout.whitelist.cookies
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteOptoutImplOptOutServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteOptoutImplOptOutServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.queries.impl.hc.AsyncIndexHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: indexing.critical.threshold
        in: query
        schema:
          type: integer
      - name: indexing.warn.threshold
        in: query
        schema:
          type: integer
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteQueriesImplHcAsyncIndexHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.queries.impl.hc.LargeIndexHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: large.index.critical.threshold
        in: query
        schema:
          type: integer
      - name: large.index.warn.threshold
        in: query
        schema:
          type: integer
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteQueriesImplHcLargeIndexHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueriesStatusHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteQueriesImplHcQueriesStatusHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryHealthCheckMetrics":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: getPeriod
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteQueriesImplHcQueryHealthCheckMetrics
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.queries.impl.hc.QueryLimitsHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteQueriesImplHcQueryLimitsHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationQueueHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: number.of.retries.allowed
        in: query
        schema:
          type: integer
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteReplicationHcImplReplicationQueueHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.replication.hc.impl.ReplicationTransportUsersHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.repository.hc.impl.AuthorizableNodeNameHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.repository.hc.impl.content.sling.SlingContentHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: exclude.search.path
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.repository.hc.impl.ContinuousRGCHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultAccessUserProfileHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.repository.hc.impl.DefaultLoginsHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: account.logins
        in: query
        schema:
          type: array
          items:
            type: string
      - name: console.logins
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.repository.hc.impl.DiskSpaceHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: disk.space.warn.threshold
        in: query
        schema:
          type: integer
      - name: disk.space.error.threshold
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.repository.hc.impl.ObservationQueueLengthHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.repository.impl.CommitStatsConfig":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: intervalSeconds
        in: query
        schema:
          type: integer
      - name: commitsPerIntervalThreshold
        in: query
        schema:
          type: integer
      - name: maxLocationLength
        in: query
        schema:
          type: integer
      - name: maxDetailsShown
        in: query
        schema:
          type: integer
      - name: minDetailsPercentage
        in: query
        schema:
          type: integer
      - name: threadMatchers
        in: query
        schema:
          type: array
          items:
            type: string
      - name: maxGreedyDepth
        in: query
        schema:
          type: integer
      - name: greedyStackMatchers
        in: query
        schema:
          type: string
      - name: stackFilters
        in: query
        schema:
          type: array
          items:
            type: string
      - name: stackMatchers
        in: query
        schema:
          type: array
          items:
            type: string
      - name: stackCategorizers
        in: query
        schema:
          type: array
          items:
            type: string
      - name: stackShorteners
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRepositoryImplCommitStatsConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRepositoryImplCommitStatsConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.requests.logging.impl.hc.RequestsStatusHealthCheckImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.resourcestatus.impl.StatusResourceProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: provider.root
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteResourcestatusImplStatusResourceProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.rest.assets.impl.AssetContentDispositionFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: mime.allowEmpty
        in: query
        schema:
          type: boolean
      - name: mime.allowed
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRestAssetsImplAssetContentDispositionFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.rest.impl.ApiEndpointResourceProviderFactoryImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: provider.roots
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.rest.impl.servlet.DefaultGETServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: default.limit
        in: query
        schema:
          type: integer
      - name: use.absolute.uri
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteRestImplServletDefaultGETServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRestImplServletDefaultGETServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.security.user.ui.internal.servlets.SSLConfigurationServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.security.user.UserPropertiesService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: adapter.condition
        in: query
        schema:
          type: string
      - name: granite.userproperties.nodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: granite.userproperties.resourcetypes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteSecurityUserUserPropertiesService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteSecurityUserUserPropertiesServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.socialgraph.impl.SocialGraphFactoryImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: group2member.relationship.outgoing
        in: query
        schema:
          type: string
      - name: group2member.excluded.outgoing
        in: query
        schema:
          type: array
          items:
            type: string
      - name: group2member.relationship.incoming
        in: query
        schema:
          type: string
      - name: group2member.excluded.incoming
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteSocialgraphImplSocialGraphFactoryImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.system.monitoring.impl.SystemStatsMBeanImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      - name: jmx.objectname
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskAdapterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: adapter.condition
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.taskmanagement.impl.jcr.TaskArchiveService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: archiving.enabled
        in: query
        schema:
          type: boolean
      - name: scheduler.expression
        in: query
        schema:
          type: string
      - name: archive.since.days.completed
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteTaskmanagementImplJcrTaskArchiveService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.taskmanagement.impl.purge.TaskPurgeMaintenanceTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: purgeCompleted
        in: query
        schema:
          type: boolean
      - name: completedAge
        in: query
        schema:
          type: integer
      - name: purgeActive
        in: query
        schema:
          type: boolean
      - name: activeAge
        in: query
        schema:
          type: integer
      - name: saveThreshold
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.taskmanagement.impl.service.TaskManagerAdapterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: adapter.condition
        in: query
        schema:
          type: string
      - name: taskmanager.admingroups
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.threaddump.ThreadDumpCollector":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.period
        in: query
        schema:
          type: integer
      - name: scheduler.runOn
        in: query
        schema:
          type: string
      - name: granite.threaddump.enabled
        in: query
        schema:
          type: boolean
      - name: granite.threaddump.dumpsPerFile
        in: query
        schema:
          type: integer
      - name: granite.threaddump.enableGzipCompression
        in: query
        schema:
          type: boolean
      - name: granite.threaddump.enableDirectoriesCompression
        in: query
        schema:
          type: boolean
      - name: granite.threaddump.enableJStack
        in: query
        schema:
          type: boolean
      - name: granite.threaddump.maxBackupDays
        in: query
        schema:
          type: integer
      - name: granite.threaddump.backupCleanTrigger
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteThreaddumpThreadDumpCollector
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteThreaddumpThreadDumpCollectorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.translation.connector.msft.core.impl.MicrosoftTranslationServiceFactoryImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: translationFactory
        in: query
        schema:
          type: string
      - name: defaultConnectorLabel
        in: query
        schema:
          type: string
      - name: defaultConnectorAttribution
        in: query
        schema:
          type: string
      - name: defaultConnectorWorkspaceId
        in: query
        schema:
          type: string
      - name: defaultConnectorSubscriptionKey
        in: query
        schema:
          type: string
      - name: languageMapLocation
        in: query
        schema:
          type: string
      - name: categoryMapLocation
        in: query
        schema:
          type: string
      - name: retryAttempts
        in: query
        schema:
          type: integer
      - name: timeoutCount
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslationServiceFactoryImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslationServiceFactoryImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.translation.core.impl.TranslationManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: defaultConnectorName
        in: query
        schema:
          type: string
      - name: defaultCategory
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteTranslationCoreImplTranslationManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteTranslationCoreImplTranslationManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.ui.clientlibs.impl.HtmlLibraryManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: htmllibmanager.timing
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.debug.init.js
        in: query
        schema:
          type: string
      - name: htmllibmanager.minify
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.debug
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.gzip
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.maxDataUriSize
        in: query
        schema:
          type: integer
      - name: htmllibmanager.maxage
        in: query
        schema:
          type: integer
      - name: htmllibmanager.forceCQUrlInfo
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.defaultthemename
        in: query
        schema:
          type: string
      - name: htmllibmanager.defaultuserthemename
        in: query
        schema:
          type: string
      - name: htmllibmanager.clientmanager
        in: query
        schema:
          type: string
      - name: htmllibmanager.path.list
        in: query
        schema:
          type: array
          items:
            type: string
      - name: htmllibmanager.excluded.path.list
        in: query
        schema:
          type: array
          items:
            type: string
      - name: htmllibmanager.processor.js
        in: query
        schema:
          type: array
          items:
            type: string
      - name: htmllibmanager.processor.css
        in: query
        schema:
          type: array
          items:
            type: string
      - name: htmllibmanager.longcache.patterns
        in: query
        schema:
          type: array
          items:
            type: string
      - name: htmllibmanager.longcache.format
        in: query
        schema:
          type: string
      - name: htmllibmanager.useFileSystemOutputCache
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.fileSystemOutputCacheLocation
        in: query
        schema:
          type: string
      - name: htmllibmanager.disable.replacement
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.console.frags.WorkflowWithdrawFeature":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.console.publish.WorkflowPublishEventService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: granite.workflow.WorkflowPublishEventService.enabled
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.core.jcr.WorkflowBucketManager":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: bucketSize
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteWorkflowCoreJcrWorkflowBucketManager
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.core.job.ExternalProcessJobHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: default.timeout
        in: query
        schema:
          type: integer
      - name: max.timeout
        in: query
        schema:
          type: integer
      - name: default.period
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteWorkflowCoreJobExternalProcessJobHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.core.job.JobHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: job.topics
        in: query
        schema:
          type: array
          items:
            type: string
      - name: allow.self.process.termination
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteWorkflowCoreJobJobHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreJobJobHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.core.payloadmap.PayloadMoveListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: payload.move.white.list
        in: query
        schema:
          type: array
          items:
            type: string
      - name: payload.move.handle.from.workflow.process
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.core.PayloadMapCache":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: getSystemWorkflowModels
        in: query
        schema:
          type: array
          items:
            type: string
      - name: getPackageRootPath
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteWorkflowCorePayloadMapCache
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowCorePayloadMapCacheInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.core.WorkflowConfig":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.workflow.config.workflow.packages.root.path
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.workflow.config.workflow.process.legacy.mode
        in: query
        schema:
          type: boolean
      - name: cq.workflow.config.allow.locking
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteWorkflowCoreWorkflowConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreWorkflowConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.core.WorkflowSessionFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: granite.workflowinbox.sort.propertyName
        in: query
        schema:
          type: string
      - name: granite.workflowinbox.sort.order
        in: query
        schema:
          type: string
      - name: cq.workflow.job.retry
        in: query
        schema:
          type: integer
      - name: cq.workflow.superuser
        in: query
        schema:
          type: array
          items:
            type: string
      - name: granite.workflow.inboxQuerySize
        in: query
        schema:
          type: integer
      - name: granite.workflow.adminUserGroupFilter
        in: query
        schema:
          type: boolean
      - name: granite.workflow.enforceWorkitemAssigneePermissions
        in: query
        schema:
          type: boolean
      - name: granite.workflow.enforceWorkflowInitiatorPermissions
        in: query
        schema:
          type: boolean
      - name: granite.workflow.injectTenantIdInJobTopics
        in: query
        schema:
          type: boolean
      - name: granite.workflow.maxPurgeSaveThreshold
        in: query
        schema:
          type: integer
      - name: granite.workflow.maxPurgeQueryCount
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteWorkflowCoreWorkflowSessionFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.octopus.ncomm.bootstrap":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: maxConnections
        in: query
        schema:
          type: integer
      - name: maxRequests
        in: query
        schema:
          type: integer
      - name: requestTimeout
        in: query
        schema:
          type: integer
      - name: requestRetries
        in: query
        schema:
          type: integer
      - name: launchTimeout
        in: query
        schema:
          type: integer
      operationId: comAdobeOctopusNcommBootstrap
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeOctopusNcommBootstrapInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.social.integrations.livefyre.user.pingforpull.impl.PingPullServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: communities.integration.livefyre.sling.event.filter
        in: query
        schema:
          type: string
      operationId: comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.xmp.worker.files.ncomm.XMPFilesNComm":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: maxConnections
        in: query
        schema:
          type: string
      - name: maxRequests
        in: query
        schema:
          type: string
      - name: requestTimeout
        in: query
        schema:
          type: string
      - name: logDir
        in: query
        schema:
          type: string
      operationId: comAdobeXmpWorkerFilesNcommXMPFilesNComm
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeXmpWorkerFilesNcommXMPFilesNCommInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.commons.httpclient":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: proxy.enabled
        in: query
        schema:
          type: boolean
      - name: proxy.host
        in: query
        schema:
          type: string
      - name: proxy.user
        in: query
        schema:
          type: string
      - name: proxy.password
        in: query
        schema:
          type: string
      - name: proxy.ntlm.host
        in: query
        schema:
          type: string
      - name: proxy.ntlm.domain
        in: query
        schema:
          type: string
      - name: proxy.exceptions
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCommonsHttpclient
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCommonsHttpclientInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.impl.StorePropertiesChangeListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.store.listener.additionalStorePaths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqAnalyticsImplStorePropertiesChangeListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsImplStorePropertiesChangeListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.exporter.ClassificationsExporter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: allowed.paths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.analytics.saint.exporter.pagesize
        in: query
        schema:
          type: integer
      operationId: comDayCqAnalyticsSitecatalystImplExporterClassificationsExporter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsSitecatalystImplExporterClassificationsExporterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.importer.ReportImporter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: report.fetch.attempts
        in: query
        schema:
          type: integer
      - name: report.fetch.delay
        in: query
        schema:
          type: integer
      operationId: comDayCqAnalyticsSitecatalystImplImporterReportImporter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsSitecatalystImplImporterReportImporterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystAdapterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.analytics.adapterfactory.contextstores
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.sitecatalyst.impl.SitecatalystHttpClientImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.analytics.sitecatalyst.service.datacenter.url
        in: query
        schema:
          type: array
          items:
            type: string
      - name: devhostnamepatterns
        in: query
        schema:
          type: array
          items:
            type: string
      - name: connection.timeout
        in: query
        schema:
          type: integer
      - name: socket.timeout
        in: query
        schema:
          type: integer
      operationId: comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.AccountOptionsUpdater":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.analytics.testandtarget.accountoptionsupdater.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqAnalyticsTestandtargetImplAccountOptionsUpdater
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.DeleteAuthorActivityListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.analytics.testandtarget.deleteauthoractivitylistener.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.PushAuthorCampaignPageListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.analytics.testandtarget.pushauthorcampaignpagelistener.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.SegmentImporter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.analytics.testandtarget.segmentimporter.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqAnalyticsTestandtargetImplSegmentImporter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplSegmentImporterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.service.WebServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: endpointUri
        in: query
        schema:
          type: string
      - name: connectionTimeout
        in: query
        schema:
          type: integer
      - name: socketTimeout
        in: query
        schema:
          type: integer
      operationId: comDayCqAnalyticsTestandtargetImplServiceWebServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.servlets.AdminServerServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: testandtarget.endpoint.url
        in: query
        schema:
          type: string
      operationId: comDayCqAnalyticsTestandtargetImplServletsAdminServerServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.analytics.testandtarget.impl.TestandtargetHttpClientImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.analytics.testandtarget.api.url
        in: query
        schema:
          type: string
      - name: cq.analytics.testandtarget.timeout
        in: query
        schema:
          type: integer
      - name: cq.analytics.testandtarget.sockettimeout
        in: query
        schema:
          type: integer
      - name: cq.analytics.testandtarget.recommendations.url.replace
        in: query
        schema:
          type: string
      - name: cq.analytics.testandtarget.recommendations.url.replacewith
        in: query
        schema:
          type: string
      operationId: comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.auth.impl.cug.CugSupportImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cug.exempted.principals
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cug.enabled
        in: query
        schema:
          type: boolean
      - name: cug.principals.regex
        in: query
        schema:
          type: string
      - name: cug.principals.replacement
        in: query
        schema:
          type: string
      operationId: comDayCqAuthImplCugCugSupportImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAuthImplCugCugSupportImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.auth.impl.LoginSelectorHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: auth.loginselector.mappings
        in: query
        schema:
          type: array
          items:
            type: string
      - name: auth.loginselector.changepw.mappings
        in: query
        schema:
          type: array
          items:
            type: string
      - name: auth.loginselector.defaultloginpage
        in: query
        schema:
          type: string
      - name: auth.loginselector.defaultchangepwpage
        in: query
        schema:
          type: string
      - name: auth.loginselector.handle
        in: query
        schema:
          type: array
          items:
            type: string
      - name: auth.loginselector.handle.all.extensions
        in: query
        schema:
          type: boolean
      operationId: comDayCqAuthImplLoginSelectorHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqAuthImplLoginSelectorHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.commons.impl.ExternalizerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: externalizer.domains
        in: query
        schema:
          type: array
          items:
            type: string
      - name: externalizer.host
        in: query
        schema:
          type: string
      - name: externalizer.contextpath
        in: query
        schema:
          type: string
      - name: externalizer.encodedpath
        in: query
        schema:
          type: boolean
      operationId: comDayCqCommonsImplExternalizerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqCommonsImplExternalizerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.commons.servlets.RootMappingServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: rootmapping.target
        in: query
        schema:
          type: string
      operationId: comDayCqCommonsServletsRootMappingServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqCommonsServletsRootMappingServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.CodeUpgradeExecutionConditionChecker":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: codeupgradetasks
        in: query
        schema:
          type: array
          items:
            type: string
      - name: codeupgradetaskfilters
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecker
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.UpgradeTaskIgnoreList":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: upgradeTaskIgnoreList
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.compat.codeupgrade.impl.VersionRangeTaskIgnorelist":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: effectiveBundleListPath
        in: query
        schema:
          type: string
      operationId: comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.contentsync.impl.ContentSyncManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: contentsync.fallback.authorizable
        in: query
        schema:
          type: string
      - name: contentsync.fallback.updateuser
        in: query
        schema:
          type: string
      operationId: comDayCqContentsyncImplContentSyncManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqContentsyncImplContentSyncManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.commons.handler.StandardImageHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: large_file_threshold
        in: query
        schema:
          type: integer
      - name: large_comment_threshold
        in: query
        schema:
          type: integer
      - name: cq.dam.enable.ext.meta.extraction
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCommonsHandlerStandardImageHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCommonsHandlerStandardImageHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.commons.metadata.XmpFilterBlackWhite":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: xmp.filter.apply_whitelist
        in: query
        schema:
          type: boolean
      - name: xmp.filter.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: xmp.filter.apply_blacklist
        in: query
        schema:
          type: boolean
      - name: xmp.filter.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCommonsMetadataXmpFilterBlackWhite
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.commons.util.impl.AssetCacheImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: large.file.min
        in: query
        schema:
          type: integer
      - name: cache.apply
        in: query
        schema:
          type: boolean
      - name: mime.types
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCommonsUtilImplAssetCacheImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCommonsUtilImplAssetCacheImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.annotation.pdf.AnnotationPdfConfig":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.config.annotation.pdf.document.width
        in: query
        schema:
          type: integer
      - name: cq.dam.config.annotation.pdf.document.height
        in: query
        schema:
          type: integer
      - name: cq.dam.config.annotation.pdf.document.padding.horizontal
        in: query
        schema:
          type: integer
      - name: cq.dam.config.annotation.pdf.document.padding.vertical
        in: query
        schema:
          type: integer
      - name: cq.dam.config.annotation.pdf.font.size
        in: query
        schema:
          type: integer
      - name: cq.dam.config.annotation.pdf.font.color
        in: query
        schema:
          type: string
      - name: cq.dam.config.annotation.pdf.font.family
        in: query
        schema:
          type: string
      - name: cq.dam.config.annotation.pdf.font.light
        in: query
        schema:
          type: string
      - name: cq.dam.config.annotation.pdf.marginTextImage
        in: query
        schema:
          type: integer
      - name: cq.dam.config.annotation.pdf.minImageHeight
        in: query
        schema:
          type: integer
      - name: cq.dam.config.annotation.pdf.reviewStatus.width
        in: query
        schema:
          type: integer
      - name: cq.dam.config.annotation.pdf.reviewStatus.color.approved
        in: query
        schema:
          type: string
      - name: cq.dam.config.annotation.pdf.reviewStatus.color.rejected
        in: query
        schema:
          type: string
      - name: cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested
        in: query
        schema:
          type: string
      - name: cq.dam.config.annotation.pdf.annotationMarker.width
        in: query
        schema:
          type: integer
      - name: cq.dam.config.annotation.pdf.asset.minheight
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.assethome.AssetHomePageConfiguration":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: isEnabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplAssethomeAssetHomePageConfiguration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.assetlinkshare.AdhocAssetShareProxyServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.adhoc.asset.share.prezip.maxcontentsize
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.AssetMoveListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplAssetMoveListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplAssetMoveListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.cache.CQBufferedImageCache":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.image.cache.max.memory
        in: query
        schema:
          type: integer
      - name: cq.dam.image.cache.max.age
        in: query
        schema:
          type: integer
      - name: cq.dam.image.cache.max.dimension
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplCacheCQBufferedImageCache
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplCacheCQBufferedImageCacheInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.DamChangeEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: changeeventlistener.observed.paths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCoreImplDamChangeEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplDamChangeEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.DamEventPurgeService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      - name: maxSavedActivities
        in: query
        schema:
          type: integer
      - name: saveInterval
        in: query
        schema:
          type: integer
      - name: enableActivityPurge
        in: query
        schema:
          type: boolean
      - name: eventTypes
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplDamEventPurgeService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplDamEventPurgeServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.DamEventRecorderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.filter
        in: query
        schema:
          type: string
      - name: event.queue.length
        in: query
        schema:
          type: integer
      - name: eventrecorder.enabled
        in: query
        schema:
          type: boolean
      - name: eventrecorder.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: eventrecorder.eventtypes
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplDamEventRecorderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplDamEventRecorderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.event.DamEventAuditListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.filter
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplEventDamEventAuditListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplEventDamEventAuditListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.ExpiryNotificationJobImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.expiry.notification.scheduler.istimebased
        in: query
        schema:
          type: boolean
      - name: cq.dam.expiry.notification.scheduler.timebased.rule
        in: query
        schema:
          type: string
      - name: cq.dam.expiry.notification.scheduler.period.rule
        in: query
        schema:
          type: integer
      - name: send_email
        in: query
        schema:
          type: boolean
      - name: asset_expired_limit
        in: query
        schema:
          type: integer
      - name: prior_notification_seconds
        in: query
        schema:
          type: integer
      - name: cq.dam.expiry.notification.url.protocol
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplExpiryNotificationJobImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplExpiryNotificationJobImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.foldermetadataschema.FolderMetadataSchemaFeatureFlag":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: isEnabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatureFlag
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatureFlagInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.gfx.CommonsGfxRenderer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: skip.bufferedcache
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplGfxCommonsGfxRenderer
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplGfxCommonsGfxRendererInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.handler.EPSFormatHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: mimetype
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplHandlerEPSFormatHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplHandlerEPSFormatHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.handler.IndesignFormatHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: mimetype
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCoreImplHandlerIndesignFormatHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplHandlerIndesignFormatHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.handler.JpegHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.enable.ext.meta.extraction
        in: query
        schema:
          type: boolean
      - name: large_file_threshold
        in: query
        schema:
          type: integer
      - name: large_comment_threshold
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplHandlerJpegHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplHandlerJpegHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.handler.xmp.NCommXMPHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: xmphandler.cq.formats
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCoreImplHandlerXmpNCommXMPHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetIndexUpdateMonitor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: jmx.objectname
        in: query
        schema:
          type: string
      - name: property.measure.enabled
        in: query
        schema:
          type: boolean
      - name: property.name
        in: query
        schema:
          type: string
      - name: property.max.wait.ms
        in: query
        schema:
          type: integer
      - name: property.max.rate
        in: query
        schema:
          type: number
      - name: fulltext.measure.enabled
        in: query
        schema:
          type: boolean
      - name: fulltext.name
        in: query
        schema:
          type: string
      - name: fulltext.max.wait.ms
        in: query
        schema:
          type: integer
      - name: fulltext.max.rate
        in: query
        schema:
          type: number
      operationId: comDayCqDamCoreImplJmxAssetIndexUpdateMonitor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetMigrationMBeanImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: jmx.objectname
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplJmxAssetMigrationMBeanImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.jmx.AssetUpdateMonitorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: jmx.objectname
        in: query
        schema:
          type: string
      - name: active
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplJmxAssetUpdateMonitorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataexport.AsyncMetadataExportConfigProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: operation
        in: query
        schema:
          type: string
      - name: emailEnabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.jobs.metadataimport.AsyncMetadataImportConfigProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: operation
        in: query
        schema:
          type: string
      - name: operationIcon
        in: query
        schema:
          type: string
      - name: topicName
        in: query
        schema:
          type: string
      - name: emailEnabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.lightbox.LightboxServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.paths
        in: query
        schema:
          type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.enable.anonymous
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplLightboxLightboxServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplLightboxLightboxServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.metadata.editor.SelectComponentHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: granite:data
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCoreImplMetadataEditorSelectComponentHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.mimeType.AssetUploadRestrictionHelper":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.allow.all.mime
        in: query
        schema:
          type: boolean
      - name: cq.dam.allowed.asset.mimes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.mimeType.DamMimeTypeServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.detect.asset.mime.from.content
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.MissingMetadataNotificationJob":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.missingmetadata.notification.scheduler.istimebased
        in: query
        schema:
          type: boolean
      - name: cq.dam.missingmetadata.notification.scheduler.timebased.rule
        in: query
        schema:
          type: string
      - name: cq.dam.missingmetadata.notification.scheduler.period.rule
        in: query
        schema:
          type: integer
      - name: cq.dam.missingmetadata.notification.recipient
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplMissingMetadataNotificationJob
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplMissingMetadataNotificationJobInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.process.SendTransientWorkflowCompletedEmailProcess":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: process.label
        in: query
        schema:
          type: string
      - name: Notify on Complete
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailProcess
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailProcessInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.process.TextExtractionProcess":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: mimeTypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: maxExtract
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplProcessTextExtractionProcess
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplProcessTextExtractionProcessInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.RenditionMakerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: xmp.propagate
        in: query
        schema:
          type: boolean
      - name: xmp.excludes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCoreImplRenditionMakerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplRenditionMakerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportExportService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: queryBatchSize
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplReportsReportExportService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplReportsReportExportServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.reports.ReportPurgeService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      - name: maxSavedReports
        in: query
        schema:
          type: integer
      - name: timeDuration
        in: query
        schema:
          type: integer
      - name: enableReportPurge
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplReportsReportPurgeService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplReportsReportPurgeServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetDownloadServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplServletAssetDownloadServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletAssetDownloadServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetStatusServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.batch.status.maxassets
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplServletAssetStatusServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletAssetStatusServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.AssetXMPSearchServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.batch.indesign.maxassets
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplServletAssetXMPSearchServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletAssetXMPSearchServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.BatchMetadataServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.batch.metadata.asset.default
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.batch.metadata.collection.default
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.batch.metadata.maxresources
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplServletBatchMetadataServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletBatchMetadataServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.BinaryProviderServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.resourceTypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.drm.enable
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplServletBinaryProviderServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletBinaryProviderServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.batch.collection.properties
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.batch.collection.maxcollections
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplServletCollectionServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletCollectionServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CollectionsServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.batch.collections.properties
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.batch.collections.limit
        in: query
        schema:
          type: integer
      operationId: comDayCqDamCoreImplServletCollectionsServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletCollectionsServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CompanionServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: More Info
        in: query
        schema:
          type: string
      - name: "/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path}"
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplServletCompanionServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletCompanionServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.CreateAssetServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: detect_duplicate
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplServletCreateAssetServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletCreateAssetServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.DamContentDispositionFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.mime.type.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.empty.mime
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplServletDamContentDispositionFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletDamContentDispositionFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.GuidLookupFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.core.guidlookupfilter.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplServletGuidLookupFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletGuidLookupFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.HealthCheckServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.sync.workflow.id
        in: query
        schema:
          type: string
      - name: cq.dam.sync.folder.types
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCoreImplServletHealthCheckServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletHealthCheckServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.MetadataGetServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.resourceTypes
        in: query
        schema:
          type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: string
      - name: sling.servlet.extensions
        in: query
        schema:
          type: string
      - name: sling.servlet.selectors
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplServletMetadataGetServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletMetadataGetServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.MultipleLicenseAcceptServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.drm.enable
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplServletMultipleLicenseAcceptServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.servlet.ResourceCollectionServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.resourceTypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: string
      - name: sling.servlet.selectors
        in: query
        schema:
          type: string
      - name: download.config
        in: query
        schema:
          type: string
      - name: view.selector
        in: query
        schema:
          type: string
      - name: send_email
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreImplServletResourceCollectionServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplServletResourceCollectionServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.ui.preview.FolderPreviewUpdaterImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: createPreviewEnabled
        in: query
        schema:
          type: boolean
      - name: updatePreviewEnabled
        in: query
        schema:
          type: boolean
      - name: queueSize
        in: query
        schema:
          type: integer
      - name: folderPreviewRenditionRegex
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.impl.unzip.UnzipConfig":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.config.unzip.maxuncompressedsize
        in: query
        schema:
          type: integer
      - name: cq.dam.config.unzip.encoding
        in: query
        schema:
          type: string
      operationId: comDayCqDamCoreImplUnzipUnzipConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreImplUnzipUnzipConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.process.ExifToolExtractMetadataProcess":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: process.label
        in: query
        schema:
          type: string
      - name: cq.dam.enable.sha1
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreProcessExifToolExtractMetadataProcess
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreProcessExifToolExtractMetadataProcessInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.process.ExtractMetadataProcess":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: process.label
        in: query
        schema:
          type: string
      - name: cq.dam.enable.sha1
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamCoreProcessExtractMetadataProcess
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreProcessExtractMetadataProcessInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.core.process.MetadataProcessorProcess":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: process.label
        in: query
        schema:
          type: string
      - name: cq.dam.enable.sha1
        in: query
        schema:
          type: boolean
      - name: cq.dam.metadata.xssprotected.properties
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamCoreProcessMetadataProcessorProcess
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamCoreProcessMetadataProcessorProcessInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.handler.ffmpeg.LocatorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: executable.searchpath
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamHandlerFfmpegLocatorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamHandlerFfmpegLocatorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.handler.gibson.fontmanager.impl.FontManagerServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.filter
        in: query
        schema:
          type: string
      - name: fontmgr.system.font.dir
        in: query
        schema:
          type: array
          items:
            type: string
      - name: fontmgr.adobe.font.dir
        in: query
        schema:
          type: string
      - name: fontmgr.customer.font.dir
        in: query
        schema:
          type: string
      operationId: comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.handler.standard.pdf.PdfHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: raster.annotation
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamHandlerStandardPdfPdfHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamHandlerStandardPdfPdfHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.handler.standard.ps.PostScriptHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: raster.annotation
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamHandlerStandardPsPostScriptHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamHandlerStandardPsPostScriptHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.handler.standard.psd.PsdHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: large_file_threshold
        in: query
        schema:
          type: integer
      operationId: comDayCqDamHandlerStandardPsdPsdHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamHandlerStandardPsdPsdHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.ids.impl.IDSJobProcessor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enable.multisession
        in: query
        schema:
          type: boolean
      - name: ids.cc.enable
        in: query
        schema:
          type: boolean
      - name: enable.retry
        in: query
        schema:
          type: boolean
      - name: enable.retry.scripterror
        in: query
        schema:
          type: boolean
      - name: externalizer.domain.cqhost
        in: query
        schema:
          type: string
      - name: externalizer.domain.http
        in: query
        schema:
          type: string
      operationId: comDayCqDamIdsImplIDSJobProcessor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamIdsImplIDSJobProcessorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.ids.impl.IDSPoolManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: max.errors.to.blacklist
        in: query
        schema:
          type: integer
      - name: retry.interval.to.whitelist
        in: query
        schema:
          type: integer
      - name: connect.timeout
        in: query
        schema:
          type: integer
      - name: socket.timeout
        in: query
        schema:
          type: integer
      - name: process.label
        in: query
        schema:
          type: string
      - name: connection.use.max
        in: query
        schema:
          type: integer
      operationId: comDayCqDamIdsImplIDSPoolManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamIdsImplIDSPoolManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.indd.impl.handler.IndesignXMPHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: process.label
        in: query
        schema:
          type: string
      - name: extract.pages
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamInddImplHandlerIndesignXMPHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamInddImplHandlerIndesignXMPHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.indd.impl.servlet.SnippetCreationServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: snippetcreation.maxcollections
        in: query
        schema:
          type: integer
      operationId: comDayCqDamInddImplServletSnippetCreationServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamInddImplServletSnippetCreationServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.indd.process.INDDMediaExtractProcess":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: process.label
        in: query
        schema:
          type: string
      - name: cq.dam.indd.pages.regex
        in: query
        schema:
          type: string
      - name: ids.job.decoupled
        in: query
        schema:
          type: boolean
      - name: ids.job.workflow.model
        in: query
        schema:
          type: string
      operationId: comDayCqDamInddProcessINDDMediaExtractProcess
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamInddProcessINDDMediaExtractProcessInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceDataHandlerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: batch.commit.size
        in: query
        schema:
          type: integer
      operationId: comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.performance.internal.AssetPerformanceReportSyncJob":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      operationId: comDayCqDamPerformanceInternalAssetPerformanceReportSyncJob
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.pim.impl.sourcing.upload.process.ProductAssetsUploadProcess":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: delete.zip.file
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProcess
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProcessInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.S7damDynamicMediaConfigEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.s7dam.common.analytics.impl.SiteCatalystReportRunner":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      - name: scheduler.concurrent
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetCreateHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.post.operation
        in: query
        schema:
          type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: string
      operationId: comDayCqDamS7damCommonPostServletsSetCreateHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamS7damCommonPostServletsSetCreateHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.s7dam.common.post.servlets.SetModifyHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.post.operation
        in: query
        schema:
          type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: string
      operationId: comDayCqDamS7damCommonPostServletsSetModifyHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamS7damCommonPostServletsSetModifyHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.s7dam.common.process.VideoThumbnailDownloadProcess":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: process.label
        in: query
        schema:
          type: string
      operationId: comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.s7dam.common.S7damDamChangeEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.s7dam.damchangeeventlistener.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamS7damCommonS7damDamChangeEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamS7damCommonS7damDamChangeEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.s7dam.common.servlets.S7damProductInfoServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.paths
        in: query
        schema:
          type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: string
      operationId: comDayCqDamS7damCommonServletsS7damProductInfoServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamS7damCommonServletsS7damProductInfoServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.s7dam.common.video.impl.VideoProxyClientServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name
        in: query
        schema:
          type: integer
      - name: cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name
        in: query
        schema:
          type: integer
      - name: cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name
        in: query
        schema:
          type: integer
      - name: cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name
        in: query
        schema:
          type: integer
      - name: cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name
        in: query
        schema:
          type: integer
      - name: cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name
        in: query
        schema:
          type: integer
      - name: cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name
        in: query
        schema:
          type: integer
      operationId: comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7APIClientImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.scene7.apiclient.recordsperpage.nofilter.name
        in: query
        schema:
          type: integer
      - name: cq.dam.scene7.apiclient.recordsperpage.withfilter.name
        in: query
        schema:
          type: integer
      operationId: comDayCqDamScene7ImplScene7APIClientImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7APIClientImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7AssetMimeTypeServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.scene7.assetmimetypeservice.mapping
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7ConfigurationEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.scene7.configurationeventlistener.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamScene7ImplScene7ConfigurationEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7ConfigurationEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7DamChangeEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.scene7.damchangeeventlistener.enabled
        in: query
        schema:
          type: boolean
      - name: cq.dam.scene7.damchangeeventlistener.observed.paths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqDamScene7ImplScene7DamChangeEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7DamChangeEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7FlashTemplatesServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scene7FlashTemplates.rti
        in: query
        schema:
          type: string
      - name: scene7FlashTemplates.rsi
        in: query
        schema:
          type: string
      - name: scene7FlashTemplates.rb
        in: query
        schema:
          type: string
      - name: scene7FlashTemplates.rurl
        in: query
        schema:
          type: string
      - name: scene7FlashTemplate.urlFormatParameter
        in: query
        schema:
          type: string
      operationId: comDayCqDamScene7ImplScene7FlashTemplatesServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.scene7.impl.Scene7UploadServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.dam.scene7.uploadservice.activejobtimeout.label
        in: query
        schema:
          type: integer
      - name: cq.dam.scene7.uploadservice.connectionmaxperroute.label
        in: query
        schema:
          type: integer
      operationId: comDayCqDamScene7ImplScene7UploadServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7UploadServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.stock.integration.impl.cache.StockCacheConfigurationServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: getCacheExpirationUnit
        in: query
        schema:
          type: string
      - name: getCacheExpirationValue
        in: query
        schema:
          type: integer
      operationId: comDayCqDamStockIntegrationImplCacheStockCacheConfigurationServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamStockIntegrationImplCacheStockCacheConfigurationServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.video.impl.servlet.VideoTestServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqDamVideoImplServletVideoTestServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamVideoImplServletVideoTestServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.extwidget.servlets.ImageSpriteServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: maxWidth
        in: query
        schema:
          type: integer
      - name: maxHeight
        in: query
        schema:
          type: integer
      operationId: comDayCqExtwidgetServletsImageSpriteServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqExtwidgetServletsImageSpriteServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.image.internal.font.FontHelper":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: fontpath
        in: query
        schema:
          type: array
          items:
            type: string
      - name: oversamplingFactor
        in: query
        schema:
          type: integer
      operationId: comDayCqImageInternalFontFontHelper
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqImageInternalFontFontHelperInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.jcrclustersupport.ClusterStartLevelController":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cluster.level.enable
        in: query
        schema:
          type: boolean
      - name: cluster.master.level
        in: query
        schema:
          type: integer
      - name: cluster.slave.level
        in: query
        schema:
          type: integer
      operationId: comDayCqJcrclustersupportClusterStartLevelController
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqJcrclustersupportClusterStartLevelControllerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mailer.DefaultMailService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: smtp.host
        in: query
        schema:
          type: string
      - name: smtp.port
        in: query
        schema:
          type: integer
      - name: smtp.user
        in: query
        schema:
          type: string
      - name: smtp.password
        in: query
        schema:
          type: string
      - name: from.address
        in: query
        schema:
          type: string
      - name: smtp.ssl
        in: query
        schema:
          type: boolean
      - name: smtp.starttls
        in: query
        schema:
          type: boolean
      - name: debug.email
        in: query
        schema:
          type: boolean
      operationId: comDayCqMailerDefaultMailService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMailerDefaultMailServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mailer.impl.CqMailingService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: max.recipient.count
        in: query
        schema:
          type: string
      operationId: comDayCqMailerImplCqMailingService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMailerImplCqMailingServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mailer.impl.email.CqEmailTemplateFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: mailer.email.charset
        in: query
        schema:
          type: string
      operationId: comDayCqMailerImplEmailCqEmailTemplateFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMailerImplEmailCqEmailTemplateFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mailer.impl.email.CqRetrieverTemplateFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: mailer.email.embed
        in: query
        schema:
          type: boolean
      - name: mailer.email.charset
        in: query
        schema:
          type: string
      - name: mailer.email.retrieverUserID
        in: query
        schema:
          type: string
      - name: mailer.email.retrieverUserPWD
        in: query
        schema:
          type: string
      operationId: comDayCqMailerImplEmailCqRetrieverTemplateFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mcm.campaign.impl.IntegrationConfigImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: aem.mcm.campaign.formConstraints
        in: query
        schema:
          type: array
          items:
            type: string
      - name: aem.mcm.campaign.publicUrl
        in: query
        schema:
          type: string
      - name: aem.mcm.campaign.relaxedSSL
        in: query
        schema:
          type: boolean
      operationId: comDayCqMcmCampaignImplIntegrationConfigImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMcmCampaignImplIntegrationConfigImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mcm.campaign.importer.PersonalizedTextHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqMcmCampaignImporterPersonalizedTextHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mcm.core.newsletter.NewsletterEmailServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: from.address
        in: query
        schema:
          type: string
      - name: sender.host
        in: query
        schema:
          type: string
      - name: max.bounce.count
        in: query
        schema:
          type: string
      operationId: comDayCqMcmCoreNewsletterNewsletterEmailServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.ClickThroughComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      - name: component.resourceType
        in: query
        schema:
          type: string
      operationId: comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.GraphicalClickThroughComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      - name: component.resourceType
        in: query
        schema:
          type: string
      operationId: comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroughComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroughComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.cta.LeadFormCTAComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.MBoxExperienceTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mcm.landingpage.parser.taghandlers.mbox.TargetComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      - name: component.resourceType
        in: query
        schema:
          type: string
      operationId: comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.notification.impl.NotificationServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.filter
        in: query
        schema:
          type: string
      operationId: comDayCqNotificationImplNotificationServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqNotificationImplNotificationServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.personalization.impl.servlets.TargetingConfigurationServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: forcelocation
        in: query
        schema:
          type: boolean
      operationId: comDayCqPersonalizationImplServletsTargetingConfigurationServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqPersonalizationImplServletsTargetingConfigurationServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollingImporterImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: importer.user
        in: query
        schema:
          type: string
      operationId: comDayCqPollingImporterImplManagedPollingImporterImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqPollingImporterImplManagedPollingImporterImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.polling.importer.impl.PollingImporterImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: importer.min.interval
        in: query
        schema:
          type: integer
      - name: importer.user
        in: query
        schema:
          type: string
      - name: exclude.paths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: include.paths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqPollingImporterImplPollingImporterImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqPollingImporterImplPollingImporterImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.audit.ReplicationEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: comDayCqReplicationAuditReplicationEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationAuditReplicationEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.content.StaticContentBuilder":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: host
        in: query
        schema:
          type: string
      - name: port
        in: query
        schema:
          type: integer
      operationId: comDayCqReplicationContentStaticContentBuilder
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationContentStaticContentBuilderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.impl.AgentManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: job.topics
        in: query
        schema:
          type: string
      - name: serviceUser.target
        in: query
        schema:
          type: string
      - name: agentProvider.target
        in: query
        schema:
          type: string
      operationId: comDayCqReplicationImplAgentManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationImplAgentManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.impl.content.durbo.BinaryLessContentBuilder":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: binary.threshold
        in: query
        schema:
          type: integer
      operationId: comDayCqReplicationImplContentDurboBinaryLessContentBuilder
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.impl.content.durbo.DurboImportConfigurationProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: preserve.hierarchy.nodes
        in: query
        schema:
          type: boolean
      - name: ignore.versioning
        in: query
        schema:
          type: boolean
      - name: import.acl
        in: query
        schema:
          type: boolean
      - name: save.threshold
        in: query
        schema:
          type: integer
      - name: preserve.user.paths
        in: query
        schema:
          type: boolean
      - name: preserve.uuid
        in: query
        schema:
          type: boolean
      - name: preserve.uuid.nodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: preserve.uuid.subtrees
        in: query
        schema:
          type: array
          items:
            type: string
      - name: auto.commit
        in: query
        schema:
          type: boolean
      operationId: comDayCqReplicationImplContentDurboDurboImportConfigurationProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationImplContentDurboDurboImportConfigurationProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.impl.ReplicationContentFactoryProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: replication.content.useFileStorage
        in: query
        schema:
          type: boolean
      - name: replication.content.maxCommitAttempts
        in: query
        schema:
          type: integer
      operationId: comDayCqReplicationImplReplicationContentFactoryProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationImplReplicationContentFactoryProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.impl.ReplicationReceiverImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: receiver.tmpfile.threshold
        in: query
        schema:
          type: integer
      - name: receiver.packages.use.install
        in: query
        schema:
          type: boolean
      operationId: comDayCqReplicationImplReplicationReceiverImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationImplReplicationReceiverImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.impl.ReplicatorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: distribute_events
        in: query
        schema:
          type: boolean
      operationId: comDayCqReplicationImplReplicatorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationImplReplicatorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.impl.ReverseReplicator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.period
        in: query
        schema:
          type: integer
      operationId: comDayCqReplicationImplReverseReplicator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationImplReverseReplicatorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.impl.transport.BinaryLessTransportHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: disabled.cipher.suites
        in: query
        schema:
          type: array
          items:
            type: string
      - name: enabled.cipher.suites
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqReplicationImplTransportBinaryLessTransportHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationImplTransportBinaryLessTransportHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.replication.impl.transport.Http":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: disabled.cipher.suites
        in: query
        schema:
          type: array
          items:
            type: string
      - name: enabled.cipher.suites
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqReplicationImplTransportHttp
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReplicationImplTransportHttpInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.reporting.impl.cache.CacheImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: repcache.enable
        in: query
        schema:
          type: boolean
      - name: repcache.ttl
        in: query
        schema:
          type: integer
      - name: repcache.max
        in: query
        schema:
          type: integer
      operationId: comDayCqReportingImplCacheCacheImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReportingImplCacheCacheImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.reporting.impl.ConfigServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: repconf.timezone
        in: query
        schema:
          type: string
      - name: repconf.locale
        in: query
        schema:
          type: string
      - name: repconf.snapshots
        in: query
        schema:
          type: string
      - name: repconf.repdir
        in: query
        schema:
          type: string
      - name: repconf.hourofday
        in: query
        schema:
          type: integer
      - name: repconf.minofhour
        in: query
        schema:
          type: integer
      - name: repconf.maxrows
        in: query
        schema:
          type: integer
      - name: repconf.fakedata
        in: query
        schema:
          type: boolean
      - name: repconf.snapshotuser
        in: query
        schema:
          type: string
      - name: repconf.enforcesnapshotuser
        in: query
        schema:
          type: boolean
      operationId: comDayCqReportingImplConfigServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReportingImplConfigServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.reporting.impl.RLogAnalyzer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: request.log.output
        in: query
        schema:
          type: string
      operationId: comDayCqReportingImplRLogAnalyzer
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqReportingImplRLogAnalyzerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.period
        in: query
        schema:
          type: integer
      - name: scheduler.concurrent
        in: query
        schema:
          type: boolean
      - name: service.bad_link_tolerance_interval
        in: query
        schema:
          type: integer
      - name: service.check_override_patterns
        in: query
        schema:
          type: array
          items:
            type: string
      - name: service.cache_broken_internal_links
        in: query
        schema:
          type: boolean
      - name: service.special_link_prefix
        in: query
        schema:
          type: array
          items:
            type: string
      - name: service.special_link_patterns
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqRewriterLinkcheckerImplLinkCheckerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqRewriterLinkcheckerImplLinkCheckerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.period
        in: query
        schema:
          type: integer
      - name: scheduler.concurrent
        in: query
        schema:
          type: boolean
      - name: good_link_test_interval
        in: query
        schema:
          type: integer
      - name: bad_link_test_interval
        in: query
        schema:
          type: integer
      - name: link_unused_interval
        in: query
        schema:
          type: integer
      - name: connection.timeout
        in: query
        schema:
          type: integer
      operationId: comDayCqRewriterLinkcheckerImplLinkCheckerTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkCheckerTransformerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: linkcheckertransformer.disableRewriting
        in: query
        schema:
          type: boolean
      - name: linkcheckertransformer.disableChecking
        in: query
        schema:
          type: boolean
      - name: linkcheckertransformer.mapCacheSize
        in: query
        schema:
          type: integer
      - name: linkcheckertransformer.strictExtensionCheck
        in: query
        schema:
          type: boolean
      - name: linkcheckertransformer.stripHtmltExtension
        in: query
        schema:
          type: boolean
      - name: linkcheckertransformer.rewriteElements
        in: query
        schema:
          type: array
          items:
            type: string
      - name: linkcheckertransformer.stripExtensionPathBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.rewriter.linkchecker.impl.LinkInfoStorageImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.max_links_per_host
        in: query
        schema:
          type: integer
      - name: service.save_external_link_references
        in: query
        schema:
          type: boolean
      operationId: comDayCqRewriterLinkcheckerImplLinkInfoStorageImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.rewriter.processor.impl.HtmlParserFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: htmlparser.processTags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: htmlparser.preserveCamelCase
        in: query
        schema:
          type: boolean
      operationId: comDayCqRewriterProcessorImplHtmlParserFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqRewriterProcessorImplHtmlParserFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.search.impl.builder.QueryBuilderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: excerpt.properties
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cache.max.entries
        in: query
        schema:
          type: integer
      - name: cache.entry.lifetime
        in: query
        schema:
          type: integer
      - name: xpath.union
        in: query
        schema:
          type: boolean
      operationId: comDayCqSearchImplBuilderQueryBuilderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqSearchImplBuilderQueryBuilderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.search.suggest.impl.SuggestionIndexManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: pathBuilder.target
        in: query
        schema:
          type: string
      - name: suggest.basepath
        in: query
        schema:
          type: string
      operationId: comDayCqSearchSuggestImplSuggestionIndexManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqSearchSuggestImplSuggestionIndexManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.searchpromote.impl.PublishSearchPromoteConfigHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.searchpromote.confighandler.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqSearchpromoteImplPublishSearchPromoteConfigHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.searchpromote.impl.SearchPromoteServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.searchpromote.configuration.server.uri
        in: query
        schema:
          type: string
      - name: cq.searchpromote.configuration.environment
        in: query
        schema:
          type: string
      - name: connection.timeout
        in: query
        schema:
          type: integer
      - name: socket.timeout
        in: query
        schema:
          type: integer
      operationId: comDayCqSearchpromoteImplSearchPromoteServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqSearchpromoteImplSearchPromoteServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.security.ACLSetup":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.aclsetup.rules
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqSecurityACLSetup
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqSecurityACLSetupInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.statistics.impl.StatisticsServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.period
        in: query
        schema:
          type: integer
      - name: scheduler.concurrent
        in: query
        schema:
          type: boolean
      - name: path
        in: query
        schema:
          type: string
      - name: workspace
        in: query
        schema:
          type: string
      - name: keywordsPath
        in: query
        schema:
          type: string
      - name: asyncEntries
        in: query
        schema:
          type: boolean
      operationId: comDayCqStatisticsImplStatisticsServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqStatisticsImplStatisticsServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.tagging.impl.JcrTagManagerFactoryImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: validation.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqTaggingImplJcrTagManagerFactoryImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqTaggingImplJcrTagManagerFactoryImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.tagging.impl.search.TagPredicateEvaluator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: ignore_path
        in: query
        schema:
          type: boolean
      operationId: comDayCqTaggingImplSearchTagPredicateEvaluator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqTaggingImplSearchTagPredicateEvaluatorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.tagging.impl.TagGarbageCollector":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      operationId: comDayCqTaggingImplTagGarbageCollector
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqTaggingImplTagGarbageCollectorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.contentsync.impl.handler.PagesUpdateHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.pagesupdatehandler.imageresourcetypes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmContentsyncImplHandlerPagesUpdateHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.contentsync.impl.rewriter.PathRewriterTransformerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.contentsync.pathrewritertransformer.mapping.links
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.contentsync.pathrewritertransformer.mapping.clientlibs
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.contentsync.pathrewritertransformer.mapping.images
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.contentsync.pathrewritertransformer.attribute.pattern
        in: query
        schema:
          type: string
      - name: cq.contentsync.pathrewritertransformer.clientlibrary.pattern
        in: query
        schema:
          type: string
      - name: cq.contentsync.pathrewritertransformer.clientlibrary.replace
        in: query
        schema:
          type: string
      operationId: comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.AuthoringUIModeServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: authoringUIModeService.default
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreImplAuthoringUIModeServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplAuthoringUIModeServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.commands.WCMCommandServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: wcmcommandservlet.delete_whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmCoreImplCommandsWCMCommandServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplCommandsWCMCommandServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.devicedetection.DeviceIdentificationModeImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: dim.default.mode
        in: query
        schema:
          type: string
      - name: dim.appcache.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.event.PageEventAuditListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: configured
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreImplEventPageEventAuditListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplEventPageEventAuditListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.event.PagePostProcessor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: paths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmCoreImplEventPagePostProcessor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplEventPagePostProcessorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.event.RepositoryChangeEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: paths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: excludedPaths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmCoreImplEventRepositoryChangeEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.event.TemplatePostProcessor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: paths
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreImplEventTemplatePostProcessor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplEventTemplatePostProcessorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.LanguageManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: langmgr.list.path
        in: query
        schema:
          type: string
      - name: langmgr.country.default
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmCoreImplLanguageManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplLanguageManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.page.PageInfoAggregatorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: page.info.provider.property.regex.default
        in: query
        schema:
          type: string
      - name: page.info.provider.property.name
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreImplPagePageInfoAggregatorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplPagePageInfoAggregatorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.page.PageManagerFactoryImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: illegalCharMapping
        in: query
        schema:
          type: string
      - name: pageSubTreeActivationCheck
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmCoreImplPagePageManagerFactoryImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplPagePageManagerFactoryImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.references.content.ContentReferenceConfig":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: contentReferenceConfig.resourceTypes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmCoreImplReferencesContentContentReferenceConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.AssetViewHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: dam.showexpired
        in: query
        schema:
          type: boolean
      - name: dam.showhidden
        in: query
        schema:
          type: boolean
      - name: tagTitleSearch
        in: query
        schema:
          type: boolean
      - name: guessTotal
        in: query
        schema:
          type: string
      - name: dam.expiryProperty
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreImplServletsContentfinderAssetViewHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.connector.ConnectorViewHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: item.resource.types
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmCoreImplServletsContentfinderConnectorConnectorViewHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsContentfinderConnectorConnectorViewHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.contentfinder.PageViewHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: guessTotal
        in: query
        schema:
          type: string
      - name: tagTitleSearch
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmCoreImplServletsContentfinderPageViewHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.FindReplaceServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scope
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmCoreImplServletsFindReplaceServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsFindReplaceServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ReferenceSearchServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: referencesearchservlet.maxReferencesPerPage
        in: query
        schema:
          type: integer
      - name: referencesearchservlet.maxPages
        in: query
        schema:
          type: integer
      operationId: comDayCqWcmCoreImplServletsReferenceSearchServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsReferenceSearchServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.servlets.ThumbnailServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: workspace
        in: query
        schema:
          type: string
      - name: dimensions
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmCoreImplServletsThumbnailServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsThumbnailServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.utils.DefaultPageNameValidator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: nonValidChars
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreImplUtilsDefaultPageNameValidator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.variants.PageVariantsProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: default.externalizer.domain
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreImplVariantsPageVariantsProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.VersionManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: versionmanager.createVersionOnActivation
        in: query
        schema:
          type: boolean
      - name: versionmanager.purgingEnabled
        in: query
        schema:
          type: boolean
      - name: versionmanager.purgePaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: versionmanager.ivPaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: versionmanager.maxAgeDays
        in: query
        schema:
          type: integer
      - name: versionmanager.maxNumberVersions
        in: query
        schema:
          type: integer
      - name: versionmanager.minNumberVersions
        in: query
        schema:
          type: integer
      operationId: comDayCqWcmCoreImplVersionManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplVersionManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.VersionPurgeTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: versionpurge.paths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: versionpurge.recursive
        in: query
        schema:
          type: boolean
      - name: versionpurge.maxVersions
        in: query
        schema:
          type: integer
      - name: versionpurge.minVersions
        in: query
        schema:
          type: integer
      - name: versionpurge.maxAgeDays
        in: query
        schema:
          type: integer
      operationId: comDayCqWcmCoreImplVersionPurgeTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplVersionPurgeTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.warp.TimeWarpFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: filter.order
        in: query
        schema:
          type: string
      - name: filter.scope
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreImplWarpTimeWarpFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplWarpTimeWarpFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.WCMDebugFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: wcmdbgfilter.enabled
        in: query
        schema:
          type: boolean
      - name: wcmdbgfilter.jspDebug
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmCoreImplWCMDebugFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplWCMDebugFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.WCMDeveloperModeFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: wcmdevmodefilter.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmCoreImplWCMDeveloperModeFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplWCMDeveloperModeFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.mvt.MVTStatisticsImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: mvtstatistics.trackingurl
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreMvtMVTStatisticsImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreMvtMVTStatisticsImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.stats.PageViewStatisticsImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: pageviewstatistics.trackingurl
        in: query
        schema:
          type: string
      - name: pageviewstatistics.trackingscript.enabled
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreStatsPageViewStatisticsImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreStatsPageViewStatisticsImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.WCMRequestFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: wcmfilter.mode
        in: query
        schema:
          type: string
      operationId: comDayCqWcmCoreWCMRequestFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreWCMRequestFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.DesignPackageImporter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: extract.filter
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmDesignimporterDesignPackageImporter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterDesignPackageImporterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasBuilderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: filepattern
        in: query
        schema:
          type: string
      - name: build.page.nodes
        in: query
        schema:
          type: boolean
      - name: build.client.libs
        in: query
        schema:
          type: boolean
      - name: build.canvas.component
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmDesignimporterImplCanvasBuilderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterImplCanvasBuilderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.impl.CanvasPageDeleteHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: minThreadPoolSize
        in: query
        schema:
          type: integer
      - name: maxThreadPoolSize
        in: query
        schema:
          type: integer
      operationId: comDayCqWcmDesignimporterImplCanvasPageDeleteHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.impl.EntryPreprocessorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: search.pattern
        in: query
        schema:
          type: string
      - name: replace.pattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterImplEntryPreprocessorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterImplEntryPreprocessorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.impl.MobileCanvasBuilderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: filepattern
        in: query
        schema:
          type: string
      - name: device.groups
        in: query
        schema:
          type: array
          items:
            type: string
      - name: build.page.nodes
        in: query
        schema:
          type: boolean
      - name: build.client.libs
        in: query
        schema:
          type: boolean
      - name: build.canvas.component
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmDesignimporterImplMobileCanvasBuilderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.CanvasComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.HeadTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.IFrameTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImageComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      - name: component.resourceType
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImgTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.InlineScriptTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.LinkTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.MetaTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.NonScriptTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ParsysComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      - name: component.resourceType
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.ScriptTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.StyleTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TextComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      - name: component.resourceType
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleComponentTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      - name: component.resourceType
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponentTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponentTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleTagHandlerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: tagpattern
        in: query
        schema:
          type: string
      operationId: comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormChooserServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.name
        in: query
        schema:
          type: string
      - name: sling.servlet.resourceTypes
        in: query
        schema:
          type: string
      - name: sling.servlet.selectors
        in: query
        schema:
          type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: array
          items:
            type: string
      - name: forms.formchooserservlet.advansesearch.require
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmFoundationFormsImplFormChooserServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationFormsImplFormChooserServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormsHandlingServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name.whitelist
        in: query
        schema:
          type: string
      - name: allow.expressions
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmFoundationFormsImplFormsHandlingServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationFormsImplFormsHandlingServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.impl.AdaptiveImageComponentServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: adapt.supported.widths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmFoundationImplAdaptiveImageComponentServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationImplAdaptiveImageComponentServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.impl.HTTPAuthHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      - name: auth.http.nologin
        in: query
        schema:
          type: boolean
      - name: auth.http.realm
        in: query
        schema:
          type: string
      - name: auth.default.loginpage
        in: query
        schema:
          type: string
      - name: auth.cred.form
        in: query
        schema:
          type: array
          items:
            type: string
      - name: auth.cred.utf8
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmFoundationImplHTTPAuthHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationImplHTTPAuthHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.impl.PageImpressionsTracker":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.auth.requirements
        in: query
        schema:
          type: string
      operationId: comDayCqWcmFoundationImplPageImpressionsTracker
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationImplPageImpressionsTrackerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.impl.PageRedirectServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: excluded.resource.types
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmFoundationImplPageRedirectServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationImplPageRedirectServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.security.impl.DefaultAttachmentTypeBlacklistService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: default.attachment.type.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: baseline.attachment.type.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.security.impl.SaferSlingPostValidatorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: parameter.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: parameter.whitelist.prefixes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: binary.parameter.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: modifier.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: operation.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: operation.whitelist.prefixes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: typehint.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resourcetype.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.mobile.core.impl.device.DeviceInfoTransformerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: device.info.transformer.enabled
        in: query
        schema:
          type: boolean
      - name: device.info.transformer.css.style
        in: query
        schema:
          type: string
      operationId: comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.mobile.core.impl.redirect.RedirectFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: redirect.enabled
        in: query
        schema:
          type: boolean
      - name: redirect.stats.enabled
        in: query
        schema:
          type: boolean
      - name: redirect.extensions
        in: query
        schema:
          type: array
          items:
            type: string
      - name: redirect.paths
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmMobileCoreImplRedirectRedirectFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMobileCoreImplRedirectRedirectFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentCopyActionFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludednodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedparagraphitems
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedprops
        in: query
        schema:
          type: array
          items:
            type: string
      - name: contentcopyaction.order.style
        in: query
        schema:
          type: string
      operationId: comDayCqWcmMsmImplActionsContentCopyActionFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsContentCopyActionFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentDeleteActionFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludednodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedparagraphitems
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedprops
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmMsmImplActionsContentDeleteActionFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ContentUpdateActionFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludednodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedparagraphitems
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedprops
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.ignoredMixin
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmMsmImplActionsContentUpdateActionFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.OrderChildrenActionFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludednodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedparagraphitems
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedprops
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmMsmImplActionsOrderChildrenActionFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.PageMoveActionFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludednodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedparagraphitems
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedprops
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.impl.actions.pagemove.prop_referenceUpdate
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmMsmImplActionsPageMoveActionFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsPageMoveActionFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.ReferencesUpdateActionFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludednodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedparagraphitems
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedprops
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.impl.action.referencesupdate.prop_updateNested
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmMsmImplActionsReferencesUpdateActionFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.actions.VersionCopyActionFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludednodetypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedparagraphitems
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.msm.action.excludedprops
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmMsmImplActionsVersionCopyActionFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.LiveRelationshipManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: liverelationshipmgr.relationsconfig.default
        in: query
        schema:
          type: string
      operationId: comDayCqWcmMsmImplLiveRelationshipManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplLiveRelationshipManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.RolloutManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.filter
        in: query
        schema:
          type: string
      - name: rolloutmgr.excludedprops.default
        in: query
        schema:
          type: array
          items:
            type: string
      - name: rolloutmgr.excludedparagraphprops.default
        in: query
        schema:
          type: array
          items:
            type: string
      - name: rolloutmgr.excludednodetypes.default
        in: query
        schema:
          type: array
          items:
            type: string
      - name: rolloutmgr.threadpool.maxsize
        in: query
        schema:
          type: integer
      - name: rolloutmgr.threadpool.maxshutdowntime
        in: query
        schema:
          type: integer
      - name: rolloutmgr.threadpool.priority
        in: query
        schema:
          type: string
      - name: rolloutmgr.commit.size
        in: query
        schema:
          type: integer
      - name: rolloutmgr.conflicthandling.enabled
        in: query
        schema:
          type: boolean
      operationId: comDayCqWcmMsmImplRolloutManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplRolloutManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.msm.impl.servlets.AuditLogServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: auditlogservlet.default.events.count
        in: query
        schema:
          type: integer
      - name: auditlogservlet.default.path
        in: query
        schema:
          type: string
      operationId: comDayCqWcmMsmImplServletsAuditLogServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmMsmImplServletsAuditLogServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.notification.email.impl.EmailChannel":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: email.from
        in: query
        schema:
          type: string
      operationId: comDayCqWcmNotificationEmailImplEmailChannel
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmNotificationEmailImplEmailChannelInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.notification.impl.NotificationManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.topics
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmNotificationImplNotificationManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmNotificationImplNotificationManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.scripting.impl.BVPManager":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: com.day.cq.wcm.scripting.bvp.script.engines
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmScriptingImplBVPManager
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmScriptingImplBVPManagerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.undo.UndoConfig":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.undo.enabled
        in: query
        schema:
          type: boolean
      - name: cq.wcm.undo.path
        in: query
        schema:
          type: string
      - name: cq.wcm.undo.validity
        in: query
        schema:
          type: integer
      - name: cq.wcm.undo.steps
        in: query
        schema:
          type: integer
      - name: cq.wcm.undo.persistence
        in: query
        schema:
          type: string
      - name: cq.wcm.undo.persistence.mode
        in: query
        schema:
          type: boolean
      - name: cq.wcm.undo.markermode
        in: query
        schema:
          type: string
      - name: cq.wcm.undo.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cq.wcm.undo.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmUndoUndoConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmUndoUndoConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.webservicesupport.impl.ReplicationEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: Flush agents
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmWebservicesupportImplReplicationEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmWebservicesupportImplReplicationEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.workflow.impl.WcmWorkflowServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: event.filter
        in: query
        schema:
          type: string
      - name: minThreadPoolSize
        in: query
        schema:
          type: integer
      - name: maxThreadPoolSize
        in: query
        schema:
          type: integer
      - name: cq.wcm.workflow.terminate.on.activate
        in: query
        schema:
          type: boolean
      - name: cq.wcm.worklfow.terminate.exclusion.list
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmWorkflowImplWcmWorkflowServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.workflow.impl.WorkflowPackageInfoProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: workflowpackageinfoprovider.filter
        in: query
        schema:
          type: array
          items:
            type: string
      - name: workflowpackageinfoprovider.filter.rootpath
        in: query
        schema:
          type: string
      operationId: comDayCqWcmWorkflowImplWorkflowPackageInfoProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.widget.impl.HtmlLibraryManagerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: htmllibmanager.clientmanager
        in: query
        schema:
          type: string
      - name: htmllibmanager.debug
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.debug.console
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.debug.init.js
        in: query
        schema:
          type: string
      - name: htmllibmanager.defaultthemename
        in: query
        schema:
          type: string
      - name: htmllibmanager.defaultuserthemename
        in: query
        schema:
          type: string
      - name: htmllibmanager.firebuglite.path
        in: query
        schema:
          type: string
      - name: htmllibmanager.forceCQUrlInfo
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.gzip
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.maxage
        in: query
        schema:
          type: integer
      - name: htmllibmanager.maxDataUriSize
        in: query
        schema:
          type: integer
      - name: htmllibmanager.minify
        in: query
        schema:
          type: boolean
      - name: htmllibmanager.path.list
        in: query
        schema:
          type: array
          items:
            type: string
      - name: htmllibmanager.timing
        in: query
        schema:
          type: boolean
      operationId: comDayCqWidgetImplHtmlLibraryManagerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWidgetImplHtmlLibraryManagerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.widget.impl.WidgetExtensionProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: extendable.widgets
        in: query
        schema:
          type: array
          items:
            type: string
      - name: widgetextensionprovider.debug
        in: query
        schema:
          type: boolean
      operationId: comDayCqWidgetImplWidgetExtensionProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWidgetImplWidgetExtensionProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.workflow.impl.email.EMailNotificationService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: from.address
        in: query
        schema:
          type: string
      - name: host.prefix
        in: query
        schema:
          type: string
      - name: notify.onabort
        in: query
        schema:
          type: boolean
      - name: notify.oncomplete
        in: query
        schema:
          type: boolean
      - name: notify.oncontainercomplete
        in: query
        schema:
          type: boolean
      - name: notify.useronly
        in: query
        schema:
          type: boolean
      operationId: comDayCqWorkflowImplEmailEMailNotificationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWorkflowImplEmailEMailNotificationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.workflow.impl.email.TaskEMailNotificationService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: notify.onupdate
        in: query
        schema:
          type: boolean
      - name: notify.oncomplete
        in: query
        schema:
          type: boolean
      operationId: comDayCqWorkflowImplEmailTaskEMailNotificationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.crx.security.token.impl.impl.TokenAuthenticationHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      - name: token.required.attr
        in: query
        schema:
          type: string
      - name: token.alternate.url
        in: query
        schema:
          type: string
      - name: token.encapsulated
        in: query
        schema:
          type: boolean
      - name: skip.token.refresh
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCrxSecurityTokenImplImplTokenAuthenticationHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.crx.security.token.impl.TokenCleanupTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enable.token.cleanup.task
        in: query
        schema:
          type: boolean
      - name: scheduler.expression
        in: query
        schema:
          type: string
      - name: batch.size
        in: query
        schema:
          type: integer
      operationId: comDayCrxSecurityTokenImplTokenCleanupTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCrxSecurityTokenImplTokenCleanupTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/Guide Localization Service":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: supportedLocales
        in: query
        schema:
          type: array
          items:
            type: string
      - name: Localizable Properties
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: guideLocalizationService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/guideLocalizationServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/MessagingUserComponentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: priority
        in: query
        schema:
          type: integer
      operationId: MessagingUserComponentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessagingUserComponentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.aries.jmx.framework.StateConfig":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: attributeChangeNotificationEnabled
        in: query
        schema:
          type: boolean
      operationId: orgApacheAriesJmxFrameworkStateConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheAriesJmxFrameworkStateConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.eventadmin.impl.EventAdmin":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.eventadmin.ThreadPoolSize
        in: query
        schema:
          type: integer
      - name: org.apache.felix.eventadmin.AsyncToSyncThreadRatio
        in: query
        schema:
          type: number
      - name: org.apache.felix.eventadmin.Timeout
        in: query
        schema:
          type: integer
      - name: org.apache.felix.eventadmin.RequireTopic
        in: query
        schema:
          type: boolean
      - name: org.apache.felix.eventadmin.IgnoreTimeout
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.eventadmin.IgnoreTopic
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheFelixEventadminImplEventAdmin
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixEventadminImplEventAdminInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.http":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.http.host
        in: query
        schema:
          type: string
      - name: org.apache.felix.http.enable
        in: query
        schema:
          type: boolean
      - name: org.osgi.service.http.port
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.timeout
        in: query
        schema:
          type: integer
      - name: org.apache.felix.https.enable
        in: query
        schema:
          type: boolean
      - name: org.osgi.service.http.port.secure
        in: query
        schema:
          type: integer
      - name: org.apache.felix.https.keystore
        in: query
        schema:
          type: string
      - name: org.apache.felix.https.keystore.password
        in: query
        schema:
          type: string
      - name: org.apache.felix.https.keystore.key.password
        in: query
        schema:
          type: string
      - name: org.apache.felix.https.truststore
        in: query
        schema:
          type: string
      - name: org.apache.felix.https.truststore.password
        in: query
        schema:
          type: string
      - name: org.apache.felix.https.clientcertificate
        in: query
        schema:
          type: string
      - name: org.apache.felix.http.context_path
        in: query
        schema:
          type: string
      - name: org.apache.felix.http.mbeans
        in: query
        schema:
          type: boolean
      - name: org.apache.felix.http.session.timeout
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.jetty.threadpool.max
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.jetty.acceptors
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.jetty.selectors
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.jetty.headerBufferSize
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.jetty.requestBufferSize
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.jetty.responseBufferSize
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.jetty.maxFormSize
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.path_exclusions
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.https.jetty.ciphersuites.excluded
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.https.jetty.ciphersuites.included
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.http.jetty.sendServerHeader
        in: query
        schema:
          type: boolean
      - name: org.apache.felix.https.jetty.protocols.included
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.https.jetty.protocols.excluded
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.proxy.load.balancer.connection.enable
        in: query
        schema:
          type: boolean
      - name: org.apache.felix.https.jetty.renegotiateAllowed
        in: query
        schema:
          type: boolean
      - name: org.apache.felix.https.jetty.session.cookie.httpOnly
        in: query
        schema:
          type: boolean
      - name: org.apache.felix.https.jetty.session.cookie.secure
        in: query
        schema:
          type: boolean
      - name: org.eclipse.jetty.servlet.SessionIdPathParameterName
        in: query
        schema:
          type: string
      - name: org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding
        in: query
        schema:
          type: boolean
      - name: org.eclipse.jetty.servlet.SessionCookie
        in: query
        schema:
          type: string
      - name: org.eclipse.jetty.servlet.SessionDomain
        in: query
        schema:
          type: string
      - name: org.eclipse.jetty.servlet.SessionPath
        in: query
        schema:
          type: string
      - name: org.eclipse.jetty.servlet.MaxAge
        in: query
        schema:
          type: integer
      - name: org.apache.felix.http.name
        in: query
        schema:
          type: string
      - name: org.apache.felix.jetty.gziphandler.enable
        in: query
        schema:
          type: boolean
      - name: org.apache.felix.jetty.gzip.minGzipSize
        in: query
        schema:
          type: integer
      - name: org.apache.felix.jetty.gzip.compressionLevel
        in: query
        schema:
          type: integer
      - name: org.apache.felix.jetty.gzip.inflateBufferSize
        in: query
        schema:
          type: integer
      - name: org.apache.felix.jetty.gzip.syncFlush
        in: query
        schema:
          type: boolean
      - name: org.apache.felix.jetty.gzip.excludedUserAgents
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.jetty.gzip.includedMethods
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.jetty.gzip.excludedMethods
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.jetty.gzip.includedPaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.jetty.gzip.excludedPaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.jetty.gzip.includedMimeTypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.jetty.gzip.excludedMimeTypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.felix.http.session.invalidate
        in: query
        schema:
          type: boolean
      - name: org.apache.felix.http.session.uniqueid
        in: query
        schema:
          type: boolean
      operationId: orgApacheFelixHttp
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixHttpInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.http.sslfilter.SslFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: ssl-forward.header
        in: query
        schema:
          type: string
      - name: ssl-forward.value
        in: query
        schema:
          type: string
      - name: ssl-forward-cert.header
        in: query
        schema:
          type: string
      - name: rewrite.absolute.urls
        in: query
        schema:
          type: boolean
      operationId: orgApacheFelixHttpSslfilterSslFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixHttpSslfilterSslFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.jaas.ConfigurationSpi":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: jaas.defaultRealmName
        in: query
        schema:
          type: string
      - name: jaas.configProviderName
        in: query
        schema:
          type: string
      - name: jaas.globalConfigPolicy
        in: query
        schema:
          type: string
      operationId: orgApacheFelixJaasConfigurationSpi
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixJaasConfigurationSpiInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.scr.ScrService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: ds.loglevel
        in: query
        schema:
          type: integer
      - name: ds.factory.enabled
        in: query
        schema:
          type: boolean
      - name: ds.delayed.keepInstances
        in: query
        schema:
          type: boolean
      - name: ds.lock.timeout.milliseconds
        in: query
        schema:
          type: integer
      - name: ds.stop.timeout.milliseconds
        in: query
        schema:
          type: integer
      - name: ds.global.extender
        in: query
        schema:
          type: boolean
      operationId: orgApacheFelixScrScrService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixScrScrServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.systemready.impl.ComponentsCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: components.list
        in: query
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        schema:
          type: string
      operationId: orgApacheFelixSystemreadyImplComponentsCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplComponentsCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.systemready.impl.FrameworkStartCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: timeout
        in: query
        schema:
          type: integer
      - name: target.start.level
        in: query
        schema:
          type: integer
      - name: target.start.level.prop.name
        in: query
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      operationId: orgApacheFelixSystemreadyImplFrameworkStartCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplFrameworkStartCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.systemready.impl.ServicesCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: services.list
        in: query
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        schema:
          type: string
      operationId: orgApacheFelixSystemreadyImplServicesCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplServicesCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemAliveServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: osgi.http.whiteboard.servlet.pattern
        in: query
        schema:
          type: string
      - name: osgi.http.whiteboard.context.select
        in: query
        schema:
          type: string
      operationId: orgApacheFelixSystemreadyImplServletSystemAliveServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplServletSystemAliveServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.systemready.impl.servlet.SystemReadyServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: osgi.http.whiteboard.servlet.pattern
        in: query
        schema:
          type: string
      - name: osgi.http.whiteboard.context.select
        in: query
        schema:
          type: string
      operationId: orgApacheFelixSystemreadyImplServletSystemReadyServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplServletSystemReadyServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.systemready.SystemReadyMonitor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: poll.interval
        in: query
        schema:
          type: integer
      operationId: orgApacheFelixSystemreadySystemReadyMonitor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixSystemreadySystemReadyMonitorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.webconsole.internal.servlet.OsgiManager":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: manager.root
        in: query
        schema:
          type: string
      - name: http.service.filter
        in: query
        schema:
          type: string
      - name: default.render
        in: query
        schema:
          type: string
      - name: realm
        in: query
        schema:
          type: string
      - name: username
        in: query
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      - name: category
        in: query
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      - name: loglevel
        in: query
        schema:
          type: integer
      - name: plugins
        in: query
        schema:
          type: string
      operationId: orgApacheFelixWebconsoleInternalServletOsgiManager
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixWebconsoleInternalServletOsgiManagerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.webconsole.plugins.event.internal.PluginServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: max.size
        in: query
        schema:
          type: integer
      operationId: orgApacheFelixWebconsolePluginsEventInternalPluginServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixWebconsolePluginsEventInternalPluginServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.webconsole.plugins.memoryusage.internal.MemoryUsageConfigurator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: felix.memoryusage.dump.threshold
        in: query
        schema:
          type: integer
      - name: felix.memoryusage.dump.interval
        in: query
        schema:
          type: integer
      - name: felix.memoryusage.dump.location
        in: query
        schema:
          type: string
      operationId: orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageConfigurator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageConfiguratorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreTextProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: dir
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStore":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: mongouri
        in: query
        schema:
          type: string
      - name: db
        in: query
        schema:
          type: string
      - name: socketKeepAlive
        in: query
        schema:
          type: boolean
      - name: cache
        in: query
        schema:
          type: integer
      - name: nodeCachePercentage
        in: query
        schema:
          type: integer
      - name: prevDocCachePercentage
        in: query
        schema:
          type: integer
      - name: childrenCachePercentage
        in: query
        schema:
          type: integer
      - name: diffCachePercentage
        in: query
        schema:
          type: integer
      - name: cacheSegmentCount
        in: query
        schema:
          type: integer
      - name: cacheStackMoveDistance
        in: query
        schema:
          type: integer
      - name: blobCacheSize
        in: query
        schema:
          type: integer
      - name: persistentCache
        in: query
        schema:
          type: string
      - name: journalCache
        in: query
        schema:
          type: string
      - name: customBlobStore
        in: query
        schema:
          type: boolean
      - name: journalGCInterval
        in: query
        schema:
          type: integer
      - name: journalGCMaxAge
        in: query
        schema:
          type: integer
      - name: prefetchExternalChanges
        in: query
        schema:
          type: boolean
      - name: role
        in: query
        schema:
          type: string
      - name: versionGcMaxAgeInSecs
        in: query
        schema:
          type: integer
      - name: versionGCExpression
        in: query
        schema:
          type: string
      - name: versionGCTimeLimitInSecs
        in: query
        schema:
          type: integer
      - name: blobGcMaxAgeInSecs
        in: query
        schema:
          type: integer
      - name: blobTrackSnapshotIntervalInSecs
        in: query
        schema:
          type: integer
      - name: repository.home
        in: query
        schema:
          type: string
      - name: maxReplicationLagInSecs
        in: query
        schema:
          type: integer
      - name: documentStoreType
        in: query
        schema:
          type: string
      - name: bundlingDisabled
        in: query
        schema:
          type: boolean
      - name: updateLimit
        in: query
        schema:
          type: integer
      - name: persistentCacheIncludes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: leaseCheckMode
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreServicePreset":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: persistentCacheIncludes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreset
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePresetInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.document.secondary.SecondaryStoreCacheService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: includedPaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: enableAsyncObserver
        in: query
        schema:
          type: boolean
      - name: observerQueueSize
        in: query
        schema:
          type: integer
      operationId: orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacheService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacheServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.AsyncIndexerService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: asyncConfigs
        in: query
        schema:
          type: array
          items:
            type: string
      - name: leaseTimeOutMinutes
        in: query
        schema:
          type: integer
      - name: failingIndexTimeoutSeconds
        in: query
        schema:
          type: integer
      - name: errorWarnIntervalSeconds
        in: query
        schema:
          type: integer
      operationId: orgApacheJackrabbitOakPluginsIndexAsyncIndexerService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: disabled
        in: query
        schema:
          type: boolean
      - name: debug
        in: query
        schema:
          type: boolean
      - name: localIndexDir
        in: query
        schema:
          type: string
      - name: enableOpenIndexAsync
        in: query
        schema:
          type: boolean
      - name: threadPoolSize
        in: query
        schema:
          type: integer
      - name: prefetchIndexFiles
        in: query
        schema:
          type: boolean
      - name: extractedTextCacheSizeInMB
        in: query
        schema:
          type: integer
      - name: extractedTextCacheExpiryInSecs
        in: query
        schema:
          type: integer
      - name: alwaysUsePreExtractedCache
        in: query
        schema:
          type: boolean
      - name: booleanClauseLimit
        in: query
        schema:
          type: integer
      - name: enableHybridIndexing
        in: query
        schema:
          type: boolean
      - name: hybridQueueSize
        in: query
        schema:
          type: integer
      - name: disableStoredIndexDefinition
        in: query
        schema:
          type: boolean
      - name: deletedBlobsCollectionEnabled
        in: query
        schema:
          type: boolean
      - name: propIndexCleanerIntervalInSecs
        in: query
        schema:
          type: integer
      - name: enableSingleBlobIndexFiles
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.EmbeddedSolrServerConfigurationProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: solr.home.path
        in: query
        schema:
          type: string
      - name: solr.core.name
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerConfigurationProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerConfigurationProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersObserverService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersObserverServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path.desc.field
        in: query
        schema:
          type: string
      - name: path.child.field
        in: query
        schema:
          type: string
      - name: path.parent.field
        in: query
        schema:
          type: string
      - name: path.exact.field
        in: query
        schema:
          type: string
      - name: catch.all.field
        in: query
        schema:
          type: string
      - name: collapsed.path.field
        in: query
        schema:
          type: string
      - name: path.depth.field
        in: query
        schema:
          type: string
      - name: commit.policy
        in: query
        schema:
          type: string
      - name: rows
        in: query
        schema:
          type: integer
      - name: path.restrictions
        in: query
        schema:
          type: boolean
      - name: property.restrictions
        in: query
        schema:
          type: boolean
      - name: primarytypes.restrictions
        in: query
        schema:
          type: boolean
      - name: ignored.properties
        in: query
        schema:
          type: array
          items:
            type: string
      - name: used.properties
        in: query
        schema:
          type: array
          items:
            type: string
      - name: type.mappings
        in: query
        schema:
          type: array
          items:
            type: string
      - name: property.mappings
        in: query
        schema:
          type: array
          items:
            type: string
      - name: collapse.jcrcontent.nodes
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: solr.http.url
        in: query
        schema:
          type: string
      - name: solr.zk.host
        in: query
        schema:
          type: string
      - name: solr.collection
        in: query
        schema:
          type: string
      - name: solr.socket.timeout
        in: query
        schema:
          type: integer
      - name: solr.connection.timeout
        in: query
        schema:
          type: integer
      - name: solr.shards.no
        in: query
        schema:
          type: integer
      - name: solr.replication.factor
        in: query
        schema:
          type: integer
      - name: solr.conf.dir
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfigurationProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfigurationProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: query.aggregation
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: server.type
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.metric.StatisticsProviderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: providerType
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.plugins.observation.ChangeCollectorProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: maxItems
        in: query
        schema:
          type: integer
      - name: maxPathDepth
        in: query
        schema:
          type: integer
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakPluginsObservationChangeCollectorProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.query.QueryEngineSettingsService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: queryLimitInMemory
        in: query
        schema:
          type: integer
      - name: queryLimitReads
        in: query
        schema:
          type: integer
      - name: queryFailTraversal
        in: query
        schema:
          type: boolean
      - name: fastQuerySize
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakQueryQueryEngineSettingsService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.AuthenticationConfigurationImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.jackrabbit.oak.authentication.appName
        in: query
        schema:
          type: string
      - name: org.apache.jackrabbit.oak.authentication.configSpiName
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigurationImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigurationImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: tokenExpiration
        in: query
        schema:
          type: string
      - name: tokenLength
        in: query
        schema:
          type: string
      - name: tokenRefresh
        in: query
        schema:
          type: boolean
      - name: tokenCleanupThreshold
        in: query
        schema:
          type: integer
      - name: passwordHashAlgorithm
        in: query
        schema:
          type: string
      - name: passwordHashIterations
        in: query
        schema:
          type: integer
      - name: passwordSaltSize
        in: query
        schema:
          type: integer
      operationId: orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.security.authorization.AuthorizationConfigurationImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: permissionsJr2
        in: query
        schema:
          type: string
      - name: importBehavior
        in: query
        schema:
          type: string
      - name: readPaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: administrativePrincipals
        in: query
        schema:
          type: array
          items:
            type: string
      - name: configurationRanking
        in: query
        schema:
          type: integer
      operationId: orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurationImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurationImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.security.internal.SecurityProviderRegistration":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: requiredServicePids
        in: query
        schema:
          type: array
          items:
            type: string
      - name: authorizationCompositionType
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.security.user.RandomAuthorizableNodeName":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: length
        in: query
        schema:
          type: integer
      operationId: orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.security.user.UserConfigurationImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: usersPath
        in: query
        schema:
          type: string
      - name: groupsPath
        in: query
        schema:
          type: string
      - name: systemRelativePath
        in: query
        schema:
          type: string
      - name: defaultDepth
        in: query
        schema:
          type: integer
      - name: importBehavior
        in: query
        schema:
          type: string
      - name: passwordHashAlgorithm
        in: query
        schema:
          type: string
      - name: passwordHashIterations
        in: query
        schema:
          type: integer
      - name: passwordSaltSize
        in: query
        schema:
          type: integer
      - name: omitAdminPw
        in: query
        schema:
          type: boolean
      - name: supportAutoSave
        in: query
        schema:
          type: boolean
      - name: passwordMaxAge
        in: query
        schema:
          type: integer
      - name: initialPasswordChange
        in: query
        schema:
          type: boolean
      - name: passwordHistorySize
        in: query
        schema:
          type: integer
      - name: passwordExpiryForAdmin
        in: query
        schema:
          type: boolean
      - name: cacheExpiration
        in: query
        schema:
          type: integer
      - name: enableRFC7613UsercaseMappedProfile
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakSecurityUserUserConfigurationImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.segment.azure.AzureSegmentStoreService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: accountName
        in: query
        schema:
          type: string
      - name: containerName
        in: query
        schema:
          type: string
      - name: accessKey
        in: query
        schema:
          type: string
      - name: rootPath
        in: query
        schema:
          type: string
      - name: connectionURL
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreMonitorService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: commitsTrackerWriterGroups
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: repository.home
        in: query
        schema:
          type: string
      - name: tarmk.mode
        in: query
        schema:
          type: string
      - name: tarmk.size
        in: query
        schema:
          type: integer
      - name: segmentCache.size
        in: query
        schema:
          type: integer
      - name: stringCache.size
        in: query
        schema:
          type: integer
      - name: templateCache.size
        in: query
        schema:
          type: integer
      - name: stringDeduplicationCache.size
        in: query
        schema:
          type: integer
      - name: templateDeduplicationCache.size
        in: query
        schema:
          type: integer
      - name: nodeDeduplicationCache.size
        in: query
        schema:
          type: integer
      - name: pauseCompaction
        in: query
        schema:
          type: boolean
      - name: compaction.retryCount
        in: query
        schema:
          type: integer
      - name: compaction.force.timeout
        in: query
        schema:
          type: integer
      - name: compaction.sizeDeltaEstimation
        in: query
        schema:
          type: integer
      - name: compaction.disableEstimation
        in: query
        schema:
          type: boolean
      - name: compaction.retainedGenerations
        in: query
        schema:
          type: integer
      - name: compaction.memoryThreshold
        in: query
        schema:
          type: integer
      - name: compaction.progressLog
        in: query
        schema:
          type: integer
      - name: standby
        in: query
        schema:
          type: boolean
      - name: customBlobStore
        in: query
        schema:
          type: boolean
      - name: customSegmentStore
        in: query
        schema:
          type: boolean
      - name: splitPersistence
        in: query
        schema:
          type: boolean
      - name: repository.backup.dir
        in: query
        schema:
          type: string
      - name: blobGcMaxAgeInSecs
        in: query
        schema:
          type: integer
      - name: blobTrackSnapshotIntervalInSecs
        in: query
        schema:
          type: integer
      operationId: orgApacheJackrabbitOakSegmentSegmentNodeStoreService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.segment.standby.store.StandbyStoreService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.installer.configuration.persist
        in: query
        schema:
          type: boolean
      - name: mode
        in: query
        schema:
          type: string
      - name: port
        in: query
        schema:
          type: integer
      - name: primary.host
        in: query
        schema:
          type: string
      - name: interval
        in: query
        schema:
          type: integer
      - name: primary.allowed-client-ip-ranges
        in: query
        schema:
          type: array
          items:
            type: string
      - name: secure
        in: query
        schema:
          type: boolean
      - name: standby.readtimeout
        in: query
        schema:
          type: integer
      - name: standby.autoclean
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  ? "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.principal.ExternalPrincipalConfiguration"
  : post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: protectExternalId
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrincipalExternalPrincipalConfiguration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrincipalExternalPrincipalConfigurationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugConfiguration":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: cugSupportedPaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: cugEnabled
        in: query
        schema:
          type: boolean
      - name: configurationRanking
        in: query
        schema:
          type: integer
      operationId: orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiguration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfigurationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugExcludeImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: principalNames
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcludeImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcludeImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabledActions
        in: query
        schema:
          type: string
      - name: userPrivilegeNames
        in: query
        schema:
          type: array
          items:
            type: string
      - name: groupPrivilegeNames
        in: query
        schema:
          type: array
          items:
            type: string
      - name: constraint
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableActionProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableActionProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.vault.packaging.impl.PackagingImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: packageRoots
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheJackrabbitVaultPackagingImplPackagingImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitVaultPackagingImplPackagingImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.vault.packaging.registry.impl.FSPackageRegistry":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: homePath
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.auth.core.impl.LogoutServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.methods
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.paths
        in: query
        schema:
          type: string
      operationId: orgApacheSlingAuthCoreImplLogoutServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingAuthCoreImplLogoutServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationBindingsValueProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingCaconfigImplConfigurationBindingsValueProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.caconfig.impl.ConfigurationResolverImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: configBucketNames
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingCaconfigImplConfigurationResolverImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCaconfigImplConfigurationResolverImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationInheritanceStrategy":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: configPropertyInheritancePropertyNames
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStrategy
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStrategyInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.caconfig.impl.def.DefaultConfigurationPersistenceStrategy":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStrategy
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStrategyInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.caconfig.impl.override.SystemPropertyConfigurationOverrideProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOverrideProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOverrideProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.caconfig.management.impl.ConfigurationManagementSettingsImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: ignorePropertyNameRegex
        in: query
        schema:
          type: array
          items:
            type: string
      - name: configCollectionPropertiesResourceNames
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingCaconfigManagementImplConfigurationManagementSettingsImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCaconfigManagementImplConfigurationManagementSettingsImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultConfigurationResourceResolvingStrategy":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: configPath
        in: query
        schema:
          type: string
      - name: fallbackPaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: configCollectionInheritancePropertyNames
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourceResolvingStrategy
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourceResolvingStrategyInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.caconfig.resource.impl.def.DefaultContextPathStrategy":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: configRefResourceNames
        in: query
        schema:
          type: array
          items:
            type: string
      - name: configRefPropertyNames
        in: query
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.html.internal.TagsoupHtmlParser":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: parser.features
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingCommonsHtmlInternalTagsoupHtmlParser
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.log.LogManager":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.commons.log.level
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.file
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.file.number
        in: query
        schema:
          type: integer
      - name: org.apache.sling.commons.log.file.size
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.pattern
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.configurationFile
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.packagingDataEnabled
        in: query
        schema:
          type: boolean
      - name: org.apache.sling.commons.log.maxCallerDataDepth
        in: query
        schema:
          type: integer
      - name: org.apache.sling.commons.log.maxOldFileCountInDump
        in: query
        schema:
          type: integer
      - name: org.apache.sling.commons.log.numOfLines
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingCommonsLogLogManager
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsLogLogManagerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.metrics.rrd4j.impl.CodahaleMetricsReporter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: datasources
        in: query
        schema:
          type: array
          items:
            type: string
      - name: step
        in: query
        schema:
          type: integer
      - name: archives
        in: query
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      operationId: orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.mime.internal.MimeTypeServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: mime.types
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingCommonsMimeInternalMimeTypeServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.scheduler.impl.QuartzScheduler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: poolName
        in: query
        schema:
          type: string
      - name: allowedPoolNames
        in: query
        schema:
          type: array
          items:
            type: string
      - name: scheduler.useleaderforsingle
        in: query
        schema:
          type: boolean
      - name: metrics.filters
        in: query
        schema:
          type: array
          items:
            type: string
      - name: slowThresholdMillis
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingCommonsSchedulerImplQuartzScheduler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.scheduler.impl.SchedulerHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: max.quartzJob.duration.acceptable
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingCommonsSchedulerImplSchedulerHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.discovery.oak.Config":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: connectorPingTimeout
        in: query
        schema:
          type: integer
      - name: connectorPingInterval
        in: query
        schema:
          type: integer
      - name: discoveryLiteCheckInterval
        in: query
        schema:
          type: integer
      - name: clusterSyncServiceTimeout
        in: query
        schema:
          type: integer
      - name: clusterSyncServiceInterval
        in: query
        schema:
          type: integer
      - name: enableSyncToken
        in: query
        schema:
          type: boolean
      - name: minEventDelay
        in: query
        schema:
          type: integer
      - name: socketConnectTimeout
        in: query
        schema:
          type: integer
      - name: soTimeout
        in: query
        schema:
          type: integer
      - name: topologyConnectorUrls
        in: query
        schema:
          type: array
          items:
            type: string
      - name: topologyConnectorWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: autoStopLocalLoopEnabled
        in: query
        schema:
          type: boolean
      - name: gzipConnectorRequestsEnabled
        in: query
        schema:
          type: boolean
      - name: hmacEnabled
        in: query
        schema:
          type: boolean
      - name: enableEncryption
        in: query
        schema:
          type: boolean
      - name: sharedKey
        in: query
        schema:
          type: string
      - name: hmacSharedKeyTTL
        in: query
        schema:
          type: integer
      - name: backoffStandbyFactor
        in: query
        schema:
          type: string
      - name: backoffStableFactor
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDiscoveryOakConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDiscoveryOakConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.discovery.oak.SynchronizedClocksHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.name
        in: query
        schema:
          type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: hc.mbean.name
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.monitor.DistributionQueueHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.name
        in: query
        schema:
          type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: hc.mbean.name
        in: query
        schema:
          type: string
      - name: numberOfRetriesAllowed
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingDistributionMonitorDistributionQueueHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.engine.impl.auth.SlingAuthenticator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: osgi.http.whiteboard.context.select
        in: query
        schema:
          type: string
      - name: osgi.http.whiteboard.listener
        in: query
        schema:
          type: string
      - name: auth.sudo.cookie
        in: query
        schema:
          type: string
      - name: auth.sudo.parameter
        in: query
        schema:
          type: string
      - name: auth.annonymous
        in: query
        schema:
          type: boolean
      - name: sling.auth.requirements
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.auth.anonymous.user
        in: query
        schema:
          type: string
      - name: sling.auth.anonymous.password
        in: query
        schema:
          type: string
      - name: auth.http
        in: query
        schema:
          type: string
      - name: auth.http.realm
        in: query
        schema:
          type: string
      - name: auth.uri.suffix
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingEngineImplAuthSlingAuthenticator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEngineImplAuthSlingAuthenticatorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.engine.impl.debug.RequestProgressTrackerLogFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: extensions
        in: query
        schema:
          type: array
          items:
            type: string
      - name: minDurationMs
        in: query
        schema:
          type: integer
      - name: maxDurationMs
        in: query
        schema:
          type: integer
      - name: compactLogFormat
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.engine.impl.log.RequestLogger":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: request.log.output
        in: query
        schema:
          type: string
      - name: request.log.outputtype
        in: query
        schema:
          type: integer
      - name: request.log.enabled
        in: query
        schema:
          type: boolean
      - name: access.log.output
        in: query
        schema:
          type: string
      - name: access.log.outputtype
        in: query
        schema:
          type: integer
      - name: access.log.enabled
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingEngineImplLogRequestLogger
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEngineImplLogRequestLoggerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.engine.impl.SlingMainServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.max.calls
        in: query
        schema:
          type: integer
      - name: sling.max.inclusions
        in: query
        schema:
          type: integer
      - name: sling.trace.allow
        in: query
        schema:
          type: boolean
      - name: sling.max.record.requests
        in: query
        schema:
          type: integer
      - name: sling.store.pattern.requests
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.serverinfo
        in: query
        schema:
          type: string
      - name: sling.additional.response.headers
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingEngineImplSlingMainServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEngineImplSlingMainServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.engine.parameters":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.default.parameter.encoding
        in: query
        schema:
          type: string
      - name: sling.default.max.parameters
        in: query
        schema:
          type: integer
      - name: file.location
        in: query
        schema:
          type: string
      - name: file.threshold
        in: query
        schema:
          type: integer
      - name: file.max
        in: query
        schema:
          type: integer
      - name: request.max
        in: query
        schema:
          type: integer
      - name: sling.default.parameter.checkForAdditionalContainerParameters
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingEngineParameters
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEngineParametersInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.event.impl.EventingThreadPool":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: minPoolSize
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingEventImplEventingThreadPool
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEventImplEventingThreadPoolInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.event.impl.jobs.DefaultJobManager":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: queue.priority
        in: query
        schema:
          type: string
      - name: queue.retries
        in: query
        schema:
          type: integer
      - name: queue.retrydelay
        in: query
        schema:
          type: integer
      - name: queue.maxparallel
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingEventImplJobsDefaultJobManager
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEventImplJobsDefaultJobManagerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.event.impl.jobs.jcr.PersistenceHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: job.consumermanager.disableDistribution
        in: query
        schema:
          type: boolean
      - name: startup.delay
        in: query
        schema:
          type: integer
      - name: cleanup.period
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingEventImplJobsJcrPersistenceHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEventImplJobsJcrPersistenceHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.event.impl.jobs.JobConsumerManager":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.installer.configuration.persist
        in: query
        schema:
          type: boolean
      - name: job.consumermanager.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: job.consumermanager.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingEventImplJobsJobConsumerManager
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEventImplJobsJobConsumerManagerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.extensions.webconsolesecurityprovider.internal.SlingWebConsoleSecurityProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: users
        in: query
        schema:
          type: array
          items:
            type: string
      - name: groups
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWebConsoleSecurityProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWebConsoleSecurityProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.hapi.impl.HApiUtilImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.hapi.tools.resourcetype
        in: query
        schema:
          type: string
      - name: org.apache.sling.hapi.tools.collectionresourcetype
        in: query
        schema:
          type: string
      - name: org.apache.sling.hapi.tools.searchpaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.hapi.tools.externalurl
        in: query
        schema:
          type: string
      - name: org.apache.sling.hapi.tools.enabled
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingHapiImplHApiUtilImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingHapiImplHApiUtilImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.hc.core.impl.executor.HealthCheckExecutorImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: timeoutInMs
        in: query
        schema:
          type: integer
      - name: longRunningFutureThresholdForCriticalMs
        in: query
        schema:
          type: integer
      - name: resultCacheTtlInMs
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.hc.core.impl.servlet.HealthCheckExecutorServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: servletPath
        in: query
        schema:
          type: string
      - name: disabled
        in: query
        schema:
          type: boolean
      - name: cors.accessControlAllowOrigin
        in: query
        schema:
          type: string
      operationId: orgApacheSlingHcCoreImplServletHealthCheckExecutorServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.hc.core.impl.servlet.ResultTxtVerboseSerializer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: totalWidth
        in: query
        schema:
          type: integer
      - name: colWidthName
        in: query
        schema:
          type: integer
      - name: colWidthResult
        in: query
        schema:
          type: integer
      - name: colWidthTiming
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingHcCoreImplServletResultTxtVerboseSerializer
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.i18n.impl.I18NFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: sling.filter.scope
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingI18nImplI18NFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingI18nImplI18NFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.i18n.impl.JcrResourceBundleProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: locale.default
        in: query
        schema:
          type: string
      - name: preload.bundles
        in: query
        schema:
          type: boolean
      - name: invalidation.delay
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingI18nImplJcrResourceBundleProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingI18nImplJcrResourceBundleProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.installer.provider.jcr.impl.JcrInstaller":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: handler.schemes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.jcrinstall.folder.name.regexp
        in: query
        schema:
          type: string
      - name: sling.jcrinstall.folder.max.depth
        in: query
        schema:
          type: integer
      - name: sling.jcrinstall.search.path
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.jcrinstall.new.config.path
        in: query
        schema:
          type: string
      - name: sling.jcrinstall.signal.path
        in: query
        schema:
          type: string
      - name: sling.jcrinstall.enable.writeback
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingInstallerProviderJcrImplJcrInstaller
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingInstallerProviderJcrImplJcrInstallerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: whitelist.bypass
        in: query
        schema:
          type: boolean
      - name: whitelist.bundles.regexp
        in: query
        schema:
          type: string
      operationId: orgApacheSlingJcrBaseInternalLoginAdminWhitelist
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: alias
        in: query
        schema:
          type: string
      - name: dav.create-absolute-uri
        in: query
        schema:
          type: boolean
      - name: dav.protectedhandlers
        in: query
        schema:
          type: string
      operationId: orgApacheSlingJcrDavexImplServletsSlingDavExServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrDavexImplServletsSlingDavExServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.JndiRegistrationSupport":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: java.naming.factory.initial
        in: query
        schema:
          type: string
      - name: java.naming.provider.url
        in: query
        schema:
          type: string
      operationId: orgApacheSlingJcrJackrabbitServerJndiRegistrationSupport
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.jackrabbit.server.RmiRegistrationSupport":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: port
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingJcrJackrabbitServerRmiRegistrationSupport
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.repoinit.impl.RepositoryInitializer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: references
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingJcrRepoinitImplRepositoryInitializer
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrRepoinitImplRepositoryInitializerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrResourceResolverFactoryImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: resource.resolver.searchpath
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resource.resolver.manglenamespaces
        in: query
        schema:
          type: boolean
      - name: resource.resolver.allowDirect
        in: query
        schema:
          type: boolean
      - name: resource.resolver.required.providers
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resource.resolver.required.providernames
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resource.resolver.virtual
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resource.resolver.mapping
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resource.resolver.map.location
        in: query
        schema:
          type: string
      - name: resource.resolver.map.observation
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resource.resolver.default.vanity.redirect.status
        in: query
        schema:
          type: integer
      - name: resource.resolver.enable.vanitypath
        in: query
        schema:
          type: boolean
      - name: resource.resolver.vanitypath.maxEntries
        in: query
        schema:
          type: integer
      - name: resource.resolver.vanitypath.maxEntries.startup
        in: query
        schema:
          type: boolean
      - name: resource.resolver.vanitypath.bloomfilter.maxBytes
        in: query
        schema:
          type: integer
      - name: resource.resolver.optimize.alias.resolution
        in: query
        schema:
          type: boolean
      - name: resource.resolver.vanitypath.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resource.resolver.vanitypath.blacklist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resource.resolver.vanity.precedence
        in: query
        schema:
          type: boolean
      - name: resource.resolver.providerhandling.paranoid
        in: query
        schema:
          type: boolean
      - name: resource.resolver.log.closing
        in: query
        schema:
          type: boolean
      - name: resource.resolver.log.unclosed
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.resource.internal.JcrSystemUserValidator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: allow.only.system.user
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingJcrResourceInternalJcrSystemUserValidator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DefaultHandlerService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: type.collections
        in: query
        schema:
          type: string
      - name: type.noncollections
        in: query
        schema:
          type: string
      - name: type.content
        in: query
        schema:
          type: string
      operationId: orgApacheSlingJcrWebdavImplHandlerDefaultHandlerService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.webdav.impl.handler.DirListingExportHandlerService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.webdav.impl.servlets.SimpleWebDavServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: dav.root
        in: query
        schema:
          type: string
      - name: dav.create-absolute-uri
        in: query
        schema:
          type: boolean
      - name: dav.realm
        in: query
        schema:
          type: string
      - name: collection.types
        in: query
        schema:
          type: array
          items:
            type: string
      - name: filter.prefixes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: filter.types
        in: query
        schema:
          type: string
      - name: filter.uris
        in: query
        schema:
          type: string
      - name: type.collections
        in: query
        schema:
          type: string
      - name: type.noncollections
        in: query
        schema:
          type: string
      - name: type.content
        in: query
        schema:
          type: string
      operationId: orgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jmx.provider.impl.JMXResourceProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: provider.roots
        in: query
        schema:
          type: string
      operationId: orgApacheSlingJmxProviderImplJMXResourceProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJmxProviderImplJMXResourceProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.models.impl.ModelAdapterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: osgi.http.whiteboard.listener
        in: query
        schema:
          type: string
      - name: osgi.http.whiteboard.context.select
        in: query
        schema:
          type: string
      - name: max.recursion.depth
        in: query
        schema:
          type: integer
      - name: cleanup.job.period
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingModelsImplModelAdapterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingModelsImplModelAdapterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.models.jacksonexporter.impl.ResourceModuleProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: max.recursion.levels
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingModelsJacksonexporterImplResourceModuleProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.resourcemerger.impl.MergedResourceProviderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: merge.root
        in: query
        schema:
          type: string
      - name: merge.readOnly
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingResourcemergerImplMergedResourceProviderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.resourcemerger.picker.overriding":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: merge.root
        in: query
        schema:
          type: string
      - name: merge.readOnly
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingResourcemergerPickerOverriding
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingResourcemergerPickerOverridingInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptCacheImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.scripting.cache.size
        in: query
        schema:
          type: integer
      - name: org.apache.sling.scripting.cache.additional_extensions
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingScriptingCoreImplScriptCacheImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingScriptingCoreImplScriptCacheImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.scripting.core.impl.ScriptingResourceResolverProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: log.stacktrace.onclose
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.scripting.java.impl.JavaScriptEngineFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: java.classdebuginfo
        in: query
        schema:
          type: boolean
      - name: java.javaEncoding
        in: query
        schema:
          type: string
      - name: java.compilerSourceVM
        in: query
        schema:
          type: string
      - name: java.compilerTargetVM
        in: query
        schema:
          type: string
      operationId: orgApacheSlingScriptingJavaImplJavaScriptEngineFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.scripting.javascript.internal.RhinoJavaScriptEngineFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.scripting.javascript.rhino.optLevel
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.scripting.jsp.JspScriptEngineFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: jasper.compilerTargetVM
        in: query
        schema:
          type: string
      - name: jasper.compilerSourceVM
        in: query
        schema:
          type: string
      - name: jasper.classdebuginfo
        in: query
        schema:
          type: boolean
      - name: jasper.enablePooling
        in: query
        schema:
          type: boolean
      - name: jasper.ieClassId
        in: query
        schema:
          type: string
      - name: jasper.genStringAsCharArray
        in: query
        schema:
          type: boolean
      - name: jasper.keepgenerated
        in: query
        schema:
          type: boolean
      - name: jasper.mappedfile
        in: query
        schema:
          type: boolean
      - name: jasper.trimSpaces
        in: query
        schema:
          type: boolean
      - name: jasper.displaySourceFragments
        in: query
        schema:
          type: boolean
      - name: default.is.session
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingScriptingJspJspScriptEngineFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingScriptingJspJspScriptEngineFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.scripting.sightly.js.impl.jsapi.SlyBindingsValuesProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.scripting.sightly.js.bindings
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.security.impl.ContentDispositionFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.content.disposition.paths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.content.disposition.excluded.paths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: sling.content.disposition.all.paths
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingSecurityImplContentDispositionFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingSecurityImplContentDispositionFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.security.impl.ReferrerFilter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: allow.empty
        in: query
        schema:
          type: boolean
      - name: allow.hosts
        in: query
        schema:
          type: array
          items:
            type: string
      - name: allow.hosts.regexp
        in: query
        schema:
          type: array
          items:
            type: string
      - name: filter.methods
        in: query
        schema:
          type: array
          items:
            type: string
      - name: exclude.agents.regexp
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingSecurityImplReferrerFilter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingSecurityImplReferrerFilterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: user.mapping
        in: query
        schema:
          type: array
          items:
            type: string
      - name: user.default
        in: query
        schema:
          type: string
      - name: user.enable.default.mapping
        in: query
        schema:
          type: boolean
      - name: require.validation
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingServiceusermappingImplServiceUserMapperImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingServiceusermappingImplServiceUserMapperImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.servlets.get.DefaultGetServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: aliases
        in: query
        schema:
          type: array
          items:
            type: string
      - name: index
        in: query
        schema:
          type: boolean
      - name: index.files
        in: query
        schema:
          type: array
          items:
            type: string
      - name: enable.html
        in: query
        schema:
          type: boolean
      - name: enable.json
        in: query
        schema:
          type: boolean
      - name: enable.txt
        in: query
        schema:
          type: boolean
      - name: enable.xml
        in: query
        schema:
          type: boolean
      - name: json.maximumresults
        in: query
        schema:
          type: integer
      - name: ecmaSuport
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingServletsGetDefaultGetServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingServletsGetDefaultGetServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.servlets.get.impl.version.VersionInfoServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.selectors
        in: query
        schema:
          type: array
          items:
            type: string
      - name: ecmaSuport
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingServletsGetImplVersionVersionInfoServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingServletsGetImplVersionVersionInfoServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.servlets.post.impl.helper.ChunkCleanUpTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduler.expression
        in: query
        schema:
          type: string
      - name: scheduler.concurrent
        in: query
        schema:
          type: boolean
      - name: chunk.cleanup.age
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingServletsPostImplHelperChunkCleanUpTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.servlets.post.impl.SlingPostServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: servlet.post.dateFormats
        in: query
        schema:
          type: array
          items:
            type: string
      - name: servlet.post.nodeNameHints
        in: query
        schema:
          type: array
          items:
            type: string
      - name: servlet.post.nodeNameMaxLength
        in: query
        schema:
          type: integer
      - name: servlet.post.checkinNewVersionableNodes
        in: query
        schema:
          type: boolean
      - name: servlet.post.autoCheckout
        in: query
        schema:
          type: boolean
      - name: servlet.post.autoCheckin
        in: query
        schema:
          type: boolean
      - name: servlet.post.ignorePattern
        in: query
        schema:
          type: string
      operationId: orgApacheSlingServletsPostImplSlingPostServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingServletsPostImplSlingPostServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.servlets.resolver.SlingServletResolver":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: servletresolver.servletRoot
        in: query
        schema:
          type: string
      - name: servletresolver.cacheSize
        in: query
        schema:
          type: integer
      - name: servletresolver.paths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: servletresolver.defaultExtensions
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingServletsResolverSlingServletResolver
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingServletsResolverSlingServletResolverInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.settings.impl.SlingSettingsServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.name
        in: query
        schema:
          type: string
      - name: sling.description
        in: query
        schema:
          type: string
      operationId: orgApacheSlingSettingsImplSlingSettingsServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingSettingsImplSlingSettingsServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.startupfilter.impl.StartupFilterImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: active.by.default
        in: query
        schema:
          type: boolean
      - name: default.message
        in: query
        schema:
          type: string
      operationId: orgApacheSlingStartupfilterImplStartupFilterImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingStartupfilterImplStartupFilterImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.tenant.internal.TenantProviderImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: tenant.root
        in: query
        schema:
          type: string
      - name: tenant.path.matcher
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingTenantInternalTenantProviderImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingTenantInternalTenantProviderImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.tracer.internal.LogTracer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: tracerSets
        in: query
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: servletEnabled
        in: query
        schema:
          type: boolean
      - name: recordingCacheSizeInMB
        in: query
        schema:
          type: integer
      - name: recordingCacheDurationInSecs
        in: query
        schema:
          type: integer
      - name: recordingCompressionEnabled
        in: query
        schema:
          type: boolean
      - name: gzipResponse
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingTracerInternalLogTracer
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingTracerInternalLogTracerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.xss.impl.XSSFilterImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: policyPath
        in: query
        schema:
          type: string
      operationId: orgApacheSlingXssImplXSSFilterImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingXssImplXSSFilterImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.audit.purge.Dam":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: auditlog.rule.name
        in: query
        schema:
          type: string
      - name: auditlog.rule.contentpath
        in: query
        schema:
          type: string
      - name: auditlog.rule.minimumage
        in: query
        schema:
          type: integer
      - name: auditlog.rule.types
        in: query
        schema:
          type: string
      operationId: comAdobeCqAuditPurgeDam
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqAuditPurgeDamInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.audit.purge.Pages":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: auditlog.rule.name
        in: query
        schema:
          type: string
      - name: auditlog.rule.contentpath
        in: query
        schema:
          type: string
      - name: auditlog.rule.minimumage
        in: query
        schema:
          type: integer
      - name: auditlog.rule.types
        in: query
        schema:
          type: string
      operationId: comAdobeCqAuditPurgePages
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqAuditPurgePagesInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.audit.purge.Replication":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: auditlog.rule.name
        in: query
        schema:
          type: string
      - name: auditlog.rule.contentpath
        in: query
        schema:
          type: string
      - name: auditlog.rule.minimumage
        in: query
        schema:
          type: integer
      - name: auditlog.rule.types
        in: query
        schema:
          type: string
      operationId: comAdobeCqAuditPurgeReplication
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqAuditPurgeReplicationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.dam.cfm.impl.component.ComponentConfigImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: dam.cfm.component.resourceType
        in: query
        schema:
          type: string
      - name: dam.cfm.component.fileReferenceProp
        in: query
        schema:
          type: string
      - name: dam.cfm.component.elementsProp
        in: query
        schema:
          type: string
      - name: dam.cfm.component.variationProp
        in: query
        schema:
          type: string
      operationId: comAdobeCqDamCfmImplComponentComponentConfigImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqDamCfmImplComponentComponentConfigImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.hc.ContentPackagesHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.name
        in: query
        schema:
          type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: hc.mbean.name
        in: query
        schema:
          type: string
      - name: package.names
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqHcContentPackagesHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqHcContentPackagesHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.projects.purge.Scheduler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduledpurge.name
        in: query
        schema:
          type: string
      - name: scheduledpurge.purgeActive
        in: query
        schema:
          type: boolean
      - name: scheduledpurge.templates
        in: query
        schema:
          type: array
          items:
            type: string
      - name: scheduledpurge.purgeGroups
        in: query
        schema:
          type: boolean
      - name: scheduledpurge.purgeAssets
        in: query
        schema:
          type: boolean
      - name: scheduledpurge.terminateRunningWorkflows
        in: query
        schema:
          type: boolean
      - name: scheduledpurge.daysold
        in: query
        schema:
          type: integer
      - name: scheduledpurge.saveThreshold
        in: query
        schema:
          type: integer
      operationId: comAdobeCqProjectsPurgeScheduler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqProjectsPurgeSchedulerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.commons.emailreply.impl.EmailReplyConfigurationImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: email.name
        in: query
        schema:
          type: string
      - name: email.createPostFromReply
        in: query
        schema:
          type: boolean
      - name: email.addCommentIdTo
        in: query
        schema:
          type: string
      - name: email.subjectMaximumLength
        in: query
        schema:
          type: integer
      - name: email.replyToAddress
        in: query
        schema:
          type: string
      - name: email.replyToDelimiter
        in: query
        schema:
          type: string
      - name: email.trackerIdPrefixInSubject
        in: query
        schema:
          type: string
      - name: email.trackerIdPrefixInBody
        in: query
        schema:
          type: string
      - name: email.asHTML
        in: query
        schema:
          type: boolean
      - name: email.defaultUserName
        in: query
        schema:
          type: string
      - name: email.templates.rootPath
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.datastore.as.impl.ASResourceProviderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: version.id
        in: query
        schema:
          type: string
      - name: cache.on
        in: query
        schema:
          type: boolean
      - name: concurrency.level
        in: query
        schema:
          type: integer
      - name: cache.start.size
        in: query
        schema:
          type: integer
      - name: cache.ttl
        in: query
        schema:
          type: integer
      - name: cache.size
        in: query
        schema:
          type: integer
      - name: time.limit
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialDatastoreAsImplASResourceProviderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.datastore.op.impl.SocialMSResourceProviderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: solr.zk.timeout
        in: query
        schema:
          type: string
      - name: solr.commit
        in: query
        schema:
          type: string
      - name: cache.on
        in: query
        schema:
          type: boolean
      - name: concurrency.level
        in: query
        schema:
          type: integer
      - name: cache.start.size
        in: query
        schema:
          type: integer
      - name: cache.ttl
        in: query
        schema:
          type: integer
      - name: cache.size
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.datastore.rdb.impl.SocialRDBResourceProviderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: solr.zk.timeout
        in: query
        schema:
          type: string
      - name: solr.commit
        in: query
        schema:
          type: string
      - name: cache.on
        in: query
        schema:
          type: boolean
      - name: concurrency.level
        in: query
        schema:
          type: integer
      - name: cache.start.size
        in: query
        schema:
          type: integer
      - name: cache.ttl
        in: query
        schema:
          type: integer
      - name: cache.size
        in: query
        schema:
          type: integer
      operationId: comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.messaging.client.endpoints.impl.MessagingOperationsServiceImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: message.properties
        in: query
        schema:
          type: array
          items:
            type: string
      - name: messageBoxSizeLimit
        in: query
        schema:
          type: integer
      - name: messageCountLimit
        in: query
        schema:
          type: integer
      - name: notifyFailure
        in: query
        schema:
          type: boolean
      - name: failureMessageFrom
        in: query
        schema:
          type: string
      - name: failureTemplatePath
        in: query
        schema:
          type: string
      - name: maxRetries
        in: query
        schema:
          type: integer
      - name: minWaitBetweenRetries
        in: query
        schema:
          type: integer
      - name: countUpdatePoolSize
        in: query
        schema:
          type: integer
      - name: inbox.path
        in: query
        schema:
          type: string
      - name: sentitems.path
        in: query
        schema:
          type: string
      - name: supportAttachments
        in: query
        schema:
          type: boolean
      - name: supportGroupMessaging
        in: query
        schema:
          type: boolean
      - name: maxTotalRecipients
        in: query
        schema:
          type: integer
      - name: batchSize
        in: query
        schema:
          type: integer
      - name: maxTotalAttachmentSize
        in: query
        schema:
          type: integer
      - name: attachmentTypeBlacklist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: allowedAttachmentTypes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: serviceSelector
        in: query
        schema:
          type: string
      - name: fieldWhitelist
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationsServiceImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationsServiceImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.srp.impl.SocialSolrConnector":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: srp.type
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialSrpImplSocialSolrConnector
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialSrpImplSocialSolrConnectorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.social.sync.impl.DiffChangesObserver":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: agentName
        in: query
        schema:
          type: string
      - name: diffPath
        in: query
        schema:
          type: string
      - name: propertyNames
        in: query
        schema:
          type: string
      operationId: comAdobeCqSocialSyncImplDiffChangesObserver
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqSocialSyncImplDiffChangesObserverInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.ui.wcm.commons.internal.servlets.rte.RTEFilterServletFactory.amended":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: resource.types
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactoryAmended
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactoryAmendedInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeContentCleanup":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: delete.path.regexps
        in: query
        schema:
          type: array
          items:
            type: string
      - name: delete.sql2.query
        in: query
        schema:
          type: string
      operationId: comAdobeCqUpgradesCleanupImplUpgradeContentCleanup
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.cq.upgrades.cleanup.impl.UpgradeInstallFolderCleanup":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: delete.name.regexps
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.ims.impl.IMSAccessTokenRequestCustomizerImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: auth.ims.client.secret
        in: query
        schema:
          type: string
      - name: customizer.type
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.accesstoken.provider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: auth.token.provider.title
        in: query
        schema:
          type: string
      - name: auth.token.provider.default.claims
        in: query
        schema:
          type: array
          items:
            type: string
      - name: auth.token.provider.endpoint
        in: query
        schema:
          type: string
      - name: auth.access.token.request
        in: query
        schema:
          type: string
      - name: auth.token.provider.keypair.alias
        in: query
        schema:
          type: string
      - name: auth.token.provider.conn.timeout
        in: query
        schema:
          type: integer
      - name: auth.token.provider.so.timeout
        in: query
        schema:
          type: integer
      - name: auth.token.provider.client.id
        in: query
        schema:
          type: string
      - name: auth.token.provider.scope
        in: query
        schema:
          type: string
      - name: auth.token.provider.reuse.access.token
        in: query
        schema:
          type: boolean
      - name: auth.token.provider.relaxed.ssl
        in: query
        schema:
          type: boolean
      - name: token.request.customizer.type
        in: query
        schema:
          type: string
      - name: auth.token.validator.type
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthOauthAccesstokenProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthAccesstokenProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.oauth.provider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: oauth.config.id
        in: query
        schema:
          type: string
      - name: oauth.client.id
        in: query
        schema:
          type: string
      - name: oauth.client.secret
        in: query
        schema:
          type: string
      - name: oauth.scope
        in: query
        schema:
          type: array
          items:
            type: string
      - name: oauth.config.provider.id
        in: query
        schema:
          type: string
      - name: oauth.create.users
        in: query
        schema:
          type: boolean
      - name: oauth.userid.property
        in: query
        schema:
          type: string
      - name: force.strict.username.matching
        in: query
        schema:
          type: boolean
      - name: oauth.encode.userids
        in: query
        schema:
          type: boolean
      - name: oauth.hash.userids
        in: query
        schema:
          type: boolean
      - name: oauth.callBackUrl
        in: query
        schema:
          type: string
      - name: oauth.access.token.persist
        in: query
        schema:
          type: boolean
      - name: oauth.access.token.persist.cookie
        in: query
        schema:
          type: boolean
      - name: oauth.csrf.state.protection
        in: query
        schema:
          type: boolean
      - name: oauth.redirect.request.params
        in: query
        schema:
          type: boolean
      - name: oauth.config.siblings.allow
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteAuthOauthProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthOauthProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: idpUrl
        in: query
        schema:
          type: string
      - name: idpCertAlias
        in: query
        schema:
          type: string
      - name: idpHttpRedirect
        in: query
        schema:
          type: boolean
      - name: serviceProviderEntityId
        in: query
        schema:
          type: string
      - name: assertionConsumerServiceURL
        in: query
        schema:
          type: string
      - name: spPrivateKeyAlias
        in: query
        schema:
          type: string
      - name: keyStorePassword
        in: query
        schema:
          type: string
      - name: defaultRedirectUrl
        in: query
        schema:
          type: string
      - name: userIDAttribute
        in: query
        schema:
          type: string
      - name: useEncryption
        in: query
        schema:
          type: boolean
      - name: createUser
        in: query
        schema:
          type: boolean
      - name: userIntermediatePath
        in: query
        schema:
          type: string
      - name: addGroupMemberships
        in: query
        schema:
          type: boolean
      - name: groupMembershipAttribute
        in: query
        schema:
          type: string
      - name: defaultGroups
        in: query
        schema:
          type: array
          items:
            type: string
      - name: nameIdFormat
        in: query
        schema:
          type: string
      - name: synchronizeAttributes
        in: query
        schema:
          type: array
          items:
            type: string
      - name: handleLogout
        in: query
        schema:
          type: boolean
      - name: logoutUrl
        in: query
        schema:
          type: string
      - name: clockTolerance
        in: query
        schema:
          type: integer
      - name: digestMethod
        in: query
        schema:
          type: string
      - name: signatureMethod
        in: query
        schema:
          type: string
      - name: identitySyncType
        in: query
        schema:
          type: string
      - name: idpIdentifier
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteAuthSamlSamlAuthenticationHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.compatrouter.impl.RoutingConfig":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: id
        in: query
        schema:
          type: string
      - name: compatPath
        in: query
        schema:
          type: string
      - name: newPath
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteCompatrouterImplRoutingConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteCompatrouterImplRoutingConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.compatrouter.impl.SwitchMappingConfig":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: group
        in: query
        schema:
          type: string
      - name: ids
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteCompatrouterImplSwitchMappingConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteCompatrouterImplSwitchMappingConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.cors.impl.CORSPolicyImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: alloworigin
        in: query
        schema:
          type: array
          items:
            type: string
      - name: alloworiginregexp
        in: query
        schema:
          type: array
          items:
            type: string
      - name: allowedpaths
        in: query
        schema:
          type: array
          items:
            type: string
      - name: exposedheaders
        in: query
        schema:
          type: array
          items:
            type: string
      - name: maxage
        in: query
        schema:
          type: integer
      - name: supportedheaders
        in: query
        schema:
          type: array
          items:
            type: string
      - name: supportedmethods
        in: query
        schema:
          type: array
          items:
            type: string
      - name: supportscredentials
        in: query
        schema:
          type: boolean
      operationId: comAdobeGraniteCorsImplCORSPolicyImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteCorsImplCORSPolicyImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: username
        in: query
        schema:
          type: string
      - name: encryptedPassword
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSecretProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSecretProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: agentName
        in: query
        schema:
          type: string
      - name: diffPath
        in: query
        schema:
          type: string
      - name: observedPath
        in: query
        schema:
          type: string
      - name: serviceName
        in: query
        schema:
          type: string
      - name: propertyNames
        in: query
        schema:
          type: string
      - name: distributionDelay
        in: query
        schema:
          type: integer
      - name: serviceUser.target
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteDistributionCoreImplDiffDiffChangesObserver
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.distribution.core.impl.diff.DiffEventListener":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: diffPath
        in: query
        schema:
          type: string
      - name: serviceName
        in: query
        schema:
          type: string
      - name: serviceUser.target
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteDistributionCoreImplDiffDiffEventListener
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.distribution.core.impl.DistributionToReplicationEventTransformer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: importer.name
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteDistributionCoreImplDistributionToReplicationEventTransformer
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplDistributionToReplicationEventTransformerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: serviceName
        in: query
        schema:
          type: string
      - name: userId
        in: query
        schema:
          type: string
      - name: accessTokenProvider.target
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteDistributionCoreImplTransportAccessTokenDistributionTransportSecretProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplTransportAccessTokenDistributionTransportSecretProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.frags.impl.CheckHttpHeaderFlag":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: feature.name
        in: query
        schema:
          type: string
      - name: feature.description
        in: query
        schema:
          type: string
      - name: http.header.name
        in: query
        schema:
          type: string
      - name: http.header.valuepattern
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteFragsImplCheckHttpHeaderFlag
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteFragsImplCheckHttpHeaderFlagInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.frags.impl.RandomFeature":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: feature.name
        in: query
        schema:
          type: string
      - name: feature.description
        in: query
        schema:
          type: string
      - name: active.percentage
        in: query
        schema:
          type: string
      - name: cookie.name
        in: query
        schema:
          type: string
      - name: cookie.maxAge
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteFragsImplRandomFeature
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteFragsImplRandomFeatureInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.maintenance.crx.impl.RevisionCleanupTask":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: full.gc.days
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteMaintenanceCrxImplRevisionCleanupTask
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.monitoring.impl.ScriptConfigImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: script.filename
        in: query
        schema:
          type: string
      - name: script.display
        in: query
        schema:
          type: string
      - name: script.path
        in: query
        schema:
          type: string
      - name: script.platform
        in: query
        schema:
          type: array
          items:
            type: string
      - name: interval
        in: query
        schema:
          type: integer
      - name: jmxdomain
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteMonitoringImplScriptConfigImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteMonitoringImplScriptConfigImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.repository.ServiceUserConfiguration":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: serviceusers.simpleSubjectPopulation
        in: query
        schema:
          type: boolean
      - name: serviceusers.list
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteRepositoryServiceUserConfiguration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteRepositoryServiceUserConfigurationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.resourcestatus.impl.CompositeStatusType":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: types
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comAdobeGraniteResourcestatusImplCompositeStatusType
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteResourcestatusImplCompositeStatusTypeInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.core.offloading.WorkflowOffloadingJobConsumer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: job.topics
        in: query
        schema:
          type: string
      operationId: comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumer
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.adobe.granite.workflow.purge.Scheduler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: scheduledpurge.name
        in: query
        schema:
          type: string
      - name: scheduledpurge.workflowStatus
        in: query
        schema:
          type: string
      - name: scheduledpurge.modelIds
        in: query
        schema:
          type: array
          items:
            type: string
      - name: scheduledpurge.daysold
        in: query
        schema:
          type: integer
      operationId: comAdobeGraniteWorkflowPurgeScheduler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comAdobeGraniteWorkflowPurgeSchedulerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.commons.datasource.jdbcpool.JdbcPoolService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: jdbc.driver.class
        in: query
        schema:
          type: string
      - name: jdbc.connection.uri
        in: query
        schema:
          type: string
      - name: jdbc.username
        in: query
        schema:
          type: string
      - name: jdbc.password
        in: query
        schema:
          type: string
      - name: jdbc.validation.query
        in: query
        schema:
          type: string
      - name: default.readonly
        in: query
        schema:
          type: boolean
      - name: default.autocommit
        in: query
        schema:
          type: boolean
      - name: pool.size
        in: query
        schema:
          type: integer
      - name: pool.max.wait.msec
        in: query
        schema:
          type: integer
      - name: datasource.name
        in: query
        schema:
          type: string
      - name: datasource.svc.properties
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCommonsDatasourceJdbcpoolJdbcPoolService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.dam.stock.integration.impl.configuration.StockConfigurationImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      - name: imsConfig
        in: query
        schema:
          type: string
      operationId: comDayCqDamStockIntegrationImplConfigurationStockConfigurationImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqDamStockIntegrationImplConfigurationStockConfigurationImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.mcm.impl.MCMConfiguration":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: experience.indirection
        in: query
        schema:
          type: array
          items:
            type: string
      - name: touchpoint.indirection
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqMcmImplMCMConfiguration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqMcmImplMCMConfigurationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.polling.importer.impl.ManagedPollConfigImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: id
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: reference
        in: query
        schema:
          type: boolean
      - name: interval
        in: query
        schema:
          type: integer
      - name: expression
        in: query
        schema:
          type: string
      - name: source
        in: query
        schema:
          type: string
      - name: target
        in: query
        schema:
          type: string
      - name: login
        in: query
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      operationId: comDayCqPollingImporterImplManagedPollConfigImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqPollingImporterImplManagedPollConfigImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.core.impl.LinkCheckerConfigurationFactoryImpl":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: link.expired.prefix
        in: query
        schema:
          type: string
      - name: link.expired.remove
        in: query
        schema:
          type: boolean
      - name: link.expired.suffix
        in: query
        schema:
          type: string
      - name: link.invalid.prefix
        in: query
        schema:
          type: string
      - name: link.invalid.remove
        in: query
        schema:
          type: boolean
      - name: link.invalid.suffix
        in: query
        schema:
          type: string
      - name: link.predated.prefix
        in: query
        schema:
          type: string
      - name: link.predated.remove
        in: query
        schema:
          type: boolean
      - name: link.predated.suffix
        in: query
        schema:
          type: string
      - name: link.wcmmodes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.FormParagraphPostProcessor":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: forms.formparagraphpostprocessor.enabled
        in: query
        schema:
          type: boolean
      - name: forms.formparagraphpostprocessor.formresourcetypes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: comDayCqWcmFoundationFormsImplFormParagraphPostProcessor
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/com.day.cq.wcm.foundation.forms.impl.MailServlet":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: sling.servlet.resourceTypes
        in: query
        schema:
          type: string
      - name: sling.servlet.selectors
        in: query
        schema:
          type: string
      - name: resource.whitelist
        in: query
        schema:
          type: array
          items:
            type: string
      - name: resource.blacklist
        in: query
        schema:
          type: string
      operationId: comDayCqWcmFoundationFormsImplMailServlet
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comDayCqWcmFoundationFormsImplMailServletInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.felix.jaas.Configuration.factory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: jaas.controlFlag
        in: query
        schema:
          type: string
      - name: jaas.ranking
        in: query
        schema:
          type: integer
      - name: jaas.realmName
        in: query
        schema:
          type: string
      - name: jaas.classname
        in: query
        schema:
          type: string
      - name: jaas.options
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheFelixJaasConfigurationFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheFelixJaasConfigurationFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.http.proxyconfigurator":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: proxy.enabled
        in: query
        schema:
          type: boolean
      - name: proxy.host
        in: query
        schema:
          type: string
      - name: proxy.port
        in: query
        schema:
          type: integer
      - name: proxy.user
        in: query
        schema:
          type: string
      - name: proxy.password
        in: query
        schema:
          type: string
      - name: proxy.exceptions
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheHttpProxyconfigurator
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheHttpProxyconfiguratorInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: provider.name
        in: query
        schema:
          type: string
      - name: host.name
        in: query
        schema:
          type: string
      - name: host.port
        in: query
        schema:
          type: integer
      - name: host.ssl
        in: query
        schema:
          type: boolean
      - name: host.tls
        in: query
        schema:
          type: boolean
      - name: host.noCertCheck
        in: query
        schema:
          type: boolean
      - name: bind.dn
        in: query
        schema:
          type: string
      - name: bind.password
        in: query
        schema:
          type: string
      - name: searchTimeout
        in: query
        schema:
          type: string
      - name: adminPool.maxActive
        in: query
        schema:
          type: integer
      - name: adminPool.lookupOnValidate
        in: query
        schema:
          type: boolean
      - name: userPool.maxActive
        in: query
        schema:
          type: integer
      - name: userPool.lookupOnValidate
        in: query
        schema:
          type: boolean
      - name: user.baseDN
        in: query
        schema:
          type: string
      - name: user.objectclass
        in: query
        schema:
          type: array
          items:
            type: string
      - name: user.idAttribute
        in: query
        schema:
          type: string
      - name: user.extraFilter
        in: query
        schema:
          type: string
      - name: user.makeDnPath
        in: query
        schema:
          type: boolean
      - name: group.baseDN
        in: query
        schema:
          type: string
      - name: group.objectclass
        in: query
        schema:
          type: array
          items:
            type: string
      - name: group.nameAttribute
        in: query
        schema:
          type: string
      - name: group.extraFilter
        in: query
        schema:
          type: string
      - name: group.makeDnPath
        in: query
        schema:
          type: boolean
      - name: group.memberAttribute
        in: query
        schema:
          type: string
      - name: useUidForExtId
        in: query
        schema:
          type: boolean
      - name: customattributes
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.segment.SegmentNodeStoreFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: repository.home
        in: query
        schema:
          type: string
      - name: tarmk.mode
        in: query
        schema:
          type: string
      - name: tarmk.size
        in: query
        schema:
          type: integer
      - name: segmentCache.size
        in: query
        schema:
          type: integer
      - name: stringCache.size
        in: query
        schema:
          type: integer
      - name: templateCache.size
        in: query
        schema:
          type: integer
      - name: stringDeduplicationCache.size
        in: query
        schema:
          type: integer
      - name: templateDeduplicationCache.size
        in: query
        schema:
          type: integer
      - name: nodeDeduplicationCache.size
        in: query
        schema:
          type: integer
      - name: pauseCompaction
        in: query
        schema:
          type: boolean
      - name: compaction.retryCount
        in: query
        schema:
          type: integer
      - name: compaction.force.timeout
        in: query
        schema:
          type: integer
      - name: compaction.sizeDeltaEstimation
        in: query
        schema:
          type: integer
      - name: compaction.disableEstimation
        in: query
        schema:
          type: boolean
      - name: compaction.retainedGenerations
        in: query
        schema:
          type: integer
      - name: compaction.memoryThreshold
        in: query
        schema:
          type: integer
      - name: compaction.progressLog
        in: query
        schema:
          type: integer
      - name: standby
        in: query
        schema:
          type: boolean
      - name: customBlobStore
        in: query
        schema:
          type: boolean
      - name: customSegmentStore
        in: query
        schema:
          type: boolean
      - name: splitPersistence
        in: query
        schema:
          type: boolean
      - name: repository.backup.dir
        in: query
        schema:
          type: string
      - name: blobGcMaxAgeInSecs
        in: query
        schema:
          type: integer
      - name: blobTrackSnapshotIntervalInSecs
        in: query
        schema:
          type: integer
      - name: role
        in: query
        schema:
          type: string
      - name: registerDescriptors
        in: query
        schema:
          type: boolean
      - name: dispatchChanges
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakSegmentSegmentNodeStoreFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.DefaultSyncHandler":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: handler.name
        in: query
        schema:
          type: string
      - name: user.expirationTime
        in: query
        schema:
          type: string
      - name: user.autoMembership
        in: query
        schema:
          type: array
          items:
            type: string
      - name: user.propertyMapping
        in: query
        schema:
          type: array
          items:
            type: string
      - name: user.pathPrefix
        in: query
        schema:
          type: string
      - name: user.membershipExpTime
        in: query
        schema:
          type: string
      - name: user.membershipNestingDepth
        in: query
        schema:
          type: integer
      - name: user.dynamicMembership
        in: query
        schema:
          type: boolean
      - name: user.disableMissing
        in: query
        schema:
          type: boolean
      - name: group.expirationTime
        in: query
        schema:
          type: string
      - name: group.autoMembership
        in: query
        schema:
          type: array
          items:
            type: string
      - name: group.propertyMapping
        in: query
        schema:
          type: array
          items:
            type: string
      - name: group.pathPrefix
        in: query
        schema:
          type: string
      - name: enableRFC7613UsercaseMappedProfile
        in: query
        schema:
          type: boolean
      operationId: orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDefaultSyncHandler
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDefaultSyncHandlerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.jackrabbit.oak.spi.security.authentication.external.impl.ExternalLoginModuleFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: jaas.ranking
        in: query
        schema:
          type: integer
      - name: jaas.controlFlag
        in: query
        schema:
          type: string
      - name: jaas.realmName
        in: query
        schema:
          type: string
      - name: idp.name
        in: query
        schema:
          type: string
      - name: sync.handlerName
        in: query
        schema:
          type: string
      operationId: orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExternalLoginModuleFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExternalLoginModuleFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.caconfig.impl.override.OsgiConfigurationOverrideProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: description
        in: query
        schema:
          type: string
      - name: overrides
        in: query
        schema:
          type: array
          items:
            type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.config":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.commons.log.level
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.file
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.pattern
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.names
        in: query
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.commons.log.additiv
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingCommonsLogLogManagerFactoryConfig
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsLogLogManagerFactoryConfigInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.log.LogManager.factory.writer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: org.apache.sling.commons.log.file
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.file.number
        in: query
        schema:
          type: integer
      - name: org.apache.sling.commons.log.file.size
        in: query
        schema:
          type: string
      - name: org.apache.sling.commons.log.file.buffered
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingCommonsLogLogManagerFactoryWriter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsLogLogManagerFactoryWriterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.metrics.internal.LogReporter":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: period
        in: query
        schema:
          type: integer
      - name: timeUnit
        in: query
        schema:
          type: string
      - name: level
        in: query
        schema:
          type: string
      - name: loggerName
        in: query
        schema:
          type: string
      - name: prefix
        in: query
        schema:
          type: string
      - name: pattern
        in: query
        schema:
          type: string
      - name: registryName
        in: query
        schema:
          type: string
      operationId: orgApacheSlingCommonsMetricsInternalLogReporter
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsMetricsInternalLogReporterInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.commons.threads.impl.DefaultThreadPool.factory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: minPoolSize
        in: query
        schema:
          type: integer
      - name: maxPoolSize
        in: query
        schema:
          type: integer
      - name: queueSize
        in: query
        schema:
          type: integer
      - name: maxThreadAge
        in: query
        schema:
          type: integer
      - name: keepAliveTime
        in: query
        schema:
          type: integer
      - name: blockPolicy
        in: query
        schema:
          type: string
      - name: shutdownGraceful
        in: query
        schema:
          type: boolean
      - name: daemon
        in: query
        schema:
          type: boolean
      - name: shutdownWaitTime
        in: query
        schema:
          type: integer
      - name: priority
        in: query
        schema:
          type: string
      operationId: orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.datasource.DataSourceFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: datasource.name
        in: query
        schema:
          type: string
      - name: datasource.svc.prop.name
        in: query
        schema:
          type: string
      - name: driverClassName
        in: query
        schema:
          type: string
      - name: url
        in: query
        schema:
          type: string
      - name: username
        in: query
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      - name: defaultAutoCommit
        in: query
        schema:
          type: string
      - name: defaultReadOnly
        in: query
        schema:
          type: string
      - name: defaultTransactionIsolation
        in: query
        schema:
          type: string
      - name: defaultCatalog
        in: query
        schema:
          type: string
      - name: maxActive
        in: query
        schema:
          type: integer
      - name: maxIdle
        in: query
        schema:
          type: integer
      - name: minIdle
        in: query
        schema:
          type: integer
      - name: initialSize
        in: query
        schema:
          type: integer
      - name: maxWait
        in: query
        schema:
          type: integer
      - name: maxAge
        in: query
        schema:
          type: integer
      - name: testOnBorrow
        in: query
        schema:
          type: boolean
      - name: testOnReturn
        in: query
        schema:
          type: boolean
      - name: testWhileIdle
        in: query
        schema:
          type: boolean
      - name: validationQuery
        in: query
        schema:
          type: string
      - name: validationQueryTimeout
        in: query
        schema:
          type: integer
      - name: timeBetweenEvictionRunsMillis
        in: query
        schema:
          type: integer
      - name: minEvictableIdleTimeMillis
        in: query
        schema:
          type: integer
      - name: connectionProperties
        in: query
        schema:
          type: string
      - name: initSQL
        in: query
        schema:
          type: string
      - name: jdbcInterceptors
        in: query
        schema:
          type: string
      - name: validationInterval
        in: query
        schema:
          type: integer
      - name: logValidationErrors
        in: query
        schema:
          type: boolean
      - name: datasource.svc.properties
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingDatasourceDataSourceFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDatasourceDataSourceFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.datasource.JNDIDataSourceFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: datasource.name
        in: query
        schema:
          type: string
      - name: datasource.svc.prop.name
        in: query
        schema:
          type: string
      - name: datasource.jndi.name
        in: query
        schema:
          type: string
      - name: jndi.properties
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingDatasourceJNDIDataSourceFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDatasourceJNDIDataSourceFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.agent.impl.ForwardDistributionAgentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: title
        in: query
        schema:
          type: string
      - name: details
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: serviceName
        in: query
        schema:
          type: string
      - name: log.level
        in: query
        schema:
          type: string
      - name: allowed.roots
        in: query
        schema:
          type: array
          items:
            type: string
      - name: queue.processing.enabled
        in: query
        schema:
          type: boolean
      - name: packageImporter.endpoints
        in: query
        schema:
          type: array
          items:
            type: string
      - name: passiveQueues
        in: query
        schema:
          type: array
          items:
            type: string
      - name: priorityQueues
        in: query
        schema:
          type: array
          items:
            type: string
      - name: retry.strategy
        in: query
        schema:
          type: string
      - name: retry.attempts
        in: query
        schema:
          type: integer
      - name: requestAuthorizationStrategy.target
        in: query
        schema:
          type: string
      - name: transportSecretProvider.target
        in: query
        schema:
          type: string
      - name: packageBuilder.target
        in: query
        schema:
          type: string
      - name: triggers.target
        in: query
        schema:
          type: string
      - name: queue.provider
        in: query
        schema:
          type: string
      - name: async.delivery
        in: query
        schema:
          type: boolean
      - name: http.conn.timeout
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingDistributionAgentImplForwardDistributionAgentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.agent.impl.PrivilegeDistributionRequestAuthorizationStrategyFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: jcrPrivilege
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAuthorizationStrategyFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAuthorizationStrategyFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.agent.impl.QueueDistributionAgentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: title
        in: query
        schema:
          type: string
      - name: details
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: serviceName
        in: query
        schema:
          type: string
      - name: log.level
        in: query
        schema:
          type: string
      - name: allowed.roots
        in: query
        schema:
          type: array
          items:
            type: string
      - name: requestAuthorizationStrategy.target
        in: query
        schema:
          type: string
      - name: queueProviderFactory.target
        in: query
        schema:
          type: string
      - name: packageBuilder.target
        in: query
        schema:
          type: string
      - name: triggers.target
        in: query
        schema:
          type: string
      - name: priorityQueues
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingDistributionAgentImplQueueDistributionAgentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.agent.impl.ReverseDistributionAgentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: title
        in: query
        schema:
          type: string
      - name: details
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: serviceName
        in: query
        schema:
          type: string
      - name: log.level
        in: query
        schema:
          type: string
      - name: queue.processing.enabled
        in: query
        schema:
          type: boolean
      - name: packageExporter.endpoints
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pull.items
        in: query
        schema:
          type: integer
      - name: http.conn.timeout
        in: query
        schema:
          type: integer
      - name: requestAuthorizationStrategy.target
        in: query
        schema:
          type: string
      - name: transportSecretProvider.target
        in: query
        schema:
          type: string
      - name: packageBuilder.target
        in: query
        schema:
          type: string
      - name: triggers.target
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionAgentImplReverseDistributionAgentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.agent.impl.SimpleDistributionAgentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: title
        in: query
        schema:
          type: string
      - name: details
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: serviceName
        in: query
        schema:
          type: string
      - name: log.level
        in: query
        schema:
          type: string
      - name: queue.processing.enabled
        in: query
        schema:
          type: boolean
      - name: packageExporter.target
        in: query
        schema:
          type: string
      - name: packageImporter.target
        in: query
        schema:
          type: string
      - name: requestAuthorizationStrategy.target
        in: query
        schema:
          type: string
      - name: triggers.target
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.agent.impl.SyncDistributionAgentFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: title
        in: query
        schema:
          type: string
      - name: details
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      - name: serviceName
        in: query
        schema:
          type: string
      - name: log.level
        in: query
        schema:
          type: string
      - name: queue.processing.enabled
        in: query
        schema:
          type: boolean
      - name: passiveQueues
        in: query
        schema:
          type: array
          items:
            type: string
      - name: packageExporter.endpoints
        in: query
        schema:
          type: array
          items:
            type: string
      - name: packageImporter.endpoints
        in: query
        schema:
          type: array
          items:
            type: string
      - name: retry.strategy
        in: query
        schema:
          type: string
      - name: retry.attempts
        in: query
        schema:
          type: integer
      - name: pull.items
        in: query
        schema:
          type: integer
      - name: http.conn.timeout
        in: query
        schema:
          type: integer
      - name: requestAuthorizationStrategy.target
        in: query
        schema:
          type: string
      - name: transportSecretProvider.target
        in: query
        schema:
          type: string
      - name: packageBuilder.target
        in: query
        schema:
          type: string
      - name: triggers.target
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionAgentImplSyncDistributionAgentFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.AgentDistributionPackageExporterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: queue
        in: query
        schema:
          type: string
      - name: drop.invalid.items
        in: query
        schema:
          type: boolean
      - name: agent.target
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionPackagingImplExporterAgentDistributionPackageExporterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplExporterAgentDistributionPackageExporterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.LocalDistributionPackageExporterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: packageBuilder.target
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionPackagingImplExporterLocalDistributionPackageExporterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplExporterLocalDistributionPackageExporterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.exporter.RemoteDistributionPackageExporterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: endpoints
        in: query
        schema:
          type: array
          items:
            type: string
      - name: pull.items
        in: query
        schema:
          type: integer
      - name: packageBuilder.target
        in: query
        schema:
          type: string
      - name: transportSecretProvider.target
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionPackagingImplExporterRemoteDistributionPackageExporterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplExporterRemoteDistributionPackageExporterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.LocalDistributionPackageImporterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: packageBuilder.target
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionPackagingImplImporterLocalDistributionPackageImporterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplImporterLocalDistributionPackageImporterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RemoteDistributionPackageImporterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: endpoints
        in: query
        schema:
          type: array
          items:
            type: string
      - name: transportSecretProvider.target
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionPackagingImplImporterRemoteDistributionPackageImporterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplImporterRemoteDistributionPackageImporterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.packaging.impl.importer.RepositoryDistributionPackageImporterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: service.name
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      - name: privilege.name
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionPackagingImplImporterRepositoryDistributionPackageImporterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplImporterRepositoryDistributionPackageImporterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionConfigurationResourceProviderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: provider.roots
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionResourcesImplDistributionConfigurationResourceProviderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionResourcesImplDistributionConfigurationResourceProviderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.resources.impl.DistributionServiceResourceProviderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: provider.roots
        in: query
        schema:
          type: string
      - name: kind
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionResourcesImplDistributionServiceResourceProviderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionResourcesImplDistributionServiceResourceProviderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.serialization.impl.DistributionPackageBuilderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      - name: format.target
        in: query
        schema:
          type: string
      - name: tempFsFolder
        in: query
        schema:
          type: string
      - name: fileThreshold
        in: query
        schema:
          type: integer
      - name: memoryUnit
        in: query
        schema:
          type: string
      - name: useOffHeapMemory
        in: query
        schema:
          type: boolean
      - name: digestAlgorithm
        in: query
        schema:
          type: string
      - name: monitoringQueueSize
        in: query
        schema:
          type: integer
      - name: cleanupDelay
        in: query
        schema:
          type: integer
      - name: package.filters
        in: query
        schema:
          type: array
          items:
            type: string
      - name: property.filters
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingDistributionSerializationImplDistributionPackageBuilderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionSerializationImplDistributionPackageBuilderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.serialization.impl.vlt.VaultDistributionPackageBuilderFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      - name: importMode
        in: query
        schema:
          type: string
      - name: aclHandling
        in: query
        schema:
          type: string
      - name: package.roots
        in: query
        schema:
          type: string
      - name: package.filters
        in: query
        schema:
          type: array
          items:
            type: string
      - name: property.filters
        in: query
        schema:
          type: array
          items:
            type: string
      - name: tempFsFolder
        in: query
        schema:
          type: string
      - name: useBinaryReferences
        in: query
        schema:
          type: boolean
      - name: autoSaveThreshold
        in: query
        schema:
          type: integer
      - name: cleanupDelay
        in: query
        schema:
          type: integer
      - name: fileThreshold
        in: query
        schema:
          type: integer
      - name: MEGA_BYTES
        in: query
        schema:
          type: string
      - name: useOffHeapMemory
        in: query
        schema:
          type: boolean
      - name: digestAlgorithm
        in: query
        schema:
          type: string
      - name: monitoringQueueSize
        in: query
        schema:
          type: integer
      - name: pathsMapping
        in: query
        schema:
          type: array
          items:
            type: string
      - name: strictImport
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.transport.impl.UserCredentialsDistributionTransportSecretProvider":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: username
        in: query
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionTransportImplUserCredentialsDistributionTransportSecretProvider
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionTransportImplUserCredentialsDistributionTransportSecretProviderInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.DistributionEventDistributeDistributionTriggerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionTriggerImplDistributionEventDistributeDistributionTriggerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplDistributionEventDistributeDistributionTriggerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.JcrEventDistributionTriggerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      - name: ignoredPathsPatterns
        in: query
        schema:
          type: array
          items:
            type: string
      - name: serviceName
        in: query
        schema:
          type: string
      - name: deep
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.PersistedJcrEventDistributionTriggerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      - name: serviceName
        in: query
        schema:
          type: string
      - name: nuggetsPath
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributionTriggerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributionTriggerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.RemoteEventDistributionTriggerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: endpoint
        in: query
        schema:
          type: string
      - name: transportSecretProvider.target
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionTriggerImplRemoteEventDistributionTriggerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplRemoteEventDistributionTriggerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.ResourceEventDistributionTriggerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionTriggerImplResourceEventDistributionTriggerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplResourceEventDistributionTriggerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.distribution.trigger.impl.ScheduledDistributionTriggerFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      - name: seconds
        in: query
        schema:
          type: string
      - name: serviceName
        in: query
        schema:
          type: string
      operationId: orgApacheSlingDistributionTriggerImplScheduledDistributionTriggerFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplScheduledDistributionTriggerFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.engine.impl.log.RequestLoggerService":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: request.log.service.format
        in: query
        schema:
          type: string
      - name: request.log.service.output
        in: query
        schema:
          type: string
      - name: request.log.service.outputtype
        in: query
        schema:
          type: integer
      - name: request.log.service.onentry
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingEngineImplLogRequestLoggerService
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEngineImplLogRequestLoggerServiceInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.event.jobs.QueueConfiguration":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: queue.name
        in: query
        schema:
          type: string
      - name: queue.topics
        in: query
        schema:
          type: array
          items:
            type: string
      - name: queue.type
        in: query
        schema:
          type: string
      - name: queue.priority
        in: query
        schema:
          type: string
      - name: queue.retries
        in: query
        schema:
          type: integer
      - name: queue.retrydelay
        in: query
        schema:
          type: integer
      - name: queue.maxparallel
        in: query
        schema:
          type: number
      - name: queue.keepJobs
        in: query
        schema:
          type: boolean
      - name: queue.preferRunOnCreationInstance
        in: query
        schema:
          type: boolean
      - name: queue.threadPoolSize
        in: query
        schema:
          type: integer
      - name: service.ranking
        in: query
        schema:
          type: integer
      operationId: orgApacheSlingEventJobsQueueConfiguration
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingEventJobsQueueConfigurationInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.featureflags.Feature":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: description
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingFeatureflagsFeature
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingFeatureflagsFeatureInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.featureflags.impl.ConfiguredFeature":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        schema:
          type: string
      - name: description
        in: query
        schema:
          type: string
      - name: enabled
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingFeatureflagsImplConfiguredFeature
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingFeatureflagsImplConfiguredFeatureInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.hc.core.impl.CompositeHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.name
        in: query
        schema:
          type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: hc.mbean.name
        in: query
        schema:
          type: string
      - name: filter.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: filter.combineTagsWithOr
        in: query
        schema:
          type: boolean
      operationId: orgApacheSlingHcCoreImplCompositeHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingHcCoreImplCompositeHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.hc.core.impl.JmxAttributeHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.name
        in: query
        schema:
          type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: hc.mbean.name
        in: query
        schema:
          type: string
      - name: mbean.name
        in: query
        schema:
          type: string
      - name: attribute.name
        in: query
        schema:
          type: string
      - name: attribute.value.constraint
        in: query
        schema:
          type: string
      operationId: orgApacheSlingHcCoreImplJmxAttributeHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.hc.core.impl.ScriptableHealthCheck":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: hc.name
        in: query
        schema:
          type: string
      - name: hc.tags
        in: query
        schema:
          type: array
          items:
            type: string
      - name: hc.mbean.name
        in: query
        schema:
          type: string
      - name: expression
        in: query
        schema:
          type: string
      - name: language.extension
        in: query
        schema:
          type: string
      operationId: orgApacheSlingHcCoreImplScriptableHealthCheck
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingHcCoreImplScriptableHealthCheckInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.base.internal.LoginAdminWhitelist.fragment":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: whitelist.name
        in: query
        schema:
          type: string
      - name: whitelist.bundles
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.repoinit.RepositoryInitializer":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: references
        in: query
        schema:
          type: array
          items:
            type: string
      - name: scripts
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingJcrRepoinitRepositoryInitializer
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrRepoinitRepositoryInitializerInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.jcr.resourcesecurity.impl.ResourceAccessGateFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: path
        in: query
        schema:
          type: string
      - name: checkpath.prefix
        in: query
        schema:
          type: string
      - name: jcrPath
        in: query
        schema:
          type: string
      operationId: orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.resource.inventory.impl.ResourceInventoryPrinterFactory":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: felix.inventory.printer.name
        in: query
        schema:
          type: string
      - name: felix.inventory.printer.title
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      operationId: orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactory
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoryInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
  "/system/console/configMgr/org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended":
    post:
      parameters:
      - name: post
        in: query
        schema:
          type: boolean
      - name: apply
        in: query
        schema:
          type: boolean
      - name: delete
        in: query
        schema:
          type: boolean
      - name: action
        in: query
        schema:
          type: string
      - name: "$location"
        in: query
        schema:
          type: string
      - name: propertylist
        in: query
        style: form
        explode: 'false'
        schema:
          type: array
          items:
            type: string
      - name: service.ranking
        in: query
        schema:
          type: integer
      - name: user.mapping
        in: query
        schema:
          type: array
          items:
            type: string
      operationId: orgApacheSlingServiceusermappingImplServiceUserMapperImplAmended
      tags:
      - configmgr
      responses:
        '200':
          description: Successfully retrieved configuration parameters
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo"
        default:
          description: Default response
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    configNodePropertyInteger:
      type: object
      properties:
        name:
          description: property name
          type: string
        optional:
          description: True if optional
          type: boolean
        is_set:
          description: True if property is set
          type: boolean
        type:
          description: Property type, 1=String, 2=Long, 3=Integer, 7=Float, 11=Boolean,
            12=Secrets(String)
          type: integer
        values:
          description: Property value
          type: integer
        description:
          description: Property description
          type: string
    configNodePropertyFloat:
      type: object
      properties:
        name:
          description: property name
          type: string
        optional:
          description: True if optional
          type: boolean
        is_set:
          description: True if property is set
          type: boolean
        type:
          description: Property type, 1=String, 2=Long, 3=Integer, 7=Float, 11=Boolean,
            12=Secrets(String)
          type: integer
        values:
          description: Property value
          type: number
        description:
          description: Property description
          type: string
    configNodePropertyArray:
      type: object
      properties:
        name:
          description: property name
          type: string
        optional:
          description: True if optional
          type: boolean
        is_set:
          description: True if property is set
          type: boolean
        type:
          description: Property type, 1=String, 2=Long, 3=Integer, 7=Float, 11=Boolean,
            12=Secrets(String)
          type: integer
        values:
          description: Property value
          type: array
          items:
            type: string
        description:
          description: Property description
          type: string
    configNodePropertyDropDown:
      type: object
      properties:
        name:
          description: property name
          type: string
        optional:
          description: True if optional
          type: boolean
        is_set:
          description: True if property is set
          type: boolean
        type:
          description: Property value
          type: object
          items:
            type: array
            items:
              anyOf:
              - string
              - integer
        value:
          description: Property value
          type: array
          items:
            anyOf:
            - string
            - integer
        description:
          description: Property description
          type: string
    configNodePropertyBoolean:
      type: object
      properties:
        name:
          description: property name
          type: string
        optional:
          description: True if optional
          type: boolean
        is_set:
          description: True if property is set
          type: boolean
        type:
          description: Property type, 1=String, 2=Long, 3=Integer, 7=Float, 11=Boolean,
            12=Secrets(String)
          type: integer
        values:
          description: Property value
          type: boolean
        description:
          description: Property description
          type: string
    configNodePropertyString:
      type: object
      properties:
        name:
          description: property name
          type: string
        optional:
          description: True if optional
          type: boolean
        is_set:
          description: True if property is set
          type: boolean
        type:
          description: Property type, 1=String, 2=Long, 3=Integer, 7=Float, 11=Boolean,
            12=Secrets(String)
          type: integer
        values:
          description: Property value
          type: string
        description:
          description: Property description
          type: string
    adaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties"
    adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties:
      type: object
      properties:
        showPlaceholder:
          description: Adaptive Form and Interactive Communication Web Channel Configuration.showPlaceholder.description
            (showPlaceholder)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        maximumCacheEntries:
          description: Adaptive Form and Interactive Communication Web Channel Configuration.maximumCacheEntries.description
            (maximumCacheEntries)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        af.scripting.compatversion:
          description: Adaptive Form and Interactive Communication Web Channel Configuration.af.scripting.compatversion.description
            (af.scripting.compatversion)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        makeFileNameUnique:
          description: Adaptive Form and Interactive Communication Web Channel Configuration.makeFileNameUnique.description
            (makeFileNameUnique)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        generatingCompliantData:
          description: Adaptive Form and Interactive Communication Web Channel Configuration.generatingCompliantData.description
            (generatingCompliantData)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurationProperties"
    adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurationProperties:
      type: object
      properties:
        fontList:
          description: Adaptive Form and Interactive Communication Web Channel Theme
            Configuration.fontList.description (fontList)
          "$ref": "#/components/schemas/configNodePropertyArray"
    analyticsComponentQueryCacheServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/analyticsComponentQueryCacheServiceProperties"
    analyticsComponentQueryCacheServiceProperties:
      type: object
      properties:
        cq.analytics.component.query.cache.size:
          description: Number of query results for the Analytics component the cache
            holds (cq.analytics.component.query.cache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    apacheSlingHealthCheckResultHTMLSerializerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/apacheSlingHealthCheckResultHTMLSerializerProperties"
    apacheSlingHealthCheckResultHTMLSerializerProperties:
      type: object
      properties:
        styleString:
          description: CSS Style - can be configured to change the look and feel of
            the html result page. (styleString)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties"
    comAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationProperties:
      type: object
      properties:
        formsManagerConfig.includeOOTBTemplates:
          description: Select this option to include Out of the box Adaptive Form
            and Adaptive Document Templates. Defaults to true (formsManagerConfig.includeOOTBTemplates)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        formsManagerConfig.includeDeprecatedTemplates:
          description: Select this option to include Adaptive Form Templates that
            were present in AEM 6.0 and are now deprecated in AEM ver 6.2. Defaults
            to false (formsManagerConfig.includeDeprecatedTemplates)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeAemTransactionCoreImplTransactionRecorderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeAemTransactionCoreImplTransactionRecorderProperties"
    comAdobeAemTransactionCoreImplTransactionRecorderProperties:
      type: object
      properties:
        isTransactionRecordingEnabled:
          description: When checked, the AEM Forms transaction reporting is enabled.
            Before enabling the option on a publish server, ensure that a reverse-replication
            agent is configured for the publish server. The reverse replication agent
            is configured on the related author or processing server. (isTransactionRecordingEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties"
    comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCProperties:
      type: object
      properties:
        hc.name:
          description: Name of the health check. (hc.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        hc.tags:
          description: Tags for the health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        hc.mbean.name:
          description: Name of the JMX mbean to register for this check. (hc.mbean.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties"
    comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties:
      type: object
      properties:
        hc.name:
          description: Name of the health check. (hc.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        hc.tags:
          description: Tags for the health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        hc.mbean.name:
          description: Name of the JMX mbean to register for this check. (hc.mbean.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplProperties:
      type: object
      properties:
        pre-upgrade.maintenance.tasks:
          description: List of maintenance tasks names to execute before upgrading
            an AEM instance (pre-upgrade.maintenance.tasks)
          "$ref": "#/components/schemas/configNodePropertyArray"
        pre-upgrade.hc.tags:
          description: List of health check tag names run before upgrading an AEM
            instance (pre-upgrade.hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplProperties"
    comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplProperties:
      type: object
      properties:
        root.path:
          description: Description for root.path (root.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        fix.inconsistencies:
          description: Description for fix.inconsistencies (fix.inconsistencies)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqAccountApiAccountManagementServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqAccountApiAccountManagementServiceProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeCqAccountApiAccountManagementServiceProperties:
      type: object
      properties:
        cq.accountmanager.token.validity.period:
          description: Max validity period of the manager token (in seconds) (cq.accountmanager.token.validity.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.accountmanager.config.requestnewaccount.mail:
          description: Config node below /etc/security/accountmgr/jcr:content defining
            the mail template used when requesting a new account (cq.accountmanager.config.requestnewaccount.mail)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.accountmanager.config.requestnewpwd.mail:
          description: Name of the node below /etc/security/accountmgr/jcr:content
            defining the mail template used when requesting a password change (cq.accountmanager.config.requestnewpwd.mail)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqAccountImplAccountManagementServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqAccountImplAccountManagementServletProperties"
    comAdobeCqAccountImplAccountManagementServletProperties:
      type: object
      properties:
        cq.accountmanager.config.informnewaccount.mail:
          description: Config node below /etc/security/accountmgr/jcr:content defining
            the mail template used to inform the user about the new account (cq.accountmanager.config.informnewaccount.mail)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.accountmanager.config.informnewpwd.mail:
          description: Config node below /etc/security/accountmgr/jcr:content defining
            the mail template used to inform the user about the new password (cq.accountmanager.config.informnewpwd.mail)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqAddressImplLocationLocationListServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqAddressImplLocationLocationListServletProperties"
    comAdobeCqAddressImplLocationLocationListServletProperties:
      type: object
      properties:
        cq.address.location.default.maxResults:
          description: Default maximum number of results the location list servlet
            should return. (cq.address.location.default.maxResults)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties"
    comAdobeCqCdnRewriterImplAWSCloudFrontRewriterProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this rewriter. A higher ranked rewriter
            is preferred over a lower ranked one (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        keypair.id:
          description: Provide AWS Cloudfront keypair ID (keypair.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        keypair.alias:
          description: Provide alias of the AWS Cloudfront keypair in the imported
            keystore (keypair.alias)
          "$ref": "#/components/schemas/configNodePropertyString"
        cdnrewriter.attributes:
          description: If this property is set, only the tags with these attributes
            will be rewritten.Applies to image tag only, rewriting of other tags won't
            be affected. (cdnrewriter.attributes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cdn.rewriter.distribution.domain:
          description: Domain name of CDN distribution (cdn.rewriter.distribution.domain)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqCdnRewriterImplCDNConfigServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCdnRewriterImplCDNConfigServiceImplProperties"
    comAdobeCqCdnRewriterImplCDNConfigServiceImplProperties:
      type: object
      properties:
        cdn.config.distribution.domain:
          description: Domain name of CDN distribution (cdn.config.distribution.domain)
          "$ref": "#/components/schemas/configNodePropertyString"
        cdn.config.enable.rewriting:
          description: Rewrite the url to a CDN url. If this is disabled, no CDN rewriting
            will be performed. (cdn.config.enable.rewriting)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cdn.config.path.prefixes:
          description: Only the paths which begin with one of these prefixes will
            be rewritten (cdn.config.path.prefixes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cdn.config.cdnttl:
          description: Time (in seconds) after which CDN invalidates its cached object.
            (cdn.config.cdnttl)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cdn.config.application.protocol:
          description: Application layer protocol of CDN eg http or https (cdn.config.application.protocol)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqCdnRewriterImplCDNRewriterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCdnRewriterImplCDNRewriterProperties"
    comAdobeCqCdnRewriterImplCDNRewriterProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this rewriter. A higher ranked rewriter
            is preferred over a lower ranked one (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cdnrewriter.attributes:
          description: If this property is set, only the tags with these attributes
            will be rewritten.Applies to image tag only, rewriting of other tags won't
            be affected. (cdnrewriter.attributes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cdn.rewriter.distribution.domain:
          description: Domain name of CDN distribution (cdn.rewriter.distribution.domain)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandlerProperties"
    comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandlerProperties:
      type: object
      properties:
        flush.agents:
          description: List of flush agents (flush.agents)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqCommerceImplAssetDynamicImageHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCommerceImplAssetDynamicImageHandlerProperties"
    comAdobeCqCommerceImplAssetDynamicImageHandlerProperties:
      type: object
      properties:
        cq.commerce.asset.handler.active:
          description: Make this handler active. (cq.commerce.asset.handler.active)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.commerce.asset.handler.name:
          description: Name of the handler (cq.commerce.asset.handler.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties"
    comAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties:
      type: object
      properties:
        cq.commerce.asset.handler.fallback:
          description: Name of the fallback handler (cq.commerce.asset.handler.fallback)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqCommerceImplAssetStaticImageHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCommerceImplAssetStaticImageHandlerProperties"
    comAdobeCqCommerceImplAssetStaticImageHandlerProperties:
      type: object
      properties:
        cq.commerce.asset.handler.active:
          description: Make this handler active. (cq.commerce.asset.handler.active)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.commerce.asset.handler.name:
          description: Name of the handler (cq.commerce.asset.handler.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqCommerceImplAssetVideoHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCommerceImplAssetVideoHandlerProperties"
    comAdobeCqCommerceImplAssetVideoHandlerProperties:
      type: object
      properties:
        cq.commerce.asset.handler.active:
          description: Make this handler active. (cq.commerce.asset.handler.active)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.commerce.asset.handler.name:
          description: Name of the handler (cq.commerce.asset.handler.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqCommerceImplPromotionPromotionManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCommerceImplPromotionPromotionManagerImplProperties"
    comAdobeCqCommerceImplPromotionPromotionManagerImplProperties:
      type: object
      properties:
        cq.commerce.promotion.root:
          description: Search root for promotions (cq.commerce.promotion.root)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties"
    comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplProperties:
      type: object
      properties:
        cq.commerce.cataloggenerator.bucketsize:
          description: Maximum products per section before bucketing, and maximum
            in each bucket (cq.commerce.cataloggenerator.bucketsize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.commerce.cataloggenerator.bucketname:
          description: Name to use when creating bucket pages (cq.commerce.cataloggenerator.bucketname)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.commerce.cataloggenerator.excludedtemplateproperties:
          description: Properties on the Template Pages which should NOT be copied
            to new Catalog Pages (cq.commerce.cataloggenerator.excludedtemplateproperties)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqCommercePimImplPageEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCommercePimImplPageEventListenerProperties"
    comAdobeCqCommercePimImplPageEventListenerProperties:
      type: object
      properties:
        cq.commerce.pageeventlistener.enabled:
          description: Enable PRODUCT_PAGE_* event generation (cq.commerce.pageeventlistener.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqCommercePimImplProductfeedProductFeedServiceImplProperties"
    comAdobeCqCommercePimImplProductfeedProductFeedServiceImplProperties:
      type: object
      properties:
        Feed generator algorithm:
          description: The algorithm used to generated the product feed (Feed generator
            algorithm)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comAdobeCqContentinsightImplReportingServicesSettingsProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqContentinsightImplReportingServicesSettingsProviderProperties"
    comAdobeCqContentinsightImplReportingServicesSettingsProviderProperties:
      type: object
      properties:
        reportingservices.url:
          description: Reporting Service's base URL (reportingservices.url)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties"
    comAdobeCqContentinsightImplServletsBrightEdgeProxyServletProperties:
      type: object
      properties:
        brightedge.url:
          description: BrightEdge's base URL (brightedge.url)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqContentinsightImplServletsReportingServicesProxyServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqContentinsightImplServletsReportingServicesProxyServletProperties"
    comAdobeCqContentinsightImplServletsReportingServicesProxyServletProperties:
      type: object
      properties:
        reportingservices.proxy.whitelist:
          description: Allowed destinations for the reporting services proxy servlet
            (reportingservices.proxy.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqDamCfmImplConfFeatureConfigImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamCfmImplConfFeatureConfigImplProperties"
    comAdobeCqDamCfmImplConfFeatureConfigImplProperties:
      type: object
      properties:
        dam.cfm.resourceTypes:
          description: Resource types that are used for rendering Content Fragments;
            deprecated - please use "Content Fragment Component Configuration" instead.
            (dam.cfm.resourceTypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        dam.cfm.referenceProperties:
          description: Name of properties to look for references to Content Fragments;
            deprecated - please use "Content Fragment Component Configuration" instead.
            (dam.cfm.referenceProperties)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqDamCfmImplContentRewriterAssetProcessorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamCfmImplContentRewriterAssetProcessorProperties"
    comAdobeCqDamCfmImplContentRewriterAssetProcessorProperties:
      type: object
      properties:
        pipeline.type:
          description: pipeline.type.description (pipeline.type)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqDamCfmImplContentRewriterParRangeFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamCfmImplContentRewriterParRangeFilterProperties"
    comAdobeCqDamCfmImplContentRewriterParRangeFilterProperties:
      type: object
      properties:
        pipeline.type:
          description: pipeline.type.description (pipeline.type)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqDamCfmImplContentRewriterPayloadFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamCfmImplContentRewriterPayloadFilterProperties"
    comAdobeCqDamCfmImplContentRewriterPayloadFilterProperties:
      type: object
      properties:
        pipeline.type:
          description: pipeline.type.description (pipeline.type)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqDamDmProcessImagePTiffManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamDmProcessImagePTiffManagerImplProperties"
    comAdobeCqDamDmProcessImagePTiffManagerImplProperties:
      type: object
      properties:
        maxMemory:
          description: Maximum memory (bytes) allowed for image conversion (maxMemory)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties"
    comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties:
      type: object
      properties:
        dmreplicateonmodify.enabled:
          description: Automatically replicate assets on modification (dmreplicateonmodify.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        dmreplicateonmodify.forcesyncdeletes:
          description: Automatically delete asset on Scene7 if it is deleted in AEM.
            This setting is obsolete and only applicable for S7 Classic mode (dmreplicateonmodify.forcesyncdeletes)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamMacSyncHelperImplMACSyncClientImplProperties"
    comAdobeCqDamMacSyncHelperImplMACSyncClientImplProperties:
      type: object
      properties:
        com.adobe.dam.mac.sync.client.so.timeout:
          description: The socket timeout which is the timeout for waiting for data
            from the authorization server in milliseconds (com.adobe.dam.mac.sync.client.so.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqDamMacSyncImplDAMSyncServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamMacSyncImplDAMSyncServiceImplProperties"
    comAdobeCqDamMacSyncImplDAMSyncServiceImplProperties:
      type: object
      properties:
        com.adobe.cq.dam.mac.sync.damsyncservice.registered_paths:
          description: Paths registered to be synced between Adobe Experience Manager
            and Adobe Marketing Cloud (com.adobe.cq.dam.mac.sync.damsyncservice.registered_paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        com.adobe.cq.dam.mac.sync.damsyncservice.sync.renditions:
          description: Enable syncing of renditions while syncing/listening changeson
            registered paths. By default it only sync/listen changes of original rendition
            of asset (com.adobe.cq.dam.mac.sync.damsyncservice.sync.renditions)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms:
          description: com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms.description
            (com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        com.adobe.cq.dam.mac.sync.damsyncservice.platform:
          description: The platform for which this service should be automatically
            configured (e.g. Adobe Marketing Cloud, Adobe Experience Manager) (com.adobe.cq.dam.mac.sync.damsyncservice.platform)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties"
    comAdobeCqDamProcessorNuiImplNuiAssetProcessorProperties:
      type: object
      properties:
        nuiEnabled:
          description: Enable Nui (nuiEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        nuiServiceUrl:
          description: Nui Service Url (nuiServiceUrl)
          "$ref": "#/components/schemas/configNodePropertyString"
        nuiApiKey:
          description: Nui Api Key (nuiApiKey)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqDamS7imagingImplIsImageServerComponentInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamS7imagingImplIsImageServerComponentProperties"
    comAdobeCqDamS7imagingImplIsImageServerComponentProperties:
      type: object
      properties:
        TcpPort:
          description: Port number to use for communication with ImageServer process.
            If left blank the port is automatically chosen (TcpPort)
          "$ref": "#/components/schemas/configNodePropertyString"
        AllowRemoteAccess:
          description: Allow or disallow remote access to ImageServer process. If
            false image server will only listen on localhost (AllowRemoteAccess)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        MaxRenderRgnPixels:
          description: Maximum size in megapixels that will be rendered. (MaxRenderRgnPixels)
          "$ref": "#/components/schemas/configNodePropertyString"
        MaxMessageSize:
          description: Maximum message size in MBytes that will be delivered. (MaxMessageSize)
          "$ref": "#/components/schemas/configNodePropertyString"
        RandomAccessUrlTimeout:
          description: Timeout value for how long in seconds the ImageServer will
            wait for the JCR to respond to a ranged tile request. (RandomAccessUrlTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        WorkerThreads:
          description: Number of workers threads (default 10). (WorkerThreads)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqDamS7imagingImplPsPlatformServerServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamS7imagingImplPsPlatformServerServletProperties"
    comAdobeCqDamS7imagingImplPsPlatformServerServletProperties:
      type: object
      properties:
        cache.enable:
          description: Whether or not response cache is enabled (boolean) (cache.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cache.rootPaths:
          description: One or more paths to response cache directories. Relative paths
            are resolved against internal s7imaging bundle directory (cache.rootPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cache.maxSize:
          description: Maximum size of response cache in bytes (cache.maxSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.maxEntries:
          description: Maximum number of entries in cache (cache.maxEntries)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqDamWebdavImplIoAssetIOHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamWebdavImplIoAssetIOHandlerProperties"
    comAdobeCqDamWebdavImplIoAssetIOHandlerProperties:
      type: object
      properties:
        service.ranking:
          description: service.ranking.description (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        pathPrefix:
          description: pathPrefix.description (pathPrefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        createVersion:
          description: creates version of asset when asset is updated (createVersion)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties"
    comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties:
      type: object
      properties:
        cq.dam.webdav.version.linking.enable:
          description: Enables version linking for the assets edited through WebDAV
            (cq.dam.webdav.version.linking.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.dam.webdav.version.linking.scheduler.period:
          description: Time in seconds for for running this job to do the version
            linking (cq.dam.webdav.version.linking.scheduler.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.webdav.version.linking.staging.timeout:
          description: The timeout(in seconds) for considering the tmp asset as the
            previous history of newly created asset through WebDAV edit operations
            (cq.dam.webdav.version.linking.staging.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties"
    comAdobeCqDamWebdavImplIoSpecialFilesHandlerProperties:
      type: object
      properties:
        com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters:
          description: com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters.description
            (com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqDeserfwImplDeserializationFirewallImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDeserfwImplDeserializationFirewallImplProperties"
    comAdobeCqDeserfwImplDeserializationFirewallImplProperties:
      type: object
      properties:
        firewall.deserialization.whitelist:
          description: com.adobe.cq.deserfw.impl.DeserializationFirewallImpl.firewall.deserialization.whitelist.description
            (firewall.deserialization.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        firewall.deserialization.blacklist:
          description: com.adobe.cq.deserfw.impl.DeserializationFirewallImpl.firewall.deserialization.blacklist.description
            (firewall.deserialization.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        firewall.deserialization.diagnostics:
          description: com.adobe.cq.deserfw.impl.DeserializationFirewallImpl.firewall.deserialization.diagnostics.description
            (firewall.deserialization.diagnostics)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqDtmImplServiceDTMWebServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDtmImplServiceDTMWebServiceImplProperties"
    comAdobeCqDtmImplServiceDTMWebServiceImplProperties:
      type: object
      properties:
        connection.timeout:
          description: Timeout in milliseconds until a connection is established.
            A timeout value of zero is interpreted as an infinite timeout. Default
            is 30000ms (connection.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        socket.timeout:
          description: Timeout in milliseconds for waiting for data or a maximum period
            of inactivity between two consecutive data packets. Default is 30000ms
            (socket.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqDtmImplServletsDTMDeployHookServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDtmImplServletsDTMDeployHookServletProperties"
    comAdobeCqDtmImplServletsDTMDeployHookServletProperties:
      type: object
      properties:
        dtm.staging.ip.whitelist:
          description: List of DTM staging IPs which are allowed to trigger the DTM
            download workflow trough the DTM deploy hook feature. (dtm.staging.ip.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        dtm.production.ip.whitelist:
          description: List of DTM production IPs which are allowed to trigger the
            DTM download workflow trough the DTM deploy hook feature. (dtm.production.ip.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqDtmReactorImplServiceWebServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDtmReactorImplServiceWebServiceImplProperties"
    comAdobeCqDtmReactorImplServiceWebServiceImplProperties:
      type: object
      properties:
        endpointUri:
          description: The Adobe Launch API endpoint URI. Default is https://reactor.adobe.io
            (endpointUri)
          "$ref": "#/components/schemas/configNodePropertyString"
        connectionTimeout:
          description: Timeout in milliseconds until a connection is established.
            A timeout value of zero is interpreted as an infinite timeout. Default
            is 60000ms (connectionTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        socketTimeout:
          description: Timeout in milliseconds for waiting for data or a maximum period
            of inactivity between two consecutive data packets. Default is 30000ms
            (socketTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqExperiencelogImplExperienceLogConfigServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqExperiencelogImplExperienceLogConfigServletProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeCqExperiencelogImplExperienceLogConfigServletProperties:
      type: object
      properties:
        enabled:
          description: Enables the service for this instance. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        disabledForGroups:
          description: List of groups identifiers for which the service is disabled.
            (disabledForGroups)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqHistoryImplHistoryRequestFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqHistoryImplHistoryRequestFilterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeCqHistoryImplHistoryRequestFilterProperties:
      type: object
      properties:
        history.requestFilter.excludedSelectors:
          description: Do not log history entries when request selector is part of
            that list. Leave empty to log all of them (history.requestFilter.excludedSelectors)
          "$ref": "#/components/schemas/configNodePropertyArray"
        history.requestFilter.excludedExtensions:
          description: Do not log history entries when request extension is part of
            that list. Leave empty to log all of them (history.requestFilter.excludedExtensions)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqHistoryImplHistoryServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqHistoryImplHistoryServiceImplProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeCqHistoryImplHistoryServiceImplProperties:
      type: object
      properties:
        history.service.resourceTypes:
          description: Sling resource types or JCR node types to watch. Leave empty
            to log all of them (history.service.resourceTypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        history.service.pathFilter:
          description: Restrict history logging to some paths. Leave empty to log
            all of them (history.service.pathFilter)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqInboxImplTypeproviderItemTypeProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqInboxImplTypeproviderItemTypeProviderProperties"
    comAdobeCqInboxImplTypeproviderItemTypeProviderProperties:
      type: object
      properties:
        inbox.impl.typeprovider.registrypaths:
          description: The paths to the item type definitions (inbox.impl.typeprovider.registrypaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        inbox.impl.typeprovider.legacypaths:
          description: Legacy Locations. These locations only had task related custom
            type definitions (inbox.impl.typeprovider.legacypaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        inbox.impl.typeprovider.defaulturl.failureitem:
          description: The default details URL for failure items, default value is
            [/mnt/overlay/cq/inbox/content/inbox/details/failureitem.html] (inbox.impl.typeprovider.defaulturl.failureitem)
          "$ref": "#/components/schemas/configNodePropertyString"
        inbox.impl.typeprovider.defaulturl.workitem:
          description: The default details URL for workitems, default value is [/mnt/overlay/cq/inbox/content/inbox/details/workitem.html]
            (inbox.impl.typeprovider.defaulturl.workitem)
          "$ref": "#/components/schemas/configNodePropertyString"
        inbox.impl.typeprovider.defaulturl.task:
          description: The default details URL for tasks, default value is [/mnt/overlay/cq/inbox/content/inbox/details/task.html]
            (inbox.impl.typeprovider.defaulturl.task)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqProjectsImplServletProjectImageServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqProjectsImplServletProjectImageServletProperties"
    comAdobeCqProjectsImplServletProjectImageServletProperties:
      type: object
      properties:
        image.quality:
          description: Quality must be a double between 0.0 and 1.0 (image.quality)
          "$ref": "#/components/schemas/configNodePropertyString"
        image.supported.resolutions:
          description: List of resolutions this component is permitted to generate.
            (image.supported.resolutions)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqScheduledExporterImplScheduledExporterImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScheduledExporterImplScheduledExporterImplProperties"
    comAdobeCqScheduledExporterImplScheduledExporterImplProperties:
      type: object
      properties:
        include.paths:
          description: Paths considered when registering cq:ExportConfig nodes. (include.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        exporter.user:
          description: User used for exporting. Ensure scheduled-exporter-service
            has privileges to impersonate that user. (exporter.user)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties"
    comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties:
      type: object
      properties:
        com.adobe.cq.screens.analytics.impl.url:
          description: The URL to post analytics data from the player. (com.adobe.cq.screens.analytics.impl.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.screens.analytics.impl.apikey:
          description: The api key to authenticate to the analytics server. (com.adobe.cq.screens.analytics.impl.apikey)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.screens.analytics.impl.project:
          description: The project configured on your analytics server to receive
            data (com.adobe.cq.screens.analytics.impl.project)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.screens.analytics.impl.environment:
          description: Choose stage or production (com.adobe.cq.screens.analytics.impl.environment)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        com.adobe.cq.screens.analytics.impl.sendFrequency:
          description: The frequency in minutes for sending analytics data from players
            (com.adobe.cq.screens.analytics.impl.sendFrequency)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqScreensDeviceImplDeviceServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensDeviceImplDeviceServiceProperties"
    comAdobeCqScreensDeviceImplDeviceServiceProperties:
      type: object
      properties:
        com.adobe.aem.screens.player.pingfrequency:
          description: Configure the frequency in seconds between each time a player
            pings the server. Higher values mean less traffic but slower response
            to commands. Default value is 5 seconds. If the entered value is at or
            below 1, it will use 1 second. (com.adobe.aem.screens.player.pingfrequency)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        com.adobe.aem.screens.device.pasword.specialchars:
          description: Configure the device password special characters. at least
            one of these special characters will be used to create the device password.
            (com.adobe.aem.screens.device.pasword.specialchars)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.aem.screens.device.pasword.minlowercasechars:
          description: Configure the minimum number of lower case characters for generating
            device password (com.adobe.aem.screens.device.pasword.minlowercasechars)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        com.adobe.aem.screens.device.pasword.minuppercasechars:
          description: Configure the minimum number of upper case characters for generating
            device password (com.adobe.aem.screens.device.pasword.minuppercasechars)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        com.adobe.aem.screens.device.pasword.minnumberchars:
          description: Configure the minimum number of numeric characters for generating
            device password (com.adobe.aem.screens.device.pasword.minnumberchars)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        com.adobe.aem.screens.device.pasword.minspecialchars:
          description: Configure the minimum number of speical characters for generating
            device password (com.adobe.aem.screens.device.pasword.minspecialchars)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        com.adobe.aem.screens.device.pasword.minlength:
          description: Configure the minimum length of device password (com.adobe.aem.screens.device.pasword.minlength)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties"
    comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplProperties:
      type: object
      properties:
        deviceRegistrationTimeout:
          description: Use if you want to increase/decrease the timeout (in minutes)
            during which a device will show up in Pending Devices (deviceRegistrationTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties"
    comAdobeCqScreensImplHandlerChannelsUpdateHandlerProperties:
      type: object
      properties:
        cq.pagesupdatehandler.imageresourcetypes:
          description: List of image resource types to be included into the package.
            (cq.pagesupdatehandler.imageresourcetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.pagesupdatehandler.productresourcetypes:
          description: List of product resource types to be included into the package.
            (cq.pagesupdatehandler.productresourcetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.pagesupdatehandler.videoresourcetypes:
          description: List of video resource types to be included into the package.
            (cq.pagesupdatehandler.videoresourcetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.pagesupdatehandler.dynamicsequenceresourcetypes:
          description: List of sequence resource types that need dynamic resolution
            of the assets using their 'path' property. (cq.pagesupdatehandler.dynamicsequenceresourcetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.pagesupdatehandler.previewmodepaths:
          description: List of paths which are requested in PREVIEW mode and not in
            DISABLED mode. (cq.pagesupdatehandler.previewmodepaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobProperties"
    comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobProperties:
      type: object
      properties:
        scheduler.expression:
          description: Default trigger rate is every 1 min (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties"
    comAdobeCqScreensImplRemoteImplDistributedHttpClientImplProperties:
      type: object
      properties:
        com.adobe.aem.screens.impl.remote.request_timeout:
          description: The number of milliseconds until the request times out. (com.adobe.aem.screens.impl.remote.request_timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqScreensImplScreensChannelPostProcessorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensImplScreensChannelPostProcessorProperties"
    comAdobeCqScreensImplScreensChannelPostProcessorProperties:
      type: object
      properties:
        screens.channels.properties.to.remove:
          description: Description for screens.channels.properties.to.remove (screens.channels.properties.to.remove)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties"
    comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties:
      type: object
      properties:
        com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath:
          description: Enter the path to the devices in your Screens Project(s). The
            path is usually /home/users/screens/<Name of your project> (com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath)
          "$ref": "#/components/schemas/configNodePropertyArray"
        com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency:
          description: Specify a time (e.g., 5:00 pm or 17:00) OR frequency in hours
            (e.g., 1) at which this monitor should send emails (com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout:
          description: The interval in minutes after which a device should be considered
            not reachable (com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients:
          description: The recipient email address (com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver:
          description: Deprecated. The SMTP Server to use for sending emails. Please
            configure Day CQ Mail service instead. (com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport:
          description: Deprecated. SMTP Port. Please configure Day CQ Mail service
            instead. (com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls:
          description: Deprecated. Enable to use a secure communication with the SMTP
            Server. Please configure Day CQ Mail service instead. (com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username:
          description: Deprecated. The username for sending emails. Please configure
            Day CQ Mail service instead. (com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password:
          description: Deprecated. The password for sending emails. Please configure
            Day CQ Mail service instead. (com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties"
    comAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties:
      type: object
      properties:
        service.ranking:
          description: JMS providers are made available in the order of their service
            ranking. Higher rankings have precedence. (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        global.size:
          description: 'Maximum amount of memory which message data may consume. Default:
            500 MB. (global.size)'
          "$ref": "#/components/schemas/configNodePropertyInteger"
        max.disk.usage:
          description: The max percentage of overall disk usage before the broker
            will block. The broker will perform scans on the disk to determine if
            the disk is beyond this configured limit. Once that limit is reached any
            message will be blocked. (max.disk.usage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        persistence.enabled:
          description: Indicates whether global persistence is enabled. When active,
            queue states are persisted at shutdown and queues can overflow to disk.
            (persistence.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        thread.pool.max.size:
          description: Maximum number of threads to use for the thread pool. -1 means
            'no limits'. (thread.pool.max.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        scheduled.thread.pool.max.size:
          description: Maximum number of threads to use for the scheduled thread pool.
            -1 means 'no limits'. (scheduled.thread.pool.max.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        graceful.shutdown.timeout:
          description: Timeout (in milliseconds9 to wait for clients to disconnect
            before server shutdown. (graceful.shutdown.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queues:
          description: 'Format: {name: ''myqueue'', address: ''com.test.myqueue'',
            durable: true, maxConsumers: 50, filter: ''color=''red''''} (queues)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        topics:
          description: 'Format: {name: ''mytopic'', address: ''com.test.mytopic'',
            maxConsumers: 50} (topics)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        addresses.max.delivery.attempts:
          description: Defines how many time a cancelled message can be redelivered
            before sending to the dead-letter-address. (addresses.max.delivery.attempts)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        addresses.expiry.delay:
          description: Defines the expiration time in ms that will be used for messages
            which are using the default expiration time (i.e. 0). For example, if
            expiry-delay is set to "10" and a message which is using the default expiration
            time (i.e. 0) arrives then its expiration time of "0" will be changed
            to "10." However, if a message which is using an expiration time of "20"
            arrives then its expiration time will remain unchanged. Setting expiry-delay
            to "-1" will disable this feature. (addresses.expiry.delay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        addresses.address.full.message.policy:
          description: 'This attribute can have one of the following values: PAGE,
            DROP, FAIL or BLOCK and determines what happens when an address where
            max-size-bytes is specified becomes full. The default value is PAGE. If
            the value is PAGE then further messages will be paged to disk. If the
            value is DROP then further messages will be silently dropped. If the value
            is FAIL then further messages will be dropped and an exception will be
            thrown on the client-side. If the value is BLOCK then client message producers
            will block when they try and send further messages. (addresses.address.full.message.policy)'
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        addresses.max.size.bytes:
          description: 'What''s the max memory an address could have before entering
            on page mode. Default: 30 MB (addresses.max.size.bytes)'
          "$ref": "#/components/schemas/configNodePropertyInteger"
        addresses.page.size.bytes:
          description: The size of each page file used on the paging system. Only
            relevant when persistence is enabled. (addresses.page.size.bytes)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        addresses.page.cache.max.size:
          description: The system will keep up to `page-max-cache-size` page files
            in memory to optimize IO during paging navigation. Only relevant when
            persistence is enabled. (addresses.page.cache.max.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.user:
          description: When creating connections between nodes of a cluster to form
            a cluster connection, Apache ActiveMQ Artemis uses a cluster user and
            cluster password. (cluster.user)
          "$ref": "#/components/schemas/configNodePropertyString"
        cluster.password:
          description: 'When creating connections between nodes of a cluster to form
            a cluster connection, Apache ActiveMQ Artemis uses a cluster user and
            cluster password. Use the same user/pass between all cluster nodes. You
            must provide the encrypted password value. Note: the encrypted value is
            only decryptable on instances with the same master key. (cluster.password)'
          "$ref": "#/components/schemas/configNodePropertyString"
        cluster.call.timeout:
          description: When a packet is sent via a cluster connection and is a blocking
            call, i.e. for acknowledgements, this is how long it will wait (in milliseconds)
            for the reply before throwing an exception. For no timeout use -1 (cluster.call.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.call.failover.timeout:
          description: Similar to call-timeout but used when a call is made during
            a fail-over attempt. For no timeout use -1 (cluster.call.failover.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.client.failure.check.period:
          description: The period (in milliseconds) used to check if the cluster connection
            has failed to receive pings from another server. (cluster.client.failure.check.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.notification.attempts:
          description: How many times the cluster connection should broadcast itself
            when connecting to the cluster. (cluster.notification.attempts)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.notification.interval:
          description: How often (in milliseconds) the cluster connection should broadcast
            itself when attaching to the cluster. (cluster.notification.interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        id.cache.size:
          description: The size of the cache for pre-creating message IDs. It should
            be no greater than the number of messages that can be squeezed into confirmation
            buffer (<confirmation-window-size/>) (id.cache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.confirmation.window.size:
          description: The size (in bytes) of the window used for sending confirmations
            from the server connected to. So once the server has received confirmation-window-size
            bytes it notifies its client, A value of -1 means no window. (cluster.confirmation.window.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.connection.ttl:
          description: This is how long a cluster connection should stay alive if
            it stops receiving messages from a specific node in the cluster. (cluster.connection.ttl)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.duplicate.detection:
          description: Internally cluster connections use bridges to link the nodes,
            and bridges can be configured to add a duplicate id property in each message
            that is forwarded. If the target node of the bridge crashes and then recovers,
            messages might be resent from the source node. By enabling duplicate detection
            any duplicate messages will be filtered out and ignored on receipt at
            the target node. (cluster.duplicate.detection)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cluster.initial.connect.attempts:
          description: The number of times the system will try to connect a node in
            the cluster initially. If the max-retry is achieved this node will be
            considered permanently down and the system will not route messages to
            this node. (cluster.initial.connect.attempts)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.max.retry.interval:
          description: The maximum delay (in milliseconds) for retries. (cluster.max.retry.interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.min.large.message.size:
          description: If the message size (in bytes) is larger than this value then
            it will be split into multiple segments when sent over the network to
            other cluster members. (cluster.min.large.message.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.producer.window.size:
          description: The size for producer flow control over cluster connection.
            It's by default disabled through the cluster connection bridge but you
            may want to set a value if you are using really large messages in cluster.
            A value of -1 means no window. (cluster.producer.window.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.reconnect.attempts:
          description: The number of times the system will try to reconnect to a node
            in the cluster. If the max-retry is achieved this node will be considered
            permanently down and the system will stop routing messages to this node.
            Default is -1 (infinite retries). (cluster.reconnect.attempts)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.retry.interval:
          description: Internally, cluster connections cause bridges to be created
            between the nodes of the cluster. If the cluster connection is created
            and the target node has not been started, or say, is being rebooted, then
            the cluster connections from other nodes will retry connecting to the
            target until it comes back up, in the same way as a bridge does. This
            parameter determines the interval in milliseconds between retry attempts.
            It has the same meaning as the retry-interval on a bridge (as described
            in Core Bridges). (cluster.retry.interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.retry.interval.multiplier:
          description: This is a multiplier used to increase the retry-interval after
            each reconnect attempt. (cluster.retry.interval.multiplier)
          "$ref": "#/components/schemas/configNodePropertyFloat"
    comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties"
    comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties:
      type: object
      properties:
        com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath:
          description: Enter the path to the Screens Project(s) to update offline
            content. The path is usually /content/screens/<Name of your project> (com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath)
          "$ref": "#/components/schemas/configNodePropertyArray"
        com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency:
          description: Specify a time (e.g., 5:00 pm or 17:00) at which this service
            should update offline content (com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplProperties"
    comAdobeCqScreensOfflinecontentImplOfflineContentServiceImplProperties:
      type: object
      properties:
        disableSmartSync:
          description: Use legacy content update mechanism in order to be backward-compatible
            to older AEM Screens Players that don't support SmartSync yet. Please
            note that you are encouraged to enable SmartSync and update all AEM Screens
            Players as it reduces load and storage footprint on AEM. (disableSmartSync)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties"
    comAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties:
      type: object
      properties:
        enableDataTriggeredContent:
          description: Switches to a Channel based on a data-trigger (ContextHub).
            Works only on 6.4 or higher. (enableDataTriggeredContent)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCheckProperties"
    comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Tags for the health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckProperties"
    comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Tags for the health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties"
    comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Tags for the health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        dispatcher.address:
          description: The address where the dispatcher is installed. (dispatcher.address)
          "$ref": "#/components/schemas/configNodePropertyString"
        dispatcher.filter.allowed:
          description: The paths which should not be restricted by the dispatcher.
            (dispatcher.filter.allowed)
          "$ref": "#/components/schemas/configNodePropertyArray"
        dispatcher.filter.blocked:
          description: The paths which should be restricted by the dispatcher. (dispatcher.filter.blocked)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeCqSecurityHcPackagesImplExampleContentHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Tags for the health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties"
    comAdobeCqSecurityHcWebserverImplClickjackingHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Tags for the health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        webserver.address:
          description: The public address for the site. (webserver.address)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialAccountverificationImplAccountManagementConfigImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialAccountverificationImplAccountManagementConfigImplProperties"
    comAdobeCqSocialAccountverificationImplAccountManagementConfigImplProperties:
      type: object
      properties:
        enable:
          description: Enable email verification for new account registrations and
            email changes (enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        ttl1:
          description: The expiration time for the email verification token sent to
            new registrants (in seconds) (ttl1)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        ttl2:
          description: The expiration time for the email verification token used to
            confirm email changes (in seconds) (ttl2)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialActivitystreamsClientImplSocialActivityComponentFactoryImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsClientImplSocialActivityComponentFactoryImplProperties"
    comAdobeCqSocialActivitystreamsClientImplSocialActivityComponentFactoryImplProperties:
      type: object
      properties:
        priority:
          description: priority.description (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamComponentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamComponentFactoryProperties"
    comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamComponentFactoryProperties:
      type: object
      properties:
        priority:
          description: priority.description (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerProperties"
    comAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerProperties:
      type: object
      properties:
        event.topics:
          description: eventlistener.topic.description (event.topics)
          "$ref": "#/components/schemas/configNodePropertyString"
        event.filter:
          description: Event filter used to filtering activity generated from SocialActivityManager
            (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialActivitystreamsListenerImplModerationEventExtensionInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsListenerImplModerationEventExtensionProperties"
    comAdobeCqSocialActivitystreamsListenerImplModerationEventExtensionProperties:
      type: object
      properties:
        accepted:
          description: accepted.description (accepted)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        ranked:
          description: ranked.description (ranked)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySuppressorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySuppressorProperties"
    comAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySuppressorProperties:
      type: object
      properties:
        ranking:
          description: ranking.description (ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        enable:
          description: enable.description (enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreamProviderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreamProviderFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeCqSocialActivitystreamsListenerImplResourceActivityStreamProviderFactoryProperties:
      type: object
      properties:
        streamPath:
          description: The base path of the activity stream. For JCR, this folder
            needs to have a 'jcr:content' node (streamPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        streamName:
          description: The name of the stream (streamName)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsImplProperties"
    comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsImplProperties:
      type: object
      properties:
        MaxRetry:
          description: MaxRetry.description (MaxRetry)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        fieldWhitelist:
          description: fieldWhitelist.description (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        attachmentTypeBlacklist:
          description: attachmentTypeBlacklist.description (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCalendarClientOperationextensionsEventAttachmentInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCalendarClientOperationextensionsEventAttachmentProperties"
    comAdobeCqSocialCalendarClientOperationextensionsEventAttachmentProperties:
      type: object
      properties:
        attachmentTypeBlacklist:
          description: attachmentTypeBlacklist.description (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyString"
        extension.order:
          description: extension.order.description (extension.order)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialCalendarServletsTimeZoneServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCalendarServletsTimeZoneServletProperties"
    comAdobeCqSocialCalendarServletsTimeZoneServletProperties:
      type: object
      properties:
        timezones.expirytime:
          description: Expiry time for timezone responses in minutes (defaults to
            1 week) (timezones.expirytime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventActivitySuppressorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventActivitySuppressorProperties"
    comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventActivitySuppressorProperties:
      type: object
      properties:
        ranking:
          description: ranking.description (ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationServiceProperties"
    comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: List of form field names allowed to be stored with the comment
            in addition to the minimal form fields required by comments. (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        attachmentTypeBlacklist:
          description: Black list of attachment mime types that are unsafe. (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperationServiceProperties"
    comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperationServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: List of form field names allowed to be stored with the comment
            in addition to the minimal form fields required by comments. (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        attachmentTypeBlacklist:
          description: Black list of attachment mime types that are unsafe. (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialComponentListProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialComponentListProviderProperties"
    comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialComponentListProviderProperties:
      type: object
      properties:
        numUserLimit:
          description: numUserLimit.description (numUserLimit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPostsInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPostsProperties"
    comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPostsProperties:
      type: object
      properties:
        enableScheduledPostsSearch:
          description: Check this if you are using the Scheduled Posts feature in
            journal component. Otherwise to disable the job for search of scheduled
            posts - please uncheck this box. (enableScheduledPostsSearch)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        numberOfMinutes:
          description: numberOfMinutes.description (numberOfMinutes)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxSearchLimit:
          description: maxSearchLimit.description (maxSearchLimit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties"
    comAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties:
      type: object
      properties:
        cors.enabling:
          description: cors.enabling.description (cors.enabling)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties"
    comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderProperties:
      type: object
      properties:
        priorityOrder:
          description: If this email client provider is unable to parse the reply
            emails, the ones with priority rank integral value more than this will
            be picked up. (priorityOrder)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        replyEmailPatterns:
          description: These patterns are used sequentially to identify beginning
            of quoted text in reply emails. Some commonly used sub-patterns can be
            replaced by their short notations defined in "AEM Communities Email Quoted
            Text Patterns" (replyEmailPatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplProperties"
    comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplProperties:
      type: object
      properties:
        context.path:
          description: The HTTP context path for the instance(s) if not the default
            "/" (context.path)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties"
    comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerProperties:
      type: object
      properties:
        event.topics:
          description: event.topics.description (event.topics)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderProperties"
    comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderProperties:
      type: object
      properties:
        priorityOrder:
          description: If this email client provider is unable to parse the reply
            emails, the ones with priority rank integral value more than this will
            be picked up. (priorityOrder)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        replyEmailPatterns:
          description: These patterns are used sequentially to identify beginning
            of quoted text in reply emails. Some commonly used sub-patterns can be
            replaced by their short notations defined in "AEM Communities Email Quoted
            Text Patterns" (replyEmailPatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImplProperties"
    comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImplProperties:
      type: object
      properties:
        pattern.time:
          description: " (pattern.time)"
          "$ref": "#/components/schemas/configNodePropertyString"
        pattern.newline:
          description: " (pattern.newline)"
          "$ref": "#/components/schemas/configNodePropertyString"
        pattern.dayOfMonth:
          description: " (pattern.dayOfMonth)"
          "$ref": "#/components/schemas/configNodePropertyString"
        pattern.month:
          description: " (pattern.month)"
          "$ref": "#/components/schemas/configNodePropertyString"
        pattern.year:
          description: " (pattern.year)"
          "$ref": "#/components/schemas/configNodePropertyString"
        pattern.date:
          description: " (pattern.date)"
          "$ref": "#/components/schemas/configNodePropertyString"
        pattern.dateTime:
          description: " (pattern.dateTime)"
          "$ref": "#/components/schemas/configNodePropertyString"
        pattern.email:
          description: " (pattern.email)"
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties"
    comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties:
      type: object
      properties:
        connectProtocol:
          description: This Protocol is used to connect to email box (connectProtocol)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderProperties"
    comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderProperties:
      type: object
      properties:
        priorityOrder:
          description: If this email client provider is unable to parse the reply
            emails, the ones with priority rank integral value more than this will
            be picked up. (priorityOrder)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        replyEmailPatterns:
          description: These patterns are used sequentially to identify beginning
            of quoted text in reply emails. Some commonly used sub-patterns can be
            replaced by their short notations defined in "AEM Communities Email Quoted
            Text Patterns" (replyEmailPatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderProperties"
    comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderProperties:
      type: object
      properties:
        priorityOrder:
          description: If this email client provider is unable to parse the reply
            emails, the ones with priority rank integral value more than this will
            be picked up. (priorityOrder)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        replyEmailPatterns:
          description: These patterns are used sequentially to identify beginning
            of quoted text in reply emails. Some commonly used sub-patterns can be
            replaced by their short notations defined in "AEM Communities Email Quoted
            Text Patterns" (replyEmailPatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderProperties"
    comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderProperties:
      type: object
      properties:
        priorityOrder:
          description: If this email client provider is unable to parse the reply
            emails, the ones with priority rank integral value more than this will
            be picked up. (priorityOrder)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        replyEmailPatterns:
          description: These patterns are used sequentially to identify beginning
            of quoted text in reply emails. Some commonly used sub-patterns can be
            replaced by their short notations defined in "AEM Communities Email Quoted
            Text Patterns" (replyEmailPatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderProperties"
    comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderProperties:
      type: object
      properties:
        priorityOrder:
          description: If this email client provider is unable to parse the reply
            emails, the ones with priority rank integral value more than this will
            be picked up. (priorityOrder)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        replyEmailPatterns:
          description: These patterns are used sequentially to identify beginning
            of quoted text in reply emails. Some commonly used sub-patterns can be
            replaced by their short notations defined in "AEM Communities Email Quoted
            Text Patterns" (replyEmailPatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderProperties"
    comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderProperties:
      type: object
      properties:
        replyEmailPatterns:
          description: These patterns are used sequentially to identify beginning
            of quoted text in reply emails. Some commonly used sub-patterns can be
            replaced by their short notations defined in "AEM Communities Email Quoted
            Text Patterns" (replyEmailPatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
        priorityOrder:
          description: If this email client provider is unable to parse the reply
            emails, the ones with priority rank integral value more than this will
            be picked up. (priorityOrder)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderProperties"
    comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderProperties:
      type: object
      properties:
        priorityOrder:
          description: If this email client provider is unable to parse the reply
            emails, the ones with priority rank integral value more than this will
            be picked up. (priorityOrder)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        replyEmailPatterns:
          description: These patterns are used sequentially to identify beginning
            of quoted text in reply emails. Some commonly used sub-patterns can be
            replaced by their short notations defined in "AEM Communities Email Quoted
            Text Patterns" (replyEmailPatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadsInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadsProperties"
    comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadsProperties:
      type: object
      properties:
        numberOfDays:
          description: Frequency to the job that deletes UGC temp images (numberOfDays)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        ageOfFile:
          description: Time before the UGC tmp image are deleted (ageOfFile)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplProperties"
    comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplProperties:
      type: object
      properties:
        event.topics:
          description: event.topics.description (event.topics)
          "$ref": "#/components/schemas/configNodePropertyString"
        event.filter:
          description: event.filter.description (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
        verbs:
          description: List of Social Event Verbs that will be counted for UGC Contribution
            Limits. (verbs)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitsConfigImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitsConfigImplProperties"
    comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitsConfigImplProperties:
      type: object
      properties:
        enable:
          description: Automatically enable Contribution Limits for new members (enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        UGCLimit:
          description: Maximum number of UGC allowed (UGCLimit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        ugcLimitDuration:
          description: Frequency/duration of UGC in minutes (ugcLimitDuration)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        domains:
          description: Do not apply UGC Contribution Limits for the following Domains
            (domains)
          "$ref": "#/components/schemas/configNodePropertyArray"
        toList:
          description: Users who encounter Contribution Limits may only message these
            members or groups (toList)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialConnectOauthImplFacebookProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialConnectOauthImplFacebookProviderImplProperties"
    comAdobeCqSocialConnectOauthImplFacebookProviderImplProperties:
      type: object
      properties:
        oauth.provider.id:
          description: Specifies OAuth provider (oauth.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.cloud.config.root:
          description: Specifies repository location of the Cloud Service Configuration.  (oauth.cloud.config.root)
          "$ref": "#/components/schemas/configNodePropertyString"
        provider.config.root:
          description: Specifies repository location of the OAuth Provider Service
            Configuration.  (provider.config.root)
          "$ref": "#/components/schemas/configNodePropertyString"
        provider.config.create.tags.enabled:
          description: If unchecked, no Facebook tags are generated.  Only basic profile
            properties are stored. (provider.config.create.tags.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        provider.config.user.folder:
          description: Location in repository where user is created. (provider.config.user.folder)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        provider.config.facebook.fetch.fields:
          description: If checked, enables fetching specific field names from Facebook
            Graph API. (provider.config.facebook.fetch.fields)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        provider.config.facebook.fields:
          description: 'If enabled, request these fields when calling the Facebook
            Graph API.  Facebook''s new APIs may require fields to be specifically
            requested (e.g.: first_name) Please refer to Facebook''s Graph API Developer
            Reference for further details. (provider.config.facebook.fields)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        provider.config.refresh.userdata.enabled:
          description: If checked, refreshes user data upon each login to reflect
            changes or additional data requested. (provider.config.refresh.userdata.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandlerProperties"
    comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandlerProperties:
      type: object
      properties:
        path:
          description: Path for where this handler will authenticate (path)
          "$ref": "#/components/schemas/configNodePropertyArray"
        service.ranking:
          description: Service ranking. Higher gives more priority. (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties"
    comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties:
      type: object
      properties:
        facebook:
          description: User Profile Field Mapping for Facebook (facebook)
          "$ref": "#/components/schemas/configNodePropertyArray"
        twitter:
          description: User Profile Field Mapping for Twitter (twitter)
          "$ref": "#/components/schemas/configNodePropertyArray"
        provider.config.user.folder:
          description: User Path (provider.config.user.folder)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialConnectOauthImplTwitterProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialConnectOauthImplTwitterProviderImplProperties"
    comAdobeCqSocialConnectOauthImplTwitterProviderImplProperties:
      type: object
      properties:
        oauth.provider.id:
          description: Specifies OAuth provider (oauth.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.cloud.config.root:
          description: Specifies repository location of the Cloud Service Configuration.  (oauth.cloud.config.root)
          "$ref": "#/components/schemas/configNodePropertyString"
        provider.config.root:
          description: Specifies repository location of the OAuth Provider Service
            Configuration.  (provider.config.root)
          "$ref": "#/components/schemas/configNodePropertyString"
        provider.config.user.folder:
          description: Location in repository where user is created. (provider.config.user.folder)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        provider.config.twitter.enable.params:
          description: If checked, allows additional URL parameters to be added to
            request additional data from Twitter. (provider.config.twitter.enable.params)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        provider.config.twitter.params:
          description: If enabled, add these parameters to the URL when requesting
            data from Twitter.  URL parameters may need application whitelisting by
            Twitter before data can be fetched.  (provider.config.twitter.params)
          "$ref": "#/components/schemas/configNodePropertyArray"
        provider.config.refresh.userdata.enabled:
          description: If checked, refreshes user data upon each login to reflect
            changes or additional data requested. (provider.config.refresh.userdata.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmentCreationServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmentCreationServiceImplProperties"
    comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmentCreationServiceImplProperties:
      type: object
      properties:
        cq.social.content.fragments.services.enabled:
          description: Enable/Disable this service (enable). (cq.social.content.fragments.services.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.social.content.fragments.services.waitTimeSeconds:
          description: The amount of time to wait (in seconds) before timing out when
            waiting for fragment to be created. (cq.social.content.fragments.services.waitTimeSeconds)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFactoryProperties"
    comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFactoryProperties:
      type: object
      properties:
        isMemberCheck:
          description: Description for isMemberCheck (isMemberCheck)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoryProperties"
    comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoryProperties:
      type: object
      properties:
        isMemberCheck:
          description: Description for isMemberCheck (isMemberCheck)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLearningPathModelOperationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLearningPathModelOperationServiceProperties"
    comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLearningPathModelOperationServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: List of allowed whitelisted custom properties (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialEnablementResourceEndpointsImplEnablementResourceModelOperationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialEnablementResourceEndpointsImplEnablementResourceModelOperationServiceProperties"
    comAdobeCqSocialEnablementResourceEndpointsImplEnablementResourceModelOperationServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: List of allowed whitelisted custom properties (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialEnablementServicesImplAuthorMarkerImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeCqSocialEnablementServicesImplAuthorMarkerImplProperties:
      type: object
      properties:
        service.ranking:
          description: 
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGetServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGetServletProperties"
    comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGetServletProperties:
      type: object
      properties:
        sling.servlet.selectors:
          description: sling.servlet.selectors.description (sling.servlet.selectors)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.extensions:
          description: sling.servlet.extensions.description (sling.servlet.extensions)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperationsServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperationsServiceProperties"
    comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperationsServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: fieldWhitelist.description (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        attachmentTypeBlacklist:
          description: Black list of attachment mime types that are unsafe. (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties"
    comAdobeCqSocialForumClientEndpointsImplForumOperationsServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: fieldWhitelist.description (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        attachmentTypeBlacklist:
          description: Black list of attachment mime types that are unsafe. (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialForumDispatcherImplFlushOperationsInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialForumDispatcherImplFlushOperationsProperties"
    comAdobeCqSocialForumDispatcherImplFlushOperationsProperties:
      type: object
      properties:
        extension.order:
          description: extension.order.description (extension.order)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        flush.forumontopic:
          description: flush.forumontopic.description (flush.forumontopic)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponentFactoryProperties"
    comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponentFactoryProperties:
      type: object
      properties:
        group.listing.pagination.enable:
          description: Enable/Disable pagination in group Listing Pages. Enabling
            this  will improve performance but overlays for group listing page would
            require changes from customer. (group.listing.pagination.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        group.listing.lazyloading.enable:
          description: Enable/Disable shallow group on Listing Pages. Enabling this  will
            improve performance and fetch join/leave options on demand but overlays
            for group listing page would require changes from customer. (group.listing.lazyloading.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        page.size:
          description: Number of groups to be displayed per page (page.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        priority:
          description: Description for priority (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialGroupImplGroupServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialGroupImplGroupServiceImplProperties"
    comAdobeCqSocialGroupImplGroupServiceImplProperties:
      type: object
      properties:
        maxWaitTime:
          description: Description for maxWaitTime (maxWaitTime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        minWaitBetweenRetries:
          description: Description for minWaitBetweenRetries (minWaitBetweenRetries)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeCqSocialHandlebarsGuavaTemplateCacheImplProperties:
      type: object
      properties:
        parameter.guava.cache.enabled:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        parameter.guava.cache.params:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        parameter.guava.cache.reload:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        service.ranking:
          description: 
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsServiceProperties"
    comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: fieldWhitelist.description (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        attachmentTypeBlacklist:
          description: attachmentTypeBlacklist.description (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialJournalClientEndpointsImplJournalOperationsServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialJournalClientEndpointsImplJournalOperationsServiceProperties"
    comAdobeCqSocialJournalClientEndpointsImplJournalOperationsServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: fieldWhitelist.description (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        attachmentTypeBlacklist:
          description: Black list of attachment mime types that are unsafe. (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileOperationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileOperationServiceProperties"
    comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileOperationServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: Description for fieldWhitelist (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOperationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOperationServiceProperties"
    comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOperationServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: Description for fieldWhitelist (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFactoryProperties"
    comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFactoryProperties:
      type: object
      properties:
        everyoneLimit:
          description: How many memebrs of everyone group should be listed. Default
            is 200, -1 for all - Iterating all users in the system may result into
            unacceptable delay of the response. (everyoneLimit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        priority:
          description: Description for priority (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponentFactoryProperties"
    comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponentFactoryProperties:
      type: object
      properties:
        resourceType.filters:
          description: 'Specify resource types for searching: ScreenName=resource/type1:resource/type2...
            etc. (resourceType.filters)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        priority:
          description: Description for priority (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialModerationDashboardApiModerationDashboardSocialComponentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialModerationDashboardApiModerationDashboardSocialComponentFactoryProperties"
    comAdobeCqSocialModerationDashboardApiModerationDashboardSocialComponentFactoryProperties:
      type: object
      properties:
        priority:
          description: Description for priority (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponentFactoryProperties"
    comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponentFactoryProperties:
      type: object
      properties:
        priority:
          description: Description for priority (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialModerationDashboardInternalImplFilterGroupSocialComponentFactoryV2Info:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialModerationDashboardInternalImplFilterGroupSocialComponentFactoryV2Properties"
    comAdobeCqSocialModerationDashboardInternalImplFilterGroupSocialComponentFactoryV2Properties:
      type: object
      properties:
        resourceType.filters:
          description: 'Specify resource types for searching: ScreenName=resource/type1:resource/type2...
            etc. (resourceType.filters)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        priority:
          description: Description for priority (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialNotificationsImplMentionsRouterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialNotificationsImplMentionsRouterProperties"
    comAdobeCqSocialNotificationsImplMentionsRouterProperties:
      type: object
      properties:
        event.topics:
          description: mentionsrouter.topic.description (event.topics)
          "$ref": "#/components/schemas/configNodePropertyString"
        event.filter:
          description: Event filter used to filtering activity generated from SocialActivityManager
            (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialNotificationsImplNotificationManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialNotificationsImplNotificationManagerImplProperties"
    comAdobeCqSocialNotificationsImplNotificationManagerImplProperties:
      type: object
      properties:
        max.unread.notification.count:
          description: Number of maximum unread notifications (max.unread.notification.count)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialNotificationsImplNotificationsRouterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialNotificationsImplNotificationsRouterProperties"
    comAdobeCqSocialNotificationsImplNotificationsRouterProperties:
      type: object
      properties:
        event.topics:
          description: notificationsrouter.topic.description (event.topics)
          "$ref": "#/components/schemas/configNodePropertyString"
        event.filter:
          description: Event filter used to filtering activity generated from SocialActivityManager
            (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServiceProperties"
    comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: fieldWhitelist.description (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        attachmentTypeBlacklist:
          description: attachmentTypeBlacklist.description (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportImporterServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportImporterServiceImplProperties"
    comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportImporterServiceImplProperties:
      type: object
      properties:
        cq.social.reporting.analytics.polling.importer.interval:
          description: Import interval in hours. Default is set to 12h. (cq.social.reporting.analytics.polling.importer.interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.social.reporting.analytics.polling.importer.pageSize:
          description: Maximum number of items to fetch in a single call to Analytics
            (50,000 maximum) (cq.social.reporting.analytics.polling.importer.pageSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportManagementServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportManagementServiceImplProperties"
    comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportManagementServiceImplProperties:
      type: object
      properties:
        report.fetch.delay:
          description: Number in seconds between attempts to fetch a queued report.
            Default is set to 1. (report.fetch.delay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSocialComponentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSocialComponentFactoryProperties"
    comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSocialComponentFactoryProperties:
      type: object
      properties:
        cq.social.console.analytics.sites.mapping:
          description: Site URL Mappings, if mappings done on publish as well. For
            example /content/sites/community/en:/community (cq.social.console.analytics.sites.mapping)
          "$ref": "#/components/schemas/configNodePropertyArray"
        priority:
          description: Description for priority (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiceProperties"
    comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: fieldWhitelist.description (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        attachmentTypeBlacklist:
          description: attachmentTypeBlacklist.description (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletProperties"
    comAdobeCqSocialScfCoreOperationsImplSocialOperationsServletProperties:
      type: object
      properties:
        sling.servlet.selectors:
          description: Description for sling.servlet.selectors (sling.servlet.selectors)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.extensions:
          description: Description for sling.servlet.extensions (sling.servlet.extensions)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties"
    comAdobeCqSocialScfEndpointsImplDefaultSocialGetServletProperties:
      type: object
      properties:
        sling.servlet.selectors:
          description: Description for sling.servlet.selectors (sling.servlet.selectors)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.servlet.extensions:
          description: Description for sling.servlet.extensions (sling.servlet.extensions)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialScoringImplScoringEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialScoringImplScoringEventListenerProperties"
    comAdobeCqSocialScoringImplScoringEventListenerProperties:
      type: object
      properties:
        event.topics:
          description: Description for event.topics (event.topics)
          "$ref": "#/components/schemas/configNodePropertyString"
        event.filter:
          description: Description for event.filter (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplProperties"
    comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplProperties:
      type: object
      properties:
        enableFallback:
          description: Enables the fallback mechanism to allow use of loginAdministrative
            when necessary. (enableFallback)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties"
    comAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties:
      type: object
      properties:
        fieldWhitelist:
          description: fieldWhitelist.description (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sitePathFilters:
          description: sitePathFilters.description (sitePathFilters)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sitePackageGroup:
          description: sitePackageGroup.description (sitePackageGroup)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImplProperties"
    comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImplProperties:
      type: object
      properties:
        cq.social.console.analytics.components:
          description: A list of components that have been instrumented for Analytics
            (cq.social.console.analytics.components)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialSiteImplSiteConfiguratorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialSiteImplSiteConfiguratorImplProperties"
    comAdobeCqSocialSiteImplSiteConfiguratorImplProperties:
      type: object
      properties:
        componentsUsingTags:
          description: componentsUsingTags.description (componentsUsingTags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialSyncImplGroupSyncListenerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialSyncImplGroupSyncListenerImplProperties"
    comAdobeCqSocialSyncImplGroupSyncListenerImplProperties:
      type: object
      properties:
        nodetypes:
          description: The node types to listen for. (nodetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        ignorableprops:
          description: Properties that do not need to be distributed (ignorableprops)
          "$ref": "#/components/schemas/configNodePropertyArray"
        ignorablenodes:
          description: Subpaths that do not need to be distributed. Anything under
            these nodes will be ignored (ignorablenodes)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: enabled.description (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        distfolders:
          description: Usually folders are not distributed. There are some exceptions.
            They are listed here. (distfolders)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialSyncImplPublisherSyncServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialSyncImplPublisherSyncServiceImplProperties"
    comAdobeCqSocialSyncImplPublisherSyncServiceImplProperties:
      type: object
      properties:
        activeRunModes:
          description: Run modes in which this service should be active. (activeRunModes)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialSyncImplUserSyncListenerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialSyncImplUserSyncListenerImplProperties"
    comAdobeCqSocialSyncImplUserSyncListenerImplProperties:
      type: object
      properties:
        nodetypes:
          description: The node types to listen for. (nodetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        ignorableprops:
          description: Properties that do not need to be distributed (ignorableprops)
          "$ref": "#/components/schemas/configNodePropertyArray"
        ignorablenodes:
          description: Subpaths that do not need to be distributed. Anything under
            these nodes will be ignored (ignorablenodes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        enabled:
          description: enabled.description (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        distfolders:
          description: Usually folders are not distributed. There are some exceptions.
            They are listed here. (distfolders)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialTranslationImplTranslationServiceConfigManagerProperties"
    comAdobeCqSocialTranslationImplTranslationServiceConfigManagerProperties:
      type: object
      properties:
        translate.language:
          description: Description for translate.language (translate.language)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        translate.display:
          description: Description for translate.display (translate.display)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        translate.attribution:
          description: Append translation service provider attribution to translated
            result. Attribution text is editable in the Cloud Service configuration
            page. (translate.attribution)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        translate.caching:
          description: Description for translate.caching (translate.caching)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        translate.smart.rendering:
          description: Description for translate.smart.rendering (translate.smart.rendering)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        translate.caching.duration:
          description: Refresh translation after designated interval (number of months).
            Enter 0 to disable this feature. (translate.caching.duration)
          "$ref": "#/components/schemas/configNodePropertyString"
        translate.session.save.interval:
          description: Force session save after designated interval (number of seconds).
            Enter 0 to disable batch writing (translate.session.save.interval)
          "$ref": "#/components/schemas/configNodePropertyString"
        translate.session.save.batchLimit:
          description: If the session save interval is 0, then this value is irrelevant
            (translate.session.save.batchLimit)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialTranslationImplUGCLanguageDetectorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialTranslationImplUGCLanguageDetectorProperties"
    comAdobeCqSocialTranslationImplUGCLanguageDetectorProperties:
      type: object
      properties:
        event.topics:
          description: Description for event.topics (event.topics)
          "$ref": "#/components/schemas/configNodePropertyString"
        event.filter:
          description: Description for event.filter (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
        translate.listener.type:
          description: Enter the sling:resourceType and primary property used to determine
            the language of the content (space delimited). Only one property per resource
            type. (translate.listener.type)
          "$ref": "#/components/schemas/configNodePropertyArray"
        translate.property.list:
          description: Enter the sling:resourceType and property to translate (space
            delimited). (translate.property.list)
          "$ref": "#/components/schemas/configNodePropertyArray"
        poolSize:
          description: Description for poolSize (poolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxPoolSize:
          description: Description for maxPoolSize (maxPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queueSize:
          description: Description for queueSize (queueSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        keepAliveTime:
          description: Description for keepAliveTime (keepAliveTime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties"
    comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties:
      type: object
      properties:
        threadPoolSize:
          description: Number of workers in the delay flush threadpool (threadPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        delayTime:
          description: Number of milliseconds to wait between sending flush requests
            to the dispatcher (delayTime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        workerSleepTime:
          description: Number of milliseconds for a worker thread to sleep when there
            is nothing to do (workerSleepTime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties"
    comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplProperties:
      type: object
      properties:
        poolSize:
          description: poolSize.description (poolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxPoolSize:
          description: maxPoolSize.description (maxPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queueSize:
          description: queueSize.description (queueSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        keepAliveTime:
          description: keepAliveTime.description (keepAliveTime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseImplPublisherConfigurationImplProperties"
    comAdobeCqSocialUgcbaseImplPublisherConfigurationImplProperties:
      type: object
      properties:
        isPrimaryPublisher:
          description: Specifies whether this a primary publisher. Certain AEM Communities
            tasks will be handled by the primary publisher only. (isPrimaryPublisher)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialUgcbaseImplSocialUtilsImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseImplSocialUtilsImplProperties"
    comAdobeCqSocialUgcbaseImplSocialUtilsImplProperties:
      type: object
      properties:
        legacyCloudUGCPathMapping:
          description: Use full path in Cloud Storage UGC path generation. Truncated
            to page if false. (legacyCloudUGCPathMapping)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties"
    comAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties:
      type: object
      properties:
        automoderation.sequence:
          description: Name of the process processing user generated content upon
            submission (automoderation.sequence)
          "$ref": "#/components/schemas/configNodePropertyArray"
        automoderation.onfailurestop:
          description: Stop execution when a failure is encountered. (automoderation.onfailurestop)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties"
    comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties:
      type: object
      properties:
        watchwords.positive:
          description: A comma separated list of words contributing to a positive
            sentiment that override the defaults. (watchwords.positive)
          "$ref": "#/components/schemas/configNodePropertyArray"
        watchwords.negative:
          description: A comma separated list of words contributing to a negative
            sentiment that override the defaults. (watchwords.negative)
          "$ref": "#/components/schemas/configNodePropertyArray"
        watchwords.path:
          description: The location of a node containing default 'positive' and 'negative'
            properties specifying watchwords. (watchwords.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        sentiment.path:
          description: The location of the rules for calculating sentiment based on
            positive and negative watchwords. (sentiment.path)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlacklistServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlacklistServiceProperties"
    comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlacklistServiceProperties:
      type: object
      properties:
        default.attachment.type.blacklist:
          description: These file types will be rejected from upload to any AEM Social
            component whose blacklist is configured to "DEFAULT". Also rejected will
            be any listed on the baseline attachment type blacklist. (default.attachment.type.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        baseline.attachment.type.blacklist:
          description: These file types will be rejected from upload to any AEM Social
            component whether configured to use its own blacklist, or to use the DEFAULT.
            To restore original configuration move these entries to the Default Attachment
            Type Blacklist and make this list empty. (baseline.attachment.type.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties"
    comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties:
      type: object
      properties:
        parameter.whitelist:
          description: Parameter names to be allowed. (parameter.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        parameter.whitelist.prefixes:
          description: Parameter name prefixes to be allowed. (parameter.whitelist.prefixes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        binary.parameter.whitelist:
          description: Parameter names allowed to carry binary data. (binary.parameter.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        modifier.whitelist:
          description: Sling uses suffixed parameter names to control processing.
            Only suffixes defined here will be allowed. (modifier.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        operation.whitelist:
          description: Allowed values of the :operation parameter. In addition to
            this list an empty or missing value is allowed as well. (operation.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        operation.whitelist.prefixes:
          description: Operations values starting with these prefixes will be allowed.
            (operation.whitelist.prefixes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        typehint.whitelist:
          description: Sling uses @TypeHint parameter name suffixes to control the
            JCR type of created items. Only the type values defined here will be allowed.
            (typehint.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resourcetype.whitelist:
          description: Allowed values for sling:resourceType and sling:resourceSuperType
            properties. (resourcetype.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletProperties"
    comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletProperties:
      type: object
      properties:
        sling.servlet.extensions:
          description: sling.servlet.extensions.description (sling.servlet.extensions)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.paths:
          description: sling.servlet.paths.description (sling.servlet.paths)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.methods:
          description: sling.servlet.methods.description (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialUserImplTransportHttpToPublisherInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialUserImplTransportHttpToPublisherProperties"
    comAdobeCqSocialUserImplTransportHttpToPublisherProperties:
      type: object
      properties:
        enable:
          description: Enable/Disable this service (enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        agent.configuration:
          description: The location of a replication agent's configuration containing
            the Publish login info (agent.configuration)
          "$ref": "#/components/schemas/configNodePropertyArray"
        context.path:
          description: The HTTP context path at the publish instance(s) if not the
            default "/" (context.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        disabled.cipher.suites:
          description: List of cipher suites that should be explicitly disabled. Default
            is none. (disabled.cipher.suites)
          "$ref": "#/components/schemas/configNodePropertyArray"
        enabled.cipher.suites:
          description: List of cipher suites that should be explicitly enabled. Default
            is none. (enabled.cipher.suites)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceProperties"
    comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceProperties:
      type: object
      properties:
        threshold:
          description: Minimum number of assets/references required for asynchronous
            job processing. If the number of assets is less than threshold, then synchronous
            processing will be done. (threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        jobTopicName:
          description: The topic name on which the operation of type will be published
            and subsequently processed by the job executor. (jobTopicName)
          "$ref": "#/components/schemas/configNodePropertyString"
        emailEnabled:
          description: Enable or Disable the email notifications for this job status.
            e.g. success,failed (emailEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskProperties"
    comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskProperties:
      type: object
      properties:
        scheduler.expression:
          description: Description for scheduler.expression (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        job.purge.threshold:
          description: Number of days after which a job should be deleted (job.purge.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        job.purge.max.jobs:
          description: Number of jobs in job history after which extra jobs should
            be deleted (job.purge.max.jobs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties"
    comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceProperties:
      type: object
      properties:
        threshold:
          description: Minimum number of asset/references required to process move
            operation asynchronously. (threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        jobTopicName:
          description: The topic name on which the operation of type will be published
            and subsequently processed by the job executor. (jobTopicName)
          "$ref": "#/components/schemas/configNodePropertyString"
        emailEnabled:
          description: Enable or Disable the email notifications for this job status.
            e.g. success,failed (emailEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties"
    comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceProperties:
      type: object
      properties:
        threshold:
          description: Minimum number of references required to process page move
            operation asynchronously. (threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        jobTopicName:
          description: The topic name on which the operation of type will be published
            and subsequently processed by the job executor. (jobTopicName)
          "$ref": "#/components/schemas/configNodePropertyString"
        emailEnabled:
          description: Enable or Disable the email notifications for this job status.
            e.g. success,failed (emailEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties"
    comAdobeCqWcmLaunchesImplLaunchesEventHandlerProperties:
      type: object
      properties:
        event.filter:
          description: event.filter.description (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
        launches.eventhandler.threadpool.maxsize:
          description: The maximal amount of threads handling events in parallel (launches.eventhandler.threadpool.maxsize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        launches.eventhandler.threadpool.priority:
          description: The priority of the background thread to handle events (launches.eventhandler.threadpool.priority)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        launches.eventhandler.updatelastmodification:
          description: Update last modification of the launch when one of the launch
            page is modified (launches.eventhandler.updatelastmodification)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorProperties"
    comAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorProperties:
      type: object
      properties:
        cq.wcm.qrcode.servlet.whitelist:
          description: List of regular expressions (regex) indicating which URLs are
            allowed for the creation of QR Codes images. The Author and Publish servers,
            based on the Externalizer service, are automatically whitelisted. (cq.wcm.qrcode.servlet.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplProperties"
    comAdobeCqWcmStyleInternalComponentStyleInfoCacheImplProperties:
      type: object
      properties:
        size:
          description: Maximum object entries of the cache (size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties"
    comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties:
      type: object
      properties:
        syncTranslationState.schedulingFormat:
          description: Please specify cron format for changing the scheduling (syncTranslationState.schedulingFormat)
          "$ref": "#/components/schemas/configNodePropertyString"
        schedulingRepeatTranslation.schedulingFormat:
          description: Please specify cron format for changing the scheduling for
            repeat translation (schedulingRepeatTranslation.schedulingFormat)
          "$ref": "#/components/schemas/configNodePropertyString"
        syncTranslationState.lockTimeoutInMinutes:
          description: Please specify value in minutes after which translation sync
            lock will timeout. (syncTranslationState.lockTimeoutInMinutes)
          "$ref": "#/components/schemas/configNodePropertyString"
        export.format:
          description: Please specify the format for exporting translation jobs (export.format)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties"
    comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties:
      type: object
      properties:
        portal.outboxes:
          description: To configure outboxes for Forms Portal Draft Save and Submit
            Options (portal.outboxes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        draft.data.service:
          description: Identifier for draft data service (draft.data.service)
          "$ref": "#/components/schemas/configNodePropertyString"
        draft.metadata.service:
          description: Identifier for draft metadata service (draft.metadata.service)
          "$ref": "#/components/schemas/configNodePropertyString"
        submit.data.service:
          description: Identifier for submit data service (submit.data.service)
          "$ref": "#/components/schemas/configNodePropertyString"
        submit.metadata.service:
          description: Identifier for submit metadata service (submit.metadata.service)
          "$ref": "#/components/schemas/configNodePropertyString"
        pendingSign.data.service:
          description: Identifier for pending sign data service (pendingSign.data.service)
          "$ref": "#/components/schemas/configNodePropertyString"
        pendingSign.metadata.service:
          description: Identifier for pending sign metadata service (pendingSign.metadata.service)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeFdFpConfigFormsPortalSchedulerServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeFdFpConfigFormsPortalSchedulerServiceProperties"
    comAdobeFdFpConfigFormsPortalSchedulerServiceProperties:
      type: object
      properties:
        formportal.interval:
          description: Interval in which clean up thread should trigger (formportal.interval)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeFormsCommonServiceImplDefaultDataProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeFormsCommonServiceImplDefaultDataProviderProperties"
    comAdobeFormsCommonServiceImplDefaultDataProviderProperties:
      type: object
      properties:
        alloweddataFileLocations:
          description: The list of paths allowed for prefill of Adaptive Forms. Paths
            can either be a string or a regex. (alloweddataFileLocations)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImplProperties"
    comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImplProperties:
      type: object
      properties:
        tempStorageConfig:
          description: Verify Step and File Preview functionality requires use of
            temporary storage for adaptive forms. It allows users of only specified
            type to use these features. (tempStorageConfig)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comAdobeFormsCommonServletTempCleanUpTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeFormsCommonServletTempCleanUpTaskProperties"
    comAdobeFormsCommonServletTempCleanUpTaskProperties:
      type: object
      properties:
        scheduler.expression:
          description: Cron expression scheduling this job. Default is every hour.
            See http://www.docjar.com/docs/api/org/quartz/CronTrigger.html for a description
            of the format for this value (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        Duration for Temporary Storage:
          description: Service will delete temporary nodes that were created before
            the (duration_temp_storage) from the current time (Duration for Temporary
            Storage)
          "$ref": "#/components/schemas/configNodePropertyString"
        Duration for Anonymous Storage:
          description: Service will delete anonymous temporary nodes that were created
            before the (duration_temp_storage) from the current time (Duration for
            Anonymous Storage)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAcpPlatformPlatformServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAcpPlatformPlatformServletProperties"
    comAdobeGraniteAcpPlatformPlatformServletProperties:
      type: object
      properties:
        query.limit:
          description: The maximum number of results that will be returned for any
            query. This includes queries for asset containing asearch string and for
            children of a directory. (query.limit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        file.type.extension.map:
          description: 'Mappings that supplement the Apache Sling MIME Type Service
            to support filtering by file extension. The format for each entry is:
            <MIMEtype> <extension>, a MIME type followed by whitespace followed by
            an extension. Both MIME types and extensions may appear in multiple entries.
            (file.type.extension.map)'
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteActivitystreamsImplActivityManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteActivitystreamsImplActivityManagerImplProperties"
    comAdobeGraniteActivitystreamsImplActivityManagerImplProperties:
      type: object
      properties:
        aggregate.relationships:
          description: Defines the relationship types to use for default aggregation.
            (aggregate.relationships)
          "$ref": "#/components/schemas/configNodePropertyArray"
        aggregate.descend.virtual:
          description: Defines if aggregation should follow virtual graph nodes. (aggregate.descend.virtual)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteAnalyzerBaseSystemStatusServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAnalyzerBaseSystemStatusServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteAnalyzerBaseSystemStatusServletProperties:
      type: object
      properties:
        disabled:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletProperties:
      type: object
      properties:
        disabled:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteApicontrollerFilterResolverHookFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteApicontrollerFilterResolverHookFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteApicontrollerFilterResolverHookFactoryProperties:
      type: object
      properties:
        com.adobe.cq.cdn.cdn-rewriter:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cloud-config.components:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cloud-config.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cloud-config.ui:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.com.adobe.cq.editor:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.com.adobe.cq.projects.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.com.adobe.cq.projects.wcm.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.com.adobe.cq.ui.commons:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.com.adobe.cq.wcm.style:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cq-activitymap-integration:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cq-contexthub-commons:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cq-dtm:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cq-healthcheck:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cq-multisite-targeting:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cq-pre-upgrade-cleanup:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cq-product-info-provider:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cq-rest-sites:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.cq-security-hc:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.dam.cq-dam-svg-handler:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.dam.cq-scene7-imaging:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.dtm-reactor.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.dtm-reactor.ui:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.exp-jspel-resolver:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.inbox.cq-inbox:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.json-schema-parser:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.media.cq-media-publishing-dps-fp-core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.mobile.cq-mobile-caas:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.mobile.cq-mobile-index-builder:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.mobile.cq-mobile-phonegap-build:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.myspell:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.sample.we.retail.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.screens.com.adobe.cq.screens.dcc:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.screens.com.adobe.cq.screens.mq.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-as-provider:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-badging-basic-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-badging-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-calendar-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-content-fragments-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-enablement-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-graph-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-ideation-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-jcr-provider:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-members-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-ms-provider:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-notifications-channels-web:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-notifications-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-rdb-provider:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-scf-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-scoring-basic-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-scoring-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-serviceusers-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-srp-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.cq.social.cq-social-ugcbase-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.dam.cq-dam-cfm-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.forms.foundation-forms-foundation-base:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.apicontroller:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.asset.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.auth.sso:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.bundles.hc.impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.compat-router:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.conf:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.conf.ui.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.cors:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.crx-explorer:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.crxde-lite:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.crypto.config:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.crypto.extension:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.crypto.file:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.crypto.jcr:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.csrf:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.distribution.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.dropwizard.metrics:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.frags.impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.gibson:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.infocollector:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.installer.factory.packages:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.jetty.ssl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.jobs.async:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.maintenance.oak:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.monitoring.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.queries:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.replication.hc.impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.repository.checker:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.repository.hc.impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.rest.assets:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.security.ui:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.startup:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.tagsoup:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.taskmanagement.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.taskmanagement.workflow:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.ui.clientlibs.compiler.less:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.ui.clientlibs.processor.gcc:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.webconsole.plugins:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.workflow.console:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.xmp.worker.files.native.fragment.linux:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.xmp.worker.files.native.fragment.macosx:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.xmp.worker.files.native.fragment.win:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.commons.osgi.wrapper.simple-jndi:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.cq-authhandler:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.cq-compat-configupdate:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.cq-licensebranding:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.cq-notifcation-impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.cq-replication-audit:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.cq-search-ext:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.dam.cq-dam-annotation-print:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.dam.cq-dam-asset-usage:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.dam.cq-dam-s7dam:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.dam.cq-dam-similaritysearch:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.dam.dam-webdav-support:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.pre-upgrade-tasks:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.replication.extensions:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.wcm.cq-msm-core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        com.day.cq.wcm.cq-wcm-translation:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        day-commons-jrawio:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.aries.jmx.whiteboard:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.http.sslfilter:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.org.apache.felix.threaddump:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.webconsole.plugins.ds:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.webconsole.plugins.event:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.webconsole.plugins.memoryusage:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.webconsole.plugins.packageadmin:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.jackrabbit.oak-auth-ldap:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.jackrabbit.oak-segment-tar:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.jackrabbit.oak-solr-osgi:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.bundleresource.impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.fsclassloader:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.log.webconsole:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.datasource:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.discovery.base:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.discovery.oak:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.discovery.support:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.distribution.api:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.distribution.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.extensions.webconsolesecurityprovider:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.hc.webconsole:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.installer.console:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.installer.provider.file:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.installer.provider.jcr:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.jcr.davex:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.jcr.resourcesecurity:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.jmx.provider:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.launchpad.installer:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.models.impl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.repoinit.parser:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.resource.inventory:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.resourceresolver:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.scripting.javascript:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.scripting.jst:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.scripting.sightly.js.provider:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.scripting.sightly.models.provider:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.security:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.servlets.compat:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.servlets.get:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.startupfilter.disabler:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.tracer:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        we.retail.client.app.core:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthCertImplClientCertAuthHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthCertImplClientCertAuthHandlerProperties"
    comAdobeGraniteAuthCertImplClientCertAuthHandlerProperties:
      type: object
      properties:
        path:
          description: path.description (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        service.ranking:
          description: OSGi Framework Service Ranking value to indicate the order
            in which to call this service. This is an int value where higher values
            designate higher precedence. Default value is 0. (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteAuthImsInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthImsProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteAuthImsProperties:
      type: object
      properties:
        configid:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        scope:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties"
    comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionProperties:
      type: object
      properties:
        oauth.provider.id:
          description: Assign a unique Provider ID (oauth.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthImsImplImsConfigProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplImsConfigProviderImplProperties"
    comAdobeGraniteAuthImsImplImsConfigProviderImplProperties:
      type: object
      properties:
        oauth.configmanager.ims.configid:
          description: Identifier that must match a configured oauth.config.id. (oauth.configmanager.ims.configid)
          "$ref": "#/components/schemas/configNodePropertyString"
        ims.owningEntity:
          description: IMS Organization Identifier (ims.owningEntity)
          "$ref": "#/components/schemas/configNodePropertyString"
        aem.instanceId:
          description: AEM instance unique identifier (aem.instanceId)
          "$ref": "#/components/schemas/configNodePropertyString"
        ims.serviceCode:
          description: IMS Service Code (ims.serviceCode)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorProperties"
    comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorProperties:
      type: object
      properties:
        oauth.provider.id:
          description: Assign a unique Provider ID (oauth.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthImsImplIMSProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplIMSProviderImplProperties"
    comAdobeGraniteAuthImsImplIMSProviderImplProperties:
      type: object
      properties:
        oauth.provider.id:
          description: Assign a unique Provider ID (oauth.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.ims.authorization.url:
          description: The URL of the IMS Authorization Endpoint (oauth.provider.ims.authorization.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.ims.token.url:
          description: The URL of the IMS Token Endpoint (oauth.provider.ims.token.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.ims.profile.url:
          description: The URL of the IMS Profile Endpoint (oauth.provider.ims.profile.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.ims.extended.details.urls:
          description: The list of URLs used to fetch additional data (oauth.provider.ims.extended.details.urls)
          "$ref": "#/components/schemas/configNodePropertyArray"
        oauth.provider.ims.validate.token.url:
          description: The URL of the IMS API - validate token (e.g. <ENV>/ims/validate_token/v1)
            (oauth.provider.ims.validate.token.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.ims.session.property:
          description: The name of the property that defines the session data url
            (oauth.provider.ims.session.property)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.ims.service.token.client.id:
          description: The Service Token Client Id (oauth.provider.ims.service.token.client.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.ims.service.token.client.secret:
          description: The Service Token Client Secret (oauth.provider.ims.service.token.client.secret)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.ims.service.token:
          description: The Service Token (oauth.provider.ims.service.token)
          "$ref": "#/components/schemas/configNodePropertyString"
        ims.org.ref:
          description: IMS organization to sync from, in the form of <orgID> (with
            AdobeOrg as default auth source) or <orgID>@<authSrc> to specify the auth
            source as well. Optional, if not set will not sync groups. (ims.org.ref)
          "$ref": "#/components/schemas/configNodePropertyString"
        ims.group.mapping:
          description: 'Mappings of IMS groups to local groups. Each entry is one
            group mapping, with the form: ''<groupName>:<groupRole>=<localGroupID>'',
            for example: ''Administrators:GRP_ADMIN=my-administrators''. Wildcards
            (* = all chars, ? = single char) are supported, for example: ''*:GRP_ADMIN=my-administrators''.
            Requires organization (ims.org_ref) to be set. (ims.group.mapping)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        oauth.provider.ims.only.license.group:
          description: Sync Only The Group Member of the License Group (oauth.provider.ims.only.license.group)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties"
    comAdobeGraniteAuthOauthImplBearerAuthenticationHandlerProperties:
      type: object
      properties:
        path:
          description: Repository path for which this authentication handler should
            be used by Sling. If this is empty, the authentication handler will be
            disabled. By default this is set to "/". (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.clientIds.allowed:
          description: List of allowed OAuth client ids. If this is empty is not possible
            to authenticate using the Bearer Authentication Handler (oauth.clientIds.allowed)
          "$ref": "#/components/schemas/configNodePropertyArray"
        auth.bearer.sync.ims:
          description: If checked (default), then the crx user is synchronized with
            the Provider at each login (auth.bearer.sync.ims)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        auth.tokenRequestParameter:
          description: The name of the request parameter property that is used if
            the authorization header is missing. If this property is empty, request
            parameter support is disabled (which is the default). (auth.tokenRequestParameter)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.bearer.configid:
          description: The name of the request parameter property that is used for
            identifying the configuration. (oauth.bearer.configid)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.jwt.support:
          description: Use JWT (JSON Web Token) standard for validation (if available)
            (oauth.jwt.support)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties"
    comAdobeGraniteAuthOauthImplDefaultTokenValidatorImplProperties:
      type: object
      properties:
        auth.token.validator.type:
          description: The name for referencing the token validator implementation
            to use. e.g. use 'default' to bind to services provided by the default
            implementation. (auth.token.validator.type)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthOauthImplFacebookProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplFacebookProviderImplProperties"
    comAdobeGraniteAuthOauthImplFacebookProviderImplProperties:
      type: object
      properties:
        oauth.provider.id:
          description: Assign a unique Provider ID (oauth.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthOauthImplGithubProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplGithubProviderImplProperties"
    comAdobeGraniteAuthOauthImplGithubProviderImplProperties:
      type: object
      properties:
        oauth.provider.id:
          description: Assign a unique Provider ID (oauth.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.github.authorization.url:
          description: The URL of the Github Authorization Endpoint (oauth.provider.github.authorization.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.github.token.url:
          description: The URL of the Github Token Endpoint (oauth.provider.github.token.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.github.profile.url:
          description: The URL of the Github Profile Endpoint (oauth.provider.github.profile.url)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthOauthImplGraniteProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplGraniteProviderProperties"
    comAdobeGraniteAuthOauthImplGraniteProviderProperties:
      type: object
      properties:
        oauth.provider.id:
          description: com.adobe.granite.auth.oauth.impl.GraniteProvider.oauth.provider.id.description
            (oauth.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.granite.authorization.url:
          description: com.adobe.granite.auth.oauth.impl.GraniteProvider.oauth.provider.granite.authorization.url.description
            (oauth.provider.granite.authorization.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.granite.token.url:
          description: com.adobe.granite.auth.oauth.impl.GraniteProvider.oauth.provider.granite.token.url.description
            (oauth.provider.granite.token.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.granite.profile.url:
          description: com.adobe.granite.auth.oauth.impl.GraniteProvider.oauth.provider.granite.profile.url.description
            (oauth.provider.granite.profile.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.provider.granite.extended.details.urls:
          description: com.adobe.granite.auth.oauth.impl.GraniteProvider.oauth.provider.granite.extended.details.urls.description
            (oauth.provider.granite.extended.details.urls)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplHelperProviderConfigManagerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteAuthOauthImplHelperProviderConfigManagerProperties:
      type: object
      properties:
        oauth.cookie.login.timeout:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.cookie.max.age:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties"
    comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalProperties:
      type: object
      properties:
        oauth.cookie.login.timeout:
          description: Max-Age for the encrypted cookie before authorization has completed;
            -1 indicates a session cookie (only valid for the current browser session).
            (oauth.cookie.login.timeout)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.cookie.max.age:
          description: Max-Age for the encrypted cookie after authorization has succeeded;
            -1 indicates a session cookie (only valid for the current browser session)
            (oauth.cookie.max.age)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerProperties"
    comAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerProperties:
      type: object
      properties:
        path:
          description: Repository path for which this authentication handler should
            be used by Sling. If this is empty, the authentication handler will be
            disabled. By default this is set to "/". (path)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthOauthImplTwitterProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthImplTwitterProviderImplProperties"
    comAdobeGraniteAuthOauthImplTwitterProviderImplProperties:
      type: object
      properties:
        oauth.provider.id:
          description: Assign a unique Provider ID (oauth.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerProperties"
    comAdobeGraniteAuthRequirementImplDefaultRequirementHandlerProperties:
      type: object
      properties:
        supportedPaths:
          description: Paths under which authentication requirements will be respected
            by this handler. Leave this configuration unset if you want to add the
            'granite:AuthenticationRequirement' mixin type to nodes without having
            them enforced (e.g. on author instances). (supportedPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties"
    comAdobeGraniteAuthSsoImplSsoAuthenticationHandlerProperties:
      type: object
      properties:
        path:
          description: Repository path for which this authentication handler should
            be used by Sling. If this is empty, the authentication handler will be
            disabled. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        service.ranking:
          description: OSGi Framework Service Ranking value to indicate the order
            in which to call this service. This is an int value where higher values
            designate higher precedence. Default value is 0. (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        jaas.controlFlag:
          description: Property name specifying whether or not a LoginModule is REQUIRED,
            REQUISITE, SUFFICIENT or OPTIONAL. Refer to the JAAS configuration documentation
            for more details around the meaning of these flags. Jackrabbit Oak only.
            (jaas.controlFlag)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.realmName:
          description: Property name specifying the realm name (or application name)
            against which the LoginModule is be registered. If no realm name is provided
            then LoginModule is registered with a default realm as configured in the
            Felix JAAS configuration. Jackrabbit Oak only. (jaas.realmName)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.ranking:
          description: Property name specifying the ranking (i.e. sort order) of the
            configured login module entries. The entries are sorted in a descending
            order (i.e. higher value ranked configurations come first). Jackrabbit
            Oak only. (jaas.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        headers:
          description: One or more HTTP Headers which might provide the user ID. (headers)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cookies:
          description: One or more names of Cookies which might provide the user ID.
            (cookies)
          "$ref": "#/components/schemas/configNodePropertyArray"
        parameters:
          description: One or more names of Request Parameters which might provide
            the user ID. (parameters)
          "$ref": "#/components/schemas/configNodePropertyArray"
        usermap:
          description: For selected users, the user name extracted from the HTTP request
            can be replaced with a different one in the credentials object. The mapping
            is defined here. If the user name "admin" appears on either side of the
            map, the mapping will be ignored . The character "=" has to be escaped
            with a leading "\". (usermap)
          "$ref": "#/components/schemas/configNodePropertyArray"
        format:
          description: Indication of the format in which the user ID is provided.
            Use "Basic" if the user ID is encoded in the HTTP Basic Authentication
            format, "AsIs" if the user ID is provided in plain text or any regular
            expression applied value should be used as is or any regular expression.
            (format)
          "$ref": "#/components/schemas/configNodePropertyString"
        trustedCredentialsAttribute:
          description: The name of the attribute which is set with the user information
            in the trusted credentials. This needs to match the "trust_credentials_attribute"
            configuration of the default login module in Jackrabbit.However, this
            feature is deprecated and will no longer be supported in Jackrabbit Oak.
            (trustedCredentialsAttribute)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplCodeCacheHealthCheckProperties"
    comAdobeGraniteBundlesHcImplCodeCacheHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        minimum.code.cache.size:
          description: Threshold for the code cache size, under which the health check
            will return a warning (minimum.code.cache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties"
    comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplDavExBundleHealthCheckProperties"
    comAdobeGraniteBundlesHcImplDavExBundleHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties"
    comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        ignored.bundles:
          description: One or more Bundle Symbolic Names to be ignored. (ignored.bundles)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteBundlesHcImplJobsHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplJobsHealthCheckProperties"
    comAdobeGraniteBundlesHcImplJobsHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        max.queued.jobs:
          description: Threshold on the number of queued jobs that could exist at
            a certain moment (max.queued.jobs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckProperties"
    comAdobeGraniteBundlesHcImplSlingGetServletHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties"
    comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckProperties"
    comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties"
    comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckProperties"
    comAdobeGraniteBundlesHcImplWebDavBundleHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteCommentsInternalCommentReplicationContentFilterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteCommentsInternalCommentReplicationContentFilterFactoryProperties"
    comAdobeGraniteCommentsInternalCommentReplicationContentFilterFactoryProperties:
      type: object
      properties:
        replicate.comment.resourceTypes:
          description: Comments collection sling resource types allowed for replication,
            add exact values (replicate.comment.resourceTypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplProperties"
    comAdobeGraniteCompatrouterImplCompatSwitchingServiceImplProperties:
      type: object
      properties:
        compatgroups:
          description: Groups turned on for compat mode (compatgroups)
          "$ref": "#/components/schemas/configNodePropertyArray"
        enabled:
          description: Switches compat routing on (bidirectional) (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingStrategyInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingStrategyProperties"
    comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingStrategyProperties:
      type: object
      properties:
        enabled:
          description: Enable this configuration resource resolving strategy. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        fallbackPaths:
          description: Global fallback configurations, ordered from most specific
            (checked first) to least specific. (fallbackPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteContexthubImplContextHubImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteContexthubImplContextHubImplProperties"
    comAdobeGraniteContexthubImplContextHubImplProperties:
      type: object
      properties:
        com.adobe.granite.contexthub.silent_mode:
          description: Silent mode - turn this option on to disable ContextHub's debug
            output. (com.adobe.granite.contexthub.silent_mode)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        com.adobe.granite.contexthub.show_ui:
          description: Indicates weather ContextHub's UI should be displayed. (com.adobe.granite.contexthub.show_ui)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteCsrfImplCSRFFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteCsrfImplCSRFFilterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteCsrfImplCSRFFilterProperties:
      type: object
      properties:
        filter.methods:
          description: These methods are checked by the filter. (filter.methods)
          "$ref": "#/components/schemas/configNodePropertyArray"
        filter.enable.safe.user.agents:
          description: If this setting is enabled, browser and not browser agents
            will be checked by the filter. If this setting is disabled, only browsers
            will be checked, non-browser clients will not be checked by the filter.
            The Safe User Agents will never be checked regardless of this setting.
            (filter.enable.safe.user.agents)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        filter.safe.user.agents:
          description: These safe User Agents are not checked by the filter. (filter.safe.user.agents)
          "$ref": "#/components/schemas/configNodePropertyArray"
        filter.excluded.paths:
          description: These paths are excluded by the filter. Each entry is of the
            form 'path'. (filter.excluded.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteCsrfImplCSRFServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteCsrfImplCSRFServletProperties"
    comAdobeGraniteCsrfImplCSRFServletProperties:
      type: object
      properties:
        csrf.token.expires.in:
          description: The lifetime in seconds of the csrf token (min 600 seconds/10
            minutes) (csrf.token.expires.in)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        sling.auth.requirements:
          description: Description for sling.auth.requirements (sling.auth.requirements)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicationAgentProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicationAgentProviderProperties"
    comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicationAgentProviderProperties:
      type: object
      properties:
        providerName:
          description: com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider.providerName.description
            (providerName)
          "$ref": "#/components/schemas/configNodePropertyString"
        forward.requests:
          description: com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider.forward.requests.description
            (forward.requests)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteDistributionCoreImplReplicationDistributionTransportHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplReplicationDistributionTransportHandlerProperties"
    comAdobeGraniteDistributionCoreImplReplicationDistributionTransportHandlerProperties:
      type: object
      properties:
        forward.requests:
          description: com.adobe.granite.distribution.core.impl.replication.DistributionTransportHandler.forward.requests.description
            (forward.requests)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteHttpcacheFileFileCacheStoreInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteHttpcacheFileFileCacheStoreProperties"
    comAdobeGraniteHttpcacheFileFileCacheStoreProperties:
      type: object
      properties:
        com.adobe.granite.httpcache.file.documentRoot:
          description: Cache document root (com.adobe.granite.httpcache.file.documentRoot)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.httpcache.file.includeHost:
          description: Whether to include host name in document root (com.adobe.granite.httpcache.file.includeHost)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteHttpcacheImplOuterCacheFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteHttpcacheImplOuterCacheFilterProperties"
    comAdobeGraniteHttpcacheImplOuterCacheFilterProperties:
      type: object
      properties:
        com.adobe.granite.httpcache.url.paths:
          description: URL path prefixes (com.adobe.granite.httpcache.url.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteI18nImplBundlePseudoTranslationsInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteI18nImplBundlePseudoTranslationsProperties"
    comAdobeGraniteI18nImplBundlePseudoTranslationsProperties:
      type: object
      properties:
        pseudo.patterns:
          description: List of patterns for different countries within the "zz" language.
            Entries must have the form "<country> <pattern>" (space delimited), where
            country is a country code such as "zz" and pattern is the translation
            pattern which can use {string} for the original string and {comment} for
            the translation comment (optional) (pseudo.patterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteI18nImplPreferencesLocaleResolverServiceProperties"
    comAdobeGraniteI18nImplPreferencesLocaleResolverServiceProperties:
      type: object
      properties:
        security.preferences.name:
          description: Name of the preference the user's locale is stored. Be careful
            when changing this value as it affects the whole installation. (security.preferences.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteInfocollectorInfoCollectorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteInfocollectorInfoCollectorProperties"
    comAdobeGraniteInfocollectorInfoCollectorProperties:
      type: object
      properties:
        granite.infocollector.includeThreadDumps:
          description: Include thread dump files (granite.infocollector.includeThreadDumps)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        granite.infocollector.includeHeapDump:
          description: Include heap dump file (granite.infocollector.includeHeapDump)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties:
      type: object
      properties:
        com.adobe.granite.jetty.ssl.port:
          description: Port to listen on for HTTPS requests. Defaults to 8443. (com.adobe.granite.jetty.ssl.port)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        com.adobe.granite.jetty.ssl.keystore.user:
          description: The userID of the Keystore user (com.adobe.granite.jetty.ssl.keystore.user)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.jetty.ssl.keystore.password:
          description: Password to access the Keystore. (com.adobe.granite.jetty.ssl.keystore.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        com.adobe.granite.jetty.ssl.ciphersuites.excluded:
          description: List of cipher suites that should be excluded. Default is none.
            (com.adobe.granite.jetty.ssl.ciphersuites.excluded)
          "$ref": "#/components/schemas/configNodePropertyArray"
        com.adobe.granite.jetty.ssl.ciphersuites.included:
          description: List of cipher suites that should be included. Default is none.
            (com.adobe.granite.jetty.ssl.ciphersuites.included)
          "$ref": "#/components/schemas/configNodePropertyArray"
        com.adobe.granite.jetty.ssl.client.certificate:
          description: Requirement for the Client to provide a valid certifcate. Defaults
            to none. (com.adobe.granite.jetty.ssl.client.certificate)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comAdobeGraniteLicenseImplLicenseCheckFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteLicenseImplLicenseCheckFilterProperties"
    comAdobeGraniteLicenseImplLicenseCheckFilterProperties:
      type: object
      properties:
        checkInternval:
          description: The time in milliseconds between two license pings. (checkInternval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        excludeIds:
          description: List of server ids to be excluded from the license ping. (excludeIds)
          "$ref": "#/components/schemas/configNodePropertyArray"
        encryptPing:
          description: Controls whether the ping is sent as plain text or encrypted.
            (encryptPing)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteLoggingImplLogAnalyserImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteLoggingImplLogAnalyserImplProperties"
    comAdobeGraniteLoggingImplLogAnalyserImplProperties:
      type: object
      properties:
        messages.queue.size:
          description: Number of logging events to keep. A size below 1 disables keeping
            the log events. (messages.queue.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        logger.config:
          description: Each configuration entry should have the format {category}:{level}.
            (logger.config)
          "$ref": "#/components/schemas/configNodePropertyArray"
        messages.size:
          description: Maximum size of a message in kilo byte to be stored. A size
            lower than 1 means the whole message is stored. (messages.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteLoggingImplLogErrorHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteLoggingImplLogErrorHealthCheckProperties"
    comAdobeGraniteLoggingImplLogErrorHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: The tags for this health check to be used in a composite health
            check (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskProperties:
      type: object
      properties:
        granite.maintenance.mandatory:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        job.topics:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskProperties:
      type: object
      properties:
        job.topics:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHandlerProperties"
    comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHandlerProperties:
      type: object
      properties:
        path:
          description: Repository path for which this authentication handler should
            be used by Sling. If this is empty, the authentication handler will be
            disabled. By default this is set to "/". (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.controlFlag:
          description: jaas.controlFlag.description (jaas.controlFlag)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.realmName:
          description: jaas.realmName.description (jaas.realmName)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.ranking:
          description: jaas.ranking.description (jaas.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        oauth.offline.validation:
          description: Enable offline validation (through JWT). (oauth.offline.validation)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplAccessTokenCleanupTaskProperties"
    comAdobeGraniteOauthServerImplAccessTokenCleanupTaskProperties:
      type: object
      properties:
        scheduler.expression:
          description: Cron expression scheudling this job. Default is hourly 07m23s
            after the hour. See http://www.docjar.com/docs/api/org/quartz/CronTrigger.html
            for a description of the format for this value. (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletProperties"
    comAdobeGraniteOauthServerImplOAuth2ClientRevocationServletProperties:
      type: object
      properties:
        oauth.client.revocation.active:
          description: Enable/Disable token revocation functionality on a per client
            basis (oauth.client.revocation.active)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletProperties"
    comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletProperties:
      type: object
      properties:
        sling.servlet.paths:
          description: The servlet paths (sling.servlet.paths)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.revocation.active:
          description: Enable/Disable token revocation functionality on a per client
            basis (oauth.revocation.active)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties"
    comAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties:
      type: object
      properties:
        oauth.issuer:
          description: The name of the issuer of the token (oauth.issuer)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.access.token.expires.in:
          description: The lifetime in seconds of the access token (oauth.access.token.expires.in)
          "$ref": "#/components/schemas/configNodePropertyString"
        osgi.http.whiteboard.servlet.pattern:
          description: osgi.http.whiteboard.servlet.pattern.description (osgi.http.whiteboard.servlet.pattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        osgi.http.whiteboard.context.select:
          description: osgi.http.whiteboard.context.select.description (osgi.http.whiteboard.context.select)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletProperties"
    comAdobeGraniteOauthServerImplOAuth2TokenRevocationServletProperties:
      type: object
      properties:
        oauth.token.revocation.active:
          description: Enable/Disable token revocation functionality (oauth.token.revocation.active)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOffloadingImplOffloadingConfiguratorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplOffloadingConfiguratorProperties"
    comAdobeGraniteOffloadingImplOffloadingConfiguratorProperties:
      type: object
      properties:
        offloading.transporter:
          description: Name of the offloading transporter implementation. Transporter
            name must  match the service property 'offloading.transporter.name' of
            the transporter service implementation of choice. The value ''offloading.transporter.default''
            selects the default implementation (replication based transport). (offloading.transporter)
          "$ref": "#/components/schemas/configNodePropertyString"
        offloading.cleanup.payload:
          description: Enable to cleanup the offloading payload on the worker instances
            after a successful offloading cycle. Enabled by default. When disabled,
            the offloading payload must become purged otherwise, in order to properly
            releases resources for Revision GC and Shared DataStore GC maintenance
            tasks. (offloading.cleanup.payload)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOffloadingImplOffloadingJobClonerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplOffloadingJobClonerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteOffloadingImplOffloadingJobClonerProperties:
      type: object
      properties:
        offloading.jobcloner.enabled:
          description: Allows to enable/disable the job cloner in general. (offloading.jobcloner.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplOffloadingJobOffloaderProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteOffloadingImplOffloadingJobOffloaderProperties:
      type: object
      properties:
        offloading.offloader.enabled:
          description: Allows to enable/disable the offloader in general. (offloading.offloader.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerProperties:
      type: object
      properties:
        offloading.agentmanager.enabled:
          description: Allows to enable/disable the automatic creation replication
            agents for offloading (offloading.agentmanager.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTransporterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTransporterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTransporterProperties:
      type: object
      properties:
        default.transport.agent-to-worker.prefix:
          description: The prefix of the agent name for the agent to the worker. (default.transport.agent-to-worker.prefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        default.transport.agent-to-master.prefix:
          description: The prefix of the agent name for the agent to the master. (default.transport.agent-to-master.prefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        default.transport.input.package:
          description: The package name of the job input for use. Only relevant if
            property 'default.transport.contentpackage' is set to true. (default.transport.input.package)
          "$ref": "#/components/schemas/configNodePropertyString"
        default.transport.output.package:
          description: The package name of the job output for use. Only relevant if
            property 'default.transport.contentpackage' is set to true. (default.transport.output.package)
          "$ref": "#/components/schemas/configNodePropertyString"
        default.transport.replication.synchronous:
          description: Whether to use synchronous replication or not. (default.transport.replication.synchronous)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        default.transport.contentpackage:
          description: Whether to transport the job input/output as content package
            over replication. (default.transport.contentpackage)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        offloading.transporter.default.enabled:
          description: Allows to enable/disable offloading transport in general. (offloading.transporter.default.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties"
    comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplProperties:
      type: object
      properties:
        omnisearch.suggestion.requiretext.min:
          description: min length of text that is require to show suggestions (omnisearch.suggestion.requiretext.min)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        omnisearch.suggestion.spellcheck.require:
          description: check if spellcheck suggestions are require in suggestions
            of omnisearch (omnisearch.suggestion.spellcheck.require)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteOptoutImplOptOutServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteOptoutImplOptOutServiceImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteOptoutImplOptOutServiceImplProperties:
      type: object
      properties:
        optout.cookies:
          description: A list of names of cookies that a client can set to opt-out
            of tracking. (optout.cookies)
          "$ref": "#/components/schemas/configNodePropertyArray"
        optout.headers:
          description: 'A list of name/value pairs of HTTP headers that a client can
            set to opt-out of tracking. The format for specifying a header and its
            expected value is: <header-name>;<header-value>, e.g. "NoCookies;on".
            (optout.headers)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        optout.whitelist.cookies:
          description: A list of names of cookies that are still allowed to be set
            regardless of the client opting out. (optout.whitelist.cookies)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckProperties"
    comAdobeGraniteQueriesImplHcAsyncIndexHealthCheckProperties:
      type: object
      properties:
        indexing.critical.threshold:
          description: Critical Threshold (indexing.critical.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        indexing.warn.threshold:
          description: Warn Threshold (indexing.warn.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcLargeIndexHealthCheckProperties"
    comAdobeGraniteQueriesImplHcLargeIndexHealthCheckProperties:
      type: object
      properties:
        large.index.critical.threshold:
          description: Critical Threshold (large.index.critical.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        large.index.warn.threshold:
          description: Warn Threshold (large.index.warn.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckProperties"
    comAdobeGraniteQueriesImplHcQueriesStatusHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsProperties"
    comAdobeGraniteQueriesImplHcQueryHealthCheckMetricsProperties:
      type: object
      properties:
        getPeriod:
          description: Job Period (getPeriod)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckProperties"
    comAdobeGraniteQueriesImplHcQueryLimitsHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties"
    comAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties:
      type: object
      properties:
        number.of.retries.allowed:
          description: This is the number of allowed retries for an entry. (number.of.retries.allowed)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCheckProperties"
    comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckProperties"
    comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Tags for this check to be used by composite health checks.
            (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCheckProperties"
    comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        exclude.search.path:
          description: Exclude the following search paths from checks (exclude.search.path)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckProperties"
    comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Tags for this check to be used by composite health checks.
            (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheckProperties"
    comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckProperties"
    comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        account.logins:
          description: The logins to check (account.logins)
          "$ref": "#/components/schemas/configNodePropertyArray"
        console.logins:
          description: The logins for the console to check (console.logins)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties"
    comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        disk.space.warn.threshold:
          description: The threshold over which this health check returns a warning.
            If this is set to 10, the health check will return a warning if the usable
            disk space is less than 10 times the node store size. (disk.space.warn.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        disk.space.error.threshold:
          description: The threshold over which this health check returns critical.
            If this is set to 2, the health check will return an error if the usable
            disk space is less than 2 times the node store size. (disk.space.error.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties"
    comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteRepositoryImplCommitStatsConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRepositoryImplCommitStatsConfigProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteRepositoryImplCommitStatsConfigProperties:
      type: object
      properties:
        enabled:
          description: enables or disables CommitStats. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        intervalSeconds:
          description: interval in seconds after which a new info statement is logged
            (if there is anything to log). (intervalSeconds)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        commitsPerIntervalThreshold:
          description: Number of commits per threshold that must be reached before
            logging at INFO, otherwise logging at DEBUG (commitsPerIntervalThreshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxLocationLength:
          description: maximum length of the location string tracked in statistics
            - if longer it is capped with '...' (maxLocationLength)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxDetailsShown:
          description: maximum number of details shown in the statistics, the remainder
            is listed under 'others' (maxDetailsShown)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        minDetailsPercentage:
          description: minimum percentage necessary to be listed, if lower it is listed
            under 'others' (minDetailsPercentage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        threadMatchers:
          description: list of matcher=type:location which are matched against thread
            name. Matcher can be 'startsWith', 'wildcard' or 'regexp'. Type:Location
            can contain replace groups (eg '(1):(2)') when used with regexp. (threadMatchers)
          "$ref": "#/components/schemas/configNodePropertyArray"
        maxGreedyDepth:
          description: maximum number of stack elements inspected for greedyStackMatchers.
            This number helps avoiding scanning large stacks unnecessarily. (maxGreedyDepth)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        greedyStackMatchers:
          description: list of matcher=type:location which are matched against the
            stack part restricted by maxGreedyDepth. GreedyStackMatchers thus come
            before stackFilters/stackMatchers/stackCategorizers. Matcher can be 'startsWith',
            'wildcard' or 'regexp'. Type:Location can contain replace groups (eg '(1):(2)')
            when used with regexp. (greedyStackMatchers)
          "$ref": "#/components/schemas/configNodePropertyString"
        stackFilters:
          description: list of matchers which will be filtered out during stack scanning.  Matcher
            can be 'startsWith', 'wildcard' or 'regexp'. (stackFilters)
          "$ref": "#/components/schemas/configNodePropertyArray"
        stackMatchers:
          description: list of matcher=type:location which, when matching, will be
            treated as immediate match and action is evaluated (unlike stackCategorizers
            where the next stack elements are taken). Matcher can be 'startsWith',
            'wildcard' or 'regexp'. Type:Location can contain replace groups (eg '(1):(2)')
            when used with regexp. (stackMatchers)
          "$ref": "#/components/schemas/configNodePropertyArray"
        stackCategorizers:
          description: 'list of matcher=type: which, when matching, will categorize
            the next non-filtered stack element  (unlike stackMatchers which directly
            identify the entire action string). Matcher can be ''startsWith'', ''wildcard''
            or ''regexp''. Type (as in ''category'') is a string followed with a colon
            '':''. (stackCategorizers)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        stackShorteners:
          description: list of matcher=:location that are applied after an earlier
            stack element matched with a stackCategorizer. Matcher can be 'startsWith',
            'wildcard' or 'regexp'. Location can contain replace groups (eg ':(1)')
            when used with regexp. (stackShorteners)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImplProperties"
    comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImplProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteResourcestatusImplStatusResourceProviderImplProperties"
    comAdobeGraniteResourcestatusImplStatusResourceProviderImplProperties:
      type: object
      properties:
        provider.root:
          description: The root path of the resources provided by the status resource
            provider (provider.root)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRestAssetsImplAssetContentDispositionFilterProperties"
    comAdobeGraniteRestAssetsImplAssetContentDispositionFilterProperties:
      type: object
      properties:
        mime.allowEmpty:
          description: Allow content with empty/unknown MIME types to be served inline.
            Disable to ensure that content with unknown MIME types is served as an
            attachment (mime.allowEmpty)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        mime.allowed:
          description: MIME types which should not be served as attachment (mime.allowed)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplProperties"
    comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplProperties:
      type: object
      properties:
        provider.roots:
          description: Description for provider.roots (provider.roots)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteRestImplServletDefaultGETServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRestImplServletDefaultGETServletProperties"
    comAdobeGraniteRestImplServletDefaultGETServletProperties:
      type: object
      properties:
        default.limit:
          description: Default value for the limit request parameter. Default is 20.
            (default.limit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        use.absolute.uri:
          description: Forces usage of absolutes URIs in the response. Default is
            true. (use.absolute.uri)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationServletProperties"
    comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationServletProperties:
      type: object
      properties:
        hc.tags:
          description: Health Check Tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteSecurityUserUserPropertiesServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteSecurityUserUserPropertiesServiceProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteSecurityUserUserPropertiesServiceProperties:
      type: object
      properties:
        adapter.condition:
          description: Description for adapter.condition (adapter.condition)
          "$ref": "#/components/schemas/configNodePropertyString"
        granite.userproperties.nodetypes:
          description: 'Node types to use for the creation of the preferences or profile
            nodes. (Format: regexp=resourceType) (granite.userproperties.nodetypes)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        granite.userproperties.resourcetypes:
          description: 'Resource type to use for preferences or profile nodes. (Format:
            regexp=resourceType) (granite.userproperties.resourcetypes)'
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties"
    comAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties:
      type: object
      properties:
        group2member.relationship.outgoing:
          description: Defines the relationship type between a group and his group
            member. (group2member.relationship.outgoing)
          "$ref": "#/components/schemas/configNodePropertyString"
        group2member.excluded.outgoing:
          description: Defines the groups that do not create relationships to their
            group members. (group2member.excluded.outgoing)
          "$ref": "#/components/schemas/configNodePropertyArray"
        group2member.relationship.incoming:
          description: Defines the relationship type between a group member and his
            group. (group2member.relationship.incoming)
          "$ref": "#/components/schemas/configNodePropertyString"
        group2member.excluded.incoming:
          description: Defines the groups that do not create relationships from their
            group members. (group2member.excluded.incoming)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplProperties"
    comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplProperties:
      type: object
      properties:
        scheduler.expression:
          description: scheduler.expression.description (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        jmx.objectname:
          description: jmx.objectname.description (jmx.objectname)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryProperties"
    comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryProperties:
      type: object
      properties:
        adapter.condition:
          description: Description for adapter.condition (adapter.condition)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties"
    comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties:
      type: object
      properties:
        archiving.enabled:
          description: Enable or disable archiving of tasks (archiving.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        scheduler.expression:
          description: 'scheduler cron expression.  example: ''30 0 * * * ?'' runs
            at 00:30 AM (scheduler.expression)'
          "$ref": "#/components/schemas/configNodePropertyString"
        archive.since.days.completed:
          description: Number of days after a task is completed before archiving a
            task.  Value must be > 0 (archive.since.days.completed)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties"
    comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskProperties:
      type: object
      properties:
        purgeCompleted:
          description: Purge completed ad-hoc tasks? (purgeCompleted)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        completedAge:
          description: Age (in days) of completed ad-hoc tasks to purge. (completedAge)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        purgeActive:
          description: Purge active ad-hoc tasks? (purgeActive)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        activeAge:
          description: Age (in days) of active ad-hoc tasks to purge. (activeAge)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        saveThreshold:
          description: Save every threshold deletes. (saveThreshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactoryProperties"
    comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactoryProperties:
      type: object
      properties:
        adapter.condition:
          description: Description for adapter.condition (adapter.condition)
          "$ref": "#/components/schemas/configNodePropertyString"
        taskmanager.admingroups:
          description: The name of the group of users with task administrative rights.
            (taskmanager.admingroups)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteThreaddumpThreadDumpCollectorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteThreaddumpThreadDumpCollectorProperties"
    comAdobeGraniteThreaddumpThreadDumpCollectorProperties:
      type: object
      properties:
        scheduler.period:
          description: Interval (in number of seconds) between each thread dump -
            collector will not be executed if this property value is missing (scheduler.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        scheduler.runOn:
          description: Set 'Each node' to execute this service on multiple nodes within
            a cluster, 'Leader only' otherwise (scheduler.runOn)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        granite.threaddump.enabled:
          description: Enable or disable the Thread Dumps collection (granite.threaddump.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        granite.threaddump.dumpsPerFile:
          description: Number of dumps to be stored in each file (granite.threaddump.dumpsPerFile)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        granite.threaddump.enableGzipCompression:
          description: Flag to enable/disable GZIP compression on dump files (granite.threaddump.enableGzipCompression)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        granite.threaddump.enableDirectoriesCompression:
          description: Flag to enable/disable ZIP compression on daily dump directories
            (granite.threaddump.enableDirectoriesCompression)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        granite.threaddump.enableJStack:
          description: Use native JStack JDK application to perform the thread dump
            (granite.threaddump.enableJStack)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        granite.threaddump.maxBackupDays:
          description: The maximum number of backup files/directories to keep around
            (granite.threaddump.maxBackupDays)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        granite.threaddump.backupCleanTrigger:
          description: The Quartz expression to trigger the backup clean operation
            (granite.threaddump.backupCleanTrigger)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslationServiceFactoryImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslationServiceFactoryImplProperties"
    comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslationServiceFactoryImplProperties:
      type: object
      properties:
        translationFactory:
          description: The Unique ID associated with this Translation Factory Connector
            (translationFactory)
          "$ref": "#/components/schemas/configNodePropertyString"
        defaultConnectorLabel:
          description: The default Translation Label to be used when describing this
            connector from a UI perspective. (defaultConnectorLabel)
          "$ref": "#/components/schemas/configNodePropertyString"
        defaultConnectorAttribution:
          description: The default Translation Attribution to be used when attributing
            TranslationService calls to this connector. (defaultConnectorAttribution)
          "$ref": "#/components/schemas/configNodePropertyString"
        defaultConnectorWorkspaceId:
          description: The default Workspace ID to be used when calling the TranslationService
            for this connector. (defaultConnectorWorkspaceId)
          "$ref": "#/components/schemas/configNodePropertyString"
        defaultConnectorSubscriptionKey:
          description: The default Subscription Key to be used when calling the TranslationService
            for this connector. (defaultConnectorSubscriptionKey)
          "$ref": "#/components/schemas/configNodePropertyString"
        languageMapLocation:
          description: The location of the language mapping nodes for the Microsoft
            Connector (languageMapLocation)
          "$ref": "#/components/schemas/configNodePropertyString"
        categoryMapLocation:
          description: The location of the category mapping nodes for the Microsoft
            Connector (categoryMapLocation)
          "$ref": "#/components/schemas/configNodePropertyString"
        retryAttempts:
          description: Configure the number of API retry attempts. (retryAttempts)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        timeoutCount:
          description: Configure the timeout limit for http API call (millisecond).
            0 means no timeout limit (timeoutCount)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteTranslationCoreImplTranslationManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteTranslationCoreImplTranslationManagerImplProperties"
    comAdobeGraniteTranslationCoreImplTranslationManagerImplProperties:
      type: object
      properties:
        defaultConnectorName:
          description: The connector name of the system default implementation. (defaultConnectorName)
          "$ref": "#/components/schemas/configNodePropertyString"
        defaultCategory:
          description: The system configured default category for the Translation
            Integration framework.  This value should correspond to a node name found
            within /libs/granite/translation/resources/categories (defaultCategory)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplProperties:
      type: object
      properties:
        htmllibmanager.timing:
          description: Enable JS load timing statistics. Show the statistics by [ctrl][shift][u]
            after a page has been loaded. (htmllibmanager.timing)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.debug.init.js:
          description: A Javascript snippet for enabling debugging and/or show the
            console. (htmllibmanager.debug.init.js)
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.minify:
          description: Compress js/css files using the YUI compressor (whitespace
            removal etc.) (htmllibmanager.minify)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.debug:
          description: Serve js/css files individually instead of concatenating them
            for better client-side debugging. (htmllibmanager.debug)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.gzip:
          description: Use gzip compression for delivering js/css files. (htmllibmanager.gzip)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.maxDataUriSize:
          description: Specifies the maximum size (in bytes) of referenced resource
            in CSS to auto-line them as data-uris. (htmllibmanager.maxDataUriSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        htmllibmanager.maxage:
          description: Defines the max-age in seconds set in the cache-control header.
            < 0 to disable (which is the default). (htmllibmanager.maxage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        htmllibmanager.forceCQUrlInfo:
          description: Controls if the CQURLInfo object should always be injected
            (default is false) (htmllibmanager.forceCQUrlInfo)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.defaultthemename:
          description: The name of the default theme that is used if it does not exist
            as the requested one. (htmllibmanager.defaultthemename)
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.defaultuserthemename:
          description: The name of the default theme that is used if non specified
            (htmllibmanager.defaultuserthemename)
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.clientmanager:
          description: Category name of the client side library manager. (htmllibmanager.clientmanager)
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.path.list:
          description: List of paths that you are allowed to create CQ client libraries
            under. (htmllibmanager.path.list)
          "$ref": "#/components/schemas/configNodePropertyArray"
        htmllibmanager.excluded.path.list:
          description: List of paths that you are excluded to create CQ client libraries
            under. (htmllibmanager.excluded.path.list)
          "$ref": "#/components/schemas/configNodePropertyArray"
        htmllibmanager.processor.js:
          description: 'Default config for JS processors in the format: "mode:(name(;options))".
            eg: min:yui;obfuscate=true (htmllibmanager.processor.js)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        htmllibmanager.processor.css:
          description: 'Default config for CSS processors in the format: "mode:(name(;options))".
            eg: min:yui;obfuscate=true (htmllibmanager.processor.css)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        htmllibmanager.longcache.patterns:
          description: The path pattern list for long-caching in the format "regexp;key".
            if key equals to 'auto' it is automatically generated when this service
            restarts. use 'none' to disable it. Note that libraries having a 'longCacheKey'
            property overwrite whatever pattern would match them. (htmllibmanager.longcache.patterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
        htmllibmanager.longcache.format:
          description: String.format() pattern to apply on the keys. (htmllibmanager.longcache.format)
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.useFileSystemOutputCache:
          description: Controls if the output cache is stored in the file system.
            (default is true) (htmllibmanager.useFileSystemOutputCache)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.fileSystemOutputCacheLocation:
          description: Controls where the filesystem output cache is stored. When
            the value is set to null (default) the cache is stored on the bundle persistent
            storage area. (htmllibmanager.fileSystemOutputCacheLocation)
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.disable.replacement:
          description: List of libraries (paths) where library replacement is disabled.
            (htmllibmanager.disable.replacement)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureProperties"
    comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureProperties:
      type: object
      properties:
        enabled:
          description: Boolean flag indicating whether the Workflow Withdraw feature
            is enabled or not by this configuration (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties"
    comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceProperties:
      type: object
      properties:
        granite.workflow.WorkflowPublishEventService.enabled:
          description: When true, design time models modified on publish servers will
            generate a new runtime (granite.workflow.WorkflowPublishEventService.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties"
    comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties:
      type: object
      properties:
        bucketSize:
          description: bucketSize.description (bucketSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties"
    comAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties:
      type: object
      properties:
        default.timeout:
          description: The default polling timeout (in seconds). Used, if the timeout
            is not set on the workflow node. (default.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        max.timeout:
          description: The maximum timeout allowed (in seconds). (max.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        default.period:
          description: The default polling retry period (in seconds). Used if the
            period is not set on the workflow node. (default.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteWorkflowCoreJobJobHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreJobJobHandlerProperties"
    comAdobeGraniteWorkflowCoreJobJobHandlerProperties:
      type: object
      properties:
        job.topics:
          description: job.topics.description (job.topics)
          "$ref": "#/components/schemas/configNodePropertyArray"
        allow.self.process.termination:
          description: when true a workflow process which calls WorkflowSession.terminate()
            will stop the workflow processing.  Provided for backwards compatibility.
            (allow.self.process.termination)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties"
    comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties:
      type: object
      properties:
        payload.move.white.list:
          description: Payload paths which will have running workflows modified for
            if the payload is moved using repository operation (payload.move.white.list)
          "$ref": "#/components/schemas/configNodePropertyArray"
        payload.move.handle.from.workflow.process:
          description: Whether or not to modify the payload when a move event originates
            from a workflow process (payload.move.handle.from.workflow.process)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteWorkflowCorePayloadMapCacheInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowCorePayloadMapCacheProperties"
    comAdobeGraniteWorkflowCorePayloadMapCacheProperties:
      type: object
      properties:
        getSystemWorkflowModels:
          description: Workflows to be treated as system workflows (getSystemWorkflowModels)
          "$ref": "#/components/schemas/configNodePropertyArray"
        getPackageRootPath:
          description: This setting has been moved to the com.adobe.granite.workflow.core.WorkflowConfig
            component and should be configured there. (getPackageRootPath)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteWorkflowCoreWorkflowConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreWorkflowConfigProperties"
    comAdobeGraniteWorkflowCoreWorkflowConfigProperties:
      type: object
      properties:
        cq.workflow.config.workflow.packages.root.path:
          description: Specifies the root paths under which workflow packages may
            be located. (cq.workflow.config.workflow.packages.root.path)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.workflow.config.workflow.process.legacy.mode:
          description: When true, WorkflowProcess implementations will receive an
            admin session to work with.  Provided for backwards compatibility. (cq.workflow.config.workflow.process.legacy.mode)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.workflow.config.allow.locking:
          description: When false, the LockProcess and UnlockProcess operations become
            No-Ops.  When true, the operations are performed, for backwards compatibility.
            (cq.workflow.config.allow.locking)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties"
    comAdobeGraniteWorkflowCoreWorkflowSessionFactoryProperties:
      type: object
      properties:
        granite.workflowinbox.sort.propertyName:
          description: The default name of the property on which to sort the inbox
            items (granite.workflowinbox.sort.propertyName)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        granite.workflowinbox.sort.order:
          description: Whether inbox should sort in ASC (oldest first) or DESC (newest
            first) order on inboxitem start time (granite.workflowinbox.sort.order)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.workflow.job.retry:
          description: Specifies how often execution of a job should be retried before
            escalation procedure takes place (cq.workflow.job.retry)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.workflow.superuser:
          description: List of superusers and superuser groups (cq.workflow.superuser)
          "$ref": "#/components/schemas/configNodePropertyArray"
        granite.workflow.inboxQuerySize:
          description: Maximum Inbox Query Size (granite.workflow.inboxQuerySize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        granite.workflow.adminUserGroupFilter:
          description: Whether or not admin group and user filters are performed in
            query for inbox items (granite.workflow.adminUserGroupFilter)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        granite.workflow.enforceWorkitemAssigneePermissions:
          description: Restrict workitem access to only its assignee and superusers
            (granite.workflow.enforceWorkitemAssigneePermissions)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        granite.workflow.enforceWorkflowInitiatorPermissions:
          description: Restrict workflow access to only its initiator and superusers
            (granite.workflow.enforceWorkflowInitiatorPermissions)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        granite.workflow.injectTenantIdInJobTopics:
          description: Adds tenant id to job topics so separate workflow queues can
            be created for different tenants (granite.workflow.injectTenantIdInJobTopics)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        granite.workflow.maxPurgeSaveThreshold:
          description: Maximum number of workflows to purge between session saves
            (granite.workflow.maxPurgeSaveThreshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        granite.workflow.maxPurgeQueryCount:
          description: Maximum number of rows to return per a purge query (granite.workflow.maxPurgeQueryCount)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeOctopusNcommBootstrapInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeOctopusNcommBootstrapProperties"
    comAdobeOctopusNcommBootstrapProperties:
      type: object
      properties:
        maxConnections:
          description: ncomm process pool size (0 == number of cpu cores) (maxConnections)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxRequests:
          description: maximum number of requests per process (0 == unlimited) (maxRequests)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        requestTimeout:
          description: request timeout in milliseconds (0 == no timeout) (requestTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        requestRetries:
          description: maximum number of request retries (0 == do not retry) (requestRetries)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        launchTimeout:
          description: maximum time to wait for a spawned child process connection
            in milliseconds (launchTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullServletProperties"
    comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullServletProperties:
      type: object
      properties:
        communities.integration.livefyre.sling.event.filter:
          description: A filter to use for getting events when parts of the profile
            change (communities.integration.livefyre.sling.event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeXmpWorkerFilesNcommXMPFilesNCommInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeXmpWorkerFilesNcommXMPFilesNCommProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comAdobeXmpWorkerFilesNcommXMPFilesNCommProperties:
      type: object
      properties:
        maxConnections:
          description: maxConnections.description (maxConnections)
          "$ref": "#/components/schemas/configNodePropertyString"
        maxRequests:
          description: maxRequests.description (maxRequests)
          "$ref": "#/components/schemas/configNodePropertyString"
        requestTimeout:
          description: requestTimeout.description (requestTimeout)
          "$ref": "#/components/schemas/configNodePropertyString"
        logDir:
          description: logDir.description (logDir)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCommonsHttpclientInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCommonsHttpclientProperties"
    comDayCommonsHttpclientProperties:
      type: object
      properties:
        proxy.enabled:
          description: Whether to enable or disable HTTP Proxying globally. Setting
            this property to false disables HTTP Proxying and the other configurtion
            properties have no effect. The default value is false. (proxy.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        proxy.host:
          description: Host name (or IP Address) and port of the HTTP Proxy. in the
            format host:port, e.g. proxy.corp.com:3128. This property is ignored if
            HTTP Proxying is disabled. This property does not have default value.
            Enabling HTTP Proxying but not setting the HTTP Proxy Host  causes HTTP
            Proxying to actually be disabled. (proxy.host)
          "$ref": "#/components/schemas/configNodePropertyString"
        proxy.user:
          description: The name of the user to authenticate as with the HTTP Proxy
            Host. If this field is empty, the proxy is considered to not be authenticated.
            The default is empty. This property is ignored if proxying is disabled
            or the proxy host is not properly configured. (proxy.user)
          "$ref": "#/components/schemas/configNodePropertyString"
        proxy.password:
          description: The password of the HTTP Proxy user to authenticate with. The
            default is empty. This property is ignored if proxying is disabled or
            the proxy host is not properly configured. (proxy.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        proxy.ntlm.host:
          description: The host the authentication request is originating from.  Essentially,
            the computer name for this machine. By default the credentials assume
            simple username password authentication. If the proxy happens to be a
            Microsoft IIS Server using NTLM authentication this property must be set
            to the NT Domain name  of the user to authenticate as. This is not set
            by default. (proxy.ntlm.host)
          "$ref": "#/components/schemas/configNodePropertyString"
        proxy.ntlm.domain:
          description: The NTLM domain to authenticate within. By default the credentials
            assume simple username password authentication. If the proxy happens to
            be a Microsoft IIS Server using NTLM authentication this property must
            be set to the NT Domain name of the user to authenticate as. This is not
            set by default. (proxy.ntlm.domain)
          "$ref": "#/components/schemas/configNodePropertyString"
        proxy.exceptions:
          description: Lists domain names, host names, IP Addresses or or network
            addresses for which the HTTP Proxy Host should not be used. A domain name
            indicating all hosts of a domain is indicated by a leading dot, e.g. ".day.com".
            A network address is indicated with subnet mask notation indicating the
            number of bits make up the network address, e.g 192.168.1.0/24 means the
            class C network "192.168.1". Note that for proxy selection, the host name
            of URL is not resolved but directly compared to the list of exceptions.
            For this reason you might want to indicate both the network address and
            the domain for targets which should not be passed through the proxy. This
            property has no effect if HTTP Proxying is  disabled. The default value
            is [ localhost, 127.0.0.1 ]. (proxy.exceptions)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqAnalyticsImplStorePropertiesChangeListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsImplStorePropertiesChangeListenerProperties"
    comDayCqAnalyticsImplStorePropertiesChangeListenerProperties:
      type: object
      properties:
        cq.store.listener.additionalStorePaths:
          description: Store paths to monitor for properties change (cq.store.listener.additionalStorePaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqAnalyticsSitecatalystImplExporterClassificationsExporterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsSitecatalystImplExporterClassificationsExporterProperties"
    comDayCqAnalyticsSitecatalystImplExporterClassificationsExporterProperties:
      type: object
      properties:
        allowed.paths:
          description: Allowed source paths for exporting data. (allowed.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.analytics.saint.exporter.pagesize:
          description: Page size for SAINT ImportJob population. (cq.analytics.saint.exporter.pagesize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqAnalyticsSitecatalystImplImporterReportImporterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsSitecatalystImplImporterReportImporterProperties"
    comDayCqAnalyticsSitecatalystImplImporterReportImporterProperties:
      type: object
      properties:
        report.fetch.attempts:
          description: Number of attempts to fetch a queued report. Default is set
            to 6. (report.fetch.attempts)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        report.fetch.delay:
          description: Number in milliseconds between attempts to fetch a queued report.
            Default is set to 10000 (10s). (report.fetch.delay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties"
    comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryProperties:
      type: object
      properties:
        cq.analytics.adapterfactory.contextstores:
          description: Context stores exposed for instrumentation. (cq.analytics.adapterfactory.contextstores)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties:
      type: object
      properties:
        cq.analytics.sitecatalyst.service.datacenter.url:
          description: Default data center URL (cq.analytics.sitecatalyst.service.datacenter.url)
          "$ref": "#/components/schemas/configNodePropertyArray"
        devhostnamepatterns:
          description: Development machines hostname regular expression patterns (devhostnamepatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
        connection.timeout:
          description: Timeout in milliseconds until a connection is established.
            A timeout value of zero is interpreted as an infinite timeout. Default
            is 30000ms (connection.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        socket.timeout:
          description: Timeout in milliseconds for waiting for data or a maximum period
            of inactivity between two consecutive data packets. Default is 30000ms
            (socket.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterProperties"
    comDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterProperties:
      type: object
      properties:
        cq.analytics.testandtarget.accountoptionsupdater.enabled:
          description: Controls whether this importer is enabled or not. Defaults
            to true on author instances and false on publish instances. (cq.analytics.testandtarget.accountoptionsupdater.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerProperties"
    comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerProperties:
      type: object
      properties:
        cq.analytics.testandtarget.deleteauthoractivitylistener.enabled:
          description: Enable/disable page listener (cq.analytics.testandtarget.deleteauthoractivitylistener.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerProperties:
      type: object
      properties:
        cq.analytics.testandtarget.pushauthorcampaignpagelistener.enabled:
          description: Enable/disable page listener (cq.analytics.testandtarget.pushauthorcampaignpagelistener.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqAnalyticsTestandtargetImplSegmentImporterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplSegmentImporterProperties"
    comDayCqAnalyticsTestandtargetImplSegmentImporterProperties:
      type: object
      properties:
        cq.analytics.testandtarget.segmentimporter.enabled:
          description: Controls whether this importer is enabled or not. Defaults
            to true on author instances and false on publish instances. (cq.analytics.testandtarget.segmentimporter.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties"
    comDayCqAnalyticsTestandtargetImplServiceWebServiceImplProperties:
      type: object
      properties:
        endpointUri:
          description: The Adobe Target API endpoint URI. Default is https://mc.adobe.io
            (endpointUri)
          "$ref": "#/components/schemas/configNodePropertyString"
        connectionTimeout:
          description: Timeout in milliseconds until a connection is established.
            A timeout value of zero is interpreted as an infinite timeout. Default
            is 60000ms (connectionTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        socketTimeout:
          description: Timeout in milliseconds for waiting for data or a maximum period
            of inactivity between two consecutive data packets. Default is 30000ms
            (socketTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties"
    comDayCqAnalyticsTestandtargetImplServletsAdminServerServletProperties:
      type: object
      properties:
        testandtarget.endpoint.url:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties"
    comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplProperties:
      type: object
      properties:
        cq.analytics.testandtarget.api.url:
          description: URL of the Adobe Target API (cq.analytics.testandtarget.api.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.analytics.testandtarget.timeout:
          description: Timeout in milliseconds until a connection is established.
            A timeout value of zero is interpreted as an infinite timeout. Default
            is 60000ms (cq.analytics.testandtarget.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.analytics.testandtarget.sockettimeout:
          description: Timeout in milliseconds for waiting for data or a maximum period
            of inactivity between two consecutive data packets. Default is 30000ms
            (cq.analytics.testandtarget.sockettimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.analytics.testandtarget.recommendations.url.replace:
          description: Controls the token in Adobe Target endpoint URL that needs
            to be replaced to point to the Target Recommendations API URL (cq.analytics.testandtarget.recommendations.url.replace)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.analytics.testandtarget.recommendations.url.replacewith:
          description: Replacement for the regex above so that the resulting URL will
            point to Target Recommendations API (cq.analytics.testandtarget.recommendations.url.replacewith)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqAuthImplCugCugSupportImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAuthImplCugCugSupportImplProperties"
    comDayCqAuthImplCugCugSupportImplProperties:
      type: object
      properties:
        cug.exempted.principals:
          description: List of Principals for which any CUG restrictions do not apply.
            (cug.exempted.principals)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cug.enabled:
          description: Whether or not CUG roots are enabled on a global level or not.
            If this flag is not set (the default), CUG roots are not enabled. (cug.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cug.principals.regex:
          description: The regular expression to which the principle name is to be
            matched while creating ACEs. (cug.principals.regex)
          "$ref": "#/components/schemas/configNodePropertyString"
        cug.principals.replacement:
          description: The string to be substituted for each match (cug.principals.replacement)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqAuthImplLoginSelectorHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqAuthImplLoginSelectorHandlerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqAuthImplLoginSelectorHandlerProperties:
      type: object
      properties:
        path:
          description: Repository path for which this authentication handler should
            be used by Sling. If this is empty, the authentication handler will be
            disabled. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        service.ranking:
          description: OSGi Framework Service Ranking value to indicate the order
            in which to call this service. This is an int value where higher values
            designate higher precendence. Default value is 5000. (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        auth.loginselector.mappings:
          description: Maps login pages to content trees. The format is <login-page-path>:<content-tree>,
            e.g. /content/mysite/login:/content/mysite. Any mappings defined here
            are overriden by any Login Page Mappings Configuration via a content page
            (see below). (auth.loginselector.mappings)
          "$ref": "#/components/schemas/configNodePropertyArray"
        auth.loginselector.changepw.mappings:
          description: Maps change password pages to content trees. The format is
            <login-page-path>:<content-tree>, e.g. /content/mysite/login:/content/mysite.
            (auth.loginselector.changepw.mappings)
          "$ref": "#/components/schemas/configNodePropertyArray"
        auth.loginselector.defaultloginpage:
          description: If no mappings are defined, nor no mapping matches the request,
            this is the default login page being redirected to. This can be overridden
            in the content page configuration. (auth.loginselector.defaultloginpage)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.loginselector.defaultchangepwpage:
          description: If no mappings are defined, nor no mapping matches the request,
            this is the default change password page being redirected to. (auth.loginselector.defaultchangepwpage)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.loginselector.handle:
          description: A list of request extensions indicating requests for which
            the Login Selector Authentication Handler may request credentials. Any
            request whose extension is not one the listed extensions will not cause
            the credentials to be requested. If this list is empty the default list
            of html and htm is used. Note that the list entries must not have leading
            dots. Requests without extension or requests with trailing slashes (/)
            are always handled by the Login Selector Authentication Handler regardless
            of this configuration.  (auth.loginselector.handle)
          "$ref": "#/components/schemas/configNodePropertyArray"
        auth.loginselector.handle.all.extensions:
          description: If enabled, the Login Selector Handler will request credentials
            for all extensions, regardless of the above configuration. (auth.loginselector.handle.all.extensions)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqCommonsImplExternalizerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqCommonsImplExternalizerImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqCommonsImplExternalizerImplProperties:
      type: object
      properties:
        externalizer.domains:
          description: 'List of domain mappings. In the form: "name [scheme://]domain.com[:port][/contextpath]".
            Standard required names are "publish" (public website DNS, such as "http://www.mysite.com"),
            "author" (author DNS, such as "https://author.mysite.com") and "local"
            (this instance directly). The scheme will be used as default scheme (if
            not specified by the code) and can globally define whether http or https
            is desired. The context path must match the installation of the sling
            launchpad webapp on that instance. Additional custom domains can be added,
            each with a unique name. (externalizer.domains)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        externalizer.host:
          description: Deprecated - use "local" under domains instead and keep this
            property empty. - Host and port of the server as adressed from the outside,
            e.g. "server.com" or "server.com:8080". (externalizer.host)
          "$ref": "#/components/schemas/configNodePropertyString"
        externalizer.contextpath:
          description: Deprecated - use "local" under domains instead and keep this
            property empty. - Context path under which the CQ/Sling launchpad webapp
            is running, e.g. "/contextpath". (externalizer.contextpath)
          "$ref": "#/components/schemas/configNodePropertyString"
        externalizer.encodedpath:
          description: If active, Externalizer assumes that resource paths passed
            to its methods are URL-encoded. This might be necessary if your resource
            paths potentially contain "?" and/or "#" (which would be considered to
            start the query string/the fragment of the URL otherwise). Note that activating
            this setting may cause issues with other parts of the application that
            assume non-encoded paths if affected resource paths contain characters
            that need to be URL-encoded. (externalizer.encodedpath)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqCommonsServletsRootMappingServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqCommonsServletsRootMappingServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqCommonsServletsRootMappingServletProperties:
      type: object
      properties:
        rootmapping.target:
          description: rootmapping.target.desc (rootmapping.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckerProperties"
    comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckerProperties:
      type: object
      properties:
        codeupgradetasks:
          description: CodeUpgradeTasks that need to be registered as services before
            marker service is registered. (codeupgradetasks)
          "$ref": "#/components/schemas/configNodePropertyArray"
        codeupgradetaskfilters:
          description: The list of CodeUpgradeTaskFilters that has to be registered
            as service for the upgrade executor to proceed. (codeupgradetaskfilters)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListProperties"
    comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListProperties:
      type: object
      properties:
        upgradeTaskIgnoreList:
          description: Define classes to be ignored via Fully Qualified Classnames
            to mark them as ignored in upgrade execution (upgradeTaskIgnoreList)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistProperties"
    comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistProperties:
      type: object
      properties:
        effectiveBundleListPath:
          description: Define filesystem path to (exported) Bundlelist (/system/console/bundles.json)
            of source instance to autoignore unnecessary CodeUpgradeTasks, defaults
            to conf/sourceInstanceBundles.json in sling.home (effectiveBundleListPath)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqContentsyncImplContentSyncManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqContentsyncImplContentSyncManagerImplProperties"
    comDayCqContentsyncImplContentSyncManagerImplProperties:
      type: object
      properties:
        contentsync.fallback.authorizable:
          description: Fallback authorizable for cache operations in case it is not
            properly set on a configuration (contentsync.fallback.authorizable)
          "$ref": "#/components/schemas/configNodePropertyString"
        contentsync.fallback.updateuser:
          description: Fallback user for content updates in case it is not properly
            set on a configuration (contentsync.fallback.updateuser)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCommonsHandlerStandardImageHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCommonsHandlerStandardImageHandlerProperties"
    comDayCqDamCommonsHandlerStandardImageHandlerProperties:
      type: object
      properties:
        large_file_threshold:
          description: com.day.cq.dam.commons.handler.StandardImageHandler.large_file_threshold.description
            (large_file_threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        large_comment_threshold:
          description: com.day.cq.dam.commons.handler.StandardImageHandler.large_comment_threshold.description
            (large_comment_threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.enable.ext.meta.extraction:
          description: com.day.cq.dam.commons.handler.StandardImageHandler.cq.dam.enable.ext.meta.extraction.description
            (cq.dam.enable.ext.meta.extraction)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties"
    comDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties:
      type: object
      properties:
        xmp.filter.apply_whitelist:
          description: com.day.cq.dam.commons.metadata.XmpFilterBlackWhite.xmp.filter.apply_whitelist.description
            (xmp.filter.apply_whitelist)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        xmp.filter.whitelist:
          description: com.day.cq.dam.commons.metadata.XmpFilterBlackWhite.xmp.filter.whitelist.description
            (xmp.filter.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        xmp.filter.apply_blacklist:
          description: com.day.cq.dam.commons.metadata.XmpFilterBlackWhite.xmp.filter.apply_blacklist.description
            (xmp.filter.apply_blacklist)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        xmp.filter.blacklist:
          description: com.day.cq.dam.commons.metadata.XmpFilterBlackWhite.xmp.filter.blacklist.description
            (xmp.filter.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamCommonsUtilImplAssetCacheImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCommonsUtilImplAssetCacheImplProperties"
    comDayCqDamCommonsUtilImplAssetCacheImplProperties:
      type: object
      properties:
        large.file.min:
          description: com.day.cq.dam.commons.util.impl.AssetCacheImpl.large.file.min.description
            (large.file.min)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.apply:
          description: com.day.cq.dam.commons.util.impl.AssetCacheImpl.cache.apply.description
            (cache.apply)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        mime.types:
          description: com.day.cq.dam.commons.util.impl.AssetCacheImpl.mime.types.description
            (mime.types)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties"
    comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties:
      type: object
      properties:
        cq.dam.config.annotation.pdf.document.width:
          description: Defines the width of the PDF document in points (cq.dam.config.annotation.pdf.document.width)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.annotation.pdf.document.height:
          description: Defines the height of the PDF document in points (cq.dam.config.annotation.pdf.document.height)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.annotation.pdf.document.padding.horizontal:
          description: Defines the left and the right padding of the PDF document
            in points (cq.dam.config.annotation.pdf.document.padding.horizontal)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.annotation.pdf.document.padding.vertical:
          description: Defines the top and the bottom padding of the PDF document
            in points (cq.dam.config.annotation.pdf.document.padding.vertical)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.annotation.pdf.font.size:
          description: Defines the default font size for the text in the PDF document
            in points (cq.dam.config.annotation.pdf.font.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.annotation.pdf.font.color:
          description: Defines the font color for the annotation text in the PDF document
            in hexadecimal (cq.dam.config.annotation.pdf.font.color)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.config.annotation.pdf.font.family:
          description: Defines the font family for the annotation text in the PDF
            document. A comma separated list of font-families should be appended to
            this list to add support for a new language for annotations. This requires
            that the fonts are present in the system and have been configured by the
            FontManagerService config (cq.dam.config.annotation.pdf.font.family)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.config.annotation.pdf.font.light:
          description: Defines the light font color for the PDF document (cq.dam.config.annotation.pdf.font.light)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.config.annotation.pdf.marginTextImage:
          description: Defines the margin between the annotation texts and the asset
            images in points (cq.dam.config.annotation.pdf.marginTextImage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.annotation.pdf.minImageHeight:
          description: Defines the minimum image height in points (cq.dam.config.annotation.pdf.minImageHeight)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.annotation.pdf.reviewStatus.width:
          description: Defines the width of the review status stamp in points (cq.dam.config.annotation.pdf.reviewStatus.width)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.annotation.pdf.reviewStatus.color.approved:
          description: Defines the background color for an approved review status
            in hexadecimal (cq.dam.config.annotation.pdf.reviewStatus.color.approved)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.config.annotation.pdf.reviewStatus.color.rejected:
          description: Defines the background color for a rejected review status in
            hexadecimal (cq.dam.config.annotation.pdf.reviewStatus.color.rejected)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested:
          description: Defines the background color for a change-requested review
            status in hexadecimal (cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.config.annotation.pdf.annotationMarker.width:
          description: Defines the width of the annotation marker in points (cq.dam.config.annotation.pdf.annotationMarker.width)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.annotation.pdf.asset.minheight:
          description: Defines the minimum height of an asset (printed with annotations
            on the same page) as the percentage of the page height (cq.dam.config.annotation.pdf.asset.minheight)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplAssethomeAssetHomePageConfigurationProperties"
    comDayCqDamCoreImplAssethomeAssetHomePageConfigurationProperties:
      type: object
      properties:
        isEnabled:
          description: Enable this configuration to turn on Asset Home Page feature.
            (isEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletProperties"
    comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletProperties:
      type: object
      properties:
        cq.dam.adhoc.asset.share.prezip.maxcontentsize:
          description: Size (in bytes) above which Zip download requests are Forbidden
            (cq.dam.adhoc.asset.share.prezip.maxcontentsize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplAssetMoveListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplAssetMoveListenerProperties"
    comDayCqDamCoreImplAssetMoveListenerProperties:
      type: object
      properties:
        enabled:
          description: enabled.description (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplCacheCQBufferedImageCacheInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplCacheCQBufferedImageCacheProperties"
    comDayCqDamCoreImplCacheCQBufferedImageCacheProperties:
      type: object
      properties:
        cq.dam.image.cache.max.memory:
          description: Maximum memory or -1 (cq.dam.image.cache.max.memory)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.image.cache.max.age:
          description: Maximum age in milliseconds (cq.dam.image.cache.max.age)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.image.cache.max.dimension:
          description: Maximum Dimension (cq.dam.image.cache.max.dimension)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCoreImplDamChangeEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplDamChangeEventListenerProperties"
    comDayCqDamCoreImplDamChangeEventListenerProperties:
      type: object
      properties:
        changeeventlistener.observed.paths:
          description: The paths which are observed for asset changes. (changeeventlistener.observed.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamCoreImplDamEventPurgeServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplDamEventPurgeServiceProperties"
    comDayCqDamCoreImplDamEventPurgeServiceProperties:
      type: object
      properties:
        scheduler.expression:
          description: scheduler.expression.description (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        maxSavedActivities:
          description: maxSavedActivities.description (maxSavedActivities)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        saveInterval:
          description: Number of delete operations after which state of system should
            be saved (saveInterval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        enableActivityPurge:
          description: This will enable the purging of user activities recorded by
            DamEventRecorder (enableActivityPurge)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        eventTypes:
          description: eventTypes.description (eventTypes)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comDayCqDamCoreImplDamEventRecorderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplDamEventRecorderImplProperties"
    comDayCqDamCoreImplDamEventRecorderImplProperties:
      type: object
      properties:
        event.filter:
          description: event.filter.description (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
        event.queue.length:
          description: event.queue.length.description (event.queue.length)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        eventrecorder.enabled:
          description: Uncheck to disable activity stream recording. (eventrecorder.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        eventrecorder.blacklist:
          description: eventrecorder.blacklist.description (eventrecorder.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        eventrecorder.eventtypes:
          description: Define which event types shall be recorded. (eventrecorder.eventtypes)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comDayCqDamCoreImplEventDamEventAuditListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplEventDamEventAuditListenerProperties"
    comDayCqDamCoreImplEventDamEventAuditListenerProperties:
      type: object
      properties:
        event.filter:
          description: event.filter.description (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: If disabled no DAM audit log entries are generated. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplExpiryNotificationJobImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplExpiryNotificationJobImplProperties"
    comDayCqDamCoreImplExpiryNotificationJobImplProperties:
      type: object
      properties:
        cq.dam.expiry.notification.scheduler.istimebased:
          description: Whether to schedule a time based schedular (cq.dam.expiry.notification.scheduler.istimebased)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.dam.expiry.notification.scheduler.timebased.rule:
          description: 'Regular expression for time based Scheduler. Eg: ''0 0 0 *
            * ?''. The example expression triggers the Job @ 00 hrs. This expression
            get picked if Time Based Scheduler is true (cq.dam.expiry.notification.scheduler.timebased.rule)'
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.expiry.notification.scheduler.period.rule:
          description: Time in seconds for periodic scheduler. This expression get
            picked if Time Based Scheduler is set false (cq.dam.expiry.notification.scheduler.period.rule)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        send_email:
          description: Send emails on asset expiry (send_email)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        asset_expired_limit:
          description: Maximum number of assets to expire in one iteration of the
            job (asset_expired_limit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        prior_notification_seconds:
          description: Number of seconds before which a notification should be sent
            before an asset expires (prior_notification_seconds)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.expiry.notification.url.protocol:
          description: Protocol (cq.dam.expiry.notification.url.protocol)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatureFlagInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatureFlagProperties"
    comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatureFlagProperties:
      type: object
      properties:
        isEnabled:
          description: Enable this configuration to turn on the Asset Folder Metadata
            Schema feature. (isEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplGfxCommonsGfxRendererInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplGfxCommonsGfxRendererProperties"
    comDayCqDamCoreImplGfxCommonsGfxRendererProperties:
      type: object
      properties:
        skip.bufferedcache:
          description: Try to generate large/fpo rendition using asset handler if
            the image in cache is of lower size (skip.bufferedcache)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplHandlerEPSFormatHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplHandlerEPSFormatHandlerProperties"
    comDayCqDamCoreImplHandlerEPSFormatHandlerProperties:
      type: object
      properties:
        mimetype:
          description: The format's mime type. (mimetype)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCoreImplHandlerIndesignFormatHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplHandlerIndesignFormatHandlerProperties"
    comDayCqDamCoreImplHandlerIndesignFormatHandlerProperties:
      type: object
      properties:
        mimetype:
          description: The format's mime type. (mimetype)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamCoreImplHandlerJpegHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplHandlerJpegHandlerProperties"
    comDayCqDamCoreImplHandlerJpegHandlerProperties:
      type: object
      properties:
        cq.dam.enable.ext.meta.extraction:
          description: cq.dam.enable.ext.meta.extraction.description (cq.dam.enable.ext.meta.extraction)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        large_file_threshold:
          description: Asset size greater than threshold use temporary file instead
            of memory buffer to avoid OutOfMemoryError. Value of -1 means that the
            use of temporary file is disabled. 0 means it is enabled for all sizes.
            (large_file_threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        large_comment_threshold:
          description: Comment size greater than threshold will not be stored. Value
            of -1 means that all comments would be stored irrespective of their size.
            (large_comment_threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplHandlerXmpNCommXMPHandlerProperties"
    comDayCqDamCoreImplHandlerXmpNCommXMPHandlerProperties:
      type: object
      properties:
        xmphandler.cq.formats:
          description: The formats taken into consideration by this handler. (xmphandler.cq.formats)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties"
    comDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties:
      type: object
      properties:
        jmx.objectname:
          description: jmx.objectname.description (jmx.objectname)
          "$ref": "#/components/schemas/configNodePropertyString"
        property.measure.enabled:
          description: Measures the time it takes for new/updated asset properties
            to be found in queries. (property.measure.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        property.name:
          description: This property, if present on assets, will be used to measure
            property index update performance. (property.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        property.max.wait.ms:
          description: After these many milliseconds from start, a measuremnt is cancelled
            (property.max.wait.ms)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        property.max.rate:
          description: At most perform this many measurements per second (can be <
            1) (property.max.rate)
          "$ref": "#/components/schemas/configNodePropertyFloat"
        fulltext.measure.enabled:
          description: Measures the time it takes for new/updated asset content to
            be found in queries. (fulltext.measure.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        fulltext.name:
          description: The value of this property is used in fulltext search to measure
            its performance. (fulltext.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        fulltext.max.wait.ms:
          description: After these many milliseconds from start, a measuremnt is cancelled
            (fulltext.max.wait.ms)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        fulltext.max.rate:
          description: At most perform this many measurements per second (can be <
            1) (fulltext.max.rate)
          "$ref": "#/components/schemas/configNodePropertyFloat"
    comDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplJmxAssetMigrationMBeanImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqDamCoreImplJmxAssetMigrationMBeanImplProperties:
      type: object
      properties:
        jmx.objectname:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties"
    comDayCqDamCoreImplJmxAssetUpdateMonitorImplProperties:
      type: object
      properties:
        jmx.objectname:
          description: jmx.objectname.description (jmx.objectname)
          "$ref": "#/components/schemas/configNodePropertyString"
        active:
          description: Measures asset process execution when active. (active)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigProviderServiceProperties"
    comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigProviderServiceProperties:
      type: object
      properties:
        operation:
          description: operation.description (operation)
          "$ref": "#/components/schemas/configNodePropertyString"
        emailEnabled:
          description: Enable or Disable the email notifications for this job status.
            e.g. success,failed (emailEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProviderServiceProperties"
    comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigProviderServiceProperties:
      type: object
      properties:
        operation:
          description: operation.description (operation)
          "$ref": "#/components/schemas/configNodePropertyString"
        operationIcon:
          description: operationIcon.description (operationIcon)
          "$ref": "#/components/schemas/configNodePropertyString"
        topicName:
          description: The topic name on which the OPERATION of type will be publishedand
            subsequently processed by the job executor. (topicName)
          "$ref": "#/components/schemas/configNodePropertyString"
        emailEnabled:
          description: Enable or Disable the email notifications for this job status.
            e.g. success,failed (emailEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplLightboxLightboxServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplLightboxLightboxServletProperties"
    comDayCqDamCoreImplLightboxLightboxServletProperties:
      type: object
      properties:
        sling.servlet.paths:
          description: sling.servlet.paths.description (sling.servlet.paths)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.methods:
          description: sling.servlet.methods.description (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.dam.enable.anonymous:
          description: Allows anonymous to create/update lightbox (cq.dam.enable.anonymous)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplMetadataEditorSelectComponentHandlerProperties"
    comDayCqDamCoreImplMetadataEditorSelectComponentHandlerProperties:
      type: object
      properties:
        granite:data:
          description: For all component paths mentioned here, this handler will be
            used to render in Metadata Editor. (granite:data)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperProperties"
    comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperProperties:
      type: object
      properties:
        cq.dam.allow.all.mime:
          description: Allow creation of all types of asset. If enabled, it overrides
            the following allowed MIME type list (cq.dam.allow.all.mime)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.dam.allowed.asset.mimes:
          description: Allow upload of assets with following MIMEs only (cq.dam.allowed.asset.mimes)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplProperties"
    comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplProperties:
      type: object
      properties:
        cq.dam.detect.asset.mime.from.content:
          description: Determine incoming asset's MIME from its content. If disabled,
            asset's extension is used to determine MIME (cq.dam.detect.asset.mime.from.content)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplMissingMetadataNotificationJobInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplMissingMetadataNotificationJobProperties"
    comDayCqDamCoreImplMissingMetadataNotificationJobProperties:
      type: object
      properties:
        cq.dam.missingmetadata.notification.scheduler.istimebased:
          description: Whether to schedule a time based schedular (cq.dam.missingmetadata.notification.scheduler.istimebased)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.dam.missingmetadata.notification.scheduler.timebased.rule:
          description: 'Regular expression for time based Scheduler. Eg: ''0 0 0 *
            * ?''. The example expression triggers the Job @ 00 hrs. This expression
            get picked if Time Based Scheduler is true (cq.dam.missingmetadata.notification.scheduler.timebased.rule)'
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.missingmetadata.notification.scheduler.period.rule:
          description: Time in seconds for periodic scheduler. This expression get
            picked if Time Based Scheduler is set false (cq.dam.missingmetadata.notification.scheduler.period.rule)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.missingmetadata.notification.recipient:
          description: ID of the recipient of the notification for missing metadata
            (cq.dam.missingmetadata.notification.recipient)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailProcessInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailProcessProperties"
    comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailProcessProperties:
      type: object
      properties:
        process.label:
          description: process.label.description (process.label)
          "$ref": "#/components/schemas/configNodePropertyString"
        Notify on Complete:
          description: Enables notification when parent transient workflow is complete
            (Notify on Complete)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplProcessTextExtractionProcessInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplProcessTextExtractionProcessProperties"
    comDayCqDamCoreImplProcessTextExtractionProcessProperties:
      type: object
      properties:
        mimeTypes:
          description: Mime types  whose text gets extracted into a separate resource.
            (mimeTypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        maxExtract:
          description: Extract text up to a maximum number of characters. Use negative
            value for unlimited. (maxExtract)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplRenditionMakerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplRenditionMakerImplProperties"
    comDayCqDamCoreImplRenditionMakerImplProperties:
      type: object
      properties:
        xmp.propagate:
          description: Propagate XMP from asset metadata to renditions (xmp.propagate)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        xmp.excludes:
          description: 'XMP properties to skip on propagation. Format: <namespace>
            <property> (xmp.excludes)'
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamCoreImplReportsReportExportServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplReportsReportExportServiceProperties"
    comDayCqDamCoreImplReportsReportExportServiceProperties:
      type: object
      properties:
        queryBatchSize:
          description: Number of results to be fetched per iteration while processing
            Asset Report. (queryBatchSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplReportsReportPurgeServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplReportsReportPurgeServiceProperties"
    comDayCqDamCoreImplReportsReportPurgeServiceProperties:
      type: object
      properties:
        scheduler.expression:
          description: scheduler.expression.description (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        maxSavedReports:
          description: maxSavedReports.description (maxSavedReports)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        timeDuration:
          description: timeDuration.description (timeDuration)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        enableReportPurge:
          description: This will enable the purging of previously generated reports
            created beyond specified number of days, or when number of reports is
            greater than specified limit (enableReportPurge)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplServletAssetDownloadServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletAssetDownloadServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqDamCoreImplServletAssetDownloadServletProperties:
      type: object
      properties:
        enabled:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplServletAssetStatusServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletAssetStatusServletProperties"
    comDayCqDamCoreImplServletAssetStatusServletProperties:
      type: object
      properties:
        cq.dam.batch.status.maxassets:
          description: Maximum number of assets to load the metadata for. Further
            submitted paths get ignored. (cq.dam.batch.status.maxassets)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplServletAssetXMPSearchServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletAssetXMPSearchServletProperties"
    comDayCqDamCoreImplServletAssetXMPSearchServletProperties:
      type: object
      properties:
        cq.dam.batch.indesign.maxassets:
          description: Maximum number of assets to load the metadata for. Further
            submitted paths get ignored. (cq.dam.batch.indesign.maxassets)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplServletBatchMetadataServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletBatchMetadataServletProperties"
    comDayCqDamCoreImplServletBatchMetadataServletProperties:
      type: object
      properties:
        cq.dam.batch.metadata.asset.default:
          description: Asset metadata properties getting displayed if no specific
            are requested (cq.dam.batch.metadata.asset.default)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.dam.batch.metadata.collection.default:
          description: Collection metadata properties getting displayed if no specific
            are requested (cq.dam.batch.metadata.collection.default)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.dam.batch.metadata.maxresources:
          description: Maximum number of resources to load the metadata for. Further
            submitted paths get ignored. (cq.dam.batch.metadata.maxresources)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplServletBinaryProviderServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletBinaryProviderServletProperties"
    comDayCqDamCoreImplServletBinaryProviderServletProperties:
      type: object
      properties:
        sling.servlet.resourceTypes:
          description: sling.servlet.resourceTypes.description (sling.servlet.resourceTypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.servlet.methods:
          description: sling.servlet.methods.description (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.dam.drm.enable:
          description: Enable Digital Rights Management. (cq.dam.drm.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplServletCollectionServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletCollectionServletProperties"
    comDayCqDamCoreImplServletCollectionServletProperties:
      type: object
      properties:
        cq.dam.batch.collection.properties:
          description: Collection properties getting displayed in the output (cq.dam.batch.collection.properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.dam.batch.collection.maxcollections:
          description: Maximum number of collections to load the members for. Further
            submitted paths get ignored. (cq.dam.batch.collection.maxcollections)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplServletCollectionsServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletCollectionsServletProperties"
    comDayCqDamCoreImplServletCollectionsServletProperties:
      type: object
      properties:
        cq.dam.batch.collections.properties:
          description: Collection properties getting displayed in the output (cq.dam.batch.collections.properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.dam.batch.collections.limit:
          description: Maximum number of collections displayed per page. Further collections
            get requested by nex page. (cq.dam.batch.collections.limit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamCoreImplServletCompanionServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletCompanionServletProperties"
    comDayCqDamCoreImplServletCompanionServletProperties:
      type: object
      properties:
        More Info:
          description: The text that will show in context menus for the more info
            dialog (More Info)
          "$ref": "#/components/schemas/configNodePropertyString"
        "/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path}":
          description: The full absolute path that will be used to display the more
            info dialog (/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path})
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCoreImplServletCreateAssetServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletCreateAssetServletProperties"
    comDayCqDamCoreImplServletCreateAssetServletProperties:
      type: object
      properties:
        detect_duplicate:
          description: configuration to enable duplicate detection of uploaded asset
            (detect_duplicate)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplServletDamContentDispositionFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletDamContentDispositionFilterProperties"
    comDayCqDamCoreImplServletDamContentDispositionFilterProperties:
      type: object
      properties:
        cq.mime.type.blacklist:
          description: Mime types that should be served as content-disposition:attachment
            (cq.mime.type.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.dam.empty.mime:
          description: Allow content with unknown i.e. empty mime types to be served
            inline. Disable this to ensure that content with unknown mime types is
            served as an attachment (cq.dam.empty.mime)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplServletGuidLookupFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletGuidLookupFilterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqDamCoreImplServletGuidLookupFilterProperties:
      type: object
      properties:
        cq.dam.core.guidlookupfilter.enabled:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplServletHealthCheckServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletHealthCheckServletProperties"
    comDayCqDamCoreImplServletHealthCheckServletProperties:
      type: object
      properties:
        cq.dam.sync.workflow.id:
          description: The workflow model to use for asset synchronization. (cq.dam.sync.workflow.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.sync.folder.types:
          description: The node types to check when comparing folders. (cq.dam.sync.folder.types)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamCoreImplServletMetadataGetServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletMetadataGetServletProperties"
    comDayCqDamCoreImplServletMetadataGetServletProperties:
      type: object
      properties:
        sling.servlet.resourceTypes:
          description: sling.servlet.resourceTypes.description (sling.servlet.resourceTypes)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.methods:
          description: sling.servlet.methods.description (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.extensions:
          description: sling.servlet.extensions.description (sling.servlet.extensions)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.selectors:
          description: sling.servlet.selectors.description (sling.servlet.selectors)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties"
    comDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties:
      type: object
      properties:
        cq.dam.drm.enable:
          description: Enable Digital Rights Management. (cq.dam.drm.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplServletResourceCollectionServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplServletResourceCollectionServletProperties"
    comDayCqDamCoreImplServletResourceCollectionServletProperties:
      type: object
      properties:
        sling.servlet.resourceTypes:
          description: sling.servlet.resourceTypes.description (sling.servlet.resourceTypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.servlet.methods:
          description: sling.servlet.methods.description (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.selectors:
          description: sling.servlet.selectors.description (sling.servlet.selectors)
          "$ref": "#/components/schemas/configNodePropertyString"
        download.config:
          description: configuration of the collection to be downloaded (download.config)
          "$ref": "#/components/schemas/configNodePropertyString"
        view.selector:
          description: selector for viewing collection details (view.selector)
          "$ref": "#/components/schemas/configNodePropertyString"
        send_email:
          description: Send emails on collection sharing (send_email)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties"
    comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplProperties:
      type: object
      properties:
        createPreviewEnabled:
          description: If disabled thumbnails are not created (createPreviewEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        updatePreviewEnabled:
          description: If disabled thumbnails are not updated upon upload/deletion
            of asset (updatePreviewEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        queueSize:
          description: Size of the queue of folder paths that need to be updated.
            (queueSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        folderPreviewRenditionRegex:
          description: The regex for the rendition(s) name(s) (of assets) that will
            be considered when creating the preview. If left blank, the process will
            iterate over all available renditions of asset. (folderPreviewRenditionRegex)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCoreImplUnzipUnzipConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreImplUnzipUnzipConfigProperties"
    comDayCqDamCoreImplUnzipUnzipConfigProperties:
      type: object
      properties:
        cq.dam.config.unzip.maxuncompressedsize:
          description: cq.dam.config.unzip.maxuncompressedsize.description (cq.dam.config.unzip.maxuncompressedsize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.config.unzip.encoding:
          description: cq.dam.config.unzip.encoding.description (cq.dam.config.unzip.encoding)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamCoreProcessExifToolExtractMetadataProcessInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreProcessExifToolExtractMetadataProcessProperties"
    comDayCqDamCoreProcessExifToolExtractMetadataProcessProperties:
      type: object
      properties:
        process.label:
          description: process.label.description (process.label)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.enable.sha1:
          description: cq.dam.enable.sha1.description (cq.dam.enable.sha1)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreProcessExtractMetadataProcessInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreProcessExtractMetadataProcessProperties"
    comDayCqDamCoreProcessExtractMetadataProcessProperties:
      type: object
      properties:
        process.label:
          description: process.label.description (process.label)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.enable.sha1:
          description: cq.dam.enable.sha1.description (cq.dam.enable.sha1)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamCoreProcessMetadataProcessorProcessInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamCoreProcessMetadataProcessorProcessProperties"
    comDayCqDamCoreProcessMetadataProcessorProcessProperties:
      type: object
      properties:
        process.label:
          description: process.label.description (process.label)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.enable.sha1:
          description: cq.dam.enable.sha1.description (cq.dam.enable.sha1)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.dam.metadata.xssprotected.properties:
          description: These properties will be passed through xss api before saving
            (cq.dam.metadata.xssprotected.properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamHandlerFfmpegLocatorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamHandlerFfmpegLocatorImplProperties"
    comDayCqDamHandlerFfmpegLocatorImplProperties:
      type: object
      properties:
        executable.searchpath:
          description: Search path for executables. Use "PATH" to include the OS Path
            environment (executable.searchpath)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties"
    comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplProperties:
      type: object
      properties:
        event.filter:
          description: event.filter.description (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
        fontmgr.system.font.dir:
          description: Location of the System Fonts directory. Make sure directory
            exists else they willbe skipped. (fontmgr.system.font.dir)
          "$ref": "#/components/schemas/configNodePropertyArray"
        fontmgr.adobe.font.dir:
          description: Location of the Adobe Server Fonts directory. Default location
            is <crx-repository folder>/fonts. Fonts need to be copied manually to
            new directory when this property is changed. Make sure this directory
            exist else default path will be used. (fontmgr.adobe.font.dir)
          "$ref": "#/components/schemas/configNodePropertyString"
        fontmgr.customer.font.dir:
          description: Location of the Customer Fonts directory. Make sure this directory
            exist else it will be skipped. (fontmgr.customer.font.dir)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamHandlerStandardPdfPdfHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamHandlerStandardPdfPdfHandlerProperties"
    comDayCqDamHandlerStandardPdfPdfHandlerProperties:
      type: object
      properties:
        raster.annotation:
          description: Configuration to enable annotation's rasterization in pdf.
            (raster.annotation)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamHandlerStandardPsPostScriptHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamHandlerStandardPsPostScriptHandlerProperties"
    comDayCqDamHandlerStandardPsPostScriptHandlerProperties:
      type: object
      properties:
        raster.annotation:
          description: Configuration to enable annotation's rasterization in pdf.
            (raster.annotation)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamHandlerStandardPsdPsdHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamHandlerStandardPsdPsdHandlerProperties"
    comDayCqDamHandlerStandardPsdPsdHandlerProperties:
      type: object
      properties:
        large_file_threshold:
          description: Asset size greater than threshold use temporary file instead
            of memory buffer to avoid OutOfMemoryError. Value of -1 means that the
            use of temporary file is disabled. (large_file_threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamIdsImplIDSJobProcessorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamIdsImplIDSJobProcessorProperties"
    comDayCqDamIdsImplIDSJobProcessorProperties:
      type: object
      properties:
        enable.multisession:
          description: Enable multiple session support. Applicable to Creative Suite
            6 and above. Default false (enable.multisession)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        ids.cc.enable:
          description: Allow specific InDesign CC Server configuration. Applicable
            to InDesign CC Server 10 and above. Default false (ids.cc.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        enable.retry:
          description: Enable retry of IDS Job on I/O errors. Default false (enable.retry)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        enable.retry.scripterror:
          description: Enable retry of IDS Job for script errors or other non I/O
            errors. Default false (enable.retry.scripterror)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        externalizer.domain.cqhost:
          description: Externalizer Domain used by the InDesign CC Server retrieve
            and put resources from and to AEM. Has to match a Domain defined in the
            'Day CQ Link Externalizer' configuration (externalizer.domain.cqhost)
          "$ref": "#/components/schemas/configNodePropertyString"
        externalizer.domain.http:
          description: Externalizer Domain used during snippet creation and by the
            InDesign CC Server to authenticate the linkConnectionManager. Has to match
            a Domain defined in the 'Day CQ Link Externalizer' configuration (externalizer.domain.http)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamIdsImplIDSPoolManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamIdsImplIDSPoolManagerImplProperties"
    comDayCqDamIdsImplIDSPoolManagerImplProperties:
      type: object
      properties:
        max.errors.to.blacklist:
          description: Max consecute errors before blacklist a IDS server. Default
            -1(disabled) (max.errors.to.blacklist)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        retry.interval.to.whitelist:
          description: Minimum retry interval to revalidate the blacklisted IDS server.
            Default 10 minutes (retry.interval.to.whitelist)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        connect.timeout:
          description: Determines the timeout in milliseconds until a connection is
            established. (connect.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        socket.timeout:
          description: Defines the socket timeout in milliseconds, which is the timeout
            for waiting for data. (socket.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        process.label:
          description: Description for process.label (process.label)
          "$ref": "#/components/schemas/configNodePropertyString"
        connection.use.max:
          description: Defines how many requests are made on the same connection before
            a new one is created. (connection.use.max)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamInddImplHandlerIndesignXMPHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamInddImplHandlerIndesignXMPHandlerProperties"
    comDayCqDamInddImplHandlerIndesignXMPHandlerProperties:
      type: object
      properties:
        process.label:
          description: Description for process.label (process.label)
          "$ref": "#/components/schemas/configNodePropertyString"
        extract.pages:
          description: Extract Page Preview Images from XMP Metadata, if present.
            This is not needed if an InDesign Server is used for processing assets.
            (extract.pages)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamInddImplServletSnippetCreationServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamInddImplServletSnippetCreationServletProperties"
    comDayCqDamInddImplServletSnippetCreationServletProperties:
      type: object
      properties:
        snippetcreation.maxcollections:
          description: Maximum number of collections to load the members for. Further
            submitted paths get ignored. (snippetcreation.maxcollections)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamInddProcessINDDMediaExtractProcessInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamInddProcessINDDMediaExtractProcessProperties"
    comDayCqDamInddProcessINDDMediaExtractProcessProperties:
      type: object
      properties:
        process.label:
          description: Workflow step process label (process.label)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.dam.indd.pages.regex:
          description: Regular expression for identifying pages in subassets folder.
            The pages will be shown in assets page viewer. (cq.dam.indd.pages.regex)
          "$ref": "#/components/schemas/configNodePropertyString"
        ids.job.decoupled:
          description: If activated, the workflow step does not wait until the IDS
            job has finished but continues immediately with the next workflow step.
            Please note that in this case this step should be the last step in the
            workflow to avoid concurrent access to the asset. If additionaly workflows
            steps are required the process the results of the IDS job a separate workflow
            model can be configured via the 'IDS Job Workflow' property. (ids.job.decoupled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        ids.job.workflow.model:
          description: This property is only relevant if 'Decouple IDS Job' is activated.
            In this case a new workflow for the asset is started once the IDS job
            has finished. The workflow contains additional steps to further process
            the media data extracted from the INDD file via IDS. (ids.job.workflow.model)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties"
    comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplProperties:
      type: object
      properties:
        batch.commit.size:
          description: Set the batch commit size for the Asset Insight background
            sync job. (batch.commit.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobProperties"
    comDayCqDamPerformanceInternalAssetPerformanceReportSyncJobProperties:
      type: object
      properties:
        scheduler.expression:
          description: Description for scheduler.expression (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProcessInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProcessProperties"
    comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProcessProperties:
      type: object
      properties:
        delete.zip.file:
          description: Delete ZIP file after upload process is completed. (delete.zip.file)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEventListenerProperties"
    comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEventListenerProperties:
      type: object
      properties:
        cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled:
          description: cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled.description
            (cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerProperties"
    comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerProperties:
      type: object
      properties:
        scheduler.expression:
          description: scheduler.expression.description (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        scheduler.concurrent:
          description: scheduler.concurrent.description (scheduler.concurrent)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamS7damCommonPostServletsSetCreateHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamS7damCommonPostServletsSetCreateHandlerProperties"
    comDayCqDamS7damCommonPostServletsSetCreateHandlerProperties:
      type: object
      properties:
        sling.post.operation:
          description: sling.post.operation.description (sling.post.operation)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.methods:
          description: sling.servlet.methods.description (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamS7damCommonPostServletsSetModifyHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamS7damCommonPostServletsSetModifyHandlerProperties"
    comDayCqDamS7damCommonPostServletsSetModifyHandlerProperties:
      type: object
      properties:
        sling.post.operation:
          description: sling.post.operation.description (sling.post.operation)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.methods:
          description: sling.servlet.methods.description (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessProperties"
    comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessProperties:
      type: object
      properties:
        process.label:
          description: process.label.description (process.label)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamS7damCommonS7damDamChangeEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamS7damCommonS7damDamChangeEventListenerProperties"
    comDayCqDamS7damCommonS7damDamChangeEventListenerProperties:
      type: object
      properties:
        cq.dam.s7dam.damchangeeventlistener.enabled:
          description: Enable the Adobe CQ s7dam Dam Listener (cq.dam.s7dam.damchangeeventlistener.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamS7damCommonServletsS7damProductInfoServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamS7damCommonServletsS7damProductInfoServletProperties"
    comDayCqDamS7damCommonServletsS7damProductInfoServletProperties:
      type: object
      properties:
        sling.servlet.paths:
          description: sling.servlet.paths.description (sling.servlet.paths)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.methods:
          description: sling.servlet.methods.description (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties"
    comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties:
      type: object
      properties:
        cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name:
          description: Minimum filesize required to use multipart upload (cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name:
          description: Size of each data chunk to be uploaded to Amazon S3 (must be
            5MB or greater) (cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name:
          description: Number of Amazon S3 upload thread workers (cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name:
          description: Timeout to wait for data or inactivity (milliseconds) (cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name:
          description: Timeout to determine if a connection is established (milliseconds)
            (cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name:
          description: Number of maximum retry httpclient will execute (cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name:
          description: Polling interval to retrieve video upload progress (seconds)
            (cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamScene7ImplScene7APIClientImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7APIClientImplProperties"
    comDayCqDamScene7ImplScene7APIClientImplProperties:
      type: object
      properties:
        cq.dam.scene7.apiclient.recordsperpage.nofilter.name:
          description: Maximum number of results to return when no filter is applied
            (cq.dam.scene7.apiclient.recordsperpage.nofilter.name)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.scene7.apiclient.recordsperpage.withfilter.name:
          description: Maximum number of results to return when no filter is applied
            (cq.dam.scene7.apiclient.recordsperpage.withfilter.name)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplProperties"
    comDayCqDamScene7ImplScene7AssetMimeTypeServiceImplProperties:
      type: object
      properties:
        cq.dam.scene7.assetmimetypeservice.mapping:
          description: The MIME Type mapping associates a MIME type to an asset type
            (e.g. Template=image/s7template) (cq.dam.scene7.assetmimetypeservice.mapping)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamScene7ImplScene7ConfigurationEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7ConfigurationEventListenerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqDamScene7ImplScene7ConfigurationEventListenerProperties:
      type: object
      properties:
        cq.dam.scene7.configurationeventlistener.enabled:
          description: Enable the Adobe CQ Scene7 Configuration Listener to monitor
            configuration changes (cq.dam.scene7.configurationeventlistener.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqDamScene7ImplScene7DamChangeEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7DamChangeEventListenerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqDamScene7ImplScene7DamChangeEventListenerProperties:
      type: object
      properties:
        cq.dam.scene7.damchangeeventlistener.enabled:
          description: Enable the Adobe CQ Scene7 Dam Listener (cq.dam.scene7.damchangeeventlistener.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.dam.scene7.damchangeeventlistener.observed.paths:
          description: The paths on which this listener is active (cq.dam.scene7.damchangeeventlistener.observed.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties"
    comDayCqDamScene7ImplScene7FlashTemplatesServiceImplProperties:
      type: object
      properties:
        scene7FlashTemplates.rti:
          description: The Scene7 Replace Text Instance (rti) modifier value (scene7FlashTemplates.rti)
          "$ref": "#/components/schemas/configNodePropertyString"
        scene7FlashTemplates.rsi:
          description: The Scene7 Replace Symbol Instance (rsi) modifier value (scene7FlashTemplates.rsi)
          "$ref": "#/components/schemas/configNodePropertyString"
        scene7FlashTemplates.rb:
          description: The Scene7 Replace Bitmap (rb) modifier value (scene7FlashTemplates.rb)
          "$ref": "#/components/schemas/configNodePropertyString"
        scene7FlashTemplates.rurl:
          description: The Scene7 Replace URL (rurl) modifier value (scene7FlashTemplates.rurl)
          "$ref": "#/components/schemas/configNodePropertyString"
        scene7FlashTemplate.urlFormatParameter:
          description: The Scene7 URL parameter that needs to be appended to the url
            of the template in order to change the format of the response (scene7FlashTemplate.urlFormatParameter)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqDamScene7ImplScene7UploadServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamScene7ImplScene7UploadServiceImplProperties"
    comDayCqDamScene7ImplScene7UploadServiceImplProperties:
      type: object
      properties:
        cq.dam.scene7.uploadservice.activejobtimeout.label:
          description: The timeout in SECONDS for active Scene7 upload job (cq.dam.scene7.uploadservice.activejobtimeout.label)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.dam.scene7.uploadservice.connectionmaxperroute.label:
          description: The maximum number of connections used for Scene7 upload job
            (cq.dam.scene7.uploadservice.connectionmaxperroute.label)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamStockIntegrationImplCacheStockCacheConfigurationServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamStockIntegrationImplCacheStockCacheConfigurationServiceImplProperties"
    comDayCqDamStockIntegrationImplCacheStockCacheConfigurationServiceImplProperties:
      type: object
      properties:
        getCacheExpirationUnit:
          description: Cache Expiration Time Unit, default Minutes (getCacheExpirationUnit)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        getCacheExpirationValue:
          description: Cache Expiration Time Value, default 10 (getCacheExpirationValue)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqDamVideoImplServletVideoTestServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamVideoImplServletVideoTestServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqDamVideoImplServletVideoTestServletProperties:
      type: object
      properties:
        enabled:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqExtwidgetServletsImageSpriteServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqExtwidgetServletsImageSpriteServletProperties"
    comDayCqExtwidgetServletsImageSpriteServletProperties:
      type: object
      properties:
        maxWidth:
          description: Description for maxWidth (maxWidth)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxHeight:
          description: Description for maxHeight (maxHeight)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqImageInternalFontFontHelperInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqImageInternalFontFontHelperProperties"
    comDayCqImageInternalFontFontHelperProperties:
      type: object
      properties:
        fontpath:
          description: The list of Resource Tree locations providing fonts. Multiple
            entries may be listed. Each entry must be an absolute path; that is empty
            entries or entries not starting with a slash (/) character are ignored.
            The location of each entry must be existing. This may cause the creation
            of JCR Nodes at configured entry paths. (fontpath)
          "$ref": "#/components/schemas/configNodePropertyArray"
        oversamplingFactor:
          description: The factor to apply internally to the font when drawing text
            with the TTOVERSAMPLING flag set. Default value is 16 which is also the
            value used by the Fonter.exe tool to prepare FonterFonts. (oversamplingFactor)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqJcrclustersupportClusterStartLevelControllerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqJcrclustersupportClusterStartLevelControllerProperties"
    comDayCqJcrclustersupportClusterStartLevelControllerProperties:
      type: object
      properties:
        cluster.level.enable:
          description: Whether to enable or not the start level controller. Default
            is "true". If the start level controller is disabled the OSGi Framework
            start level is not changed by this component. (cluster.level.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cluster.master.level:
          description: The start level to switch the framework to if the bound repository
            is the Cluster Master node. Default is "30". (cluster.master.level)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cluster.slave.level:
          description: The start level to switch the framework to if the bound repository
            is the Cluster Slave node. Default is "15". If this value is less than
            the providing bundle's current start level, the start level of the bundle
            is changed to this configured value to ensure the bundle remains started
            after swichting the start level. In addition, it is suggested to set the
            OSGi framework initial startlevel to this same startlevel. This can be
            accomplished by setting the "org.osgi.framework.startlevel.beginning"
            in the sling.properties file to this value. (cluster.slave.level)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqMailerDefaultMailServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMailerDefaultMailServiceProperties"
    comDayCqMailerDefaultMailServiceProperties:
      type: object
      properties:
        smtp.host:
          description: The mailer uses this SMTP server to send messages (smtp.host)
          "$ref": "#/components/schemas/configNodePropertyString"
        smtp.port:
          description: Port number to use to connect to the SMTP server (smtp.port)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        smtp.user:
          description: The user for authentication through SMTP (smtp.user)
          "$ref": "#/components/schemas/configNodePropertyString"
        smtp.password:
          description: The password for authentication through SMTP. The password
            can either be provided plain text, or crypted via the Crypto Support feature
            (Main -> Crypto Support menu) (smtp.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        from.address:
          description: The email address to use in the "From:" field of messages sent
            by the mailer (from.address)
          "$ref": "#/components/schemas/configNodePropertyString"
        smtp.ssl:
          description: If enabled, an SSL connection is set up. (smtp.ssl)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        smtp.starttls:
          description: If enabled, TLS connection is started. (smtp.starttls)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        debug.email:
          description: If enabled, interactions with the SMTP server are dumped to
            the operating system terminal that runs Sling   (debug.email)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqMailerImplCqMailingServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMailerImplCqMailingServiceProperties"
    comDayCqMailerImplCqMailingServiceProperties:
      type: object
      properties:
        max.recipient.count:
          description: max.recipient.count.description (max.recipient.count)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMailerImplEmailCqEmailTemplateFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMailerImplEmailCqEmailTemplateFactoryProperties"
    comDayCqMailerImplEmailCqEmailTemplateFactoryProperties:
      type: object
      properties:
        mailer.email.charset:
          description: The Character set to be used for the mails content (mailer.email.charset)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMailerImplEmailCqRetrieverTemplateFactoryProperties"
    comDayCqMailerImplEmailCqRetrieverTemplateFactoryProperties:
      type: object
      properties:
        mailer.email.embed:
          description: If set, the resources, like images, files are embedded in the
            mail. Defaults to false, which means they are linked from the host (mailer.email.embed)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        mailer.email.charset:
          description: The Character set to be used for the mails content (mailer.email.charset)
          "$ref": "#/components/schemas/configNodePropertyString"
        mailer.email.retrieverUserID:
          description: In case the content has to be downloaded from a Webserver that
            requires authentication, the User-ID to connect with (mailer.email.retrieverUserID)
          "$ref": "#/components/schemas/configNodePropertyString"
        mailer.email.retrieverUserPWD:
          description: In case the content has to be downloaded from a Webserver that
            requires authentication, the password to connect with.If no user name
            and no password is configured, anonymous access is attempted. (mailer.email.retrieverUserPWD)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMcmCampaignImplIntegrationConfigImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMcmCampaignImplIntegrationConfigImplProperties"
    comDayCqMcmCampaignImplIntegrationConfigImplProperties:
      type: object
      properties:
        aem.mcm.campaign.formConstraints:
          description: Provide allowed form constraints in the form <campaignType>:<formConstraint>
            (aem.mcm.campaign.formConstraints)
          "$ref": "#/components/schemas/configNodePropertyArray"
        aem.mcm.campaign.publicUrl:
          description: The public facing URL to be used for links, images, etc. from
            a published mail. Keep empty to use the replication config of the default
            publish instance. (aem.mcm.campaign.publicUrl)
          "$ref": "#/components/schemas/configNodePropertyString"
        aem.mcm.campaign.relaxedSSL:
          description: 'Choose this option to allow relaxed SSL certificate checking.
            Warning: This may impose a security breach and should not be active in
            production environments. (aem.mcm.campaign.relaxedSSL)'
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryProperties"
    comDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: service.ranking.description (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: tagpattern.description (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties"
    comDayCqMcmCoreNewsletterNewsletterEmailServiceImplProperties:
      type: object
      properties:
        from.address:
          description: The from address to be used to send the newsletter. If this
            is not specified the default from mail address of the mail service will
            be used. (from.address)
          "$ref": "#/components/schemas/configNodePropertyString"
        sender.host:
          description: Define the match for the Request Map match that should be used
            to resolve the Host to be used to send the Mail. (s. JCR ResourceResolver)
            (sender.host)
          "$ref": "#/components/schemas/configNodePropertyString"
        max.bounce.count:
          description: The maximum bounce counter to test the user's bounce counter
            against. Users exceeding this maximum will no longer receive newsletters.
            Defaults to 3. A value of 0 disables bounce counter checks. (max.bounce.count)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponentTagHandlerFactoryProperties"
    comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        component.resourceType:
          description: component.resourceType.description (component.resourceType)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroughComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroughComponentTagHandlerFactoryProperties"
    comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroughComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        component.resourceType:
          description: component.resourceType.description (component.resourceType)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentTagHandlerFactoryProperties"
    comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHandlerFactoryProperties"
    comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHandlerFactoryProperties"
    comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        component.resourceType:
          description: component.resourceType.description (component.resourceType)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqNotificationImplNotificationServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqNotificationImplNotificationServiceImplProperties"
    comDayCqNotificationImplNotificationServiceImplProperties:
      type: object
      properties:
        event.filter:
          description: event.filter.description (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqPersonalizationImplServletsTargetingConfigurationServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqPersonalizationImplServletsTargetingConfigurationServletProperties"
    comDayCqPersonalizationImplServletsTargetingConfigurationServletProperties:
      type: object
      properties:
        forcelocation:
          description: Enforces the author to input a location for targeting by showing
            a modal dialog. Default is false. (forcelocation)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqPollingImporterImplManagedPollingImporterImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqPollingImporterImplManagedPollingImporterImplProperties"
    comDayCqPollingImporterImplManagedPollingImporterImplProperties:
      type: object
      properties:
        importer.user:
          description: User used for importing. (Optional, default is 'admin') (importer.user)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqPollingImporterImplPollingImporterImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqPollingImporterImplPollingImporterImplProperties"
    comDayCqPollingImporterImplPollingImporterImplProperties:
      type: object
      properties:
        importer.min.interval:
          description: Default value in miliseconds for the minimum polling interval.
            (importer.min.interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        importer.user:
          description: User used for import. Ensure polling-importer-service has privileges
            to impersonate that user. (importer.user)
          "$ref": "#/components/schemas/configNodePropertyString"
        exclude.paths:
          description: Paths which will be excluded from cq:PollConfig registration
            (exclude.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        include.paths:
          description: Paths considered when registering cq:PollConfig nodes. (include.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqReplicationAuditReplicationEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationAuditReplicationEventListenerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqReplicationAuditReplicationEventListenerProperties:
      type: object
      properties:
        service.ranking:
          description: 
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqReplicationContentStaticContentBuilderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationContentStaticContentBuilderProperties"
    comDayCqReplicationContentStaticContentBuilderProperties:
      type: object
      properties:
        host:
          description: host.description (host)
          "$ref": "#/components/schemas/configNodePropertyString"
        port:
          description: port.description (port)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqReplicationImplAgentManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationImplAgentManagerImplProperties"
    comDayCqReplicationImplAgentManagerImplProperties:
      type: object
      properties:
        job.topics:
          description: job.topics.description (job.topics)
          "$ref": "#/components/schemas/configNodePropertyString"
        serviceUser.target:
          description: serviceUser.target.description (serviceUser.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        agentProvider.target:
          description: agentProvider.target.description (agentProvider.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationImplContentDurboBinaryLessContentBuilderProperties"
    comDayCqReplicationImplContentDurboBinaryLessContentBuilderProperties:
      type: object
      properties:
        binary.threshold:
          description: The size above which binaries are not included in the content.
            (binary.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqReplicationImplContentDurboDurboImportConfigurationProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationImplContentDurboDurboImportConfigurationProviderServiceProperties"
    comDayCqReplicationImplContentDurboDurboImportConfigurationProviderServiceProperties:
      type: object
      properties:
        preserve.hierarchy.nodes:
          description: Preserve hierarchy nodes under rep:User nodes on import (preserve.hierarchy.nodes)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        ignore.versioning:
          description: Ignore mix:versionable node type on import (ignore.versioning)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        import.acl:
          description: Flag to import ACL. Default false (import.acl)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        save.threshold:
          description: Number of nodes to import before issuing an intermediate save
            (save.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        preserve.user.paths:
          description: Flag to preserve user paths when importing user nodes. Default
            false (preserve.user.paths)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        preserve.uuid:
          description: Flag to preserve jcr:uuid property when importing nodes. Default
            true (preserve.uuid)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        preserve.uuid.nodetypes:
          description: Preserve UUIDs for nodes imported with specified (primary)
            node-types ONLY (preserve.uuid.nodetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        preserve.uuid.subtrees:
          description: Preserve UUIDs for nodes imported under specified repository-paths
            ONLY (preserve.uuid.subtrees)
          "$ref": "#/components/schemas/configNodePropertyArray"
        auto.commit:
          description: Whether the durbo importer should commit (auto.commit)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqReplicationImplReplicationContentFactoryProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationImplReplicationContentFactoryProviderImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqReplicationImplReplicationContentFactoryProviderImplProperties:
      type: object
      properties:
        replication.content.useFileStorage:
          description: Whether the created content packages should be stored in the
            file system or the repository. (replication.content.useFileStorage)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        replication.content.maxCommitAttempts:
          description: Max number of attempts to acquire/release/destroy replication
            content. (replication.content.maxCommitAttempts)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqReplicationImplReplicationReceiverImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationImplReplicationReceiverImplProperties"
    comDayCqReplicationImplReplicationReceiverImplProperties:
      type: object
      properties:
        receiver.tmpfile.threshold:
          description: Size of input data that triggers creation of a temporary file.
            (receiver.tmpfile.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        receiver.packages.use.install:
          description: If selected, the install method will be used for packages,
            thus creating a snapshot. Otherwise, the extract method will be used instead.
            (receiver.packages.use.install)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqReplicationImplReplicatorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationImplReplicatorImplProperties"
    comDayCqReplicationImplReplicatorImplProperties:
      type: object
      properties:
        distribute_events:
          description: Create distributed replication events (only needed for clustered
            environments) (distribute_events)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqReplicationImplReverseReplicatorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationImplReverseReplicatorProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqReplicationImplReverseReplicatorProperties:
      type: object
      properties:
        scheduler.period:
          description: Poll frequency in seconds (scheduler.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqReplicationImplTransportBinaryLessTransportHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationImplTransportBinaryLessTransportHandlerProperties"
    comDayCqReplicationImplTransportBinaryLessTransportHandlerProperties:
      type: object
      properties:
        disabled.cipher.suites:
          description: List of cipher suites that should be explicitly disabled. Default
            is none. (disabled.cipher.suites)
          "$ref": "#/components/schemas/configNodePropertyArray"
        enabled.cipher.suites:
          description: List of cipher suites that should be explicitly enabled. Default
            is none. (enabled.cipher.suites)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqReplicationImplTransportHttpInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReplicationImplTransportHttpProperties"
    comDayCqReplicationImplTransportHttpProperties:
      type: object
      properties:
        disabled.cipher.suites:
          description: List of cipher suites that should be explicitly disabled. Default
            is none. (disabled.cipher.suites)
          "$ref": "#/components/schemas/configNodePropertyArray"
        enabled.cipher.suites:
          description: List of cipher suites that should be explicitly enabled. Default
            is none. (enabled.cipher.suites)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqReportingImplCacheCacheImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReportingImplCacheCacheImplProperties"
    comDayCqReportingImplCacheCacheImplProperties:
      type: object
      properties:
        repcache.enable:
          description: Enables the caching of report data. Use this to speed up report
            data retrieval. (repcache.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        repcache.ttl:
          description: The time (in seconds) report data gets cached. (repcache.ttl)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        repcache.max:
          description: Maximum number of reports to be cached. Choose a low number
            if your reports contains lots of data to avoid out of memory situations.
            (repcache.max)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqReportingImplConfigServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReportingImplConfigServiceImplProperties"
    comDayCqReportingImplConfigServiceImplProperties:
      type: object
      properties:
        repconf.timezone:
          description: Use a timezone ID such as 'America/Los_Angeles' or 'Europe/Zurich'
            that is used for calculating dates and times. If left empty, the server's
            default timezone will be used. (repconf.timezone)
          "$ref": "#/components/schemas/configNodePropertyString"
        repconf.locale:
          description: Use a locale ID such as 'en', 'en_US', 'de' or 'de_CH' to specify
            the locale to be used for reporting. (repconf.locale)
          "$ref": "#/components/schemas/configNodePropertyString"
        repconf.snapshots:
          description: Repository path where snapshot data is saved. (repconf.snapshots)
          "$ref": "#/components/schemas/configNodePropertyString"
        repconf.repdir:
          description: Repository path where reports are located. (repconf.repdir)
          "$ref": "#/components/schemas/configNodePropertyString"
        repconf.hourofday:
          description: Hour of day (0 - 23; local server time) daily snapshots will
            be taken. (repconf.hourofday)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        repconf.minofhour:
          description: Minute of hour (0 - 59) hourly snapshots will be taken. (repconf.minofhour)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        repconf.maxrows:
          description: Maximum number of rows to be included in a snapshot; set to
            0 to include all rows (repconf.maxrows)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        repconf.fakedata:
          description: Allows the creation of fake historic data (testing purposes
            only; note that activating this feature might impose security issues!)
            (repconf.fakedata)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        repconf.snapshotuser:
          description: An optional user ID for taking snapshot. Basically, snapshots
            are taken for the user that has finsihed the report. There might be situations
            (for example on a publish system) where you might want specify a fallback
            user that is used instead. Note that specifying a user might impose a
            security risk. (repconf.snapshotuser)
          "$ref": "#/components/schemas/configNodePropertyString"
        repconf.enforcesnapshotuser:
          description: Check if snapshots should always be taken for the user specified
            above. Note that this might have serious security impacts if not handled
            correctly.  (repconf.enforcesnapshotuser)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqReportingImplRLogAnalyzerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqReportingImplRLogAnalyzerProperties"
    comDayCqReportingImplRLogAnalyzerProperties:
      type: object
      properties:
        request.log.output:
          description: request.log.output.description (request.log.output)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqRewriterLinkcheckerImplLinkCheckerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqRewriterLinkcheckerImplLinkCheckerImplProperties:
      type: object
      properties:
        scheduler.period:
          description: The time ( in seconds ) between background runs of the link
            checker. (scheduler.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        scheduler.concurrent:
          description: scheduler.concurrent.description (scheduler.concurrent)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        service.bad_link_tolerance_interval:
          description: The number of hours after which a repeatedly unsuccessfully
            checked link is considered a bad link. (service.bad_link_tolerance_interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        service.check_override_patterns:
          description: Space-separated list of Java regular expression patterns for
            links that should not be checked by the link checker, but must be a valid
            uri anyways. (service.check_override_patterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
        service.cache_broken_internal_links:
          description: Enable caching of broken internal links. This option will improve
            performance of pages with many broken links that point within the same
            site. (service.cache_broken_internal_links)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        service.special_link_prefix:
          description: Prefixes that specify a special link that is not checked or
            rewritten at all. (service.special_link_prefix)
          "$ref": "#/components/schemas/configNodePropertyArray"
        service.special_link_patterns:
          description: Patterns that specify a special link that is not checked or
            rewritten at all. (service.special_link_patterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties"
    comDayCqRewriterLinkcheckerImplLinkCheckerTaskProperties:
      type: object
      properties:
        scheduler.period:
          description: The time ( in seconds ) between background runs of the link
            checker. (scheduler.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        scheduler.concurrent:
          description: scheduler.concurrent.description (scheduler.concurrent)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        good_link_test_interval:
          description: The interval in hours to check good links. (good_link_test_interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        bad_link_test_interval:
          description: The interval in hours to check bad links. (bad_link_test_interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        link_unused_interval:
          description: link_unused_interval.description (link_unused_interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        connection.timeout:
          description: The time ( in milliseconds ) for connection to disconnect.
            (connection.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties"
    comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryProperties:
      type: object
      properties:
        linkcheckertransformer.disableRewriting:
          description: Completly disable all rewriting of links. (linkcheckertransformer.disableRewriting)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        linkcheckertransformer.disableChecking:
          description: Completly disable all link checking. All links are handled
            as valid. (linkcheckertransformer.disableChecking)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        linkcheckertransformer.mapCacheSize:
          description: The cache for the map operations. A value of less than 50 disables
            the cache. (linkcheckertransformer.mapCacheSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        linkcheckertransformer.strictExtensionCheck:
          description: If checked, a strict extension check is performed to detect
            HTML pages. By default the extension can occur at any location in the
            path and can be followed by a suffix. With strict checking, the extension
            has to be the last element in the path. Only for links to HTML pages the
            mapping configuration is used. (linkcheckertransformer.strictExtensionCheck)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        linkcheckertransformer.stripHtmltExtension:
          description: If checked, all links with a .html or .htm extension are rewritten
            and their extension is removed. (linkcheckertransformer.stripHtmltExtension)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        linkcheckertransformer.rewriteElements:
          description: List of html elements and their attributes which are rewritten.
            Pleasse add each entry in the form {elementName}:{attributeName}. (linkcheckertransformer.rewriteElements)
          "$ref": "#/components/schemas/configNodePropertyArray"
        linkcheckertransformer.stripExtensionPathBlacklist:
          description: Add paths for which stripping of extension is NOT to be performed
            (linkcheckertransformer.stripExtensionPathBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties:
      type: object
      properties:
        service.max_links_per_host:
          description: Maximum number of links for each host to be kept in the repository
            for validation. (service.max_links_per_host)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        service.save_external_link_references:
          description: If checked, the urls referencing external links will be saved
            in the repository. (service.save_external_link_references)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqRewriterProcessorImplHtmlParserFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqRewriterProcessorImplHtmlParserFactoryProperties"
    comDayCqRewriterProcessorImplHtmlParserFactoryProperties:
      type: object
      properties:
        htmlparser.processTags:
          description: 'Add additonal tags which need to be processed { default tags
            processed: A,IMG,AREA,FORM,BASE,LINK,SCRIPT,BODY,HEAD} (htmlparser.processTags)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        htmlparser.preserveCamelCase:
          description: Preserve Camel Casing of HTML Attributes (htmlparser.preserveCamelCase)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqSearchImplBuilderQueryBuilderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqSearchImplBuilderQueryBuilderImplProperties"
    comDayCqSearchImplBuilderQueryBuilderImplProperties:
      type: object
      properties:
        excerpt.properties:
          description: List of properties that will be included in an excerpt (excerpt.properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cache.max.entries:
          description: 'Maximum number of entries to keep in the facet cache. Set
            to zero to disable caching. Security warning: the cache is shared by all
            users! (cache.max.entries)'
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.entry.lifetime:
          description: How long (in seconds) to keep facets in the cache. Set to zero
            to disable automatic expiration. (cache.entry.lifetime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        xpath.union:
          description: Expert-only. Use XPath Union statements for union style queries,
            e.g. searching in multiple paths. Requires Oak 1.5.12+ or a JCR that supports
            XPath Union queries. Turning this off will loose ability to leverage the
            search index and leads to more filtering on the querybuilder for such
            queries. (xpath.union)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqSearchSuggestImplSuggestionIndexManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqSearchSuggestImplSuggestionIndexManagerImplProperties"
    comDayCqSearchSuggestImplSuggestionIndexManagerImplProperties:
      type: object
      properties:
        pathBuilder.target:
          description: '"com.day.cq.search.suggest.PathBuilder" service which defines
            the internal index structure. Use OSGi filter expression. (pathBuilder.target)'
          "$ref": "#/components/schemas/configNodePropertyString"
        suggest.basepath:
          description: Absolute path where search suggest indexes and collected reports
            are stored. (suggest.basepath)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerProperties:
      type: object
      properties:
        cq.searchpromote.confighandler.enabled:
          description: Enables the configuration handler. It must be disabled on author
            instances. (cq.searchpromote.confighandler.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqSearchpromoteImplSearchPromoteServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqSearchpromoteImplSearchPromoteServiceImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqSearchpromoteImplSearchPromoteServiceImplProperties:
      type: object
      properties:
        cq.searchpromote.configuration.server.uri:
          description: Server URI for template XML requests (cq.searchpromote.configuration.server.uri)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.searchpromote.configuration.environment:
          description: The Search&Promote environment environment to use (stage/live)
            (cq.searchpromote.configuration.environment)
          "$ref": "#/components/schemas/configNodePropertyString"
        connection.timeout:
          description: Timeout in milliseconds until a connection is established.
            A timeout value of zero is interpreted as an infinite timeout. Default
            is 30000ms (connection.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        socket.timeout:
          description: Timeout in milliseconds for waiting for data or a maximum period
            of inactivity between two consecutive data packets. Default is 30000ms
            (socket.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqSecurityACLSetupInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqSecurityACLSetupProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqSecurityACLSetupProperties:
      type: object
      properties:
        cq.aclsetup.rules:
          description: 'Defines an ACL rule of the format: ( "allow" | "deny" ) ";"
            ( privileges | "inherit" ) ";" principal ";" path (cq.aclsetup.rules)'
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqStatisticsImplStatisticsServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqStatisticsImplStatisticsServiceImplProperties"
    comDayCqStatisticsImplStatisticsServiceImplProperties:
      type: object
      properties:
        scheduler.period:
          description: The interval in seconds for the cleanup task. (scheduler.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        scheduler.concurrent:
          description: scheduler.concurrent.description (scheduler.concurrent)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        path:
          description: Absolute path were statistical data is stored. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        workspace:
          description: Name of the workspace where statistical data is stored. The
            default workspace will be used if you leave this empty. (workspace)
          "$ref": "#/components/schemas/configNodePropertyString"
        keywordsPath:
          description: Relative path of the keyword property. (keywordsPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        asyncEntries:
          description: Whether entries should be written asynchronously to the repository.
            If unchecked, the caller will block until the entry is written to the
            repository. (asyncEntries)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqTaggingImplJcrTagManagerFactoryImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqTaggingImplJcrTagManagerFactoryImplProperties"
    comDayCqTaggingImplJcrTagManagerFactoryImplProperties:
      type: object
      properties:
        validation.enabled:
          description: Validate changes to cq:tags properties using an observation
            listener (validation.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqTaggingImplSearchTagPredicateEvaluatorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqTaggingImplSearchTagPredicateEvaluatorProperties"
    comDayCqTaggingImplSearchTagPredicateEvaluatorProperties:
      type: object
      properties:
        ignore_path:
          description: Ignore path in xpath query expansion (ignore_path)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqTaggingImplTagGarbageCollectorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqTaggingImplTagGarbageCollectorProperties"
    comDayCqTaggingImplTagGarbageCollectorProperties:
      type: object
      properties:
        scheduler.expression:
          description: Run at the given cron expression times (defaults to once a
            day at midnight) http://www.docjar.com/docs/api/org/quartz/CronTrigger.html
            (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties"
    comDayCqWcmContentsyncImplHandlerPagesUpdateHandlerProperties:
      type: object
      properties:
        cq.pagesupdatehandler.imageresourcetypes:
          description: cq.pagesupdatehandler.imageresourcetypes.description (cq.pagesupdatehandler.imageresourcetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactoryProperties"
    comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactoryProperties:
      type: object
      properties:
        cq.contentsync.pathrewritertransformer.mapping.links:
          description: Mapping of link tags to their attributes (tag:attribute). (cq.contentsync.pathrewritertransformer.mapping.links)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.contentsync.pathrewritertransformer.mapping.clientlibs:
          description: Mapping of script and style tags to their attributes (tag:attribute).
            (cq.contentsync.pathrewritertransformer.mapping.clientlibs)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.contentsync.pathrewritertransformer.mapping.images:
          description: Mapping of image tags to their attributes (tag:attribute:attributeN).
            (cq.contentsync.pathrewritertransformer.mapping.images)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.contentsync.pathrewritertransformer.attribute.pattern:
          description: Regular expression to identify capturing group where path can
            be found in an attribute. (cq.contentsync.pathrewritertransformer.attribute.pattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.contentsync.pathrewritertransformer.clientlibrary.pattern:
          description: Regular expression to identify client libraries included by
            client library manager. (cq.contentsync.pathrewritertransformer.clientlibrary.pattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.contentsync.pathrewritertransformer.clientlibrary.replace:
          description: Replace expression used for rewriting paths to client libraries
            included by client library manager. (cq.contentsync.pathrewritertransformer.clientlibrary.replace)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplAuthoringUIModeServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplAuthoringUIModeServiceImplProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmCoreImplAuthoringUIModeServiceImplProperties:
      type: object
      properties:
        authoringUIModeService.default:
          description: Name of the default authoring UI mode (authoringUIModeService.default)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplCommandsWCMCommandServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplCommandsWCMCommandServletProperties"
    comDayCqWcmCoreImplCommandsWCMCommandServletProperties:
      type: object
      properties:
        wcmcommandservlet.delete_whitelist:
          description: Path prefixes that are allowed to be deleted through the WCM
            delete page/asset command (wcmcommandservlet.delete_whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties"
    comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplProperties:
      type: object
      properties:
        dim.default.mode:
          description: The default value is used in case no cq:deviceIdentificationMode
            property is found on a page node or on its parent nodes (dim.default.mode)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        dim.appcache.enabled:
          description: The application cache, if enabled, will allow sending meaningful
            events when an application's DeviceIdentificationMode changes. For more
            details about these events check the DeviceIdentificationMode#TOPIC* properties.
            (dim.appcache.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmCoreImplEventPageEventAuditListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplEventPageEventAuditListenerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmCoreImplEventPageEventAuditListenerProperties:
      type: object
      properties:
        configured:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplEventPagePostProcessorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplEventPagePostProcessorProperties"
    comDayCqWcmCoreImplEventPagePostProcessorProperties:
      type: object
      properties:
        paths:
          description: Paths to listen (paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplEventRepositoryChangeEventListenerProperties"
    comDayCqWcmCoreImplEventRepositoryChangeEventListenerProperties:
      type: object
      properties:
        paths:
          description: Paths to listen (paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        excludedPaths:
          description: Paths which are not monitored for page events (excludedPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmCoreImplEventTemplatePostProcessorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplEventTemplatePostProcessorProperties"
    comDayCqWcmCoreImplEventTemplatePostProcessorProperties:
      type: object
      properties:
        paths:
          description: Paths to listen (paths)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplLanguageManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplLanguageManagerImplProperties"
    comDayCqWcmCoreImplLanguageManagerImplProperties:
      type: object
      properties:
        langmgr.list.path:
          description: Path to language list in repository (langmgr.list.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        langmgr.country.default:
          description: List of default countries. Deprecated in favor of language
            list. (langmgr.country.default)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmCoreImplPagePageInfoAggregatorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplPagePageInfoAggregatorImplProperties"
    comDayCqWcmCoreImplPagePageInfoAggregatorImplProperties:
      type: object
      properties:
        page.info.provider.property.regex.default:
          description: Regular expression used to filter the registered page info
            providers (page.info.provider.property.regex.default)
          "$ref": "#/components/schemas/configNodePropertyString"
        page.info.provider.property.name:
          description: Property of the PageInfoProvider service to be checked against
            the filter regex (page.info.provider.property.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplPagePageManagerFactoryImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplPagePageManagerFactoryImplProperties"
    comDayCqWcmCoreImplPagePageManagerFactoryImplProperties:
      type: object
      properties:
        illegalCharMapping:
          description: Replacement string to use for illegal characters when creating
            a page from a title. Defaults to '-' if not defined. (illegalCharMapping)
          "$ref": "#/components/schemas/configNodePropertyString"
        pageSubTreeActivationCheck:
          description: Sets whether to check the page's subtree for any activated
            descendants. (pageSubTreeActivationCheck)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties"
    comDayCqWcmCoreImplReferencesContentContentReferenceConfigProperties:
      type: object
      properties:
        contentReferenceConfig.resourceTypes:
          description: 'List of sling resource types and the name of path properties
            that represent a content reference (default: "foundation/components/reference@path")
            (contentReferenceConfig.resourceTypes)'
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerProperties"
    comDayCqWcmCoreImplServletsContentfinderAssetViewHandlerProperties:
      type: object
      properties:
        dam.showexpired:
          description: Determines whether to show expired assets (dam.showexpired)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        dam.showhidden:
          description: Determines whether to show assets, when their parent or grandparent
            folder has hidden=true property (dam.showhidden)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        tagTitleSearch:
          description: Determines whether to include tag titles in full text search
            (tagTitleSearch)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        guessTotal:
          description: configure default value for querybuilder guessTotal (guessTotal)
          "$ref": "#/components/schemas/configNodePropertyString"
        dam.expiryProperty:
          description: Path of the property determing asset expiry (dam.expiryProperty)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplServletsContentfinderConnectorConnectorViewHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsContentfinderConnectorConnectorViewHandlerProperties"
    comDayCqWcmCoreImplServletsContentfinderConnectorConnectorViewHandlerProperties:
      type: object
      properties:
        item.resource.types:
          description: item.resource.types.description (item.resource.types)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsContentfinderPageViewHandlerProperties"
    comDayCqWcmCoreImplServletsContentfinderPageViewHandlerProperties:
      type: object
      properties:
        guessTotal:
          description: configure default value for querybuilder guessTotal (guessTotal)
          "$ref": "#/components/schemas/configNodePropertyString"
        tagTitleSearch:
          description: Determines whether to include tag titles in full text search
            (tagTitleSearch)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmCoreImplServletsFindReplaceServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsFindReplaceServletProperties"
    comDayCqWcmCoreImplServletsFindReplaceServletProperties:
      type: object
      properties:
        scope:
          description: The scope for find and replace. (scope)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmCoreImplServletsReferenceSearchServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsReferenceSearchServletProperties"
    comDayCqWcmCoreImplServletsReferenceSearchServletProperties:
      type: object
      properties:
        referencesearchservlet.maxReferencesPerPage:
          description: Maximum number of references returned per page in json (-1
            for no limit) (referencesearchservlet.maxReferencesPerPage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        referencesearchservlet.maxPages:
          description: Maximum number of pages returned in json (-1 for no limit)
            (referencesearchservlet.maxPages)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqWcmCoreImplServletsThumbnailServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplServletsThumbnailServletProperties"
    comDayCqWcmCoreImplServletsThumbnailServletProperties:
      type: object
      properties:
        workspace:
          description: workspace.description (workspace)
          "$ref": "#/components/schemas/configNodePropertyString"
        dimensions:
          description: List of accepted dimensions (in WxH format), empty for no restriction
            (not recommended as it could cause a DoS attack) (dimensions)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplUtilsDefaultPageNameValidatorProperties"
    comDayCqWcmCoreImplUtilsDefaultPageNameValidatorProperties:
      type: object
      properties:
        nonValidChars:
          description: The characters which should not be allowed in page names (nonValidChars)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplVariantsPageVariantsProviderImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmCoreImplVariantsPageVariantsProviderImplProperties:
      type: object
      properties:
        default.externalizer.domain:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplVersionManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplVersionManagerImplProperties"
    comDayCqWcmCoreImplVersionManagerImplProperties:
      type: object
      properties:
        versionmanager.createVersionOnActivation:
          description: This flag controls whether a new version should be created
            on page activation (see implicit versioning paths). (versionmanager.createVersionOnActivation)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        versionmanager.purgingEnabled:
          description: If set to true, purging is enabled. (versionmanager.purgingEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        versionmanager.purgePaths:
          description: The paths to check for version purging. (versionmanager.purgePaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        versionmanager.ivPaths:
          description: The paths where implicit versioning is active. (versionmanager.ivPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        versionmanager.maxAgeDays:
          description: The maximum age of a version in days that will not be purged.
            If this value is less than 1, purging is not performed based on the age
            of the version. (versionmanager.maxAgeDays)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        versionmanager.maxNumberVersions:
          description: The maximum number of versions to keep. If this value is less
            than 1, purging is not performed based on the number of versions. (versionmanager.maxNumberVersions)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        versionmanager.minNumberVersions:
          description: The minimum number of versions to keep. If this value is set
            to a value less than 1 no minimum number of versions is retained. (versionmanager.minNumberVersions)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqWcmCoreImplVersionPurgeTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplVersionPurgeTaskProperties"
    comDayCqWcmCoreImplVersionPurgeTaskProperties:
      type: object
      properties:
        versionpurge.paths:
          description: The paths to check for version purging. (versionpurge.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        versionpurge.recursive:
          description: If set true, the version purge starts at the configured paths
            and traverses the tree to purge versions. (versionpurge.recursive)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        versionpurge.maxVersions:
          description: The maximum number of versions to keep. If this value is set
            to a value less than 1 no maximum number of version check is performed.
            (versionpurge.maxVersions)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        versionpurge.minVersions:
          description: The minimum number of versions to keep. If this value is set
            to a value less than 1 no minimum number of versions is retained. (versionpurge.minVersions)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        versionpurge.maxAgeDays:
          description: The maximum age of a version in days before it is purged. If
            this value is set to a value less than 1 no age check is performed. (versionpurge.maxAgeDays)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqWcmCoreImplWarpTimeWarpFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplWarpTimeWarpFilterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmCoreImplWarpTimeWarpFilterProperties:
      type: object
      properties:
        filter.order:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        filter.scope:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplWCMDebugFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplWCMDebugFilterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmCoreImplWCMDebugFilterProperties:
      type: object
      properties:
        wcmdbgfilter.enabled:
          description: Controls if the filter is enabled. (wcmdbgfilter.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        wcmdbgfilter.jspDebug:
          description: Show JSP debug information in errors and stacktraces. (wcmdbgfilter.jspDebug)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmCoreImplWCMDeveloperModeFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplWCMDeveloperModeFilterProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmCoreImplWCMDeveloperModeFilterProperties:
      type: object
      properties:
        wcmdevmodefilter.enabled:
          description: Controls if the filter is enabled. (wcmdevmodefilter.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmCoreMvtMVTStatisticsImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreMvtMVTStatisticsImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmCoreMvtMVTStatisticsImplProperties:
      type: object
      properties:
        mvtstatistics.trackingurl:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreStatsPageViewStatisticsImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreStatsPageViewStatisticsImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmCoreStatsPageViewStatisticsImplProperties:
      type: object
      properties:
        pageviewstatistics.trackingurl:
          description: Send data to the server collecting statistics (pageviewstatistics.trackingurl)
          "$ref": "#/components/schemas/configNodePropertyString"
        pageviewstatistics.trackingscript.enabled:
          description: Enable or disable the inclusion of the tracking script on the
            pages. No page tracking is available when disabled (pageviewstatistics.trackingscript.enabled)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreWCMRequestFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreWCMRequestFilterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmCoreWCMRequestFilterProperties:
      type: object
      properties:
        wcmfilter.mode:
          description: Controls the WCM mode. (wcmfilter.mode)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comDayCqWcmDesignimporterDesignPackageImporterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterDesignPackageImporterProperties"
    comDayCqWcmDesignimporterDesignPackageImporterProperties:
      type: object
      properties:
        extract.filter:
          description: The list of regular expressions to be used for filtering files
            from extraction. Design package entries matching any of the specified
            patterns are excluded from extraction. (extract.filter)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmDesignimporterImplCanvasBuilderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterImplCanvasBuilderImplProperties"
    comDayCqWcmDesignimporterImplCanvasBuilderImplProperties:
      type: object
      properties:
        filepattern:
          description: The Page Builder can be configured to handle HTML files matching
            a regular expression as defined by file pattern. (filepattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        build.page.nodes:
          description: Page component nodes are built for the component div tags encountered
            in the input HTML. Deselect this option if the component node generation
            isn't desired. (build.page.nodes)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        build.client.libs:
          description: The JS/CSS present in the design package are collated into
            CQ clientlibs. Turn this off if the clientlib managment needs to be done
            in a more controlled manner. (build.client.libs)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        build.canvas.component:
          description: A canvas component is generated for the HTML in the design
            package. Deselect this option if the generation of canvas component isn't
            desired. (build.canvas.component)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerProperties"
    comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerProperties:
      type: object
      properties:
        minThreadPoolSize:
          description: Minimum Thread pool size (minThreadPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxThreadPoolSize:
          description: Maximum Thread pool size (maxThreadPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCqWcmDesignimporterImplEntryPreprocessorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterImplEntryPreprocessorImplProperties"
    comDayCqWcmDesignimporterImplEntryPreprocessorImplProperties:
      type: object
      properties:
        search.pattern:
          description: The pattern to search for, in the design package entry contents.
            This regular expression is matched with the entry content line by line.
            Upon match, the matching text is replaced with the replacement pattern
            specified. (search.pattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        replace.pattern:
          description: The pattern that replaces the matches found. You may use regex
            group references like $1, $2. Additionally, this pattern supports keywords
            like {designPath} which get resolved with the actual value during import.
            (replace.pattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties"
    comDayCqWcmDesignimporterImplMobileCanvasBuilderImplProperties:
      type: object
      properties:
        filepattern:
          description: The Page Builder can be configured to handle HTML files matching
            a regular expression as defined by file pattern. (filepattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        device.groups:
          description: The list of device groups to be supported (device.groups)
          "$ref": "#/components/schemas/configNodePropertyArray"
        build.page.nodes:
          description: Page component nodes are built for the component div tags encountered
            in the input HTML. Deselect this option if the component node generation
            isn't desired. (build.page.nodes)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        build.client.libs:
          description: The JS/CSS present in the design package are collated into
            CQ clientlibs. Turn this off if the clientlib managment needs to be done
            in a more controlled manner. (build.client.libs)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        build.canvas.component:
          description: A canvas component is generated for the HTML in the design
            package. Deselect this option if the generation of canvas component isn't
            desired. (build.canvas.component)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponentTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponentTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponentTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        component.resourceType:
          description: The resourceType of the component that will be generated by
            this TagHandler (component.resourceType)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponentTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        component.resourceType:
          description: The resourceType of the component that will be generated by
            this TagHandler (component.resourceType)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        component.resourceType:
          description: The resourceType of the component that will be generated by
            this TagHandler (component.resourceType)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponentTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponentTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponentTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        component.resourceType:
          description: The resourceType of the component that will be generated by
            this TagHandler (component.resourceType)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlerFactoryProperties"
    comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlerFactoryProperties:
      type: object
      properties:
        service.ranking:
          description: Service Ranking for this OSGi Service. This ranking determines
            which implementation is picked up if multiple services are available.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        tagpattern:
          description: The pattern for which this tag handler factory instance rolls
            out a new instance. (tagpattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmFoundationFormsImplFormChooserServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationFormsImplFormChooserServletProperties"
    comDayCqWcmFoundationFormsImplFormChooserServletProperties:
      type: object
      properties:
        service.name:
          description: service.name.description (service.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.resourceTypes:
          description: sling.servlet.resourceTypes.description (sling.servlet.resourceTypes)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.selectors:
          description: sling.servlet.selectors.description (sling.servlet.selectors)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.methods:
          description: sling.servlet.methods.description (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyArray"
        forms.formchooserservlet.advansesearch.require:
          description: Perform advanced search to locate form (based on cq:formAlias
            and cq:defaultFormFor) (forms.formchooserservlet.advansesearch.require)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmFoundationFormsImplFormsHandlingServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationFormsImplFormsHandlingServletProperties"
    comDayCqWcmFoundationFormsImplFormsHandlingServletProperties:
      type: object
      properties:
        name.whitelist:
          description: List of name expressions that will pass request validation.
            A validation error will occur if any posted parameters are not in the
            whitelist and not defined on the form. (name.whitelist)
          "$ref": "#/components/schemas/configNodePropertyString"
        allow.expressions:
          description: Evaluate expressions on form submissions. (allow.expressions)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmFoundationImplAdaptiveImageComponentServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationImplAdaptiveImageComponentServletProperties"
    comDayCqWcmFoundationImplAdaptiveImageComponentServletProperties:
      type: object
      properties:
        adapt.supported.widths:
          description: List of widths this component is permitted to generate. (adapt.supported.widths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmFoundationImplHTTPAuthHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationImplHTTPAuthHandlerProperties"
    comDayCqWcmFoundationImplHTTPAuthHandlerProperties:
      type: object
      properties:
        path:
          description: Repository path for which this authentication handler should
            be used by Sling. If this is empty, the authentication handler will be
            disabled. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.http.nologin:
          description: Check this if the Login Page of this authenticator should be
            disabled or not. If not checked, the loing page is returned if a request
            to a page triggers the login mechanism. If this is checked, the login
            page is only returned if explicitly requested (for example by the login
            servlet at "/bin/login.html"). In author systems, this property is generally
            not checked, while on publish systems this property is checked to prevent
            presenting casual users with the login form. (auth.http.nologin)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        auth.http.realm:
          description: Name of the HTTP realm - this name is displayed in the login
            window to the user (and is a key for the client to cache the credentials).
            (auth.http.realm)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.default.loginpage:
          description: Absolute path of the page to use to display the default login
            form. This page is rendered if no Closed User Group applies or the applicable
            Closed User Group does not declare its own login page. This property is
            used to render the page as is in an HTTP GET request. As such the value
            must included any necessary request extension such as ".html". The default
            value of this property is "/login", which is a vanity URL. (auth.default.loginpage)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.cred.form:
          description: Lists identifiers of clients which are known to support form
            based HTTP (Basic) authentication. Such authentication presents a form
            and uses AJAX requests to validate the user name and password and assumes
            the client caches this information. This is only known to work in Firefox
            and some Internet Explorer browsers. The default value for this property
            therefore is [ "Firefox", "Shiretoko", "MSIE 7", "MSIE 6" ]. Changing
            this value is strongly discouraged because it may prevent login. All browsers
            not supporting form based HTTP (Basic) authentication will use regular
            HTTP (Basic) authentication using the 401/UNAUTHORIZED status code and
            the regular browser password dialog. (auth.cred.form)
          "$ref": "#/components/schemas/configNodePropertyArray"
        auth.cred.utf8:
          description: Lists identifiers of clients which are known to encode non-ASCII
            credentials using UTF-8 character encoding. Clients whose User-Agent header
            does not contain one of the listed identifiers are assumed to encode the
            credentials using ISO-8859-1 character encoding. The default list of clients
            is [ "Firefox", "Shiretoko", "Chrome", "Opera", "curl", "Wget" ]. (auth.cred.utf8)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmFoundationImplPageImpressionsTrackerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationImplPageImpressionsTrackerProperties"
    comDayCqWcmFoundationImplPageImpressionsTrackerProperties:
      type: object
      properties:
        sling.auth.requirements:
          description: sling.auth.requirements.description (sling.auth.requirements)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmFoundationImplPageRedirectServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationImplPageRedirectServletProperties"
    comDayCqWcmFoundationImplPageRedirectServletProperties:
      type: object
      properties:
        excluded.resource.types:
          description: List of resource types which should be ignored by this redirect
            servlet. (excluded.resource.types)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistServiceProperties"
    comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistServiceProperties:
      type: object
      properties:
        default.attachment.type.blacklist:
          description: default.attachment.type.blacklist.description (default.attachment.type.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        baseline.attachment.type.blacklist:
          description: baseline.attachment.type.blacklist.description (baseline.attachment.type.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties:
      type: object
      properties:
        parameter.whitelist:
          description: 'Properties with : in them are often security significant,
            by default they are not allowed through, with certain ''safe'' values
            white listed. Properties starting with : in them are automatically white
            listed. (parameter.whitelist)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        parameter.whitelist.prefixes:
          description: This configuration allows white listing certain parameter name
            prefixes which are known to be safe. (parameter.whitelist.prefixes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        binary.parameter.whitelist:
          description: Binary properties with '.' in them can trigger mime type guessing
            from the 'extension' part when served by the DefaultGetServlet. (binary.parameter.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        modifier.whitelist:
          description: Some '@' suffixes allow bypassing security otherwise provided
            by the Dispatcher. Only white listed suffixes are allowed. (modifier.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        operation.whitelist:
          description: The SlingPostServlet supports some powerful :operation values
            such as import/export. So only the basic safe operations are allowed.
            (operation.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        operation.whitelist.prefixes:
          description: Only specific operations given a specific name prefix are allowed.
            (operation.whitelist.prefixes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        typehint.whitelist:
          description: A subset of node types known to be safe. (typehint.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resourcetype.whitelist:
          description: All resource type settings, except those that hav been whitelisted.
            Candidates on the whitelist should be strongly vetted for XSS, CSRF and
            any other security vulnerabilities. (resourcetype.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties:
      type: object
      properties:
        device.info.transformer.enabled:
          description: Enable/disable the debugging filter (device.info.transformer.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        device.info.transformer.css.style:
          description: CSS styles for the debugging filter information (device.info.transformer.css.style)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmMobileCoreImplRedirectRedirectFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMobileCoreImplRedirectRedirectFilterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmMobileCoreImplRedirectRedirectFilterProperties:
      type: object
      properties:
        redirect.enabled:
          description: Indicates whether the redirect filter is enabled or not. (redirect.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        redirect.stats.enabled:
          description: Indicates whether the redirect filter will generate statistics
            reports. (redirect.stats.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        redirect.extensions:
          description: List of extensions for which device detection is active and
            performs redirects for device group selectors. (redirect.extensions)
          "$ref": "#/components/schemas/configNodePropertyArray"
        redirect.paths:
          description: List of paths for which device detection is active and performs
            redirects for device group selectors. (redirect.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmMsmImplActionsContentCopyActionFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsContentCopyActionFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmMsmImplActionsContentCopyActionFactoryProperties:
      type: object
      properties:
        cq.wcm.msm.action.excludednodetypes:
          description: The list of regex matching node types to be excluded (cq.wcm.msm.action.excludednodetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedparagraphitems:
          description: The list of regex matching paragraph items to be excluded (cq.wcm.msm.action.excludedparagraphitems)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedprops:
          description: The list of regex matching page properties to be excluded (cq.wcm.msm.action.excludedprops)
          "$ref": "#/components/schemas/configNodePropertyArray"
        contentcopyaction.order.style:
          description: Select the way newly created Resources should be inserted.
            (contentcopyaction.order.style)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsContentDeleteActionFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmMsmImplActionsContentDeleteActionFactoryProperties:
      type: object
      properties:
        cq.wcm.msm.action.excludednodetypes:
          description: The list of regex matching node types to be excluded (cq.wcm.msm.action.excludednodetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedparagraphitems:
          description: The list of regex matching paragraph items to be excluded (cq.wcm.msm.action.excludedparagraphitems)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedprops:
          description: The list of regex matching page properties to be excluded (cq.wcm.msm.action.excludedprops)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsContentUpdateActionFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmMsmImplActionsContentUpdateActionFactoryProperties:
      type: object
      properties:
        cq.wcm.msm.action.excludednodetypes:
          description: The list of regex matching node types to be excluded (cq.wcm.msm.action.excludednodetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedparagraphitems:
          description: The list of regex matching paragraph items to be excluded (cq.wcm.msm.action.excludedparagraphitems)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedprops:
          description: The list of regex matching page properties to be excluded (cq.wcm.msm.action.excludedprops)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.ignoredMixin:
          description: This is the list of regex for matching Mixin-NodeType Names
            that should not be inherited" (cq.wcm.msm.action.ignoredMixin)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsOrderChildrenActionFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmMsmImplActionsOrderChildrenActionFactoryProperties:
      type: object
      properties:
        cq.wcm.msm.action.excludednodetypes:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedparagraphitems:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedprops:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmMsmImplActionsPageMoveActionFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsPageMoveActionFactoryProperties"
    comDayCqWcmMsmImplActionsPageMoveActionFactoryProperties:
      type: object
      properties:
        cq.wcm.msm.action.excludednodetypes:
          description: The list of regex matching node types to be excluded (cq.wcm.msm.action.excludednodetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedparagraphitems:
          description: The list of regex matching paragraph items to be excluded (cq.wcm.msm.action.excludedparagraphitems)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedprops:
          description: The list of regex matching page properties to be excluded (cq.wcm.msm.action.excludedprops)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.impl.actions.pagemove.prop_referenceUpdate:
          description: Searches all Pages referencing the copied one and update the
            reference to the new location (cq.wcm.msm.impl.actions.pagemove.prop_referenceUpdate)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmMsmImplActionsReferencesUpdateActionFactoryProperties:
      type: object
      properties:
        cq.wcm.msm.action.excludednodetypes:
          description: The list of regex matching node types to be excluded (cq.wcm.msm.action.excludednodetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedparagraphitems:
          description: The list of regex matching paragraph items to be excluded (cq.wcm.msm.action.excludedparagraphitems)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedprops:
          description: The list of regex matching page properties to be excluded (cq.wcm.msm.action.excludedprops)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.impl.action.referencesupdate.prop_updateNested:
          description: Default behavior only references to a target in the same LiveCopy
            are replaced. With this option you can turn on to replace references targeting
            any Resource that is within the branch of the top-most LiveCopy. (cq.wcm.msm.impl.action.referencesupdate.prop_updateNested)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplActionsVersionCopyActionFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmMsmImplActionsVersionCopyActionFactoryProperties:
      type: object
      properties:
        cq.wcm.msm.action.excludednodetypes:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedparagraphitems:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.msm.action.excludedprops:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmMsmImplLiveRelationshipManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplLiveRelationshipManagerImplProperties"
    comDayCqWcmMsmImplLiveRelationshipManagerImplProperties:
      type: object
      properties:
        liverelationshipmgr.relationsconfig.default:
          description: Live relations default rollout config used if no config is
            defined on blueprint and on live copy (liverelationshipmgr.relationsconfig.default)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmMsmImplRolloutManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplRolloutManagerImplProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmMsmImplRolloutManagerImplProperties:
      type: object
      properties:
        event.filter:
          description: event.filter.description (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
        rolloutmgr.excludedprops.default:
          description: The list of excluded page properties. (rolloutmgr.excludedprops.default)
          "$ref": "#/components/schemas/configNodePropertyArray"
        rolloutmgr.excludedparagraphprops.default:
          description: The list of excluded paragraph properties. (rolloutmgr.excludedparagraphprops.default)
          "$ref": "#/components/schemas/configNodePropertyArray"
        rolloutmgr.excludednodetypes.default:
          description: The list of excluded nodetypes. (rolloutmgr.excludednodetypes.default)
          "$ref": "#/components/schemas/configNodePropertyArray"
        rolloutmgr.threadpool.maxsize:
          description: The maximal amount of Threads rolling out onModification or
            onPublication in parallel (rolloutmgr.threadpool.maxsize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        rolloutmgr.threadpool.maxshutdowntime:
          description: The maximal number of minutes that the rollout manager should
            wait before being forced to shut down and not process the remaining rollouts
            (rolloutmgr.threadpool.maxshutdowntime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        rolloutmgr.threadpool.priority:
          description: The priority of the Background Thread to roll out modifications
            (rolloutmgr.threadpool.priority)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        rolloutmgr.commit.size:
          description: Amount of Resources changed to be reached before save (rolloutmgr.commit.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        rolloutmgr.conflicthandling.enabled:
          description: Set to true, if RolloutManger should handle Conflicts from
            a Page created in LiveCopy with a name that exists in Blueprint (rolloutmgr.conflicthandling.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWcmMsmImplServletsAuditLogServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmMsmImplServletsAuditLogServletProperties"
    comDayCqWcmMsmImplServletsAuditLogServletProperties:
      type: object
      properties:
        auditlogservlet.default.events.count:
          description: Number of events to return if not specified in request (auditlogservlet.default.events.count)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        auditlogservlet.default.path:
          description: auditlogservlet.default.path.description (auditlogservlet.default.path)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmNotificationEmailImplEmailChannelInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmNotificationEmailImplEmailChannelProperties"
    comDayCqWcmNotificationEmailImplEmailChannelProperties:
      type: object
      properties:
        email.from:
          description: From email address to be used from notification emails (email.from)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmNotificationImplNotificationManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmNotificationImplNotificationManagerImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmNotificationImplNotificationManagerImplProperties:
      type: object
      properties:
        event.topics:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmScriptingImplBVPManagerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmScriptingImplBVPManagerProperties"
    comDayCqWcmScriptingImplBVPManagerProperties:
      type: object
      properties:
        com.day.cq.wcm.scripting.bvp.script.engines:
          description: The scripting engines for which the WCMBindingsValuesProvider
            should be active. (com.day.cq.wcm.scripting.bvp.script.engines)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmUndoUndoConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmUndoUndoConfigProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWcmUndoUndoConfigProperties:
      type: object
      properties:
        cq.wcm.undo.enabled:
          description: Check to enable undo for most page editing operations; uncheck
            to disable undo completely. (cq.wcm.undo.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.wcm.undo.path:
          description: Repository path where binary undo data gets saved. (cq.wcm.undo.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.wcm.undo.validity:
          description: The minimum number of hours binary data is kept in the repository.
            (cq.wcm.undo.validity)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.wcm.undo.steps:
          description: The number of undoable edit steps. (cq.wcm.undo.steps)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.wcm.undo.persistence:
          description: The module that is used for persisting the undo history. Leave
            empty for default module. (cq.wcm.undo.persistence)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.wcm.undo.persistence.mode:
          description: Check to ensure that the undo history gets persisted after
            a step is added. Otherwise, the undo history gets persisted on page unload
            only. (cq.wcm.undo.persistence.mode)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.wcm.undo.markermode:
          description: The method that is used for highlightning the affected items
            after an undo or redo operation. Leave empty for default behaviour. (cq.wcm.undo.markermode)
          "$ref": "#/components/schemas/configNodePropertyString"
        cq.wcm.undo.whitelist:
          description: Defines components that are safe to use for undo. (cq.wcm.undo.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cq.wcm.undo.blacklist:
          description: Defines components (or component operations) that have known
            problems with undo. (cq.wcm.undo.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmWebservicesupportImplReplicationEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmWebservicesupportImplReplicationEventListenerProperties"
    comDayCqWcmWebservicesupportImplReplicationEventListenerProperties:
      type: object
      properties:
        Flush agents:
          description: List of agents to force flush on sub resources (Flush agents)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties"
    comDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties:
      type: object
      properties:
        event.filter:
          description: event.filter.description (event.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
        minThreadPoolSize:
          description: Minimum Thread pool size (minThreadPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxThreadPoolSize:
          description: Maximum Thread pool size (maxThreadPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cq.wcm.workflow.terminate.on.activate:
          description: When true running workflows are terminated when their payload
            is activated (cq.wcm.workflow.terminate.on.activate)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cq.wcm.worklfow.terminate.exclusion.list:
          description: 'never automatically terminate running workflows when payloads
            are activated for the specified workflow models. example: /etc/workflow/models/modelname/jcr:content/model
            (cq.wcm.worklfow.terminate.exclusion.list)'
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmWorkflowImplWorkflowPackageInfoProviderProperties"
    comDayCqWcmWorkflowImplWorkflowPackageInfoProviderProperties:
      type: object
      properties:
        workflowpackageinfoprovider.filter:
          description: 'This can be used to excluded some packages from being added
            to the results lists. As those packages won''t be part of the output,
            the user won''t be able to add the page he is visiting to one of those
            excluded workflow packages. Use + to include, - to exclude, and provide
            a Vault filter syntax Example: -/etc/workflow/packages/alison(/.*)? ;
            +/etc/workflow/packages/alison/but-i-want-this-one ; -/etc/workflow/packages/joe(/.*)?
            (workflowpackageinfoprovider.filter)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        workflowpackageinfoprovider.filter.rootpath:
          description: the root path for the filter to include or exclude packages.
            (workflowpackageinfoprovider.filter.rootpath)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWidgetImplHtmlLibraryManagerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWidgetImplHtmlLibraryManagerImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWidgetImplHtmlLibraryManagerImplProperties:
      type: object
      properties:
        htmllibmanager.clientmanager:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.debug:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.debug.console:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.debug.init.js:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.defaultthemename:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.defaultuserthemename:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.firebuglite.path:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        htmllibmanager.forceCQUrlInfo:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.gzip:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.maxage:
          description: 
          "$ref": "#/components/schemas/configNodePropertyInteger"
        htmllibmanager.maxDataUriSize:
          description: 
          "$ref": "#/components/schemas/configNodePropertyInteger"
        htmllibmanager.minify:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        htmllibmanager.path.list:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
        htmllibmanager.timing:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWidgetImplWidgetExtensionProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWidgetImplWidgetExtensionProviderImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCqWidgetImplWidgetExtensionProviderImplProperties:
      type: object
      properties:
        extendable.widgets:
          description: The list of extendable Widgets. (extendable.widgets)
          "$ref": "#/components/schemas/configNodePropertyArray"
        widgetextensionprovider.debug:
          description: Serve Javascript extensions in a debuggable way. (widgetextensionprovider.debug)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWorkflowImplEmailEMailNotificationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWorkflowImplEmailEMailNotificationServiceProperties"
    comDayCqWorkflowImplEmailEMailNotificationServiceProperties:
      type: object
      properties:
        from.address:
          description: Sender address used for the emails. (from.address)
          "$ref": "#/components/schemas/configNodePropertyString"
        host.prefix:
          description: Deprecated - Use the 'Link Externalizer' service to configure
            the host prefix (host.prefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        notify.onabort:
          description: Enables notification for workflow abort event (notify.onabort)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        notify.oncomplete:
          description: Enables notification for workflow complete event (notify.oncomplete)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        notify.oncontainercomplete:
          description: Enables notification for container workflow complete event
            (notify.oncontainercomplete)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        notify.useronly:
          description: If participant changed from group to user, send to user only.
            (notify.useronly)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties"
    comDayCqWorkflowImplEmailTaskEMailNotificationServiceProperties:
      type: object
      properties:
        notify.onupdate:
          description: Enables notifications on task updates (notify.onupdate)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        notify.oncomplete:
          description: Enables notifications on task completion (notify.oncomplete)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    comDayCrxSecurityTokenImplImplTokenAuthenticationHandlerProperties:
      type: object
      properties:
        path:
          description: Repository path for which this authentication handler should
            be used by Sling. If this is empty, the authentication handler will be
            disabled. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        token.required.attr:
          description: Which request properties to use as required attributes for
            authentication. Default (no value set) is "Client IP Address". (token.required.attr)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        token.alternate.url:
          description: Alternate url for the user name and password submission by
            the form. This name is can be used in addition to the 'j_security_check'
            to avoid any conflict with Application Server's security. (token.alternate.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        token.encapsulated:
          description: By enabling this feature the token verification is achieved
            offline (without repository access) (token.encapsulated)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        skip.token.refresh:
          description: Skip login token refresh for requests going to any of the URIs
            in this list (skip.token.refresh)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCrxSecurityTokenImplTokenCleanupTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCrxSecurityTokenImplTokenCleanupTaskProperties"
    comDayCrxSecurityTokenImplTokenCleanupTaskProperties:
      type: object
      properties:
        enable.token.cleanup.task:
          description: By enabling this feature the Token Cleanup Task is executed
            according to the configured schedule. By default the switch is off, in
            favour of the more effective Oak Token Cleanup (enable.token.cleanup.task)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        scheduler.expression:
          description: Cron expression scheudling this job. Default is hourly 17m23s
            after the hour. See http://www.docjar.com/docs/api/org/quartz/CronTrigger.html
            for a description of the format for this value. (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        batch.size:
          description: Number of nodes to be deleted at once (batch.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    guideLocalizationServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/guideLocalizationServiceProperties"
    guideLocalizationServiceProperties:
      type: object
      properties:
        supportedLocales:
          description: Guide Localization Service.supportedLocales.description (supportedLocales)
          "$ref": "#/components/schemas/configNodePropertyArray"
        Localizable Properties:
          description: Guide Localization Service.Localizable Properties.description
            (Localizable Properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
    MessagingUserComponentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/MessagingUserComponentFactoryProperties"
    MessagingUserComponentFactoryProperties:
      type: object
      properties:
        priority:
          description: priority.description (priority)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheAriesJmxFrameworkStateConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheAriesJmxFrameworkStateConfigProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheAriesJmxFrameworkStateConfigProperties:
      type: object
      properties:
        attributeChangeNotificationEnabled:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheFelixEventadminImplEventAdminInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixEventadminImplEventAdminProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheFelixEventadminImplEventAdminProperties:
      type: object
      properties:
        org.apache.felix.eventadmin.ThreadPoolSize:
          description: The size of the thread pool used for event delivery. The default
            value is 20. Increase in case of a large amount of events. A value of
            less then 2 triggers the default value. If the pool is exhausted, event
            delivery is blocked until a thread becomes available from the pool. Each
            event is delivered in a thread from the pool unless the ignore timeouts
            is configured for the receiving event handler. (org.apache.felix.eventadmin.ThreadPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.eventadmin.AsyncToSyncThreadRatio:
          description: The ratio of asynchronous to synchronous threads in the internal
            thread pool. Ratio must be positive and may be adjusted to represent the
            distribution of post to send operations.  Applications with higher number
            of post operations should have a higher ratio. (org.apache.felix.eventadmin.AsyncToSyncThreadRatio)
          "$ref": "#/components/schemas/configNodePropertyFloat"
        org.apache.felix.eventadmin.Timeout:
          description: The black-listing timeout in milliseconds. The default value
            is 5000. Increase or decrease at own discretion. A value of less then
            100 turns timeouts off. Any other value is the time in milliseconds granted
            to each event handler before it gets blacklisted (org.apache.felix.eventadmin.Timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.eventadmin.RequireTopic:
          description: Are event handlers required to be registered with a topic?
            This is enabled by default. The specification says that event handlers
            must register with a list of topics they are interested in. Disabling
            this setting will enable that handlers without a topic are receiving all
            events (i.e., they are treated the same as with a topic=*). (org.apache.felix.eventadmin.RequireTopic)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.felix.eventadmin.IgnoreTimeout:
          description: Configure event handlers to be called without a timeout. If
            a timeout is configured by default all event handlers are called using
            the timeout. For performance optimization it is possible to configure
            event handlers where the timeout handling is not used - this reduces the
            thread usage from the thread pools as the timout handling requires an
            additional thread to call the event handler. However, the application
            should work without this configuration property. It is a pure optimization!
            The value is a list of strings. If a string ends with a dot, all handlers
            in exactly this package are ignored. If the string ends with a star, all
            handlers in this package and all subpackages are ignored. If the string
            neither ends with a dot nor with a star, this is assumed to define an
            exact class name. (org.apache.felix.eventadmin.IgnoreTimeout)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.eventadmin.IgnoreTopic:
          description: For performance optimization it is possible to configure topics
            which are ignored by the event admin implementation. In this case, a event
            is not delivered to registered event handlers. The value is a list of
            strings (separated by comma). If a single value ends with a dot, all topics
            in exactly this package are ignored. If a single value ends with a star,
            all topics in this package and all sub packages are ignored. If a single
            value neither ends with a dot nor with a start, this is assumed to define
            an exact topic. A single star can be used to disable delivery completely.
            (org.apache.felix.eventadmin.IgnoreTopic)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheFelixHttpInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixHttpProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheFelixHttpProperties:
      type: object
      properties:
        org.apache.felix.http.host:
          description: IP Address or Host Name of the interface to which HTTP and
            HTTPS bind. The default is "0.0.0.0" indicating all interfaces. (org.apache.felix.http.host)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.http.enable:
          description: Whether or not HTTP is enabled. Defaults to true thus HTTP
            enabled. (org.apache.felix.http.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.osgi.service.http.port:
          description: Port to listen on for HTTP requests. Defaults to 8080. (org.osgi.service.http.port)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.timeout:
          description: Time limit for reaching an timeout specified in milliseconds.
            This property applies to both HTTP and HTTP connections. Defaults to 60
            seconds. (org.apache.felix.http.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.https.enable:
          description: Whether or not HTTPS is enabled. Defaults to false thus HTTPS
            disabled. (org.apache.felix.https.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.osgi.service.http.port.secure:
          description: Port to listen on for HTTPS requests. Defaults to 443. (org.osgi.service.http.port.secure)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.https.keystore:
          description: Absolute Path to the Keystore to use for HTTPS. Only used if
            HTTPS is enabled in which case this property is required. (org.apache.felix.https.keystore)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.https.keystore.password:
          description: Password to access the Keystore. Only used if HTTPS is enabled.
            (org.apache.felix.https.keystore.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.https.keystore.key.password:
          description: Password to unlock the secret key from the Keystore. Only used
            if HTTPS is enabled. (org.apache.felix.https.keystore.key.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.https.truststore:
          description: Absolute Path to the Truststore to use for HTTPS. Only used
            if HTTPS is enabled. (org.apache.felix.https.truststore)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.https.truststore.password:
          description: Password to access the Truststore. Only used if HTTPS is enabled.
            (org.apache.felix.https.truststore.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.https.clientcertificate:
          description: Requirement for the Client to provide a valid certificate.
            Defaults to none. (org.apache.felix.https.clientcertificate)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        org.apache.felix.http.context_path:
          description: The Servlet Context Path to use for the Http Service. If this
            property is not configured it defaults to "/". This must be a valid path
            starting with a slash and not ending with a slash (unless it is the root
            context). (org.apache.felix.http.context_path)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.http.mbeans:
          description: Whether or not to use register JMX MBeans from the servlet
            container (Jetty). If this is enabled Jetty Request and Connector statistics
            are also enabled. The default is to not enable JMX. (org.apache.felix.http.mbeans)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.felix.http.session.timeout:
          description: Default lifetime of an HTTP session specified in a whole number
            of minutes. If the timeout is 0 or less, sessions will by default never
            timeout. The default is 0. (org.apache.felix.http.session.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.jetty.threadpool.max:
          description: Maximum number of jetty threads. Using the default -1 uses
            Jetty's default (200). (org.apache.felix.http.jetty.threadpool.max)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.jetty.acceptors:
          description: Number of acceptor threads to use, or -1 for a default value.
            Acceptors accept new TCP/IP connections. If 0, then the selector threads
            are used to accept connections. (org.apache.felix.http.jetty.acceptors)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.jetty.selectors:
          description: Number of selector threads, or <=0 for a default value. Selectors
            notice and schedule established connection that can make IO progress.
            (org.apache.felix.http.jetty.selectors)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.jetty.headerBufferSize:
          description: Size of the buffer for request and response headers. Default
            is 16KB. (org.apache.felix.http.jetty.headerBufferSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.jetty.requestBufferSize:
          description: Size of the buffer for requests not fitting the header buffer.
            Default is 8KB. (org.apache.felix.http.jetty.requestBufferSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.jetty.responseBufferSize:
          description: Size of the buffer for responses. Default is 24KB. (org.apache.felix.http.jetty.responseBufferSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.jetty.maxFormSize:
          description: Size of Body for submitted form content. Default is 200KB.
            (org.apache.felix.http.jetty.maxFormSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.path_exclusions:
          description: Contains a list of context path prefixes. If a Web Application
            Bundle is started with a context path matching any of these prefixes,
            it will not be deployed in the servlet container. (org.apache.felix.http.path_exclusions)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.https.jetty.ciphersuites.excluded:
          description: List of cipher suites that should be excluded. Default is none.
            (org.apache.felix.https.jetty.ciphersuites.excluded)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.https.jetty.ciphersuites.included:
          description: List of cipher suites that should be included. Default is none.
            (org.apache.felix.https.jetty.ciphersuites.included)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.http.jetty.sendServerHeader:
          description: If enabled, the server header is sent. (org.apache.felix.http.jetty.sendServerHeader)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.felix.https.jetty.protocols.included:
          description: List of SSL protocols to include by default. Protocols may
            be any supported by the Java platform such as SSLv2Hello, SSLv3, TLSv1,
            TLSv1.1, or TLSv1.2. Any listed protocol not supported is silently ignored.
            Default is none assuming to use any protocol enabled and supported on
            the platform. (org.apache.felix.https.jetty.protocols.included)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.https.jetty.protocols.excluded:
          description: List of SSL protocols to exclude. This property further restricts
            the enabled protocols by explicitly disabling. Any protocol listed in
            both this property and the Included protocols property is excluded. Default
            is none such as to accept all protocols enabled on platform or explicitly
            listed by the Included protocols property. (org.apache.felix.https.jetty.protocols.excluded)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.proxy.load.balancer.connection.enable:
          description: Whether or not the Proxy/Load Balancer Connection is enabled.
            Defaults to false thus disabled. (org.apache.felix.proxy.load.balancer.connection.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.felix.https.jetty.renegotiateAllowed:
          description: Whether TLS renegotiation is allowed (true by default) (org.apache.felix.https.jetty.renegotiateAllowed)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.felix.https.jetty.session.cookie.httpOnly:
          description: Session Cookie httpOnly (true by default) (org.apache.felix.https.jetty.session.cookie.httpOnly)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.felix.https.jetty.session.cookie.secure:
          description: Session Cookie secure (false by default) (org.apache.felix.https.jetty.session.cookie.secure)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.eclipse.jetty.servlet.SessionIdPathParameterName:
          description: Defaults to jsessionid. If set to null or "none" no URL rewriting
            will be done. (org.eclipse.jetty.servlet.SessionIdPathParameterName)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding:
          description: If true, Jetty will add JSESSIONID parameter even when encoding
            external urls with calls to encodeURL() (true by default) (org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.eclipse.jetty.servlet.SessionCookie:
          description: Session Cookie Name (org.eclipse.jetty.servlet.SessionCookie)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.eclipse.jetty.servlet.SessionDomain:
          description: If this property is set, then it is used as the domain for
            session cookies. If it is not set, then no domain is specified for the
            session cookie. Default is none. (org.eclipse.jetty.servlet.SessionDomain)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.eclipse.jetty.servlet.SessionPath:
          description: If this property is set, then it is used as the path for the
            session cookie. Default is context path. (org.eclipse.jetty.servlet.SessionPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.eclipse.jetty.servlet.MaxAge:
          description: Interval of session scavenging in seconds. Default is 600 (org.eclipse.jetty.servlet.MaxAge)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.http.name:
          description: HTTP Service Name used in service filter to target specific
            HTTP instance. Default is null. (org.apache.felix.http.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.felix.jetty.gziphandler.enable:
          description: Whether the server should use a server-wide gzip handler. Default
            is false. (org.apache.felix.jetty.gziphandler.enable)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.felix.jetty.gzip.minGzipSize:
          description: The minimum response size to trigger dynamic compression. Default
            is 16. (org.apache.felix.jetty.gzip.minGzipSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.jetty.gzip.compressionLevel:
          description: The compression level to use. Default is -1. (org.apache.felix.jetty.gzip.compressionLevel)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.jetty.gzip.inflateBufferSize:
          description: The size in bytes of the buffer to inflate compressed request,
            or <= 0 for no inflation. Default is -1. (org.apache.felix.jetty.gzip.inflateBufferSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.felix.jetty.gzip.syncFlush:
          description: True if Deflater#SYNC_FLUSH should be used, else Deflater#NO_FLUSH
            will be used. Default is false. (org.apache.felix.jetty.gzip.syncFlush)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.felix.jetty.gzip.excludedUserAgents:
          description: The regular expressions matching additional user agents to
            exclude. Default is none. (org.apache.felix.jetty.gzip.excludedUserAgents)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.jetty.gzip.includedMethods:
          description: The additional http methods to include in compression. Default
            is none. (org.apache.felix.jetty.gzip.includedMethods)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.jetty.gzip.excludedMethods:
          description: The additional http methods to exclude in compression. Default
            is none. (org.apache.felix.jetty.gzip.excludedMethods)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.jetty.gzip.includedPaths:
          description: The additional path specs to include. Inclusion takes precedence
            over exclusion. Default is none. (org.apache.felix.jetty.gzip.includedPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.jetty.gzip.excludedPaths:
          description: The additional path specs to exclude. Inclusion takes precedence
            over exclusion. Default is none. (org.apache.felix.jetty.gzip.excludedPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.jetty.gzip.includedMimeTypes:
          description: The included mime types. Inclusion takes precedence over exclusion.
            Default is none. (org.apache.felix.jetty.gzip.includedMimeTypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.jetty.gzip.excludedMimeTypes:
          description: The excluded mime types. Inclusion takes precedence over exclusion.
            Default is none. (org.apache.felix.jetty.gzip.excludedMimeTypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.felix.http.session.invalidate:
          description: If this property is set, the container session is automatically
            validated. (org.apache.felix.http.session.invalidate)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.felix.http.session.uniqueid:
          description: If this property is set, each http context gets a unique session
            id (derived from the container session). (org.apache.felix.http.session.uniqueid)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheFelixHttpSslfilterSslFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixHttpSslfilterSslFilterProperties"
    orgApacheFelixHttpSslfilterSslFilterProperties:
      type: object
      properties:
        ssl-forward.header:
          description: 'HTTP Request header name that indicates a request is a SSL
            request terminated at a proxy between the client and the originating server.
            The default value is ''X-Forwarded-SSL'' as is customarily used in the
            wild. Other commonly used names are: ''X-Forwarded-Proto'' (Amazon ELB),
            ''X-Forwarded-Protocol'' (alternative), and ''Front-End-Https'' (Microsoft
            IIS). (ssl-forward.header)'
          "$ref": "#/components/schemas/configNodePropertyString"
        ssl-forward.value:
          description: HTTP Request header value that indicates a request is a SSL
            request terminated at a proxy. The default value is 'on'. Another commonly
            used value is 'https'. (ssl-forward.value)
          "$ref": "#/components/schemas/configNodePropertyString"
        ssl-forward-cert.header:
          description: HTTP Request header name that contains the client certificate
            forwarded by a proxy. The default value is 'X-Forwarded-SSL-Certificate'.
            Another commonly used value is 'X-Forwarded-SSL-Client-Cert'. (ssl-forward-cert.header)
          "$ref": "#/components/schemas/configNodePropertyString"
        rewrite.absolute.urls:
          description: If enabled, absolute URLs passed to either sendRedirect or
            by setting the location header are rewritten as well. (rewrite.absolute.urls)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheFelixJaasConfigurationSpiInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixJaasConfigurationSpiProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheFelixJaasConfigurationSpiProperties:
      type: object
      properties:
        jaas.defaultRealmName:
          description: Default realm name to use if no realm is explicitly defined
            for LoginModule (jaas.defaultRealmName)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.configProviderName:
          description: Name of the provider used to register the OSGi based configuration
            provider (jaas.configProviderName)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.globalConfigPolicy:
          description: 'Policy to manage global configuration. (1) Default: Global
            configuration is not modified. (2). Replace Global Configuration: Global
            configuration is replaced with OSGi based configuration (3). Proxy Global
            Configuration: Global configuration would be replaced with proxy configuration.
            The proxy would check with OSGi based configuration. If no config is found
            it would look in default global configuration (jaas.globalConfigPolicy)'
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheFelixScrScrServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixScrScrServiceProperties"
    orgApacheFelixScrScrServiceProperties:
      type: object
      properties:
        ds.loglevel:
          description: Allows limiting the amount of logging information sent to the
            OSGi LogService. Supported values are DEBUG, INFO, WARN, and ERROR. This
            property is not used if a R7 LogService implementation is available as
            the log level can be configured through that service. Default is ERROR.
            (ds.loglevel)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        ds.factory.enabled:
          description: Whether or not to enable the support for creating Factory Component
            instances based on factory configuration. This is an Apache Felix SCR
            specific extension, explicitly not supported by the Declarative Services
            specification. Reliance on this feature prevent the component from being
            used with other Declarative Services implementations. The default value
            is false to disable this feature. (ds.factory.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        ds.delayed.keepInstances:
          description: Whether or not to keep instances of delayed components once
            they are not referred to any more. The Declarative Services specifications
            suggests that instances of delayed components are disposed off if there
            is not used any longer. Setting this flag causes the components to not
            be disposed off and thus prevent them from being constantly recreated
            if often used. Examples of such components may be EventHandler services.
            The default is to dispose of unused components. (ds.delayed.keepInstances)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        ds.lock.timeout.milliseconds:
          description: How long a lock is held before releasing due to suspected deadlock
            (ds.lock.timeout.milliseconds)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        ds.stop.timeout.milliseconds:
          description: How long stopping a bundle is waited for before continuing
            due to suspected deadlock (ds.stop.timeout.milliseconds)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        ds.global.extender:
          description: Whether to extend all bundles whether or not visible to this
            bundle. (ds.global.extender)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheFelixSystemreadyImplComponentsCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplComponentsCheckProperties"
    orgApacheFelixSystemreadyImplComponentsCheckProperties:
      type: object
      properties:
        components.list:
          description: The components that need to come up before this check reports
            GREEN (components.list)
          "$ref": "#/components/schemas/configNodePropertyArray"
        type:
          description: 
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheFelixSystemreadyImplFrameworkStartCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplFrameworkStartCheckProperties"
    orgApacheFelixSystemreadyImplFrameworkStartCheckProperties:
      type: object
      properties:
        timeout:
          description: Number of seconds after which this is considered a failure
            (timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        target.start.level:
          description: The target start level at which the Framework is considered
            started. If zero or negative, it will default to the default bundle start
            level (target.start.level)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        target.start.level.prop.name:
          description: The name of the OSGi property which holds the "Target start
            level". It takes precedence over the target.start.level config. If the
            startlevel cannot be derived from the osgi property, this config attribute
            is ignored. (target.start.level.prop.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        type:
          description: 
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheFelixSystemreadyImplServicesCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplServicesCheckProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheFelixSystemreadyImplServicesCheckProperties:
      type: object
      properties:
        services.list:
          description: The services that need to be registered for the check to pass
            (services.list)
          "$ref": "#/components/schemas/configNodePropertyArray"
        type:
          description: 
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheFelixSystemreadyImplServletSystemAliveServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplServletSystemAliveServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheFelixSystemreadyImplServletSystemAliveServletProperties:
      type: object
      properties:
        osgi.http.whiteboard.servlet.pattern:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        osgi.http.whiteboard.context.select:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheFelixSystemreadyImplServletSystemReadyServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixSystemreadyImplServletSystemReadyServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheFelixSystemreadyImplServletSystemReadyServletProperties:
      type: object
      properties:
        osgi.http.whiteboard.servlet.pattern:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
        osgi.http.whiteboard.context.select:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheFelixSystemreadySystemReadyMonitorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixSystemreadySystemReadyMonitorProperties"
    orgApacheFelixSystemreadySystemReadyMonitorProperties:
      type: object
      properties:
        poll.interval:
          description: Number of milliseconds between subsequents updates of all the
            checks (poll.interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheFelixWebconsoleInternalServletOsgiManagerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixWebconsoleInternalServletOsgiManagerProperties"
    orgApacheFelixWebconsoleInternalServletOsgiManagerProperties:
      type: object
      properties:
        manager.root:
          description: The root path to the OSGi Management Console. (manager.root)
          "$ref": "#/components/schemas/configNodePropertyString"
        http.service.filter:
          description: The Http Service Selector is an OSGi filter used to select
            the Http Service towhich the Web Console binds. The value of this property
            (if not empty) iscombined the object class selection term to get the actual
            service selectionfilter like (&(objectClass=org.osgi.service.http.HttpService)(selector)).
            Thisproperty must not have leading an trailing parentheses. For example,
            to bindto the service with service ID 15 set the selector to 'service.id=15'
            (withoutthe quotes). By default (if this property is not set or set to
            an emptystring) the Web Console binds with any Http Service available.
            (http.service.filter)
          "$ref": "#/components/schemas/configNodePropertyString"
        default.render:
          description: The name of the default configuration page when invoking the
            OSGi Management console. (default.render)
          "$ref": "#/components/schemas/configNodePropertyString"
        realm:
          description: The name of the HTTP Authentication Realm. (realm)
          "$ref": "#/components/schemas/configNodePropertyString"
        username:
          description: The name of the user allowed to access the OSGi Management
            Console. To disable authentication clear this value. This property is
            ignored if a WebConsoleSecurityProvider is used for authentication. (username)
          "$ref": "#/components/schemas/configNodePropertyString"
        password:
          description: The password for the user allowed to access the OSGi Management
            Console. This property is ignored if a WebConsoleSecurityProvider is used
            for authentication. (password)
          "$ref": "#/components/schemas/configNodePropertyString"
        category:
          description: The default category (menu label) to be used for plugins not
            registered with a felix.webconsole.category service property or overwriting
            the AbstractWebConsole.getCategory() method. The default value is "Main".
            (category)
          "$ref": "#/components/schemas/configNodePropertyString"
        locale:
          description: If set, this locale forces the localization to use this locale
            instead of the one requested by the web browser (locale)
          "$ref": "#/components/schemas/configNodePropertyString"
        loglevel:
          description: Logging Level (loglevel)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        plugins:
          description: Select active plugins (plugins)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheFelixWebconsolePluginsEventInternalPluginServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixWebconsolePluginsEventInternalPluginServletProperties"
    orgApacheFelixWebconsolePluginsEventInternalPluginServletProperties:
      type: object
      properties:
        max.size:
          description: The maximum number of events displayed in the plugin. (max.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageConfiguratorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageConfiguratorProperties"
    orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageConfiguratorProperties:
      type: object
      properties:
        felix.memoryusage.dump.threshold:
          description: Threshold at which to automatically create a memory dump as
            a percentage in the range 50 to 99 or zero to disable automatic dump creation.
            (felix.memoryusage.dump.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        felix.memoryusage.dump.interval:
          description: The minimum interval between two consecutive memory dumps being
            taken in seconds. This property allows the limitation of the number of
            memory dumps being taken. The default value for the interval is 6 hours.
            This means that a memory threshold event is ignored unless the last memory
            dump has been taken at least 6 hours earlier. This property allows limiting
            the number of memory dumps in case memory consumption is oscillating around
            the threshold point. The property must be an integer value or be parseable
            to an integer value. This should be a positive value or zero to force
            each memory threshold event to cause a memory dump (discouraged). (felix.memoryusage.dump.interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        felix.memoryusage.dump.location:
          description: The filesystem location where heap dumps are stored. If this
            is null or empty (the default) the dumps are stored in /opt/workspace/aem-workspace/workspaces/aem65/author/crx-quickstart/launchpad/felix/bundle59/data/dumps
            (felix.memoryusage.dump.location)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderServiceProperties"
    orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderServiceProperties:
      type: object
      properties:
        dir:
          description: Local file system path where extracted text is stored in files.
            (dir)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreProperties:
      type: object
      properties:
        path:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties"
    orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceProperties:
      type: object
      properties:
        mongouri:
          description: Mongo connection URI used to connect to Mongo. Refer to http://docs.mongodb.org/manual/reference/connection-string/
            for details. Note that this value can be overridden via framework property
            'oak.mongo.uri' (mongouri)
          "$ref": "#/components/schemas/configNodePropertyString"
        db:
          description: Name of the database in Mongo. Note that this value can be
            overridden via framework property 'oak.mongo.db' (db)
          "$ref": "#/components/schemas/configNodePropertyString"
        socketKeepAlive:
          description: Whether socket keep-alive should be enabled for connections
            to MongoDB. Note that this value can be overridden via framework property
            'oak.mongo.socketKeepAlive' (socketKeepAlive)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cache:
          description: Cache size in MB. This is distributed among various caches
            used in DocumentNodeStore (cache)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        nodeCachePercentage:
          description: Percentage of cache to be allocated towards Node cache (nodeCachePercentage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        prevDocCachePercentage:
          description: Percentage of cache to be allocated towards Previous Document
            cache (prevDocCachePercentage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        childrenCachePercentage:
          description: Percentage of cache to be allocated towards Children cache
            (childrenCachePercentage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        diffCachePercentage:
          description: Percentage of cache to be allocated towards Diff cache (diffCachePercentage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cacheSegmentCount:
          description: The number of segments in the LIRS cache (default 16, a higher
            count means higher concurrency but slightly lower cache hit rate) (cacheSegmentCount)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cacheStackMoveDistance:
          description: The delay to move entries to the head of the queue in the LIRS
            cache (default 16, a higher value means higher concurrency but slightly
            lower cache hit rate) (cacheStackMoveDistance)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        blobCacheSize:
          description: Cache size to store blobs in memory. Used only with default
            BlobStore (as per DocumentStore type) (blobCacheSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        persistentCache:
          description: Configuration for persistent cache. Refer to http://jackrabbit.apache.org/oak/docs/nodestore/persistent-cache.html
            for various options (persistentCache)
          "$ref": "#/components/schemas/configNodePropertyString"
        journalCache:
          description: Configuration for journal cache. Refer to http://jackrabbit.apache.org/oak/docs/nodestore/persistent-cache.html
            for various options (journalCache)
          "$ref": "#/components/schemas/configNodePropertyString"
        customBlobStore:
          description: Boolean value indicating that a custom BlobStore is to be used.
            By default, for MongoDB, MongoBlobStore is used; for RDB, RDBBlobStore
            is used. (customBlobStore)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        journalGCInterval:
          description: Long value indicating interval (in milliseconds) with which
            the journal (for external changes) is cleaned up. Default is 300000 (journalGCInterval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        journalGCMaxAge:
          description: Long value indicating max age (in milliseconds) that journal
            (for external changes) entries are kept (older ones are candidates for
            gc). Default is 86400000 (journalGCMaxAge)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        prefetchExternalChanges:
          description: Boolean value indicating if external changes should be pre-fetched
            in a background thread. (prefetchExternalChanges)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        role:
          description: Property indicating that this component will not register as
            a NodeStore but as a NodeStoreProvider with given role (role)
          "$ref": "#/components/schemas/configNodePropertyString"
        versionGcMaxAgeInSecs:
          description: Version Garbage Collector (GC) logic will only consider those
            deleted for GC which are not accessed recently (currentTime - lastModifiedTime
            > versionGcMaxAgeInSecs). For example as per default only those document
            which have been *marked* deleted 24 hrs ago will be considered for GC.
            This also applies how older revision of live document are GC. (versionGcMaxAgeInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        versionGCExpression:
          description: 'A cron expression that defines when the Version GC is scheduled.
            If this configuration entry is left empty, the default behaviour is to
            schedule a run every five seconds (also known as Continuous Revision Garbage
            Collection). Otherwise, the schedule can be configured with a cron expression.
            E.g. the following expression triggers a GC run every night at 2 AM: ''0
            0 2 * * ?''. (versionGCExpression)'
          "$ref": "#/components/schemas/configNodePropertyString"
        versionGCTimeLimitInSecs:
          description: A Version GC run is canceled after this number of seconds.
            The default value is 10800 seconds. (versionGCTimeLimitInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        blobGcMaxAgeInSecs:
          description: Blob Garbage Collector (GC) logic will only consider those
            blobs for GC which are not accessed recently (currentTime - lastModifiedTime
            > blobGcMaxAgeInSecs). For example as per default only those blobs which
            have been created 24 hrs ago will be considered for GC (blobGcMaxAgeInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        blobTrackSnapshotIntervalInSecs:
          description: This is the default interval in which the snapshots of locally
            tracked blob ids willbe taken and synchronized with the blob store. This
            should be configured to be less than the frequency of blob GC so that
            deletions during blob GC can be accounted for in the next GC execution.
            (blobTrackSnapshotIntervalInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        repository.home:
          description: Root directory for local tracking of blob ids. This service
            will first lookup the 'repository.home' framework property and then a
            component context property with the same name. If none of them is defined,
            a sub directory 'repository' relative to the current working directory
            is used. (repository.home)
          "$ref": "#/components/schemas/configNodePropertyString"
        maxReplicationLagInSecs:
          description: Value in seconds. Determines the duration beyond which it can
            be safely assumed that the state on the secondaries is consistent with
            the primary, and it is safe to read from them (maxReplicationLagInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        documentStoreType:
          description: Type of DocumentStore to use for persistence. Defaults to MONGO
            (documentStoreType)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        bundlingDisabled:
          description: Boolean value indicating that Node bundling is disabled (bundlingDisabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        updateLimit:
          description: Number of content updates that need to happen before the updates
            are automatically purged to the private branch. (updateLimit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        persistentCacheIncludes:
          description: Paths which should be cached in persistent cache (persistentCacheIncludes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        leaseCheckMode:
          description: The lease check mode. 'STRICT' is the default and will stop
            the DocumentNodeStore as soon as the lease expires. 'LENIENT' will give
            the background lease update a chance to renew the lease even when the
            lease expired. This mode is only recommended for development, e.g. when
            debugging an application and the lease may expire when the JVM is stopped
            at a breakpoint. (leaseCheckMode)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePresetInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePresetProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePresetProperties:
      type: object
      properties:
        persistentCacheIncludes:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacheServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacheServiceProperties"
    orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacheServiceProperties:
      type: object
      properties:
        includedPaths:
          description: List of paths which are to be included in the secondary store
            (includedPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        enableAsyncObserver:
          description: Enable async observation processing (enableAsyncObserver)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        observerQueueSize:
          description: Observer queue size. Used if 'enableAsyncObserver' is set to
            true (observerQueueSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceProperties:
      type: object
      properties:
        asyncConfigs:
          description: Async indexer configs in the form of <name>:<interval in secs>
            e.g. "async:5" (asyncConfigs)
          "$ref": "#/components/schemas/configNodePropertyArray"
        leaseTimeOutMinutes:
          description: Lease timeout in minutes. AsyncIndexer would wait for this
            timeout period before breaking async indexer lease (leaseTimeOutMinutes)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        failingIndexTimeoutSeconds:
          description: Time interval in seconds after which a failing index is considered
            as corrupted and ignored from further indexing untill reindex. To disable
            this set it to 0 (failingIndexTimeoutSeconds)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        errorWarnIntervalSeconds:
          description: Time interval in seconds after which a warning log would be
            logged for skipped indexes. This is done to avoid flooding the log in
            case of corrupted index. (errorWarnIntervalSeconds)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServiceProperties:
      type: object
      properties:
        disabled:
          description: If true, this component is disabled. (disabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        debug:
          description: Enables debug logging in Lucene. After enabling this actual
            logging can be controlled via changing log level for category 'oak.lucene'
            to debug (debug)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        localIndexDir:
          description: Local file system path where Lucene indexes would be copied
            when CopyOnRead is enabled. If not specified then indexes would be stored
            under 'index' dir under Repository Home (localIndexDir)
          "$ref": "#/components/schemas/configNodePropertyString"
        enableOpenIndexAsync:
          description: Enable opening of indexes in asynchronous mode (enableOpenIndexAsync)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        threadPoolSize:
          description: Thread pool size used to perform various asynchronous task
            in Oak Lucene (threadPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        prefetchIndexFiles:
          description: Prefetch the index files when CopyOnRead is enabled. When enabled
            all new Lucene index files would be copied locally before the index is
            made available to QueryEngine (prefetchIndexFiles)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        extractedTextCacheSizeInMB:
          description: Cache size in MB for caching extracted text for some time.
            When set to 0 then cache would be disabled (extractedTextCacheSizeInMB)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        extractedTextCacheExpiryInSecs:
          description: Time in seconds for which the extracted text would be cached
            in memory (extractedTextCacheExpiryInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        alwaysUsePreExtractedCache:
          description: By default pre extracted text cache would only be used for
            reindex case. If this setting is enabled then it would also be used in
            normal incremental indexing (alwaysUsePreExtractedCache)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        booleanClauseLimit:
          description: Limit for number of boolean clauses generated for handling
            of OR query (booleanClauseLimit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        enableHybridIndexing:
          description: When enabled Lucene NRT Indexing mode would be enabled (enableHybridIndexing)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        hybridQueueSize:
          description: Size of in memory queue used for storing Lucene Documents which
            need to be added to local index (hybridQueueSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        disableStoredIndexDefinition:
          description: By default index definitions would be stored at time of reindexing
            to ensure that future modifications to it are not effective untill index
            is reindex. Set this to true would disable this feature (disableStoredIndexDefinition)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        deletedBlobsCollectionEnabled:
          description: Index blobs are explicitly unique and don't require mark-sweep
            type collection.This is used to enable the feature. Cleanup implies purging
            index blobs marked as deleted earlier during some indexing cycle. (deletedBlobsCollectionEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        propIndexCleanerIntervalInSecs:
          description: Cleaner interval time (in seconds) for synchronous property
            indexes configured as part of lucene indexes (propIndexCleanerIntervalInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        enableSingleBlobIndexFiles:
          description: Index files can be written as single blobs as chunked into
            smaller blobs. Enable this to write single blob per index file. This would
            reduce number of blobs in the data store. (enableSingleBlobIndexFiles)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerConfigurationProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerConfigurationProviderProperties"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerConfigurationProviderProperties:
      type: object
      properties:
        solr.home.path:
          description: Description for solr.home.path (solr.home.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        solr.core.name:
          description: Description for solr.core.name (solr.core.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersObserverServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersObserverServiceProperties"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersObserverServiceProperties:
      type: object
      properties:
        enabled:
          description: enable persisted configuration observer (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProviderServiceProperties"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationProviderServiceProperties:
      type: object
      properties:
        path.desc.field:
          description: Description for path.desc.field (path.desc.field)
          "$ref": "#/components/schemas/configNodePropertyString"
        path.child.field:
          description: Description for path.child.field (path.child.field)
          "$ref": "#/components/schemas/configNodePropertyString"
        path.parent.field:
          description: Description for path.parent.field (path.parent.field)
          "$ref": "#/components/schemas/configNodePropertyString"
        path.exact.field:
          description: Description for path.exact.field (path.exact.field)
          "$ref": "#/components/schemas/configNodePropertyString"
        catch.all.field:
          description: Description for catch.all.field (catch.all.field)
          "$ref": "#/components/schemas/configNodePropertyString"
        collapsed.path.field:
          description: Description for collapsed.path.field (collapsed.path.field)
          "$ref": "#/components/schemas/configNodePropertyString"
        path.depth.field:
          description: Description for path.depth.field (path.depth.field)
          "$ref": "#/components/schemas/configNodePropertyString"
        commit.policy:
          description: Description for commit.policy (commit.policy)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        rows:
          description: Description for rows (rows)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        path.restrictions:
          description: Description for path.restrictions (path.restrictions)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        property.restrictions:
          description: Description for property.restrictions (property.restrictions)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        primarytypes.restrictions:
          description: Description for primarytypes.restrictions (primarytypes.restrictions)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        ignored.properties:
          description: Description for ignored.properties (ignored.properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
        used.properties:
          description: Description for used.properties (used.properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
        type.mappings:
          description: each item should be in the form TypeString=FieldName (e.g.
            STRING=text_general) (type.mappings)
          "$ref": "#/components/schemas/configNodePropertyArray"
        property.mappings:
          description: each item should be in the form PropertyName=FieldName (e.g.
            jcr:title=text_en) (property.mappings)
          "$ref": "#/components/schemas/configNodePropertyArray"
        collapse.jcrcontent.nodes:
          description: Description for collapse.jcrcontent.nodes (collapse.jcrcontent.nodes)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfigurationProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfigurationProviderProperties"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfigurationProviderProperties:
      type: object
      properties:
        solr.http.url:
          description: Description for solr.http.url (solr.http.url)
          "$ref": "#/components/schemas/configNodePropertyString"
        solr.zk.host:
          description: Description for solr.zk.host (solr.zk.host)
          "$ref": "#/components/schemas/configNodePropertyString"
        solr.collection:
          description: Description for solr.collection (solr.collection)
          "$ref": "#/components/schemas/configNodePropertyString"
        solr.socket.timeout:
          description: Description for solr.socket.timeout (solr.socket.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        solr.connection.timeout:
          description: Description for solr.connection.timeout (solr.connection.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        solr.shards.no:
          description: Description for solr.shards.no (solr.shards.no)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        solr.replication.factor:
          description: Description for solr.replication.factor (solr.replication.factor)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        solr.conf.dir:
          description: Description for solr.conf.dir (solr.conf.dir)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProviderServiceProperties"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProviderServiceProperties:
      type: object
      properties:
        query.aggregation:
          description: enable query time aggregation for Solr index (query.aggregation)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderServiceProperties"
    orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderServiceProperties:
      type: object
      properties:
        server.type:
          description: Description for server.type (server.type)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryProperties"
    orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryProperties:
      type: object
      properties:
        providerType:
          description: 
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakPluginsObservationChangeCollectorProviderProperties:
      type: object
      properties:
        maxItems:
          description: Integer value indicating maximum number of individual items
            of changes - such as property, nodeType, node name, path - to be collected.
            If there are more changes, the collection is considered failed and marked
            as such. Default is 50 (maxItems)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxPathDepth:
          description: Integer value indicating maximum depth of paths to collect.
            Paths deeper than this will not be individually reported, and instead
            a path at this max depth will be added. Note that this doesn't affect
            any other collected item such as property, nodeType - ie those will all
            be collected irrespective of this config param.Default is 9 (maxPathDepth)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        enabled:
          description: Whether this validator is enabled. If disabled no ChangeSet
            will be generated. Default is true (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakQueryQueryEngineSettingsServiceProperties"
    orgApacheJackrabbitOakQueryQueryEngineSettingsServiceProperties:
      type: object
      properties:
        queryLimitInMemory:
          description: Maximum number of entries that can be held in memory while
            evaluating any query (queryLimitInMemory)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queryLimitReads:
          description: Maximum number of results which can be read by any query (queryLimitReads)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queryFailTraversal:
          description: If enabled any query execution which results in traversal would
            fail. (queryFailTraversal)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        fastQuerySize:
          description: 'Whether the query result size (QueryResult.getSize()) should
            return an estimation for queries that return many nodes. The estimate
            will be larger or equal the actual result size, as it includes unindexed
            properties and nodes that are not accessible. If disabled, for such cases
            -1 is returned. Note: even if enabled, getSize may still return -1 if
            the index used does not support the feature. (fastQuerySize)'
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigurationImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigurationImplProperties"
    orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigurationImplProperties:
      type: object
      properties:
        org.apache.jackrabbit.oak.authentication.appName:
          description: Application named used for JAAS authentication (org.apache.jackrabbit.oak.authentication.appName)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.jackrabbit.oak.authentication.configSpiName:
          description: Name of JAAS Configuration Spi. This needs to be set to JAAS
            config provider name if JAAS authentication is managed by Felix JAAS Support
            with its Global Configuration Policy set to 'default'. (org.apache.jackrabbit.oak.authentication.configSpiName)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigurationImplProperties:
      type: object
      properties:
        tokenExpiration:
          description: Expiration time of login tokens in ms. (tokenExpiration)
          "$ref": "#/components/schemas/configNodePropertyString"
        tokenLength:
          description: Length of the generated token. (tokenLength)
          "$ref": "#/components/schemas/configNodePropertyString"
        tokenRefresh:
          description: Enable/disable refresh of login tokens (i.e. resetting the
            expiration time). (tokenRefresh)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        tokenCleanupThreshold:
          description: 'Setting this option to a value > 0 will trigger a cleanup
            upon token creation: if the number of existing token matches/exceeds the
            configured value an attempt is made to removed expired tokens. (tokenCleanupThreshold)'
          "$ref": "#/components/schemas/configNodePropertyInteger"
        passwordHashAlgorithm:
          description: Name of the algorithm to hash the token. (passwordHashAlgorithm)
          "$ref": "#/components/schemas/configNodePropertyString"
        passwordHashIterations:
          description: Number of iterations used to hash the token. (passwordHashIterations)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        passwordSaltSize:
          description: Size of the salt used to generate the hash. (passwordSaltSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurationImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurationImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurationImplProperties:
      type: object
      properties:
        permissionsJr2:
          description: Enforce backwards compatible permission validation with respect
            to the configurable options. (permissionsJr2)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        importBehavior:
          description: Behavior for access control related items upon XML import.
            (importBehavior)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        readPaths:
          description: Enable full read access to regular nodes and properties at
            the specified paths irrespective of other policies that may take effective.
            (readPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        administrativePrincipals:
          description: Allows to specify principals that should be granted full permissions
            on the complete repository content. (administrativePrincipals)
          "$ref": "#/components/schemas/configNodePropertyArray"
        configurationRanking:
          description: Ranking of this configuration in a setup with multiple authorization
            configurations. (configurationRanking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrationProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrationProperties:
      type: object
      properties:
        requiredServicePids:
          description: The SecurityProvider will not register itself unless the services
            identified by the following service pids or the oak.security.name properties
            are registered first. The class name is identified by checking the service.pid
            property. If that property does not exist, the oak.security.name property
            is used as a fallback.Only implementations of the following interfaces
            are checked :AuthorizationConfiguration, PrincipalConfiguration, TokenConfiguration,
            AuthorizableActionProvider, RestrictionProvider and UserAuthenticationFactory.
            (requiredServicePids)
          "$ref": "#/components/schemas/configNodePropertyArray"
        authorizationCompositionType:
          description: The Composite Authorization model uses this flag to determine
            what type of logic to apply to the existing providers (default value is
            AND). (authorizationCompositionType)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameProperties:
      type: object
      properties:
        length:
          description: Length of the generated node name. (length)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakSecurityUserUserConfigurationImplProperties:
      type: object
      properties:
        usersPath:
          description: Path underneath which user nodes are being created. (usersPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        groupsPath:
          description: Path underneath which group nodes are being created. (groupsPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        systemRelativePath:
          description: Path relative to the user root path underneath which system
            user nodes are being created. The default value is 'system'. (systemRelativePath)
          "$ref": "#/components/schemas/configNodePropertyString"
        defaultDepth:
          description: Number of levels that are used by default to store authorizable
            nodes (defaultDepth)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        importBehavior:
          description: Behavior for user/group related items upon XML import. (importBehavior)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        passwordHashAlgorithm:
          description: Name of the algorithm used to generate the password hash. (passwordHashAlgorithm)
          "$ref": "#/components/schemas/configNodePropertyString"
        passwordHashIterations:
          description: Number of iterations to generate the password hash. (passwordHashIterations)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        passwordSaltSize:
          description: Salt size to generate the password hash. (passwordSaltSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        omitAdminPw:
          description: Boolean flag to prevent the administrator account to be created
            with a password upon repository initialization. Please note that changing
            this option after the initial repository setup will have no effect. (omitAdminPw)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        supportAutoSave:
          description: 'Configuration option to enable autosave behavior. Note: this
            config option is present for backwards compatibility with Jackrabbit 2.x
            and should only be used for broken code that doesn''t properly verify
            the autosave behavior (see Jackrabbit API). If this option is turned on
            autosave will be enabled by default; otherwise autosave is not supported.
            (supportAutoSave)'
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        passwordMaxAge:
          description: Maximum age in days a password may have. Values greater 0 will
            implicitly enable password expiry. A value of 0 indicates unlimited password
            age. (passwordMaxAge)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        initialPasswordChange:
          description: When enabled, forces users to change their password upon first
            login. (initialPasswordChange)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        passwordHistorySize:
          description: 'Maximum number of passwords recorded for a user after changing
            her password (NOTE: upper limit is 1000). When changing the password the
            new password must not be present in the password history. A value of 0
            indicates no password history is recorded. (passwordHistorySize)'
          "$ref": "#/components/schemas/configNodePropertyInteger"
        passwordExpiryForAdmin:
          description: When enabled, the admin user will also be subject to password
            expiry. The default value is false for backwards compatibility. (passwordExpiryForAdmin)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cacheExpiration:
          description: 'Optional configuration defining the number of milliseconds
            until the principal cache expires (NOTE: currently only respected for
            principal resolution with the internal system session such as used for
            login). If not set or equal/lower than zero no caches are created/evaluated.
            (cacheExpiration)'
          "$ref": "#/components/schemas/configNodePropertyInteger"
        enableRFC7613UsercaseMappedProfile:
          description: Enable the UsercaseMappedProfile defined in RFC7613 for username
            comparison. (enableRFC7613UsercaseMappedProfile)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceProperties"
    orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceProperties:
      type: object
      properties:
        accountName:
          description: Name of the Azure Storage account to use. (accountName)
          "$ref": "#/components/schemas/configNodePropertyString"
        containerName:
          description: Name of the container to use. If it doesn't exists, it'll be
            created. (containerName)
          "$ref": "#/components/schemas/configNodePropertyString"
        accessKey:
          description: Access key which should be used to authenticate on the account
            (accessKey)
          "$ref": "#/components/schemas/configNodePropertyString"
        rootPath:
          description: Names of all the created blobs will be prefixed with this path
            (rootPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        connectionURL:
          description: Connection string to be used to connect to the Azure Storage.
            Setting it will override the accountName and accessKey properties. (connectionURL)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceProperties:
      type: object
      properties:
        commitsTrackerWriterGroups:
          description: Writer groups for which commits are tracked individually (commitsTrackerWriterGroups)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties:
      type: object
      properties:
        repository.home:
          description: Path on the file system where repository data will be stored.
            Defaults to the value of the framework property 'repository.home' or to
            'repository' if that is neither specified. (repository.home)
          "$ref": "#/components/schemas/configNodePropertyString"
        tarmk.mode:
          description: TarMK mode (64 for memory mapped file access, 32 for normal
            file access). Default value is taken from the 'sun.arch.data.model' system
            property. (tarmk.mode)
          "$ref": "#/components/schemas/configNodePropertyString"
        tarmk.size:
          description: The maximum size of the tar files in megabytes. Default value
            is '256'. (tarmk.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        segmentCache.size:
          description: Cache size for storing most recently used segments in megabytes.
            Default value is '256'. (segmentCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        stringCache.size:
          description: Cache size for storing most recently used strings in megabytes.
            Default value is '256'. (stringCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        templateCache.size:
          description: Cache size for storing most recently used templates in megabytes.
            Default value is '64'. (templateCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        stringDeduplicationCache.size:
          description: Maximum number of strings to keep in the deduplication cache.
            Default value is '15000'. (stringDeduplicationCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        templateDeduplicationCache.size:
          description: Maximum number of templates to keep in the deduplication cache.
            Default value is '3000'. (templateDeduplicationCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        nodeDeduplicationCache.size:
          description: Maximum number of node to keep in the deduplication cache.
            If the supplied value is not a power of 2, it will be rounded up to the
            next power of 2. Default value is '1048576'. (nodeDeduplicationCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        pauseCompaction:
          description: When set to true the compaction phase is skipped during garbage
            collection. Default value is 'false'. (pauseCompaction)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        compaction.retryCount:
          description: Number of tries to compact concurrent commits on top of already
            compacted commits. Default value is '5'. (compaction.retryCount)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.force.timeout:
          description: Number of seconds to attempt to force compact concurrent commits
            on top of already compacted commits after the maximum number of retries
            has been reached. Forced compaction tries to acquire an exclusive write
            lock on the node store, blocking concurrent write access as long as the
            lock is held. Default value is '60'. (compaction.force.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.sizeDeltaEstimation:
          description: Garbage collection will be skipped unless the repository grew
            at least by the number of bytes specified. Default value is '1073741824'.
            (compaction.sizeDeltaEstimation)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.disableEstimation:
          description: Disables the estimation phase allowing garbage collection to
            run unconditionally. Default value is 'false'. (compaction.disableEstimation)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        compaction.retainedGenerations:
          description: Number of segment generations to retain during garbage collection.
            The number of generations defaults to 2 and can't be changed. This configuration
            option is considered deprecated and will be removed in the future. (compaction.retainedGenerations)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.memoryThreshold:
          description: Threshold of available heap memory in percent of total heap
            memory below which the compaction phase is canceled. 0 disables heap memory
            monitoring. Default value is '15'. (compaction.memoryThreshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.progressLog:
          description: The number of nodes compacted after which a status message
            is logged. -1 disables progress logging. Default value is '-1'. (compaction.progressLog)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        standby:
          description: Flag indicating this component will not register as a NodeStore
            but as a NodeStoreProvider instead. Default value is 'false'. (standby)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        customBlobStore:
          description: Boolean value indicating that a custom BlobStore is used for
            storing large binary values. (customBlobStore)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        customSegmentStore:
          description: Boolean value indicating that a custom (non-tar) segment store
            is used (customSegmentStore)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        splitPersistence:
          description: Boolean value indicating that the writes should be done locally
            when using the custom segment store (splitPersistence)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        repository.backup.dir:
          description: Directory (relative to current working directory) for storing
            repository backups. Defaults to 'repository.home/segmentstore-backup'.
            (repository.backup.dir)
          "$ref": "#/components/schemas/configNodePropertyString"
        blobGcMaxAgeInSecs:
          description: The blob garbage collection logic will only consider those
            blobs which are not accessed recently (currentTime - lastModifiedTime
            > blobGcMaxAgeInSecs). For example with the default setting only those
            blobs which have been created at least 24 hours ago will be considered
            for garbage collection. Default value is '86400'. (blobGcMaxAgeInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        blobTrackSnapshotIntervalInSecs:
          description: Interval in seconds in which snapshots of locally tracked blob
            ids are taken and synchronized with the blob store. This should be configured
            to be less than the frequency of blob garbage collection so that deletions
            during blob garbage collection can be accounted for in the next garbage
            collection execution. Default value is '43200'. (blobTrackSnapshotIntervalInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties"
    orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties:
      type: object
      properties:
        org.apache.sling.installer.configuration.persist:
          description: Must be always disabled to avoid storing the configuration
            in the repository (org.apache.sling.installer.configuration.persist)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        mode:
          description: TarMK Cold Standby mode (primary or standby) (mode)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        port:
          description: TCP/IP port to use (port)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        primary.host:
          description: Primary host (standby mode only) (primary.host)
          "$ref": "#/components/schemas/configNodePropertyString"
        interval:
          description: Sync interval in seconds (standby mode only) (interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        primary.allowed-client-ip-ranges:
          description: Accept incoming requests for these host names and IP-ranges
            only (primary mode only) (primary.allowed-client-ip-ranges)
          "$ref": "#/components/schemas/configNodePropertyArray"
        secure:
          description: Use secure connections (secure)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        standby.readtimeout:
          description: Timeout for requests issued from the standby instance in milliseconds
            (standby.readtimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        standby.autoclean:
          description: Call the cleanup method when the root segment Garbage Collector
            (GC) generation number increases (standby.autoclean)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrincipalExternalPrincipalConfigurationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrincipalExternalPrincipalConfigurationProperties"
    orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrincipalExternalPrincipalConfigurationProperties:
      type: object
      properties:
        protectExternalId:
          description: 'If disabled rep:externalId properties won''t be properly protected
            (backwards compatible behavior). NOTE: for security reasons it is strongly
            recommend to keep the protection enabled! (protectExternalId)'
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfigurationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfigurationProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfigurationProperties:
      type: object
      properties:
        cugSupportedPaths:
          description: Paths under which CUGs can be created and will be evaluated.
            (cugSupportedPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        cugEnabled:
          description: Flag to enable the evaluation of the configured CUG policies.
            (cugEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        configurationRanking:
          description: Ranking of this configuration in a setup with multiple authorization
            configurations. (configurationRanking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcludeImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcludeImplProperties"
    orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcludeImplProperties:
      type: object
      properties:
        principalNames:
          description: Name(s) of additional principal(s) that are excluded from CUG
            evaluation. (principalNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableActionProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableActionProviderProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableActionProviderProperties:
      type: object
      properties:
        enabledActions:
          description: The set of actions that is supported by this provider implementation.
            (enabledActions)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        userPrivilegeNames:
          description: The name of the privileges that should be granted to a given
            user on it's home. (userPrivilegeNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
        groupPrivilegeNames:
          description: The name of the privileges that should be granted to a given
            group on it's home. (groupPrivilegeNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
        constraint:
          description: A regular expression specifying the pattern that must be matched
            by a user's password. (constraint)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheJackrabbitVaultPackagingImplPackagingImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitVaultPackagingImplPackagingImplProperties"
    orgApacheJackrabbitVaultPackagingImplPackagingImplProperties:
      type: object
      properties:
        packageRoots:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryProperties"
    orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryProperties:
      type: object
      properties:
        homePath:
          description: 
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingAuthCoreImplLogoutServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingAuthCoreImplLogoutServletProperties"
    orgApacheSlingAuthCoreImplLogoutServletProperties:
      type: object
      properties:
        sling.servlet.methods:
          description: Supported Methdos (sling.servlet.methods)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.servlet.paths:
          description: sling.servlet.paths.description (sling.servlet.paths)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCaconfigImplConfigurationBindingsValueProviderProperties"
    orgApacheSlingCaconfigImplConfigurationBindingsValueProviderProperties:
      type: object
      properties:
        enabled:
          description: Enable provider. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingCaconfigImplConfigurationResolverImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCaconfigImplConfigurationResolverImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingCaconfigImplConfigurationResolverImplProperties:
      type: object
      properties:
        configBucketNames:
          description: Additional bucket resource names to 'sling:configs' to store
            configuration resources. The names are used in the order defined, always
            starting with sling:configs. Once a bucket resource with a matching name
            is found, that bucket is used and the following names are skipped. For
            writeback via ConfigurationManager always sling:configs is used. (configBucketNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStrategyInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStrategyProperties"
    orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStrategyProperties:
      type: object
      properties:
        enabled:
          description: Enable this configuration inheritance strategy. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        configPropertyInheritancePropertyNames:
          description: Additional property names to sling:configPropertyInherit to
            handle property inheritance. The names are used in the order defined,
            always starting with sling:configPropertyInherit. Once a property with
            a value is found, that value is used and the following property names
            are skipped. (configPropertyInheritancePropertyNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStrategyInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStrategyProperties"
    orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStrategyProperties:
      type: object
      properties:
        enabled:
          description: Enable this configuration resource persistence strategy. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOverrideProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOverrideProviderProperties"
    orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOverrideProviderProperties:
      type: object
      properties:
        enabled:
          description: Enable this override provider. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        service.ranking:
          description: Priority of configuration override providers (higher = higher
            priority). (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingCaconfigManagementImplConfigurationManagementSettingsImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCaconfigManagementImplConfigurationManagementSettingsImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingCaconfigManagementImplConfigurationManagementSettingsImplProperties:
      type: object
      properties:
        ignorePropertyNameRegex:
          description: List of regular expressions with property names that should
            be ignored when reading or writing configuration data properties. (ignorePropertyNameRegex)
          "$ref": "#/components/schemas/configNodePropertyArray"
        configCollectionPropertiesResourceNames:
          description: Names of resource to try to look up configuration collection
            properties in. If list is empty only the collection parent resource is
            checked. If the list is not empty than only those listed resources are
            used for look up. If you want to include the collection parent resource
            you can use a dot for the value. (configCollectionPropertiesResourceNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourceResolvingStrategyInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourceResolvingStrategyProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourceResolvingStrategyProperties:
      type: object
      properties:
        enabled:
          description: Enable this configuration resource resolving strategy. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        configPath:
          description: Paths where the configurations are stored in. (configPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        fallbackPaths:
          description: Global fallback configurations, ordered from most specific
            (checked first) to least specific. (fallbackPaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        configCollectionInheritancePropertyNames:
          description: Additional property names to sling:configCollectionInherit
            to handle configuration inheritance. The names are used in the order defined,
            always starting with sling:configCollectionInherit. Once a property with
            a value is found, that value is used and the following property names
            are skipped. (configCollectionInheritancePropertyNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyProperties:
      type: object
      properties:
        enabled:
          description: Enable this context path strategy. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        configRefResourceNames:
          description: Names of resource to try to look up sling:configRef property
            in. If list is empty only current resource is checked. If the list is
            not empty than only those listed resources are used for look up. If you
            want to include the current resource you can use a dot for the value.
            (configRefResourceNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
        configRefPropertyNames:
          description: Additional property names to sling:configRef to look up a configuration
            reference. The names are used in the order defined, always starting with
            sling:configRef. Once a property with a value is found, that value is
            used and the following property names are skipped. (configRefPropertyNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
        service.ranking:
          description: Priority of persistence strategy (higher = higher priority).
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserProperties"
    orgApacheSlingCommonsHtmlInternalTagsoupHtmlParserProperties:
      type: object
      properties:
        parser.features:
          description: Turn features in the underlying parser on or off by setting
            featureID=[true|false] (parser.features)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingCommonsLogLogManagerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsLogLogManagerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingCommonsLogLogManagerProperties:
      type: object
      properties:
        org.apache.sling.commons.log.level:
          description: Root Logger log level setting. (org.apache.sling.commons.log.level)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        org.apache.sling.commons.log.file:
          description: The name and path of the log file. If this is empty, logging
            goes to standard output (the console). If this path is relative it is
            resolved below ${sling.home}. (org.apache.sling.commons.log.file)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.log.file.number:
          description: 'The number of log files to keep. When the threshold of the
            log file reaches the configured maximum (see Log File Threshold), the
            log file is copied and a new log file is created. This setting specifies
            how many generations (incl. the active log file) should be kept. This
            is a positive numeric value. The default value is 5. If the Log File Threshold
            property specifies time/date controlled log file rotation, log file deletion
            can be disabled by setting the number of log files to ''0''. Warning:
            setting this to a high number (more than 20) may be expensive on some
            file-systems, because all files need to be renamed when log files are
            rotated. (org.apache.sling.commons.log.file.number)'
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.sling.commons.log.file.size:
          description: Controls the rotation of the log file by setting a maximum
            file size or a time/date schedule at which to rotate the log file. A size
            limit can be specified setting a pure number indicating the number of
            bytes or a number with a size indicator KB, MB, or GB (case is ignored).
            A time/date schedule can be specified as a java.util.SimpleDateFormat
            pattern. The default is "'.'yyyy-MM-dd" (daily log rotation). (org.apache.sling.commons.log.file.size)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.log.pattern:
          description: Message Pattern for formatting the log messages. For complete
            details refer to http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout
            (org.apache.sling.commons.log.pattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.log.configurationFile:
          description: The name and path of the Logback Config file. If this is empty,
            then default configuration would be used. If this path is relative it
            is resolved below ${sling.home}. See http://logback.qos.ch/manual/ for
            details. (org.apache.sling.commons.log.configurationFile)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.log.packagingDataEnabled:
          description: Include the packaging data which provide details about jar
            name and version of jar from which the class is loaded as part of stacktrace.
            See http://logback.qos.ch/reasonsToSwitch.html#packagingData (org.apache.sling.commons.log.packagingDataEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        org.apache.sling.commons.log.maxCallerDataDepth:
          description: The stack data depth computed during caller data extraction.
            See http://logback.qos.ch/manual/layouts.html#caller (org.apache.sling.commons.log.maxCallerDataDepth)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.sling.commons.log.maxOldFileCountInDump:
          description: Maximum number of old rolled over files for each active file
            to be included while generating the dump as part of Status zip support
            (org.apache.sling.commons.log.maxOldFileCountInDump)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.sling.commons.log.numOfLines:
          description: Number of lines from each log files to include while generating
            the dump in 'txt' mode. If set to -1 then whole file would be included
            (org.apache.sling.commons.log.numOfLines)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterProperties:
      type: object
      properties:
        datasources:
          description: RRDTool data source definitions (e.g. 'DS:oak_SESSION_LOGIN_COUNTER:COUNTER:300:0:U').
            Replace colon characters in the metric name with an underscore! (datasources)
          "$ref": "#/components/schemas/configNodePropertyArray"
        step:
          description: The base interval in seconds with which data will be fed into
            the RRD (step)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        archives:
          description: 'RRDTool round robin archive definitions. The default configuration
            defines four archives based on a default step of five seconds: 1) per
            minute averages for six hours, 2) per five minute averages 48 hours, 3)
            per hour averages for four weeks, 4) per day averages for one year. (archives)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        path:
          description: Path of the RRD file where metrics are stored. If the path
            is relative, it is resolved relative to the value of the framework property
            'sling.home' when available, otherwise relative to the current working
            directory. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsMimeInternalMimeTypeServiceImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingCommonsMimeInternalMimeTypeServiceImplProperties:
      type: object
      properties:
        mime.types:
          description: 'Configures additional MIME type mappings in the traditional
            mime.types file format: Each property is a blank space separated list
            of strings where the first string is the MIME type and the rest of the
            strings are filename extensions referring to the MIME type. Using this
            property additional MIME type mappings may be defined. Existing MIME type
            mappings cannot be redefined and setting such mappings in this property
            has no effect. For a list of existing mappings refer to the MIME Types
            page. (mime.types)'
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingCommonsSchedulerImplQuartzSchedulerProperties:
      type: object
      properties:
        poolName:
          description: The name of a configured thread pool - if no name is configured
            the default pool is used. (poolName)
          "$ref": "#/components/schemas/configNodePropertyString"
        allowedPoolNames:
          description: The names of thread pools that are allowed to be used by jobs.
            If a job is using a pool not in this list, the default pool is used. (allowedPoolNames)
          "$ref": "#/components/schemas/configNodePropertyArray"
        scheduler.useleaderforsingle:
          description: If a job is to be run on a single instance only, disable distribution
            and always run on leader. (scheduler.useleaderforsingle)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        metrics.filters:
          description: 'Whether the metrics (sling:commons.scheduler.*) should be
            grouped by filters. If configured this grouping happens before any thread
            pool grouping. Filter format: filter1=ParticularJob (metrics.filters)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        slowThresholdMillis:
          description: duration in millis after which a job is considered slow. Slow
            jobs are detected while measuring oldest running jobs (via a Gauge) and
            when the job is finished. In the former case a temporary gauge is added
            with the job name as the suffix. In the latter case a permanent timer
            is added, also with the job name as the suffix. 0 or a negative value
            disables this feature. (slowThresholdMillis)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckProperties"
    orgApacheSlingCommonsSchedulerImplSchedulerHealthCheckProperties:
      type: object
      properties:
        max.quartzJob.duration.acceptable:
          description: Maximum a job should take (in millis) for it to be acceptable.
            Best to set this equal or higher to org.apache.sling.commons.scheduler.impl.QuartzScheduler.slowThresholdMillis
            (max.quartzJob.duration.acceptable)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingDiscoveryOakConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDiscoveryOakConfigProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingDiscoveryOakConfigProperties:
      type: object
      properties:
        connectorPingTimeout:
          description: Configure the timeout (in seconds) after which an announcement
            sent via a topology connector is considered timed out. Default is 120
            seconds. (connectorPingTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        connectorPingInterval:
          description: Configure the interval (in seconds) according to which the
            topology connector pings are exchanged in the topology. Default is 30
            seconds. (connectorPingInterval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        discoveryLiteCheckInterval:
          description: Configure the interval (in seconds) with which Oak's discoveryLite
            descriptor should be checked for changes. Default is 2 seconds. Note that
            the timeout value is configured within Oak directly. (discoveryLiteCheckInterval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        clusterSyncServiceTimeout:
          description: Configure the timeout (in seconds) after which the SyncService
            gives up when it did not see sync tokens of peer instances in the cluster.
            The SyncService mechanism ensures switching to a new topology is handled
            synchronously in the cluster and if this timeout is hit, there is a risk
            of an instance not having noticed a new topology just yet. Default is
            120 seconds. (clusterSyncServiceTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        clusterSyncServiceInterval:
          description: Configure the interval (in seconds) at which the SyncService
            checks for sync tokens or their timeout. Default is 2 seconds. (clusterSyncServiceInterval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        enableSyncToken:
          description: When enabled, the SyncService that exchanges sync tokens upon
            every topology change is used. The SyncService ensures that a topology
            change event is only sent once all instances have indicated they are aware
            of the ongoing change. Disabling this results in the topology change events
            being sent out quicker, however without a synchronization guarantee. (enableSyncToken)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        minEventDelay:
          description: Configure a minimal delay (in seconds) between TOPOLOGY_CHANGING
            and TOPOLOGY_CHANGED. Any further changes happening during this delay
            are accumulated and combined in the TOPOLOGY_CHANGED after this delay.
            This helps avoiding event-flooding. Default is 3 seconds. A negative value
            or zero disables this delay. (minEventDelay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        socketConnectTimeout:
          description: Timeout (in seconds!) for the topology connector's socket.connect()
            (socketConnectTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        soTimeout:
          description: Topology connector's socket timeout (SO_TIMEOUT) (in seconds!)
            which is the timeout for waiting for data (soTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        topologyConnectorUrls:
          description: URLs where to join a topology, e.g. http://localhost:4502/libs/sling/topology/connector
            (topologyConnectorUrls)
          "$ref": "#/components/schemas/configNodePropertyArray"
        topologyConnectorWhitelist:
          description: 'List of IPs and/or hostnames which are allowed to connect
            to the connector URL. There are four variants here: 1. provide a plain
            hostname. 2. provide an IP address. 3. provide a hostname or IP address
            with wildcards (* or ?). 4. provide an IP address with a subnet mask,
            either using the CIDR notation: 1.2.3.4/24 or an IP address, space, subnet
            mask: 1.2.3.4 255.255.255.0) (topologyConnectorWhitelist)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        autoStopLocalLoopEnabled:
          description: If true, and the discovery.impl detects a local-looping topology
            connector, the corresponding topology connector will be automatically
            stopped. This is useful to prevent unnecessary loops with eg pre-configured
            topology connectors. (autoStopLocalLoopEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        gzipConnectorRequestsEnabled:
          description: If true, the payloads of topology connector requests will be
            gzipped. This is advisable on certain connector structures, eg in a tree
            structure, where a topology connector announces a large sub-topology.
            Note that this only works with the server running discovery.impl 1.0.4
            and onwards. Replies are gzipped automatically. (gzipConnectorRequestsEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        hmacEnabled:
          description: If true, and the Shared Key is set to the same value on all
            members of the topology, the messages will be validated using a HMAC of
            a digest of the body of the message. The hmac and message digest are in
            the HTTP request and response headers. Both requests and responses are
            signed. (hmacEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        enableEncryption:
          description: If Message HMACs are enabled and there is a shared key set,
            setting this to true will encrypt the body of the message using 128 bit
            AES encryption. Once encrypted you will not be able debug the messages
            at the http level. (enableEncryption)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        sharedKey:
          description: If message signing and encryption is used, this should be set
            to the same value on all members of the same topology. If any member of
            the topology has a different key it will effectively be excluded from
            the topology even if it attempts to send messages to other members of
            the topology. (sharedKey)
          "$ref": "#/components/schemas/configNodePropertyString"
        hmacSharedKeyTTL:
          description: Shared keys for message signatures are derived from the configured
            shared key. Each derived key has a lifetime (TTL). Once that time has
            expired a new key is derived and used for hmac signatures. This setting,
            sets the TTL in ms. Keys that are 2 lifetimes old are ignored. Set according
            to you level of paranoia, but don't set to less than the greatest possible
            clock drift between members of the topology. The default is 4 hours. Setting
            to a ridiculously low value will increase the turnover of keys. Generating
            a key takes about 2ms. There is no risk of memory consumption with low
            values, only a risk of the topology falling apart due to incorrectly set
            clocks. (hmacSharedKeyTTL)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        backoffStandbyFactor:
          description: When a topology connector is in standby mode (ie when it is
            redundant), the heartbeat frequency is lowered, ie the heartbeatInterval
            for this connector is increased , at maximum by the backoffStandbyFactor
            (backoffStandbyFactor)
          "$ref": "#/components/schemas/configNodePropertyString"
        backoffStableFactor:
          description: When a topology connector is stable (ie no changes occuring
            in the announcements sent), then the heartbeat frequency is lowered, ie
            the heartbeatInterval for this connector is steadily increased, at maximum
            by the backoffStableFactor. (backoffStableFactor)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckProperties"
    orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckProperties:
      type: object
      properties:
        hc.name:
          description: Health Check name (hc.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        hc.tags:
          description: Health Check tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        hc.mbean.name:
          description: Health Check MBean name (hc.mbean.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionMonitorDistributionQueueHealthCheckProperties"
    orgApacheSlingDistributionMonitorDistributionQueueHealthCheckProperties:
      type: object
      properties:
        hc.name:
          description: Health Check name (hc.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        hc.tags:
          description: Health Check tags (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        hc.mbean.name:
          description: Health Check MBean name (hc.mbean.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        numberOfRetriesAllowed:
          description: Number of allowed retries (numberOfRetriesAllowed)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingEngineImplAuthSlingAuthenticatorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEngineImplAuthSlingAuthenticatorProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingEngineImplAuthSlingAuthenticatorProperties:
      type: object
      properties:
        osgi.http.whiteboard.context.select:
          description: osgi.http.whiteboard.context.select.description (osgi.http.whiteboard.context.select)
          "$ref": "#/components/schemas/configNodePropertyString"
        osgi.http.whiteboard.listener:
          description: osgi.http.whiteboard.listener.description (osgi.http.whiteboard.listener)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.sudo.cookie:
          description: The name the HTTP Cookie to set with the value of the user
            which is to be impersonated. This cookie will always be a session cookie.
            (auth.sudo.cookie)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.sudo.parameter:
          description: The name of the request parameter initiating impersonation.
            Setting this parameter to a user id will result in using an impersonated
            session (instead of the actually authenticated session) and set a session
            cookie of the name defined in the Impersonation Cookie setting. (auth.sudo.parameter)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.annonymous:
          description: Whether default access as anonymous when no credentials are
            present in the request is allowed. The default value is "true" to allow
            access without credentials. When set to "false" access to the repository
            is only allowed if valid credentials are presented. The value of this
            configuration option is added to list of Authentication Requirements and
            needs not be explicitly listed. If anonymous access is allowed the entry
            added is "-/". Otherwise anonymous access is denied and "+/" is added
            to the list. (auth.annonymous)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        sling.auth.requirements:
          description: 'Defines URL space subtrees which require or don''t require
            authentication. For any request the best matching path configured applies
            and defines whether authentication is actually required for the request
            or not. Each entry in this list can be an absolute path (such as /content)
            or and absolute URI (such as http://thehost/content). Optionally each
            entry may be prefixed by a plus (+) or minus (-) sign indicating that
            authentication is required (plus) or not required (minus). Example entries
            are "/content" or "+/content" to require authentication at and below "/content"
            and "-/system/sling/login" to not require authentication at and below
            "/system/sling/login". By default this list is empty. This list is extended
            at run time with additional entries: One entry is added for the "Allow
            Anonymous Access" configuration. Other entries are added for any services
            setting the "sling.auth.requirements" service registration property. (sling.auth.requirements)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.auth.anonymous.user:
          description: Defines which user name to assume for anonymous requests, that
            is requests not providing credentials supported by any of the registered
            authentication handlers. If this property is missing or empty, the default
            is assumed which depends on the resource provider(s). Otherwise anonymous
            requests are handled with this user name. If the configured user name
            does not exist or is not allowed to access the resource data, anonymous
            requests may still be blocked. If anonymous access is not allowed, this
            property is ignored. (sling.auth.anonymous.user)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.auth.anonymous.password:
          description: Password for the anonymous user defined in the Anonymous User
            Name field. This property is only used if a non-empty anonymous user name
            is configured. If this property is not defined but a password is required,
            an empty password would be assumed. (sling.auth.anonymous.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.http:
          description: 'Level of support for HTTP Basic Authentication. Such support
            can be provided in three levels: (1) no support at all, that is disabled,
            (2) preemptive support, that is HTTP Basic Authentication is supported
            if the authentication header is set in the request, (3) full support.
            The default is preemptive support unless Anonymous Access is not allowed.
            In this case HTTP Basic Authentication is always enabled to ensure clients
            can authenticate at least with basic authentication. (auth.http)'
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        auth.http.realm:
          description: HTTP BASIC authentication realm. This property is only used
            if the HTTP Basic Authentication support is not disabled. The default
            value is "Sling (Development)". (auth.http.realm)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.uri.suffix:
          description: A list of request URI suffixes intended to be handled by Authentication
            Handlers. Any request whose request URI ends with any one of the listed
            suffices is intended to be handled by an Authentication Handler causing
            the request to either be rejected or the client being redirected to another
            location and thus the request not being further processed after the authentication
            phase. The default is just "/j_security_check" which is the suffix defined
            by the Servlet API specification used for FORM based authentication. (auth.uri.suffix)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterProperties"
    orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterProperties:
      type: object
      properties:
        extensions:
          description: Only requests with the listed extensions will be logged. If
            no extensions are configured all requests are logged. Empty by default.
            (extensions)
          "$ref": "#/components/schemas/configNodePropertyArray"
        minDurationMs:
          description: Only requests that take at least the minimum duration in milliseconds
            are logged. Default is 0. (minDurationMs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxDurationMs:
          description: Only requests that take at most the maximum duration in milliseconds
            are logged. Default is 2147483647, i.e. Integer.MAX_VALUE. (maxDurationMs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compactLogFormat:
          description: Whether or not to use the compact format. In compact one log
            entry is logged per request, detailing the request progress tracker information
            in individual lines, like stack-traces. This keeps log files smaller and
            makes them more readable. In the older (non-compact) format, one log entry
            is printed per line, thus potentially containing more noise. Default is
            false. (compactLogFormat)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingEngineImplLogRequestLoggerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEngineImplLogRequestLoggerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingEngineImplLogRequestLoggerProperties:
      type: object
      properties:
        request.log.output:
          description: Name of the destination for the request log. The request log
            logs the entry and exit of each request into and out of the system together
            with the entry time, exit time, time to process the request, a request
            counter as well as the final status code and response content type. In
            terms of Request Logger Service formats, request entry is logged with
            the format "%t [%R] -> %m %U%q %H" and request exit is logged with the
            format "%{end}t [%R] <- %s %{Content-Type}o %Dms". (request.log.output)
          "$ref": "#/components/schemas/configNodePropertyString"
        request.log.outputtype:
          description: Type of request log destination. Select "Logger Name" to write
            the access log to an SLF4J logger, "File Name" to write the access log
            to a file (relative paths resolved against sling.home) or "RequestLog
            Service" to use a named OSGi service registered with the service interface
            "org.apache.sling.engine.RequestLog" and a service property "requestlog.name"
            equal to the Logger Name setting. (request.log.outputtype)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        request.log.enabled:
          description: Whether to enable Request logging or not. (request.log.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        access.log.output:
          description: Name of the destination for the request log. The access log
            writes an entry for each request as the request terminates using the NCSA
            extended/combined log format. In terms of Request Logger Service formats
            the access log is written with the format "%h %l %u %t "%r" %>s %b "%{Referer}i"
            "%{User-Agent}i"". (access.log.output)
          "$ref": "#/components/schemas/configNodePropertyString"
        access.log.outputtype:
          description: Type of access log destination. Select "Logger Name" to write
            the access log to an SLF4J logger, "File Name" to write the access log
            to a file (relative paths resolved against sling.home) or "RequestLog
            Service" to use a named OSGi service registered with the service interface
            "org.apache.sling.engine.RequestLog" and a service property "requestlog.name"
            equal to the Logger Name setting. (access.log.outputtype)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        access.log.enabled:
          description: Whether to enable Access logging or not. (access.log.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingEngineImplSlingMainServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEngineImplSlingMainServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingEngineImplSlingMainServletProperties:
      type: object
      properties:
        sling.max.calls:
          description: Defines the maximum number of Servlet and Script calls while
            processing a single client request. This number should be high enough
            to not limit request processing artificially. On the other hand it should
            not be too high to allow the mechanism to limit the resources required
            to process a request in case of errors. The default value is 1000. (sling.max.calls)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        sling.max.inclusions:
          description: The maximum number of recursive Servlet and Script calls while
            processing a single client request. This number should not be too high,
            otherwise StackOverflowErrors may occurr in case of erroneous scripts
            and servlets. The default value is 50.  (sling.max.inclusions)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        sling.trace.allow:
          description: If set to true, the HTTP TRACE method will be enabled. By default
            the HTTP TRACE methods is disabled as it can be used in Cross Site Scripting
            attacks on HTTP servers. (sling.trace.allow)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        sling.max.record.requests:
          description: Defines the number of requests that internally recorded for
            display on the "Recent Requests" Web Console page. If this value is less
            than or equal to zero, no requests are internally kept. The default value
            is 20.  (sling.max.record.requests)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        sling.store.pattern.requests:
          description: One or more regular expressions which limit the requests which
            are stored by the "Recent Requests" Web Console page. (sling.store.pattern.requests)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.serverinfo:
          description: The server info returned by Sling. If this field is left empty,
            Sling generates a default into. (sling.serverinfo)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.additional.response.headers:
          description: Provides mappings for additional response headers Each entry
            is of the form 'bundleId [ ":" responseHeaderName ] "=" responseHeaderValue'
            (sling.additional.response.headers)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingEngineParametersInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEngineParametersProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingEngineParametersProperties:
      type: object
      properties:
        sling.default.parameter.encoding:
          description: The default request parameter encoding used to decode request
            parameters into strings. If this property is not set the default encoding
            is 'ISO-8859-1' as mandated by the Servlet API spec. This default encoding
            is used if the '_charset_' request parameter is not set to another (supported)
            character encoding. Applications being sure to always use the same encoding
            (e.g. UTF-8) can set this default here and may omit the '_charset_' request
            parameter (sling.default.parameter.encoding)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.default.max.parameters:
          description: The maximum number of parameters supported. To prevent a DOS-style
            attack with an overrunning number of parameters the number of parameters
            supported can be limited. This includes all of the query string as well
            as application/x-www-form-urlencoded and multipart/form-data parameters.
            The default value is 10000. (sling.default.max.parameters)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        file.location:
          description: The temporary directory where uploaded files are written to
            disk. The default is null, which means the directory given by the 'java.io.tmpdir'
            system property. (file.location)
          "$ref": "#/components/schemas/configNodePropertyString"
        file.threshold:
          description: The size threshold after which the file will be written to
            disk. The default is 256KB. (file.threshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        file.max:
          description: The maximum size allowed for uploaded files. The default is
            -1, which means unlimited. (file.max)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        request.max:
          description: The maximum size allowed for multipart/form-data requests.
            The default is -1, which means unlimited. (request.max)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        sling.default.parameter.checkForAdditionalContainerParameters:
          description: Enable this if you want to include request parameters added
            through the container, e.g through a valve. (sling.default.parameter.checkForAdditionalContainerParameters)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingEventImplEventingThreadPoolInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEventImplEventingThreadPoolProperties"
    orgApacheSlingEventImplEventingThreadPoolProperties:
      type: object
      properties:
        minPoolSize:
          description: The size of the thread pool. This pool is used to execute jobs
            and therefore limits the maximum number of jobs executed in parallel.
            (minPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingEventImplJobsDefaultJobManagerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEventImplJobsDefaultJobManagerProperties"
    orgApacheSlingEventImplJobsDefaultJobManagerProperties:
      type: object
      properties:
        queue.priority:
          description: The priority for the threads used by this queue. Default is
            norm. (queue.priority)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        queue.retries:
          description: The maximum number of times a failed job slated for retries
            is actually retried. If a job has been retried this number of times and
            still fails, it is not rescheduled and assumed to have failed. The default
            value is 10. (queue.retries)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queue.retrydelay:
          description: The number of milliseconds to sleep between two consecutive
            retries of a job which failed and was set to be retried. The default value
            is 2 seconds. This value is only relevant if there is a single failed
            job in the queue. If there are multiple failed jobs, each job is retried
            in turn without an intervening delay. (queue.retrydelay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queue.maxparallel:
          description: The maximum number of parallel jobs started for this queue.
            A value of -1 is substituted with the number of available processors.
            (queue.maxparallel)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingEventImplJobsJcrPersistenceHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEventImplJobsJcrPersistenceHandlerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingEventImplJobsJcrPersistenceHandlerProperties:
      type: object
      properties:
        job.consumermanager.disableDistribution:
          description: If the distribution is disabled, all jobs will be processed
            on the leader only! Please use this switch with care. (job.consumermanager.disableDistribution)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        startup.delay:
          description: Specify amount in seconds that job manager waits on startup
            before starting with job handling. This can be used to allow enough time
            to restart a cluster before jobs are eventually reassigned. (startup.delay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cleanup.period:
          description: Specify the periodic interval in minutes (default is 48h -
            use 0 to disable) after which removed jobs (ERROR or DROPPED) should be
            cleaned from the repository. (cleanup.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingEventImplJobsJobConsumerManagerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEventImplJobsJobConsumerManagerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingEventImplJobsJobConsumerManagerProperties:
      type: object
      properties:
        org.apache.sling.installer.configuration.persist:
          description: If this is disabled, the configuration is not persisted on
            save in the cluster and is only used on the current instance. This option
            should always be disabled! (org.apache.sling.installer.configuration.persist)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        job.consumermanager.whitelist:
          description: This is a list of topics which currently should be processed
            by this instance. Leaving it empty, all job consumers are disabled. Putting
            a '*' as one entry, enables all job consumers. Adding separate topics
            enables job consumers for exactly this topic. (job.consumermanager.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        job.consumermanager.blacklist:
          description: This is a list of topics which currently shouldn't be processed
            by this instance. Leaving it empty, all job consumers are enabled. Putting
            a '*' as one entry, disables all job consumers. Adding separate topics
            disables job consumers for exactly this topic. (job.consumermanager.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWebConsoleSecurityProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWebConsoleSecurityProviderProperties"
    orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWebConsoleSecurityProviderProperties:
      type: object
      properties:
        users:
          description: Names of users granted full access to the Apache Felix Web
            Console. By default this lists the "admin" user. A maximum of 20 users
            may be configured. Administrators are encouraged to create a group whose
            members are to be granted access to Web Console instead of allowing access
            to individual users. (users)
          "$ref": "#/components/schemas/configNodePropertyArray"
        groups:
          description: Names of groups whose members are granted full access to the
            Apache Felix Web Console. The default lists no groups. Administrators
            are encouraged to create a group whose members are to be granted access
            to the Web Console. A maximum of 20 groups may be configured. Using groups
            to control access requires a Jackrabbit based repository. (groups)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingHapiImplHApiUtilImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingHapiImplHApiUtilImplProperties"
    orgApacheSlingHapiImplHApiUtilImplProperties:
      type: object
      properties:
        org.apache.sling.hapi.tools.resourcetype:
          description: The resource used for hapi types (org.apache.sling.hapi.tools.resourcetype)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.hapi.tools.collectionresourcetype:
          description: The resource used for hapi type collections (org.apache.sling.hapi.tools.collectionresourcetype)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.hapi.tools.searchpaths:
          description: The path under which children resources can be identified as
            hapi types by their FQDN value in addition to the type path (org.apache.sling.hapi.tools.searchpaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.sling.hapi.tools.externalurl:
          description: The external URL of the instance. This will prefix hapi absolute
            URLs (org.apache.sling.hapi.tools.externalurl)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.hapi.tools.enabled:
          description: Whether hapi is enabled or completely disabled (no output rendered
            in components) (org.apache.sling.hapi.tools.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties"
    orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplProperties:
      type: object
      properties:
        timeoutInMs:
          description: Timeout in ms until a check is marked as timed out (timeoutInMs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        longRunningFutureThresholdForCriticalMs:
          description: Threshold in ms until a check is marked as 'exceedingly' timed
            out and will marked CRITICAL instead of WARN only (longRunningFutureThresholdForCriticalMs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        resultCacheTtlInMs:
          description: Result Cache time to live - results will be cached for the
            given time (resultCacheTtlInMs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties"
    orgApacheSlingHcCoreImplServletHealthCheckExecutorServletProperties:
      type: object
      properties:
        servletPath:
          description: Servlet path (defaults to /system/health in order to not be
            accessible via Apache/Internet) (servletPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        disabled:
          description: Allows to disable the servlet if required for security reasons
            (disabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        cors.accessControlAllowOrigin:
          description: Sets the Access-Control-Allow-Origin CORS header. If blank
            no header is sent. (cors.accessControlAllowOrigin)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerProperties"
    orgApacheSlingHcCoreImplServletResultTxtVerboseSerializerProperties:
      type: object
      properties:
        totalWidth:
          description: Total width of all columns in verbose txt rendering (in characters)
            (totalWidth)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        colWidthName:
          description: Column width of health check name (in characters) (colWidthName)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        colWidthResult:
          description: Column width of health check result (in characters) (colWidthResult)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        colWidthTiming:
          description: Column width of health check timing (in characters) (colWidthTiming)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingI18nImplI18NFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingI18nImplI18NFilterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingI18nImplI18NFilterProperties:
      type: object
      properties:
        service.ranking:
          description: 
          "$ref": "#/components/schemas/configNodePropertyInteger"
        sling.filter.scope:
          description: 
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingI18nImplJcrResourceBundleProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingI18nImplJcrResourceBundleProviderProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingI18nImplJcrResourceBundleProviderProperties:
      type: object
      properties:
        locale.default:
          description: The default locale to assume if none can be resolved otherwise.
            This value must be in the form acceptable to the java.util.Locale class.
            (locale.default)
          "$ref": "#/components/schemas/configNodePropertyString"
        preload.bundles:
          description: Whether or not to eagerly load the resource bundles on bundle
            start or a cache invalidation. (preload.bundles)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        invalidation.delay:
          description: In case of dictionary change events the cached resource bundle
            becomes invalid after the given delay (in ms).  (invalidation.delay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingInstallerProviderJcrImplJcrInstallerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingInstallerProviderJcrImplJcrInstallerProperties:
      type: object
      properties:
        handler.schemes:
          description: For these schemes this installer writes back configurations.
            (handler.schemes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.jcrinstall.folder.name.regexp:
          description: JCRInstall looks in repository folders having a name that match
            this regular expression (under the root paths, which are defined by the
            ResourceResolver search path) for resources to install. Folders having
            names that match this expression, followed by dotted run mode selectors
            (like "install.author.production") are also included.    (sling.jcrinstall.folder.name.regexp)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.jcrinstall.folder.max.depth:
          description: Folders that are nested deeper than this value under the repository
            root are ignored (sling.jcrinstall.folder.max.depth)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        sling.jcrinstall.search.path:
          description: List of paths under which jcrinstall looks for installable
            resources. Combined with the installations folders name regexp to select
            folders for scanning. Each path is followed by a colon and the priority
            of resources found under that path, resources with higher values override
            resources with lower values which represent the same OSGi entity (configuration,
            bundle, etc).  (sling.jcrinstall.search.path)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.jcrinstall.new.config.path:
          description: New configurations are stored at this location. If this path
            is relative, the resource resolver search path with highest priority is
            prepended. Otherwise this path is used as is. (sling.jcrinstall.new.config.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.jcrinstall.signal.path:
          description: Path of the node in repository whose children would be watched
            for determining if the watch folder scanning has to be performed or not.
            If any child node is found at this path then scanning would be paused.
            (sling.jcrinstall.signal.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.jcrinstall.enable.writeback:
          description: Enable writing back of changes done through other tools like
            writing back configurations changed in the web console etc. (sling.jcrinstall.enable.writeback)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties"
    orgApacheSlingJcrBaseInternalLoginAdminWhitelistProperties:
      type: object
      properties:
        whitelist.bypass:
          description: Allow all bundles to use loginAdministrative(). Should ONLY
            be used for backwards compatibility reasons and if you are aware of the
            related security risks. (whitelist.bypass)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        whitelist.bundles.regexp:
          description: Regular expression for bundle symbolic names for which loginAdministrative()
            is allowed. NOT recommended for production use, but useful for testing
            with generated bundles. (whitelist.bundles.regexp)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingJcrDavexImplServletsSlingDavExServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrDavexImplServletsSlingDavExServletProperties"
    orgApacheSlingJcrDavexImplServletsSlingDavExServletProperties:
      type: object
      properties:
        alias:
          description: The root path at which the DavEx Servlet is accessible. The
            default value is "/server". (alias)
          "$ref": "#/components/schemas/configNodePropertyString"
        dav.create-absolute-uri:
          description: When set to true, create absolute URIs in WebDAV responses.
            Otherwise, use absolute paths. (See RFC 4918, Section 8.3) (dav.create-absolute-uri)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        dav.protectedhandlers:
          description: dav.protectedhandlers.description (dav.protectedhandlers)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties"
    orgApacheSlingJcrJackrabbitServerJndiRegistrationSupportProperties:
      type: object
      properties:
        java.naming.factory.initial:
          description: The fully qualified class name of the factory class that will
            create an initial context. (java.naming.factory.initial)
          "$ref": "#/components/schemas/configNodePropertyString"
        java.naming.provider.url:
          description: An URL string for the service provider (e.g. ldap://somehost:389)
            (java.naming.provider.url)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportProperties"
    orgApacheSlingJcrJackrabbitServerRmiRegistrationSupportProperties:
      type: object
      properties:
        port:
          description: Port number of the RMI registry to use. The RMI Registrar first
            tries to create a private RMI registry at this port. If this fails, an
            existing registry is tried to connect at this port on local host. If this
            number is negative, the RMI egistrar is disabled. If this number is higher
            than 65535, an error message is logged and the RMI Registrar is also  disabled.
            If this number is zero, the system default RMI Registry port 1099 is used.
            (port)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingJcrRepoinitImplRepositoryInitializerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrRepoinitImplRepositoryInitializerProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingJcrRepoinitImplRepositoryInitializerProperties:
      type: object
      properties:
        references:
          description: References to the source text that provides repoinit statements.
            format is either model@repoinit:<provisioning model URL> or raw:<raw URL>
            (references)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties:
      type: object
      properties:
        resource.resolver.searchpath:
          description: The list of absolute path prefixes applied to find resources
            whose path is just specified with a relative path. The default value is
            [ "/apps", "/libs" ]. If an empty path is specified a single entry path
            of [ "/" ] is assumed. (resource.resolver.searchpath)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resource.resolver.manglenamespaces:
          description: Defines whether namespace prefixes of resource names inside
            the path (e.g. "jcr:" in "/home/path/jcr:content") are mangled or not.
            Mangling means that any namespace prefix contained in the path is replaced
            as per the generic substitution pattern "/([^:]+):/_$1_/" when calling
            the "map" method of the resource resolver. Likewise the "resolve" methods
            will unmangle such namespace prefixes according to the substituation pattern
            "/_([^_]+)_/$1:/". This feature is provided since there may be systems
            out there in the wild which cannot cope with URLs containing colons, even
            though they are perfectly valid characters in the path part of URI references
            with a scheme. The default value of this property if no configuration
            is provided is "true". (resource.resolver.manglenamespaces)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        resource.resolver.allowDirect:
          description: Whether to add a direct URL mapping to the front of the mapping
            list. (resource.resolver.allowDirect)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        resource.resolver.required.providers:
          description: A resource resolver factory is only available (registered)
            if all resource providers mentioned in this configuration are available.
            Each entry is either a service PID or a filter expression.  Invalid filters
            are ignored. (resource.resolver.required.providers)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resource.resolver.required.providernames:
          description: A resource resolver factory is only available (registered)
            if all resource providers mentioned in this configuration are available.
            Each entry is refers to the name of a registered provider. (resource.resolver.required.providernames)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resource.resolver.virtual:
          description: List of virtual URLs and there mappings to real URLs. Format
            is <externalURL>:<internalURL>. Mappings are applied on the complete request
            URL only. (resource.resolver.virtual)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resource.resolver.mapping:
          description: 'List of mappings to apply to paths. Incoming mappings are
            applied to request paths to map to resource paths, outgoing mappings are
            applied to map resource paths to paths used on subsequent requests. Form
            is <internalPathPrefix><op><externalPathPrefix> where <op> is ">" for
            incoming mappings, "<" for outgoing mappings and ":" for mappings applied
            in both directions. Mappings are applied in configuration order by comparing
            and replacing URL prefixes. Note: The use of "-" as the <op> value indicating
            a mapping in both directions is deprecated. (resource.resolver.mapping)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        resource.resolver.map.location:
          description: The path to the root of the configuration to setup and configure
            the ResourceResolver mapping. The default value is /etc/map. (resource.resolver.map.location)
          "$ref": "#/components/schemas/configNodePropertyString"
        resource.resolver.map.observation:
          description: The paths where vanity paths or aliases can be found. These
            paths are used to listen for resource events. (resource.resolver.map.observation)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resource.resolver.default.vanity.redirect.status:
          description: The default status code used when a sling:vanityPath is configured
            to redirect and does not have a specific status code associated with it
            (via a sling:redirectStatus property) (resource.resolver.default.vanity.redirect.status)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        resource.resolver.enable.vanitypath:
          description: This flag controls whether all resources with a sling:vanityPath
            property are processed and added to the mappoing table. (resource.resolver.enable.vanitypath)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        resource.resolver.vanitypath.maxEntries:
          description: The maximum number of cached vanity path entries. Default is
            -1 (no limit) (resource.resolver.vanitypath.maxEntries)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        resource.resolver.vanitypath.maxEntries.startup:
          description: Limit the maximum number of cached vanity path entries only
            at startup. Default is true (resource.resolver.vanitypath.maxEntries.startup)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        resource.resolver.vanitypath.bloomfilter.maxBytes:
          description: The maximum number of vanity bloom filter bytes. Changing this
            value is subject to vanity bloom filter rebuild (resource.resolver.vanitypath.bloomfilter.maxBytes)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        resource.resolver.optimize.alias.resolution:
          description: This flag controls whether to optimize the alias resolution
            by creating an internal cache of aliases. This might have an impact on
            the startup time and on the alias update time if the number of aliases
            is huge (over 10000). (resource.resolver.optimize.alias.resolution)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        resource.resolver.vanitypath.whitelist:
          description: This setting can contain a list of path prefixes, e.g. /libs/,
            /content/. If such a list is configured, only vanity paths from resources
            starting with this prefix  are considered. If the list is empty, all vanity
            paths are used. (resource.resolver.vanitypath.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resource.resolver.vanitypath.blacklist:
          description: This setting can contain a list of path prefixes, e.g. /misc/.
            If such a list is configured,vanity paths from resources starting with
            this prefix  are not considered. If the list is empty, all vanity paths
            are used. (resource.resolver.vanitypath.blacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resource.resolver.vanity.precedence:
          description: This flag controls whether vanity paths will have precedence
            over existing /etc/map mapping (resource.resolver.vanity.precedence)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        resource.resolver.providerhandling.paranoid:
          description: If this flag is enabled, an unregistration of a resource provider
            (not factory), is causing the resource resolver factory to restart, potentially
            cleaning up for memory leaks caused by objects hold from that resource
            provider. (resource.resolver.providerhandling.paranoid)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        resource.resolver.log.closing:
          description: When enabled CRUD operations with a closed resource resolver
            will log a stack trace with the point where the used resolver was closed.
            It's advisable to not enable this feature on production systems. (resource.resolver.log.closing)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        resource.resolver.log.unclosed:
          description: When enabled unclosed resource resolvers will be logged. Not
            closing a resource resolver is a bug in the code using the resolver and
            should be fixed. (resource.resolver.log.unclosed)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrResourceInternalJcrSystemUserValidatorProperties"
    orgApacheSlingJcrResourceInternalJcrSystemUserValidatorProperties:
      type: object
      properties:
        allow.only.system.user:
          description: If set to true, only user IDs bound to JCR system users are
            allowed in the user mappings of the 'Sling Service User Mapper Service'.
            Otherwise all users are allowed! (allow.only.system.user)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceProperties"
    orgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceProperties:
      type: object
      properties:
        service.ranking:
          description: service.ranking.description (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        type.collections:
          description: The JCR Primary Node Type to assign to nodes created to reflect
            WebDAV collections. The default value is sling:Folder. You may name any
            primary node type here, provided it allows the creation of nodes of this
            type and the defined Non-Collection Primary Type below it. (type.collections)
          "$ref": "#/components/schemas/configNodePropertyString"
        type.noncollections:
          description: The JCR Primary Node Type to assign to nodes created to reflect
            WebDAV non-collection resources. The default value is nt:file. You may
            name any primary node type here, provided the node type is allowed to
            be created below nodes of the type defined for the Collection Primary
            Type and that a child node with the name "jcr:content" may be created
            below the non-collection resource whose type is defined by the Content
            Primary Type. (type.noncollections)
          "$ref": "#/components/schemas/configNodePropertyString"
        type.content:
          description: 'The JCR Primary Node Type to assign to the jcr:content child
            node of a WebDAV non-collection resource. The default value is nt:resource.
            You may name any primary node type here, provided the node type is allowed
            to be created as the jcr:content child node of the node type defined by
            the Non-Collection Primary Type. In addition the node type must allow
            at least the following properties: jcr:data (binary), jcr:lastModified
            (date), and jcr:mimeType (string). (type.content)'
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServiceProperties"
    orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServiceProperties:
      type: object
      properties:
        service.ranking:
          description: service.ranking.description (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties:
      type: object
      properties:
        dav.root:
          description: The root path at which the Simple WebDAV Servlet is accessible.
            The default value is "/dav". Access to the repository is provided in two
            ways. You may connect your WebDAV client directly to the root of the Sling
            web application to access the workspace of Sling directly. The other way
            is required if you want to connect your WebDAV client to any other workspace
            besides the Sling workspace. In this case you connect your WebDAV client
            to another a path comprised of this root path plus the name of the workspace.
            For example to connect to the some_other workspace, you might connect
            to http://slinghost/dav/some_other.  (dav.root)
          "$ref": "#/components/schemas/configNodePropertyString"
        dav.create-absolute-uri:
          description: When set to true, create absolute URIs in WebDAV responses.
            Otherwise, use absolute paths. (See RFC 4918, Section 8.3) (dav.create-absolute-uri)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        dav.realm:
          description: The name of the HTTP Basic Authentication Realm presented to
            the client to ask for authentication credentials to access the repository.
            (dav.realm)
          "$ref": "#/components/schemas/configNodePropertyString"
        collection.types:
          description: The JCR Node Types considered being non-collection resources
            by WebDAV. Any node replying true to Node.isNodeType() for one of the
            listed types is considered a non-collection resource. Otherwise the respective
            node is considered a collection resource. (collection.types)
          "$ref": "#/components/schemas/configNodePropertyArray"
        filter.prefixes:
          description: A list of namespace prefixes indicating JCR items filtered
            from being reported as collection members or properties. The default list
            includes jcr and rep (Jackrabbit internal namespace prefix) items. Do
            not modify this setting unless you know exactly what you are doing. (filter.prefixes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        filter.types:
          description: Nodetype names to be used to filter child nodes. A child node
            can be filtered if the declaring nodetype of its definition is one of
            the nodetype names specified in the nodetypes Element. E.g. defining rep:root
            as filtered nodetype whould result in jcr:system being hidden but no other
            child node of the root node, since those are defined by the nodetype nt:unstructered.
            The default is empty. Do not modify this setting unless you know exactly
            what you are doing. (filter.types)
          "$ref": "#/components/schemas/configNodePropertyString"
        filter.uris:
          description: A list of namespace URIs indicating JCR items filtered from
            being reported as collection members or properties. The default list is
            empty. Do not modify this setting unless you know exactly what you are
            doing. (filter.uris)
          "$ref": "#/components/schemas/configNodePropertyString"
        type.collections:
          description: The JCR Primary Node Type to assign to nodes created to reflect
            WebDAV collections. The default value is sling:Folder. You may name any
            primary node type here, provided it allows the creation of nodes of this
            type and the defined Non-Collection Primary Type below it. (type.collections)
          "$ref": "#/components/schemas/configNodePropertyString"
        type.noncollections:
          description: The JCR Primary Node Type to assign to nodes created to reflect
            WebDAV non-collection resources. The default value is nt:file. You may
            name any primary node type here, provided the node type is allowed to
            be created below nodes of the type defined for the Collection Primary
            Type and that a child node with the name "jcr:content" may be created
            below the non-collection resource whose type is defined by the Content
            Primary Type. (type.noncollections)
          "$ref": "#/components/schemas/configNodePropertyString"
        type.content:
          description: 'The JCR Primary Node Type to assign to the jcr:content child
            node of a WebDAV non-collection resource. The default value is nt:resource.
            You may name any primary node type here, provided the node type is allowed
            to be created as the jcr:content child node of the node type defined by
            the Non-Collection Primary Type. In addition the node type must allow
            at least the following properties: jcr:data (binary), jcr:lastModified
            (date), and jcr:mimeType (string). (type.content)'
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingJmxProviderImplJMXResourceProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJmxProviderImplJMXResourceProviderProperties"
    orgApacheSlingJmxProviderImplJMXResourceProviderProperties:
      type: object
      properties:
        provider.roots:
          description: The mount point of the JMX beans (provider.roots)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingModelsImplModelAdapterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingModelsImplModelAdapterFactoryProperties"
    orgApacheSlingModelsImplModelAdapterFactoryProperties:
      type: object
      properties:
        osgi.http.whiteboard.listener:
          description: Description for osgi.http.whiteboard.listener (osgi.http.whiteboard.listener)
          "$ref": "#/components/schemas/configNodePropertyString"
        osgi.http.whiteboard.context.select:
          description: Description for osgi.http.whiteboard.context.select (osgi.http.whiteboard.context.select)
          "$ref": "#/components/schemas/configNodePropertyString"
        max.recursion.depth:
          description: Maximum depth adaptation will be attempted. (max.recursion.depth)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cleanup.job.period:
          description: Period at which OSGi service references from ThreadLocals will
            be cleaned up. (cleanup.job.period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingModelsJacksonexporterImplResourceModuleProviderProperties"
    orgApacheSlingModelsJacksonexporterImplResourceModuleProviderProperties:
      type: object
      properties:
        max.recursion.levels:
          description: Maximum number of levels of child resources which will be exported
            for each resource. Specify -1 for infinite. (max.recursion.levels)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingResourcemergerImplMergedResourceProviderFactoryProperties"
    orgApacheSlingResourcemergerImplMergedResourceProviderFactoryProperties:
      type: object
      properties:
        merge.root:
          description: The mount point of merged resources (merge.root)
          "$ref": "#/components/schemas/configNodePropertyString"
        merge.readOnly:
          description: Specifies if the resources are read-only or can be modified.
            (merge.readOnly)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingResourcemergerPickerOverridingInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingResourcemergerPickerOverridingProperties"
        additionalProperties:
          type: string
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingResourcemergerPickerOverridingProperties:
      type: object
      properties:
        merge.root:
          description: Root path at which merged resources will be available. (merge.root)
          "$ref": "#/components/schemas/configNodePropertyString"
        merge.readOnly:
          description: Specifies if the resources are read-only or can be modified.
            (merge.readOnly)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingScriptingCoreImplScriptCacheImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingScriptingCoreImplScriptCacheImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingScriptingCoreImplScriptCacheImplProperties:
      type: object
      properties:
        org.apache.sling.scripting.cache.size:
          description: The Cache Size defines the maximum number of compiled script
            references that will be stored in the cache's internal map. (org.apache.sling.scripting.cache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.sling.scripting.cache.additional_extensions:
          description: Scripts from the search paths with these extensions will also
            be monitored so that changes to them will clean the cache if the cache
            contains them. (org.apache.sling.scripting.cache.additional_extensions)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderImplProperties"
    orgApacheSlingScriptingCoreImplScriptingResourceResolverProviderImplProperties:
      type: object
      properties:
        log.stacktrace.onclose:
          description: If enabled, all calls to ResourceResolver#close for the request-scoped
            resource resolvers will be logged with the full stack trace. Don't enable
            this setting on production systems. (log.stacktrace.onclose)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties:
      type: object
      properties:
        java.classdebuginfo:
          description: Should the class file be compiled with debugging information?
            true or false, default true. (java.classdebuginfo)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        java.javaEncoding:
          description: " (java.javaEncoding)"
          "$ref": "#/components/schemas/configNodePropertyString"
        java.compilerSourceVM:
          description: Java Specification to be used to read the source files. If
            left empty or the value "auto" is specified, the current vm version will
            be used. (java.compilerSourceVM)
          "$ref": "#/components/schemas/configNodePropertyString"
        java.compilerTargetVM:
          description: Target Java version for compilation. If left empty or the value
            "auto" is specified, the current vm version will be used. (java.compilerTargetVM)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFactoryProperties"
    orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFactoryProperties:
      type: object
      properties:
        org.apache.sling.scripting.javascript.rhino.optLevel:
          description: The level of optimization for the bytecode generated by Rhino.
            Provide values between 0-9, 9 being the most aggressive level of optimization.
            A value of -1 will run scripts in interpreted mode. (org.apache.sling.scripting.javascript.rhino.optLevel)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingScriptingJspJspScriptEngineFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingScriptingJspJspScriptEngineFactoryProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingScriptingJspJspScriptEngineFactoryProperties:
      type: object
      properties:
        jasper.compilerTargetVM:
          description: The target JVM version for the compiled classes. If left empty,
            the default version, 1.6., is used. If the value "auto" is used, the current
            vm version will be used. (jasper.compilerTargetVM)
          "$ref": "#/components/schemas/configNodePropertyString"
        jasper.compilerSourceVM:
          description: The JVM version for the java/JSP source. If left empty, the
            default version, 1.6., is used. If the value "auto" is used, the current
            vm version will be used. (jasper.compilerSourceVM)
          "$ref": "#/components/schemas/configNodePropertyString"
        jasper.classdebuginfo:
          description: Should the class file be compiled with debugging information?
            true or false, default true. (jasper.classdebuginfo)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        jasper.enablePooling:
          description: Determines whether tag handler pooling is enabled. true or
            false, default true. (jasper.enablePooling)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        jasper.ieClassId:
          description: The class-id value to be sent to Internet Explorer when using
            <jsp:plugin> tags. Default clsid:8AD9C840-044E-11D1-B3E9-00805F499D93.
            (jasper.ieClassId)
          "$ref": "#/components/schemas/configNodePropertyString"
        jasper.genStringAsCharArray:
          description: Should text strings be generated as char arrays, to improve
            performance in some cases? Default false. (jasper.genStringAsCharArray)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        jasper.keepgenerated:
          description: Should we keep the generated Java source code for each page
            instead of deleting it? true or false, default true. (jasper.keepgenerated)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        jasper.mappedfile:
          description: Should we generate static content with one print statement
            per input line, to ease debugging? true or false, default true. (jasper.mappedfile)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        jasper.trimSpaces:
          description: Should white spaces in template text between actions or directives
            be trimmed ?, default false. (jasper.trimSpaces)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        jasper.displaySourceFragments:
          description: Should we include a source fragment in exception messages,
            which could be displayed to the developer (jasper.displaySourceFragments)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        default.is.session:
          description: Should a session be created by default for every JSP page?
            Warning - this behavior may produce unintended results and changing it
            will not impact previously-compiled pages. (default.is.session)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProviderProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProviderProperties:
      type: object
      properties:
        org.apache.sling.scripting.sightly.js.bindings:
          description: Script factories to load in the bindings map. The entries should
            be in the form 'namespace:/path/from/repository'. If the factories depend
            on each other, add them in the correct order of their dependency chain.
            (org.apache.sling.scripting.sightly.js.bindings)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingSecurityImplContentDispositionFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingSecurityImplContentDispositionFilterProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingSecurityImplContentDispositionFilterProperties:
      type: object
      properties:
        sling.content.disposition.paths:
          description: 'These resource paths are covered by the filter. Each entry
            is of the form ''<path> [ : <excluded content type> {,<excluded content
            type>} ]''. Invalid entries are logged and ignored. <path> must be an
            absolute path and may contain a wildcard (''*'') at the end, to match
            every resource path with the given path prefix. (sling.content.disposition.paths)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.content.disposition.excluded.paths:
          description: These resource paths are excluded from the filter. Each resource
            path must be given as absolute and fully qualified path. Prefix matching/wildcards
            are not supported. (sling.content.disposition.excluded.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        sling.content.disposition.all.paths:
          description: This flag controls whether to enable this filter for all paths,
            except for the excluded paths defined by sling.content.disposition.excluded.paths.
            Setting this to 'true' leads to ignoring 'sling.content.disposition.path'.
            (sling.content.disposition.all.paths)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingSecurityImplReferrerFilterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingSecurityImplReferrerFilterProperties"
    orgApacheSlingSecurityImplReferrerFilterProperties:
      type: object
      properties:
        allow.empty:
          description: Allow an empty or missing referrer (allow.empty)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        allow.hosts:
          description: List of allowed hosts for the referrer which are added to the
            list of default hosts (allow.hosts)
          "$ref": "#/components/schemas/configNodePropertyArray"
        allow.hosts.regexp:
          description: List of allowed regexp for the referrer (allow.hosts.regexp)
          "$ref": "#/components/schemas/configNodePropertyArray"
        filter.methods:
          description: These methods are filtered by the filter (filter.methods)
          "$ref": "#/components/schemas/configNodePropertyArray"
        exclude.agents.regexp:
          description: List of regexp for user agents not to check the referrer (exclude.agents.regexp)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingServiceusermappingImplServiceUserMapperImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingServiceusermappingImplServiceUserMapperImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingServiceusermappingImplServiceUserMapperImplProperties:
      type: object
      properties:
        user.mapping:
          description: Provides mappings from service name to user names. Each entry
            is of the form 'bundleId [ ":" subServiceName ] "=" userName' | "[" principalNames
            "]" where bundleId and subServiceName identify the service and userName
            defines the name of the user to provide to the service; alternative the
            the mappingcan define a comma separated set of principalNames instead
            of the userName. Invalid entries are logged and ignored. (user.mapping)
          "$ref": "#/components/schemas/configNodePropertyArray"
        user.default:
          description: The name of the user to use as the default if no service mapping
            applies. If this property is missing or empty no default user is defined.
            (user.default)
          "$ref": "#/components/schemas/configNodePropertyString"
        user.enable.default.mapping:
          description: If enabled and no mapping for a requested service user exists
            and no  default user is defined, a default mapping is applied which uses
            the service user "serviceuser--" + bundleId + ["--" + subServiceName]
            (user.enable.default.mapping)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        require.validation:
          description: 
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingServletsGetDefaultGetServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingServletsGetDefaultGetServletProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingServletsGetDefaultGetServletProperties:
      type: object
      properties:
        aliases:
          description: The aliases can be used to map several extensions to a single
            servlet. For instance "xml:pdf,rtf" maps the extensions ".pdf" and ".rtf"
            to the servlet helper handling the ".xml" extension. (aliases)
          "$ref": "#/components/schemas/configNodePropertyArray"
        index:
          description: Controls whether a simple directory index is rendered for a
            directory request. A directory request is a request to a resource with
            a trailing slash (/) character, for example http://host/apps/. If none
            of the index resources exists, the default GET servlet may automatically
            render an index listing of the child resources if this option is checked,
            which is the default. If this option is not checked, the request to the
            resource is forbidden and results in a status 403/FORBIDDEN. This configuration
            corresponds to the "Index" option of the Options directive of Apache HTTP
            Server (httpd). (index)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        index.files:
          description: List of child resources to be considered for rendering  the
            index of a "directory". The default value is [ "index", "index.html" ].  Each
            entry in the list is checked and the first entry found is included to  render
            the index. If an entry is selected, which has not extension (for  example
            the "index" resource), the extension ".html" is appended for the  inclusion
            to indicate the desired text/html rendering. If the resource name  has
            an extension (as in "index.html"), no additional extension is appended  for
            the inclusion. This configuration corresponds to the <DirectoryIndex>  directive
            of Apache HTTP Server (httpd). (index.files)
          "$ref": "#/components/schemas/configNodePropertyArray"
        enable.html:
          description: Whether the renderer for HTML of the default GET servlet is
            enabled or not. By default the HTML renderer is enabled. (enable.html)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        enable.json:
          description: Whether the renderer for JSON of the default GET servlet is
            enabled or not. By default the JSON renderer is enabled. (enable.json)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        enable.txt:
          description: Whether the renderer for plain text of the default GET servlet
            is enabled or not. By default the plain text renderer is enabled. (enable.txt)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        enable.xml:
          description: Whether the renderer for XML of the default GET servlet is
            enabled or not. By default the XML renderer is enabled. (enable.xml)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        json.maximumresults:
          description: The maximum number of resources that should be returned when
            doing a node.5.json or node.infinity.json. In JSON terms this basically
            means the number of Objects to return. Default value is 200. (json.maximumresults)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        ecmaSuport:
          description: Enable legacy Sling ECMA format for dates (ecmaSuport)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingServletsGetImplVersionVersionInfoServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingServletsGetImplVersionVersionInfoServletProperties"
    orgApacheSlingServletsGetImplVersionVersionInfoServletProperties:
      type: object
      properties:
        sling.servlet.selectors:
          description: List of selectors this servlet handles to display the versions
            (sling.servlet.selectors)
          "$ref": "#/components/schemas/configNodePropertyArray"
        ecmaSuport:
          description: Enable legacy Sling ECMA format for dates (ecmaSuport)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties"
    orgApacheSlingServletsPostImplHelperChunkCleanUpTaskProperties:
      type: object
      properties:
        scheduler.expression:
          description: Cron expression scheudling this job. Default is hourly 17m23s
            after the hour. See http://www.docjar.com/docs/api/org/quartz/CronTrigger.html
            for a description of the format for this value. (scheduler.expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        scheduler.concurrent:
          description: 'Allow Chunk Cleanup Task to run concurrently (default: false).
            (scheduler.concurrent)'
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        chunk.cleanup.age:
          description: The chunk's age in minutes before it is considered for clean
            up. (chunk.cleanup.age)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingServletsPostImplSlingPostServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingServletsPostImplSlingPostServletProperties"
    orgApacheSlingServletsPostImplSlingPostServletProperties:
      type: object
      properties:
        servlet.post.dateFormats:
          description: List SimpleDateFormat strings for date formats supported for
            parsing from request input to data fields. The special format "ISO8601"
            (without the quotes) can be used to designate strict ISO-8601 parser which
            is able to parse strings generated by the Property.getString() method
            for Date properties. The default value is [ "EEE MMM dd yyyy HH:mm:ss
            'GMT'Z", "ISO8601", "yyyy-MM-dd'T'HH:mm:ss.SSSZ", "yyyy-MM-dd'T'HH:mm:ss",
            "yyyy-MM-dd", "dd.MM.yyyy HH:mm:ss", "dd.MM.yyyy" ]. (servlet.post.dateFormats)
          "$ref": "#/components/schemas/configNodePropertyArray"
        servlet.post.nodeNameHints:
          description: The list of properties whose values may be used to derive a
            name for newly created nodes. When handling a request to create a new
            node, the name of the node is automatically generated if the request URL
            ends with a star ("*") or a slash ("/"). In this case the request parameters
            listed in this configuration value may be used to create the name. Default
            value is [ "title", "jcr:title", "name", "description", "jcr:description",
            "abstract", "text", "jcr:text" ]. (servlet.post.nodeNameHints)
          "$ref": "#/components/schemas/configNodePropertyArray"
        servlet.post.nodeNameMaxLength:
          description: Maximum number of characters to use for automatically generated
            node names. The default value is 20. Note, that actual node names may
            be generated with at most 4 more characters if the numeric suffixes must
            be appended to make the name unique. (servlet.post.nodeNameMaxLength)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        servlet.post.checkinNewVersionableNodes:
          description: If true, newly created versionable nodes or non-versionable
            nodes which are made versionable by the addition of the mix:versionable
            mixin are checked in. By default, false. (servlet.post.checkinNewVersionableNodes)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        servlet.post.autoCheckout:
          description: If true, checked in nodes are checked out when necessary. By
            default, false. (servlet.post.autoCheckout)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        servlet.post.autoCheckin:
          description: If true, nodes which are checked out by the post servlet are
            checked in. By default, true. (servlet.post.autoCheckin)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        servlet.post.ignorePattern:
          description: Configures a regular expression pattern to select request parameters
            which should be ignored when writing content to the repository. By default
            this is "j_.*" thus ignoring all request parameters starting with j_ such
            as j_username. (servlet.post.ignorePattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingServletsResolverSlingServletResolverInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingServletsResolverSlingServletResolverProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingServletsResolverSlingServletResolverProperties:
      type: object
      properties:
        servletresolver.servletRoot:
          description: The default root path assumed when registering a servlet whose
            servlet registration properties define a relative resource type/path.
            It can either be a string starting with "/" (specifying a path prefix
            to be used) or a number which specifies the resource resolver's search
            path entry index. The default value is 0 (usually stands for "/apps" in
            the search paths). The number can be -1 which always points to the last
            search path entry. (servletresolver.servletRoot)
          "$ref": "#/components/schemas/configNodePropertyString"
        servletresolver.cacheSize:
          description: This property configures the size of the cache used for script
            resolution. A value lower than 5 disables the cache. (servletresolver.cacheSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        servletresolver.paths:
          description: The paths to search for executable scripts. If no path is configured
            this is treated like the default (/ = root) which allows to execute all
            scripts. By configuring some paths the execution of scripts can be limited.
            If a configured value ends with a slash, the whole sub tree is allowed.
            Without a slash an exact matching script is allowed. (servletresolver.paths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        servletresolver.defaultExtensions:
          description: The list of extensions for which the default behavior will
            be used. This means that the last path segment of the resource type can
            be used as the script name. (servletresolver.defaultExtensions)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingSettingsImplSlingSettingsServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingSettingsImplSlingSettingsServiceImplProperties"
    orgApacheSlingSettingsImplSlingSettingsServiceImplProperties:
      type: object
      properties:
        sling.name:
          description: A human readable name for the current instance. (sling.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.description:
          description: A human readable description for the current instance. (sling.description)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingStartupfilterImplStartupFilterImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingStartupfilterImplStartupFilterImplProperties"
    orgApacheSlingStartupfilterImplStartupFilterImplProperties:
      type: object
      properties:
        active.by.default:
          description: If true, the filter is active as soon as the service starts.
            (active.by.default)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        default.message:
          description: The default message is returned in the HHTTP response of the
            filter, followed by any messages supplied by StartupInfoProvider services.
            (default.message)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingTenantInternalTenantProviderImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingTenantInternalTenantProviderImplProperties"
    orgApacheSlingTenantInternalTenantProviderImplProperties:
      type: object
      properties:
        tenant.root:
          description: Defines tenants root path (tenant.root)
          "$ref": "#/components/schemas/configNodePropertyString"
        tenant.path.matcher:
          description: Defines tenants path matcher i.e. /content/sample/([^/]+)/*,
            used while resolving path to tenant (tenant.path.matcher)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingTracerInternalLogTracerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingTracerInternalLogTracerProperties"
    orgApacheSlingTracerInternalLogTracerProperties:
      type: object
      properties:
        tracerSets:
          description: 'Default list of tracer sets configured. Tracer Set config
            confirms to following format. <set name> : <logger name>;level=<level
            name>, other loggers (tracerSets)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        enabled:
          description: Enable the Tracer (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        servletEnabled:
          description: Enable the Tracer Servlet. This servlet is required for the
            tracer recording feature to work and provides access to the json dump
            of the recording performed (servletEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        recordingCacheSizeInMB:
          description: Recording cache size in MB which would be used to temporary
            cache the recording data (recordingCacheSizeInMB)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        recordingCacheDurationInSecs:
          description: Time in seconds upto which the recording data would be held
            in memory before expiry (recordingCacheDurationInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        recordingCompressionEnabled:
          description: Enable compression for recoding held in memory (recordingCompressionEnabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        gzipResponse:
          description: If enabled the response sent would be compressed (gzipResponse)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingXssImplXSSFilterImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingXssImplXSSFilterImplProperties"
        bundle_location:
          type: string
        service_location:
          type: string
    orgApacheSlingXssImplXSSFilterImplProperties:
      type: object
      properties:
        policyPath:
          description: The path to the AntiSamy policy file (absolute or relative
            to the configured search paths). (policyPath)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqAuditPurgeDamInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqAuditPurgeDamProperties"
    comAdobeCqAuditPurgeDamProperties:
      type: object
      properties:
        auditlog.rule.name:
          description: The name of the Audit Policy Rule (auditlog.rule.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        auditlog.rule.contentpath:
          description: The path of the content the rule will apply to (auditlog.rule.contentpath)
          "$ref": "#/components/schemas/configNodePropertyString"
        auditlog.rule.minimumage:
          description: How long the audit logs needs to be kept (in days) (auditlog.rule.minimumage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        auditlog.rule.types:
          description: The audit log DAM event types (auditlog.rule.types)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comAdobeCqAuditPurgePagesInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqAuditPurgePagesProperties"
    comAdobeCqAuditPurgePagesProperties:
      type: object
      properties:
        auditlog.rule.name:
          description: The name of the Audit Policy Rule (auditlog.rule.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        auditlog.rule.contentpath:
          description: The path of the content the rule will apply to (auditlog.rule.contentpath)
          "$ref": "#/components/schemas/configNodePropertyString"
        auditlog.rule.minimumage:
          description: How long the audit logs needs to be kept (in days) (auditlog.rule.minimumage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        auditlog.rule.types:
          description: The audit log Pages event types (auditlog.rule.types)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comAdobeCqAuditPurgeReplicationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqAuditPurgeReplicationProperties"
    comAdobeCqAuditPurgeReplicationProperties:
      type: object
      properties:
        auditlog.rule.name:
          description: The name of the Audit Policy Rule (auditlog.rule.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        auditlog.rule.contentpath:
          description: The path of the content the rule will apply to (auditlog.rule.contentpath)
          "$ref": "#/components/schemas/configNodePropertyString"
        auditlog.rule.minimumage:
          description: How long the audit logs needs to be kept (in days) (auditlog.rule.minimumage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        auditlog.rule.types:
          description: The audit log Replication event types (auditlog.rule.types)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    comAdobeCqDamCfmImplComponentComponentConfigImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqDamCfmImplComponentComponentConfigImplProperties"
    comAdobeCqDamCfmImplComponentComponentConfigImplProperties:
      type: object
      properties:
        dam.cfm.component.resourceType:
          description: The resource type of the component (used for rendering a Content
            Fragment). (dam.cfm.component.resourceType)
          "$ref": "#/components/schemas/configNodePropertyString"
        dam.cfm.component.fileReferenceProp:
          description: The property that holds the reference to the Content Fragment.
            (dam.cfm.component.fileReferenceProp)
          "$ref": "#/components/schemas/configNodePropertyString"
        dam.cfm.component.elementsProp:
          description: The property that holds the name(s) of the element(s) to be
            rendered. (dam.cfm.component.elementsProp)
          "$ref": "#/components/schemas/configNodePropertyString"
        dam.cfm.component.variationProp:
          description: The property that holds the name of the variation to be rendered.
            (dam.cfm.component.variationProp)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqHcContentPackagesHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqHcContentPackagesHealthCheckProperties"
    comAdobeCqHcContentPackagesHealthCheckProperties:
      type: object
      properties:
        hc.name:
          description: Name of this Health Check service, used for example to identify
            the corresponding JMX MBean. (hc.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        hc.tags:
          description: List of tags for this Health Check service, used to select
            subsets of Health Check services for execution. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        hc.mbean.name:
          description: Name of the MBean to create for this Health Check. (hc.mbean.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        package.names:
          description: The names of the content packages to check (package.names)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqProjectsPurgeSchedulerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqProjectsPurgeSchedulerProperties"
    comAdobeCqProjectsPurgeSchedulerProperties:
      type: object
      properties:
        scheduledpurge.name:
          description: Enter a descriptive name for this scheduled purge (scheduledpurge.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        scheduledpurge.purgeActive:
          description: Check if active projects to be included in purge. Default is
            to purge inactive only. (scheduledpurge.purgeActive)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        scheduledpurge.templates:
          description: Enter project types (templates) for projects to purge. Leave
            blank for all projects (scheduledpurge.templates)
          "$ref": "#/components/schemas/configNodePropertyArray"
        scheduledpurge.purgeGroups:
          description: If set, project groups will be deleted. (scheduledpurge.purgeGroups)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        scheduledpurge.purgeAssets:
          description: If set, project assets will be deleted. (scheduledpurge.purgeAssets)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        scheduledpurge.terminateRunningWorkflows:
          description: If set, running workflows for purged project will be terminated.
            (scheduledpurge.terminateRunningWorkflows)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        scheduledpurge.daysold:
          description: Enter how old (in days) the projects are before they are purged.
            (scheduledpurge.daysold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        scheduledpurge.saveThreshold:
          description: Save every threshold purges. (scheduledpurge.saveThreshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImplProperties"
    comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImplProperties:
      type: object
      properties:
        email.name:
          description: Configuration name (email.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        email.createPostFromReply:
          description: If enabled, tracked id is added to the subject or reply-to
            header of notification email. (email.createPostFromReply)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        email.addCommentIdTo:
          description: If "Create post from reply email" is enabled, tracked id will
            be added to either subject line or reply-to header. (email.addCommentIdTo)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        email.subjectMaximumLength:
          description: If tracker id is added to subject line, this is the maximum
            length of subject excluding tracked id after which it will be trimmed.
            Note that this should be as small as possible to avoid tracked id information
            from being lost. (email.subjectMaximumLength)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        email.replyToAddress:
          description: Email address which is used as "Reply-To" email address (email.replyToAddress)
          "$ref": "#/components/schemas/configNodePropertyString"
        email.replyToDelimiter:
          description: If tracker id is added to Reply-to header, this delimiter will
            be used (email.replyToDelimiter)
          "$ref": "#/components/schemas/configNodePropertyString"
        email.trackerIdPrefixInSubject:
          description: If tracker id is added to subject line, this prefix will be
            used (email.trackerIdPrefixInSubject)
          "$ref": "#/components/schemas/configNodePropertyString"
        email.trackerIdPrefixInBody:
          description: If tracker id is added to message body, this prefix will be
            used (email.trackerIdPrefixInBody)
          "$ref": "#/components/schemas/configNodePropertyString"
        email.asHTML:
          description: If enabled, Content-Type of email will be set as "text/html;charset=utf-8"
            (email.asHTML)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        email.defaultUserName:
          description: This name will be used for no name users (email.defaultUserName)
          "$ref": "#/components/schemas/configNodePropertyString"
        email.templates.rootPath:
          description: The email is built using template stored at this root path.
            (email.templates.rootPath)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryProperties"
    comAdobeCqSocialDatastoreAsImplASResourceProviderFactoryProperties:
      type: object
      properties:
        version.id:
          description: version.id.description (version.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        cache.on:
          description: uncheck to turn cache off for reads (cache.on)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        concurrency.level:
          description: set the concurrency level of the cache (concurrency.level)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.start.size:
          description: initial cache size of the cache (cache.start.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.ttl:
          description: 1000 equals 1 second (cache.ttl)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.size:
          description: max number of cache entries to store (cache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        time.limit:
          description: log a warning message if response from cloud storage server
            is greater than this milliseconds (time.limit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryProperties"
    comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryProperties:
      type: object
      properties:
        solr.zk.timeout:
          description: the timeout to talk to the zookeeper ensemble in ms (solr.zk.timeout)
          "$ref": "#/components/schemas/configNodePropertyString"
        solr.commit:
          description: an override to the solr autocommit interval. (solr.commit)
          "$ref": "#/components/schemas/configNodePropertyString"
        cache.on:
          description: uncheck to turn cache off for reads (cache.on)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        concurrency.level:
          description: set the concurrency level of the cache (concurrency.level)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.start.size:
          description: initial cache size of the cache (cache.start.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.ttl:
          description: 1000 equals 1 second (cache.ttl)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.size:
          description: max number of cache entries to store (cache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactoryProperties"
    comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactoryProperties:
      type: object
      properties:
        solr.zk.timeout:
          description: the timeout to talk to the zookeeper ensemble in ms (solr.zk.timeout)
          "$ref": "#/components/schemas/configNodePropertyString"
        solr.commit:
          description: an override to the solr autocommit interval. (solr.commit)
          "$ref": "#/components/schemas/configNodePropertyString"
        cache.on:
          description: uncheck to turn cache off for reads (cache.on)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        concurrency.level:
          description: set the concurrency level of the cache (concurrency.level)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.start.size:
          description: initial cache size of the cache (cache.start.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.ttl:
          description: 1000 equals 1 second (cache.ttl)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cache.size:
          description: max number of cache entries to store (cache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationsServiceImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationsServiceImplProperties"
    comAdobeCqSocialMessagingClientEndpointsImplMessagingOperationsServiceImplProperties:
      type: object
      properties:
        message.properties:
          description: Message Fields Whitelist (message.properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
        messageBoxSizeLimit:
          description: Size limit per user in bytes, -1 for unlimited size (messageBoxSizeLimit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        messageCountLimit:
          description: Total message count limit per user, -1 for unlimited count
            (messageCountLimit)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        notifyFailure:
          description: Notify sender if message delivery fails to some recipients
            (notifyFailure)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        failureMessageFrom:
          description: id/name in from field of failure delivery message (failureMessageFrom)
          "$ref": "#/components/schemas/configNodePropertyString"
        failureTemplatePath:
          description: Absolute path to the failure message template root (failureTemplatePath)
          "$ref": "#/components/schemas/configNodePropertyString"
        maxRetries:
          description: Maximum no of retries (maxRetries)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        minWaitBetweenRetries:
          description: Wait between subsequent retries (minWaitBetweenRetries)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        countUpdatePoolSize:
          description: Number of concurrent threads for count update (countUpdatePoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        inbox.path:
          description: Path of inbox (inbox.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        sentitems.path:
          description: Path of sent items (sentitems.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        supportAttachments:
          description: Support message attachments (supportAttachments)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        supportGroupMessaging:
          description: Support messaging to groups (supportGroupMessaging)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        maxTotalRecipients:
          description: Maximum no of total recipients to which message can be sent
            at a time (maxTotalRecipients)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        batchSize:
          description: Batch size (batchSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxTotalAttachmentSize:
          description: Maximum total size of all the attachments (maxTotalAttachmentSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        attachmentTypeBlacklist:
          description: Black list of attachment types (attachmentTypeBlacklist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        allowedAttachmentTypes:
          description: Allowed types of attachment (allowedAttachmentTypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        serviceSelector:
          description: Service selector (serviceSelector)
          "$ref": "#/components/schemas/configNodePropertyString"
        fieldWhitelist:
          description: Field whitelist (fieldWhitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqSocialSrpImplSocialSolrConnectorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialSrpImplSocialSolrConnectorProperties"
    comAdobeCqSocialSrpImplSocialSolrConnectorProperties:
      type: object
      properties:
        srp.type:
          description: Specify the type of social SRP (srp.type)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqSocialSyncImplDiffChangesObserverInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqSocialSyncImplDiffChangesObserverProperties"
    comAdobeCqSocialSyncImplDiffChangesObserverProperties:
      type: object
      properties:
        enabled:
          description: enabled.description (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        agentName:
          description: agentName.description (agentName)
          "$ref": "#/components/schemas/configNodePropertyString"
        diffPath:
          description: diffPath.description (diffPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        propertyNames:
          description: propertyNames.description (propertyNames)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactoryAmendedInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactoryAmendedProperties"
    comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactoryAmendedProperties:
      type: object
      properties:
        resource.types:
          description: List of RTE based resource types for which XSS filter should
            be enabled. (resource.types)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties"
    comAdobeCqUpgradesCleanupImplUpgradeContentCleanupProperties:
      type: object
      properties:
        delete.path.regexps:
          description: Regular expressions that define which paths are allowed to
            be deleted (delete.path.regexps)
          "$ref": "#/components/schemas/configNodePropertyArray"
        delete.sql2.query:
          description: SQL2 query that selects candidates for deletion (delete.sql2.query)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupProperties"
    comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupProperties:
      type: object
      properties:
        delete.name.regexps:
          description: Regular expressions that define which paths are allowed to
            be deleted (delete.name.regexps)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties"
    comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplProperties:
      type: object
      properties:
        auth.ims.client.secret:
          description: Adobe IMS requires a valid client secret to be sent in the
            access token request. (auth.ims.client.secret)
          "$ref": "#/components/schemas/configNodePropertyString"
        customizer.type:
          description: This name should uniquely identify the request customizer type.
            (customizer.type)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthOauthAccesstokenProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthAccesstokenProviderProperties"
    comAdobeGraniteAuthOauthAccesstokenProviderProperties:
      type: object
      properties:
        name:
          description: The name of the AccessTokenProvider (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.token.provider.title:
          description: Title used in configuration wizards (auth.token.provider.title)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.token.provider.default.claims:
          description: 'Default JWT Claims in format: <claim-key>:<claim-value> (e.g.
            ''aud:"service.audience.com"''). Note: the string values must be provided
            in double quotes! (auth.token.provider.default.claims)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        auth.token.provider.endpoint:
          description: Authorization server API endpoint (e.g. gateway-api.omniture.com)
            (auth.token.provider.endpoint)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.access.token.request:
          description: Format to build the access token request URL against the configured
            end point. The '%s' in the format is replaced by the end point. (auth.access.token.request)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.token.provider.keypair.alias:
          description: Alias to get the key pair from the user KeyStore (auth.token.provider.keypair.alias)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.token.provider.conn.timeout:
          description: The timeout until a connection is established to the authorization
            server in milliseconds (auth.token.provider.conn.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        auth.token.provider.so.timeout:
          description: The socket timeout which is the timeout for waiting for data
            from the authorization server in milliseconds (auth.token.provider.so.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        auth.token.provider.client.id:
          description: Client Identifier for the authorization server (auth.token.provider.client.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.token.provider.scope:
          description: The scope passed as request parameter to the authorization
            server (auth.token.provider.scope)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.token.provider.reuse.access.token:
          description: If checked, the provider caches the access tokens as long as
            they are valid (based on expiration claim) and only obtain a new access
            token from the authorization server when invalid. (auth.token.provider.reuse.access.token)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        auth.token.provider.relaxed.ssl:
          description: Enable Relaxed SSL (allow self signed certificates) for communication
            with a test authorization server. This configuration MUST BE DISABLED
            in production. (auth.token.provider.relaxed.ssl)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        token.request.customizer.type:
          description: The name for referencing the token request customizer implementation
            to use. e.g. use 'default' to bind to services provided by the default
            implementation. (token.request.customizer.type)
          "$ref": "#/components/schemas/configNodePropertyString"
        auth.token.validator.type:
          description: The name for referencing the token validator implementation
            to use. e.g. use 'default' to bind to services provided by the default
            implementation. (auth.token.validator.type)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteAuthOauthProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthOauthProviderProperties"
    comAdobeGraniteAuthOauthProviderProperties:
      type: object
      properties:
        oauth.config.id:
          description: OAuth Configuration IDs must be unique. This ID will be used
            to determine which config will be used for a particular oauth request
            with the "configid" request parameter. (oauth.config.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.client.id:
          description: Application Client ID provided by the OAuth Provider. For OAuth
            1.0a this is called the Consumer Key. This is required for the Authentication
            Handler to authenticate with OAuth for a specific Provider. (oauth.client.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.client.secret:
          description: Application Client Secret provided by the OAuth Provider. For
            OAuth 1.0a this is called the Consumer Secret. This is required for the
            Authentication Handler to authenticate with OAuth for a specific Provider.
            (oauth.client.secret)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.scope:
          description: Scope for the authorization request to hand over to the provider
            (oauth.scope)
          "$ref": "#/components/schemas/configNodePropertyArray"
        oauth.config.provider.id:
          description: Assign the Provider ID used to match a ProviderConfig to a
            Provider (oauth.config.provider.id)
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.create.users:
          description: Whether to automatically create users if there is no matching
            CRX user for an OAuth authenticated users. By default this is not enabled.
            Handle with care. (oauth.create.users)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        oauth.userid.property:
          description: The name of the property containing the user ID to use when
            automatically creating users. If this is left empty or invalid, user IDs
            will be generated in the format <provider prefix>-<external user id>.
            (oauth.userid.property)
          "$ref": "#/components/schemas/configNodePropertyString"
        force.strict.username.matching:
          description: If enabled a strict username matching is applied, so two users
            are considered to be the same only and only if they have the same mapped
            OAuth username (and not only the same OAuthId property). By default this
            is not enabled. Handle with care. (force.strict.username.matching)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        oauth.encode.userids:
          description: Base.encode64 generated user ids for created users. (oauth.encode.userids)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        oauth.hash.userids:
          description: SHA-256 generated user ids for created users. (oauth.hash.userids)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        oauth.callBackUrl:
          description: 'URL configured with the OAuth providers to redirect the client
            back. Use a relative url to use the host of the original request. Leave
            empty to use the originally requested URL instead. Suffix "/callback/j_security_check"
            is automatically appended to this url. Note: the domain for the callback
            must be registered at the provider side (e.g. Facebook or Twitter). (oauth.callBackUrl)'
          "$ref": "#/components/schemas/configNodePropertyString"
        oauth.access.token.persist:
          description: Whether to save Oauth access token in users profile. If enabled,
            the token will be stored in encrypted form in the property specified by
            Provider.getAccessTokenPropertyPath(). (oauth.access.token.persist)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        oauth.access.token.persist.cookie:
          description: Whether to save Oauth access token in the cookies. If enabled,
            the token will be stored in encrypted form in the cookies (with the cookie
            name being the client Id) (oauth.access.token.persist.cookie)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        oauth.csrf.state.protection:
          description: Enable the Cross-Site Request Forgery state protection as per
            http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-10.12 (oauth.csrf.state.protection)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        oauth.redirect.request.params:
          description: Enabling Persisting of Original Request Parameters in the Callback
            URL formed during Authorization so that it can be used as a means to redirect
            the user to original resource on successful authentication (oauth.redirect.request.params)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        oauth.config.siblings.allow:
          description: Enabling siblings configurations support to allow other configurations
            for the Provider ID (oauth.config.provider.id) to be authenticated. (oauth.config.siblings.allow)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties"
    comAdobeGraniteAuthSamlSamlAuthenticationHandlerProperties:
      type: object
      properties:
        path:
          description: Repository path for which this authentication handler should
            be used by Sling. If this is empty, the authentication handler will be
            disabled. (path)
          "$ref": "#/components/schemas/configNodePropertyArray"
        service.ranking:
          description: OSGi Framework Service Ranking value to indicate the order
            in which to call this service. This is an int value where higher values
            designate higher precedence. Default value is 0. (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        idpUrl:
          description: URL of the IDP where the SAML Authentication Request should
            be sent to. If this property is empty the authentication handler is disabled.
            (idpUrl)
          "$ref": "#/components/schemas/configNodePropertyString"
        idpCertAlias:
          description: The alias of the IdP's certificate in the global truststore.
            If this property is empty the authentication handler is disabled. (idpCertAlias)
          "$ref": "#/components/schemas/configNodePropertyString"
        idpHttpRedirect:
          description: Use an HTTP Redirect to the IDP URL instead of sending an AuthnRequest-message
            to request credentials. Use this for IDP initiated authentication. (idpHttpRedirect)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        serviceProviderEntityId:
          description: ID which uniquely identifies this service provider with the
            identity provider. If this property is empty the authentication handler
            is disabled. (serviceProviderEntityId)
          "$ref": "#/components/schemas/configNodePropertyString"
        assertionConsumerServiceURL:
          description: The (optional) AssertionConsumerServiceURL attribute of an
            Authn request specifies the location to which a <Response> message MUST
            be sent to the requester. (assertionConsumerServiceURL)
          "$ref": "#/components/schemas/configNodePropertyString"
        spPrivateKeyAlias:
          description: The alias of the SP's private key in the key-store of the 'authentication-service'
            system user. If this property is empty the handler will not be able to
            sign or decrypt messages. (spPrivateKeyAlias)
          "$ref": "#/components/schemas/configNodePropertyString"
        keyStorePassword:
          description: The password of the key-store of the 'authentication-service'
            system user. (keyStorePassword)
          "$ref": "#/components/schemas/configNodePropertyString"
        defaultRedirectUrl:
          description: The default location to redirect to after successful authentication.
            (defaultRedirectUrl)
          "$ref": "#/components/schemas/configNodePropertyString"
        userIDAttribute:
          description: The name of the attribute containing the user ID used to authenticate
            and create the user in the CRX repository. Leave empty to use the Subject:NameId.
            (userIDAttribute)
          "$ref": "#/components/schemas/configNodePropertyString"
        useEncryption:
          description: Whether or not this authentication handler expects encrypted
            SAML assertions. If this is enabled the SP's private key must be provided
            in the key-store of the 'authentication-service' system user (see SP Private
            Key Alias above). (useEncryption)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        createUser:
          description: Whether or not to autocreate nonexisting users in the repository.
            (createUser)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        userIntermediatePath:
          description: When creating new users, this value will be used as the intermediate
            path. (userIntermediatePath)
          "$ref": "#/components/schemas/configNodePropertyString"
        addGroupMemberships:
          description: Whether or not a user should be automatically added to CRX
            groups after successful authentication. (addGroupMemberships)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        groupMembershipAttribute:
          description: The name of the attribute containing a list of CRX groups this
            user should be added to. (groupMembershipAttribute)
          "$ref": "#/components/schemas/configNodePropertyString"
        defaultGroups:
          description: A list of default CRX groups users are added to after successful
            authentication. (defaultGroups)
          "$ref": "#/components/schemas/configNodePropertyArray"
        nameIdFormat:
          description: The value of the NameIDPolicy format parameter to send in the
            AuthnRequest message. (nameIdFormat)
          "$ref": "#/components/schemas/configNodePropertyString"
        synchronizeAttributes:
          description: A list of attribute mappings (in the format "attributename=path/relative/to/user/node")
            which should be stored in the repository on user-synchronization. (synchronizeAttributes)
          "$ref": "#/components/schemas/configNodePropertyArray"
        handleLogout:
          description: Whether or not logout (dropCredentials) requests will be processed
            by this handler. (handleLogout)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        logoutUrl:
          description: URL of the IDP where the SAML Logout Request should be sent
            to. If this property is empty the authentication handler won't handle
            logouts. (logoutUrl)
          "$ref": "#/components/schemas/configNodePropertyString"
        clockTolerance:
          description: Time tolerance in seconds to compensate clock skew between
            IDP and SP when validating Assertions. (clockTolerance)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        digestMethod:
          description: The digest algorithm to use when signing a SAML message. (digestMethod)
          "$ref": "#/components/schemas/configNodePropertyString"
        signatureMethod:
          description: The signature algorithm to use when signing a SAML message.
            (signatureMethod)
          "$ref": "#/components/schemas/configNodePropertyString"
        identitySyncType:
          description: Changes the synchronisation mechanism. This requires migration
            of the existing users, groups. (identitySyncType)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        idpIdentifier:
          description: Identifier for IDP to ensure principal name uniqueness in the
            IDP context. If this property is empty, the 'Service Provider Entity ID'
            will be used instead. (idpIdentifier)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteCompatrouterImplRoutingConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteCompatrouterImplRoutingConfigProperties"
    comAdobeGraniteCompatrouterImplRoutingConfigProperties:
      type: object
      properties:
        id:
          description: ID for a location to toggle compat mode (Compat Flag) (id)
          "$ref": "#/components/schemas/configNodePropertyString"
        compatPath:
          description: Compatibility Path for routing (compatPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        newPath:
          description: New Path for routing (newPath)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteCompatrouterImplSwitchMappingConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteCompatrouterImplSwitchMappingConfigProperties"
    comAdobeGraniteCompatrouterImplSwitchMappingConfigProperties:
      type: object
      properties:
        group:
          description: Group identifier for a group of compat ids (group)
          "$ref": "#/components/schemas/configNodePropertyString"
        ids:
          description: IDs mapped to given group (ids)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteCorsImplCORSPolicyImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteCorsImplCORSPolicyImplProperties"
    comAdobeGraniteCorsImplCORSPolicyImplProperties:
      type: object
      properties:
        alloworigin:
          description: List of allowed origins. Use * to allow any. Default is empty
            (allow none). (alloworigin)
          "$ref": "#/components/schemas/configNodePropertyArray"
        alloworiginregexp:
          description: 'List of allowed regular expressions as origins. Example: ''http://.*\.example\.com''
            to allow all subdomains of example.com. To allow any origin, leave empty
            and set ''Allowed Origins'' to *. Default is empty (allow none). (alloworiginregexp)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        allowedpaths:
          description: Regular expressions of paths the filter applies. Default is
            .* (allowedpaths)
          "$ref": "#/components/schemas/configNodePropertyArray"
        exposedheaders:
          description: List of exposed headers. Default is empty (none). (exposedheaders)
          "$ref": "#/components/schemas/configNodePropertyArray"
        maxage:
          description: Number of seconds how long the results of a preflight request
            can be cached. A value of -1 indicates no caching. Default is 1800 (30min.).
            (maxage)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        supportedheaders:
          description: List of allowed headers. Use * to allow any. Default is (Origin,
            Accept, X-Requested-With, Content-Type, Access-Control-Request-Method
            and Access-Control-Request-Headers) (supportedheaders)
          "$ref": "#/components/schemas/configNodePropertyArray"
        supportedmethods:
          description: List of allowed methods. Default is (GET,HEAD,POST). (supportedmethods)
          "$ref": "#/components/schemas/configNodePropertyArray"
        supportscredentials:
          description: Indicates that the actual request can include user credentials.
            Default is true. (supportscredentials)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSecretProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSecretProviderProperties"
    comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSecretProviderProperties:
      type: object
      properties:
        name:
          description: com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider.name.description
            (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        username:
          description: com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider.username.description
            (username)
          "$ref": "#/components/schemas/configNodePropertyString"
        encryptedPassword:
          description: com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider.encryptedPassword.description
            (encryptedPassword)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties"
    comAdobeGraniteDistributionCoreImplDiffDiffChangesObserverProperties:
      type: object
      properties:
        enabled:
          description: com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver.enabled.description
            (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        agentName:
          description: com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver.agentName.description
            (agentName)
          "$ref": "#/components/schemas/configNodePropertyString"
        diffPath:
          description: com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver.diffPath.description
            (diffPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        observedPath:
          description: com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver.observedPath.description
            (observedPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        serviceName:
          description: com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver.serviceName.description
            (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        propertyNames:
          description: com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver.propertyNames.description
            (propertyNames)
          "$ref": "#/components/schemas/configNodePropertyString"
        distributionDelay:
          description: com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver.distributionDelay.description
            (distributionDelay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        serviceUser.target:
          description: com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver.serviceUser.target.description
            (serviceUser.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplDiffDiffEventListenerProperties"
    comAdobeGraniteDistributionCoreImplDiffDiffEventListenerProperties:
      type: object
      properties:
        diffPath:
          description: com.adobe.granite.distribution.core.impl.diff.DiffEventListener.diffPath.description
            (diffPath)
          "$ref": "#/components/schemas/configNodePropertyString"
        serviceName:
          description: com.adobe.granite.distribution.core.impl.diff.DiffEventListener.serviceName.description
            (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        serviceUser.target:
          description: com.adobe.granite.distribution.core.impl.diff.DiffEventListener.serviceUser.target.description
            (serviceUser.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteDistributionCoreImplDistributionToReplicationEventTransformerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplDistributionToReplicationEventTransformerProperties"
    comAdobeGraniteDistributionCoreImplDistributionToReplicationEventTransformerProperties:
      type: object
      properties:
        importer.name:
          description: com.adobe.granite.distribution.core.impl.DistributionToReplicationEventTransformer.importer.name.description
            (importer.name)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteDistributionCoreImplTransportAccessTokenDistributionTransportSecretProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteDistributionCoreImplTransportAccessTokenDistributionTransportSecretProviderProperties"
    comAdobeGraniteDistributionCoreImplTransportAccessTokenDistributionTransportSecretProviderProperties:
      type: object
      properties:
        name:
          description: com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider.name.description
            (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        serviceName:
          description: com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider.serviceName.description
            (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        userId:
          description: com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider.userId.description
            (userId)
          "$ref": "#/components/schemas/configNodePropertyString"
        accessTokenProvider.target:
          description: com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider.accessTokenProvider.target.description
            (accessTokenProvider.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteFragsImplCheckHttpHeaderFlagInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties"
    comAdobeGraniteFragsImplCheckHttpHeaderFlagProperties:
      type: object
      properties:
        feature.name:
          description: feature.name.description (feature.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        feature.description:
          description: feature.description.description (feature.description)
          "$ref": "#/components/schemas/configNodePropertyString"
        http.header.name:
          description: The HTTP Header name has to be sent from client (http.header.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        http.header.valuepattern:
          description: The regexp pattern of HTTP Header value sent from client -
            see Java regular expression (http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html)
            (http.header.valuepattern)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteFragsImplRandomFeatureInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteFragsImplRandomFeatureProperties"
    comAdobeGraniteFragsImplRandomFeatureProperties:
      type: object
      properties:
        feature.name:
          description: feature.name.description (feature.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        feature.description:
          description: feature.description.description (feature.description)
          "$ref": "#/components/schemas/configNodePropertyString"
        active.percentage:
          description: How often this flag returns true, randomly, in percent (active.percentage)
          "$ref": "#/components/schemas/configNodePropertyString"
        cookie.name:
          description: The Cookie name where stored RandomFeature informations (cookie.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        cookie.maxAge:
          description: The Cookie max age (cookie.maxAge)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskProperties"
    comAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskProperties:
      type: object
      properties:
        full.gc.days:
          description: The week days on which a full compaction should run (permissible
            values are "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat") (full.gc.days)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteMonitoringImplScriptConfigImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteMonitoringImplScriptConfigImplProperties"
    comAdobeGraniteMonitoringImplScriptConfigImplProperties:
      type: object
      properties:
        script.filename:
          description: The script file relative to the execution directory. (script.filename)
          "$ref": "#/components/schemas/configNodePropertyString"
        script.display:
          description: The name of the script which shall be used (if different from
            the file name) (script.display)
          "$ref": "#/components/schemas/configNodePropertyString"
        script.path:
          description: Optional repository path relative to the script folder. (script.path)
          "$ref": "#/components/schemas/configNodePropertyString"
        script.platform:
          description: List of regexp that are matched against os.name. Prefix with
            a '-' to exclude. (script.platform)
          "$ref": "#/components/schemas/configNodePropertyArray"
        interval:
          description: If set to a positive number (in seconds) the script will be
            executable automatically (interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        jmxdomain:
          description: The JMX MBean will be registered with this domain prefix (jmxdomain)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteRepositoryServiceUserConfigurationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteRepositoryServiceUserConfigurationProperties"
    comAdobeGraniteRepositoryServiceUserConfigurationProperties:
      type: object
      properties:
        service.ranking:
          description: Configurations are processed in order of their ranking, a configuration
            with a higher ranking has precedence over a configuration with a lower
            ranking. (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        serviceusers.simpleSubjectPopulation:
          description: Determines whether the named service users are eligible for
            loginService or getServiceResourceResolver to avoid group membership lookups.
            (serviceusers.simpleSubjectPopulation)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        serviceusers.list:
          description: A list of the service users for whom the fast path should be
            enabled or disabled. (serviceusers.list)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteResourcestatusImplCompositeStatusTypeInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteResourcestatusImplCompositeStatusTypeProperties"
    comAdobeGraniteResourcestatusImplCompositeStatusTypeProperties:
      type: object
      properties:
        name:
          description: The name of this composite status type (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        types:
          description: The actual status types contained in this composite status
            type (types)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumerProperties"
    comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumerProperties:
      type: object
      properties:
        job.topics:
          description: The job topic this instance of the job consumer is bound to.
            (job.topics)
          "$ref": "#/components/schemas/configNodePropertyString"
    comAdobeGraniteWorkflowPurgeSchedulerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comAdobeGraniteWorkflowPurgeSchedulerProperties"
    comAdobeGraniteWorkflowPurgeSchedulerProperties:
      type: object
      properties:
        scheduledpurge.name:
          description: Enter a descriptive name for this scheduled purge (scheduledpurge.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        scheduledpurge.workflowStatus:
          description: Choose which status of WorkFlows to purge (scheduledpurge.workflowStatus)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        scheduledpurge.modelIds:
          description: Enter model id for models to purge. Leave blank for all models
            (scheduledpurge.modelIds)
          "$ref": "#/components/schemas/configNodePropertyArray"
        scheduledpurge.daysold:
          description: Enter how old workflows are before they are purged (scheduledpurge.daysold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    comDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties"
    comDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties:
      type: object
      properties:
        jdbc.driver.class:
          description: Java class name of the JDBC driver to use (jdbc.driver.class)
          "$ref": "#/components/schemas/configNodePropertyString"
        jdbc.connection.uri:
          description: URI of the JDBC connection to use (jdbc.connection.uri)
          "$ref": "#/components/schemas/configNodePropertyString"
        jdbc.username:
          description: JDBC authentication username (jdbc.username)
          "$ref": "#/components/schemas/configNodePropertyString"
        jdbc.password:
          description: JDBC authentication password (jdbc.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        jdbc.validation.query:
          description: Optional JDBC query used to validate connections (jdbc.validation.query)
          "$ref": "#/components/schemas/configNodePropertyString"
        default.readonly:
          description: Set JDBC Connections to readonly mode by default (default.readonly)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        default.autocommit:
          description: Set JDBC Connections to autocommit mode by default (default.autocommit)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        pool.size:
          description: Maximum number of Connections that this pool can open (pool.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        pool.max.wait.msec:
          description: Maximum wait time, in milliseconds, before throwing an Exception
            if all pooled Connections are in use (pool.max.wait.msec)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        datasource.name:
          description: Name of this data source (datasource.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        datasource.svc.properties:
          description: '"Properties that are added additionally to the registered
            datasource service (name=value pairs)" (datasource.svc.properties)'
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqDamStockIntegrationImplConfigurationStockConfigurationImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqDamStockIntegrationImplConfigurationStockConfigurationImplProperties"
    comDayCqDamStockIntegrationImplConfigurationStockConfigurationImplProperties:
      type: object
      properties:
        name:
          description: Configuration name of this integration (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        locale:
          description: Locale for Stock (locale)
          "$ref": "#/components/schemas/configNodePropertyString"
        imsConfig:
          description: IMS Configuration of this integration (imsConfig)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqMcmImplMCMConfigurationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqMcmImplMCMConfigurationProperties"
    comDayCqMcmImplMCMConfigurationProperties:
      type: object
      properties:
        experience.indirection:
          description: Use this to implement a subtype component of an mcm experience
            component, eg. an own newsletter component. (experience.indirection)
          "$ref": "#/components/schemas/configNodePropertyArray"
        touchpoint.indirection:
          description: Use this to implement a subtype component of a touchpoint component.
            (touchpoint.indirection)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqPollingImporterImplManagedPollConfigImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqPollingImporterImplManagedPollConfigImplProperties"
    comDayCqPollingImporterImplManagedPollConfigImplProperties:
      type: object
      properties:
        id:
          description: Identifier of this configuration (id)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: Enable state for the configuration (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        reference:
          description: Reference state for the configuration (reference)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        interval:
          description: Poll interval in seconds of this configuration. Please note
            that either an interval or expression can be provided, the expression
            takes precedence. (interval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        expression:
          description: CRON expression of this configuration. Please note that either
            an interval or expression can be provided, the expression takes precedence.
            (expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        source:
          description: This is given to the Importer handling the 'Scheme' of this
            configuration to acquire the data. (source)
          "$ref": "#/components/schemas/configNodePropertyString"
        target:
          description: Target path where the polled data is being stored. Value should
            be omitted if config is referenced. (target)
          "$ref": "#/components/schemas/configNodePropertyString"
        login:
          description: Login of this configuration. (Optional) (login)
          "$ref": "#/components/schemas/configNodePropertyString"
        password:
          description: Password of this configuration. (Optional) (password)
          "$ref": "#/components/schemas/configNodePropertyString"
    comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties"
    comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplProperties:
      type: object
      properties:
        link.expired.prefix:
          description: Prefix string for expired links (link.expired.prefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        link.expired.remove:
          description: Controls if the expired links should be removed (link.expired.remove)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        link.expired.suffix:
          description: Suffix string for expired links (link.expired.suffix)
          "$ref": "#/components/schemas/configNodePropertyString"
        link.invalid.prefix:
          description: Prefix string for invalid links (link.invalid.prefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        link.invalid.remove:
          description: Controls if the invalid links should be removed (link.invalid.remove)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        link.invalid.suffix:
          description: Suffix string for invalid links (link.invalid.suffix)
          "$ref": "#/components/schemas/configNodePropertyString"
        link.predated.prefix:
          description: Prefix string for predated links (link.predated.prefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        link.predated.remove:
          description: Controls if the predated links should be removed (link.predated.remove)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        link.predated.suffix:
          description: Suffix string for predated links (link.predated.suffix)
          "$ref": "#/components/schemas/configNodePropertyString"
        link.wcmmodes:
          description: WCM modes to which this configuration applies (link.wcmmodes)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties"
    comDayCqWcmFoundationFormsImplFormParagraphPostProcessorProperties:
      type: object
      properties:
        forms.formparagraphpostprocessor.enabled:
          description: Enable/disable the PostProcessor (forms.formparagraphpostprocessor.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        forms.formparagraphpostprocessor.formresourcetypes:
          description: Sling resource types of form this post processor would handle
            (forms.formparagraphpostprocessor.formresourcetypes)
          "$ref": "#/components/schemas/configNodePropertyArray"
    comDayCqWcmFoundationFormsImplMailServletInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/comDayCqWcmFoundationFormsImplMailServletProperties"
    comDayCqWcmFoundationFormsImplMailServletProperties:
      type: object
      properties:
        sling.servlet.resourceTypes:
          description: sling.servlet.resourceTypes.description (sling.servlet.resourceTypes)
          "$ref": "#/components/schemas/configNodePropertyString"
        sling.servlet.selectors:
          description: sling.servlet.selectors.description (sling.servlet.selectors)
          "$ref": "#/components/schemas/configNodePropertyString"
        resource.whitelist:
          description: List of paths under which servlet will only accept requests.
            (resource.whitelist)
          "$ref": "#/components/schemas/configNodePropertyArray"
        resource.blacklist:
          description: List of paths under which servlet will reject requests. (resource.blacklist)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheFelixJaasConfigurationFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheFelixJaasConfigurationFactoryProperties"
    orgApacheFelixJaasConfigurationFactoryProperties:
      type: object
      properties:
        jaas.controlFlag:
          description: The Flag value controls the overall behavior as authentication
            proceeds down the stack (jaas.controlFlag)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        jaas.ranking:
          description: The relative ranking of this configuration. (jaas.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        jaas.realmName:
          description: Name of the application (jaas.realmName)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.classname:
          description: Fully qualified name of the LoginModule class (jaas.classname)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.options:
          description: Properties in the form of key value pairs that are passed on
            to the LoginModule(name=value pairs) (jaas.options)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheHttpProxyconfiguratorInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheHttpProxyconfiguratorProperties"
    orgApacheHttpProxyconfiguratorProperties:
      type: object
      properties:
        proxy.enabled:
          description: Whether to enable or disable this particular proxy configuration.
            The default value is false. (proxy.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        proxy.host:
          description: Host name (or IP Address) of the HTTP Proxy. This property
            is ignored if this proxy configuration is disabled. This property does
            not have a default value. Enabling this proxy but not setting the HTTP
            Proxy Host effectively disables this configuration. (proxy.host)
          "$ref": "#/components/schemas/configNodePropertyString"
        proxy.port:
          description: TCP port of the HTTP Proxy. This property is ignored if this
            proxy configuration is disabled. This property does not have a default
            value. Enabling this proxy but not setting the HTTP Proxy Port effectively
            disables this configuration. (proxy.port)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        proxy.user:
          description: The name of the user to authenticate as with the HTTP Proxy
            Host. If this field is empty, the proxy is considered to not be authenticated.
            The default is empty. This property is ignored if proxying is disabled
            or the proxy host is not properly configured. (proxy.user)
          "$ref": "#/components/schemas/configNodePropertyString"
        proxy.password:
          description: The password of the HTTP Proxy user to authenticate with. The
            default is empty. This property is ignored if proxying is disabled or
            the proxy host is not properly configured. (proxy.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        proxy.exceptions:
          description: Lists domain names, host names, IP Addresses or or network
            addresses for which this proxy configuration should not be used. A domain
            name indicating all hosts of a domain is indicated by a leading dot, e.g.
            ".day.com". A network address is indicated with subnet mask notation indicating
            the number of bits make up the network address, e.g 192.168.1.0/24 means
            the class C network "192.168.1". Note that for proxy selection, the host
            name of URL is not resolved but directly compared to the list of exceptions.
            For this reason you might want to indicate both the network address and
            the domain for targets which should not be passed through the proxy. This
            property has no effect if this proxy configuration is disabled. The default
            value is [ localhost, 127.0.0.1 ]. (proxy.exceptions)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties"
    orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentityProviderProperties:
      type: object
      properties:
        provider.name:
          description: Name of this LDAP provider configuration. This is used to reference
            this provider by the login modules. (provider.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        host.name:
          description: Hostname of the LDAP server (host.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        host.port:
          description: Port of the LDAP server (host.port)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        host.ssl:
          description: Indicates if an SSL (LDAPs) connection should be used. (host.ssl)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        host.tls:
          description: Indicates if TLS should be started on connections. (host.tls)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        host.noCertCheck:
          description: Indicates if server certificate validation should be disabled.
            (host.noCertCheck)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        bind.dn:
          description: DN of the user for authentication. Leave empty for anonymous
            bind. (bind.dn)
          "$ref": "#/components/schemas/configNodePropertyString"
        bind.password:
          description: Password of the user for authentication. (bind.password)
          "$ref": "#/components/schemas/configNodePropertyString"
        searchTimeout:
          description: 'Time in until a search times out (eg: ''1s'' or ''1m 30s'').
            (searchTimeout)'
          "$ref": "#/components/schemas/configNodePropertyString"
        adminPool.maxActive:
          description: The max active size of the admin connection pool. (adminPool.maxActive)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        adminPool.lookupOnValidate:
          description: Indicates an ROOT DSE lookup is performed to test if the connection
            is still valid when taking it out of the pool. (adminPool.lookupOnValidate)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        userPool.maxActive:
          description: The max active size of the user connection pool. (userPool.maxActive)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        userPool.lookupOnValidate:
          description: Indicates an ROOT DSE lookup is performed to test if the connection
            is still valid when taking it out of the pool. (userPool.lookupOnValidate)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        user.baseDN:
          description: The base DN for user searches. (user.baseDN)
          "$ref": "#/components/schemas/configNodePropertyString"
        user.objectclass:
          description: The list of object classes an user entry must contain. (user.objectclass)
          "$ref": "#/components/schemas/configNodePropertyArray"
        user.idAttribute:
          description: Name of the attribute that contains the user id. (user.idAttribute)
          "$ref": "#/components/schemas/configNodePropertyString"
        user.extraFilter:
          description: 'Extra LDAP filter to use when searching for users. The final
            filter isformatted like: ''(&(<idAttr>=<userId>)(objectclass=<objectclass>)<extraFilter>)''
            (user.extraFilter)'
          "$ref": "#/components/schemas/configNodePropertyString"
        user.makeDnPath:
          description: Controls if the DN should be used for calculating a portion
            of the intermediate path. (user.makeDnPath)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        group.baseDN:
          description: The base DN for group searches. (group.baseDN)
          "$ref": "#/components/schemas/configNodePropertyString"
        group.objectclass:
          description: The list of object classes a group entry must contain. (group.objectclass)
          "$ref": "#/components/schemas/configNodePropertyArray"
        group.nameAttribute:
          description: Name of the attribute that contains the group name. (group.nameAttribute)
          "$ref": "#/components/schemas/configNodePropertyString"
        group.extraFilter:
          description: 'Extra LDAP filter to use when searching for groups. The final
            filter isformatted like: ''(&(<nameAttr>=<groupName>)(objectclass=<objectclass>)<extraFilter>)''
            (group.extraFilter)'
          "$ref": "#/components/schemas/configNodePropertyString"
        group.makeDnPath:
          description: Controls if the DN should be used for calculating a portion
            of the intermediate path. (group.makeDnPath)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        group.memberAttribute:
          description: Group attribute that contains the member(s) of a group. (group.memberAttribute)
          "$ref": "#/components/schemas/configNodePropertyString"
        useUidForExtId:
          description: If enabled, the value of the user id (resp. group name) attribute
            will be used to create external identifiers. Leave disabled to use the
            DN instead. (useUidForExtId)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        customattributes:
          description: Attributes retrieved when looking up LDAP entries. Leave empty
            to retrieve all attributes. (customattributes)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties"
    orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties:
      type: object
      properties:
        repository.home:
          description: Path on the file system where repository data will be stored.
            Defaults to the value of the framework property 'repository.home' or to
            'repository' if that is neither specified. (repository.home)
          "$ref": "#/components/schemas/configNodePropertyString"
        tarmk.mode:
          description: TarMK mode (64 for memory mapped file access, 32 for normal
            file access). Default value is taken from the 'sun.arch.data.model' system
            property. (tarmk.mode)
          "$ref": "#/components/schemas/configNodePropertyString"
        tarmk.size:
          description: The maximum size of the tar files in megabytes. Default value
            is '256'. (tarmk.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        segmentCache.size:
          description: Cache size for storing most recently used segments in megabytes.
            Default value is '256'. (segmentCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        stringCache.size:
          description: Cache size for storing most recently used strings in megabytes.
            Default value is '256'. (stringCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        templateCache.size:
          description: Cache size for storing most recently used templates in megabytes.
            Default value is '64'. (templateCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        stringDeduplicationCache.size:
          description: Maximum number of strings to keep in the deduplication cache.
            Default value is '15000'. (stringDeduplicationCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        templateDeduplicationCache.size:
          description: Maximum number of templates to keep in the deduplication cache.
            Default value is '3000'. (templateDeduplicationCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        nodeDeduplicationCache.size:
          description: Maximum number of node to keep in the deduplication cache.
            If the supplied value is not a power of 2, it will be rounded up to the
            next power of 2. Default value is '1048576'. (nodeDeduplicationCache.size)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        pauseCompaction:
          description: When set to true the compaction phase is skipped during garbage
            collection. Default value is 'false'. (pauseCompaction)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        compaction.retryCount:
          description: Number of tries to compact concurrent commits on top of already
            compacted commits. Default value is '5'. (compaction.retryCount)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.force.timeout:
          description: Number of seconds to attempt to force compact concurrent commits
            on top of already compacted commits after the maximum number of retries
            has been reached. Forced compaction tries to acquire an exclusive write
            lock on the node store, blocking concurrent write access as long as the
            lock is held. Default value is '60'. (compaction.force.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.sizeDeltaEstimation:
          description: Garbage collection will be skipped unless the repository grew
            at least by the number of bytes specified. Default value is '1073741824'.
            (compaction.sizeDeltaEstimation)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.disableEstimation:
          description: Disables the estimation phase allowing garbage collection to
            run unconditionally. Default value is 'false'. (compaction.disableEstimation)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        compaction.retainedGenerations:
          description: Number of segment generations to retain during garbage collection.
            The number of generations defaults to 2 and can't be changed. This configuration
            option is considered deprecated and will be removed in the future. (compaction.retainedGenerations)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.memoryThreshold:
          description: Threshold of available heap memory in percent of total heap
            memory below which the compaction phase is canceled. 0 disables heap memory
            monitoring. Default value is '15'. (compaction.memoryThreshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        compaction.progressLog:
          description: The number of nodes compacted after which a status message
            is logged. -1 disables progress logging. Default value is '-1'. (compaction.progressLog)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        standby:
          description: Flag indicating this component will not register as a NodeStore
            but as a NodeStoreProvider instead. Default value is 'false'. (standby)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        customBlobStore:
          description: Boolean value indicating that a custom BlobStore is used for
            storing large binary values. (customBlobStore)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        customSegmentStore:
          description: Boolean value indicating that a custom (non-tar) segment store
            is used (customSegmentStore)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        splitPersistence:
          description: Boolean value indicating that the writes should be done locally
            when using the custom segment store (splitPersistence)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        repository.backup.dir:
          description: Directory (relative to current working directory) for storing
            repository backups. Defaults to 'repository.home/segmentstore-backup'.
            (repository.backup.dir)
          "$ref": "#/components/schemas/configNodePropertyString"
        blobGcMaxAgeInSecs:
          description: The blob garbage collection logic will only consider those
            blobs which are not accessed recently (currentTime - lastModifiedTime
            > blobGcMaxAgeInSecs). For example with the default setting only those
            blobs which have been created at least 24 hours ago will be considered
            for garbage collection. Default value is '86400'. (blobGcMaxAgeInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        blobTrackSnapshotIntervalInSecs:
          description: Interval in seconds in which snapshots of locally tracked blob
            ids are taken and synchronized with the blob store. This should be configured
            to be less than the frequency of blob garbage collection so that deletions
            during blob garbage collection can be accounted for in the next garbage
            collection execution. Default value is '43200'. (blobTrackSnapshotIntervalInSecs)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        role:
          description: As multiple SegmentNodeStores can be configured, this parameter
            defines the role of 'this' SegmentNodeStore. (role)
          "$ref": "#/components/schemas/configNodePropertyString"
        registerDescriptors:
          description: Should only be done for one factory instance (registerDescriptors)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        dispatchChanges:
          description: Enable support for observers on this factory instance (dispatchChanges)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDefaultSyncHandlerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDefaultSyncHandlerProperties"
    orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDefaultSyncHandlerProperties:
      type: object
      properties:
        handler.name:
          description: Name of this sync configuration. This is used to reference
            this handler by the login modules. (handler.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        user.expirationTime:
          description: Duration until a synced user gets expired (eg. '1h 30m' or
            '1d'). (user.expirationTime)
          "$ref": "#/components/schemas/configNodePropertyString"
        user.autoMembership:
          description: List of groups that a synced user is added to automatically
            (user.autoMembership)
          "$ref": "#/components/schemas/configNodePropertyArray"
        user.propertyMapping:
          description: 'List mapping definition of local properties from external
            ones. eg: ''profile/email=mail''.Use double quotes for fixed values. eg:
            ''profile/nt:primaryType="nt:unstructured" (user.propertyMapping)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        user.pathPrefix:
          description: The path prefix used when creating new users. (user.pathPrefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        user.membershipExpTime:
          description: Time after which membership expires (eg. '1h 30m' or '1d').
            Note however, that a membership sync is aways bound to a sync of the user.
            (user.membershipExpTime)
          "$ref": "#/components/schemas/configNodePropertyString"
        user.membershipNestingDepth:
          description: Returns the maximum depth of group nesting when membership
            relations are synced. A value of 0 effectively disables group membership
            lookup. A value of 1 only adds the direct groups of a user. This value
            has no effect when syncing individual groups only when syncing a users
            membership ancestry. (user.membershipNestingDepth)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        user.dynamicMembership:
          description: If enabled membership of external identities (user) is no longer
            fully reflected within the repositories user management. (user.dynamicMembership)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        user.disableMissing:
          description: If true, users that no longer exist on the external provider
            will be locally disabled, and re-enabled if they become valid again. If
            false (default) they will be removed. (user.disableMissing)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        group.expirationTime:
          description: Duration until a synced group expires (eg. '1h 30m' or '1d').
            (group.expirationTime)
          "$ref": "#/components/schemas/configNodePropertyString"
        group.autoMembership:
          description: List of groups that a synced group is added to automatically
            (group.autoMembership)
          "$ref": "#/components/schemas/configNodePropertyArray"
        group.propertyMapping:
          description: List mapping definition of local properties from external ones.
            (group.propertyMapping)
          "$ref": "#/components/schemas/configNodePropertyArray"
        group.pathPrefix:
          description: The path prefix used when creating new groups. (group.pathPrefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        enableRFC7613UsercaseMappedProfile:
          description: Enable the UsercaseMappedProfile defined in RFC7613 for username
            normalization. (enableRFC7613UsercaseMappedProfile)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExternalLoginModuleFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExternalLoginModuleFactoryProperties"
    orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExternalLoginModuleFactoryProperties:
      type: object
      properties:
        jaas.ranking:
          description: Specifying the ranking (i.e. sort order) of this login module
            entry. The entries are sorted in a descending order (i.e. higher value
            ranked configurations come first). (jaas.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        jaas.controlFlag:
          description: Property specifying whether or not a LoginModule is REQUIRED,
            REQUISITE, SUFFICIENT or OPTIONAL. Refer to the JAAS configuration documentation
            for more details around the meaning of these flags. (jaas.controlFlag)
          "$ref": "#/components/schemas/configNodePropertyString"
        jaas.realmName:
          description: The realm name (or application name) against which the LoginModule  is
            be registered. If no realm name is provided then LoginModule is registered
            with a default realm as configured in the Felix JAAS configuration. (jaas.realmName)
          "$ref": "#/components/schemas/configNodePropertyString"
        idp.name:
          description: 'Name of the identity provider (for example: ''ldap''). (idp.name)'
          "$ref": "#/components/schemas/configNodePropertyString"
        sync.handlerName:
          description: Name of the sync handler. (sync.handlerName)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviderProperties"
    orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviderProperties:
      type: object
      properties:
        description:
          description: This description is used for display in the web console. (description)
          "$ref": "#/components/schemas/configNodePropertyString"
        overrides:
          description: 'Override strings - examples: {configName}/{propertyName}={propertyJsonValue}
            {configName}={propertyJsonObject} [{contextPath}]{configName}/{propertyName}={propertyJsonValue}
            [{contextPath}]{configName}={propertyJsonObject} (overrides)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        enabled:
          description: Enable this override provider. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        service.ranking:
          description: Priority of configuration override providers (higher = higher
            priority). (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingCommonsLogLogManagerFactoryConfigInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsLogLogManagerFactoryConfigProperties"
    orgApacheSlingCommonsLogLogManagerFactoryConfigProperties:
      type: object
      properties:
        org.apache.sling.commons.log.level:
          description: Root Logger log level setting. (org.apache.sling.commons.log.level)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        org.apache.sling.commons.log.file:
          description: The name and path of the log file. If this is empty, logging
            goes to standard output (the console). If this path is relative it is
            resolved below ${sling.home}. (org.apache.sling.commons.log.file)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.log.pattern:
          description: Message Pattern for formatting the log messages. For complete
            details refer to http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout
            (org.apache.sling.commons.log.pattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.log.names:
          description: The logger names applicable for this logger configuration.
            Each logger name applies for any child category unless configured otherwise.
            E.g. a logger name of org.apache.sling applies to logger org.apache.sling.commons
            unless there is a different configuration for org.apache.sling.commons.
            (org.apache.sling.commons.log.names)
          "$ref": "#/components/schemas/configNodePropertyArray"
        org.apache.sling.commons.log.additiv:
          description: If set to false then logs from these loggers would not be sent
            to any appender attached higher in the hierarchy (org.apache.sling.commons.log.additiv)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingCommonsLogLogManagerFactoryWriterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsLogLogManagerFactoryWriterProperties"
    orgApacheSlingCommonsLogLogManagerFactoryWriterProperties:
      type: object
      properties:
        org.apache.sling.commons.log.file:
          description: The name and path of the log file. If this is empty, logging
            goes to standard output (the console). If this path is relative it is
            resolved below ${sling.home}. (org.apache.sling.commons.log.file)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.log.file.number:
          description: 'The number of log files to keep. When the threshold of the
            log file reaches the configured maximum (see Log File Threshold), the
            log file is copied and a new log file is created. This setting specifies
            how many generations (incl. the active log file) should be kept. This
            is a positive numeric value. The default value is 5. If the Log File Threshold
            property specifies time/date controlled log file rotation, log file deletion
            can be disabled by setting the number of log files to ''0''. Warning:
            setting this to a high number (more than 20) may be expensive on some
            file-systems, because all files need to be renamed when log files are
            rotated. (org.apache.sling.commons.log.file.number)'
          "$ref": "#/components/schemas/configNodePropertyInteger"
        org.apache.sling.commons.log.file.size:
          description: Controls the rotation of the log file by setting a maximum
            file size or a time/date schedule at which to rotate the log file. A size
            limit can be specified setting a pure number indicating the number of
            bytes or a number with a size indicator KB, MB, or GB (case is ignored).
            A time/date schedule can be specified as a java.util.SimpleDateFormat
            pattern. The default is "'.'yyyy-MM-dd" (daily log rotation). (org.apache.sling.commons.log.file.size)
          "$ref": "#/components/schemas/configNodePropertyString"
        org.apache.sling.commons.log.file.buffered:
          description: By default logging events are immediately written to disk and
            will not be lost in case your application exits without properly closing
            appenders. If set to true  and if appenders are not closed properly when
            your application exits, then logging events not yet written to disk may
            be lost. See http://logback.qos.ch/manual/encoders.html#immediateFlush
            (org.apache.sling.commons.log.file.buffered)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingCommonsMetricsInternalLogReporterInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsMetricsInternalLogReporterProperties"
    orgApacheSlingCommonsMetricsInternalLogReporterProperties:
      type: object
      properties:
        period:
          description: Period at which the metrics data will be logged (period)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        timeUnit:
          description: Unit of time for evaluating the period (timeUnit)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        level:
          description: The log level to log at. (level)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        loggerName:
          description: The logger name (loggerName)
          "$ref": "#/components/schemas/configNodePropertyString"
        prefix:
          description: If specified, only metrics whose name starts with this value
            are logged. If both prefix and pattern are set, prefix is used. (prefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        pattern:
          description: If specified, only metrics whose name matches this regular
            expression will be logged. If both prefix and pattern are set, prefix
            is used. (pattern)
          "$ref": "#/components/schemas/configNodePropertyString"
        registryName:
          description: Restrict the metrics logged to a specifically named registry.
            (registryName)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties"
    orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryProperties:
      type: object
      properties:
        name:
          description: The unique name for this thread pool. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        minPoolSize:
          description: The minimum pool size. (minPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxPoolSize:
          description: The maximum pool size. (maxPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queueSize:
          description: The queue size or -1 for an unlimited queue size. (queueSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxThreadAge:
          description: Milliseconds before a pooled thread is replaced (-1 to disable
            expiry). Useful to avoid memory leaks by accumulation of ThreadLocals.
            (maxThreadAge)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        keepAliveTime:
          description: The keep alive time. (keepAliveTime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        blockPolicy:
          description: The block policy. (blockPolicy)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        shutdownGraceful:
          description: Should the pool be shutdown gracefully? (shutdownGraceful)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        daemon:
          description: Should the pool create daemon threads? (daemon)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        shutdownWaitTime:
          description: The shutdown wait time. A value below 1 means no wait time.
            (shutdownWaitTime)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        priority:
          description: The default priority for the threads. (priority)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
    orgApacheSlingDatasourceDataSourceFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDatasourceDataSourceFactoryProperties"
    orgApacheSlingDatasourceDataSourceFactoryProperties:
      type: object
      properties:
        datasource.name:
          description: Name of this data source (required) (datasource.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        datasource.svc.prop.name:
          description: Name of the service property which would store the DataSource
            Name whileregistering the DataSource instance as OSGi service (datasource.svc.prop.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        driverClassName:
          description: Java class name of the JDBC driver to use (driverClassName)
          "$ref": "#/components/schemas/configNodePropertyString"
        url:
          description: URI of the JDBC connection to use e.g. jdbc:mysql://localhost:3306/mysql
            (url)
          "$ref": "#/components/schemas/configNodePropertyString"
        username:
          description: The connection username to be passed to our JDBC driver to
            establish a connection (username)
          "$ref": "#/components/schemas/configNodePropertyString"
        password:
          description: The connection password to be passed to our JDBC driver to
            establish a connection. (password)
          "$ref": "#/components/schemas/configNodePropertyString"
        defaultAutoCommit:
          description: The default auto-commit state of connections created by this
            pool. (If 'default' then the setAutoCommit method will not be called.)
            (defaultAutoCommit)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        defaultReadOnly:
          description: The default read-only state of connections created by this
            pool. (defaultReadOnly)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        defaultTransactionIsolation:
          description: The default TransactionIsolation state of connections created
            by this pool. If 'default', the method will not be called and it defaults
            to the JDBC driver. (defaultTransactionIsolation)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        defaultCatalog:
          description: The default catalog of connections created by this pool. (defaultCatalog)
          "$ref": "#/components/schemas/configNodePropertyString"
        maxActive:
          description: The maximum number of active connections that can be allocated
            from this pool at the same time. The default value is 100 (maxActive)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxIdle:
          description: The maximum number of connections that should be kept in the
            pool at all times. Idle connections are checked periodically (if enabled)
            and connections that been idle for longer than minEvictableIdleTimeMillis
            will be released. (also see testWhileIdle) (maxIdle)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        minIdle:
          description: The minimum number of established connections that should be
            kept in the pool at all times. The connection pool can shrink below this
            number if validation queries fail. Default value is derived frominitialSize:10
            (also see testWhileIdle) (minIdle)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        initialSize:
          description: The initial number of connections that are created when the
            pool is started. Default value is 10 (initialSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxWait:
          description: The maximum number of milliseconds that the pool will wait
            (when there are no availableconnections) for a connection to be returned
            before throwing an exception. Default value is 30000 (30 seconds) (maxWait)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        maxAge:
          description: Time in milliseconds to keep this connection. (maxAge)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        testOnBorrow:
          description: The indication of whether objects will be validated before
            being borrowed from the pool. (testOnBorrow)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        testOnReturn:
          description: The indication of whether objects will be validated before
            being returned to the pool. (testOnReturn)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        testWhileIdle:
          description: The indication of whether objects will be validated by the
            idle object evictor (if any). (testWhileIdle)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        validationQuery:
          description: The SQL query that will be used to validate connections from
            this pool before returning them to the caller. If specified, this query
            does not have to return any data, it just can't throw a SQLException.
            The default value is null. Example values are SELECT 1(mysql), select
            1 from dual(oracle), SELECT 1(MS Sql Server) (validationQuery)
          "$ref": "#/components/schemas/configNodePropertyString"
        validationQueryTimeout:
          description: The timeout in seconds before a connection validation queries
            fail. A value less than or equal to zero will disable this feature. The
            default value is -1. (validationQueryTimeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        timeBetweenEvictionRunsMillis:
          description: The number of milliseconds to sleep between runs of the idle
            connectionvalidation/cleaner thread. (timeBetweenEvictionRunsMillis)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        minEvictableIdleTimeMillis:
          description: The minimum amount of time an object may sit idle in the pool
            before it is eligible for eviction. (minEvictableIdleTimeMillis)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        connectionProperties:
          description: The connection properties that will be sent to our JDBC driver
            when establishing new connections. Format of the string must be [propertyName=property;]*
            NOTE - The "user" and "password" propertieswill be passed explicitly,
            so they do not need to be included here. (connectionProperties)
          "$ref": "#/components/schemas/configNodePropertyString"
        initSQL:
          description: A custom query to be run when a connection is first created
            (initSQL)
          "$ref": "#/components/schemas/configNodePropertyString"
        jdbcInterceptors:
          description: A semicolon separated list of classnames of JDBCInterceptor.
            See http://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html#Configuring_JDBC_interceptors
            for more details (jdbcInterceptors)
          "$ref": "#/components/schemas/configNodePropertyString"
        validationInterval:
          description: avoid excess validation, only run validation at most at this
            frequency - time in milliseconds. If a connection is due for validation,
            but has been validated previously within this interval, it will not be
            validated again. (validationInterval)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        logValidationErrors:
          description: Set this to true to log errors during the validation phase
            to the log file (logValidationErrors)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        datasource.svc.properties:
          description: Properties that are added additionally to the underlying DataSource
            provider(name=value pairs). Refer to http://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html#Common_Attributes
            for various property names and details. (datasource.svc.properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingDatasourceJNDIDataSourceFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDatasourceJNDIDataSourceFactoryProperties"
    orgApacheSlingDatasourceJNDIDataSourceFactoryProperties:
      type: object
      properties:
        datasource.name:
          description: Name of this data source (required) (datasource.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        datasource.svc.prop.name:
          description: Name of the service property which would store the DataSource
            Name whileregistering the DataSource instance as OSGi service (datasource.svc.prop.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        datasource.jndi.name:
          description: JNDI location name used to perform DataSource instance lookup
            (datasource.jndi.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        jndi.properties:
          description: Set the environment for the JNDI InitialContext i.e. properties
            passed on to InitialContext for performing the JNDI instance lookup. Each
            row form a map entry where each row format be propertyName=property e.g.
            java.naming.factory.initial=exampleFactory (jndi.properties)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoryProperties"
    orgApacheSlingDistributionAgentImplForwardDistributionAgentFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the agent. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        title:
          description: The display friendly title of the agent. (title)
          "$ref": "#/components/schemas/configNodePropertyString"
        details:
          description: The display friendly details of the agent. (details)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: Whether or not to start the distribution agent. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        serviceName:
          description: The name of the service used to access the repository. If not
            set, the calling user ResourceResolver will be used (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        log.level:
          description: The log level recorded in the transient log accessible via
            http. (log.level)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        allowed.roots:
          description: If set the agent will allow only distribution requests under
            the specified roots. (allowed.roots)
          "$ref": "#/components/schemas/configNodePropertyArray"
        queue.processing.enabled:
          description: Whether or not the distribution agent should process packages
            in the queues. (queue.processing.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        packageImporter.endpoints:
          description: List of endpoints to which packages are sent (imported). The
            list can be given as a map in case a queue should be configured for each
            endpoint, e.g. queueName=http://... (packageImporter.endpoints)
          "$ref": "#/components/schemas/configNodePropertyArray"
        passiveQueues:
          description: List of queues that should be disabled.These queues will gather
            all the packages until they are removed explicitly. (passiveQueues)
          "$ref": "#/components/schemas/configNodePropertyArray"
        priorityQueues:
          description: List of priority queues that should used for specific paths.The
            selector format is  {queuePrefix}[|{mainQueueMatcher}]={pathMatcher},
            e.g. french=/content/fr.* (priorityQueues)
          "$ref": "#/components/schemas/configNodePropertyArray"
        retry.strategy:
          description: The strategy to apply after a certain number of failed retries.
            (retry.strategy)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        retry.attempts:
          description: The number of times to retry until the retry strategy is applied.
            (retry.attempts)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        requestAuthorizationStrategy.target:
          description: The target reference for the DistributionRequestAuthorizationStrategy
            used to authorize the access to distribution process,e.g. use target=(name=...)
            to bind to services by name. (requestAuthorizationStrategy.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        transportSecretProvider.target:
          description: The target reference for the DistributionTransportSecretProvider
            used to obtain the credentials used for accessing the remote endpoints,
            e.g. use target=(name=...) to bind to services by name. (transportSecretProvider.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        packageBuilder.target:
          description: The target reference for the DistributionPackageBuilder used
            to create distribution packages, e.g. use target=(name=...) to bind to
            services by name. (packageBuilder.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        triggers.target:
          description: The target reference for DistributionTrigger used to trigger
            distribution, e.g. use target=(name=...) to bind to services by name.
            (triggers.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        queue.provider:
          description: The queue provider implementation. (queue.provider)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        async.delivery:
          description: Whether or not to use a separate delivery queue to maximize
            transport throughput when queue has more than 100 items (async.delivery)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        http.conn.timeout:
          description: The connection timeout for HTTP requests (in seconds). (http.conn.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAuthorizationStrategyFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAuthorizationStrategyFactoryProperties"
    orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAuthorizationStrategyFactoryProperties:
      type: object
      properties:
        name:
          description: Description for name (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        jcrPrivilege:
          description: Jcr privilege to check for authorizing distribution requests.
            The privilege is checked for the calling user session. (jcrPrivilege)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryProperties"
    orgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the agent. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        title:
          description: The display friendly title of the agent. (title)
          "$ref": "#/components/schemas/configNodePropertyString"
        details:
          description: The display friendly details of the agent. (details)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: Whether or not to start the distribution agent. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        serviceName:
          description: The name of the service used to access the repository. If not
            set, the calling user ResourceResolver will be used (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        log.level:
          description: The log level recorded in the transient log accessible via
            http. (log.level)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        allowed.roots:
          description: If set the agent will allow only distribution requests under
            the specified roots. (allowed.roots)
          "$ref": "#/components/schemas/configNodePropertyArray"
        requestAuthorizationStrategy.target:
          description: The target reference for the DistributionRequestAuthorizationStrategy
            used to authorize the access to distribution process,e.g. use target=(name=...)
            to bind to services by name. (requestAuthorizationStrategy.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        queueProviderFactory.target:
          description: The target reference for the DistributionQueueProviderFactory
            used to build queues,e.g. use target=(name=...) to bind to services by
            name. (queueProviderFactory.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        packageBuilder.target:
          description: The target reference for the DistributionPackageBuilder used
            to create distribution packages, e.g. use target=(name=...) to bind to
            services by name. (packageBuilder.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        triggers.target:
          description: The target reference for DistributionTrigger used to trigger
            distribution, e.g. use target=(name=...) to bind to services by name.
            (triggers.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        priorityQueues:
          description: List of priority queues that should used for specific paths.The
            selector format is  {queuePrefix}[|{mainQueueMatcher}]={pathMatcher},
            e.g. french=/content/fr.* (priorityQueues)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoryProperties"
    orgApacheSlingDistributionAgentImplReverseDistributionAgentFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the agent. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        title:
          description: The display friendly title of the agent. (title)
          "$ref": "#/components/schemas/configNodePropertyString"
        details:
          description: The display friendly details of the agent. (details)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: Whether or not to start the distribution agent. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        serviceName:
          description: The name of the service used to access the repository. (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        log.level:
          description: The log level recorded in the transient log accessible via
            http. (log.level)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        queue.processing.enabled:
          description: Whether or not the distribution agent should process packages
            in the queues. (queue.processing.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        packageExporter.endpoints:
          description: List of endpoints from which packages are received (exported).
            (packageExporter.endpoints)
          "$ref": "#/components/schemas/configNodePropertyArray"
        pull.items:
          description: Number of subsequent pull requests to make. (pull.items)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        http.conn.timeout:
          description: The connection timeout for HTTP requests (in seconds). (http.conn.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        requestAuthorizationStrategy.target:
          description: The target reference for the DistributionRequestAuthorizationStrategy
            used to authorize the access to distribution process,e.g. use target=(name=...)
            to bind to services by name. (requestAuthorizationStrategy.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        transportSecretProvider.target:
          description: The target reference for the DistributionTransportSecretProvider
            used to obtain the credentials used for accessing the remote endpoints,
            e.g. use target=(name=...) to bind to services by name. (transportSecretProvider.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        packageBuilder.target:
          description: The target reference for the DistributionPackageBuilder used
            to create distribution packages, e.g. use target=(name=...) to bind to
            services by name. (packageBuilder.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        triggers.target:
          description: The target reference for DistributionTrigger used to trigger
            distribution, e.g. use target=(name=...) to bind to services by name.
            (triggers.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactoryProperties"
    orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the agent. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        title:
          description: The display friendly title of the agent. (title)
          "$ref": "#/components/schemas/configNodePropertyString"
        details:
          description: The display friendly details of the agent. (details)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: Whether or not to start the distribution agent. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        serviceName:
          description: The name of the service used to access the repository. (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        log.level:
          description: The log level recorded in the transient log accessible via
            http. (log.level)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        queue.processing.enabled:
          description: Whether or not the distribution agent should process packages
            in the queues. (queue.processing.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        packageExporter.target:
          description: The target reference for the DistributionPackageExporter used
            to receive (export) the distribution packages,e.g. use target=(name=...)
            to bind to services by name. (packageExporter.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        packageImporter.target:
          description: The target reference for the DistributionPackageImporter used
            to send (import) the distribution packages,e.g. use target=(name=...)
            to bind to services by name. (packageImporter.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        requestAuthorizationStrategy.target:
          description: The target reference for the DistributionRequestAuthorizationStrategy
            used to authorize the access to distribution process,e.g. use target=(name=...)
            to bind to services by name. (requestAuthorizationStrategy.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        triggers.target:
          description: The target reference for DistributionTrigger used to trigger
            distribution, e.g. use target=(name=...) to bind to services by name.
            (triggers.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties"
    orgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the agent. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        title:
          description: The display friendly title of the agent. (title)
          "$ref": "#/components/schemas/configNodePropertyString"
        details:
          description: The display friendly details of the agent. (details)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: Whether or not to start the distribution agent. (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        serviceName:
          description: The name of the service used to access the repository. If not
            set, the calling user ResourceResolver will be used (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        log.level:
          description: The log level recorded in the transient log accessible via
            http. (log.level)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        queue.processing.enabled:
          description: Whether or not the distribution agent should process packages
            in the queues. (queue.processing.enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        passiveQueues:
          description: List of queues that should be disabled.These queues will gather
            all the packages until they are removed explicitly. (passiveQueues)
          "$ref": "#/components/schemas/configNodePropertyArray"
        packageExporter.endpoints:
          description: List of endpoints from which packages are received (exported)
            (packageExporter.endpoints)
          "$ref": "#/components/schemas/configNodePropertyArray"
        packageImporter.endpoints:
          description: List of endpoints to which packages are sent (imported). The
            list can be given as a map in case a queue should be configured for each
            endpoint, e.g. queueName=http://... (packageImporter.endpoints)
          "$ref": "#/components/schemas/configNodePropertyArray"
        retry.strategy:
          description: The strategy to apply after a certain number of failed retries.
            (retry.strategy)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        retry.attempts:
          description: The number of times to retry until the retry strategy is applied.
            (retry.attempts)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        pull.items:
          description: Number of subsequent pull requests to make. (pull.items)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        http.conn.timeout:
          description: The connection timeout for HTTP requests (in seconds). (http.conn.timeout)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        requestAuthorizationStrategy.target:
          description: The target reference for the DistributionRequestAuthorizationStrategy
            used to authorize the access to distribution process,e.g. use target=(name=...)
            to bind to services by name. (requestAuthorizationStrategy.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        transportSecretProvider.target:
          description: The target reference for the DistributionTransportSecretProvider
            used to obtain the credentials used for accessing the remote endpoints,
            e.g. use target=(name=...) to bind to services by name. (transportSecretProvider.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        packageBuilder.target:
          description: The target reference for the DistributionPackageBuilder used
            to create distribution packages, e.g. use target=(name=...) to bind to
            services by name. (packageBuilder.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        triggers.target:
          description: The target reference for DistributionTrigger used to trigger
            distribution, e.g. use target=(name=...) to bind to services by name.
            (triggers.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionPackagingImplExporterAgentDistributionPackageExporterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplExporterAgentDistributionPackageExporterFactoryProperties"
    orgApacheSlingDistributionPackagingImplExporterAgentDistributionPackageExporterFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the exporter. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        queue:
          description: The name of the queue from which the packages should be exported.
            (queue)
          "$ref": "#/components/schemas/configNodePropertyString"
        drop.invalid.items:
          description: Remove invalid items from the queue. (drop.invalid.items)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        agent.target:
          description: Description for agent.target (agent.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionPackagingImplExporterLocalDistributionPackageExporterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplExporterLocalDistributionPackageExporterFactoryProperties"
    orgApacheSlingDistributionPackagingImplExporterLocalDistributionPackageExporterFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the exporter. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        packageBuilder.target:
          description: The target reference for the DistributionPackageBuilder used
            to create distribution packages, e.g. use target=(name=...) to bind to
            services by name. (packageBuilder.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionPackagingImplExporterRemoteDistributionPackageExporterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplExporterRemoteDistributionPackageExporterFactoryProperties"
    orgApacheSlingDistributionPackagingImplExporterRemoteDistributionPackageExporterFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the exporter. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        endpoints:
          description: The list of endpoints from which the packages will be exported.
            (endpoints)
          "$ref": "#/components/schemas/configNodePropertyArray"
        pull.items:
          description: number of subsequent pull requests to make (pull.items)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        packageBuilder.target:
          description: The target reference for the DistributionPackageBuilder used
            to create distribution packages, e.g. use target=(name=...) to bind to
            services by name. (packageBuilder.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        transportSecretProvider.target:
          description: The target reference for the DistributionTransportSecretProvider
            used to obtain the credentials used for accessing the remote endpoints,
            e.g. use target=(name=...) to bind to services by name. (transportSecretProvider.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionPackagingImplImporterLocalDistributionPackageImporterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplImporterLocalDistributionPackageImporterFactoryProperties"
    orgApacheSlingDistributionPackagingImplImporterLocalDistributionPackageImporterFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the importer. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        packageBuilder.target:
          description: The target reference for the DistributionPackageBuilder used
            to create distribution packages, e.g. use target=(name=...) to bind to
            services by name. (packageBuilder.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionPackagingImplImporterRemoteDistributionPackageImporterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplImporterRemoteDistributionPackageImporterFactoryProperties"
    orgApacheSlingDistributionPackagingImplImporterRemoteDistributionPackageImporterFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the importer. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        endpoints:
          description: The list of endpoints to which the packages will be imported.
            (endpoints)
          "$ref": "#/components/schemas/configNodePropertyArray"
        transportSecretProvider.target:
          description: The target reference for the DistributionTransportSecretProvider
            used to obtain the credentials used for accessing the remote endpoints,
            e.g. use target=(name=...) to bind to services by name. (transportSecretProvider.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionPackagingImplImporterRepositoryDistributionPackageImporterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionPackagingImplImporterRepositoryDistributionPackageImporterFactoryProperties"
    orgApacheSlingDistributionPackagingImplImporterRepositoryDistributionPackageImporterFactoryProperties:
      type: object
      properties:
        name:
          description: Description for name (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        service.name:
          description: Description for service.name (service.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        path:
          description: Description for path (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        privilege.name:
          description: Description for privilege.name (privilege.name)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionResourcesImplDistributionConfigurationResourceProviderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionResourcesImplDistributionConfigurationResourceProviderFactoryProperties"
    orgApacheSlingDistributionResourcesImplDistributionConfigurationResourceProviderFactoryProperties:
      type: object
      properties:
        provider.roots:
          description: Description for provider.roots (provider.roots)
          "$ref": "#/components/schemas/configNodePropertyString"
        kind:
          description: Description for kind (kind)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionResourcesImplDistributionServiceResourceProviderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionResourcesImplDistributionServiceResourceProviderFactoryProperties"
    orgApacheSlingDistributionResourcesImplDistributionServiceResourceProviderFactoryProperties:
      type: object
      properties:
        provider.roots:
          description: Description for provider.roots (provider.roots)
          "$ref": "#/components/schemas/configNodePropertyString"
        kind:
          description: Description for kind (kind)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionSerializationImplDistributionPackageBuilderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionSerializationImplDistributionPackageBuilderFactoryProperties"
    orgApacheSlingDistributionSerializationImplDistributionPackageBuilderFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the package builder. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        type:
          description: The persistence type used by this package builder (type)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        format.target:
          description: The target reference for the DistributionSerializationFormat
            used to (de)serialize packages, e.g. use target=(name=...) to bind to
            services by name. (format.target)
          "$ref": "#/components/schemas/configNodePropertyString"
        tempFsFolder:
          description: The filesystem folder where the temporary files should be saved.
            (tempFsFolder)
          "$ref": "#/components/schemas/configNodePropertyString"
        fileThreshold:
          description: Once the data reaches the configurable size value, buffering
            to memory switches to file buffering. (fileThreshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        memoryUnit:
          description: The memory unit for the file threshold, Megabytes by default
            (memoryUnit)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        useOffHeapMemory:
          description: Flag to enable/disable the off-heap memory, false by default
            (useOffHeapMemory)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        digestAlgorithm:
          description: The digest algorithm to calculate the package checksum, Megabytes
            by default (digestAlgorithm)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        monitoringQueueSize:
          description: The number of items for monitoring distribution packages creation/installation,
            100 by default (monitoringQueueSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cleanupDelay:
          description: The resource persisted packages are cleaned up periodically
            (asynchronously) since SLING-6503.The delay between two runs of the cleanup
            phase can be configured with this setting. 60 seconds by default (cleanupDelay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        package.filters:
          description: 'The package node path filters. Filter format: path|+include|-exclude
            (package.filters)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        property.filters:
          description: 'The package property path filters. Filter format: path|+include|-exclude
            (property.filters)'
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryProperties"
    orgApacheSlingDistributionSerializationImplVltVaultDistributionPackageBuilderFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the package builder. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        type:
          description: The type of this package builder (type)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        importMode:
          description: The vlt import mode for created packages. (importMode)
          "$ref": "#/components/schemas/configNodePropertyString"
        aclHandling:
          description: The vlt acl handling mode for created packages. (aclHandling)
          "$ref": "#/components/schemas/configNodePropertyString"
        package.roots:
          description: The package roots to be used for created packages. (this is
            useful for assembling packages with an user that cannot read above the
            package root) (package.roots)
          "$ref": "#/components/schemas/configNodePropertyString"
        package.filters:
          description: 'The package node path filters. Filter format: path|+include|-exclude
            (package.filters)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        property.filters:
          description: 'The package property path filters. Filter format: path|+include|-exclude
            (property.filters)'
          "$ref": "#/components/schemas/configNodePropertyArray"
        tempFsFolder:
          description: The filesystem folder where the temporary files should be saved.
            (tempFsFolder)
          "$ref": "#/components/schemas/configNodePropertyString"
        useBinaryReferences:
          description: If activated, it avoids sending binaries in the distribution
            package. (useBinaryReferences)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        autoSaveThreshold:
          description: The value after which autosave is triggered for intermediate
            changes. (autoSaveThreshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        cleanupDelay:
          description: The resource persisted packages are cleaned up periodically
            (asynchronously) since SLING-6503.The delay between two runs of the cleanup
            phase can be configured with this setting. 60 seconds by default (cleanupDelay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        fileThreshold:
          description: Once the data reaches the configurable size value, buffering
            to memory switches to file buffering. (fileThreshold)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        MEGA_BYTES:
          description: The memory unit for the file threshold, Megabytes by default
            (MEGA_BYTES)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        useOffHeapMemory:
          description: Flag to enable/disable the off-heap memory, false by default
            (useOffHeapMemory)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        digestAlgorithm:
          description: The digest algorithm to calculate the package checksum, Megabytes
            by default (digestAlgorithm)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        monitoringQueueSize:
          description: The number of items for monitoring distribution packages creation/installation,
            100 by default (monitoringQueueSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        pathsMapping:
          description: List of paths that require be mapped.The format is {sourcePattern}={destinationPattern},
            e.g. /etc/(.*)=/var/$1/some or simply /data=/bak (pathsMapping)
          "$ref": "#/components/schemas/configNodePropertyArray"
        strictImport:
          description: Flag to mark an error response will be thrown, if a content
            package will incorrectly installed (strictImport)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingDistributionTransportImplUserCredentialsDistributionTransportSecretProviderInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionTransportImplUserCredentialsDistributionTransportSecretProviderProperties"
    orgApacheSlingDistributionTransportImplUserCredentialsDistributionTransportSecretProviderProperties:
      type: object
      properties:
        name:
          description: Description for name (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        username:
          description: The name of the user used to perform remote actions. (username)
          "$ref": "#/components/schemas/configNodePropertyString"
        password:
          description: 'The clear text password to perform authentication. Warning:
            storing clear text passwords is not safe. (password)'
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionTriggerImplDistributionEventDistributeDistributionTriggerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplDistributionEventDistributeDistributionTriggerFactoryProperties"
    orgApacheSlingDistributionTriggerImplDistributionEventDistributeDistributionTriggerFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the trigger. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        path:
          description: The path for which the distribution events will be forwarded.
            (path)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerFactoryProperties"
    orgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the trigger. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        path:
          description: The path for which changes are distributed. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        ignoredPathsPatterns:
          description: The paths matching one of these patterns will be ignored. (ignoredPathsPatterns)
          "$ref": "#/components/schemas/configNodePropertyArray"
        serviceName:
          description: The service used to listen for jcr events (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        deep:
          description: Distribute entire subtree of the event node path. Default is
            'false'. (deep)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributionTriggerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributionTriggerFactoryProperties"
    orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributionTriggerFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the trigger. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        path:
          description: The path for which changes are listened and distributed as
            persisted nugget events. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        serviceName:
          description: The service used to listen for jcr events (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
        nuggetsPath:
          description: The location where serialization of jcr events will be stored
            (nuggetsPath)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionTriggerImplRemoteEventDistributionTriggerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplRemoteEventDistributionTriggerFactoryProperties"
    orgApacheSlingDistributionTriggerImplRemoteEventDistributionTriggerFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the trigger. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        endpoint:
          description: The endpoint from which the remote requests should be polled.
            (endpoint)
          "$ref": "#/components/schemas/configNodePropertyString"
        transportSecretProvider.target:
          description: Description for transportSecretProvider.target (transportSecretProvider.target)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionTriggerImplResourceEventDistributionTriggerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplResourceEventDistributionTriggerFactoryProperties"
    orgApacheSlingDistributionTriggerImplResourceEventDistributionTriggerFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the trigger. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        path:
          description: The resource path for which changes are distributed (path)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingDistributionTriggerImplScheduledDistributionTriggerFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingDistributionTriggerImplScheduledDistributionTriggerFactoryProperties"
    orgApacheSlingDistributionTriggerImplScheduledDistributionTriggerFactoryProperties:
      type: object
      properties:
        name:
          description: The name of the trigger. (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        path:
          description: The path to be distributed periodically. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        seconds:
          description: The number of seconds between distribution requests. Default
            30 seconds. (seconds)
          "$ref": "#/components/schemas/configNodePropertyString"
        serviceName:
          description: The name of the service used to trigger the distribution requests.
            (serviceName)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingEngineImplLogRequestLoggerServiceInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEngineImplLogRequestLoggerServiceProperties"
    orgApacheSlingEngineImplLogRequestLoggerServiceProperties:
      type: object
      properties:
        request.log.service.format:
          description: The format for log entries. This is a format string as defined
            at http://sling.apache.org/site/client-request-logging.html#ClientRequestLogging-LogFormatSpecification.
            (request.log.service.format)
          "$ref": "#/components/schemas/configNodePropertyString"
        request.log.service.output:
          description: Name of the destination for the log output. Depending on the
            output type this is a file name (absolute or relative), a SLF4J logger
            name or the name under which a RequestLog service has been registered.
            (request.log.service.output)
          "$ref": "#/components/schemas/configNodePropertyString"
        request.log.service.outputtype:
          description: Type of log destination. Select "Logger Name" to write the
            access log to an SLF4J logger, "File Name" to write the access log to
            a file (relative paths resolved against sling.home) or "RequestLog Service"
            to use a named OSGi service registered with the service interface "org.apache.sling.engine.RequestLog"
            and a service property "requestlog.name" equal to the Logger Name setting.
            (request.log.service.outputtype)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        request.log.service.onentry:
          description: Check if the logger is called on request entry. Otherwise leave
            unchecked and the logger will be called on request exit (aka termination),
            which is the default for access logger type loggers. (request.log.service.onentry)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingEventJobsQueueConfigurationInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingEventJobsQueueConfigurationProperties"
    orgApacheSlingEventJobsQueueConfigurationProperties:
      type: object
      properties:
        queue.name:
          description: The name of the queue. If matching is used the token {0} can
            be used to substitute the real value. (queue.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        queue.topics:
          description: This value is required and lists the topics processed by this
            queue. The value is a list of strings. If a string ends with a dot, all
            topics in exactly this package match. If the string ends with a star,
            all topics in this package and all subpackages match. If the string neither
            ends with a dot nor with a star, this is assumed to define an exact topic.
            (queue.topics)
          "$ref": "#/components/schemas/configNodePropertyArray"
        queue.type:
          description: The queue type. (queue.type)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        queue.priority:
          description: The priority for the threads used by this queue. Default is
            norm. (queue.priority)
          "$ref": "#/components/schemas/configNodePropertyDropDown"
        queue.retries:
          description: The maximum number of times a failed job slated for retries
            is actually retried. If a job has been retried this number of times and
            still fails, it is not rescheduled and assumed to have failed. The default
            value is 10. (queue.retries)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queue.retrydelay:
          description: The number of milliseconds to sleep between two consecutive
            retries of a job which failed and was set to be retried. The default value
            is 2 seconds. This value is only relevant if there is a single failed
            job in the queue. If there are multiple failed jobs, each job is retried
            in turn without an intervening delay. (queue.retrydelay)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        queue.maxparallel:
          description: The maximum number of parallel jobs started for this queue.
            A value of -1 is substituted with the number of available processors.
            Positive integer values specify number of processors to use.  Can be greater
            than number of processors. A decimal number between 0.0 and 1.0 is treated
            as a fraction of available processors. For example 0.5 means half of the
            available processors. For ordered queue types this value is ignored (always
            enforced to be 1). (queue.maxparallel)
          "$ref": "#/components/schemas/configNodePropertyFloat"
        queue.keepJobs:
          description: If this option is enabled, successful finished jobs are kept
            to provide a complete history. (queue.keepJobs)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        queue.preferRunOnCreationInstance:
          description: If this option is enabled, the jobs are tried to be run on
            the instance where the job was created. (queue.preferRunOnCreationInstance)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
        queue.threadPoolSize:
          description: Optional configuration value for a thread pool to be used by
            this queue. If this is value has a positive number of threads configuration,
            this queue uses an own thread pool with the configured number of threads.
            (queue.threadPoolSize)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        service.ranking:
          description: Integer value defining the ranking of this queue configuration.
            If more than one queue matches a job topic, the one with the highest ranking
            is used. (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
    orgApacheSlingFeatureflagsFeatureInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingFeatureflagsFeatureProperties"
    orgApacheSlingFeatureflagsFeatureProperties:
      type: object
      properties:
        name:
          description: Short name of this feature. This name is used to refer to this
            feature when checking for it to be enabled or not. This property is required
            and defaults to a name derived from the feature's class name and object
            identity. It is strongly recommended to define a useful and unique for
            the feature (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        description:
          description: Description for the feature. The intent is to descibe the behaviour
            of the application if this feature would be enabled. It is recommended
            to define this property. The default value is the value of the name property.
            (description)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: Boolean flag indicating whether the feature is enabled or not
            by this configuration (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingFeatureflagsImplConfiguredFeatureInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingFeatureflagsImplConfiguredFeatureProperties"
    orgApacheSlingFeatureflagsImplConfiguredFeatureProperties:
      type: object
      properties:
        name:
          description: Short name of this feature. This name is used to refer to this
            feature when checking for it to be enabled or not. This property is required
            and defaults to a name derived from the feature's class name and object
            identity. It is strongly recommended to define a useful and unique for
            the feature (name)
          "$ref": "#/components/schemas/configNodePropertyString"
        description:
          description: Description for the feature. The intent is to descibe the behaviour
            of the application if this feature would be enabled. It is recommended
            to define this property. The default value is the value of the name property.
            (description)
          "$ref": "#/components/schemas/configNodePropertyString"
        enabled:
          description: Boolean flag indicating whether the feature is enabled or not
            by this configuration (enabled)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingHcCoreImplCompositeHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingHcCoreImplCompositeHealthCheckProperties"
    orgApacheSlingHcCoreImplCompositeHealthCheckProperties:
      type: object
      properties:
        hc.name:
          description: Name of this health check. (hc.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        hc.tags:
          description: List of tags for this health check, used to select subsets
            of health checks for execution e.g. by a composite health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        hc.mbean.name:
          description: Name of the MBean to create for this health check. If empty,
            no MBean is registered. (hc.mbean.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        filter.tags:
          description: Tags used to select which health checks the composite health
            check executes. (filter.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        filter.combineTagsWithOr:
          description: Tags used to select which health checks the composite health
            check executes. (filter.combineTagsWithOr)
          "$ref": "#/components/schemas/configNodePropertyBoolean"
    orgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties"
    orgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties:
      type: object
      properties:
        hc.name:
          description: Name of this health check. (hc.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        hc.tags:
          description: List of tags for this health check, used to select subsets
            of health checks for execution e.g. by a composite health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        hc.mbean.name:
          description: Name of the MBean to create for this health check. If empty,
            no MBean is registered. (hc.mbean.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        mbean.name:
          description: The name of the MBean to check by this health check. (mbean.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        attribute.name:
          description: The name of the MBean attribute to check by this health check.
            (attribute.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        attribute.value.constraint:
          description: Constraint on the MBean attribute value. (attribute.value.constraint)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingHcCoreImplScriptableHealthCheckInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingHcCoreImplScriptableHealthCheckProperties"
    orgApacheSlingHcCoreImplScriptableHealthCheckProperties:
      type: object
      properties:
        hc.name:
          description: Name of this health check. (hc.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        hc.tags:
          description: List of tags for this health check, used to select subsets
            of health checks for execution e.g. by a composite health check. (hc.tags)
          "$ref": "#/components/schemas/configNodePropertyArray"
        hc.mbean.name:
          description: Name of the MBean to create for this health check. If empty,
            no MBean is registered. (hc.mbean.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        expression:
          description: The value of this expression must be "true" for this check
            to be successful. (expression)
          "$ref": "#/components/schemas/configNodePropertyString"
        language.extension:
          description: File extension of the language to use to evaluate the expression,
            for example "ecma" or "groovy", asssuming the corresponding script engine
            is available. By default "ecma" is used. (language.extension)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties"
    orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentProperties:
      type: object
      properties:
        whitelist.name:
          description: Optional name to disambiguate configurations. (whitelist.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        whitelist.bundles:
          description: A list of bundle symbolic names allowed to use loginAdministrative().
            (whitelist.bundles)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingJcrRepoinitRepositoryInitializerInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrRepoinitRepositoryInitializerProperties"
    orgApacheSlingJcrRepoinitRepositoryInitializerProperties:
      type: object
      properties:
        references:
          description: References to the source text that provides repoinit statements.
            format is a raw URL. (references)
          "$ref": "#/components/schemas/configNodePropertyArray"
        scripts:
          description: Contents of a repo init script. (scripts)
          "$ref": "#/components/schemas/configNodePropertyArray"
    orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties"
    orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryProperties:
      type: object
      properties:
        path:
          description: The path is a regular expression for which resources the service
            should be called (path)
          "$ref": "#/components/schemas/configNodePropertyString"
        checkpath.prefix:
          description: If this value is configured with a prefix and the resource
            path starts with this prefix, the prefix is removed from the path and
            the remaining part is appended  to the JCR path to check. For example
            if /foo/a/b/c is required, this prefix is  configured with /foo and the
            JCR node to check is /check, the permissions at  /check/a/b/c are checked.
            (checkpath.prefix)
          "$ref": "#/components/schemas/configNodePropertyString"
        jcrPath:
          description: This node is checked for permissions to the resources. (jcrPath)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoryInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoryProperties"
    orgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoryProperties:
      type: object
      properties:
        felix.inventory.printer.name:
          description: The unique name of the inventory printer. (felix.inventory.printer.name)
          "$ref": "#/components/schemas/configNodePropertyString"
        felix.inventory.printer.title:
          description: The title of the inventory printer. (felix.inventory.printer.title)
          "$ref": "#/components/schemas/configNodePropertyString"
        path:
          description: The resource path to include. (path)
          "$ref": "#/components/schemas/configNodePropertyString"
    orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo:
      type: object
      properties:
        pid:
          type: string
        title:
          type: string
        description:
          type: string
        properties:
          "$ref": "#/components/schemas/orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedProperties"
    orgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedProperties:
      type: object
      properties:
        service.ranking:
          description: Amendments are processed in order of their ranking, an amendment
            with a higher ranking has precedence over a mapping with a lower ranking.
            (service.ranking)
          "$ref": "#/components/schemas/configNodePropertyInteger"
        user.mapping:
          description: Provides mappings from service name to user (and optionally
            principal) names. Each entry is of the form 'bundleId [ ":" subServiceName
            ] "=" userName' | "[" principalNames "]" where bundleId and subServiceName
            identify the service and userName/principalNames defines the name(s) of
            the user/principals to provide to the service. 'principalNames is defined
            to be a comma separated list of principal names. Invalid entries are logged
            and ignored. (user.mapping)
          "$ref": "#/components/schemas/configNodePropertyArray"
servers:
- url: "/"
