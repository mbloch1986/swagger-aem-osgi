/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties {
  
  @SerializedName("hc.tags")
  private ConfigNodePropertyArray hcTags = null;
  @SerializedName("dispatcher.address")
  private ConfigNodePropertyString dispatcherAddress = null;
  @SerializedName("dispatcher.filter.allowed")
  private ConfigNodePropertyArray dispatcherFilterAllowed = null;
  @SerializedName("dispatcher.filter.blocked")
  private ConfigNodePropertyArray dispatcherFilterBlocked = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getHcTags() {
    return hcTags;
  }
  public void setHcTags(ConfigNodePropertyArray hcTags) {
    this.hcTags = hcTags;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getDispatcherAddress() {
    return dispatcherAddress;
  }
  public void setDispatcherAddress(ConfigNodePropertyString dispatcherAddress) {
    this.dispatcherAddress = dispatcherAddress;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getDispatcherFilterAllowed() {
    return dispatcherFilterAllowed;
  }
  public void setDispatcherFilterAllowed(ConfigNodePropertyArray dispatcherFilterAllowed) {
    this.dispatcherFilterAllowed = dispatcherFilterAllowed;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getDispatcherFilterBlocked() {
    return dispatcherFilterBlocked;
  }
  public void setDispatcherFilterBlocked(ConfigNodePropertyArray dispatcherFilterBlocked) {
    this.dispatcherFilterBlocked = dispatcherFilterBlocked;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties = (ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties) o;
    return (this.hcTags == null ? comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.hcTags == null : this.hcTags.equals(comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.hcTags)) &&
        (this.dispatcherAddress == null ? comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherAddress == null : this.dispatcherAddress.equals(comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherAddress)) &&
        (this.dispatcherFilterAllowed == null ? comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherFilterAllowed == null : this.dispatcherFilterAllowed.equals(comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherFilterAllowed)) &&
        (this.dispatcherFilterBlocked == null ? comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherFilterBlocked == null : this.dispatcherFilterBlocked.equals(comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties.dispatcherFilterBlocked));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.hcTags == null ? 0: this.hcTags.hashCode());
    result = 31 * result + (this.dispatcherAddress == null ? 0: this.dispatcherAddress.hashCode());
    result = 31 * result + (this.dispatcherFilterAllowed == null ? 0: this.dispatcherFilterAllowed.hashCode());
    result = 31 * result + (this.dispatcherFilterBlocked == null ? 0: this.dispatcherFilterBlocked.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckProperties {\n");
    
    sb.append("  hcTags: ").append(hcTags).append("\n");
    sb.append("  dispatcherAddress: ").append(dispatcherAddress).append("\n");
    sb.append("  dispatcherFilterAllowed: ").append(dispatcherFilterAllowed).append("\n");
    sb.append("  dispatcherFilterBlocked: ").append(dispatcherFilterBlocked).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
