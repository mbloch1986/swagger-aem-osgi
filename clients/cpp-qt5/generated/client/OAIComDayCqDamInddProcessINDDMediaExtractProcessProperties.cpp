/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties() {
    init();
}

OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::~OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties() {
    this->cleanup();
}

void
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::init() {
    process_label = new OAIConfigNodePropertyString();
    m_process_label_isSet = false;
    cq_dam_indd_pages_regex = new OAIConfigNodePropertyString();
    m_cq_dam_indd_pages_regex_isSet = false;
    ids_job_decoupled = new OAIConfigNodePropertyBoolean();
    m_ids_job_decoupled_isSet = false;
    ids_job_workflow_model = new OAIConfigNodePropertyString();
    m_ids_job_workflow_model_isSet = false;
}

void
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::cleanup() {
    if(process_label != nullptr) { 
        delete process_label;
    }
    if(cq_dam_indd_pages_regex != nullptr) { 
        delete cq_dam_indd_pages_regex;
    }
    if(ids_job_decoupled != nullptr) { 
        delete ids_job_decoupled;
    }
    if(ids_job_workflow_model != nullptr) { 
        delete ids_job_workflow_model;
    }
}

OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties*
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&process_label, pJson["process.label"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&cq_dam_indd_pages_regex, pJson["cq.dam.indd.pages.regex"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&ids_job_decoupled, pJson["ids.job.decoupled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&ids_job_workflow_model, pJson["ids.job.workflow.model"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::asJsonObject() {
    QJsonObject obj;
    if((process_label != nullptr) && (process_label->isSet())){
        toJsonValue(QString("process.label"), process_label, obj, QString("OAIConfigNodePropertyString"));
    }
    if((cq_dam_indd_pages_regex != nullptr) && (cq_dam_indd_pages_regex->isSet())){
        toJsonValue(QString("cq.dam.indd.pages.regex"), cq_dam_indd_pages_regex, obj, QString("OAIConfigNodePropertyString"));
    }
    if((ids_job_decoupled != nullptr) && (ids_job_decoupled->isSet())){
        toJsonValue(QString("ids.job.decoupled"), ids_job_decoupled, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((ids_job_workflow_model != nullptr) && (ids_job_workflow_model->isSet())){
        toJsonValue(QString("ids.job.workflow.model"), ids_job_workflow_model, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::getProcessLabel() {
    return process_label;
}
void
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::setProcessLabel(OAIConfigNodePropertyString* process_label) {
    this->process_label = process_label;
    this->m_process_label_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::getCqDamInddPagesRegex() {
    return cq_dam_indd_pages_regex;
}
void
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::setCqDamInddPagesRegex(OAIConfigNodePropertyString* cq_dam_indd_pages_regex) {
    this->cq_dam_indd_pages_regex = cq_dam_indd_pages_regex;
    this->m_cq_dam_indd_pages_regex_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::getIdsJobDecoupled() {
    return ids_job_decoupled;
}
void
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::setIdsJobDecoupled(OAIConfigNodePropertyBoolean* ids_job_decoupled) {
    this->ids_job_decoupled = ids_job_decoupled;
    this->m_ids_job_decoupled_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::getIdsJobWorkflowModel() {
    return ids_job_workflow_model;
}
void
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::setIdsJobWorkflowModel(OAIConfigNodePropertyString* ids_job_workflow_model) {
    this->ids_job_workflow_model = ids_job_workflow_model;
    this->m_ids_job_workflow_model_isSet = true;
}


bool
OAIComDayCqDamInddProcessINDDMediaExtractProcessProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(process_label != nullptr && process_label->isSet()){ isObjectUpdated = true; break;}
        if(cq_dam_indd_pages_regex != nullptr && cq_dam_indd_pages_regex->isSet()){ isObjectUpdated = true; break;}
        if(ids_job_decoupled != nullptr && ids_job_decoupled->isSet()){ isObjectUpdated = true; break;}
        if(ids_job_workflow_model != nullptr && ids_job_workflow_model->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

