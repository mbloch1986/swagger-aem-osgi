# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqScheduledExporterImplScheduledExporterImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_paths: ConfigNodePropertyArray=None, exporter_user: ConfigNodePropertyString=None):  # noqa: E501
        """ComAdobeCqScheduledExporterImplScheduledExporterImplProperties - a model defined in OpenAPI

        :param include_paths: The include_paths of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.  # noqa: E501
        :type include_paths: ConfigNodePropertyArray
        :param exporter_user: The exporter_user of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.  # noqa: E501
        :type exporter_user: ConfigNodePropertyString
        """
        self.openapi_types = {
            'include_paths': ConfigNodePropertyArray,
            'exporter_user': ConfigNodePropertyString
        }

        self.attribute_map = {
            'include_paths': 'include.paths',
            'exporter_user': 'exporter.user'
        }

        self._include_paths = include_paths
        self._exporter_user = exporter_user

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqScheduledExporterImplScheduledExporterImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqScheduledExporterImplScheduledExporterImplProperties of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.  # noqa: E501
        :rtype: ComAdobeCqScheduledExporterImplScheduledExporterImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_paths(self) -> ConfigNodePropertyArray:
        """Gets the include_paths of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.


        :return: The include_paths of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._include_paths

    @include_paths.setter
    def include_paths(self, include_paths: ConfigNodePropertyArray):
        """Sets the include_paths of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.


        :param include_paths: The include_paths of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.
        :type include_paths: ConfigNodePropertyArray
        """

        self._include_paths = include_paths

    @property
    def exporter_user(self) -> ConfigNodePropertyString:
        """Gets the exporter_user of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.


        :return: The exporter_user of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._exporter_user

    @exporter_user.setter
    def exporter_user(self, exporter_user: ConfigNodePropertyString):
        """Sets the exporter_user of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.


        :param exporter_user: The exporter_user of this ComAdobeCqScheduledExporterImplScheduledExporterImplProperties.
        :type exporter_user: ConfigNodePropertyString
        """

        self._exporter_user = exporter_user
