# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archiving_enabled: ConfigNodePropertyBoolean=None, scheduler_expression: ConfigNodePropertyString=None, archive_since_days_completed: ConfigNodePropertyInteger=None):  # noqa: E501
        """ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties - a model defined in OpenAPI

        :param archiving_enabled: The archiving_enabled of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.  # noqa: E501
        :type archiving_enabled: ConfigNodePropertyBoolean
        :param scheduler_expression: The scheduler_expression of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.  # noqa: E501
        :type scheduler_expression: ConfigNodePropertyString
        :param archive_since_days_completed: The archive_since_days_completed of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.  # noqa: E501
        :type archive_since_days_completed: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'archiving_enabled': ConfigNodePropertyBoolean,
            'scheduler_expression': ConfigNodePropertyString,
            'archive_since_days_completed': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'archiving_enabled': 'archiving.enabled',
            'scheduler_expression': 'scheduler.expression',
            'archive_since_days_completed': 'archive.since.days.completed'
        }

        self._archiving_enabled = archiving_enabled
        self._scheduler_expression = scheduler_expression
        self._archive_since_days_completed = archive_since_days_completed

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.  # noqa: E501
        :rtype: ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archiving_enabled(self) -> ConfigNodePropertyBoolean:
        """Gets the archiving_enabled of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.


        :return: The archiving_enabled of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._archiving_enabled

    @archiving_enabled.setter
    def archiving_enabled(self, archiving_enabled: ConfigNodePropertyBoolean):
        """Sets the archiving_enabled of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.


        :param archiving_enabled: The archiving_enabled of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.
        :type archiving_enabled: ConfigNodePropertyBoolean
        """

        self._archiving_enabled = archiving_enabled

    @property
    def scheduler_expression(self) -> ConfigNodePropertyString:
        """Gets the scheduler_expression of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.


        :return: The scheduler_expression of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._scheduler_expression

    @scheduler_expression.setter
    def scheduler_expression(self, scheduler_expression: ConfigNodePropertyString):
        """Sets the scheduler_expression of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.


        :param scheduler_expression: The scheduler_expression of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.
        :type scheduler_expression: ConfigNodePropertyString
        """

        self._scheduler_expression = scheduler_expression

    @property
    def archive_since_days_completed(self) -> ConfigNodePropertyInteger:
        """Gets the archive_since_days_completed of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.


        :return: The archive_since_days_completed of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._archive_since_days_completed

    @archive_since_days_completed.setter
    def archive_since_days_completed(self, archive_since_days_completed: ConfigNodePropertyInteger):
        """Sets the archive_since_days_completed of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.


        :param archive_since_days_completed: The archive_since_days_completed of this ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceProperties.
        :type archive_since_days_completed: ConfigNodePropertyInteger
        """

        self._archive_since_days_completed = archive_since_days_completed
