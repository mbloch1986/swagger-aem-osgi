/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties() {
    init();
}

OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::~OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties() {
    this->cleanup();
}

void
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::init() {
    cq_social_reporting_analytics_polling_importer_interval = new OAIConfigNodePropertyInteger();
    m_cq_social_reporting_analytics_polling_importer_interval_isSet = false;
    cq_social_reporting_analytics_polling_importer_page_size = new OAIConfigNodePropertyInteger();
    m_cq_social_reporting_analytics_polling_importer_page_size_isSet = false;
}

void
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::cleanup() {
    if(cq_social_reporting_analytics_polling_importer_interval != nullptr) { 
        delete cq_social_reporting_analytics_polling_importer_interval;
    }
    if(cq_social_reporting_analytics_polling_importer_page_size != nullptr) { 
        delete cq_social_reporting_analytics_polling_importer_page_size;
    }
}

OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties*
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_social_reporting_analytics_polling_importer_interval, pJson["cq.social.reporting.analytics.polling.importer.interval"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&cq_social_reporting_analytics_polling_importer_page_size, pJson["cq.social.reporting.analytics.polling.importer.pageSize"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_social_reporting_analytics_polling_importer_interval != nullptr) && (cq_social_reporting_analytics_polling_importer_interval->isSet())){
        toJsonValue(QString("cq.social.reporting.analytics.polling.importer.interval"), cq_social_reporting_analytics_polling_importer_interval, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((cq_social_reporting_analytics_polling_importer_page_size != nullptr) && (cq_social_reporting_analytics_polling_importer_page_size->isSet())){
        toJsonValue(QString("cq.social.reporting.analytics.polling.importer.pageSize"), cq_social_reporting_analytics_polling_importer_page_size, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::getCqSocialReportingAnalyticsPollingImporterInterval() {
    return cq_social_reporting_analytics_polling_importer_interval;
}
void
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::setCqSocialReportingAnalyticsPollingImporterInterval(OAIConfigNodePropertyInteger* cq_social_reporting_analytics_polling_importer_interval) {
    this->cq_social_reporting_analytics_polling_importer_interval = cq_social_reporting_analytics_polling_importer_interval;
    this->m_cq_social_reporting_analytics_polling_importer_interval_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::getCqSocialReportingAnalyticsPollingImporterPageSize() {
    return cq_social_reporting_analytics_polling_importer_page_size;
}
void
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::setCqSocialReportingAnalyticsPollingImporterPageSize(OAIConfigNodePropertyInteger* cq_social_reporting_analytics_polling_importer_page_size) {
    this->cq_social_reporting_analytics_polling_importer_page_size = cq_social_reporting_analytics_polling_importer_page_size;
    this->m_cq_social_reporting_analytics_polling_importer_page_size_isSet = true;
}


bool
OAIComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_social_reporting_analytics_polling_importer_interval != nullptr && cq_social_reporting_analytics_polling_importer_interval->isSet()){ isObjectUpdated = true; break;}
        if(cq_social_reporting_analytics_polling_importer_page_size != nullptr && cq_social_reporting_analytics_polling_importer_page_size->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

