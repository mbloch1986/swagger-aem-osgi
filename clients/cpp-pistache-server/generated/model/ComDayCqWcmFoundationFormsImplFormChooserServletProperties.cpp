/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmFoundationFormsImplFormChooserServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmFoundationFormsImplFormChooserServletProperties::ComDayCqWcmFoundationFormsImplFormChooserServletProperties()
{
    m_Service_nameIsSet = false;
    m_Sling_servlet_resourceTypesIsSet = false;
    m_Sling_servlet_selectorsIsSet = false;
    m_Sling_servlet_methodsIsSet = false;
    m_Forms_formchooserservlet_advansesearch_requireIsSet = false;
    
}

ComDayCqWcmFoundationFormsImplFormChooserServletProperties::~ComDayCqWcmFoundationFormsImplFormChooserServletProperties()
{
}

void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmFoundationFormsImplFormChooserServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Service_nameIsSet)
    {
        val["service.name"] = ModelBase::toJson(m_Service_name);
    }
    if(m_Sling_servlet_resourceTypesIsSet)
    {
        val["sling.servlet.resourceTypes"] = ModelBase::toJson(m_Sling_servlet_resourceTypes);
    }
    if(m_Sling_servlet_selectorsIsSet)
    {
        val["sling.servlet.selectors"] = ModelBase::toJson(m_Sling_servlet_selectors);
    }
    if(m_Sling_servlet_methodsIsSet)
    {
        val["sling.servlet.methods"] = ModelBase::toJson(m_Sling_servlet_methods);
    }
    if(m_Forms_formchooserservlet_advansesearch_requireIsSet)
    {
        val["forms.formchooserservlet.advansesearch.require"] = ModelBase::toJson(m_Forms_formchooserservlet_advansesearch_require);
    }
    

    return val;
}

void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("service.name") != val.end())
    {
        if(!val["service.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["service.name"]);
            setServiceName( newItem );
        }
        
    }
    if(val.find("sling.servlet.resourceTypes") != val.end())
    {
        if(!val["sling.servlet.resourceTypes"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sling.servlet.resourceTypes"]);
            setSlingServletResourceTypes( newItem );
        }
        
    }
    if(val.find("sling.servlet.selectors") != val.end())
    {
        if(!val["sling.servlet.selectors"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sling.servlet.selectors"]);
            setSlingServletSelectors( newItem );
        }
        
    }
    if(val.find("sling.servlet.methods") != val.end())
    {
        if(!val["sling.servlet.methods"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["sling.servlet.methods"]);
            setSlingServletMethods( newItem );
        }
        
    }
    if(val.find("forms.formchooserservlet.advansesearch.require") != val.end())
    {
        if(!val["forms.formchooserservlet.advansesearch.require"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["forms.formchooserservlet.advansesearch.require"]);
            setFormsFormchooserservletAdvansesearchRequire( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqWcmFoundationFormsImplFormChooserServletProperties::getServiceName() const
{
    return m_Service_name;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::setServiceName(ConfigNodePropertyString const& value)
{
    m_Service_name = value;
    m_Service_nameIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplFormChooserServletProperties::serviceNameIsSet() const
{
    return m_Service_nameIsSet;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::unsetService_name()
{
    m_Service_nameIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmFoundationFormsImplFormChooserServletProperties::getSlingServletResourceTypes() const
{
    return m_Sling_servlet_resourceTypes;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::setSlingServletResourceTypes(ConfigNodePropertyString const& value)
{
    m_Sling_servlet_resourceTypes = value;
    m_Sling_servlet_resourceTypesIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplFormChooserServletProperties::slingServletResourceTypesIsSet() const
{
    return m_Sling_servlet_resourceTypesIsSet;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::unsetSling_servlet_resourceTypes()
{
    m_Sling_servlet_resourceTypesIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmFoundationFormsImplFormChooserServletProperties::getSlingServletSelectors() const
{
    return m_Sling_servlet_selectors;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::setSlingServletSelectors(ConfigNodePropertyString const& value)
{
    m_Sling_servlet_selectors = value;
    m_Sling_servlet_selectorsIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplFormChooserServletProperties::slingServletSelectorsIsSet() const
{
    return m_Sling_servlet_selectorsIsSet;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::unsetSling_servlet_selectors()
{
    m_Sling_servlet_selectorsIsSet = false;
}
ConfigNodePropertyArray ComDayCqWcmFoundationFormsImplFormChooserServletProperties::getSlingServletMethods() const
{
    return m_Sling_servlet_methods;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::setSlingServletMethods(ConfigNodePropertyArray const& value)
{
    m_Sling_servlet_methods = value;
    m_Sling_servlet_methodsIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplFormChooserServletProperties::slingServletMethodsIsSet() const
{
    return m_Sling_servlet_methodsIsSet;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::unsetSling_servlet_methods()
{
    m_Sling_servlet_methodsIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqWcmFoundationFormsImplFormChooserServletProperties::getFormsFormchooserservletAdvansesearchRequire() const
{
    return m_Forms_formchooserservlet_advansesearch_require;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::setFormsFormchooserservletAdvansesearchRequire(ConfigNodePropertyBoolean const& value)
{
    m_Forms_formchooserservlet_advansesearch_require = value;
    m_Forms_formchooserservlet_advansesearch_requireIsSet = true;
}
bool ComDayCqWcmFoundationFormsImplFormChooserServletProperties::formsFormchooserservletAdvansesearchRequireIsSet() const
{
    return m_Forms_formchooserservlet_advansesearch_requireIsSet;
}
void ComDayCqWcmFoundationFormsImplFormChooserServletProperties::unsetForms_formchooserservlet_advansesearch_require()
{
    m_Forms_formchooserservlet_advansesearch_requireIsSet = false;
}

}
}
}
}

