package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingProperties._

case class ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingProperties (
  enabled: Option[ConfigNodePropertyBoolean],
fallbackPaths: Option[ConfigNodePropertyArray])

object ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingPropertiesCodecJson: CodecJson[ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingProperties] = CodecJson.derive[ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingProperties]
  implicit val ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingPropertiesDecoder: EntityDecoder[ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingProperties] = jsonOf[ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingProperties]
  implicit val ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingPropertiesEncoder: EntityEncoder[ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingProperties] = jsonEncoderOf[ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingProperties]
}
