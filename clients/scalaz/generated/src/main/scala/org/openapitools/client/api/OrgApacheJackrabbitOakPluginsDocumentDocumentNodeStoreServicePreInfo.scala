package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo._

case class OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreProperties],
bundleLocation: Option[String],
serviceLocation: Option[String])

object OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo {
  import DateTimeCodecs._

  implicit val OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfoCodecJson: CodecJson[OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo] = CodecJson.derive[OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo]
  implicit val OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfoDecoder: EntityDecoder[OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo] = jsonOf[OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo]
  implicit val OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfoEncoder: EntityEncoder[OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo] = jsonEncoderOf[OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo]
}
