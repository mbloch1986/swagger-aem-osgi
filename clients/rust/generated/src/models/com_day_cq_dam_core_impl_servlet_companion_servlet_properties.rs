/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqDamCoreImplServletCompanionServletProperties {
  #[serde(rename = "More Info")]
  more_info: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path}")]
  mntoverlaydamguicontentassetsmoreinfo_htmlpath: Option<::models::ConfigNodePropertyString>
}

impl ComDayCqDamCoreImplServletCompanionServletProperties {
  pub fn new() -> ComDayCqDamCoreImplServletCompanionServletProperties {
    ComDayCqDamCoreImplServletCompanionServletProperties {
      more_info: None,
      mntoverlaydamguicontentassetsmoreinfo_htmlpath: None
    }
  }

  pub fn set_more_info(&mut self, more_info: ::models::ConfigNodePropertyString) {
    self.more_info = Some(more_info);
  }

  pub fn with_more_info(mut self, more_info: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplServletCompanionServletProperties {
    self.more_info = Some(more_info);
    self
  }

  pub fn more_info(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.more_info.as_ref()
  }

  pub fn reset_more_info(&mut self) {
    self.more_info = None;
  }

  pub fn set_mntoverlaydamguicontentassetsmoreinfo_htmlpath(&mut self, mntoverlaydamguicontentassetsmoreinfo_htmlpath: ::models::ConfigNodePropertyString) {
    self.mntoverlaydamguicontentassetsmoreinfo_htmlpath = Some(mntoverlaydamguicontentassetsmoreinfo_htmlpath);
  }

  pub fn with_mntoverlaydamguicontentassetsmoreinfo_htmlpath(mut self, mntoverlaydamguicontentassetsmoreinfo_htmlpath: ::models::ConfigNodePropertyString) -> ComDayCqDamCoreImplServletCompanionServletProperties {
    self.mntoverlaydamguicontentassetsmoreinfo_htmlpath = Some(mntoverlaydamguicontentassetsmoreinfo_htmlpath);
    self
  }

  pub fn mntoverlaydamguicontentassetsmoreinfo_htmlpath(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.mntoverlaydamguicontentassetsmoreinfo_htmlpath.as_ref()
  }

  pub fn reset_mntoverlaydamguicontentassetsmoreinfo_htmlpath(&mut self) {
    self.mntoverlaydamguicontentassetsmoreinfo_htmlpath = None;
  }

}



