/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties.h
 *
 * 
 */

#ifndef ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties_H_
#define ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties
    : public ModelBase
{
public:
    ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties();
    virtual ~ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getParameterWhitelist() const;
    void setParameterWhitelist(ConfigNodePropertyArray const& value);
    bool parameterWhitelistIsSet() const;
    void unsetParameter_whitelist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getParameterWhitelistPrefixes() const;
    void setParameterWhitelistPrefixes(ConfigNodePropertyArray const& value);
    bool parameterWhitelistPrefixesIsSet() const;
    void unsetParameter_whitelist_prefixes();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getBinaryParameterWhitelist() const;
    void setBinaryParameterWhitelist(ConfigNodePropertyArray const& value);
    bool binaryParameterWhitelistIsSet() const;
    void unsetBinary_parameter_whitelist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getModifierWhitelist() const;
    void setModifierWhitelist(ConfigNodePropertyArray const& value);
    bool modifierWhitelistIsSet() const;
    void unsetModifier_whitelist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getOperationWhitelist() const;
    void setOperationWhitelist(ConfigNodePropertyArray const& value);
    bool operationWhitelistIsSet() const;
    void unsetOperation_whitelist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getOperationWhitelistPrefixes() const;
    void setOperationWhitelistPrefixes(ConfigNodePropertyArray const& value);
    bool operationWhitelistPrefixesIsSet() const;
    void unsetOperation_whitelist_prefixes();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getTypehintWhitelist() const;
    void setTypehintWhitelist(ConfigNodePropertyArray const& value);
    bool typehintWhitelistIsSet() const;
    void unsetTypehint_whitelist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getResourcetypeWhitelist() const;
    void setResourcetypeWhitelist(ConfigNodePropertyArray const& value);
    bool resourcetypeWhitelistIsSet() const;
    void unsetResourcetype_whitelist();

protected:
    ConfigNodePropertyArray m_Parameter_whitelist;
    bool m_Parameter_whitelistIsSet;
    ConfigNodePropertyArray m_Parameter_whitelist_prefixes;
    bool m_Parameter_whitelist_prefixesIsSet;
    ConfigNodePropertyArray m_Binary_parameter_whitelist;
    bool m_Binary_parameter_whitelistIsSet;
    ConfigNodePropertyArray m_Modifier_whitelist;
    bool m_Modifier_whitelistIsSet;
    ConfigNodePropertyArray m_Operation_whitelist;
    bool m_Operation_whitelistIsSet;
    ConfigNodePropertyArray m_Operation_whitelist_prefixes;
    bool m_Operation_whitelist_prefixesIsSet;
    ConfigNodePropertyArray m_Typehint_whitelist;
    bool m_Typehint_whitelistIsSet;
    ConfigNodePropertyArray m_Resourcetype_whitelist;
    bool m_Resourcetype_whitelistIsSet;
};

}
}
}
}

#endif /* ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties_H_ */
