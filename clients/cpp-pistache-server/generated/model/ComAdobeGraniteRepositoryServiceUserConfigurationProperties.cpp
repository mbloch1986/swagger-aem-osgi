/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteRepositoryServiceUserConfigurationProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteRepositoryServiceUserConfigurationProperties::ComAdobeGraniteRepositoryServiceUserConfigurationProperties()
{
    m_Service_rankingIsSet = false;
    m_Serviceusers_simpleSubjectPopulationIsSet = false;
    m_Serviceusers_listIsSet = false;
    
}

ComAdobeGraniteRepositoryServiceUserConfigurationProperties::~ComAdobeGraniteRepositoryServiceUserConfigurationProperties()
{
}

void ComAdobeGraniteRepositoryServiceUserConfigurationProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteRepositoryServiceUserConfigurationProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Service_rankingIsSet)
    {
        val["service.ranking"] = ModelBase::toJson(m_Service_ranking);
    }
    if(m_Serviceusers_simpleSubjectPopulationIsSet)
    {
        val["serviceusers.simpleSubjectPopulation"] = ModelBase::toJson(m_Serviceusers_simpleSubjectPopulation);
    }
    if(m_Serviceusers_listIsSet)
    {
        val["serviceusers.list"] = ModelBase::toJson(m_Serviceusers_list);
    }
    

    return val;
}

void ComAdobeGraniteRepositoryServiceUserConfigurationProperties::fromJson(nlohmann::json& val)
{
    if(val.find("service.ranking") != val.end())
    {
        if(!val["service.ranking"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["service.ranking"]);
            setServiceRanking( newItem );
        }
        
    }
    if(val.find("serviceusers.simpleSubjectPopulation") != val.end())
    {
        if(!val["serviceusers.simpleSubjectPopulation"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["serviceusers.simpleSubjectPopulation"]);
            setServiceusersSimpleSubjectPopulation( newItem );
        }
        
    }
    if(val.find("serviceusers.list") != val.end())
    {
        if(!val["serviceusers.list"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["serviceusers.list"]);
            setServiceusersList( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeGraniteRepositoryServiceUserConfigurationProperties::getServiceRanking() const
{
    return m_Service_ranking;
}
void ComAdobeGraniteRepositoryServiceUserConfigurationProperties::setServiceRanking(ConfigNodePropertyInteger const& value)
{
    m_Service_ranking = value;
    m_Service_rankingIsSet = true;
}
bool ComAdobeGraniteRepositoryServiceUserConfigurationProperties::serviceRankingIsSet() const
{
    return m_Service_rankingIsSet;
}
void ComAdobeGraniteRepositoryServiceUserConfigurationProperties::unsetService_ranking()
{
    m_Service_rankingIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeGraniteRepositoryServiceUserConfigurationProperties::getServiceusersSimpleSubjectPopulation() const
{
    return m_Serviceusers_simpleSubjectPopulation;
}
void ComAdobeGraniteRepositoryServiceUserConfigurationProperties::setServiceusersSimpleSubjectPopulation(ConfigNodePropertyBoolean const& value)
{
    m_Serviceusers_simpleSubjectPopulation = value;
    m_Serviceusers_simpleSubjectPopulationIsSet = true;
}
bool ComAdobeGraniteRepositoryServiceUserConfigurationProperties::serviceusersSimpleSubjectPopulationIsSet() const
{
    return m_Serviceusers_simpleSubjectPopulationIsSet;
}
void ComAdobeGraniteRepositoryServiceUserConfigurationProperties::unsetServiceusers_simpleSubjectPopulation()
{
    m_Serviceusers_simpleSubjectPopulationIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteRepositoryServiceUserConfigurationProperties::getServiceusersList() const
{
    return m_Serviceusers_list;
}
void ComAdobeGraniteRepositoryServiceUserConfigurationProperties::setServiceusersList(ConfigNodePropertyArray const& value)
{
    m_Serviceusers_list = value;
    m_Serviceusers_listIsSet = true;
}
bool ComAdobeGraniteRepositoryServiceUserConfigurationProperties::serviceusersListIsSet() const
{
    return m_Serviceusers_listIsSet;
}
void ComAdobeGraniteRepositoryServiceUserConfigurationProperties::unsetServiceusers_list()
{
    m_Serviceusers_listIsSet = false;
}

}
}
}
}

