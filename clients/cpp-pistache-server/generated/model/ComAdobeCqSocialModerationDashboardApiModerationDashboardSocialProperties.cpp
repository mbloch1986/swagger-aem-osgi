/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties::ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties()
{
    m_PriorityIsSet = false;
    
}

ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties::~ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties()
{
}

void ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_PriorityIsSet)
    {
        val["priority"] = ModelBase::toJson(m_Priority);
    }
    

    return val;
}

void ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties::fromJson(nlohmann::json& val)
{
    if(val.find("priority") != val.end())
    {
        if(!val["priority"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["priority"]);
            setPriority( newItem );
        }
        
    }
    
}


ConfigNodePropertyInteger ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties::getPriority() const
{
    return m_Priority;
}
void ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties::setPriority(ConfigNodePropertyInteger const& value)
{
    m_Priority = value;
    m_PriorityIsSet = true;
}
bool ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties::priorityIsSet() const
{
    return m_PriorityIsSet;
}
void ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialProperties::unsetPriority()
{
    m_PriorityIsSet = false;
}

}
}
}
}

