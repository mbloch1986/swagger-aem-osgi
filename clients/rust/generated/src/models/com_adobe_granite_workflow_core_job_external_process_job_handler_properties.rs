/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties {
  #[serde(rename = "default.timeout")]
  default_timeout: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "max.timeout")]
  max_timeout: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "default.period")]
  default_period: Option<::models::ConfigNodePropertyInteger>
}

impl ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties {
  pub fn new() -> ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties {
    ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties {
      default_timeout: None,
      max_timeout: None,
      default_period: None
    }
  }

  pub fn set_default_timeout(&mut self, default_timeout: ::models::ConfigNodePropertyInteger) {
    self.default_timeout = Some(default_timeout);
  }

  pub fn with_default_timeout(mut self, default_timeout: ::models::ConfigNodePropertyInteger) -> ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties {
    self.default_timeout = Some(default_timeout);
    self
  }

  pub fn default_timeout(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.default_timeout.as_ref()
  }

  pub fn reset_default_timeout(&mut self) {
    self.default_timeout = None;
  }

  pub fn set_max_timeout(&mut self, max_timeout: ::models::ConfigNodePropertyInteger) {
    self.max_timeout = Some(max_timeout);
  }

  pub fn with_max_timeout(mut self, max_timeout: ::models::ConfigNodePropertyInteger) -> ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties {
    self.max_timeout = Some(max_timeout);
    self
  }

  pub fn max_timeout(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.max_timeout.as_ref()
  }

  pub fn reset_max_timeout(&mut self) {
    self.max_timeout = None;
  }

  pub fn set_default_period(&mut self, default_period: ::models::ConfigNodePropertyInteger) {
    self.default_period = Some(default_period);
  }

  pub fn with_default_period(mut self, default_period: ::models::ConfigNodePropertyInteger) -> ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerProperties {
    self.default_period = Some(default_period);
    self
  }

  pub fn default_period(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.default_period.as_ref()
  }

  pub fn reset_default_period(&mut self) {
    self.default_period = None;
  }

}



