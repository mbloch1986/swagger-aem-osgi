/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties::ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties()
{
    m_EnableDataTriggeredContentIsSet = false;
    
}

ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties::~ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties()
{
}

void ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_EnableDataTriggeredContentIsSet)
    {
        val["enableDataTriggeredContent"] = ModelBase::toJson(m_EnableDataTriggeredContent);
    }
    

    return val;
}

void ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties::fromJson(nlohmann::json& val)
{
    if(val.find("enableDataTriggeredContent") != val.end())
    {
        if(!val["enableDataTriggeredContent"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["enableDataTriggeredContent"]);
            setEnableDataTriggeredContent( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties::getEnableDataTriggeredContent() const
{
    return m_EnableDataTriggeredContent;
}
void ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties::setEnableDataTriggeredContent(ConfigNodePropertyBoolean const& value)
{
    m_EnableDataTriggeredContent = value;
    m_EnableDataTriggeredContentIsSet = true;
}
bool ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties::enableDataTriggeredContentIsSet() const
{
    return m_EnableDataTriggeredContentIsSet;
}
void ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagProperties::unsetEnableDataTriggeredContent()
{
    m_EnableDataTriggeredContentIsSet = false;
}

}
}
}
}

