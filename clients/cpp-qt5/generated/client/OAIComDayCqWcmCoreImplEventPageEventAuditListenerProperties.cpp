/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties() {
    init();
}

OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::~OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::init() {
    configured = new OAIConfigNodePropertyString();
    m_configured_isSet = false;
}

void
OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::cleanup() {
    if(configured != nullptr) { 
        delete configured;
    }
}

OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties*
OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&configured, pJson["configured"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::asJsonObject() {
    QJsonObject obj;
    if((configured != nullptr) && (configured->isSet())){
        toJsonValue(QString("configured"), configured, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::getConfigured() {
    return configured;
}
void
OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::setConfigured(OAIConfigNodePropertyString* configured) {
    this->configured = configured;
    this->m_configured_isSet = true;
}


bool
OAIComDayCqWcmCoreImplEventPageEventAuditListenerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(configured != nullptr && configured->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

