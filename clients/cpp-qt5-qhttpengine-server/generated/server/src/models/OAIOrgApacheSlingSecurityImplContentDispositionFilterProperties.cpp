/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties() {
    this->init();
}

OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::~OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties() {
    
}

void
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::init() {
    m_sling_content_disposition_paths_isSet = false;
    m_sling_content_disposition_excluded_paths_isSet = false;
    m_sling_content_disposition_all_paths_isSet = false;
}

void
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(sling_content_disposition_paths, json[QString("sling.content.disposition.paths")]);
    
    ::OpenAPI::fromJsonValue(sling_content_disposition_excluded_paths, json[QString("sling.content.disposition.excluded.paths")]);
    
    ::OpenAPI::fromJsonValue(sling_content_disposition_all_paths, json[QString("sling.content.disposition.all.paths")]);
    
}

QString
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::asJsonObject() const {
    QJsonObject obj;
	if(sling_content_disposition_paths.isSet()){
        obj.insert(QString("sling.content.disposition.paths"), ::OpenAPI::toJsonValue(sling_content_disposition_paths));
    }
	if(sling_content_disposition_excluded_paths.isSet()){
        obj.insert(QString("sling.content.disposition.excluded.paths"), ::OpenAPI::toJsonValue(sling_content_disposition_excluded_paths));
    }
	if(sling_content_disposition_all_paths.isSet()){
        obj.insert(QString("sling.content.disposition.all.paths"), ::OpenAPI::toJsonValue(sling_content_disposition_all_paths));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::getSlingContentDispositionPaths() const {
    return sling_content_disposition_paths;
}
void
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::setSlingContentDispositionPaths(const OAIConfigNodePropertyArray &sling_content_disposition_paths) {
    this->sling_content_disposition_paths = sling_content_disposition_paths;
    this->m_sling_content_disposition_paths_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::getSlingContentDispositionExcludedPaths() const {
    return sling_content_disposition_excluded_paths;
}
void
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::setSlingContentDispositionExcludedPaths(const OAIConfigNodePropertyArray &sling_content_disposition_excluded_paths) {
    this->sling_content_disposition_excluded_paths = sling_content_disposition_excluded_paths;
    this->m_sling_content_disposition_excluded_paths_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::getSlingContentDispositionAllPaths() const {
    return sling_content_disposition_all_paths;
}
void
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::setSlingContentDispositionAllPaths(const OAIConfigNodePropertyBoolean &sling_content_disposition_all_paths) {
    this->sling_content_disposition_all_paths = sling_content_disposition_all_paths;
    this->m_sling_content_disposition_all_paths_isSet = true;
}


bool
OAIOrgApacheSlingSecurityImplContentDispositionFilterProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(sling_content_disposition_paths.isSet()){ isObjectUpdated = true; break;}
    
        if(sling_content_disposition_excluded_paths.isSet()){ isObjectUpdated = true; break;}
    
        if(sling_content_disposition_all_paths.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

