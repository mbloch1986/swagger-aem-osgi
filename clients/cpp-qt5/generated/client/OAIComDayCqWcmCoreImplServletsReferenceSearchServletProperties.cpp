/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties() {
    init();
}

OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::~OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::init() {
    referencesearchservlet_max_references_per_page = new OAIConfigNodePropertyInteger();
    m_referencesearchservlet_max_references_per_page_isSet = false;
    referencesearchservlet_max_pages = new OAIConfigNodePropertyInteger();
    m_referencesearchservlet_max_pages_isSet = false;
}

void
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::cleanup() {
    if(referencesearchservlet_max_references_per_page != nullptr) { 
        delete referencesearchservlet_max_references_per_page;
    }
    if(referencesearchservlet_max_pages != nullptr) { 
        delete referencesearchservlet_max_pages;
    }
}

OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties*
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&referencesearchservlet_max_references_per_page, pJson["referencesearchservlet.maxReferencesPerPage"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&referencesearchservlet_max_pages, pJson["referencesearchservlet.maxPages"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::asJsonObject() {
    QJsonObject obj;
    if((referencesearchservlet_max_references_per_page != nullptr) && (referencesearchservlet_max_references_per_page->isSet())){
        toJsonValue(QString("referencesearchservlet.maxReferencesPerPage"), referencesearchservlet_max_references_per_page, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((referencesearchservlet_max_pages != nullptr) && (referencesearchservlet_max_pages->isSet())){
        toJsonValue(QString("referencesearchservlet.maxPages"), referencesearchservlet_max_pages, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::getReferencesearchservletMaxReferencesPerPage() {
    return referencesearchservlet_max_references_per_page;
}
void
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::setReferencesearchservletMaxReferencesPerPage(OAIConfigNodePropertyInteger* referencesearchservlet_max_references_per_page) {
    this->referencesearchservlet_max_references_per_page = referencesearchservlet_max_references_per_page;
    this->m_referencesearchservlet_max_references_per_page_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::getReferencesearchservletMaxPages() {
    return referencesearchservlet_max_pages;
}
void
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::setReferencesearchservletMaxPages(OAIConfigNodePropertyInteger* referencesearchservlet_max_pages) {
    this->referencesearchservlet_max_pages = referencesearchservlet_max_pages;
    this->m_referencesearchservlet_max_pages_isSet = true;
}


bool
OAIComDayCqWcmCoreImplServletsReferenceSearchServletProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(referencesearchservlet_max_references_per_page != nullptr && referencesearchservlet_max_references_per_page->isSet()){ isObjectUpdated = true; break;}
        if(referencesearchservlet_max_pages != nullptr && referencesearchservlet_max_pages->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

