package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties._

case class ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties (
  cqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName: Option[ConfigNodePropertyInteger],
cqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName: Option[ConfigNodePropertyInteger],
cqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName: Option[ConfigNodePropertyInteger],
cqDamS7damVideoproxyclientserviceHttpReadtimeoutName: Option[ConfigNodePropertyInteger],
cqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName: Option[ConfigNodePropertyInteger],
cqDamS7damVideoproxyclientserviceHttpMaxretrycountName: Option[ConfigNodePropertyInteger],
cqDamS7damVideoproxyclientserviceUploadprogressIntervalName: Option[ConfigNodePropertyInteger])

object ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties {
  import DateTimeCodecs._

  implicit val ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplPropertiesCodecJson: CodecJson[ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties] = CodecJson.derive[ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties]
  implicit val ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplPropertiesDecoder: EntityDecoder[ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties] = jsonOf[ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties]
  implicit val ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplPropertiesEncoder: EntityEncoder[ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties] = jsonEncoderOf[ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplProperties]
}
