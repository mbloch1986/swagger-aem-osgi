/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties_H_
#define OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties
    : public ModelBase
{
public:
    OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties();
    virtual ~OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getHandlerSchemes() const;
    void setHandlerSchemes(ConfigNodePropertyArray const& value);
    bool handlerSchemesIsSet() const;
    void unsetHandler_schemes();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSlingJcrinstallFolderNameRegexp() const;
    void setSlingJcrinstallFolderNameRegexp(ConfigNodePropertyString const& value);
    bool slingJcrinstallFolderNameRegexpIsSet() const;
    void unsetSling_jcrinstall_folder_name_regexp();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getSlingJcrinstallFolderMaxDepth() const;
    void setSlingJcrinstallFolderMaxDepth(ConfigNodePropertyInteger const& value);
    bool slingJcrinstallFolderMaxDepthIsSet() const;
    void unsetSling_jcrinstall_folder_max_depth();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getSlingJcrinstallSearchPath() const;
    void setSlingJcrinstallSearchPath(ConfigNodePropertyArray const& value);
    bool slingJcrinstallSearchPathIsSet() const;
    void unsetSling_jcrinstall_search_path();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSlingJcrinstallNewConfigPath() const;
    void setSlingJcrinstallNewConfigPath(ConfigNodePropertyString const& value);
    bool slingJcrinstallNewConfigPathIsSet() const;
    void unsetSling_jcrinstall_new_config_path();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSlingJcrinstallSignalPath() const;
    void setSlingJcrinstallSignalPath(ConfigNodePropertyString const& value);
    bool slingJcrinstallSignalPathIsSet() const;
    void unsetSling_jcrinstall_signal_path();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getSlingJcrinstallEnableWriteback() const;
    void setSlingJcrinstallEnableWriteback(ConfigNodePropertyBoolean const& value);
    bool slingJcrinstallEnableWritebackIsSet() const;
    void unsetSling_jcrinstall_enable_writeback();

protected:
    ConfigNodePropertyArray m_Handler_schemes;
    bool m_Handler_schemesIsSet;
    ConfigNodePropertyString m_Sling_jcrinstall_folder_name_regexp;
    bool m_Sling_jcrinstall_folder_name_regexpIsSet;
    ConfigNodePropertyInteger m_Sling_jcrinstall_folder_max_depth;
    bool m_Sling_jcrinstall_folder_max_depthIsSet;
    ConfigNodePropertyArray m_Sling_jcrinstall_search_path;
    bool m_Sling_jcrinstall_search_pathIsSet;
    ConfigNodePropertyString m_Sling_jcrinstall_new_config_path;
    bool m_Sling_jcrinstall_new_config_pathIsSet;
    ConfigNodePropertyString m_Sling_jcrinstall_signal_path;
    bool m_Sling_jcrinstall_signal_pathIsSet;
    ConfigNodePropertyBoolean m_Sling_jcrinstall_enable_writeback;
    bool m_Sling_jcrinstall_enable_writebackIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingInstallerProviderJcrImplJcrInstallerProperties_H_ */
