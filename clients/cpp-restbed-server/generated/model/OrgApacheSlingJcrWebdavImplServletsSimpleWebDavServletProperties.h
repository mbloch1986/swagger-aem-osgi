/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H_
#define OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H_



#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties
{
public:
    OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties();
    virtual ~OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDavRoot() const;
    void setDavRoot(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getDavCreateAbsoluteUri() const;
    void setDavCreateAbsoluteUri(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDavRealm() const;
    void setDavRealm(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getCollectionTypes() const;
    void setCollectionTypes(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getFilterPrefixes() const;
    void setFilterPrefixes(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getFilterTypes() const;
    void setFilterTypes(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getFilterUris() const;
    void setFilterUris(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getTypeCollections() const;
    void setTypeCollections(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getTypeNoncollections() const;
    void setTypeNoncollections(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getTypeContent() const;
    void setTypeContent(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Dav_root;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Dav_create_absolute_uri;
    std::shared_ptr<ConfigNodePropertyString> m_Dav_realm;
    std::shared_ptr<ConfigNodePropertyArray> m_Collection_types;
    std::shared_ptr<ConfigNodePropertyArray> m_Filter_prefixes;
    std::shared_ptr<ConfigNodePropertyString> m_Filter_types;
    std::shared_ptr<ConfigNodePropertyString> m_Filter_uris;
    std::shared_ptr<ConfigNodePropertyString> m_Type_collections;
    std::shared_ptr<ConfigNodePropertyString> m_Type_noncollections;
    std::shared_ptr<ConfigNodePropertyString> m_Type_content;
};

}
}
}
}

#endif /* OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties_H_ */
