note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_DAM_CORE_IMPL_EXPIRY_NOTIFICATION_JOB_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    cq_dam_expiry_notification_scheduler_istimebased: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    cq_dam_expiry_notification_scheduler_timebased_rule: detachable CONFIG_NODE_PROPERTY_STRING 
      
    cq_dam_expiry_notification_scheduler_period_rule: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    send_email: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    asset_expired_limit: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    prior_notification_seconds: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    cq_dam_expiry_notification_url_protocol: detachable CONFIG_NODE_PROPERTY_STRING 
      

feature -- Change Element  
 
    set_cq_dam_expiry_notification_scheduler_istimebased (a_name: like cq_dam_expiry_notification_scheduler_istimebased)
        -- Set 'cq_dam_expiry_notification_scheduler_istimebased' with 'a_name'.
      do
        cq_dam_expiry_notification_scheduler_istimebased := a_name
      ensure
        cq_dam_expiry_notification_scheduler_istimebased_set: cq_dam_expiry_notification_scheduler_istimebased = a_name		
      end

    set_cq_dam_expiry_notification_scheduler_timebased_rule (a_name: like cq_dam_expiry_notification_scheduler_timebased_rule)
        -- Set 'cq_dam_expiry_notification_scheduler_timebased_rule' with 'a_name'.
      do
        cq_dam_expiry_notification_scheduler_timebased_rule := a_name
      ensure
        cq_dam_expiry_notification_scheduler_timebased_rule_set: cq_dam_expiry_notification_scheduler_timebased_rule = a_name		
      end

    set_cq_dam_expiry_notification_scheduler_period_rule (a_name: like cq_dam_expiry_notification_scheduler_period_rule)
        -- Set 'cq_dam_expiry_notification_scheduler_period_rule' with 'a_name'.
      do
        cq_dam_expiry_notification_scheduler_period_rule := a_name
      ensure
        cq_dam_expiry_notification_scheduler_period_rule_set: cq_dam_expiry_notification_scheduler_period_rule = a_name		
      end

    set_send_email (a_name: like send_email)
        -- Set 'send_email' with 'a_name'.
      do
        send_email := a_name
      ensure
        send_email_set: send_email = a_name		
      end

    set_asset_expired_limit (a_name: like asset_expired_limit)
        -- Set 'asset_expired_limit' with 'a_name'.
      do
        asset_expired_limit := a_name
      ensure
        asset_expired_limit_set: asset_expired_limit = a_name		
      end

    set_prior_notification_seconds (a_name: like prior_notification_seconds)
        -- Set 'prior_notification_seconds' with 'a_name'.
      do
        prior_notification_seconds := a_name
      ensure
        prior_notification_seconds_set: prior_notification_seconds = a_name		
      end

    set_cq_dam_expiry_notification_url_protocol (a_name: like cq_dam_expiry_notification_url_protocol)
        -- Set 'cq_dam_expiry_notification_url_protocol' with 'a_name'.
      do
        cq_dam_expiry_notification_url_protocol := a_name
      ensure
        cq_dam_expiry_notification_url_protocol_set: cq_dam_expiry_notification_url_protocol = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_DAM_CORE_IMPL_EXPIRY_NOTIFICATION_JOB_IMPL_PROPERTIES%N")
        if attached cq_dam_expiry_notification_scheduler_istimebased as l_cq_dam_expiry_notification_scheduler_istimebased then
          Result.append ("%Ncq_dam_expiry_notification_scheduler_istimebased:")
          Result.append (l_cq_dam_expiry_notification_scheduler_istimebased.out)
          Result.append ("%N")    
        end  
        if attached cq_dam_expiry_notification_scheduler_timebased_rule as l_cq_dam_expiry_notification_scheduler_timebased_rule then
          Result.append ("%Ncq_dam_expiry_notification_scheduler_timebased_rule:")
          Result.append (l_cq_dam_expiry_notification_scheduler_timebased_rule.out)
          Result.append ("%N")    
        end  
        if attached cq_dam_expiry_notification_scheduler_period_rule as l_cq_dam_expiry_notification_scheduler_period_rule then
          Result.append ("%Ncq_dam_expiry_notification_scheduler_period_rule:")
          Result.append (l_cq_dam_expiry_notification_scheduler_period_rule.out)
          Result.append ("%N")    
        end  
        if attached send_email as l_send_email then
          Result.append ("%Nsend_email:")
          Result.append (l_send_email.out)
          Result.append ("%N")    
        end  
        if attached asset_expired_limit as l_asset_expired_limit then
          Result.append ("%Nasset_expired_limit:")
          Result.append (l_asset_expired_limit.out)
          Result.append ("%N")    
        end  
        if attached prior_notification_seconds as l_prior_notification_seconds then
          Result.append ("%Nprior_notification_seconds:")
          Result.append (l_prior_notification_seconds.out)
          Result.append ("%N")    
        end  
        if attached cq_dam_expiry_notification_url_protocol as l_cq_dam_expiry_notification_url_protocol then
          Result.append ("%Ncq_dam_expiry_notification_url_protocol:")
          Result.append (l_cq_dam_expiry_notification_url_protocol.out)
          Result.append ("%N")    
        end  
      end
end


