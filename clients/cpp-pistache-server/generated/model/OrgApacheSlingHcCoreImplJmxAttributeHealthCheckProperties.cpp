/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties()
{
    m_Hc_nameIsSet = false;
    m_Hc_tagsIsSet = false;
    m_Hc_mbean_nameIsSet = false;
    m_Mbean_nameIsSet = false;
    m_Attribute_nameIsSet = false;
    m_Attribute_value_constraintIsSet = false;
    
}

OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::~OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties()
{
}

void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Hc_nameIsSet)
    {
        val["hc.name"] = ModelBase::toJson(m_Hc_name);
    }
    if(m_Hc_tagsIsSet)
    {
        val["hc.tags"] = ModelBase::toJson(m_Hc_tags);
    }
    if(m_Hc_mbean_nameIsSet)
    {
        val["hc.mbean.name"] = ModelBase::toJson(m_Hc_mbean_name);
    }
    if(m_Mbean_nameIsSet)
    {
        val["mbean.name"] = ModelBase::toJson(m_Mbean_name);
    }
    if(m_Attribute_nameIsSet)
    {
        val["attribute.name"] = ModelBase::toJson(m_Attribute_name);
    }
    if(m_Attribute_value_constraintIsSet)
    {
        val["attribute.value.constraint"] = ModelBase::toJson(m_Attribute_value_constraint);
    }
    

    return val;
}

void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::fromJson(nlohmann::json& val)
{
    if(val.find("hc.name") != val.end())
    {
        if(!val["hc.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["hc.name"]);
            setHcName( newItem );
        }
        
    }
    if(val.find("hc.tags") != val.end())
    {
        if(!val["hc.tags"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["hc.tags"]);
            setHcTags( newItem );
        }
        
    }
    if(val.find("hc.mbean.name") != val.end())
    {
        if(!val["hc.mbean.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["hc.mbean.name"]);
            setHcMbeanName( newItem );
        }
        
    }
    if(val.find("mbean.name") != val.end())
    {
        if(!val["mbean.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["mbean.name"]);
            setMbeanName( newItem );
        }
        
    }
    if(val.find("attribute.name") != val.end())
    {
        if(!val["attribute.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["attribute.name"]);
            setAttributeName( newItem );
        }
        
    }
    if(val.find("attribute.value.constraint") != val.end())
    {
        if(!val["attribute.value.constraint"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["attribute.value.constraint"]);
            setAttributeValueConstraint( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::getHcName() const
{
    return m_Hc_name;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::setHcName(ConfigNodePropertyString const& value)
{
    m_Hc_name = value;
    m_Hc_nameIsSet = true;
}
bool OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::hcNameIsSet() const
{
    return m_Hc_nameIsSet;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::unsetHc_name()
{
    m_Hc_nameIsSet = false;
}
ConfigNodePropertyArray OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::getHcTags() const
{
    return m_Hc_tags;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::setHcTags(ConfigNodePropertyArray const& value)
{
    m_Hc_tags = value;
    m_Hc_tagsIsSet = true;
}
bool OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::hcTagsIsSet() const
{
    return m_Hc_tagsIsSet;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::unsetHc_tags()
{
    m_Hc_tagsIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::getHcMbeanName() const
{
    return m_Hc_mbean_name;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::setHcMbeanName(ConfigNodePropertyString const& value)
{
    m_Hc_mbean_name = value;
    m_Hc_mbean_nameIsSet = true;
}
bool OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::hcMbeanNameIsSet() const
{
    return m_Hc_mbean_nameIsSet;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::unsetHc_mbean_name()
{
    m_Hc_mbean_nameIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::getMbeanName() const
{
    return m_Mbean_name;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::setMbeanName(ConfigNodePropertyString const& value)
{
    m_Mbean_name = value;
    m_Mbean_nameIsSet = true;
}
bool OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::mbeanNameIsSet() const
{
    return m_Mbean_nameIsSet;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::unsetMbean_name()
{
    m_Mbean_nameIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::getAttributeName() const
{
    return m_Attribute_name;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::setAttributeName(ConfigNodePropertyString const& value)
{
    m_Attribute_name = value;
    m_Attribute_nameIsSet = true;
}
bool OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::attributeNameIsSet() const
{
    return m_Attribute_nameIsSet;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::unsetAttribute_name()
{
    m_Attribute_nameIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::getAttributeValueConstraint() const
{
    return m_Attribute_value_constraint;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::setAttributeValueConstraint(ConfigNodePropertyString const& value)
{
    m_Attribute_value_constraint = value;
    m_Attribute_value_constraintIsSet = true;
}
bool OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::attributeValueConstraintIsSet() const
{
    return m_Attribute_value_constraintIsSet;
}
void OrgApacheSlingHcCoreImplJmxAttributeHealthCheckProperties::unsetAttribute_value_constraint()
{
    m_Attribute_value_constraintIsSet = false;
}

}
}
}
}

