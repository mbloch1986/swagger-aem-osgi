/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComDayCqWcmDesignimporterImplCanv
 */
public class OASComDayCqWcmDesignimporterImplCanv {
    /**
     * Get minThreadPoolSize
     * @return minThreadPoolSize
     */
    public OASConfigNodePropertyInteger minThreadPoolSize { get; set; }

    /**
     * Get maxThreadPoolSize
     * @return maxThreadPoolSize
     */
    public OASConfigNodePropertyInteger maxThreadPoolSize { get; set; }

    public static OASComDayCqWcmDesignimporterImplCanv getExample() {
        OASComDayCqWcmDesignimporterImplCanv comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerProperties = new OASComDayCqWcmDesignimporterImplCanv();
          comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerProperties.minThreadPoolSize = OASConfigNodePropertyInteger.getExample();
          comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerProperties.maxThreadPoolSize = OASConfigNodePropertyInteger.getExample();
        return comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComDayCqWcmDesignimporterImplCanv) {           
            OASComDayCqWcmDesignimporterImplCanv comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerProperties = (OASComDayCqWcmDesignimporterImplCanv) obj;
            return this.minThreadPoolSize == comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerProperties.minThreadPoolSize
                && this.maxThreadPoolSize == comDayCqWcmDesignimporterImplCanvasPageDeleteHandlerProperties.maxThreadPoolSize;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (minThreadPoolSize == null ? 0 : System.hashCode(minThreadPoolSize));
        hashCode = (17 * hashCode) + (maxThreadPoolSize == null ? 0 : System.hashCode(maxThreadPoolSize));
        return hashCode;
    }
}

