/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamCoreImplLightboxLightboxServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreImplLightboxLightboxServletProperties::ComDayCqDamCoreImplLightboxLightboxServletProperties()
{
    m_Sling_servlet_pathsIsSet = false;
    m_Sling_servlet_methodsIsSet = false;
    m_Cq_dam_enable_anonymousIsSet = false;
    
}

ComDayCqDamCoreImplLightboxLightboxServletProperties::~ComDayCqDamCoreImplLightboxLightboxServletProperties()
{
}

void ComDayCqDamCoreImplLightboxLightboxServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamCoreImplLightboxLightboxServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Sling_servlet_pathsIsSet)
    {
        val["sling.servlet.paths"] = ModelBase::toJson(m_Sling_servlet_paths);
    }
    if(m_Sling_servlet_methodsIsSet)
    {
        val["sling.servlet.methods"] = ModelBase::toJson(m_Sling_servlet_methods);
    }
    if(m_Cq_dam_enable_anonymousIsSet)
    {
        val["cq.dam.enable.anonymous"] = ModelBase::toJson(m_Cq_dam_enable_anonymous);
    }
    

    return val;
}

void ComDayCqDamCoreImplLightboxLightboxServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("sling.servlet.paths") != val.end())
    {
        if(!val["sling.servlet.paths"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sling.servlet.paths"]);
            setSlingServletPaths( newItem );
        }
        
    }
    if(val.find("sling.servlet.methods") != val.end())
    {
        if(!val["sling.servlet.methods"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["sling.servlet.methods"]);
            setSlingServletMethods( newItem );
        }
        
    }
    if(val.find("cq.dam.enable.anonymous") != val.end())
    {
        if(!val["cq.dam.enable.anonymous"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["cq.dam.enable.anonymous"]);
            setCqDamEnableAnonymous( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCqDamCoreImplLightboxLightboxServletProperties::getSlingServletPaths() const
{
    return m_Sling_servlet_paths;
}
void ComDayCqDamCoreImplLightboxLightboxServletProperties::setSlingServletPaths(ConfigNodePropertyString const& value)
{
    m_Sling_servlet_paths = value;
    m_Sling_servlet_pathsIsSet = true;
}
bool ComDayCqDamCoreImplLightboxLightboxServletProperties::slingServletPathsIsSet() const
{
    return m_Sling_servlet_pathsIsSet;
}
void ComDayCqDamCoreImplLightboxLightboxServletProperties::unsetSling_servlet_paths()
{
    m_Sling_servlet_pathsIsSet = false;
}
ConfigNodePropertyArray ComDayCqDamCoreImplLightboxLightboxServletProperties::getSlingServletMethods() const
{
    return m_Sling_servlet_methods;
}
void ComDayCqDamCoreImplLightboxLightboxServletProperties::setSlingServletMethods(ConfigNodePropertyArray const& value)
{
    m_Sling_servlet_methods = value;
    m_Sling_servlet_methodsIsSet = true;
}
bool ComDayCqDamCoreImplLightboxLightboxServletProperties::slingServletMethodsIsSet() const
{
    return m_Sling_servlet_methodsIsSet;
}
void ComDayCqDamCoreImplLightboxLightboxServletProperties::unsetSling_servlet_methods()
{
    m_Sling_servlet_methodsIsSet = false;
}
ConfigNodePropertyBoolean ComDayCqDamCoreImplLightboxLightboxServletProperties::getCqDamEnableAnonymous() const
{
    return m_Cq_dam_enable_anonymous;
}
void ComDayCqDamCoreImplLightboxLightboxServletProperties::setCqDamEnableAnonymous(ConfigNodePropertyBoolean const& value)
{
    m_Cq_dam_enable_anonymous = value;
    m_Cq_dam_enable_anonymousIsSet = true;
}
bool ComDayCqDamCoreImplLightboxLightboxServletProperties::cqDamEnableAnonymousIsSet() const
{
    return m_Cq_dam_enable_anonymousIsSet;
}
void ComDayCqDamCoreImplLightboxLightboxServletProperties::unsetCq_dam_enable_anonymous()
{
    m_Cq_dam_enable_anonymousIsSet = false;
}

}
}
}
}

