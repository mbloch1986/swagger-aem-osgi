/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties.h
 *
 * 
 */

#ifndef OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties_H_
#define OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyInteger.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties: public OAIObject {
public:
    OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties();
    OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties(QString json);
    ~OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyArray* getCqAnalyticsSitecatalystServiceDatacenterUrl();
    void setCqAnalyticsSitecatalystServiceDatacenterUrl(OAIConfigNodePropertyArray* cq_analytics_sitecatalyst_service_datacenter_url);

    OAIConfigNodePropertyArray* getDevhostnamepatterns();
    void setDevhostnamepatterns(OAIConfigNodePropertyArray* devhostnamepatterns);

    OAIConfigNodePropertyInteger* getConnectionTimeout();
    void setConnectionTimeout(OAIConfigNodePropertyInteger* connection_timeout);

    OAIConfigNodePropertyInteger* getSocketTimeout();
    void setSocketTimeout(OAIConfigNodePropertyInteger* socket_timeout);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyArray* cq_analytics_sitecatalyst_service_datacenter_url;
    bool m_cq_analytics_sitecatalyst_service_datacenter_url_isSet;

    OAIConfigNodePropertyArray* devhostnamepatterns;
    bool m_devhostnamepatterns_isSet;

    OAIConfigNodePropertyInteger* connection_timeout;
    bool m_connection_timeout_isSet;

    OAIConfigNodePropertyInteger* socket_timeout;
    bool m_socket_timeout_isSet;

};

}

#endif /* OAIComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplProperties_H_ */
