/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties.h
 *
 * 
 */

#ifndef ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties_H_
#define ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties_H_



#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties
{
public:
    ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties();
    virtual ~ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getPortalOutboxes() const;
    void setPortalOutboxes(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDraftDataService() const;
    void setDraftDataService(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDraftMetadataService() const;
    void setDraftMetadataService(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getSubmitDataService() const;
    void setSubmitDataService(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getSubmitMetadataService() const;
    void setSubmitMetadataService(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getPendingSignDataService() const;
    void setPendingSignDataService(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getPendingSignMetadataService() const;
    void setPendingSignMetadataService(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyArray> m_Portal_outboxes;
    std::shared_ptr<ConfigNodePropertyString> m_Draft_data_service;
    std::shared_ptr<ConfigNodePropertyString> m_Draft_metadata_service;
    std::shared_ptr<ConfigNodePropertyString> m_Submit_data_service;
    std::shared_ptr<ConfigNodePropertyString> m_Submit_metadata_service;
    std::shared_ptr<ConfigNodePropertyString> m_PendingSign_data_service;
    std::shared_ptr<ConfigNodePropertyString> m_PendingSign_metadata_service;
};

}
}
}
}

#endif /* ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties_H_ */
