note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_DAY_CQ_WCM_FOUNDATION_IMPL_HTTP_AUTH_HANDLER_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    auth_http_nologin: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    auth_http_realm: detachable CONFIG_NODE_PROPERTY_STRING 
      
    auth_default_loginpage: detachable CONFIG_NODE_PROPERTY_STRING 
      
    auth_cred_form: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    auth_cred_utf8: detachable CONFIG_NODE_PROPERTY_ARRAY 
      

feature -- Change Element  
 
    set_path (a_name: like path)
        -- Set 'path' with 'a_name'.
      do
        path := a_name
      ensure
        path_set: path = a_name		
      end

    set_auth_http_nologin (a_name: like auth_http_nologin)
        -- Set 'auth_http_nologin' with 'a_name'.
      do
        auth_http_nologin := a_name
      ensure
        auth_http_nologin_set: auth_http_nologin = a_name		
      end

    set_auth_http_realm (a_name: like auth_http_realm)
        -- Set 'auth_http_realm' with 'a_name'.
      do
        auth_http_realm := a_name
      ensure
        auth_http_realm_set: auth_http_realm = a_name		
      end

    set_auth_default_loginpage (a_name: like auth_default_loginpage)
        -- Set 'auth_default_loginpage' with 'a_name'.
      do
        auth_default_loginpage := a_name
      ensure
        auth_default_loginpage_set: auth_default_loginpage = a_name		
      end

    set_auth_cred_form (a_name: like auth_cred_form)
        -- Set 'auth_cred_form' with 'a_name'.
      do
        auth_cred_form := a_name
      ensure
        auth_cred_form_set: auth_cred_form = a_name		
      end

    set_auth_cred_utf8 (a_name: like auth_cred_utf8)
        -- Set 'auth_cred_utf8' with 'a_name'.
      do
        auth_cred_utf8 := a_name
      ensure
        auth_cred_utf8_set: auth_cred_utf8 = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_DAY_CQ_WCM_FOUNDATION_IMPL_HTTP_AUTH_HANDLER_PROPERTIES%N")
        if attached path as l_path then
          Result.append ("%Npath:")
          Result.append (l_path.out)
          Result.append ("%N")    
        end  
        if attached auth_http_nologin as l_auth_http_nologin then
          Result.append ("%Nauth_http_nologin:")
          Result.append (l_auth_http_nologin.out)
          Result.append ("%N")    
        end  
        if attached auth_http_realm as l_auth_http_realm then
          Result.append ("%Nauth_http_realm:")
          Result.append (l_auth_http_realm.out)
          Result.append ("%N")    
        end  
        if attached auth_default_loginpage as l_auth_default_loginpage then
          Result.append ("%Nauth_default_loginpage:")
          Result.append (l_auth_default_loginpage.out)
          Result.append ("%N")    
        end  
        if attached auth_cred_form as l_auth_cred_form then
          Result.append ("%Nauth_cred_form:")
          Result.append (l_auth_cred_form.out)
          Result.append ("%N")    
        end  
        if attached auth_cred_utf8 as l_auth_cred_utf8 then
          Result.append ("%Nauth_cred_utf8:")
          Result.append (l_auth_cred_utf8.out)
          Result.append ("%N")    
        end  
      end
end


