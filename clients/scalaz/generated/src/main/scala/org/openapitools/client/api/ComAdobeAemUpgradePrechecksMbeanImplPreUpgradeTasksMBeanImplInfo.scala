package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo._

case class ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplProperties],
bundleLocation: Option[String],
serviceLocation: Option[String])

object ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo {
  import DateTimeCodecs._

  implicit val ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfoCodecJson: CodecJson[ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo] = CodecJson.derive[ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo]
  implicit val ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfoDecoder: EntityDecoder[ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo] = jsonOf[ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo]
  implicit val ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfoEncoder: EntityEncoder[ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo] = jsonEncoderOf[ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo]
}
