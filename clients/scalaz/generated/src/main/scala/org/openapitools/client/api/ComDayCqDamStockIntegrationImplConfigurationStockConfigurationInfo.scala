package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo._

case class ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComDayCqDamStockIntegrationImplConfigurationStockConfigurationProperties])

object ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo {
  import DateTimeCodecs._

  implicit val ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfoCodecJson: CodecJson[ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo] = CodecJson.derive[ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo]
  implicit val ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfoDecoder: EntityDecoder[ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo] = jsonOf[ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo]
  implicit val ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfoEncoder: EntityEncoder[ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo] = jsonEncoderOf[ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo]
}
