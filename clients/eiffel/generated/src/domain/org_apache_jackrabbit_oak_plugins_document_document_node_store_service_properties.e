note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_JACKRABBIT_OAK_PLUGINS_DOCUMENT_DOCUMENT_NODE_STORE_SERVICE_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    mongouri: detachable CONFIG_NODE_PROPERTY_STRING 
      
    db: detachable CONFIG_NODE_PROPERTY_STRING 
      
    socket_keep_alive: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    cache: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    node_cache_percentage: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    prev_doc_cache_percentage: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    children_cache_percentage: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    diff_cache_percentage: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    cache_segment_count: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    cache_stack_move_distance: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    blob_cache_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    persistent_cache: detachable CONFIG_NODE_PROPERTY_STRING 
      
    journal_cache: detachable CONFIG_NODE_PROPERTY_STRING 
      
    custom_blob_store: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    journal_gc_interval: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    journal_gc_max_age: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    prefetch_external_changes: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    role: detachable CONFIG_NODE_PROPERTY_STRING 
      
    version_gc_max_age_in_secs: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    version_gc_expression: detachable CONFIG_NODE_PROPERTY_STRING 
      
    version_gc_time_limit_in_secs: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    blob_gc_max_age_in_secs: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    blob_track_snapshot_interval_in_secs: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    repository_home: detachable CONFIG_NODE_PROPERTY_STRING 
      
    max_replication_lag_in_secs: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    document_store_type: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    bundling_disabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    update_limit: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    persistent_cache_includes: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    lease_check_mode: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      

feature -- Change Element  
 
    set_mongouri (a_name: like mongouri)
        -- Set 'mongouri' with 'a_name'.
      do
        mongouri := a_name
      ensure
        mongouri_set: mongouri = a_name		
      end

    set_db (a_name: like db)
        -- Set 'db' with 'a_name'.
      do
        db := a_name
      ensure
        db_set: db = a_name		
      end

    set_socket_keep_alive (a_name: like socket_keep_alive)
        -- Set 'socket_keep_alive' with 'a_name'.
      do
        socket_keep_alive := a_name
      ensure
        socket_keep_alive_set: socket_keep_alive = a_name		
      end

    set_cache (a_name: like cache)
        -- Set 'cache' with 'a_name'.
      do
        cache := a_name
      ensure
        cache_set: cache = a_name		
      end

    set_node_cache_percentage (a_name: like node_cache_percentage)
        -- Set 'node_cache_percentage' with 'a_name'.
      do
        node_cache_percentage := a_name
      ensure
        node_cache_percentage_set: node_cache_percentage = a_name		
      end

    set_prev_doc_cache_percentage (a_name: like prev_doc_cache_percentage)
        -- Set 'prev_doc_cache_percentage' with 'a_name'.
      do
        prev_doc_cache_percentage := a_name
      ensure
        prev_doc_cache_percentage_set: prev_doc_cache_percentage = a_name		
      end

    set_children_cache_percentage (a_name: like children_cache_percentage)
        -- Set 'children_cache_percentage' with 'a_name'.
      do
        children_cache_percentage := a_name
      ensure
        children_cache_percentage_set: children_cache_percentage = a_name		
      end

    set_diff_cache_percentage (a_name: like diff_cache_percentage)
        -- Set 'diff_cache_percentage' with 'a_name'.
      do
        diff_cache_percentage := a_name
      ensure
        diff_cache_percentage_set: diff_cache_percentage = a_name		
      end

    set_cache_segment_count (a_name: like cache_segment_count)
        -- Set 'cache_segment_count' with 'a_name'.
      do
        cache_segment_count := a_name
      ensure
        cache_segment_count_set: cache_segment_count = a_name		
      end

    set_cache_stack_move_distance (a_name: like cache_stack_move_distance)
        -- Set 'cache_stack_move_distance' with 'a_name'.
      do
        cache_stack_move_distance := a_name
      ensure
        cache_stack_move_distance_set: cache_stack_move_distance = a_name		
      end

    set_blob_cache_size (a_name: like blob_cache_size)
        -- Set 'blob_cache_size' with 'a_name'.
      do
        blob_cache_size := a_name
      ensure
        blob_cache_size_set: blob_cache_size = a_name		
      end

    set_persistent_cache (a_name: like persistent_cache)
        -- Set 'persistent_cache' with 'a_name'.
      do
        persistent_cache := a_name
      ensure
        persistent_cache_set: persistent_cache = a_name		
      end

    set_journal_cache (a_name: like journal_cache)
        -- Set 'journal_cache' with 'a_name'.
      do
        journal_cache := a_name
      ensure
        journal_cache_set: journal_cache = a_name		
      end

    set_custom_blob_store (a_name: like custom_blob_store)
        -- Set 'custom_blob_store' with 'a_name'.
      do
        custom_blob_store := a_name
      ensure
        custom_blob_store_set: custom_blob_store = a_name		
      end

    set_journal_gc_interval (a_name: like journal_gc_interval)
        -- Set 'journal_gc_interval' with 'a_name'.
      do
        journal_gc_interval := a_name
      ensure
        journal_gc_interval_set: journal_gc_interval = a_name		
      end

    set_journal_gc_max_age (a_name: like journal_gc_max_age)
        -- Set 'journal_gc_max_age' with 'a_name'.
      do
        journal_gc_max_age := a_name
      ensure
        journal_gc_max_age_set: journal_gc_max_age = a_name		
      end

    set_prefetch_external_changes (a_name: like prefetch_external_changes)
        -- Set 'prefetch_external_changes' with 'a_name'.
      do
        prefetch_external_changes := a_name
      ensure
        prefetch_external_changes_set: prefetch_external_changes = a_name		
      end

    set_role (a_name: like role)
        -- Set 'role' with 'a_name'.
      do
        role := a_name
      ensure
        role_set: role = a_name		
      end

    set_version_gc_max_age_in_secs (a_name: like version_gc_max_age_in_secs)
        -- Set 'version_gc_max_age_in_secs' with 'a_name'.
      do
        version_gc_max_age_in_secs := a_name
      ensure
        version_gc_max_age_in_secs_set: version_gc_max_age_in_secs = a_name		
      end

    set_version_gc_expression (a_name: like version_gc_expression)
        -- Set 'version_gc_expression' with 'a_name'.
      do
        version_gc_expression := a_name
      ensure
        version_gc_expression_set: version_gc_expression = a_name		
      end

    set_version_gc_time_limit_in_secs (a_name: like version_gc_time_limit_in_secs)
        -- Set 'version_gc_time_limit_in_secs' with 'a_name'.
      do
        version_gc_time_limit_in_secs := a_name
      ensure
        version_gc_time_limit_in_secs_set: version_gc_time_limit_in_secs = a_name		
      end

    set_blob_gc_max_age_in_secs (a_name: like blob_gc_max_age_in_secs)
        -- Set 'blob_gc_max_age_in_secs' with 'a_name'.
      do
        blob_gc_max_age_in_secs := a_name
      ensure
        blob_gc_max_age_in_secs_set: blob_gc_max_age_in_secs = a_name		
      end

    set_blob_track_snapshot_interval_in_secs (a_name: like blob_track_snapshot_interval_in_secs)
        -- Set 'blob_track_snapshot_interval_in_secs' with 'a_name'.
      do
        blob_track_snapshot_interval_in_secs := a_name
      ensure
        blob_track_snapshot_interval_in_secs_set: blob_track_snapshot_interval_in_secs = a_name		
      end

    set_repository_home (a_name: like repository_home)
        -- Set 'repository_home' with 'a_name'.
      do
        repository_home := a_name
      ensure
        repository_home_set: repository_home = a_name		
      end

    set_max_replication_lag_in_secs (a_name: like max_replication_lag_in_secs)
        -- Set 'max_replication_lag_in_secs' with 'a_name'.
      do
        max_replication_lag_in_secs := a_name
      ensure
        max_replication_lag_in_secs_set: max_replication_lag_in_secs = a_name		
      end

    set_document_store_type (a_name: like document_store_type)
        -- Set 'document_store_type' with 'a_name'.
      do
        document_store_type := a_name
      ensure
        document_store_type_set: document_store_type = a_name		
      end

    set_bundling_disabled (a_name: like bundling_disabled)
        -- Set 'bundling_disabled' with 'a_name'.
      do
        bundling_disabled := a_name
      ensure
        bundling_disabled_set: bundling_disabled = a_name		
      end

    set_update_limit (a_name: like update_limit)
        -- Set 'update_limit' with 'a_name'.
      do
        update_limit := a_name
      ensure
        update_limit_set: update_limit = a_name		
      end

    set_persistent_cache_includes (a_name: like persistent_cache_includes)
        -- Set 'persistent_cache_includes' with 'a_name'.
      do
        persistent_cache_includes := a_name
      ensure
        persistent_cache_includes_set: persistent_cache_includes = a_name		
      end

    set_lease_check_mode (a_name: like lease_check_mode)
        -- Set 'lease_check_mode' with 'a_name'.
      do
        lease_check_mode := a_name
      ensure
        lease_check_mode_set: lease_check_mode = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_JACKRABBIT_OAK_PLUGINS_DOCUMENT_DOCUMENT_NODE_STORE_SERVICE_PROPERTIES%N")
        if attached mongouri as l_mongouri then
          Result.append ("%Nmongouri:")
          Result.append (l_mongouri.out)
          Result.append ("%N")    
        end  
        if attached db as l_db then
          Result.append ("%Ndb:")
          Result.append (l_db.out)
          Result.append ("%N")    
        end  
        if attached socket_keep_alive as l_socket_keep_alive then
          Result.append ("%Nsocket_keep_alive:")
          Result.append (l_socket_keep_alive.out)
          Result.append ("%N")    
        end  
        if attached cache as l_cache then
          Result.append ("%Ncache:")
          Result.append (l_cache.out)
          Result.append ("%N")    
        end  
        if attached node_cache_percentage as l_node_cache_percentage then
          Result.append ("%Nnode_cache_percentage:")
          Result.append (l_node_cache_percentage.out)
          Result.append ("%N")    
        end  
        if attached prev_doc_cache_percentage as l_prev_doc_cache_percentage then
          Result.append ("%Nprev_doc_cache_percentage:")
          Result.append (l_prev_doc_cache_percentage.out)
          Result.append ("%N")    
        end  
        if attached children_cache_percentage as l_children_cache_percentage then
          Result.append ("%Nchildren_cache_percentage:")
          Result.append (l_children_cache_percentage.out)
          Result.append ("%N")    
        end  
        if attached diff_cache_percentage as l_diff_cache_percentage then
          Result.append ("%Ndiff_cache_percentage:")
          Result.append (l_diff_cache_percentage.out)
          Result.append ("%N")    
        end  
        if attached cache_segment_count as l_cache_segment_count then
          Result.append ("%Ncache_segment_count:")
          Result.append (l_cache_segment_count.out)
          Result.append ("%N")    
        end  
        if attached cache_stack_move_distance as l_cache_stack_move_distance then
          Result.append ("%Ncache_stack_move_distance:")
          Result.append (l_cache_stack_move_distance.out)
          Result.append ("%N")    
        end  
        if attached blob_cache_size as l_blob_cache_size then
          Result.append ("%Nblob_cache_size:")
          Result.append (l_blob_cache_size.out)
          Result.append ("%N")    
        end  
        if attached persistent_cache as l_persistent_cache then
          Result.append ("%Npersistent_cache:")
          Result.append (l_persistent_cache.out)
          Result.append ("%N")    
        end  
        if attached journal_cache as l_journal_cache then
          Result.append ("%Njournal_cache:")
          Result.append (l_journal_cache.out)
          Result.append ("%N")    
        end  
        if attached custom_blob_store as l_custom_blob_store then
          Result.append ("%Ncustom_blob_store:")
          Result.append (l_custom_blob_store.out)
          Result.append ("%N")    
        end  
        if attached journal_gc_interval as l_journal_gc_interval then
          Result.append ("%Njournal_gc_interval:")
          Result.append (l_journal_gc_interval.out)
          Result.append ("%N")    
        end  
        if attached journal_gc_max_age as l_journal_gc_max_age then
          Result.append ("%Njournal_gc_max_age:")
          Result.append (l_journal_gc_max_age.out)
          Result.append ("%N")    
        end  
        if attached prefetch_external_changes as l_prefetch_external_changes then
          Result.append ("%Nprefetch_external_changes:")
          Result.append (l_prefetch_external_changes.out)
          Result.append ("%N")    
        end  
        if attached role as l_role then
          Result.append ("%Nrole:")
          Result.append (l_role.out)
          Result.append ("%N")    
        end  
        if attached version_gc_max_age_in_secs as l_version_gc_max_age_in_secs then
          Result.append ("%Nversion_gc_max_age_in_secs:")
          Result.append (l_version_gc_max_age_in_secs.out)
          Result.append ("%N")    
        end  
        if attached version_gc_expression as l_version_gc_expression then
          Result.append ("%Nversion_gc_expression:")
          Result.append (l_version_gc_expression.out)
          Result.append ("%N")    
        end  
        if attached version_gc_time_limit_in_secs as l_version_gc_time_limit_in_secs then
          Result.append ("%Nversion_gc_time_limit_in_secs:")
          Result.append (l_version_gc_time_limit_in_secs.out)
          Result.append ("%N")    
        end  
        if attached blob_gc_max_age_in_secs as l_blob_gc_max_age_in_secs then
          Result.append ("%Nblob_gc_max_age_in_secs:")
          Result.append (l_blob_gc_max_age_in_secs.out)
          Result.append ("%N")    
        end  
        if attached blob_track_snapshot_interval_in_secs as l_blob_track_snapshot_interval_in_secs then
          Result.append ("%Nblob_track_snapshot_interval_in_secs:")
          Result.append (l_blob_track_snapshot_interval_in_secs.out)
          Result.append ("%N")    
        end  
        if attached repository_home as l_repository_home then
          Result.append ("%Nrepository_home:")
          Result.append (l_repository_home.out)
          Result.append ("%N")    
        end  
        if attached max_replication_lag_in_secs as l_max_replication_lag_in_secs then
          Result.append ("%Nmax_replication_lag_in_secs:")
          Result.append (l_max_replication_lag_in_secs.out)
          Result.append ("%N")    
        end  
        if attached document_store_type as l_document_store_type then
          Result.append ("%Ndocument_store_type:")
          Result.append (l_document_store_type.out)
          Result.append ("%N")    
        end  
        if attached bundling_disabled as l_bundling_disabled then
          Result.append ("%Nbundling_disabled:")
          Result.append (l_bundling_disabled.out)
          Result.append ("%N")    
        end  
        if attached update_limit as l_update_limit then
          Result.append ("%Nupdate_limit:")
          Result.append (l_update_limit.out)
          Result.append ("%N")    
        end  
        if attached persistent_cache_includes as l_persistent_cache_includes then
          Result.append ("%Npersistent_cache_includes:")
          Result.append (l_persistent_cache_includes.out)
          Result.append ("%N")    
        end  
        if attached lease_check_mode as l_lease_check_mode then
          Result.append ("%Nlease_check_mode:")
          Result.append (l_lease_check_mode.out)
          Result.append ("%N")    
        end  
      end
end


