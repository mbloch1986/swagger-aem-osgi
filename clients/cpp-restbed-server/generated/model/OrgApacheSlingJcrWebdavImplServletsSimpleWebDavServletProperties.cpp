/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties()
{
    
}

OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::~OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties()
{
}

std::string OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getDavRoot() const
{
    return m_Dav_root;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setDavRoot(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Dav_root = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getDavCreateAbsoluteUri() const
{
    return m_Dav_create_absolute_uri;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setDavCreateAbsoluteUri(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Dav_create_absolute_uri = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getDavRealm() const
{
    return m_Dav_realm;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setDavRealm(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Dav_realm = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getCollectionTypes() const
{
    return m_Collection_types;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setCollectionTypes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Collection_types = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getFilterPrefixes() const
{
    return m_Filter_prefixes;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setFilterPrefixes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Filter_prefixes = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getFilterTypes() const
{
    return m_Filter_types;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setFilterTypes(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Filter_types = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getFilterUris() const
{
    return m_Filter_uris;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setFilterUris(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Filter_uris = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getTypeCollections() const
{
    return m_Type_collections;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setTypeCollections(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Type_collections = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getTypeNoncollections() const
{
    return m_Type_noncollections;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setTypeNoncollections(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Type_noncollections = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::getTypeContent() const
{
    return m_Type_content;
}
void OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletProperties::setTypeContent(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Type_content = value;
}

}
}
}
}

