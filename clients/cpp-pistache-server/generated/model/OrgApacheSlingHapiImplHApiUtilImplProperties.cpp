/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingHapiImplHApiUtilImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingHapiImplHApiUtilImplProperties::OrgApacheSlingHapiImplHApiUtilImplProperties()
{
    m_Org_apache_sling_hapi_tools_resourcetypeIsSet = false;
    m_Org_apache_sling_hapi_tools_collectionresourcetypeIsSet = false;
    m_Org_apache_sling_hapi_tools_searchpathsIsSet = false;
    m_Org_apache_sling_hapi_tools_externalurlIsSet = false;
    m_Org_apache_sling_hapi_tools_enabledIsSet = false;
    
}

OrgApacheSlingHapiImplHApiUtilImplProperties::~OrgApacheSlingHapiImplHApiUtilImplProperties()
{
}

void OrgApacheSlingHapiImplHApiUtilImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingHapiImplHApiUtilImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Org_apache_sling_hapi_tools_resourcetypeIsSet)
    {
        val["org.apache.sling.hapi.tools.resourcetype"] = ModelBase::toJson(m_Org_apache_sling_hapi_tools_resourcetype);
    }
    if(m_Org_apache_sling_hapi_tools_collectionresourcetypeIsSet)
    {
        val["org.apache.sling.hapi.tools.collectionresourcetype"] = ModelBase::toJson(m_Org_apache_sling_hapi_tools_collectionresourcetype);
    }
    if(m_Org_apache_sling_hapi_tools_searchpathsIsSet)
    {
        val["org.apache.sling.hapi.tools.searchpaths"] = ModelBase::toJson(m_Org_apache_sling_hapi_tools_searchpaths);
    }
    if(m_Org_apache_sling_hapi_tools_externalurlIsSet)
    {
        val["org.apache.sling.hapi.tools.externalurl"] = ModelBase::toJson(m_Org_apache_sling_hapi_tools_externalurl);
    }
    if(m_Org_apache_sling_hapi_tools_enabledIsSet)
    {
        val["org.apache.sling.hapi.tools.enabled"] = ModelBase::toJson(m_Org_apache_sling_hapi_tools_enabled);
    }
    

    return val;
}

void OrgApacheSlingHapiImplHApiUtilImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("org.apache.sling.hapi.tools.resourcetype") != val.end())
    {
        if(!val["org.apache.sling.hapi.tools.resourcetype"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.hapi.tools.resourcetype"]);
            setOrgApacheSlingHapiToolsResourcetype( newItem );
        }
        
    }
    if(val.find("org.apache.sling.hapi.tools.collectionresourcetype") != val.end())
    {
        if(!val["org.apache.sling.hapi.tools.collectionresourcetype"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.hapi.tools.collectionresourcetype"]);
            setOrgApacheSlingHapiToolsCollectionresourcetype( newItem );
        }
        
    }
    if(val.find("org.apache.sling.hapi.tools.searchpaths") != val.end())
    {
        if(!val["org.apache.sling.hapi.tools.searchpaths"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["org.apache.sling.hapi.tools.searchpaths"]);
            setOrgApacheSlingHapiToolsSearchpaths( newItem );
        }
        
    }
    if(val.find("org.apache.sling.hapi.tools.externalurl") != val.end())
    {
        if(!val["org.apache.sling.hapi.tools.externalurl"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["org.apache.sling.hapi.tools.externalurl"]);
            setOrgApacheSlingHapiToolsExternalurl( newItem );
        }
        
    }
    if(val.find("org.apache.sling.hapi.tools.enabled") != val.end())
    {
        if(!val["org.apache.sling.hapi.tools.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["org.apache.sling.hapi.tools.enabled"]);
            setOrgApacheSlingHapiToolsEnabled( newItem );
        }
        
    }
    
}


ConfigNodePropertyString OrgApacheSlingHapiImplHApiUtilImplProperties::getOrgApacheSlingHapiToolsResourcetype() const
{
    return m_Org_apache_sling_hapi_tools_resourcetype;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::setOrgApacheSlingHapiToolsResourcetype(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_hapi_tools_resourcetype = value;
    m_Org_apache_sling_hapi_tools_resourcetypeIsSet = true;
}
bool OrgApacheSlingHapiImplHApiUtilImplProperties::orgApacheSlingHapiToolsResourcetypeIsSet() const
{
    return m_Org_apache_sling_hapi_tools_resourcetypeIsSet;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::unsetOrg_apache_sling_hapi_tools_resourcetype()
{
    m_Org_apache_sling_hapi_tools_resourcetypeIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingHapiImplHApiUtilImplProperties::getOrgApacheSlingHapiToolsCollectionresourcetype() const
{
    return m_Org_apache_sling_hapi_tools_collectionresourcetype;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::setOrgApacheSlingHapiToolsCollectionresourcetype(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_hapi_tools_collectionresourcetype = value;
    m_Org_apache_sling_hapi_tools_collectionresourcetypeIsSet = true;
}
bool OrgApacheSlingHapiImplHApiUtilImplProperties::orgApacheSlingHapiToolsCollectionresourcetypeIsSet() const
{
    return m_Org_apache_sling_hapi_tools_collectionresourcetypeIsSet;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::unsetOrg_apache_sling_hapi_tools_collectionresourcetype()
{
    m_Org_apache_sling_hapi_tools_collectionresourcetypeIsSet = false;
}
ConfigNodePropertyArray OrgApacheSlingHapiImplHApiUtilImplProperties::getOrgApacheSlingHapiToolsSearchpaths() const
{
    return m_Org_apache_sling_hapi_tools_searchpaths;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::setOrgApacheSlingHapiToolsSearchpaths(ConfigNodePropertyArray const& value)
{
    m_Org_apache_sling_hapi_tools_searchpaths = value;
    m_Org_apache_sling_hapi_tools_searchpathsIsSet = true;
}
bool OrgApacheSlingHapiImplHApiUtilImplProperties::orgApacheSlingHapiToolsSearchpathsIsSet() const
{
    return m_Org_apache_sling_hapi_tools_searchpathsIsSet;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::unsetOrg_apache_sling_hapi_tools_searchpaths()
{
    m_Org_apache_sling_hapi_tools_searchpathsIsSet = false;
}
ConfigNodePropertyString OrgApacheSlingHapiImplHApiUtilImplProperties::getOrgApacheSlingHapiToolsExternalurl() const
{
    return m_Org_apache_sling_hapi_tools_externalurl;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::setOrgApacheSlingHapiToolsExternalurl(ConfigNodePropertyString const& value)
{
    m_Org_apache_sling_hapi_tools_externalurl = value;
    m_Org_apache_sling_hapi_tools_externalurlIsSet = true;
}
bool OrgApacheSlingHapiImplHApiUtilImplProperties::orgApacheSlingHapiToolsExternalurlIsSet() const
{
    return m_Org_apache_sling_hapi_tools_externalurlIsSet;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::unsetOrg_apache_sling_hapi_tools_externalurl()
{
    m_Org_apache_sling_hapi_tools_externalurlIsSet = false;
}
ConfigNodePropertyBoolean OrgApacheSlingHapiImplHApiUtilImplProperties::getOrgApacheSlingHapiToolsEnabled() const
{
    return m_Org_apache_sling_hapi_tools_enabled;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::setOrgApacheSlingHapiToolsEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Org_apache_sling_hapi_tools_enabled = value;
    m_Org_apache_sling_hapi_tools_enabledIsSet = true;
}
bool OrgApacheSlingHapiImplHApiUtilImplProperties::orgApacheSlingHapiToolsEnabledIsSet() const
{
    return m_Org_apache_sling_hapi_tools_enabledIsSet;
}
void OrgApacheSlingHapiImplHApiUtilImplProperties::unsetOrg_apache_sling_hapi_tools_enabled()
{
    m_Org_apache_sling_hapi_tools_enabledIsSet = false;
}

}
}
}
}

