# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingEventImplJobsJobConsumerManagerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, org_apache_sling_installer_configuration_persist: ConfigNodePropertyBoolean=None, job_consumermanager_whitelist: ConfigNodePropertyArray=None, job_consumermanager_blacklist: ConfigNodePropertyArray=None):  # noqa: E501
        """OrgApacheSlingEventImplJobsJobConsumerManagerProperties - a model defined in OpenAPI

        :param org_apache_sling_installer_configuration_persist: The org_apache_sling_installer_configuration_persist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.  # noqa: E501
        :type org_apache_sling_installer_configuration_persist: ConfigNodePropertyBoolean
        :param job_consumermanager_whitelist: The job_consumermanager_whitelist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.  # noqa: E501
        :type job_consumermanager_whitelist: ConfigNodePropertyArray
        :param job_consumermanager_blacklist: The job_consumermanager_blacklist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.  # noqa: E501
        :type job_consumermanager_blacklist: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'org_apache_sling_installer_configuration_persist': ConfigNodePropertyBoolean,
            'job_consumermanager_whitelist': ConfigNodePropertyArray,
            'job_consumermanager_blacklist': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'org_apache_sling_installer_configuration_persist': 'org.apache.sling.installer.configuration.persist',
            'job_consumermanager_whitelist': 'job.consumermanager.whitelist',
            'job_consumermanager_blacklist': 'job.consumermanager.blacklist'
        }

        self._org_apache_sling_installer_configuration_persist = org_apache_sling_installer_configuration_persist
        self._job_consumermanager_whitelist = job_consumermanager_whitelist
        self._job_consumermanager_blacklist = job_consumermanager_blacklist

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingEventImplJobsJobConsumerManagerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingEventImplJobsJobConsumerManagerProperties of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.  # noqa: E501
        :rtype: OrgApacheSlingEventImplJobsJobConsumerManagerProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def org_apache_sling_installer_configuration_persist(self) -> ConfigNodePropertyBoolean:
        """Gets the org_apache_sling_installer_configuration_persist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.


        :return: The org_apache_sling_installer_configuration_persist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._org_apache_sling_installer_configuration_persist

    @org_apache_sling_installer_configuration_persist.setter
    def org_apache_sling_installer_configuration_persist(self, org_apache_sling_installer_configuration_persist: ConfigNodePropertyBoolean):
        """Sets the org_apache_sling_installer_configuration_persist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.


        :param org_apache_sling_installer_configuration_persist: The org_apache_sling_installer_configuration_persist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.
        :type org_apache_sling_installer_configuration_persist: ConfigNodePropertyBoolean
        """

        self._org_apache_sling_installer_configuration_persist = org_apache_sling_installer_configuration_persist

    @property
    def job_consumermanager_whitelist(self) -> ConfigNodePropertyArray:
        """Gets the job_consumermanager_whitelist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.


        :return: The job_consumermanager_whitelist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._job_consumermanager_whitelist

    @job_consumermanager_whitelist.setter
    def job_consumermanager_whitelist(self, job_consumermanager_whitelist: ConfigNodePropertyArray):
        """Sets the job_consumermanager_whitelist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.


        :param job_consumermanager_whitelist: The job_consumermanager_whitelist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.
        :type job_consumermanager_whitelist: ConfigNodePropertyArray
        """

        self._job_consumermanager_whitelist = job_consumermanager_whitelist

    @property
    def job_consumermanager_blacklist(self) -> ConfigNodePropertyArray:
        """Gets the job_consumermanager_blacklist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.


        :return: The job_consumermanager_blacklist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._job_consumermanager_blacklist

    @job_consumermanager_blacklist.setter
    def job_consumermanager_blacklist(self, job_consumermanager_blacklist: ConfigNodePropertyArray):
        """Sets the job_consumermanager_blacklist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.


        :param job_consumermanager_blacklist: The job_consumermanager_blacklist of this OrgApacheSlingEventImplJobsJobConsumerManagerProperties.
        :type job_consumermanager_blacklist: ConfigNodePropertyArray
        """

        self._job_consumermanager_blacklist = job_consumermanager_blacklist
