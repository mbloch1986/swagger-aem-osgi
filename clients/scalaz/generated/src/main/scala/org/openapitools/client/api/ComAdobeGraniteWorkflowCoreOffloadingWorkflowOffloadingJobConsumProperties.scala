package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumProperties._

case class ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumProperties (
  jobTopics: Option[ConfigNodePropertyString])

object ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumPropertiesCodecJson: CodecJson[ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumProperties] = CodecJson.derive[ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumProperties]
  implicit val ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumPropertiesDecoder: EntityDecoder[ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumProperties] = jsonOf[ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumProperties]
  implicit val ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumPropertiesEncoder: EntityEncoder[ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumProperties] = jsonEncoderOf[ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumProperties]
}
