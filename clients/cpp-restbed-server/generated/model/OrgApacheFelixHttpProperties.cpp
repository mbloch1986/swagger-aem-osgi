/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheFelixHttpProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheFelixHttpProperties::OrgApacheFelixHttpProperties()
{
    
}

OrgApacheFelixHttpProperties::~OrgApacheFelixHttpProperties()
{
}

std::string OrgApacheFelixHttpProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheFelixHttpProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpHost() const
{
    return m_Org_apache_felix_http_host;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpHost(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_apache_felix_http_host = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpEnable() const
{
    return m_Org_apache_felix_http_enable;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpEnable(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_http_enable = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgOsgiServiceHttpPort() const
{
    return m_Org_osgi_service_http_port;
}
void OrgApacheFelixHttpProperties::setOrgOsgiServiceHttpPort(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_osgi_service_http_port = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpTimeout() const
{
    return m_Org_apache_felix_http_timeout;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpTimeout(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_http_timeout = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsEnable() const
{
    return m_Org_apache_felix_https_enable;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsEnable(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_https_enable = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgOsgiServiceHttpPortSecure() const
{
    return m_Org_osgi_service_http_port_secure;
}
void OrgApacheFelixHttpProperties::setOrgOsgiServiceHttpPortSecure(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_osgi_service_http_port_secure = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsKeystore() const
{
    return m_Org_apache_felix_https_keystore;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsKeystore(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_apache_felix_https_keystore = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsKeystorePassword() const
{
    return m_Org_apache_felix_https_keystore_password;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsKeystorePassword(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_apache_felix_https_keystore_password = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsKeystoreKeyPassword() const
{
    return m_Org_apache_felix_https_keystore_key_password;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsKeystoreKeyPassword(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_apache_felix_https_keystore_key_password = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsTruststore() const
{
    return m_Org_apache_felix_https_truststore;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsTruststore(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_apache_felix_https_truststore = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsTruststorePassword() const
{
    return m_Org_apache_felix_https_truststore_password;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsTruststorePassword(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_apache_felix_https_truststore_password = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsClientcertificate() const
{
    return m_Org_apache_felix_https_clientcertificate;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsClientcertificate(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Org_apache_felix_https_clientcertificate = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpContextPath() const
{
    return m_Org_apache_felix_http_context_path;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpContextPath(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_apache_felix_http_context_path = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpMbeans() const
{
    return m_Org_apache_felix_http_mbeans;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpMbeans(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_http_mbeans = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpSessionTimeout() const
{
    return m_Org_apache_felix_http_session_timeout;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpSessionTimeout(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_http_session_timeout = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyThreadpoolMax() const
{
    return m_Org_apache_felix_http_jetty_threadpool_max;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyThreadpoolMax(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_http_jetty_threadpool_max = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyAcceptors() const
{
    return m_Org_apache_felix_http_jetty_acceptors;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyAcceptors(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_http_jetty_acceptors = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettySelectors() const
{
    return m_Org_apache_felix_http_jetty_selectors;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettySelectors(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_http_jetty_selectors = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyHeaderBufferSize() const
{
    return m_Org_apache_felix_http_jetty_headerBufferSize;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyHeaderBufferSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_http_jetty_headerBufferSize = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyRequestBufferSize() const
{
    return m_Org_apache_felix_http_jetty_requestBufferSize;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyRequestBufferSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_http_jetty_requestBufferSize = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyResponseBufferSize() const
{
    return m_Org_apache_felix_http_jetty_responseBufferSize;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyResponseBufferSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_http_jetty_responseBufferSize = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettyMaxFormSize() const
{
    return m_Org_apache_felix_http_jetty_maxFormSize;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettyMaxFormSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_http_jetty_maxFormSize = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpPathExclusions() const
{
    return m_Org_apache_felix_http_path_exclusions;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpPathExclusions(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_http_path_exclusions = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyCiphersuitesExcluded() const
{
    return m_Org_apache_felix_https_jetty_ciphersuites_excluded;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyCiphersuitesExcluded(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_https_jetty_ciphersuites_excluded = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyCiphersuitesIncluded() const
{
    return m_Org_apache_felix_https_jetty_ciphersuites_included;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyCiphersuitesIncluded(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_https_jetty_ciphersuites_included = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpJettySendServerHeader() const
{
    return m_Org_apache_felix_http_jetty_sendServerHeader;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpJettySendServerHeader(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_http_jetty_sendServerHeader = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyProtocolsIncluded() const
{
    return m_Org_apache_felix_https_jetty_protocols_included;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyProtocolsIncluded(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_https_jetty_protocols_included = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyProtocolsExcluded() const
{
    return m_Org_apache_felix_https_jetty_protocols_excluded;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyProtocolsExcluded(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_https_jetty_protocols_excluded = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixProxyLoadBalancerConnectionEnable() const
{
    return m_Org_apache_felix_proxy_load_balancer_connection_enable;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixProxyLoadBalancerConnectionEnable(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_proxy_load_balancer_connection_enable = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettyRenegotiateAllowed() const
{
    return m_Org_apache_felix_https_jetty_renegotiateAllowed;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettyRenegotiateAllowed(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_https_jetty_renegotiateAllowed = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettySessionCookieHttpOnly() const
{
    return m_Org_apache_felix_https_jetty_session_cookie_httpOnly;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettySessionCookieHttpOnly(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_https_jetty_session_cookie_httpOnly = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpsJettySessionCookieSecure() const
{
    return m_Org_apache_felix_https_jetty_session_cookie_secure;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpsJettySessionCookieSecure(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_https_jetty_session_cookie_secure = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgEclipseJettyServletSessionIdPathParameterName() const
{
    return m_Org_eclipse_jetty_servlet_SessionIdPathParameterName;
}
void OrgApacheFelixHttpProperties::setOrgEclipseJettyServletSessionIdPathParameterName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_eclipse_jetty_servlet_SessionIdPathParameterName = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgEclipseJettyServletCheckingRemoteSessionIdEncoding() const
{
    return m_Org_eclipse_jetty_servlet_CheckingRemoteSessionIdEncoding;
}
void OrgApacheFelixHttpProperties::setOrgEclipseJettyServletCheckingRemoteSessionIdEncoding(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_eclipse_jetty_servlet_CheckingRemoteSessionIdEncoding = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgEclipseJettyServletSessionCookie() const
{
    return m_Org_eclipse_jetty_servlet_SessionCookie;
}
void OrgApacheFelixHttpProperties::setOrgEclipseJettyServletSessionCookie(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_eclipse_jetty_servlet_SessionCookie = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgEclipseJettyServletSessionDomain() const
{
    return m_Org_eclipse_jetty_servlet_SessionDomain;
}
void OrgApacheFelixHttpProperties::setOrgEclipseJettyServletSessionDomain(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_eclipse_jetty_servlet_SessionDomain = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgEclipseJettyServletSessionPath() const
{
    return m_Org_eclipse_jetty_servlet_SessionPath;
}
void OrgApacheFelixHttpProperties::setOrgEclipseJettyServletSessionPath(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_eclipse_jetty_servlet_SessionPath = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgEclipseJettyServletMaxAge() const
{
    return m_Org_eclipse_jetty_servlet_MaxAge;
}
void OrgApacheFelixHttpProperties::setOrgEclipseJettyServletMaxAge(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_eclipse_jetty_servlet_MaxAge = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpName() const
{
    return m_Org_apache_felix_http_name;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Org_apache_felix_http_name = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGziphandlerEnable() const
{
    return m_Org_apache_felix_jetty_gziphandler_enable;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGziphandlerEnable(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_jetty_gziphandler_enable = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipMinGzipSize() const
{
    return m_Org_apache_felix_jetty_gzip_minGzipSize;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipMinGzipSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_jetty_gzip_minGzipSize = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipCompressionLevel() const
{
    return m_Org_apache_felix_jetty_gzip_compressionLevel;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipCompressionLevel(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_jetty_gzip_compressionLevel = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipInflateBufferSize() const
{
    return m_Org_apache_felix_jetty_gzip_inflateBufferSize;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipInflateBufferSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Org_apache_felix_jetty_gzip_inflateBufferSize = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipSyncFlush() const
{
    return m_Org_apache_felix_jetty_gzip_syncFlush;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipSyncFlush(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_jetty_gzip_syncFlush = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipExcludedUserAgents() const
{
    return m_Org_apache_felix_jetty_gzip_excludedUserAgents;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipExcludedUserAgents(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_jetty_gzip_excludedUserAgents = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipIncludedMethods() const
{
    return m_Org_apache_felix_jetty_gzip_includedMethods;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipIncludedMethods(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_jetty_gzip_includedMethods = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipExcludedMethods() const
{
    return m_Org_apache_felix_jetty_gzip_excludedMethods;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipExcludedMethods(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_jetty_gzip_excludedMethods = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipIncludedPaths() const
{
    return m_Org_apache_felix_jetty_gzip_includedPaths;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipIncludedPaths(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_jetty_gzip_includedPaths = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipExcludedPaths() const
{
    return m_Org_apache_felix_jetty_gzip_excludedPaths;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipExcludedPaths(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_jetty_gzip_excludedPaths = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipIncludedMimeTypes() const
{
    return m_Org_apache_felix_jetty_gzip_includedMimeTypes;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipIncludedMimeTypes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_jetty_gzip_includedMimeTypes = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheFelixHttpProperties::getOrgApacheFelixJettyGzipExcludedMimeTypes() const
{
    return m_Org_apache_felix_jetty_gzip_excludedMimeTypes;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixJettyGzipExcludedMimeTypes(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Org_apache_felix_jetty_gzip_excludedMimeTypes = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpSessionInvalidate() const
{
    return m_Org_apache_felix_http_session_invalidate;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpSessionInvalidate(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_http_session_invalidate = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheFelixHttpProperties::getOrgApacheFelixHttpSessionUniqueid() const
{
    return m_Org_apache_felix_http_session_uniqueid;
}
void OrgApacheFelixHttpProperties::setOrgApacheFelixHttpSessionUniqueid(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Org_apache_felix_http_session_uniqueid = value;
}

}
}
}
}

