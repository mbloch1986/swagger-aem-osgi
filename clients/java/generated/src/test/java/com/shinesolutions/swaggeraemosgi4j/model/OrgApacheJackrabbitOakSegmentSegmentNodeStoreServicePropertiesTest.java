/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties
 */
public class OrgApacheJackrabbitOakSegmentSegmentNodeStoreServicePropertiesTest {
    private final OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties model = new OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties();

    /**
     * Model tests for OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties
     */
    @Test
    public void testOrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties() {
        // TODO: test OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties
    }

    /**
     * Test the property 'repositoryHome'
     */
    @Test
    public void repositoryHomeTest() {
        // TODO: test repositoryHome
    }

    /**
     * Test the property 'tarmkMode'
     */
    @Test
    public void tarmkModeTest() {
        // TODO: test tarmkMode
    }

    /**
     * Test the property 'tarmkSize'
     */
    @Test
    public void tarmkSizeTest() {
        // TODO: test tarmkSize
    }

    /**
     * Test the property 'segmentCacheSize'
     */
    @Test
    public void segmentCacheSizeTest() {
        // TODO: test segmentCacheSize
    }

    /**
     * Test the property 'stringCacheSize'
     */
    @Test
    public void stringCacheSizeTest() {
        // TODO: test stringCacheSize
    }

    /**
     * Test the property 'templateCacheSize'
     */
    @Test
    public void templateCacheSizeTest() {
        // TODO: test templateCacheSize
    }

    /**
     * Test the property 'stringDeduplicationCacheSize'
     */
    @Test
    public void stringDeduplicationCacheSizeTest() {
        // TODO: test stringDeduplicationCacheSize
    }

    /**
     * Test the property 'templateDeduplicationCacheSize'
     */
    @Test
    public void templateDeduplicationCacheSizeTest() {
        // TODO: test templateDeduplicationCacheSize
    }

    /**
     * Test the property 'nodeDeduplicationCacheSize'
     */
    @Test
    public void nodeDeduplicationCacheSizeTest() {
        // TODO: test nodeDeduplicationCacheSize
    }

    /**
     * Test the property 'pauseCompaction'
     */
    @Test
    public void pauseCompactionTest() {
        // TODO: test pauseCompaction
    }

    /**
     * Test the property 'compactionRetryCount'
     */
    @Test
    public void compactionRetryCountTest() {
        // TODO: test compactionRetryCount
    }

    /**
     * Test the property 'compactionForceTimeout'
     */
    @Test
    public void compactionForceTimeoutTest() {
        // TODO: test compactionForceTimeout
    }

    /**
     * Test the property 'compactionSizeDeltaEstimation'
     */
    @Test
    public void compactionSizeDeltaEstimationTest() {
        // TODO: test compactionSizeDeltaEstimation
    }

    /**
     * Test the property 'compactionDisableEstimation'
     */
    @Test
    public void compactionDisableEstimationTest() {
        // TODO: test compactionDisableEstimation
    }

    /**
     * Test the property 'compactionRetainedGenerations'
     */
    @Test
    public void compactionRetainedGenerationsTest() {
        // TODO: test compactionRetainedGenerations
    }

    /**
     * Test the property 'compactionMemoryThreshold'
     */
    @Test
    public void compactionMemoryThresholdTest() {
        // TODO: test compactionMemoryThreshold
    }

    /**
     * Test the property 'compactionProgressLog'
     */
    @Test
    public void compactionProgressLogTest() {
        // TODO: test compactionProgressLog
    }

    /**
     * Test the property 'standby'
     */
    @Test
    public void standbyTest() {
        // TODO: test standby
    }

    /**
     * Test the property 'customBlobStore'
     */
    @Test
    public void customBlobStoreTest() {
        // TODO: test customBlobStore
    }

    /**
     * Test the property 'customSegmentStore'
     */
    @Test
    public void customSegmentStoreTest() {
        // TODO: test customSegmentStore
    }

    /**
     * Test the property 'splitPersistence'
     */
    @Test
    public void splitPersistenceTest() {
        // TODO: test splitPersistence
    }

    /**
     * Test the property 'repositoryBackupDir'
     */
    @Test
    public void repositoryBackupDirTest() {
        // TODO: test repositoryBackupDir
    }

    /**
     * Test the property 'blobGcMaxAgeInSecs'
     */
    @Test
    public void blobGcMaxAgeInSecsTest() {
        // TODO: test blobGcMaxAgeInSecs
    }

    /**
     * Test the property 'blobTrackSnapshotIntervalInSecs'
     */
    @Test
    public void blobTrackSnapshotIntervalInSecsTest() {
        // TODO: test blobTrackSnapshotIntervalInSecs
    }

}
