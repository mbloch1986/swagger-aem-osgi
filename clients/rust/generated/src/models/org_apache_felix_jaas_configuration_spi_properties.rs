/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheFelixJaasConfigurationSpiProperties {
  #[serde(rename = "jaas.defaultRealmName")]
  jaas_default_realm_name: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "jaas.configProviderName")]
  jaas_config_provider_name: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "jaas.globalConfigPolicy")]
  jaas_global_config_policy: Option<::models::ConfigNodePropertyDropDown>
}

impl OrgApacheFelixJaasConfigurationSpiProperties {
  pub fn new() -> OrgApacheFelixJaasConfigurationSpiProperties {
    OrgApacheFelixJaasConfigurationSpiProperties {
      jaas_default_realm_name: None,
      jaas_config_provider_name: None,
      jaas_global_config_policy: None
    }
  }

  pub fn set_jaas_default_realm_name(&mut self, jaas_default_realm_name: ::models::ConfigNodePropertyString) {
    self.jaas_default_realm_name = Some(jaas_default_realm_name);
  }

  pub fn with_jaas_default_realm_name(mut self, jaas_default_realm_name: ::models::ConfigNodePropertyString) -> OrgApacheFelixJaasConfigurationSpiProperties {
    self.jaas_default_realm_name = Some(jaas_default_realm_name);
    self
  }

  pub fn jaas_default_realm_name(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.jaas_default_realm_name.as_ref()
  }

  pub fn reset_jaas_default_realm_name(&mut self) {
    self.jaas_default_realm_name = None;
  }

  pub fn set_jaas_config_provider_name(&mut self, jaas_config_provider_name: ::models::ConfigNodePropertyString) {
    self.jaas_config_provider_name = Some(jaas_config_provider_name);
  }

  pub fn with_jaas_config_provider_name(mut self, jaas_config_provider_name: ::models::ConfigNodePropertyString) -> OrgApacheFelixJaasConfigurationSpiProperties {
    self.jaas_config_provider_name = Some(jaas_config_provider_name);
    self
  }

  pub fn jaas_config_provider_name(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.jaas_config_provider_name.as_ref()
  }

  pub fn reset_jaas_config_provider_name(&mut self) {
    self.jaas_config_provider_name = None;
  }

  pub fn set_jaas_global_config_policy(&mut self, jaas_global_config_policy: ::models::ConfigNodePropertyDropDown) {
    self.jaas_global_config_policy = Some(jaas_global_config_policy);
  }

  pub fn with_jaas_global_config_policy(mut self, jaas_global_config_policy: ::models::ConfigNodePropertyDropDown) -> OrgApacheFelixJaasConfigurationSpiProperties {
    self.jaas_global_config_policy = Some(jaas_global_config_policy);
    self
  }

  pub fn jaas_global_config_policy(&self) -> Option<&::models::ConfigNodePropertyDropDown> {
    self.jaas_global_config_policy.as_ref()
  }

  pub fn reset_jaas_global_config_policy(&mut self) {
    self.jaas_global_config_policy = None;
  }

}



