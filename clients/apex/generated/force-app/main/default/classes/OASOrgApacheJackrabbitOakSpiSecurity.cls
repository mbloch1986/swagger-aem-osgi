/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASOrgApacheJackrabbitOakSpiSecurity
 */
public class OASOrgApacheJackrabbitOakSpiSecurity implements OAS.MappedProperties {
    /**
     * Get jaasRanking
     * @return jaasRanking
     */
    public OASConfigNodePropertyInteger jaasRanking { get; set; }

    /**
     * Get jaasControlFlag
     * @return jaasControlFlag
     */
    public OASConfigNodePropertyString jaasControlFlag { get; set; }

    /**
     * Get jaasRealmName
     * @return jaasRealmName
     */
    public OASConfigNodePropertyString jaasRealmName { get; set; }

    /**
     * Get idpName
     * @return idpName
     */
    public OASConfigNodePropertyString idpName { get; set; }

    /**
     * Get syncHandlerName
     * @return syncHandlerName
     */
    public OASConfigNodePropertyString syncHandlerName { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'jaas.ranking' => 'jaasRanking',
        'jaas.controlFlag' => 'jaasControlFlag',
        'jaas.realmName' => 'jaasRealmName',
        'idp.name' => 'idpName',
        'sync.handlerName' => 'syncHandlerName'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrgApacheJackrabbitOakSpiSecurity getExample() {
        OASOrgApacheJackrabbitOakSpiSecurity orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties = new OASOrgApacheJackrabbitOakSpiSecurity();
          orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.jaasRanking = OASConfigNodePropertyInteger.getExample();
          orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.jaasControlFlag = OASConfigNodePropertyString.getExample();
          orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.jaasRealmName = OASConfigNodePropertyString.getExample();
          orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.idpName = OASConfigNodePropertyString.getExample();
          orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.syncHandlerName = OASConfigNodePropertyString.getExample();
        return orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgApacheJackrabbitOakSpiSecurity) {           
            OASOrgApacheJackrabbitOakSpiSecurity orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties = (OASOrgApacheJackrabbitOakSpiSecurity) obj;
            return this.jaasRanking == orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.jaasRanking
                && this.jaasControlFlag == orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.jaasControlFlag
                && this.jaasRealmName == orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.jaasRealmName
                && this.idpName == orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.idpName
                && this.syncHandlerName == orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.syncHandlerName;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (jaasRanking == null ? 0 : System.hashCode(jaasRanking));
        hashCode = (17 * hashCode) + (jaasControlFlag == null ? 0 : System.hashCode(jaasControlFlag));
        hashCode = (17 * hashCode) + (jaasRealmName == null ? 0 : System.hashCode(jaasRealmName));
        hashCode = (17 * hashCode) + (idpName == null ? 0 : System.hashCode(idpName));
        hashCode = (17 * hashCode) + (syncHandlerName == null ? 0 : System.hashCode(syncHandlerName));
        return hashCode;
    }
}

