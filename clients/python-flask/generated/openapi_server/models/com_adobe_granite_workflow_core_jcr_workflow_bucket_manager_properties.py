# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bucket_size: ConfigNodePropertyInteger=None):  # noqa: E501
        """ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties - a model defined in OpenAPI

        :param bucket_size: The bucket_size of this ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties.  # noqa: E501
        :type bucket_size: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'bucket_size': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'bucket_size': 'bucketSize'
        }

        self._bucket_size = bucket_size

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties of this ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties.  # noqa: E501
        :rtype: ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bucket_size(self) -> ConfigNodePropertyInteger:
        """Gets the bucket_size of this ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties.


        :return: The bucket_size of this ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._bucket_size

    @bucket_size.setter
    def bucket_size(self, bucket_size: ConfigNodePropertyInteger):
        """Sets the bucket_size of this ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties.


        :param bucket_size: The bucket_size of this ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerProperties.
        :type bucket_size: ConfigNodePropertyInteger
        """

        self._bucket_size = bucket_size
