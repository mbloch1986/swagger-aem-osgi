/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties() {
    init();
}

OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::~OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties() {
    this->cleanup();
}

void
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::init() {
    service_max_links_per_host = new OAIConfigNodePropertyInteger();
    m_service_max_links_per_host_isSet = false;
    service_save_external_link_references = new OAIConfigNodePropertyBoolean();
    m_service_save_external_link_references_isSet = false;
}

void
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::cleanup() {
    if(service_max_links_per_host != nullptr) { 
        delete service_max_links_per_host;
    }
    if(service_save_external_link_references != nullptr) { 
        delete service_save_external_link_references;
    }
}

OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties*
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&service_max_links_per_host, pJson["service.max_links_per_host"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&service_save_external_link_references, pJson["service.save_external_link_references"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::asJsonObject() {
    QJsonObject obj;
    if((service_max_links_per_host != nullptr) && (service_max_links_per_host->isSet())){
        toJsonValue(QString("service.max_links_per_host"), service_max_links_per_host, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((service_save_external_link_references != nullptr) && (service_save_external_link_references->isSet())){
        toJsonValue(QString("service.save_external_link_references"), service_save_external_link_references, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::getServiceMaxLinksPerHost() {
    return service_max_links_per_host;
}
void
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::setServiceMaxLinksPerHost(OAIConfigNodePropertyInteger* service_max_links_per_host) {
    this->service_max_links_per_host = service_max_links_per_host;
    this->m_service_max_links_per_host_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::getServiceSaveExternalLinkReferences() {
    return service_save_external_link_references;
}
void
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::setServiceSaveExternalLinkReferences(OAIConfigNodePropertyBoolean* service_save_external_link_references) {
    this->service_save_external_link_references = service_save_external_link_references;
    this->m_service_save_external_link_references_isSet = true;
}


bool
OAIComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(service_max_links_per_host != nullptr && service_max_links_per_host->isSet()){ isObjectUpdated = true; break;}
        if(service_save_external_link_references != nullptr && service_save_external_link_references->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

