package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties._

case class ComDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties (
  eventFilter: Option[ConfigNodePropertyString],
minThreadPoolSize: Option[ConfigNodePropertyInteger],
maxThreadPoolSize: Option[ConfigNodePropertyInteger],
cqWcmWorkflowTerminateOnActivate: Option[ConfigNodePropertyBoolean],
cqWcmWorklfowTerminateExclusionList: Option[ConfigNodePropertyArray])

object ComDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties {
  import DateTimeCodecs._

  implicit val ComDayCqWcmWorkflowImplWcmWorkflowServiceImplPropertiesCodecJson: CodecJson[ComDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties] = CodecJson.derive[ComDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties]
  implicit val ComDayCqWcmWorkflowImplWcmWorkflowServiceImplPropertiesDecoder: EntityDecoder[ComDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties] = jsonOf[ComDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties]
  implicit val ComDayCqWcmWorkflowImplWcmWorkflowServiceImplPropertiesEncoder: EntityEncoder[ComDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties] = jsonEncoderOf[ComDayCqWcmWorkflowImplWcmWorkflowServiceImplProperties]
}
