/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties.h
 *
 * 
 */

#ifndef ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties_H_
#define ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties_H_



#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties
{
public:
    ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties();
    virtual ~ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getTranslationFactory() const;
    void setTranslationFactory(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDefaultConnectorLabel() const;
    void setDefaultConnectorLabel(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDefaultConnectorAttribution() const;
    void setDefaultConnectorAttribution(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDefaultConnectorWorkspaceId() const;
    void setDefaultConnectorWorkspaceId(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getDefaultConnectorSubscriptionKey() const;
    void setDefaultConnectorSubscriptionKey(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getLanguageMapLocation() const;
    void setLanguageMapLocation(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getCategoryMapLocation() const;
    void setCategoryMapLocation(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getRetryAttempts() const;
    void setRetryAttempts(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getTimeoutCount() const;
    void setTimeoutCount(std::shared_ptr<ConfigNodePropertyInteger> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_TranslationFactory;
    std::shared_ptr<ConfigNodePropertyString> m_DefaultConnectorLabel;
    std::shared_ptr<ConfigNodePropertyString> m_DefaultConnectorAttribution;
    std::shared_ptr<ConfigNodePropertyString> m_DefaultConnectorWorkspaceId;
    std::shared_ptr<ConfigNodePropertyString> m_DefaultConnectorSubscriptionKey;
    std::shared_ptr<ConfigNodePropertyString> m_LanguageMapLocation;
    std::shared_ptr<ConfigNodePropertyString> m_CategoryMapLocation;
    std::shared_ptr<ConfigNodePropertyInteger> m_RetryAttempts;
    std::shared_ptr<ConfigNodePropertyInteger> m_TimeoutCount;
};

}
}
}
}

#endif /* ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslProperties_H_ */
