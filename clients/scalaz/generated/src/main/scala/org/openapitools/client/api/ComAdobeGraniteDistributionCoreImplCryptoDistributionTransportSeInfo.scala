package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo._

case class ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeProperties])

object ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfoCodecJson: CodecJson[ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo] = CodecJson.derive[ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo]
  implicit val ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfoDecoder: EntityDecoder[ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo] = jsonOf[ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo]
  implicit val ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfoEncoder: EntityEncoder[ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo] = jsonEncoderOf[ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo]
}
