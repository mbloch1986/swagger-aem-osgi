//
// OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryProperties: Codable {

    public var name: ConfigNodePropertyString?
    public var title: ConfigNodePropertyString?
    public var details: ConfigNodePropertyString?
    public var enabled: ConfigNodePropertyBoolean?
    public var serviceName: ConfigNodePropertyString?
    public var logLevel: ConfigNodePropertyDropDown?
    public var allowedRoots: ConfigNodePropertyArray?
    public var requestAuthorizationStrategyTarget: ConfigNodePropertyString?
    public var queueProviderFactoryTarget: ConfigNodePropertyString?
    public var packageBuilderTarget: ConfigNodePropertyString?
    public var triggersTarget: ConfigNodePropertyString?
    public var priorityQueues: ConfigNodePropertyArray?

    public init(name: ConfigNodePropertyString?, title: ConfigNodePropertyString?, details: ConfigNodePropertyString?, enabled: ConfigNodePropertyBoolean?, serviceName: ConfigNodePropertyString?, logLevel: ConfigNodePropertyDropDown?, allowedRoots: ConfigNodePropertyArray?, requestAuthorizationStrategyTarget: ConfigNodePropertyString?, queueProviderFactoryTarget: ConfigNodePropertyString?, packageBuilderTarget: ConfigNodePropertyString?, triggersTarget: ConfigNodePropertyString?, priorityQueues: ConfigNodePropertyArray?) {
        self.name = name
        self.title = title
        self.details = details
        self.enabled = enabled
        self.serviceName = serviceName
        self.logLevel = logLevel
        self.allowedRoots = allowedRoots
        self.requestAuthorizationStrategyTarget = requestAuthorizationStrategyTarget
        self.queueProviderFactoryTarget = queueProviderFactoryTarget
        self.packageBuilderTarget = packageBuilderTarget
        self.triggersTarget = triggersTarget
        self.priorityQueues = priorityQueues
    }

    public enum CodingKeys: String, CodingKey { 
        case name
        case title
        case details
        case enabled
        case serviceName
        case logLevel = "log.level"
        case allowedRoots = "allowed.roots"
        case requestAuthorizationStrategyTarget = "requestAuthorizationStrategy.target"
        case queueProviderFactoryTarget = "queueProviderFactory.target"
        case packageBuilderTarget = "packageBuilder.target"
        case triggersTarget = "triggers.target"
        case priorityQueues
    }


}

