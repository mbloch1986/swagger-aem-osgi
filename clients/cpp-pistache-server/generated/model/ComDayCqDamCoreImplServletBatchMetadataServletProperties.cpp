/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqDamCoreImplServletBatchMetadataServletProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqDamCoreImplServletBatchMetadataServletProperties::ComDayCqDamCoreImplServletBatchMetadataServletProperties()
{
    m_Cq_dam_batch_metadata_asset_defaultIsSet = false;
    m_Cq_dam_batch_metadata_collection_defaultIsSet = false;
    m_Cq_dam_batch_metadata_maxresourcesIsSet = false;
    
}

ComDayCqDamCoreImplServletBatchMetadataServletProperties::~ComDayCqDamCoreImplServletBatchMetadataServletProperties()
{
}

void ComDayCqDamCoreImplServletBatchMetadataServletProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqDamCoreImplServletBatchMetadataServletProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cq_dam_batch_metadata_asset_defaultIsSet)
    {
        val["cq.dam.batch.metadata.asset.default"] = ModelBase::toJson(m_Cq_dam_batch_metadata_asset_default);
    }
    if(m_Cq_dam_batch_metadata_collection_defaultIsSet)
    {
        val["cq.dam.batch.metadata.collection.default"] = ModelBase::toJson(m_Cq_dam_batch_metadata_collection_default);
    }
    if(m_Cq_dam_batch_metadata_maxresourcesIsSet)
    {
        val["cq.dam.batch.metadata.maxresources"] = ModelBase::toJson(m_Cq_dam_batch_metadata_maxresources);
    }
    

    return val;
}

void ComDayCqDamCoreImplServletBatchMetadataServletProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cq.dam.batch.metadata.asset.default") != val.end())
    {
        if(!val["cq.dam.batch.metadata.asset.default"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cq.dam.batch.metadata.asset.default"]);
            setCqDamBatchMetadataAssetDefault( newItem );
        }
        
    }
    if(val.find("cq.dam.batch.metadata.collection.default") != val.end())
    {
        if(!val["cq.dam.batch.metadata.collection.default"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["cq.dam.batch.metadata.collection.default"]);
            setCqDamBatchMetadataCollectionDefault( newItem );
        }
        
    }
    if(val.find("cq.dam.batch.metadata.maxresources") != val.end())
    {
        if(!val["cq.dam.batch.metadata.maxresources"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["cq.dam.batch.metadata.maxresources"]);
            setCqDamBatchMetadataMaxresources( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComDayCqDamCoreImplServletBatchMetadataServletProperties::getCqDamBatchMetadataAssetDefault() const
{
    return m_Cq_dam_batch_metadata_asset_default;
}
void ComDayCqDamCoreImplServletBatchMetadataServletProperties::setCqDamBatchMetadataAssetDefault(ConfigNodePropertyArray const& value)
{
    m_Cq_dam_batch_metadata_asset_default = value;
    m_Cq_dam_batch_metadata_asset_defaultIsSet = true;
}
bool ComDayCqDamCoreImplServletBatchMetadataServletProperties::cqDamBatchMetadataAssetDefaultIsSet() const
{
    return m_Cq_dam_batch_metadata_asset_defaultIsSet;
}
void ComDayCqDamCoreImplServletBatchMetadataServletProperties::unsetCq_dam_batch_metadata_asset_default()
{
    m_Cq_dam_batch_metadata_asset_defaultIsSet = false;
}
ConfigNodePropertyArray ComDayCqDamCoreImplServletBatchMetadataServletProperties::getCqDamBatchMetadataCollectionDefault() const
{
    return m_Cq_dam_batch_metadata_collection_default;
}
void ComDayCqDamCoreImplServletBatchMetadataServletProperties::setCqDamBatchMetadataCollectionDefault(ConfigNodePropertyArray const& value)
{
    m_Cq_dam_batch_metadata_collection_default = value;
    m_Cq_dam_batch_metadata_collection_defaultIsSet = true;
}
bool ComDayCqDamCoreImplServletBatchMetadataServletProperties::cqDamBatchMetadataCollectionDefaultIsSet() const
{
    return m_Cq_dam_batch_metadata_collection_defaultIsSet;
}
void ComDayCqDamCoreImplServletBatchMetadataServletProperties::unsetCq_dam_batch_metadata_collection_default()
{
    m_Cq_dam_batch_metadata_collection_defaultIsSet = false;
}
ConfigNodePropertyInteger ComDayCqDamCoreImplServletBatchMetadataServletProperties::getCqDamBatchMetadataMaxresources() const
{
    return m_Cq_dam_batch_metadata_maxresources;
}
void ComDayCqDamCoreImplServletBatchMetadataServletProperties::setCqDamBatchMetadataMaxresources(ConfigNodePropertyInteger const& value)
{
    m_Cq_dam_batch_metadata_maxresources = value;
    m_Cq_dam_batch_metadata_maxresourcesIsSet = true;
}
bool ComDayCqDamCoreImplServletBatchMetadataServletProperties::cqDamBatchMetadataMaxresourcesIsSet() const
{
    return m_Cq_dam_batch_metadata_maxresourcesIsSet;
}
void ComDayCqDamCoreImplServletBatchMetadataServletProperties::unsetCq_dam_batch_metadata_maxresources()
{
    m_Cq_dam_batch_metadata_maxresourcesIsSet = false;
}

}
}
}
}

