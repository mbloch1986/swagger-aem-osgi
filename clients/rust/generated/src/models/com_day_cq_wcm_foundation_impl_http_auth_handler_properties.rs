/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
  #[serde(rename = "path")]
  path: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "auth.http.nologin")]
  auth_http_nologin: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "auth.http.realm")]
  auth_http_realm: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "auth.default.loginpage")]
  auth_default_loginpage: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "auth.cred.form")]
  auth_cred_form: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "auth.cred.utf8")]
  auth_cred_utf8: Option<::models::ConfigNodePropertyArray>
}

impl ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
  pub fn new() -> ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
    ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
      path: None,
      auth_http_nologin: None,
      auth_http_realm: None,
      auth_default_loginpage: None,
      auth_cred_form: None,
      auth_cred_utf8: None
    }
  }

  pub fn set_path(&mut self, path: ::models::ConfigNodePropertyString) {
    self.path = Some(path);
  }

  pub fn with_path(mut self, path: ::models::ConfigNodePropertyString) -> ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
    self.path = Some(path);
    self
  }

  pub fn path(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.path.as_ref()
  }

  pub fn reset_path(&mut self) {
    self.path = None;
  }

  pub fn set_auth_http_nologin(&mut self, auth_http_nologin: ::models::ConfigNodePropertyBoolean) {
    self.auth_http_nologin = Some(auth_http_nologin);
  }

  pub fn with_auth_http_nologin(mut self, auth_http_nologin: ::models::ConfigNodePropertyBoolean) -> ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
    self.auth_http_nologin = Some(auth_http_nologin);
    self
  }

  pub fn auth_http_nologin(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.auth_http_nologin.as_ref()
  }

  pub fn reset_auth_http_nologin(&mut self) {
    self.auth_http_nologin = None;
  }

  pub fn set_auth_http_realm(&mut self, auth_http_realm: ::models::ConfigNodePropertyString) {
    self.auth_http_realm = Some(auth_http_realm);
  }

  pub fn with_auth_http_realm(mut self, auth_http_realm: ::models::ConfigNodePropertyString) -> ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
    self.auth_http_realm = Some(auth_http_realm);
    self
  }

  pub fn auth_http_realm(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.auth_http_realm.as_ref()
  }

  pub fn reset_auth_http_realm(&mut self) {
    self.auth_http_realm = None;
  }

  pub fn set_auth_default_loginpage(&mut self, auth_default_loginpage: ::models::ConfigNodePropertyString) {
    self.auth_default_loginpage = Some(auth_default_loginpage);
  }

  pub fn with_auth_default_loginpage(mut self, auth_default_loginpage: ::models::ConfigNodePropertyString) -> ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
    self.auth_default_loginpage = Some(auth_default_loginpage);
    self
  }

  pub fn auth_default_loginpage(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.auth_default_loginpage.as_ref()
  }

  pub fn reset_auth_default_loginpage(&mut self) {
    self.auth_default_loginpage = None;
  }

  pub fn set_auth_cred_form(&mut self, auth_cred_form: ::models::ConfigNodePropertyArray) {
    self.auth_cred_form = Some(auth_cred_form);
  }

  pub fn with_auth_cred_form(mut self, auth_cred_form: ::models::ConfigNodePropertyArray) -> ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
    self.auth_cred_form = Some(auth_cred_form);
    self
  }

  pub fn auth_cred_form(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.auth_cred_form.as_ref()
  }

  pub fn reset_auth_cred_form(&mut self) {
    self.auth_cred_form = None;
  }

  pub fn set_auth_cred_utf8(&mut self, auth_cred_utf8: ::models::ConfigNodePropertyArray) {
    self.auth_cred_utf8 = Some(auth_cred_utf8);
  }

  pub fn with_auth_cred_utf8(mut self, auth_cred_utf8: ::models::ConfigNodePropertyArray) -> ComDayCqWcmFoundationImplHttpAuthHandlerProperties {
    self.auth_cred_utf8 = Some(auth_cred_utf8);
    self
  }

  pub fn auth_cred_utf8(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.auth_cred_utf8.as_ref()
  }

  pub fn reset_auth_cred_utf8(&mut self) {
    self.auth_cred_utf8 = None;
  }

}



