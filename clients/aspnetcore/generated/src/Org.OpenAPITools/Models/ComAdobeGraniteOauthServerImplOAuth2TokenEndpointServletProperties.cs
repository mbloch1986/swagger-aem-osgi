/*
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties : IEquatable<ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties>
    { 
        /// <summary>
        /// Gets or Sets OauthIssuer
        /// </summary>
        [DataMember(Name="oauth.issuer")]
        public ConfigNodePropertyString OauthIssuer { get; set; }

        /// <summary>
        /// Gets or Sets OauthAccessTokenExpiresIn
        /// </summary>
        [DataMember(Name="oauth.access.token.expires.in")]
        public ConfigNodePropertyString OauthAccessTokenExpiresIn { get; set; }

        /// <summary>
        /// Gets or Sets OsgiHttpWhiteboardServletPattern
        /// </summary>
        [DataMember(Name="osgi.http.whiteboard.servlet.pattern")]
        public ConfigNodePropertyString OsgiHttpWhiteboardServletPattern { get; set; }

        /// <summary>
        /// Gets or Sets OsgiHttpWhiteboardContextSelect
        /// </summary>
        [DataMember(Name="osgi.http.whiteboard.context.select")]
        public ConfigNodePropertyString OsgiHttpWhiteboardContextSelect { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties {\n");
            sb.Append("  OauthIssuer: ").Append(OauthIssuer).Append("\n");
            sb.Append("  OauthAccessTokenExpiresIn: ").Append(OauthAccessTokenExpiresIn).Append("\n");
            sb.Append("  OsgiHttpWhiteboardServletPattern: ").Append(OsgiHttpWhiteboardServletPattern).Append("\n");
            sb.Append("  OsgiHttpWhiteboardContextSelect: ").Append(OsgiHttpWhiteboardContextSelect).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties)obj);
        }

        /// <summary>
        /// Returns true if ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties instances are equal
        /// </summary>
        /// <param name="other">Instance of ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    OauthIssuer == other.OauthIssuer ||
                    OauthIssuer != null &&
                    OauthIssuer.Equals(other.OauthIssuer)
                ) && 
                (
                    OauthAccessTokenExpiresIn == other.OauthAccessTokenExpiresIn ||
                    OauthAccessTokenExpiresIn != null &&
                    OauthAccessTokenExpiresIn.Equals(other.OauthAccessTokenExpiresIn)
                ) && 
                (
                    OsgiHttpWhiteboardServletPattern == other.OsgiHttpWhiteboardServletPattern ||
                    OsgiHttpWhiteboardServletPattern != null &&
                    OsgiHttpWhiteboardServletPattern.Equals(other.OsgiHttpWhiteboardServletPattern)
                ) && 
                (
                    OsgiHttpWhiteboardContextSelect == other.OsgiHttpWhiteboardContextSelect ||
                    OsgiHttpWhiteboardContextSelect != null &&
                    OsgiHttpWhiteboardContextSelect.Equals(other.OsgiHttpWhiteboardContextSelect)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (OauthIssuer != null)
                    hashCode = hashCode * 59 + OauthIssuer.GetHashCode();
                    if (OauthAccessTokenExpiresIn != null)
                    hashCode = hashCode * 59 + OauthAccessTokenExpiresIn.GetHashCode();
                    if (OsgiHttpWhiteboardServletPattern != null)
                    hashCode = hashCode * 59 + OsgiHttpWhiteboardServletPattern.GetHashCode();
                    if (OsgiHttpWhiteboardContextSelect != null)
                    hashCode = hashCode * 59 + OsgiHttpWhiteboardContextSelect.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties left, ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties left, ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletProperties right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
