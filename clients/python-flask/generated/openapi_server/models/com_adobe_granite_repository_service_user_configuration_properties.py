# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComAdobeGraniteRepositoryServiceUserConfigurationProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_ranking: ConfigNodePropertyInteger=None, serviceusers_simple_subject_population: ConfigNodePropertyBoolean=None, serviceusers_list: ConfigNodePropertyArray=None):  # noqa: E501
        """ComAdobeGraniteRepositoryServiceUserConfigurationProperties - a model defined in OpenAPI

        :param service_ranking: The service_ranking of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.  # noqa: E501
        :type service_ranking: ConfigNodePropertyInteger
        :param serviceusers_simple_subject_population: The serviceusers_simple_subject_population of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.  # noqa: E501
        :type serviceusers_simple_subject_population: ConfigNodePropertyBoolean
        :param serviceusers_list: The serviceusers_list of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.  # noqa: E501
        :type serviceusers_list: ConfigNodePropertyArray
        """
        self.openapi_types = {
            'service_ranking': ConfigNodePropertyInteger,
            'serviceusers_simple_subject_population': ConfigNodePropertyBoolean,
            'serviceusers_list': ConfigNodePropertyArray
        }

        self.attribute_map = {
            'service_ranking': 'service.ranking',
            'serviceusers_simple_subject_population': 'serviceusers.simpleSubjectPopulation',
            'serviceusers_list': 'serviceusers.list'
        }

        self._service_ranking = service_ranking
        self._serviceusers_simple_subject_population = serviceusers_simple_subject_population
        self._serviceusers_list = serviceusers_list

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeGraniteRepositoryServiceUserConfigurationProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeGraniteRepositoryServiceUserConfigurationProperties of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.  # noqa: E501
        :rtype: ComAdobeGraniteRepositoryServiceUserConfigurationProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_ranking(self) -> ConfigNodePropertyInteger:
        """Gets the service_ranking of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.


        :return: The service_ranking of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._service_ranking

    @service_ranking.setter
    def service_ranking(self, service_ranking: ConfigNodePropertyInteger):
        """Sets the service_ranking of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.


        :param service_ranking: The service_ranking of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.
        :type service_ranking: ConfigNodePropertyInteger
        """

        self._service_ranking = service_ranking

    @property
    def serviceusers_simple_subject_population(self) -> ConfigNodePropertyBoolean:
        """Gets the serviceusers_simple_subject_population of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.


        :return: The serviceusers_simple_subject_population of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._serviceusers_simple_subject_population

    @serviceusers_simple_subject_population.setter
    def serviceusers_simple_subject_population(self, serviceusers_simple_subject_population: ConfigNodePropertyBoolean):
        """Sets the serviceusers_simple_subject_population of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.


        :param serviceusers_simple_subject_population: The serviceusers_simple_subject_population of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.
        :type serviceusers_simple_subject_population: ConfigNodePropertyBoolean
        """

        self._serviceusers_simple_subject_population = serviceusers_simple_subject_population

    @property
    def serviceusers_list(self) -> ConfigNodePropertyArray:
        """Gets the serviceusers_list of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.


        :return: The serviceusers_list of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._serviceusers_list

    @serviceusers_list.setter
    def serviceusers_list(self, serviceusers_list: ConfigNodePropertyArray):
        """Sets the serviceusers_list of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.


        :param serviceusers_list: The serviceusers_list of this ComAdobeGraniteRepositoryServiceUserConfigurationProperties.
        :type serviceusers_list: ConfigNodePropertyArray
        """

        self._serviceusers_list = serviceusers_list
