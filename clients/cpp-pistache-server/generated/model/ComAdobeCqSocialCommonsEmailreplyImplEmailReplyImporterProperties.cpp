/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties::ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties()
{
    m_ConnectProtocolIsSet = false;
    
}

ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties::~ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties()
{
}

void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_ConnectProtocolIsSet)
    {
        val["connectProtocol"] = ModelBase::toJson(m_ConnectProtocol);
    }
    

    return val;
}

void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties::fromJson(nlohmann::json& val)
{
    if(val.find("connectProtocol") != val.end())
    {
        if(!val["connectProtocol"].is_null())
        {
            ConfigNodePropertyDropDown newItem;
            newItem.fromJson(val["connectProtocol"]);
            setConnectProtocol( newItem );
        }
        
    }
    
}


ConfigNodePropertyDropDown ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties::getConnectProtocol() const
{
    return m_ConnectProtocol;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties::setConnectProtocol(ConfigNodePropertyDropDown const& value)
{
    m_ConnectProtocol = value;
    m_ConnectProtocolIsSet = true;
}
bool ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties::connectProtocolIsSet() const
{
    return m_ConnectProtocolIsSet;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterProperties::unsetConnectProtocol()
{
    m_ConnectProtocolIsSet = false;
}

}
}
}
}

