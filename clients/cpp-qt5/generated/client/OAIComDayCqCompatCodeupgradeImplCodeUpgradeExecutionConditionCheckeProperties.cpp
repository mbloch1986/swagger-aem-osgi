/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties() {
    init();
}

OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::~OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties() {
    this->cleanup();
}

void
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::init() {
    codeupgradetasks = new OAIConfigNodePropertyArray();
    m_codeupgradetasks_isSet = false;
    codeupgradetaskfilters = new OAIConfigNodePropertyArray();
    m_codeupgradetaskfilters_isSet = false;
}

void
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::cleanup() {
    if(codeupgradetasks != nullptr) { 
        delete codeupgradetasks;
    }
    if(codeupgradetaskfilters != nullptr) { 
        delete codeupgradetaskfilters;
    }
}

OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties*
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&codeupgradetasks, pJson["codeupgradetasks"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&codeupgradetaskfilters, pJson["codeupgradetaskfilters"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::asJsonObject() {
    QJsonObject obj;
    if((codeupgradetasks != nullptr) && (codeupgradetasks->isSet())){
        toJsonValue(QString("codeupgradetasks"), codeupgradetasks, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((codeupgradetaskfilters != nullptr) && (codeupgradetaskfilters->isSet())){
        toJsonValue(QString("codeupgradetaskfilters"), codeupgradetaskfilters, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::getCodeupgradetasks() {
    return codeupgradetasks;
}
void
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::setCodeupgradetasks(OAIConfigNodePropertyArray* codeupgradetasks) {
    this->codeupgradetasks = codeupgradetasks;
    this->m_codeupgradetasks_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::getCodeupgradetaskfilters() {
    return codeupgradetaskfilters;
}
void
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::setCodeupgradetaskfilters(OAIConfigNodePropertyArray* codeupgradetaskfilters) {
    this->codeupgradetaskfilters = codeupgradetaskfilters;
    this->m_codeupgradetaskfilters_isSet = true;
}


bool
OAIComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(codeupgradetasks != nullptr && codeupgradetasks->isSet()){ isObjectUpdated = true; break;}
        if(codeupgradetaskfilters != nullptr && codeupgradetaskfilters->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

