/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties()
{
    m_Automoderation_sequenceIsSet = false;
    m_Automoderation_onfailurestopIsSet = false;
    
}

ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::~ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties()
{
}

void ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Automoderation_sequenceIsSet)
    {
        val["automoderation.sequence"] = ModelBase::toJson(m_Automoderation_sequence);
    }
    if(m_Automoderation_onfailurestopIsSet)
    {
        val["automoderation.onfailurestop"] = ModelBase::toJson(m_Automoderation_onfailurestop);
    }
    

    return val;
}

void ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("automoderation.sequence") != val.end())
    {
        if(!val["automoderation.sequence"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["automoderation.sequence"]);
            setAutomoderationSequence( newItem );
        }
        
    }
    if(val.find("automoderation.onfailurestop") != val.end())
    {
        if(!val["automoderation.onfailurestop"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["automoderation.onfailurestop"]);
            setAutomoderationOnfailurestop( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::getAutomoderationSequence() const
{
    return m_Automoderation_sequence;
}
void ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::setAutomoderationSequence(ConfigNodePropertyArray const& value)
{
    m_Automoderation_sequence = value;
    m_Automoderation_sequenceIsSet = true;
}
bool ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::automoderationSequenceIsSet() const
{
    return m_Automoderation_sequenceIsSet;
}
void ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::unsetAutomoderation_sequence()
{
    m_Automoderation_sequenceIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::getAutomoderationOnfailurestop() const
{
    return m_Automoderation_onfailurestop;
}
void ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::setAutomoderationOnfailurestop(ConfigNodePropertyBoolean const& value)
{
    m_Automoderation_onfailurestop = value;
    m_Automoderation_onfailurestopIsSet = true;
}
bool ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::automoderationOnfailurestopIsSet() const
{
    return m_Automoderation_onfailurestopIsSet;
}
void ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplProperties::unsetAutomoderation_onfailurestop()
{
    m_Automoderation_onfailurestopIsSet = false;
}

}
}
}
}

