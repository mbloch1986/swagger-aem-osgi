/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComDayCqDamCoreImplDamEventRecord
 */
public class OASComDayCqDamCoreImplDamEventRecord implements OAS.MappedProperties {
    /**
     * Get eventFilter
     * @return eventFilter
     */
    public OASConfigNodePropertyString eventFilter { get; set; }

    /**
     * Get eventQueueLength
     * @return eventQueueLength
     */
    public OASConfigNodePropertyInteger eventQueueLength { get; set; }

    /**
     * Get eventrecorderEnabled
     * @return eventrecorderEnabled
     */
    public OASConfigNodePropertyBoolean eventrecorderEnabled { get; set; }

    /**
     * Get eventrecorderBlacklist
     * @return eventrecorderBlacklist
     */
    public OASConfigNodePropertyArray eventrecorderBlacklist { get; set; }

    /**
     * Get eventrecorderEventtypes
     * @return eventrecorderEventtypes
     */
    public OASConfigNodePropertyDropDown eventrecorderEventtypes { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'event.filter' => 'eventFilter',
        'event.queue.length' => 'eventQueueLength',
        'eventrecorder.enabled' => 'eventrecorderEnabled',
        'eventrecorder.blacklist' => 'eventrecorderBlacklist',
        'eventrecorder.eventtypes' => 'eventrecorderEventtypes'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComDayCqDamCoreImplDamEventRecord getExample() {
        OASComDayCqDamCoreImplDamEventRecord comDayCqDamCoreImplDamEventRecorderImplProperties = new OASComDayCqDamCoreImplDamEventRecord();
          comDayCqDamCoreImplDamEventRecorderImplProperties.eventFilter = OASConfigNodePropertyString.getExample();
          comDayCqDamCoreImplDamEventRecorderImplProperties.eventQueueLength = OASConfigNodePropertyInteger.getExample();
          comDayCqDamCoreImplDamEventRecorderImplProperties.eventrecorderEnabled = OASConfigNodePropertyBoolean.getExample();
          comDayCqDamCoreImplDamEventRecorderImplProperties.eventrecorderBlacklist = OASConfigNodePropertyArray.getExample();
          comDayCqDamCoreImplDamEventRecorderImplProperties.eventrecorderEventtypes = OASConfigNodePropertyDropDown.getExample();
        return comDayCqDamCoreImplDamEventRecorderImplProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComDayCqDamCoreImplDamEventRecord) {           
            OASComDayCqDamCoreImplDamEventRecord comDayCqDamCoreImplDamEventRecorderImplProperties = (OASComDayCqDamCoreImplDamEventRecord) obj;
            return this.eventFilter == comDayCqDamCoreImplDamEventRecorderImplProperties.eventFilter
                && this.eventQueueLength == comDayCqDamCoreImplDamEventRecorderImplProperties.eventQueueLength
                && this.eventrecorderEnabled == comDayCqDamCoreImplDamEventRecorderImplProperties.eventrecorderEnabled
                && this.eventrecorderBlacklist == comDayCqDamCoreImplDamEventRecorderImplProperties.eventrecorderBlacklist
                && this.eventrecorderEventtypes == comDayCqDamCoreImplDamEventRecorderImplProperties.eventrecorderEventtypes;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (eventFilter == null ? 0 : System.hashCode(eventFilter));
        hashCode = (17 * hashCode) + (eventQueueLength == null ? 0 : System.hashCode(eventQueueLength));
        hashCode = (17 * hashCode) + (eventrecorderEnabled == null ? 0 : System.hashCode(eventrecorderEnabled));
        hashCode = (17 * hashCode) + (eventrecorderBlacklist == null ? 0 : System.hashCode(eventrecorderBlacklist));
        hashCode = (17 * hashCode) + (eventrecorderEventtypes == null ? 0 : System.hashCode(eventrecorderEventtypes));
        return hashCode;
    }
}

