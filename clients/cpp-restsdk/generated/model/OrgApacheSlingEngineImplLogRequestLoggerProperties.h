/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheSlingEngineImplLogRequestLoggerProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingEngineImplLogRequestLoggerProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingEngineImplLogRequestLoggerProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingEngineImplLogRequestLoggerProperties
    : public ModelBase
{
public:
    OrgApacheSlingEngineImplLogRequestLoggerProperties();
    virtual ~OrgApacheSlingEngineImplLogRequestLoggerProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingEngineImplLogRequestLoggerProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getRequestLogOutput() const;
    bool requestLogOutputIsSet() const;
    void unsetRequest_log_output();
    void setRequestLogOutput(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown> getRequestLogOutputtype() const;
    bool requestLogOutputtypeIsSet() const;
    void unsetRequest_log_outputtype();
    void setRequestLogOutputtype(std::shared_ptr<ConfigNodePropertyDropDown> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getRequestLogEnabled() const;
    bool requestLogEnabledIsSet() const;
    void unsetRequest_log_enabled();
    void setRequestLogEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getAccessLogOutput() const;
    bool accessLogOutputIsSet() const;
    void unsetAccess_log_output();
    void setAccessLogOutput(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown> getAccessLogOutputtype() const;
    bool accessLogOutputtypeIsSet() const;
    void unsetAccess_log_outputtype();
    void setAccessLogOutputtype(std::shared_ptr<ConfigNodePropertyDropDown> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getAccessLogEnabled() const;
    bool accessLogEnabledIsSet() const;
    void unsetAccess_log_enabled();
    void setAccessLogEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Request_log_output;
    bool m_Request_log_outputIsSet;
    std::shared_ptr<ConfigNodePropertyDropDown> m_Request_log_outputtype;
    bool m_Request_log_outputtypeIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Request_log_enabled;
    bool m_Request_log_enabledIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Access_log_output;
    bool m_Access_log_outputIsSet;
    std::shared_ptr<ConfigNodePropertyDropDown> m_Access_log_outputtype;
    bool m_Access_log_outputtypeIsSet;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Access_log_enabled;
    bool m_Access_log_enabledIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingEngineImplLogRequestLoggerProperties_H_ */
