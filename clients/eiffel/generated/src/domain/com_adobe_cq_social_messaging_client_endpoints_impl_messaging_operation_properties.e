note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class COM_ADOBE_CQ_SOCIAL_MESSAGING_CLIENT_ENDPOINTS_IMPL_MESSAGING_OPERATION_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    message_properties: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    message_box_size_limit: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    message_count_limit: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    notify_failure: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    failure_message_from: detachable CONFIG_NODE_PROPERTY_STRING 
      
    failure_template_path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    max_retries: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    min_wait_between_retries: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    count_update_pool_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    inbox_path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    sentitems_path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    support_attachments: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    support_group_messaging: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    max_total_recipients: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    batch_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    max_total_attachment_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    attachment_type_blacklist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    allowed_attachment_types: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    service_selector: detachable CONFIG_NODE_PROPERTY_STRING 
      
    field_whitelist: detachable CONFIG_NODE_PROPERTY_ARRAY 
      

feature -- Change Element  
 
    set_message_properties (a_name: like message_properties)
        -- Set 'message_properties' with 'a_name'.
      do
        message_properties := a_name
      ensure
        message_properties_set: message_properties = a_name		
      end

    set_message_box_size_limit (a_name: like message_box_size_limit)
        -- Set 'message_box_size_limit' with 'a_name'.
      do
        message_box_size_limit := a_name
      ensure
        message_box_size_limit_set: message_box_size_limit = a_name		
      end

    set_message_count_limit (a_name: like message_count_limit)
        -- Set 'message_count_limit' with 'a_name'.
      do
        message_count_limit := a_name
      ensure
        message_count_limit_set: message_count_limit = a_name		
      end

    set_notify_failure (a_name: like notify_failure)
        -- Set 'notify_failure' with 'a_name'.
      do
        notify_failure := a_name
      ensure
        notify_failure_set: notify_failure = a_name		
      end

    set_failure_message_from (a_name: like failure_message_from)
        -- Set 'failure_message_from' with 'a_name'.
      do
        failure_message_from := a_name
      ensure
        failure_message_from_set: failure_message_from = a_name		
      end

    set_failure_template_path (a_name: like failure_template_path)
        -- Set 'failure_template_path' with 'a_name'.
      do
        failure_template_path := a_name
      ensure
        failure_template_path_set: failure_template_path = a_name		
      end

    set_max_retries (a_name: like max_retries)
        -- Set 'max_retries' with 'a_name'.
      do
        max_retries := a_name
      ensure
        max_retries_set: max_retries = a_name		
      end

    set_min_wait_between_retries (a_name: like min_wait_between_retries)
        -- Set 'min_wait_between_retries' with 'a_name'.
      do
        min_wait_between_retries := a_name
      ensure
        min_wait_between_retries_set: min_wait_between_retries = a_name		
      end

    set_count_update_pool_size (a_name: like count_update_pool_size)
        -- Set 'count_update_pool_size' with 'a_name'.
      do
        count_update_pool_size := a_name
      ensure
        count_update_pool_size_set: count_update_pool_size = a_name		
      end

    set_inbox_path (a_name: like inbox_path)
        -- Set 'inbox_path' with 'a_name'.
      do
        inbox_path := a_name
      ensure
        inbox_path_set: inbox_path = a_name		
      end

    set_sentitems_path (a_name: like sentitems_path)
        -- Set 'sentitems_path' with 'a_name'.
      do
        sentitems_path := a_name
      ensure
        sentitems_path_set: sentitems_path = a_name		
      end

    set_support_attachments (a_name: like support_attachments)
        -- Set 'support_attachments' with 'a_name'.
      do
        support_attachments := a_name
      ensure
        support_attachments_set: support_attachments = a_name		
      end

    set_support_group_messaging (a_name: like support_group_messaging)
        -- Set 'support_group_messaging' with 'a_name'.
      do
        support_group_messaging := a_name
      ensure
        support_group_messaging_set: support_group_messaging = a_name		
      end

    set_max_total_recipients (a_name: like max_total_recipients)
        -- Set 'max_total_recipients' with 'a_name'.
      do
        max_total_recipients := a_name
      ensure
        max_total_recipients_set: max_total_recipients = a_name		
      end

    set_batch_size (a_name: like batch_size)
        -- Set 'batch_size' with 'a_name'.
      do
        batch_size := a_name
      ensure
        batch_size_set: batch_size = a_name		
      end

    set_max_total_attachment_size (a_name: like max_total_attachment_size)
        -- Set 'max_total_attachment_size' with 'a_name'.
      do
        max_total_attachment_size := a_name
      ensure
        max_total_attachment_size_set: max_total_attachment_size = a_name		
      end

    set_attachment_type_blacklist (a_name: like attachment_type_blacklist)
        -- Set 'attachment_type_blacklist' with 'a_name'.
      do
        attachment_type_blacklist := a_name
      ensure
        attachment_type_blacklist_set: attachment_type_blacklist = a_name		
      end

    set_allowed_attachment_types (a_name: like allowed_attachment_types)
        -- Set 'allowed_attachment_types' with 'a_name'.
      do
        allowed_attachment_types := a_name
      ensure
        allowed_attachment_types_set: allowed_attachment_types = a_name		
      end

    set_service_selector (a_name: like service_selector)
        -- Set 'service_selector' with 'a_name'.
      do
        service_selector := a_name
      ensure
        service_selector_set: service_selector = a_name		
      end

    set_field_whitelist (a_name: like field_whitelist)
        -- Set 'field_whitelist' with 'a_name'.
      do
        field_whitelist := a_name
      ensure
        field_whitelist_set: field_whitelist = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass COM_ADOBE_CQ_SOCIAL_MESSAGING_CLIENT_ENDPOINTS_IMPL_MESSAGING_OPERATION_PROPERTIES%N")
        if attached message_properties as l_message_properties then
          Result.append ("%Nmessage_properties:")
          Result.append (l_message_properties.out)
          Result.append ("%N")    
        end  
        if attached message_box_size_limit as l_message_box_size_limit then
          Result.append ("%Nmessage_box_size_limit:")
          Result.append (l_message_box_size_limit.out)
          Result.append ("%N")    
        end  
        if attached message_count_limit as l_message_count_limit then
          Result.append ("%Nmessage_count_limit:")
          Result.append (l_message_count_limit.out)
          Result.append ("%N")    
        end  
        if attached notify_failure as l_notify_failure then
          Result.append ("%Nnotify_failure:")
          Result.append (l_notify_failure.out)
          Result.append ("%N")    
        end  
        if attached failure_message_from as l_failure_message_from then
          Result.append ("%Nfailure_message_from:")
          Result.append (l_failure_message_from.out)
          Result.append ("%N")    
        end  
        if attached failure_template_path as l_failure_template_path then
          Result.append ("%Nfailure_template_path:")
          Result.append (l_failure_template_path.out)
          Result.append ("%N")    
        end  
        if attached max_retries as l_max_retries then
          Result.append ("%Nmax_retries:")
          Result.append (l_max_retries.out)
          Result.append ("%N")    
        end  
        if attached min_wait_between_retries as l_min_wait_between_retries then
          Result.append ("%Nmin_wait_between_retries:")
          Result.append (l_min_wait_between_retries.out)
          Result.append ("%N")    
        end  
        if attached count_update_pool_size as l_count_update_pool_size then
          Result.append ("%Ncount_update_pool_size:")
          Result.append (l_count_update_pool_size.out)
          Result.append ("%N")    
        end  
        if attached inbox_path as l_inbox_path then
          Result.append ("%Ninbox_path:")
          Result.append (l_inbox_path.out)
          Result.append ("%N")    
        end  
        if attached sentitems_path as l_sentitems_path then
          Result.append ("%Nsentitems_path:")
          Result.append (l_sentitems_path.out)
          Result.append ("%N")    
        end  
        if attached support_attachments as l_support_attachments then
          Result.append ("%Nsupport_attachments:")
          Result.append (l_support_attachments.out)
          Result.append ("%N")    
        end  
        if attached support_group_messaging as l_support_group_messaging then
          Result.append ("%Nsupport_group_messaging:")
          Result.append (l_support_group_messaging.out)
          Result.append ("%N")    
        end  
        if attached max_total_recipients as l_max_total_recipients then
          Result.append ("%Nmax_total_recipients:")
          Result.append (l_max_total_recipients.out)
          Result.append ("%N")    
        end  
        if attached batch_size as l_batch_size then
          Result.append ("%Nbatch_size:")
          Result.append (l_batch_size.out)
          Result.append ("%N")    
        end  
        if attached max_total_attachment_size as l_max_total_attachment_size then
          Result.append ("%Nmax_total_attachment_size:")
          Result.append (l_max_total_attachment_size.out)
          Result.append ("%N")    
        end  
        if attached attachment_type_blacklist as l_attachment_type_blacklist then
          Result.append ("%Nattachment_type_blacklist:")
          Result.append (l_attachment_type_blacklist.out)
          Result.append ("%N")    
        end  
        if attached allowed_attachment_types as l_allowed_attachment_types then
          Result.append ("%Nallowed_attachment_types:")
          Result.append (l_allowed_attachment_types.out)
          Result.append ("%N")    
        end  
        if attached service_selector as l_service_selector then
          Result.append ("%Nservice_selector:")
          Result.append (l_service_selector.out)
          Result.append ("%N")    
        end  
        if attached field_whitelist as l_field_whitelist then
          Result.append ("%Nfield_whitelist:")
          Result.append (l_field_whitelist.out)
          Result.append ("%N")    
        end  
      end
end


