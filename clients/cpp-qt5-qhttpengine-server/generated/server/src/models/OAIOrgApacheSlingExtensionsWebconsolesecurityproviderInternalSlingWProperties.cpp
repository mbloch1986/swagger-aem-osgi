/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties() {
    this->init();
}

OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::~OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties() {
    
}

void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::init() {
    m_users_isSet = false;
    m_groups_isSet = false;
}

void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(users, json[QString("users")]);
    
    ::OpenAPI::fromJsonValue(groups, json[QString("groups")]);
    
}

QString
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::asJsonObject() const {
    QJsonObject obj;
	if(users.isSet()){
        obj.insert(QString("users"), ::OpenAPI::toJsonValue(users));
    }
	if(groups.isSet()){
        obj.insert(QString("groups"), ::OpenAPI::toJsonValue(groups));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::getUsers() const {
    return users;
}
void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::setUsers(const OAIConfigNodePropertyArray &users) {
    this->users = users;
    this->m_users_isSet = true;
}

OAIConfigNodePropertyArray
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::getGroups() const {
    return groups;
}
void
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::setGroups(const OAIConfigNodePropertyArray &groups) {
    this->groups = groups;
    this->m_groups_isSet = true;
}


bool
OAIOrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(users.isSet()){ isObjectUpdated = true; break;}
    
        if(groups.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

