/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties()
{
    m_EnabledIsSet = false;
    m_ConfigPropertyInheritancePropertyNamesIsSet = false;
    
}

OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::~OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties()
{
}

void OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_EnabledIsSet)
    {
        val["enabled"] = ModelBase::toJson(m_Enabled);
    }
    if(m_ConfigPropertyInheritancePropertyNamesIsSet)
    {
        val["configPropertyInheritancePropertyNames"] = ModelBase::toJson(m_ConfigPropertyInheritancePropertyNames);
    }
    

    return val;
}

void OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::fromJson(nlohmann::json& val)
{
    if(val.find("enabled") != val.end())
    {
        if(!val["enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["enabled"]);
            setEnabled( newItem );
        }
        
    }
    if(val.find("configPropertyInheritancePropertyNames") != val.end())
    {
        if(!val["configPropertyInheritancePropertyNames"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["configPropertyInheritancePropertyNames"]);
            setConfigPropertyInheritancePropertyNames( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::getEnabled() const
{
    return m_Enabled;
}
void OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::setEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Enabled = value;
    m_EnabledIsSet = true;
}
bool OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::enabledIsSet() const
{
    return m_EnabledIsSet;
}
void OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::unsetEnabled()
{
    m_EnabledIsSet = false;
}
ConfigNodePropertyArray OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::getConfigPropertyInheritancePropertyNames() const
{
    return m_ConfigPropertyInheritancePropertyNames;
}
void OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::setConfigPropertyInheritancePropertyNames(ConfigNodePropertyArray const& value)
{
    m_ConfigPropertyInheritancePropertyNames = value;
    m_ConfigPropertyInheritancePropertyNamesIsSet = true;
}
bool OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::configPropertyInheritancePropertyNamesIsSet() const
{
    return m_ConfigPropertyInheritancePropertyNamesIsSet;
}
void OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraProperties::unsetConfigPropertyInheritancePropertyNames()
{
    m_ConfigPropertyInheritancePropertyNamesIsSet = false;
}

}
}
}
}

