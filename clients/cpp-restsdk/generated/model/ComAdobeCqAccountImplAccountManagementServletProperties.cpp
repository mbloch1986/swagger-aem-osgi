/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeCqAccountImplAccountManagementServletProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ComAdobeCqAccountImplAccountManagementServletProperties::ComAdobeCqAccountImplAccountManagementServletProperties()
{
    m_Cq_accountmanager_config_informnewaccount_mailIsSet = false;
    m_Cq_accountmanager_config_informnewpwd_mailIsSet = false;
}

ComAdobeCqAccountImplAccountManagementServletProperties::~ComAdobeCqAccountImplAccountManagementServletProperties()
{
}

void ComAdobeCqAccountImplAccountManagementServletProperties::validate()
{
    // TODO: implement validation
}

web::json::value ComAdobeCqAccountImplAccountManagementServletProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Cq_accountmanager_config_informnewaccount_mailIsSet)
    {
        val[utility::conversions::to_string_t("cq.accountmanager.config.informnewaccount.mail")] = ModelBase::toJson(m_Cq_accountmanager_config_informnewaccount_mail);
    }
    if(m_Cq_accountmanager_config_informnewpwd_mailIsSet)
    {
        val[utility::conversions::to_string_t("cq.accountmanager.config.informnewpwd.mail")] = ModelBase::toJson(m_Cq_accountmanager_config_informnewpwd_mail);
    }

    return val;
}

void ComAdobeCqAccountImplAccountManagementServletProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("cq.accountmanager.config.informnewaccount.mail")))
    {
        if(!val[utility::conversions::to_string_t("cq.accountmanager.config.informnewaccount.mail")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromJson(val[utility::conversions::to_string_t("cq.accountmanager.config.informnewaccount.mail")]);
            setCqAccountmanagerConfigInformnewaccountMail( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("cq.accountmanager.config.informnewpwd.mail")))
    {
        if(!val[utility::conversions::to_string_t("cq.accountmanager.config.informnewpwd.mail")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromJson(val[utility::conversions::to_string_t("cq.accountmanager.config.informnewpwd.mail")]);
            setCqAccountmanagerConfigInformnewpwdMail( newItem );
        }
    }
}

void ComAdobeCqAccountImplAccountManagementServletProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Cq_accountmanager_config_informnewaccount_mailIsSet)
    {
        if (m_Cq_accountmanager_config_informnewaccount_mail.get())
        {
            m_Cq_accountmanager_config_informnewaccount_mail->toMultipart(multipart, utility::conversions::to_string_t("cq.accountmanager.config.informnewaccount.mail."));
        }
    }
    if(m_Cq_accountmanager_config_informnewpwd_mailIsSet)
    {
        if (m_Cq_accountmanager_config_informnewpwd_mail.get())
        {
            m_Cq_accountmanager_config_informnewpwd_mail->toMultipart(multipart, utility::conversions::to_string_t("cq.accountmanager.config.informnewpwd.mail."));
        }
    }
}

void ComAdobeCqAccountImplAccountManagementServletProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("cq.accountmanager.config.informnewaccount.mail")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("cq.accountmanager.config.informnewaccount.mail")))
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("cq.accountmanager.config.informnewaccount.mail."));
            setCqAccountmanagerConfigInformnewaccountMail( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("cq.accountmanager.config.informnewpwd.mail")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("cq.accountmanager.config.informnewpwd.mail")))
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("cq.accountmanager.config.informnewpwd.mail."));
            setCqAccountmanagerConfigInformnewpwdMail( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyString> ComAdobeCqAccountImplAccountManagementServletProperties::getCqAccountmanagerConfigInformnewaccountMail() const
{
    return m_Cq_accountmanager_config_informnewaccount_mail;
}


void ComAdobeCqAccountImplAccountManagementServletProperties::setCqAccountmanagerConfigInformnewaccountMail(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Cq_accountmanager_config_informnewaccount_mail = value;
    m_Cq_accountmanager_config_informnewaccount_mailIsSet = true;
}
bool ComAdobeCqAccountImplAccountManagementServletProperties::cqAccountmanagerConfigInformnewaccountMailIsSet() const
{
    return m_Cq_accountmanager_config_informnewaccount_mailIsSet;
}

void ComAdobeCqAccountImplAccountManagementServletProperties::unsetCq_accountmanager_config_informnewaccount_mail()
{
    m_Cq_accountmanager_config_informnewaccount_mailIsSet = false;
}

std::shared_ptr<ConfigNodePropertyString> ComAdobeCqAccountImplAccountManagementServletProperties::getCqAccountmanagerConfigInformnewpwdMail() const
{
    return m_Cq_accountmanager_config_informnewpwd_mail;
}


void ComAdobeCqAccountImplAccountManagementServletProperties::setCqAccountmanagerConfigInformnewpwdMail(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Cq_accountmanager_config_informnewpwd_mail = value;
    m_Cq_accountmanager_config_informnewpwd_mailIsSet = true;
}
bool ComAdobeCqAccountImplAccountManagementServletProperties::cqAccountmanagerConfigInformnewpwdMailIsSet() const
{
    return m_Cq_accountmanager_config_informnewpwd_mailIsSet;
}

void ComAdobeCqAccountImplAccountManagementServletProperties::unsetCq_accountmanager_config_informnewpwd_mail()
{
    m_Cq_accountmanager_config_informnewpwd_mailIsSet = false;
}

}
}
}
}

