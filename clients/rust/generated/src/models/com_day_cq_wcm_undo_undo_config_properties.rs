/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComDayCqWcmUndoUndoConfigProperties {
  #[serde(rename = "cq.wcm.undo.enabled")]
  cq_wcm_undo_enabled: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "cq.wcm.undo.path")]
  cq_wcm_undo_path: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.wcm.undo.validity")]
  cq_wcm_undo_validity: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.wcm.undo.steps")]
  cq_wcm_undo_steps: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "cq.wcm.undo.persistence")]
  cq_wcm_undo_persistence: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.wcm.undo.persistence.mode")]
  cq_wcm_undo_persistence_mode: Option<::models::ConfigNodePropertyBoolean>,
  #[serde(rename = "cq.wcm.undo.markermode")]
  cq_wcm_undo_markermode: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "cq.wcm.undo.whitelist")]
  cq_wcm_undo_whitelist: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "cq.wcm.undo.blacklist")]
  cq_wcm_undo_blacklist: Option<::models::ConfigNodePropertyArray>
}

impl ComDayCqWcmUndoUndoConfigProperties {
  pub fn new() -> ComDayCqWcmUndoUndoConfigProperties {
    ComDayCqWcmUndoUndoConfigProperties {
      cq_wcm_undo_enabled: None,
      cq_wcm_undo_path: None,
      cq_wcm_undo_validity: None,
      cq_wcm_undo_steps: None,
      cq_wcm_undo_persistence: None,
      cq_wcm_undo_persistence_mode: None,
      cq_wcm_undo_markermode: None,
      cq_wcm_undo_whitelist: None,
      cq_wcm_undo_blacklist: None
    }
  }

  pub fn set_cq_wcm_undo_enabled(&mut self, cq_wcm_undo_enabled: ::models::ConfigNodePropertyBoolean) {
    self.cq_wcm_undo_enabled = Some(cq_wcm_undo_enabled);
  }

  pub fn with_cq_wcm_undo_enabled(mut self, cq_wcm_undo_enabled: ::models::ConfigNodePropertyBoolean) -> ComDayCqWcmUndoUndoConfigProperties {
    self.cq_wcm_undo_enabled = Some(cq_wcm_undo_enabled);
    self
  }

  pub fn cq_wcm_undo_enabled(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.cq_wcm_undo_enabled.as_ref()
  }

  pub fn reset_cq_wcm_undo_enabled(&mut self) {
    self.cq_wcm_undo_enabled = None;
  }

  pub fn set_cq_wcm_undo_path(&mut self, cq_wcm_undo_path: ::models::ConfigNodePropertyString) {
    self.cq_wcm_undo_path = Some(cq_wcm_undo_path);
  }

  pub fn with_cq_wcm_undo_path(mut self, cq_wcm_undo_path: ::models::ConfigNodePropertyString) -> ComDayCqWcmUndoUndoConfigProperties {
    self.cq_wcm_undo_path = Some(cq_wcm_undo_path);
    self
  }

  pub fn cq_wcm_undo_path(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_wcm_undo_path.as_ref()
  }

  pub fn reset_cq_wcm_undo_path(&mut self) {
    self.cq_wcm_undo_path = None;
  }

  pub fn set_cq_wcm_undo_validity(&mut self, cq_wcm_undo_validity: ::models::ConfigNodePropertyInteger) {
    self.cq_wcm_undo_validity = Some(cq_wcm_undo_validity);
  }

  pub fn with_cq_wcm_undo_validity(mut self, cq_wcm_undo_validity: ::models::ConfigNodePropertyInteger) -> ComDayCqWcmUndoUndoConfigProperties {
    self.cq_wcm_undo_validity = Some(cq_wcm_undo_validity);
    self
  }

  pub fn cq_wcm_undo_validity(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_wcm_undo_validity.as_ref()
  }

  pub fn reset_cq_wcm_undo_validity(&mut self) {
    self.cq_wcm_undo_validity = None;
  }

  pub fn set_cq_wcm_undo_steps(&mut self, cq_wcm_undo_steps: ::models::ConfigNodePropertyInteger) {
    self.cq_wcm_undo_steps = Some(cq_wcm_undo_steps);
  }

  pub fn with_cq_wcm_undo_steps(mut self, cq_wcm_undo_steps: ::models::ConfigNodePropertyInteger) -> ComDayCqWcmUndoUndoConfigProperties {
    self.cq_wcm_undo_steps = Some(cq_wcm_undo_steps);
    self
  }

  pub fn cq_wcm_undo_steps(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.cq_wcm_undo_steps.as_ref()
  }

  pub fn reset_cq_wcm_undo_steps(&mut self) {
    self.cq_wcm_undo_steps = None;
  }

  pub fn set_cq_wcm_undo_persistence(&mut self, cq_wcm_undo_persistence: ::models::ConfigNodePropertyString) {
    self.cq_wcm_undo_persistence = Some(cq_wcm_undo_persistence);
  }

  pub fn with_cq_wcm_undo_persistence(mut self, cq_wcm_undo_persistence: ::models::ConfigNodePropertyString) -> ComDayCqWcmUndoUndoConfigProperties {
    self.cq_wcm_undo_persistence = Some(cq_wcm_undo_persistence);
    self
  }

  pub fn cq_wcm_undo_persistence(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_wcm_undo_persistence.as_ref()
  }

  pub fn reset_cq_wcm_undo_persistence(&mut self) {
    self.cq_wcm_undo_persistence = None;
  }

  pub fn set_cq_wcm_undo_persistence_mode(&mut self, cq_wcm_undo_persistence_mode: ::models::ConfigNodePropertyBoolean) {
    self.cq_wcm_undo_persistence_mode = Some(cq_wcm_undo_persistence_mode);
  }

  pub fn with_cq_wcm_undo_persistence_mode(mut self, cq_wcm_undo_persistence_mode: ::models::ConfigNodePropertyBoolean) -> ComDayCqWcmUndoUndoConfigProperties {
    self.cq_wcm_undo_persistence_mode = Some(cq_wcm_undo_persistence_mode);
    self
  }

  pub fn cq_wcm_undo_persistence_mode(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.cq_wcm_undo_persistence_mode.as_ref()
  }

  pub fn reset_cq_wcm_undo_persistence_mode(&mut self) {
    self.cq_wcm_undo_persistence_mode = None;
  }

  pub fn set_cq_wcm_undo_markermode(&mut self, cq_wcm_undo_markermode: ::models::ConfigNodePropertyString) {
    self.cq_wcm_undo_markermode = Some(cq_wcm_undo_markermode);
  }

  pub fn with_cq_wcm_undo_markermode(mut self, cq_wcm_undo_markermode: ::models::ConfigNodePropertyString) -> ComDayCqWcmUndoUndoConfigProperties {
    self.cq_wcm_undo_markermode = Some(cq_wcm_undo_markermode);
    self
  }

  pub fn cq_wcm_undo_markermode(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.cq_wcm_undo_markermode.as_ref()
  }

  pub fn reset_cq_wcm_undo_markermode(&mut self) {
    self.cq_wcm_undo_markermode = None;
  }

  pub fn set_cq_wcm_undo_whitelist(&mut self, cq_wcm_undo_whitelist: ::models::ConfigNodePropertyArray) {
    self.cq_wcm_undo_whitelist = Some(cq_wcm_undo_whitelist);
  }

  pub fn with_cq_wcm_undo_whitelist(mut self, cq_wcm_undo_whitelist: ::models::ConfigNodePropertyArray) -> ComDayCqWcmUndoUndoConfigProperties {
    self.cq_wcm_undo_whitelist = Some(cq_wcm_undo_whitelist);
    self
  }

  pub fn cq_wcm_undo_whitelist(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.cq_wcm_undo_whitelist.as_ref()
  }

  pub fn reset_cq_wcm_undo_whitelist(&mut self) {
    self.cq_wcm_undo_whitelist = None;
  }

  pub fn set_cq_wcm_undo_blacklist(&mut self, cq_wcm_undo_blacklist: ::models::ConfigNodePropertyArray) {
    self.cq_wcm_undo_blacklist = Some(cq_wcm_undo_blacklist);
  }

  pub fn with_cq_wcm_undo_blacklist(mut self, cq_wcm_undo_blacklist: ::models::ConfigNodePropertyArray) -> ComDayCqWcmUndoUndoConfigProperties {
    self.cq_wcm_undo_blacklist = Some(cq_wcm_undo_blacklist);
    self
  }

  pub fn cq_wcm_undo_blacklist(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.cq_wcm_undo_blacklist.as_ref()
  }

  pub fn reset_cq_wcm_undo_blacklist(&mut self) {
    self.cq_wcm_undo_blacklist = None;
  }

}



