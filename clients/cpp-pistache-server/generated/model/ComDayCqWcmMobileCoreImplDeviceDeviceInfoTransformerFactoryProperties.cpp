/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties()
{
    m_Device_info_transformer_enabledIsSet = false;
    m_Device_info_transformer_css_styleIsSet = false;
    
}

ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::~ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties()
{
}

void ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Device_info_transformer_enabledIsSet)
    {
        val["device.info.transformer.enabled"] = ModelBase::toJson(m_Device_info_transformer_enabled);
    }
    if(m_Device_info_transformer_css_styleIsSet)
    {
        val["device.info.transformer.css.style"] = ModelBase::toJson(m_Device_info_transformer_css_style);
    }
    

    return val;
}

void ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::fromJson(nlohmann::json& val)
{
    if(val.find("device.info.transformer.enabled") != val.end())
    {
        if(!val["device.info.transformer.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["device.info.transformer.enabled"]);
            setDeviceInfoTransformerEnabled( newItem );
        }
        
    }
    if(val.find("device.info.transformer.css.style") != val.end())
    {
        if(!val["device.info.transformer.css.style"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["device.info.transformer.css.style"]);
            setDeviceInfoTransformerCssStyle( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::getDeviceInfoTransformerEnabled() const
{
    return m_Device_info_transformer_enabled;
}
void ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::setDeviceInfoTransformerEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Device_info_transformer_enabled = value;
    m_Device_info_transformer_enabledIsSet = true;
}
bool ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::deviceInfoTransformerEnabledIsSet() const
{
    return m_Device_info_transformer_enabledIsSet;
}
void ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::unsetDevice_info_transformer_enabled()
{
    m_Device_info_transformer_enabledIsSet = false;
}
ConfigNodePropertyString ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::getDeviceInfoTransformerCssStyle() const
{
    return m_Device_info_transformer_css_style;
}
void ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::setDeviceInfoTransformerCssStyle(ConfigNodePropertyString const& value)
{
    m_Device_info_transformer_css_style = value;
    m_Device_info_transformer_css_styleIsSet = true;
}
bool ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::deviceInfoTransformerCssStyleIsSet() const
{
    return m_Device_info_transformer_css_styleIsSet;
}
void ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryProperties::unsetDevice_info_transformer_css_style()
{
    m_Device_info_transformer_css_styleIsSet = false;
}

}
}
}
}

