//
// OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceProperties: Codable {

    public var repositoryHome: ConfigNodePropertyString?
    public var tarmkMode: ConfigNodePropertyString?
    public var tarmkSize: ConfigNodePropertyInteger?
    public var segmentCacheSize: ConfigNodePropertyInteger?
    public var stringCacheSize: ConfigNodePropertyInteger?
    public var templateCacheSize: ConfigNodePropertyInteger?
    public var stringDeduplicationCacheSize: ConfigNodePropertyInteger?
    public var templateDeduplicationCacheSize: ConfigNodePropertyInteger?
    public var nodeDeduplicationCacheSize: ConfigNodePropertyInteger?
    public var pauseCompaction: ConfigNodePropertyBoolean?
    public var compactionRetryCount: ConfigNodePropertyInteger?
    public var compactionForceTimeout: ConfigNodePropertyInteger?
    public var compactionSizeDeltaEstimation: ConfigNodePropertyInteger?
    public var compactionDisableEstimation: ConfigNodePropertyBoolean?
    public var compactionRetainedGenerations: ConfigNodePropertyInteger?
    public var compactionMemoryThreshold: ConfigNodePropertyInteger?
    public var compactionProgressLog: ConfigNodePropertyInteger?
    public var standby: ConfigNodePropertyBoolean?
    public var customBlobStore: ConfigNodePropertyBoolean?
    public var customSegmentStore: ConfigNodePropertyBoolean?
    public var splitPersistence: ConfigNodePropertyBoolean?
    public var repositoryBackupDir: ConfigNodePropertyString?
    public var blobGcMaxAgeInSecs: ConfigNodePropertyInteger?
    public var blobTrackSnapshotIntervalInSecs: ConfigNodePropertyInteger?

    public init(repositoryHome: ConfigNodePropertyString?, tarmkMode: ConfigNodePropertyString?, tarmkSize: ConfigNodePropertyInteger?, segmentCacheSize: ConfigNodePropertyInteger?, stringCacheSize: ConfigNodePropertyInteger?, templateCacheSize: ConfigNodePropertyInteger?, stringDeduplicationCacheSize: ConfigNodePropertyInteger?, templateDeduplicationCacheSize: ConfigNodePropertyInteger?, nodeDeduplicationCacheSize: ConfigNodePropertyInteger?, pauseCompaction: ConfigNodePropertyBoolean?, compactionRetryCount: ConfigNodePropertyInteger?, compactionForceTimeout: ConfigNodePropertyInteger?, compactionSizeDeltaEstimation: ConfigNodePropertyInteger?, compactionDisableEstimation: ConfigNodePropertyBoolean?, compactionRetainedGenerations: ConfigNodePropertyInteger?, compactionMemoryThreshold: ConfigNodePropertyInteger?, compactionProgressLog: ConfigNodePropertyInteger?, standby: ConfigNodePropertyBoolean?, customBlobStore: ConfigNodePropertyBoolean?, customSegmentStore: ConfigNodePropertyBoolean?, splitPersistence: ConfigNodePropertyBoolean?, repositoryBackupDir: ConfigNodePropertyString?, blobGcMaxAgeInSecs: ConfigNodePropertyInteger?, blobTrackSnapshotIntervalInSecs: ConfigNodePropertyInteger?) {
        self.repositoryHome = repositoryHome
        self.tarmkMode = tarmkMode
        self.tarmkSize = tarmkSize
        self.segmentCacheSize = segmentCacheSize
        self.stringCacheSize = stringCacheSize
        self.templateCacheSize = templateCacheSize
        self.stringDeduplicationCacheSize = stringDeduplicationCacheSize
        self.templateDeduplicationCacheSize = templateDeduplicationCacheSize
        self.nodeDeduplicationCacheSize = nodeDeduplicationCacheSize
        self.pauseCompaction = pauseCompaction
        self.compactionRetryCount = compactionRetryCount
        self.compactionForceTimeout = compactionForceTimeout
        self.compactionSizeDeltaEstimation = compactionSizeDeltaEstimation
        self.compactionDisableEstimation = compactionDisableEstimation
        self.compactionRetainedGenerations = compactionRetainedGenerations
        self.compactionMemoryThreshold = compactionMemoryThreshold
        self.compactionProgressLog = compactionProgressLog
        self.standby = standby
        self.customBlobStore = customBlobStore
        self.customSegmentStore = customSegmentStore
        self.splitPersistence = splitPersistence
        self.repositoryBackupDir = repositoryBackupDir
        self.blobGcMaxAgeInSecs = blobGcMaxAgeInSecs
        self.blobTrackSnapshotIntervalInSecs = blobTrackSnapshotIntervalInSecs
    }

    public enum CodingKeys: String, CodingKey { 
        case repositoryHome = "repository.home"
        case tarmkMode = "tarmk.mode"
        case tarmkSize = "tarmk.size"
        case segmentCacheSize = "segmentCache.size"
        case stringCacheSize = "stringCache.size"
        case templateCacheSize = "templateCache.size"
        case stringDeduplicationCacheSize = "stringDeduplicationCache.size"
        case templateDeduplicationCacheSize = "templateDeduplicationCache.size"
        case nodeDeduplicationCacheSize = "nodeDeduplicationCache.size"
        case pauseCompaction
        case compactionRetryCount = "compaction.retryCount"
        case compactionForceTimeout = "compaction.force.timeout"
        case compactionSizeDeltaEstimation = "compaction.sizeDeltaEstimation"
        case compactionDisableEstimation = "compaction.disableEstimation"
        case compactionRetainedGenerations = "compaction.retainedGenerations"
        case compactionMemoryThreshold = "compaction.memoryThreshold"
        case compactionProgressLog = "compaction.progressLog"
        case standby
        case customBlobStore
        case customSegmentStore
        case splitPersistence
        case repositoryBackupDir = "repository.backup.dir"
        case blobGcMaxAgeInSecs
        case blobTrackSnapshotIntervalInSecs
    }


}

