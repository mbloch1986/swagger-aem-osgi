/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties() {
    init();
}

OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::~OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties() {
    this->cleanup();
}

void
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::init() {
    org_apache_jackrabbit_oak_authentication_app_name = new OAIConfigNodePropertyString();
    m_org_apache_jackrabbit_oak_authentication_app_name_isSet = false;
    org_apache_jackrabbit_oak_authentication_config_spi_name = new OAIConfigNodePropertyString();
    m_org_apache_jackrabbit_oak_authentication_config_spi_name_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::cleanup() {
    if(org_apache_jackrabbit_oak_authentication_app_name != nullptr) { 
        delete org_apache_jackrabbit_oak_authentication_app_name;
    }
    if(org_apache_jackrabbit_oak_authentication_config_spi_name != nullptr) { 
        delete org_apache_jackrabbit_oak_authentication_config_spi_name;
    }
}

OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties*
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&org_apache_jackrabbit_oak_authentication_app_name, pJson["org.apache.jackrabbit.oak.authentication.appName"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_jackrabbit_oak_authentication_config_spi_name, pJson["org.apache.jackrabbit.oak.authentication.configSpiName"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::asJsonObject() {
    QJsonObject obj;
    if((org_apache_jackrabbit_oak_authentication_app_name != nullptr) && (org_apache_jackrabbit_oak_authentication_app_name->isSet())){
        toJsonValue(QString("org.apache.jackrabbit.oak.authentication.appName"), org_apache_jackrabbit_oak_authentication_app_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_jackrabbit_oak_authentication_config_spi_name != nullptr) && (org_apache_jackrabbit_oak_authentication_config_spi_name->isSet())){
        toJsonValue(QString("org.apache.jackrabbit.oak.authentication.configSpiName"), org_apache_jackrabbit_oak_authentication_config_spi_name, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::getOrgApacheJackrabbitOakAuthenticationAppName() {
    return org_apache_jackrabbit_oak_authentication_app_name;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::setOrgApacheJackrabbitOakAuthenticationAppName(OAIConfigNodePropertyString* org_apache_jackrabbit_oak_authentication_app_name) {
    this->org_apache_jackrabbit_oak_authentication_app_name = org_apache_jackrabbit_oak_authentication_app_name;
    this->m_org_apache_jackrabbit_oak_authentication_app_name_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::getOrgApacheJackrabbitOakAuthenticationConfigSpiName() {
    return org_apache_jackrabbit_oak_authentication_config_spi_name;
}
void
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::setOrgApacheJackrabbitOakAuthenticationConfigSpiName(OAIConfigNodePropertyString* org_apache_jackrabbit_oak_authentication_config_spi_name) {
    this->org_apache_jackrabbit_oak_authentication_config_spi_name = org_apache_jackrabbit_oak_authentication_config_spi_name;
    this->m_org_apache_jackrabbit_oak_authentication_config_spi_name_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(org_apache_jackrabbit_oak_authentication_app_name != nullptr && org_apache_jackrabbit_oak_authentication_app_name->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_jackrabbit_oak_authentication_config_spi_name != nullptr && org_apache_jackrabbit_oak_authentication_config_spi_name->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

