# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_drop_down import ConfigNodePropertyDropDown  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: ConfigNodePropertyString=None, type: ConfigNodePropertyDropDown=None, import_mode: ConfigNodePropertyString=None, acl_handling: ConfigNodePropertyString=None, package_roots: ConfigNodePropertyString=None, package_filters: ConfigNodePropertyArray=None, property_filters: ConfigNodePropertyArray=None, temp_fs_folder: ConfigNodePropertyString=None, use_binary_references: ConfigNodePropertyBoolean=None, auto_save_threshold: ConfigNodePropertyInteger=None, cleanup_delay: ConfigNodePropertyInteger=None, file_threshold: ConfigNodePropertyInteger=None, mega_bytes: ConfigNodePropertyDropDown=None, use_off_heap_memory: ConfigNodePropertyBoolean=None, digest_algorithm: ConfigNodePropertyDropDown=None, monitoring_queue_size: ConfigNodePropertyInteger=None, paths_mapping: ConfigNodePropertyArray=None, strict_import: ConfigNodePropertyBoolean=None):  # noqa: E501
        """OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties - a model defined in OpenAPI

        :param name: The name of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type name: ConfigNodePropertyString
        :param type: The type of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type type: ConfigNodePropertyDropDown
        :param import_mode: The import_mode of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type import_mode: ConfigNodePropertyString
        :param acl_handling: The acl_handling of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type acl_handling: ConfigNodePropertyString
        :param package_roots: The package_roots of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type package_roots: ConfigNodePropertyString
        :param package_filters: The package_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type package_filters: ConfigNodePropertyArray
        :param property_filters: The property_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type property_filters: ConfigNodePropertyArray
        :param temp_fs_folder: The temp_fs_folder of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type temp_fs_folder: ConfigNodePropertyString
        :param use_binary_references: The use_binary_references of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type use_binary_references: ConfigNodePropertyBoolean
        :param auto_save_threshold: The auto_save_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type auto_save_threshold: ConfigNodePropertyInteger
        :param cleanup_delay: The cleanup_delay of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type cleanup_delay: ConfigNodePropertyInteger
        :param file_threshold: The file_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type file_threshold: ConfigNodePropertyInteger
        :param mega_bytes: The mega_bytes of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type mega_bytes: ConfigNodePropertyDropDown
        :param use_off_heap_memory: The use_off_heap_memory of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type use_off_heap_memory: ConfigNodePropertyBoolean
        :param digest_algorithm: The digest_algorithm of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type digest_algorithm: ConfigNodePropertyDropDown
        :param monitoring_queue_size: The monitoring_queue_size of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type monitoring_queue_size: ConfigNodePropertyInteger
        :param paths_mapping: The paths_mapping of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type paths_mapping: ConfigNodePropertyArray
        :param strict_import: The strict_import of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :type strict_import: ConfigNodePropertyBoolean
        """
        self.openapi_types = {
            'name': ConfigNodePropertyString,
            'type': ConfigNodePropertyDropDown,
            'import_mode': ConfigNodePropertyString,
            'acl_handling': ConfigNodePropertyString,
            'package_roots': ConfigNodePropertyString,
            'package_filters': ConfigNodePropertyArray,
            'property_filters': ConfigNodePropertyArray,
            'temp_fs_folder': ConfigNodePropertyString,
            'use_binary_references': ConfigNodePropertyBoolean,
            'auto_save_threshold': ConfigNodePropertyInteger,
            'cleanup_delay': ConfigNodePropertyInteger,
            'file_threshold': ConfigNodePropertyInteger,
            'mega_bytes': ConfigNodePropertyDropDown,
            'use_off_heap_memory': ConfigNodePropertyBoolean,
            'digest_algorithm': ConfigNodePropertyDropDown,
            'monitoring_queue_size': ConfigNodePropertyInteger,
            'paths_mapping': ConfigNodePropertyArray,
            'strict_import': ConfigNodePropertyBoolean
        }

        self.attribute_map = {
            'name': 'name',
            'type': 'type',
            'import_mode': 'importMode',
            'acl_handling': 'aclHandling',
            'package_roots': 'package.roots',
            'package_filters': 'package.filters',
            'property_filters': 'property.filters',
            'temp_fs_folder': 'tempFsFolder',
            'use_binary_references': 'useBinaryReferences',
            'auto_save_threshold': 'autoSaveThreshold',
            'cleanup_delay': 'cleanupDelay',
            'file_threshold': 'fileThreshold',
            'mega_bytes': 'MEGA_BYTES',
            'use_off_heap_memory': 'useOffHeapMemory',
            'digest_algorithm': 'digestAlgorithm',
            'monitoring_queue_size': 'monitoringQueueSize',
            'paths_mapping': 'pathsMapping',
            'strict_import': 'strictImport'
        }

        self._name = name
        self._type = type
        self._import_mode = import_mode
        self._acl_handling = acl_handling
        self._package_roots = package_roots
        self._package_filters = package_filters
        self._property_filters = property_filters
        self._temp_fs_folder = temp_fs_folder
        self._use_binary_references = use_binary_references
        self._auto_save_threshold = auto_save_threshold
        self._cleanup_delay = cleanup_delay
        self._file_threshold = file_threshold
        self._mega_bytes = mega_bytes
        self._use_off_heap_memory = use_off_heap_memory
        self._digest_algorithm = digest_algorithm
        self._monitoring_queue_size = monitoring_queue_size
        self._paths_mapping = paths_mapping
        self._strict_import = strict_import

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingDistributionSerializationImplVltVaultDistributionProperties of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.  # noqa: E501
        :rtype: OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> ConfigNodePropertyString:
        """Gets the name of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The name of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._name

    @name.setter
    def name(self, name: ConfigNodePropertyString):
        """Sets the name of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param name: The name of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type name: ConfigNodePropertyString
        """

        self._name = name

    @property
    def type(self) -> ConfigNodePropertyDropDown:
        """Gets the type of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The type of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyDropDown
        """
        return self._type

    @type.setter
    def type(self, type: ConfigNodePropertyDropDown):
        """Sets the type of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param type: The type of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type type: ConfigNodePropertyDropDown
        """

        self._type = type

    @property
    def import_mode(self) -> ConfigNodePropertyString:
        """Gets the import_mode of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The import_mode of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._import_mode

    @import_mode.setter
    def import_mode(self, import_mode: ConfigNodePropertyString):
        """Sets the import_mode of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param import_mode: The import_mode of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type import_mode: ConfigNodePropertyString
        """

        self._import_mode = import_mode

    @property
    def acl_handling(self) -> ConfigNodePropertyString:
        """Gets the acl_handling of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The acl_handling of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._acl_handling

    @acl_handling.setter
    def acl_handling(self, acl_handling: ConfigNodePropertyString):
        """Sets the acl_handling of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param acl_handling: The acl_handling of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type acl_handling: ConfigNodePropertyString
        """

        self._acl_handling = acl_handling

    @property
    def package_roots(self) -> ConfigNodePropertyString:
        """Gets the package_roots of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The package_roots of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._package_roots

    @package_roots.setter
    def package_roots(self, package_roots: ConfigNodePropertyString):
        """Sets the package_roots of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param package_roots: The package_roots of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type package_roots: ConfigNodePropertyString
        """

        self._package_roots = package_roots

    @property
    def package_filters(self) -> ConfigNodePropertyArray:
        """Gets the package_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The package_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._package_filters

    @package_filters.setter
    def package_filters(self, package_filters: ConfigNodePropertyArray):
        """Sets the package_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param package_filters: The package_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type package_filters: ConfigNodePropertyArray
        """

        self._package_filters = package_filters

    @property
    def property_filters(self) -> ConfigNodePropertyArray:
        """Gets the property_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The property_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._property_filters

    @property_filters.setter
    def property_filters(self, property_filters: ConfigNodePropertyArray):
        """Sets the property_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param property_filters: The property_filters of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type property_filters: ConfigNodePropertyArray
        """

        self._property_filters = property_filters

    @property
    def temp_fs_folder(self) -> ConfigNodePropertyString:
        """Gets the temp_fs_folder of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The temp_fs_folder of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._temp_fs_folder

    @temp_fs_folder.setter
    def temp_fs_folder(self, temp_fs_folder: ConfigNodePropertyString):
        """Sets the temp_fs_folder of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param temp_fs_folder: The temp_fs_folder of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type temp_fs_folder: ConfigNodePropertyString
        """

        self._temp_fs_folder = temp_fs_folder

    @property
    def use_binary_references(self) -> ConfigNodePropertyBoolean:
        """Gets the use_binary_references of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The use_binary_references of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._use_binary_references

    @use_binary_references.setter
    def use_binary_references(self, use_binary_references: ConfigNodePropertyBoolean):
        """Sets the use_binary_references of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param use_binary_references: The use_binary_references of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type use_binary_references: ConfigNodePropertyBoolean
        """

        self._use_binary_references = use_binary_references

    @property
    def auto_save_threshold(self) -> ConfigNodePropertyInteger:
        """Gets the auto_save_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The auto_save_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._auto_save_threshold

    @auto_save_threshold.setter
    def auto_save_threshold(self, auto_save_threshold: ConfigNodePropertyInteger):
        """Sets the auto_save_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param auto_save_threshold: The auto_save_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type auto_save_threshold: ConfigNodePropertyInteger
        """

        self._auto_save_threshold = auto_save_threshold

    @property
    def cleanup_delay(self) -> ConfigNodePropertyInteger:
        """Gets the cleanup_delay of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The cleanup_delay of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._cleanup_delay

    @cleanup_delay.setter
    def cleanup_delay(self, cleanup_delay: ConfigNodePropertyInteger):
        """Sets the cleanup_delay of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param cleanup_delay: The cleanup_delay of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type cleanup_delay: ConfigNodePropertyInteger
        """

        self._cleanup_delay = cleanup_delay

    @property
    def file_threshold(self) -> ConfigNodePropertyInteger:
        """Gets the file_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The file_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._file_threshold

    @file_threshold.setter
    def file_threshold(self, file_threshold: ConfigNodePropertyInteger):
        """Sets the file_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param file_threshold: The file_threshold of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type file_threshold: ConfigNodePropertyInteger
        """

        self._file_threshold = file_threshold

    @property
    def mega_bytes(self) -> ConfigNodePropertyDropDown:
        """Gets the mega_bytes of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The mega_bytes of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyDropDown
        """
        return self._mega_bytes

    @mega_bytes.setter
    def mega_bytes(self, mega_bytes: ConfigNodePropertyDropDown):
        """Sets the mega_bytes of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param mega_bytes: The mega_bytes of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type mega_bytes: ConfigNodePropertyDropDown
        """

        self._mega_bytes = mega_bytes

    @property
    def use_off_heap_memory(self) -> ConfigNodePropertyBoolean:
        """Gets the use_off_heap_memory of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The use_off_heap_memory of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._use_off_heap_memory

    @use_off_heap_memory.setter
    def use_off_heap_memory(self, use_off_heap_memory: ConfigNodePropertyBoolean):
        """Sets the use_off_heap_memory of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param use_off_heap_memory: The use_off_heap_memory of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type use_off_heap_memory: ConfigNodePropertyBoolean
        """

        self._use_off_heap_memory = use_off_heap_memory

    @property
    def digest_algorithm(self) -> ConfigNodePropertyDropDown:
        """Gets the digest_algorithm of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The digest_algorithm of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyDropDown
        """
        return self._digest_algorithm

    @digest_algorithm.setter
    def digest_algorithm(self, digest_algorithm: ConfigNodePropertyDropDown):
        """Sets the digest_algorithm of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param digest_algorithm: The digest_algorithm of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type digest_algorithm: ConfigNodePropertyDropDown
        """

        self._digest_algorithm = digest_algorithm

    @property
    def monitoring_queue_size(self) -> ConfigNodePropertyInteger:
        """Gets the monitoring_queue_size of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The monitoring_queue_size of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._monitoring_queue_size

    @monitoring_queue_size.setter
    def monitoring_queue_size(self, monitoring_queue_size: ConfigNodePropertyInteger):
        """Sets the monitoring_queue_size of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param monitoring_queue_size: The monitoring_queue_size of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type monitoring_queue_size: ConfigNodePropertyInteger
        """

        self._monitoring_queue_size = monitoring_queue_size

    @property
    def paths_mapping(self) -> ConfigNodePropertyArray:
        """Gets the paths_mapping of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The paths_mapping of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._paths_mapping

    @paths_mapping.setter
    def paths_mapping(self, paths_mapping: ConfigNodePropertyArray):
        """Sets the paths_mapping of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param paths_mapping: The paths_mapping of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type paths_mapping: ConfigNodePropertyArray
        """

        self._paths_mapping = paths_mapping

    @property
    def strict_import(self) -> ConfigNodePropertyBoolean:
        """Gets the strict_import of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :return: The strict_import of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._strict_import

    @strict_import.setter
    def strict_import(self, strict_import: ConfigNodePropertyBoolean):
        """Sets the strict_import of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.


        :param strict_import: The strict_import of this OrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.
        :type strict_import: ConfigNodePropertyBoolean
        """

        self._strict_import = strict_import
