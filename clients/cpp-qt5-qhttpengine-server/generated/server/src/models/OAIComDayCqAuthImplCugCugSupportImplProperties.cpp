/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqAuthImplCugCugSupportImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqAuthImplCugCugSupportImplProperties::OAIComDayCqAuthImplCugCugSupportImplProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqAuthImplCugCugSupportImplProperties::OAIComDayCqAuthImplCugCugSupportImplProperties() {
    this->init();
}

OAIComDayCqAuthImplCugCugSupportImplProperties::~OAIComDayCqAuthImplCugCugSupportImplProperties() {
    
}

void
OAIComDayCqAuthImplCugCugSupportImplProperties::init() {
    m_cug_exempted_principals_isSet = false;
    m_cug_enabled_isSet = false;
    m_cug_principals_regex_isSet = false;
    m_cug_principals_replacement_isSet = false;
}

void
OAIComDayCqAuthImplCugCugSupportImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqAuthImplCugCugSupportImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(cug_exempted_principals, json[QString("cug.exempted.principals")]);
    
    ::OpenAPI::fromJsonValue(cug_enabled, json[QString("cug.enabled")]);
    
    ::OpenAPI::fromJsonValue(cug_principals_regex, json[QString("cug.principals.regex")]);
    
    ::OpenAPI::fromJsonValue(cug_principals_replacement, json[QString("cug.principals.replacement")]);
    
}

QString
OAIComDayCqAuthImplCugCugSupportImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqAuthImplCugCugSupportImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(cug_exempted_principals.isSet()){
        obj.insert(QString("cug.exempted.principals"), ::OpenAPI::toJsonValue(cug_exempted_principals));
    }
	if(cug_enabled.isSet()){
        obj.insert(QString("cug.enabled"), ::OpenAPI::toJsonValue(cug_enabled));
    }
	if(cug_principals_regex.isSet()){
        obj.insert(QString("cug.principals.regex"), ::OpenAPI::toJsonValue(cug_principals_regex));
    }
	if(cug_principals_replacement.isSet()){
        obj.insert(QString("cug.principals.replacement"), ::OpenAPI::toJsonValue(cug_principals_replacement));
    }
    return obj;
}

OAIConfigNodePropertyArray
OAIComDayCqAuthImplCugCugSupportImplProperties::getCugExemptedPrincipals() const {
    return cug_exempted_principals;
}
void
OAIComDayCqAuthImplCugCugSupportImplProperties::setCugExemptedPrincipals(const OAIConfigNodePropertyArray &cug_exempted_principals) {
    this->cug_exempted_principals = cug_exempted_principals;
    this->m_cug_exempted_principals_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComDayCqAuthImplCugCugSupportImplProperties::getCugEnabled() const {
    return cug_enabled;
}
void
OAIComDayCqAuthImplCugCugSupportImplProperties::setCugEnabled(const OAIConfigNodePropertyBoolean &cug_enabled) {
    this->cug_enabled = cug_enabled;
    this->m_cug_enabled_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqAuthImplCugCugSupportImplProperties::getCugPrincipalsRegex() const {
    return cug_principals_regex;
}
void
OAIComDayCqAuthImplCugCugSupportImplProperties::setCugPrincipalsRegex(const OAIConfigNodePropertyString &cug_principals_regex) {
    this->cug_principals_regex = cug_principals_regex;
    this->m_cug_principals_regex_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqAuthImplCugCugSupportImplProperties::getCugPrincipalsReplacement() const {
    return cug_principals_replacement;
}
void
OAIComDayCqAuthImplCugCugSupportImplProperties::setCugPrincipalsReplacement(const OAIConfigNodePropertyString &cug_principals_replacement) {
    this->cug_principals_replacement = cug_principals_replacement;
    this->m_cug_principals_replacement_isSet = true;
}


bool
OAIComDayCqAuthImplCugCugSupportImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(cug_exempted_principals.isSet()){ isObjectUpdated = true; break;}
    
        if(cug_enabled.isSet()){ isObjectUpdated = true; break;}
    
        if(cug_principals_regex.isSet()){ isObjectUpdated = true; break;}
    
        if(cug_principals_replacement.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

