/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCqReplicationImplReplicatorImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCqReplicationImplReplicatorImplProperties::ComDayCqReplicationImplReplicatorImplProperties()
{
    m_Distribute_eventsIsSet = false;
    
}

ComDayCqReplicationImplReplicatorImplProperties::~ComDayCqReplicationImplReplicatorImplProperties()
{
}

void ComDayCqReplicationImplReplicatorImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCqReplicationImplReplicatorImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Distribute_eventsIsSet)
    {
        val["distribute_events"] = ModelBase::toJson(m_Distribute_events);
    }
    

    return val;
}

void ComDayCqReplicationImplReplicatorImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("distribute_events") != val.end())
    {
        if(!val["distribute_events"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["distribute_events"]);
            setDistributeEvents( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComDayCqReplicationImplReplicatorImplProperties::getDistributeEvents() const
{
    return m_Distribute_events;
}
void ComDayCqReplicationImplReplicatorImplProperties::setDistributeEvents(ConfigNodePropertyBoolean const& value)
{
    m_Distribute_events = value;
    m_Distribute_eventsIsSet = true;
}
bool ComDayCqReplicationImplReplicatorImplProperties::distributeEventsIsSet() const
{
    return m_Distribute_eventsIsSet;
}
void ComDayCqReplicationImplReplicatorImplProperties::unsetDistribute_events()
{
    m_Distribute_eventsIsSet = false;
}

}
}
}
}

