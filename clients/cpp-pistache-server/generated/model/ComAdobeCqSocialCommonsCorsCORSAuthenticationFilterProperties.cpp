/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties::ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties()
{
    m_Cors_enablingIsSet = false;
    
}

ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties::~ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties()
{
}

void ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Cors_enablingIsSet)
    {
        val["cors.enabling"] = ModelBase::toJson(m_Cors_enabling);
    }
    

    return val;
}

void ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties::fromJson(nlohmann::json& val)
{
    if(val.find("cors.enabling") != val.end())
    {
        if(!val["cors.enabling"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["cors.enabling"]);
            setCorsEnabling( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties::getCorsEnabling() const
{
    return m_Cors_enabling;
}
void ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties::setCorsEnabling(ConfigNodePropertyBoolean const& value)
{
    m_Cors_enabling = value;
    m_Cors_enablingIsSet = true;
}
bool ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties::corsEnablingIsSet() const
{
    return m_Cors_enablingIsSet;
}
void ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterProperties::unsetCors_enabling()
{
    m_Cors_enablingIsSet = false;
}

}
}
}
}

