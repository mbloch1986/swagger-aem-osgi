/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties() {
    init();
}

OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::~OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties() {
    this->cleanup();
}

void
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::init() {
    cq_dam_webdav_version_linking_enable = new OAIConfigNodePropertyBoolean();
    m_cq_dam_webdav_version_linking_enable_isSet = false;
    cq_dam_webdav_version_linking_scheduler_period = new OAIConfigNodePropertyInteger();
    m_cq_dam_webdav_version_linking_scheduler_period_isSet = false;
    cq_dam_webdav_version_linking_staging_timeout = new OAIConfigNodePropertyInteger();
    m_cq_dam_webdav_version_linking_staging_timeout_isSet = false;
}

void
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::cleanup() {
    if(cq_dam_webdav_version_linking_enable != nullptr) { 
        delete cq_dam_webdav_version_linking_enable;
    }
    if(cq_dam_webdav_version_linking_scheduler_period != nullptr) { 
        delete cq_dam_webdav_version_linking_scheduler_period;
    }
    if(cq_dam_webdav_version_linking_staging_timeout != nullptr) { 
        delete cq_dam_webdav_version_linking_staging_timeout;
    }
}

OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties*
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_dam_webdav_version_linking_enable, pJson["cq.dam.webdav.version.linking.enable"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&cq_dam_webdav_version_linking_scheduler_period, pJson["cq.dam.webdav.version.linking.scheduler.period"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&cq_dam_webdav_version_linking_staging_timeout, pJson["cq.dam.webdav.version.linking.staging.timeout"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_dam_webdav_version_linking_enable != nullptr) && (cq_dam_webdav_version_linking_enable->isSet())){
        toJsonValue(QString("cq.dam.webdav.version.linking.enable"), cq_dam_webdav_version_linking_enable, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((cq_dam_webdav_version_linking_scheduler_period != nullptr) && (cq_dam_webdav_version_linking_scheduler_period->isSet())){
        toJsonValue(QString("cq.dam.webdav.version.linking.scheduler.period"), cq_dam_webdav_version_linking_scheduler_period, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((cq_dam_webdav_version_linking_staging_timeout != nullptr) && (cq_dam_webdav_version_linking_staging_timeout->isSet())){
        toJsonValue(QString("cq.dam.webdav.version.linking.staging.timeout"), cq_dam_webdav_version_linking_staging_timeout, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::getCqDamWebdavVersionLinkingEnable() {
    return cq_dam_webdav_version_linking_enable;
}
void
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::setCqDamWebdavVersionLinkingEnable(OAIConfigNodePropertyBoolean* cq_dam_webdav_version_linking_enable) {
    this->cq_dam_webdav_version_linking_enable = cq_dam_webdav_version_linking_enable;
    this->m_cq_dam_webdav_version_linking_enable_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::getCqDamWebdavVersionLinkingSchedulerPeriod() {
    return cq_dam_webdav_version_linking_scheduler_period;
}
void
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::setCqDamWebdavVersionLinkingSchedulerPeriod(OAIConfigNodePropertyInteger* cq_dam_webdav_version_linking_scheduler_period) {
    this->cq_dam_webdav_version_linking_scheduler_period = cq_dam_webdav_version_linking_scheduler_period;
    this->m_cq_dam_webdav_version_linking_scheduler_period_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::getCqDamWebdavVersionLinkingStagingTimeout() {
    return cq_dam_webdav_version_linking_staging_timeout;
}
void
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::setCqDamWebdavVersionLinkingStagingTimeout(OAIConfigNodePropertyInteger* cq_dam_webdav_version_linking_staging_timeout) {
    this->cq_dam_webdav_version_linking_staging_timeout = cq_dam_webdav_version_linking_staging_timeout;
    this->m_cq_dam_webdav_version_linking_staging_timeout_isSet = true;
}


bool
OAIComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_dam_webdav_version_linking_enable != nullptr && cq_dam_webdav_version_linking_enable->isSet()){ isObjectUpdated = true; break;}
        if(cq_dam_webdav_version_linking_scheduler_period != nullptr && cq_dam_webdav_version_linking_scheduler_period->isSet()){ isObjectUpdated = true; break;}
        if(cq_dam_webdav_version_linking_staging_timeout != nullptr && cq_dam_webdav_version_linking_staging_timeout->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

