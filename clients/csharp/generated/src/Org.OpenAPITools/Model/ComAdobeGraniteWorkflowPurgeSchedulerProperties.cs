/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComAdobeGraniteWorkflowPurgeSchedulerProperties
    /// </summary>
    [DataContract]
    public partial class ComAdobeGraniteWorkflowPurgeSchedulerProperties :  IEquatable<ComAdobeGraniteWorkflowPurgeSchedulerProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAdobeGraniteWorkflowPurgeSchedulerProperties" /> class.
        /// </summary>
        /// <param name="scheduledpurgeName">scheduledpurgeName.</param>
        /// <param name="scheduledpurgeWorkflowStatus">scheduledpurgeWorkflowStatus.</param>
        /// <param name="scheduledpurgeModelIds">scheduledpurgeModelIds.</param>
        /// <param name="scheduledpurgeDaysold">scheduledpurgeDaysold.</param>
        public ComAdobeGraniteWorkflowPurgeSchedulerProperties(ConfigNodePropertyString scheduledpurgeName = default(ConfigNodePropertyString), ConfigNodePropertyDropDown scheduledpurgeWorkflowStatus = default(ConfigNodePropertyDropDown), ConfigNodePropertyArray scheduledpurgeModelIds = default(ConfigNodePropertyArray), ConfigNodePropertyInteger scheduledpurgeDaysold = default(ConfigNodePropertyInteger))
        {
            this.ScheduledpurgeName = scheduledpurgeName;
            this.ScheduledpurgeWorkflowStatus = scheduledpurgeWorkflowStatus;
            this.ScheduledpurgeModelIds = scheduledpurgeModelIds;
            this.ScheduledpurgeDaysold = scheduledpurgeDaysold;
        }
        
        /// <summary>
        /// Gets or Sets ScheduledpurgeName
        /// </summary>
        [DataMember(Name="scheduledpurge.name", EmitDefaultValue=false)]
        public ConfigNodePropertyString ScheduledpurgeName { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledpurgeWorkflowStatus
        /// </summary>
        [DataMember(Name="scheduledpurge.workflowStatus", EmitDefaultValue=false)]
        public ConfigNodePropertyDropDown ScheduledpurgeWorkflowStatus { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledpurgeModelIds
        /// </summary>
        [DataMember(Name="scheduledpurge.modelIds", EmitDefaultValue=false)]
        public ConfigNodePropertyArray ScheduledpurgeModelIds { get; set; }

        /// <summary>
        /// Gets or Sets ScheduledpurgeDaysold
        /// </summary>
        [DataMember(Name="scheduledpurge.daysold", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger ScheduledpurgeDaysold { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeGraniteWorkflowPurgeSchedulerProperties {\n");
            sb.Append("  ScheduledpurgeName: ").Append(ScheduledpurgeName).Append("\n");
            sb.Append("  ScheduledpurgeWorkflowStatus: ").Append(ScheduledpurgeWorkflowStatus).Append("\n");
            sb.Append("  ScheduledpurgeModelIds: ").Append(ScheduledpurgeModelIds).Append("\n");
            sb.Append("  ScheduledpurgeDaysold: ").Append(ScheduledpurgeDaysold).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComAdobeGraniteWorkflowPurgeSchedulerProperties);
        }

        /// <summary>
        /// Returns true if ComAdobeGraniteWorkflowPurgeSchedulerProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComAdobeGraniteWorkflowPurgeSchedulerProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeGraniteWorkflowPurgeSchedulerProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ScheduledpurgeName == input.ScheduledpurgeName ||
                    (this.ScheduledpurgeName != null &&
                    this.ScheduledpurgeName.Equals(input.ScheduledpurgeName))
                ) && 
                (
                    this.ScheduledpurgeWorkflowStatus == input.ScheduledpurgeWorkflowStatus ||
                    (this.ScheduledpurgeWorkflowStatus != null &&
                    this.ScheduledpurgeWorkflowStatus.Equals(input.ScheduledpurgeWorkflowStatus))
                ) && 
                (
                    this.ScheduledpurgeModelIds == input.ScheduledpurgeModelIds ||
                    (this.ScheduledpurgeModelIds != null &&
                    this.ScheduledpurgeModelIds.Equals(input.ScheduledpurgeModelIds))
                ) && 
                (
                    this.ScheduledpurgeDaysold == input.ScheduledpurgeDaysold ||
                    (this.ScheduledpurgeDaysold != null &&
                    this.ScheduledpurgeDaysold.Equals(input.ScheduledpurgeDaysold))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ScheduledpurgeName != null)
                    hashCode = hashCode * 59 + this.ScheduledpurgeName.GetHashCode();
                if (this.ScheduledpurgeWorkflowStatus != null)
                    hashCode = hashCode * 59 + this.ScheduledpurgeWorkflowStatus.GetHashCode();
                if (this.ScheduledpurgeModelIds != null)
                    hashCode = hashCode * 59 + this.ScheduledpurgeModelIds.GetHashCode();
                if (this.ScheduledpurgeDaysold != null)
                    hashCode = hashCode * 59 + this.ScheduledpurgeDaysold.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
