/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties
    : public ModelBase
{
public:
    ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties();
    virtual ~ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getOauthConfigmanagerImsConfigid() const;
    bool oauthConfigmanagerImsConfigidIsSet() const;
    void unsetOauth_configmanager_ims_configid();
    void setOauthConfigmanagerImsConfigid(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getImsOwningEntity() const;
    bool imsOwningEntityIsSet() const;
    void unsetIms_owningEntity();
    void setImsOwningEntity(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getAemInstanceId() const;
    bool aemInstanceIdIsSet() const;
    void unsetAem_instanceId();
    void setAemInstanceId(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getImsServiceCode() const;
    bool imsServiceCodeIsSet() const;
    void unsetIms_serviceCode();
    void setImsServiceCode(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Oauth_configmanager_ims_configid;
    bool m_Oauth_configmanager_ims_configidIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Ims_owningEntity;
    bool m_Ims_owningEntityIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Aem_instanceId;
    bool m_Aem_instanceIdIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Ims_serviceCode;
    bool m_Ims_serviceCodeIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ComAdobeGraniteAuthImsImplImsConfigProviderImplProperties_H_ */
