package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties._

case class ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties (
  numberOfRetriesAllowed: Option[ConfigNodePropertyInteger],
hcTags: Option[ConfigNodePropertyArray])

object ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckPropertiesCodecJson: CodecJson[ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties] = CodecJson.derive[ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties]
  implicit val ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckPropertiesDecoder: EntityDecoder[ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties] = jsonOf[ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties]
  implicit val ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckPropertiesEncoder: EntityEncoder[ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties] = jsonEncoderOf[ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckProperties]
}
