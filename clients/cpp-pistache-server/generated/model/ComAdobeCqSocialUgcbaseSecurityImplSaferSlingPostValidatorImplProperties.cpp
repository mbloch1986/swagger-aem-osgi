/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties()
{
    m_Parameter_whitelistIsSet = false;
    m_Parameter_whitelist_prefixesIsSet = false;
    m_Binary_parameter_whitelistIsSet = false;
    m_Modifier_whitelistIsSet = false;
    m_Operation_whitelistIsSet = false;
    m_Operation_whitelist_prefixesIsSet = false;
    m_Typehint_whitelistIsSet = false;
    m_Resourcetype_whitelistIsSet = false;
    
}

ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::~ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties()
{
}

void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Parameter_whitelistIsSet)
    {
        val["parameter.whitelist"] = ModelBase::toJson(m_Parameter_whitelist);
    }
    if(m_Parameter_whitelist_prefixesIsSet)
    {
        val["parameter.whitelist.prefixes"] = ModelBase::toJson(m_Parameter_whitelist_prefixes);
    }
    if(m_Binary_parameter_whitelistIsSet)
    {
        val["binary.parameter.whitelist"] = ModelBase::toJson(m_Binary_parameter_whitelist);
    }
    if(m_Modifier_whitelistIsSet)
    {
        val["modifier.whitelist"] = ModelBase::toJson(m_Modifier_whitelist);
    }
    if(m_Operation_whitelistIsSet)
    {
        val["operation.whitelist"] = ModelBase::toJson(m_Operation_whitelist);
    }
    if(m_Operation_whitelist_prefixesIsSet)
    {
        val["operation.whitelist.prefixes"] = ModelBase::toJson(m_Operation_whitelist_prefixes);
    }
    if(m_Typehint_whitelistIsSet)
    {
        val["typehint.whitelist"] = ModelBase::toJson(m_Typehint_whitelist);
    }
    if(m_Resourcetype_whitelistIsSet)
    {
        val["resourcetype.whitelist"] = ModelBase::toJson(m_Resourcetype_whitelist);
    }
    

    return val;
}

void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("parameter.whitelist") != val.end())
    {
        if(!val["parameter.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["parameter.whitelist"]);
            setParameterWhitelist( newItem );
        }
        
    }
    if(val.find("parameter.whitelist.prefixes") != val.end())
    {
        if(!val["parameter.whitelist.prefixes"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["parameter.whitelist.prefixes"]);
            setParameterWhitelistPrefixes( newItem );
        }
        
    }
    if(val.find("binary.parameter.whitelist") != val.end())
    {
        if(!val["binary.parameter.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["binary.parameter.whitelist"]);
            setBinaryParameterWhitelist( newItem );
        }
        
    }
    if(val.find("modifier.whitelist") != val.end())
    {
        if(!val["modifier.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["modifier.whitelist"]);
            setModifierWhitelist( newItem );
        }
        
    }
    if(val.find("operation.whitelist") != val.end())
    {
        if(!val["operation.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["operation.whitelist"]);
            setOperationWhitelist( newItem );
        }
        
    }
    if(val.find("operation.whitelist.prefixes") != val.end())
    {
        if(!val["operation.whitelist.prefixes"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["operation.whitelist.prefixes"]);
            setOperationWhitelistPrefixes( newItem );
        }
        
    }
    if(val.find("typehint.whitelist") != val.end())
    {
        if(!val["typehint.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["typehint.whitelist"]);
            setTypehintWhitelist( newItem );
        }
        
    }
    if(val.find("resourcetype.whitelist") != val.end())
    {
        if(!val["resourcetype.whitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["resourcetype.whitelist"]);
            setResourcetypeWhitelist( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getParameterWhitelist() const
{
    return m_Parameter_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setParameterWhitelist(ConfigNodePropertyArray const& value)
{
    m_Parameter_whitelist = value;
    m_Parameter_whitelistIsSet = true;
}
bool ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::parameterWhitelistIsSet() const
{
    return m_Parameter_whitelistIsSet;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::unsetParameter_whitelist()
{
    m_Parameter_whitelistIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getParameterWhitelistPrefixes() const
{
    return m_Parameter_whitelist_prefixes;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setParameterWhitelistPrefixes(ConfigNodePropertyArray const& value)
{
    m_Parameter_whitelist_prefixes = value;
    m_Parameter_whitelist_prefixesIsSet = true;
}
bool ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::parameterWhitelistPrefixesIsSet() const
{
    return m_Parameter_whitelist_prefixesIsSet;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::unsetParameter_whitelist_prefixes()
{
    m_Parameter_whitelist_prefixesIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getBinaryParameterWhitelist() const
{
    return m_Binary_parameter_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setBinaryParameterWhitelist(ConfigNodePropertyArray const& value)
{
    m_Binary_parameter_whitelist = value;
    m_Binary_parameter_whitelistIsSet = true;
}
bool ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::binaryParameterWhitelistIsSet() const
{
    return m_Binary_parameter_whitelistIsSet;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::unsetBinary_parameter_whitelist()
{
    m_Binary_parameter_whitelistIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getModifierWhitelist() const
{
    return m_Modifier_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setModifierWhitelist(ConfigNodePropertyArray const& value)
{
    m_Modifier_whitelist = value;
    m_Modifier_whitelistIsSet = true;
}
bool ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::modifierWhitelistIsSet() const
{
    return m_Modifier_whitelistIsSet;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::unsetModifier_whitelist()
{
    m_Modifier_whitelistIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getOperationWhitelist() const
{
    return m_Operation_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setOperationWhitelist(ConfigNodePropertyArray const& value)
{
    m_Operation_whitelist = value;
    m_Operation_whitelistIsSet = true;
}
bool ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::operationWhitelistIsSet() const
{
    return m_Operation_whitelistIsSet;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::unsetOperation_whitelist()
{
    m_Operation_whitelistIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getOperationWhitelistPrefixes() const
{
    return m_Operation_whitelist_prefixes;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setOperationWhitelistPrefixes(ConfigNodePropertyArray const& value)
{
    m_Operation_whitelist_prefixes = value;
    m_Operation_whitelist_prefixesIsSet = true;
}
bool ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::operationWhitelistPrefixesIsSet() const
{
    return m_Operation_whitelist_prefixesIsSet;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::unsetOperation_whitelist_prefixes()
{
    m_Operation_whitelist_prefixesIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getTypehintWhitelist() const
{
    return m_Typehint_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setTypehintWhitelist(ConfigNodePropertyArray const& value)
{
    m_Typehint_whitelist = value;
    m_Typehint_whitelistIsSet = true;
}
bool ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::typehintWhitelistIsSet() const
{
    return m_Typehint_whitelistIsSet;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::unsetTypehint_whitelist()
{
    m_Typehint_whitelistIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::getResourcetypeWhitelist() const
{
    return m_Resourcetype_whitelist;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::setResourcetypeWhitelist(ConfigNodePropertyArray const& value)
{
    m_Resourcetype_whitelist = value;
    m_Resourcetype_whitelistIsSet = true;
}
bool ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::resourcetypeWhitelistIsSet() const
{
    return m_Resourcetype_whitelistIsSet;
}
void ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplProperties::unsetResourcetype_whitelist()
{
    m_Resourcetype_whitelistIsSet = false;
}

}
}
}
}

