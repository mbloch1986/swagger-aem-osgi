package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProProperties._

case class ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProProperties (
  deleteZipFile: Option[ConfigNodePropertyBoolean])

object ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProProperties {
  import DateTimeCodecs._

  implicit val ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProPropertiesCodecJson: CodecJson[ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProProperties] = CodecJson.derive[ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProProperties]
  implicit val ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProPropertiesDecoder: EntityDecoder[ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProProperties] = jsonOf[ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProProperties]
  implicit val ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProPropertiesEncoder: EntityEncoder[ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProProperties] = jsonEncoderOf[ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProProperties]
}
