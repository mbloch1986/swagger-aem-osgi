/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheSlingCommonsMetricsInternalLogReporterProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingCommonsMetricsInternalLogReporterProperties_H_
#define OrgApacheSlingCommonsMetricsInternalLogReporterProperties_H_



#include "ConfigNodePropertyDropDown.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingCommonsMetricsInternalLogReporterProperties
{
public:
    OrgApacheSlingCommonsMetricsInternalLogReporterProperties();
    virtual ~OrgApacheSlingCommonsMetricsInternalLogReporterProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// OrgApacheSlingCommonsMetricsInternalLogReporterProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getPeriod() const;
    void setPeriod(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown> getTimeUnit() const;
    void setTimeUnit(std::shared_ptr<ConfigNodePropertyDropDown> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyDropDown> getLevel() const;
    void setLevel(std::shared_ptr<ConfigNodePropertyDropDown> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getLoggerName() const;
    void setLoggerName(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getPrefix() const;
    void setPrefix(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getPattern() const;
    void setPattern(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getRegistryName() const;
    void setRegistryName(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyInteger> m_Period;
    std::shared_ptr<ConfigNodePropertyDropDown> m_TimeUnit;
    std::shared_ptr<ConfigNodePropertyDropDown> m_Level;
    std::shared_ptr<ConfigNodePropertyString> m_LoggerName;
    std::shared_ptr<ConfigNodePropertyString> m_Prefix;
    std::shared_ptr<ConfigNodePropertyString> m_Pattern;
    std::shared_ptr<ConfigNodePropertyString> m_RegistryName;
};

}
}
}
}

#endif /* OrgApacheSlingCommonsMetricsInternalLogReporterProperties_H_ */
