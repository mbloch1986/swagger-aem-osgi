note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_SLING_HC_CORE_IMPL_SERVLET_HEALTH_CHECK_EXECUTOR_SERVLET_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    servlet_path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    disabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    cors_access_control_allow_origin: detachable CONFIG_NODE_PROPERTY_STRING 
      

feature -- Change Element  
 
    set_servlet_path (a_name: like servlet_path)
        -- Set 'servlet_path' with 'a_name'.
      do
        servlet_path := a_name
      ensure
        servlet_path_set: servlet_path = a_name		
      end

    set_disabled (a_name: like disabled)
        -- Set 'disabled' with 'a_name'.
      do
        disabled := a_name
      ensure
        disabled_set: disabled = a_name		
      end

    set_cors_access_control_allow_origin (a_name: like cors_access_control_allow_origin)
        -- Set 'cors_access_control_allow_origin' with 'a_name'.
      do
        cors_access_control_allow_origin := a_name
      ensure
        cors_access_control_allow_origin_set: cors_access_control_allow_origin = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_SLING_HC_CORE_IMPL_SERVLET_HEALTH_CHECK_EXECUTOR_SERVLET_PROPERTIES%N")
        if attached servlet_path as l_servlet_path then
          Result.append ("%Nservlet_path:")
          Result.append (l_servlet_path.out)
          Result.append ("%N")    
        end  
        if attached disabled as l_disabled then
          Result.append ("%Ndisabled:")
          Result.append (l_disabled.out)
          Result.append ("%N")    
        end  
        if attached cors_access_control_allow_origin as l_cors_access_control_allow_origin then
          Result.append ("%Ncors_access_control_allow_origin:")
          Result.append (l_cors_access_control_allow_origin.out)
          Result.append ("%N")    
        end  
      end
end


