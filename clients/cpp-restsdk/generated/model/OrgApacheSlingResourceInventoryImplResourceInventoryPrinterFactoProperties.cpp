/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties()
{
    m_Felix_inventory_printer_nameIsSet = false;
    m_Felix_inventory_printer_titleIsSet = false;
    m_PathIsSet = false;
}

OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::~OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties()
{
}

void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::validate()
{
    // TODO: implement validation
}

web::json::value OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Felix_inventory_printer_nameIsSet)
    {
        val[utility::conversions::to_string_t("felix.inventory.printer.name")] = ModelBase::toJson(m_Felix_inventory_printer_name);
    }
    if(m_Felix_inventory_printer_titleIsSet)
    {
        val[utility::conversions::to_string_t("felix.inventory.printer.title")] = ModelBase::toJson(m_Felix_inventory_printer_title);
    }
    if(m_PathIsSet)
    {
        val[utility::conversions::to_string_t("path")] = ModelBase::toJson(m_Path);
    }

    return val;
}

void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("felix.inventory.printer.name")))
    {
        if(!val[utility::conversions::to_string_t("felix.inventory.printer.name")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromJson(val[utility::conversions::to_string_t("felix.inventory.printer.name")]);
            setFelixInventoryPrinterName( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("felix.inventory.printer.title")))
    {
        if(!val[utility::conversions::to_string_t("felix.inventory.printer.title")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromJson(val[utility::conversions::to_string_t("felix.inventory.printer.title")]);
            setFelixInventoryPrinterTitle( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("path")))
    {
        if(!val[utility::conversions::to_string_t("path")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromJson(val[utility::conversions::to_string_t("path")]);
            setPath( newItem );
        }
    }
}

void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Felix_inventory_printer_nameIsSet)
    {
        if (m_Felix_inventory_printer_name.get())
        {
            m_Felix_inventory_printer_name->toMultipart(multipart, utility::conversions::to_string_t("felix.inventory.printer.name."));
        }
    }
    if(m_Felix_inventory_printer_titleIsSet)
    {
        if (m_Felix_inventory_printer_title.get())
        {
            m_Felix_inventory_printer_title->toMultipart(multipart, utility::conversions::to_string_t("felix.inventory.printer.title."));
        }
    }
    if(m_PathIsSet)
    {
        if (m_Path.get())
        {
            m_Path->toMultipart(multipart, utility::conversions::to_string_t("path."));
        }
    }
}

void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("felix.inventory.printer.name")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("felix.inventory.printer.name")))
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("felix.inventory.printer.name."));
            setFelixInventoryPrinterName( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("felix.inventory.printer.title")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("felix.inventory.printer.title")))
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("felix.inventory.printer.title."));
            setFelixInventoryPrinterTitle( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("path")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("path")))
        {
            std::shared_ptr<ConfigNodePropertyString> newItem(new ConfigNodePropertyString());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("path."));
            setPath( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::getFelixInventoryPrinterName() const
{
    return m_Felix_inventory_printer_name;
}


void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::setFelixInventoryPrinterName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Felix_inventory_printer_name = value;
    m_Felix_inventory_printer_nameIsSet = true;
}
bool OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::felixInventoryPrinterNameIsSet() const
{
    return m_Felix_inventory_printer_nameIsSet;
}

void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::unsetFelix_inventory_printer_name()
{
    m_Felix_inventory_printer_nameIsSet = false;
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::getFelixInventoryPrinterTitle() const
{
    return m_Felix_inventory_printer_title;
}


void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::setFelixInventoryPrinterTitle(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Felix_inventory_printer_title = value;
    m_Felix_inventory_printer_titleIsSet = true;
}
bool OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::felixInventoryPrinterTitleIsSet() const
{
    return m_Felix_inventory_printer_titleIsSet;
}

void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::unsetFelix_inventory_printer_title()
{
    m_Felix_inventory_printer_titleIsSet = false;
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::getPath() const
{
    return m_Path;
}


void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::setPath(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Path = value;
    m_PathIsSet = true;
}
bool OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::pathIsSet() const
{
    return m_PathIsSet;
}

void OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoProperties::unsetPath()
{
    m_PathIsSet = false;
}

}
}
}
}

