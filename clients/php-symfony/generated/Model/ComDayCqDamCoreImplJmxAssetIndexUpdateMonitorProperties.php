<?php
/**
 * ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("jmx.objectname")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $jmxObjectname;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("property.measure.enabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $propertyMeasureEnabled;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("property.name")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $propertyName;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("property.max.wait.ms")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $propertyMaxWaitMs;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyFloat|null
     * @SerializedName("property.max.rate")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyFloat")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyFloat")
     */
    protected $propertyMaxRate;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("fulltext.measure.enabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $fulltextMeasureEnabled;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("fulltext.name")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $fulltextName;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("fulltext.max.wait.ms")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $fulltextMaxWaitMs;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyFloat|null
     * @SerializedName("fulltext.max.rate")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyFloat")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyFloat")
     */
    protected $fulltextMaxRate;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->jmxObjectname = isset($data['jmxObjectname']) ? $data['jmxObjectname'] : null;
        $this->propertyMeasureEnabled = isset($data['propertyMeasureEnabled']) ? $data['propertyMeasureEnabled'] : null;
        $this->propertyName = isset($data['propertyName']) ? $data['propertyName'] : null;
        $this->propertyMaxWaitMs = isset($data['propertyMaxWaitMs']) ? $data['propertyMaxWaitMs'] : null;
        $this->propertyMaxRate = isset($data['propertyMaxRate']) ? $data['propertyMaxRate'] : null;
        $this->fulltextMeasureEnabled = isset($data['fulltextMeasureEnabled']) ? $data['fulltextMeasureEnabled'] : null;
        $this->fulltextName = isset($data['fulltextName']) ? $data['fulltextName'] : null;
        $this->fulltextMaxWaitMs = isset($data['fulltextMaxWaitMs']) ? $data['fulltextMaxWaitMs'] : null;
        $this->fulltextMaxRate = isset($data['fulltextMaxRate']) ? $data['fulltextMaxRate'] : null;
    }

    /**
     * Gets jmxObjectname.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getJmxObjectname()
    {
        return $this->jmxObjectname;
    }

    /**
     * Sets jmxObjectname.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $jmxObjectname
     *
     * @return $this
     */
    public function setJmxObjectname(ConfigNodePropertyString $jmxObjectname = null)
    {
        $this->jmxObjectname = $jmxObjectname;

        return $this;
    }

    /**
     * Gets propertyMeasureEnabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getPropertyMeasureEnabled()
    {
        return $this->propertyMeasureEnabled;
    }

    /**
     * Sets propertyMeasureEnabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $propertyMeasureEnabled
     *
     * @return $this
     */
    public function setPropertyMeasureEnabled(ConfigNodePropertyBoolean $propertyMeasureEnabled = null)
    {
        $this->propertyMeasureEnabled = $propertyMeasureEnabled;

        return $this;
    }

    /**
     * Gets propertyName.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getPropertyName()
    {
        return $this->propertyName;
    }

    /**
     * Sets propertyName.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $propertyName
     *
     * @return $this
     */
    public function setPropertyName(ConfigNodePropertyString $propertyName = null)
    {
        $this->propertyName = $propertyName;

        return $this;
    }

    /**
     * Gets propertyMaxWaitMs.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getPropertyMaxWaitMs()
    {
        return $this->propertyMaxWaitMs;
    }

    /**
     * Sets propertyMaxWaitMs.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $propertyMaxWaitMs
     *
     * @return $this
     */
    public function setPropertyMaxWaitMs(ConfigNodePropertyInteger $propertyMaxWaitMs = null)
    {
        $this->propertyMaxWaitMs = $propertyMaxWaitMs;

        return $this;
    }

    /**
     * Gets propertyMaxRate.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyFloat|null
     */
    public function getPropertyMaxRate()
    {
        return $this->propertyMaxRate;
    }

    /**
     * Sets propertyMaxRate.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyFloat|null $propertyMaxRate
     *
     * @return $this
     */
    public function setPropertyMaxRate(ConfigNodePropertyFloat $propertyMaxRate = null)
    {
        $this->propertyMaxRate = $propertyMaxRate;

        return $this;
    }

    /**
     * Gets fulltextMeasureEnabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getFulltextMeasureEnabled()
    {
        return $this->fulltextMeasureEnabled;
    }

    /**
     * Sets fulltextMeasureEnabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $fulltextMeasureEnabled
     *
     * @return $this
     */
    public function setFulltextMeasureEnabled(ConfigNodePropertyBoolean $fulltextMeasureEnabled = null)
    {
        $this->fulltextMeasureEnabled = $fulltextMeasureEnabled;

        return $this;
    }

    /**
     * Gets fulltextName.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getFulltextName()
    {
        return $this->fulltextName;
    }

    /**
     * Sets fulltextName.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $fulltextName
     *
     * @return $this
     */
    public function setFulltextName(ConfigNodePropertyString $fulltextName = null)
    {
        $this->fulltextName = $fulltextName;

        return $this;
    }

    /**
     * Gets fulltextMaxWaitMs.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getFulltextMaxWaitMs()
    {
        return $this->fulltextMaxWaitMs;
    }

    /**
     * Sets fulltextMaxWaitMs.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $fulltextMaxWaitMs
     *
     * @return $this
     */
    public function setFulltextMaxWaitMs(ConfigNodePropertyInteger $fulltextMaxWaitMs = null)
    {
        $this->fulltextMaxWaitMs = $fulltextMaxWaitMs;

        return $this;
    }

    /**
     * Gets fulltextMaxRate.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyFloat|null
     */
    public function getFulltextMaxRate()
    {
        return $this->fulltextMaxRate;
    }

    /**
     * Sets fulltextMaxRate.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyFloat|null $fulltextMaxRate
     *
     * @return $this
     */
    public function setFulltextMaxRate(ConfigNodePropertyFloat $fulltextMaxRate = null)
    {
        $this->fulltextMaxRate = $fulltextMaxRate;

        return $this;
    }
}


