package org.openapitools.server.api.verticle;

import org.openapitools.server.api.model.AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo;
import org.openapitools.server.api.model.AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo;
import org.openapitools.server.api.model.AnalyticsComponentQueryCacheServiceInfo;
import org.openapitools.server.api.model.ApacheSlingHealthCheckResultHTMLSerializerInfo;
import java.math.BigDecimal;
import org.openapitools.server.api.model.ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo;
import org.openapitools.server.api.model.ComAdobeAemTransactionCoreImplTransactionRecorderInfo;
import org.openapitools.server.api.model.ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo;
import org.openapitools.server.api.model.ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo;
import org.openapitools.server.api.model.ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo;
import org.openapitools.server.api.model.ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo;
import org.openapitools.server.api.model.ComAdobeCqAccountApiAccountManagementServiceInfo;
import org.openapitools.server.api.model.ComAdobeCqAccountImplAccountManagementServletInfo;
import org.openapitools.server.api.model.ComAdobeCqAddressImplLocationLocationListServletInfo;
import org.openapitools.server.api.model.ComAdobeCqAuditPurgeDamInfo;
import org.openapitools.server.api.model.ComAdobeCqAuditPurgePagesInfo;
import org.openapitools.server.api.model.ComAdobeCqAuditPurgeReplicationInfo;
import org.openapitools.server.api.model.ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo;
import org.openapitools.server.api.model.ComAdobeCqCdnRewriterImplCDNConfigServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqCdnRewriterImplCDNRewriterInfo;
import org.openapitools.server.api.model.ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo;
import org.openapitools.server.api.model.ComAdobeCqCommerceImplAssetDynamicImageHandlerInfo;
import org.openapitools.server.api.model.ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo;
import org.openapitools.server.api.model.ComAdobeCqCommerceImplAssetStaticImageHandlerInfo;
import org.openapitools.server.api.model.ComAdobeCqCommerceImplAssetVideoHandlerInfo;
import org.openapitools.server.api.model.ComAdobeCqCommerceImplPromotionPromotionManagerImplInfo;
import org.openapitools.server.api.model.ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo;
import org.openapitools.server.api.model.ComAdobeCqCommercePimImplPageEventListenerInfo;
import org.openapitools.server.api.model.ComAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqContentinsightImplReportingServicesSettingsProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo;
import org.openapitools.server.api.model.ComAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo;
import org.openapitools.server.api.model.ComAdobeCqDamCfmImplComponentComponentConfigImplInfo;
import org.openapitools.server.api.model.ComAdobeCqDamCfmImplConfFeatureConfigImplInfo;
import org.openapitools.server.api.model.ComAdobeCqDamCfmImplContentRewriterAssetProcessorInfo;
import org.openapitools.server.api.model.ComAdobeCqDamCfmImplContentRewriterParRangeFilterInfo;
import org.openapitools.server.api.model.ComAdobeCqDamCfmImplContentRewriterPayloadFilterInfo;
import org.openapitools.server.api.model.ComAdobeCqDamDmProcessImagePTiffManagerImplInfo;
import org.openapitools.server.api.model.ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo;
import org.openapitools.server.api.model.ComAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo;
import org.openapitools.server.api.model.ComAdobeCqDamMacSyncImplDAMSyncServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo;
import org.openapitools.server.api.model.ComAdobeCqDamS7imagingImplIsImageServerComponentInfo;
import org.openapitools.server.api.model.ComAdobeCqDamS7imagingImplPsPlatformServerServletInfo;
import org.openapitools.server.api.model.ComAdobeCqDamWebdavImplIoAssetIOHandlerInfo;
import org.openapitools.server.api.model.ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo;
import org.openapitools.server.api.model.ComAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo;
import org.openapitools.server.api.model.ComAdobeCqDeserfwImplDeserializationFirewallImplInfo;
import org.openapitools.server.api.model.ComAdobeCqDtmImplServiceDTMWebServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqDtmImplServletsDTMDeployHookServletInfo;
import org.openapitools.server.api.model.ComAdobeCqDtmReactorImplServiceWebServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqExperiencelogImplExperienceLogConfigServletInfo;
import org.openapitools.server.api.model.ComAdobeCqHcContentPackagesHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeCqHistoryImplHistoryRequestFilterInfo;
import org.openapitools.server.api.model.ComAdobeCqHistoryImplHistoryServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqInboxImplTypeproviderItemTypeProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqProjectsImplServletProjectImageServletInfo;
import org.openapitools.server.api.model.ComAdobeCqProjectsPurgeSchedulerInfo;
import org.openapitools.server.api.model.ComAdobeCqScheduledExporterImplScheduledExporterImplInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensDeviceImplDeviceServiceInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensImplScreensChannelPostProcessorInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo;
import org.openapitools.server.api.model.ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo;
import org.openapitools.server.api.model.ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCalendarServletsTimeZoneServletInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialConnectOauthImplFacebookProviderImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialConnectOauthImplTwitterProviderImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialForumDispatcherImplFlushOperationsInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialGroupImplGroupServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialNotificationsImplMentionsRouterInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialNotificationsImplNotificationManagerImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialNotificationsImplNotificationsRouterInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialScoringImplScoringEventListenerInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialSiteImplSiteConfiguratorImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialSrpImplSocialSolrConnectorInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialSyncImplDiffChangesObserverInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialSyncImplGroupSyncListenerImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialSyncImplPublisherSyncServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialSyncImplUserSyncListenerImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialTranslationImplUGCLanguageDetectorInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUgcbaseImplSocialUtilsImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo;
import org.openapitools.server.api.model.ComAdobeCqSocialUserImplTransportHttpToPublisherInfo;
import org.openapitools.server.api.model.ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo;
import org.openapitools.server.api.model.ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo;
import org.openapitools.server.api.model.ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo;
import org.openapitools.server.api.model.ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo;
import org.openapitools.server.api.model.ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo;
import org.openapitools.server.api.model.ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo;
import org.openapitools.server.api.model.ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo;
import org.openapitools.server.api.model.ComAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo;
import org.openapitools.server.api.model.ComAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo;
import org.openapitools.server.api.model.ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo;
import org.openapitools.server.api.model.ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo;
import org.openapitools.server.api.model.ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo;
import org.openapitools.server.api.model.ComAdobeFdFpConfigFormsPortalSchedulerServiceInfo;
import org.openapitools.server.api.model.ComAdobeFormsCommonServiceImplDefaultDataProviderInfo;
import org.openapitools.server.api.model.ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo;
import org.openapitools.server.api.model.ComAdobeFormsCommonServletTempCleanUpTaskInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAcpPlatformPlatformServletInfo;
import org.openapitools.server.api.model.ComAdobeGraniteActivitystreamsImplActivityManagerImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAnalyzerBaseSystemStatusServletInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo;
import org.openapitools.server.api.model.ComAdobeGraniteApicontrollerFilterResolverHookFactoryInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthCertImplClientCertAuthHandlerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthImsImplIMSProviderImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthImsImplImsConfigProviderImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthImsInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthAccesstokenProviderInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthImplFacebookProviderImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthImplGithubProviderImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthImplGraniteProviderInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthImplTwitterProviderImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthOauthProviderInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplJobsHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo;
import org.openapitools.server.api.model.ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteCompatrouterImplRoutingConfigInfo;
import org.openapitools.server.api.model.ComAdobeGraniteCompatrouterImplSwitchMappingConfigInfo;
import org.openapitools.server.api.model.ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo;
import org.openapitools.server.api.model.ComAdobeGraniteContexthubImplContextHubImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteCorsImplCORSPolicyImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteCsrfImplCSRFFilterInfo;
import org.openapitools.server.api.model.ComAdobeGraniteCsrfImplCSRFServletInfo;
import org.openapitools.server.api.model.ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo;
import org.openapitools.server.api.model.ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo;
import org.openapitools.server.api.model.ComAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo;
import org.openapitools.server.api.model.ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo;
import org.openapitools.server.api.model.ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo;
import org.openapitools.server.api.model.ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo;
import org.openapitools.server.api.model.ComAdobeGraniteFragsImplCheckHttpHeaderFlagInfo;
import org.openapitools.server.api.model.ComAdobeGraniteFragsImplRandomFeatureInfo;
import org.openapitools.server.api.model.ComAdobeGraniteHttpcacheFileFileCacheStoreInfo;
import org.openapitools.server.api.model.ComAdobeGraniteHttpcacheImplOuterCacheFilterInfo;
import org.openapitools.server.api.model.ComAdobeGraniteI18nImplBundlePseudoTranslationsInfo;
import org.openapitools.server.api.model.ComAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo;
import org.openapitools.server.api.model.ComAdobeGraniteInfocollectorInfoCollectorInfo;
import org.openapitools.server.api.model.ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo;
import org.openapitools.server.api.model.ComAdobeGraniteLicenseImplLicenseCheckFilterInfo;
import org.openapitools.server.api.model.ComAdobeGraniteLoggingImplLogAnalyserImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteLoggingImplLogErrorHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo;
import org.openapitools.server.api.model.ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo;
import org.openapitools.server.api.model.ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo;
import org.openapitools.server.api.model.ComAdobeGraniteMonitoringImplScriptConfigImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOffloadingImplOffloadingConfiguratorInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOffloadingImplOffloadingJobClonerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteOptoutImplOptOutServiceImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo;
import org.openapitools.server.api.model.ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRepositoryImplCommitStatsConfigInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRepositoryServiceUserConfigurationInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo;
import org.openapitools.server.api.model.ComAdobeGraniteResourcestatusImplCompositeStatusTypeInfo;
import org.openapitools.server.api.model.ComAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteRestImplServletDefaultGETServletInfo;
import org.openapitools.server.api.model.ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo;
import org.openapitools.server.api.model.ComAdobeGraniteSecurityUserUserPropertiesServiceInfo;
import org.openapitools.server.api.model.ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo;
import org.openapitools.server.api.model.ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo;
import org.openapitools.server.api.model.ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo;
import org.openapitools.server.api.model.ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo;
import org.openapitools.server.api.model.ComAdobeGraniteThreaddumpThreadDumpCollectorInfo;
import org.openapitools.server.api.model.ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo;
import org.openapitools.server.api.model.ComAdobeGraniteTranslationCoreImplTranslationManagerImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowCoreJobJobHandlerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowCorePayloadMapCacheInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowCoreWorkflowConfigInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo;
import org.openapitools.server.api.model.ComAdobeGraniteWorkflowPurgeSchedulerInfo;
import org.openapitools.server.api.model.ComAdobeOctopusNcommBootstrapInfo;
import org.openapitools.server.api.model.ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo;
import org.openapitools.server.api.model.ComAdobeXmpWorkerFilesNcommXMPFilesNCommInfo;
import org.openapitools.server.api.model.ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo;
import org.openapitools.server.api.model.ComDayCommonsHttpclientInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsImplStorePropertiesChangeListenerInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsSitecatalystImplImporterReportImporterInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsTestandtargetImplSegmentImporterInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo;
import org.openapitools.server.api.model.ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo;
import org.openapitools.server.api.model.ComDayCqAuthImplCugCugSupportImplInfo;
import org.openapitools.server.api.model.ComDayCqAuthImplLoginSelectorHandlerInfo;
import org.openapitools.server.api.model.ComDayCqCommonsImplExternalizerImplInfo;
import org.openapitools.server.api.model.ComDayCqCommonsServletsRootMappingServletInfo;
import org.openapitools.server.api.model.ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo;
import org.openapitools.server.api.model.ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo;
import org.openapitools.server.api.model.ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo;
import org.openapitools.server.api.model.ComDayCqContentsyncImplContentSyncManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqDamCommonsHandlerStandardImageHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo;
import org.openapitools.server.api.model.ComDayCqDamCommonsUtilImplAssetCacheImplInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplAssetMoveListenerInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplCacheCQBufferedImageCacheInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplDamChangeEventListenerInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplDamEventPurgeServiceInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplDamEventRecorderImplInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplEventDamEventAuditListenerInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplExpiryNotificationJobImplInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplGfxCommonsGfxRendererInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplHandlerEPSFormatHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplHandlerIndesignFormatHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplHandlerJpegHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplLightboxLightboxServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplMissingMetadataNotificationJobInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplProcessTextExtractionProcessInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplRenditionMakerImplInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplReportsReportExportServiceInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplReportsReportPurgeServiceInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletAssetDownloadServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletAssetStatusServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletAssetXMPSearchServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletBatchMetadataServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletBinaryProviderServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletCollectionServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletCollectionsServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletCompanionServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletCreateAssetServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletDamContentDispositionFilterInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletGuidLookupFilterInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletHealthCheckServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletMetadataGetServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplServletResourceCollectionServletInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreImplUnzipUnzipConfigInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreProcessExifToolExtractMetadataProcessInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreProcessExtractMetadataProcessInfo;
import org.openapitools.server.api.model.ComDayCqDamCoreProcessMetadataProcessorProcessInfo;
import org.openapitools.server.api.model.ComDayCqDamHandlerFfmpegLocatorImplInfo;
import org.openapitools.server.api.model.ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqDamHandlerStandardPdfPdfHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamHandlerStandardPsPostScriptHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamHandlerStandardPsdPsdHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamIdsImplIDSJobProcessorInfo;
import org.openapitools.server.api.model.ComDayCqDamIdsImplIDSPoolManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqDamInddImplHandlerIndesignXMPHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamInddImplServletSnippetCreationServletInfo;
import org.openapitools.server.api.model.ComDayCqDamInddProcessINDDMediaExtractProcessInfo;
import org.openapitools.server.api.model.ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo;
import org.openapitools.server.api.model.ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo;
import org.openapitools.server.api.model.ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo;
import org.openapitools.server.api.model.ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo;
import org.openapitools.server.api.model.ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo;
import org.openapitools.server.api.model.ComDayCqDamS7damCommonPostServletsSetCreateHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamS7damCommonPostServletsSetModifyHandlerInfo;
import org.openapitools.server.api.model.ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo;
import org.openapitools.server.api.model.ComDayCqDamS7damCommonS7damDamChangeEventListenerInfo;
import org.openapitools.server.api.model.ComDayCqDamS7damCommonServletsS7damProductInfoServletInfo;
import org.openapitools.server.api.model.ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqDamScene7ImplScene7APIClientImplInfo;
import org.openapitools.server.api.model.ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqDamScene7ImplScene7ConfigurationEventListenerInfo;
import org.openapitools.server.api.model.ComDayCqDamScene7ImplScene7DamChangeEventListenerInfo;
import org.openapitools.server.api.model.ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqDamScene7ImplScene7UploadServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo;
import org.openapitools.server.api.model.ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo;
import org.openapitools.server.api.model.ComDayCqDamVideoImplServletVideoTestServletInfo;
import org.openapitools.server.api.model.ComDayCqExtwidgetServletsImageSpriteServletInfo;
import org.openapitools.server.api.model.ComDayCqImageInternalFontFontHelperInfo;
import org.openapitools.server.api.model.ComDayCqJcrclustersupportClusterStartLevelControllerInfo;
import org.openapitools.server.api.model.ComDayCqMailerDefaultMailServiceInfo;
import org.openapitools.server.api.model.ComDayCqMailerImplCqMailingServiceInfo;
import org.openapitools.server.api.model.ComDayCqMailerImplEmailCqEmailTemplateFactoryInfo;
import org.openapitools.server.api.model.ComDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo;
import org.openapitools.server.api.model.ComDayCqMcmCampaignImplIntegrationConfigImplInfo;
import org.openapitools.server.api.model.ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo;
import org.openapitools.server.api.model.ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqMcmImplMCMConfigurationInfo;
import org.openapitools.server.api.model.ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo;
import org.openapitools.server.api.model.ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo;
import org.openapitools.server.api.model.ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo;
import org.openapitools.server.api.model.ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo;
import org.openapitools.server.api.model.ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo;
import org.openapitools.server.api.model.ComDayCqNotificationImplNotificationServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqPersonalizationImplServletsTargetingConfigurationServletInfo;
import org.openapitools.server.api.model.ComDayCqPollingImporterImplManagedPollConfigImplInfo;
import org.openapitools.server.api.model.ComDayCqPollingImporterImplManagedPollingImporterImplInfo;
import org.openapitools.server.api.model.ComDayCqPollingImporterImplPollingImporterImplInfo;
import org.openapitools.server.api.model.ComDayCqReplicationAuditReplicationEventListenerInfo;
import org.openapitools.server.api.model.ComDayCqReplicationContentStaticContentBuilderInfo;
import org.openapitools.server.api.model.ComDayCqReplicationImplAgentManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo;
import org.openapitools.server.api.model.ComDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo;
import org.openapitools.server.api.model.ComDayCqReplicationImplReplicationContentFactoryProviderImplInfo;
import org.openapitools.server.api.model.ComDayCqReplicationImplReplicationReceiverImplInfo;
import org.openapitools.server.api.model.ComDayCqReplicationImplReplicatorImplInfo;
import org.openapitools.server.api.model.ComDayCqReplicationImplReverseReplicatorInfo;
import org.openapitools.server.api.model.ComDayCqReplicationImplTransportBinaryLessTransportHandlerInfo;
import org.openapitools.server.api.model.ComDayCqReplicationImplTransportHttpInfo;
import org.openapitools.server.api.model.ComDayCqReportingImplCacheCacheImplInfo;
import org.openapitools.server.api.model.ComDayCqReportingImplConfigServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqReportingImplRLogAnalyzerInfo;
import org.openapitools.server.api.model.ComDayCqRewriterLinkcheckerImplLinkCheckerImplInfo;
import org.openapitools.server.api.model.ComDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo;
import org.openapitools.server.api.model.ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo;
import org.openapitools.server.api.model.ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo;
import org.openapitools.server.api.model.ComDayCqRewriterProcessorImplHtmlParserFactoryInfo;
import org.openapitools.server.api.model.ComDayCqSearchImplBuilderQueryBuilderImplInfo;
import org.openapitools.server.api.model.ComDayCqSearchSuggestImplSuggestionIndexManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo;
import org.openapitools.server.api.model.ComDayCqSearchpromoteImplSearchPromoteServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqSecurityACLSetupInfo;
import org.openapitools.server.api.model.ComDayCqStatisticsImplStatisticsServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqTaggingImplJcrTagManagerFactoryImplInfo;
import org.openapitools.server.api.model.ComDayCqTaggingImplSearchTagPredicateEvaluatorInfo;
import org.openapitools.server.api.model.ComDayCqTaggingImplTagGarbageCollectorInfo;
import org.openapitools.server.api.model.ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo;
import org.openapitools.server.api.model.ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplAuthoringUIModeServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplCommandsWCMCommandServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplEventPageEventAuditListenerInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplEventPagePostProcessorInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplEventTemplatePostProcessorInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplLanguageManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplPagePageInfoAggregatorImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplPagePageManagerFactoryImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplServletsFindReplaceServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplServletsReferenceSearchServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplServletsThumbnailServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplVersionManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplVersionPurgeTaskInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplWCMDebugFilterInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplWCMDeveloperModeFilterInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreImplWarpTimeWarpFilterInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreMvtMVTStatisticsImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreStatsPageViewStatisticsImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmCoreWCMRequestFilterInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterDesignPackageImporterInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterImplCanvasBuilderImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterImplEntryPreprocessorImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo;
import org.openapitools.server.api.model.ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationFormsImplFormChooserServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationFormsImplFormsHandlingServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationFormsImplMailServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationImplAdaptiveImageComponentServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationImplHTTPAuthHandlerInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationImplPageImpressionsTrackerInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationImplPageRedirectServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo;
import org.openapitools.server.api.model.ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo;
import org.openapitools.server.api.model.ComDayCqWcmMobileCoreImplRedirectRedirectFilterInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplActionsContentCopyActionFactoryInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplActionsPageMoveActionFactoryInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplLiveRelationshipManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplRolloutManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmMsmImplServletsAuditLogServletInfo;
import org.openapitools.server.api.model.ComDayCqWcmNotificationEmailImplEmailChannelInfo;
import org.openapitools.server.api.model.ComDayCqWcmNotificationImplNotificationManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmScriptingImplBVPManagerInfo;
import org.openapitools.server.api.model.ComDayCqWcmUndoUndoConfigInfo;
import org.openapitools.server.api.model.ComDayCqWcmWebservicesupportImplReplicationEventListenerInfo;
import org.openapitools.server.api.model.ComDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo;
import org.openapitools.server.api.model.ComDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo;
import org.openapitools.server.api.model.ComDayCqWidgetImplHtmlLibraryManagerImplInfo;
import org.openapitools.server.api.model.ComDayCqWidgetImplWidgetExtensionProviderImplInfo;
import org.openapitools.server.api.model.ComDayCqWorkflowImplEmailEMailNotificationServiceInfo;
import org.openapitools.server.api.model.ComDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo;
import org.openapitools.server.api.model.ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo;
import org.openapitools.server.api.model.ComDayCrxSecurityTokenImplTokenCleanupTaskInfo;
import org.openapitools.server.api.model.GuideLocalizationServiceInfo;
import org.openapitools.server.api.MainApiException;
import org.openapitools.server.api.model.MessagingUserComponentFactoryInfo;
import org.openapitools.server.api.model.OrgApacheAriesJmxFrameworkStateConfigInfo;
import org.openapitools.server.api.model.OrgApacheFelixEventadminImplEventAdminInfo;
import org.openapitools.server.api.model.OrgApacheFelixHttpInfo;
import org.openapitools.server.api.model.OrgApacheFelixHttpSslfilterSslFilterInfo;
import org.openapitools.server.api.model.OrgApacheFelixJaasConfigurationFactoryInfo;
import org.openapitools.server.api.model.OrgApacheFelixJaasConfigurationSpiInfo;
import org.openapitools.server.api.model.OrgApacheFelixScrScrServiceInfo;
import org.openapitools.server.api.model.OrgApacheFelixSystemreadyImplComponentsCheckInfo;
import org.openapitools.server.api.model.OrgApacheFelixSystemreadyImplFrameworkStartCheckInfo;
import org.openapitools.server.api.model.OrgApacheFelixSystemreadyImplServicesCheckInfo;
import org.openapitools.server.api.model.OrgApacheFelixSystemreadyImplServletSystemAliveServletInfo;
import org.openapitools.server.api.model.OrgApacheFelixSystemreadyImplServletSystemReadyServletInfo;
import org.openapitools.server.api.model.OrgApacheFelixSystemreadySystemReadyMonitorInfo;
import org.openapitools.server.api.model.OrgApacheFelixWebconsoleInternalServletOsgiManagerInfo;
import org.openapitools.server.api.model.OrgApacheFelixWebconsolePluginsEventInternalPluginServletInfo;
import org.openapitools.server.api.model.OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo;
import org.openapitools.server.api.model.OrgApacheHttpProxyconfiguratorInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitVaultPackagingImplPackagingImplInfo;
import org.openapitools.server.api.model.OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo;
import org.openapitools.server.api.model.OrgApacheSlingAuthCoreImplLogoutServletInfo;
import org.openapitools.server.api.model.OrgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo;
import org.openapitools.server.api.model.OrgApacheSlingCaconfigImplConfigurationResolverImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo;
import org.openapitools.server.api.model.OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo;
import org.openapitools.server.api.model.OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo;
import org.openapitools.server.api.model.OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo;
import org.openapitools.server.api.model.OrgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo;
import org.openapitools.server.api.model.OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo;
import org.openapitools.server.api.model.OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsLogLogManagerFactoryConfigInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsLogLogManagerFactoryWriterInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsLogLogManagerInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsMetricsInternalLogReporterInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo;
import org.openapitools.server.api.model.OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingDatasourceDataSourceFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingDatasourceJNDIDataSourceFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingDiscoveryOakConfigInfo;
import org.openapitools.server.api.model.OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionResourcesImplDistributionConfigurationInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionResourcesImplDistributionServiceResourInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionSerializationImplDistributionPackageBuInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionSerializationImplVltVaultDistributionInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo;
import org.openapitools.server.api.model.OrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo;
import org.openapitools.server.api.model.OrgApacheSlingEngineImplAuthSlingAuthenticatorInfo;
import org.openapitools.server.api.model.OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo;
import org.openapitools.server.api.model.OrgApacheSlingEngineImplLogRequestLoggerInfo;
import org.openapitools.server.api.model.OrgApacheSlingEngineImplLogRequestLoggerServiceInfo;
import org.openapitools.server.api.model.OrgApacheSlingEngineImplSlingMainServletInfo;
import org.openapitools.server.api.model.OrgApacheSlingEngineParametersInfo;
import org.openapitools.server.api.model.OrgApacheSlingEventImplEventingThreadPoolInfo;
import org.openapitools.server.api.model.OrgApacheSlingEventImplJobsDefaultJobManagerInfo;
import org.openapitools.server.api.model.OrgApacheSlingEventImplJobsJcrPersistenceHandlerInfo;
import org.openapitools.server.api.model.OrgApacheSlingEventImplJobsJobConsumerManagerInfo;
import org.openapitools.server.api.model.OrgApacheSlingEventJobsQueueConfigurationInfo;
import org.openapitools.server.api.model.OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo;
import org.openapitools.server.api.model.OrgApacheSlingFeatureflagsFeatureInfo;
import org.openapitools.server.api.model.OrgApacheSlingFeatureflagsImplConfiguredFeatureInfo;
import org.openapitools.server.api.model.OrgApacheSlingHapiImplHApiUtilImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingHcCoreImplCompositeHealthCheckInfo;
import org.openapitools.server.api.model.OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo;
import org.openapitools.server.api.model.OrgApacheSlingHcCoreImplScriptableHealthCheckInfo;
import org.openapitools.server.api.model.OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo;
import org.openapitools.server.api.model.OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo;
import org.openapitools.server.api.model.OrgApacheSlingI18nImplI18NFilterInfo;
import org.openapitools.server.api.model.OrgApacheSlingI18nImplJcrResourceBundleProviderInfo;
import org.openapitools.server.api.model.OrgApacheSlingInstallerProviderJcrImplJcrInstallerInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrDavexImplServletsSlingDavExServletInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrRepoinitImplRepositoryInitializerInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrRepoinitRepositoryInitializerInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo;
import org.openapitools.server.api.model.OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo;
import org.openapitools.server.api.model.OrgApacheSlingJmxProviderImplJMXResourceProviderInfo;
import org.openapitools.server.api.model.OrgApacheSlingModelsImplModelAdapterFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo;
import org.openapitools.server.api.model.OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo;
import org.openapitools.server.api.model.OrgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingResourcemergerPickerOverridingInfo;
import org.openapitools.server.api.model.OrgApacheSlingScriptingCoreImplScriptCacheImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo;
import org.openapitools.server.api.model.OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo;
import org.openapitools.server.api.model.OrgApacheSlingScriptingJspJspScriptEngineFactoryInfo;
import org.openapitools.server.api.model.OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo;
import org.openapitools.server.api.model.OrgApacheSlingSecurityImplContentDispositionFilterInfo;
import org.openapitools.server.api.model.OrgApacheSlingSecurityImplReferrerFilterInfo;
import org.openapitools.server.api.model.OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo;
import org.openapitools.server.api.model.OrgApacheSlingServiceusermappingImplServiceUserMapperImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingServletsGetDefaultGetServletInfo;
import org.openapitools.server.api.model.OrgApacheSlingServletsGetImplVersionVersionInfoServletInfo;
import org.openapitools.server.api.model.OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo;
import org.openapitools.server.api.model.OrgApacheSlingServletsPostImplSlingPostServletInfo;
import org.openapitools.server.api.model.OrgApacheSlingServletsResolverSlingServletResolverInfo;
import org.openapitools.server.api.model.OrgApacheSlingSettingsImplSlingSettingsServiceImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingStartupfilterImplStartupFilterImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingTenantInternalTenantProviderImplInfo;
import org.openapitools.server.api.model.OrgApacheSlingTracerInternalLogTracerInfo;
import org.openapitools.server.api.model.OrgApacheSlingXssImplXSSFilterImplInfo;

import io.vertx.core.AsyncResult;
import io.vertx.core.Handler;

import java.util.List;
import java.util.Map;

public interface ConfigmgrApi  {
    //adaptiveFormAndInteractiveCommunicationWebChannelConfiguration
    void adaptiveFormAndInteractiveCommunicationWebChannelConfiguration(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean showPlaceholder, Integer maximumCacheEntries, String afScriptingCompatversion, Boolean makeFileNameUnique, Boolean generatingCompliantData, Handler<AsyncResult<AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationInfo>> handler);
    
    //adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur
    void adaptiveFormAndInteractiveCommunicationWebChannelThemeConfigur(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fontList, Handler<AsyncResult<AdaptiveFormAndInteractiveCommunicationWebChannelThemeConfigurInfo>> handler);
    
    //analyticsComponentQueryCacheService
    void analyticsComponentQueryCacheService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqAnalyticsComponentQueryCacheSize, Handler<AsyncResult<AnalyticsComponentQueryCacheServiceInfo>> handler);
    
    //apacheSlingHealthCheckResultHTMLSerializer
    void apacheSlingHealthCheckResultHTMLSerializer(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String styleString, Handler<AsyncResult<ApacheSlingHealthCheckResultHTMLSerializerInfo>> handler);
    
    //comAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration
    void comAdobeAemFormsndocumentsConfigAEMFormsManagerConfiguration(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean formsManagerConfigIncludeOOTBTemplates, Boolean formsManagerConfigIncludeDeprecatedTemplates, Handler<AsyncResult<ComAdobeAemFormsndocumentsConfigAEMFormsManagerConfigurationInfo>> handler);
    
    //comAdobeAemTransactionCoreImplTransactionRecorder
    void comAdobeAemTransactionCoreImplTransactionRecorder(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean isTransactionRecordingEnabled, Handler<AsyncResult<ComAdobeAemTransactionCoreImplTransactionRecorderInfo>> handler);
    
    //comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC
    void comAdobeAemUpgradePrechecksHcImplDeprecateIndexesHC(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String hcName, List<String> hcTags, String hcMbeanName, Handler<AsyncResult<ComAdobeAemUpgradePrechecksHcImplDeprecateIndexesHCInfo>> handler);
    
    //comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC
    void comAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHC(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String hcName, List<String> hcTags, String hcMbeanName, Handler<AsyncResult<ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCInfo>> handler);
    
    //comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl
    void comAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> preUpgradeMaintenanceTasks, List<String> preUpgradeHcTags, Handler<AsyncResult<ComAdobeAemUpgradePrechecksMbeanImplPreUpgradeTasksMBeanImplInfo>> handler);
    
    //comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl
    void comAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String rootPath, Boolean fixInconsistencies, Handler<AsyncResult<ComAdobeAemUpgradePrechecksTasksImplConsistencyCheckTaskImplInfo>> handler);
    
    //comAdobeCqAccountApiAccountManagementService
    void comAdobeCqAccountApiAccountManagementService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqAccountmanagerTokenValidityPeriod, String cqAccountmanagerConfigRequestnewaccountMail, String cqAccountmanagerConfigRequestnewpwdMail, Handler<AsyncResult<ComAdobeCqAccountApiAccountManagementServiceInfo>> handler);
    
    //comAdobeCqAccountImplAccountManagementServlet
    void comAdobeCqAccountImplAccountManagementServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String cqAccountmanagerConfigInformnewaccountMail, String cqAccountmanagerConfigInformnewpwdMail, Handler<AsyncResult<ComAdobeCqAccountImplAccountManagementServletInfo>> handler);
    
    //comAdobeCqAddressImplLocationLocationListServlet
    void comAdobeCqAddressImplLocationLocationListServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqAddressLocationDefaultMaxResults, Handler<AsyncResult<ComAdobeCqAddressImplLocationLocationListServletInfo>> handler);
    
    //comAdobeCqAuditPurgeDam
    void comAdobeCqAuditPurgeDam(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String auditlogRuleName, String auditlogRuleContentpath, Integer auditlogRuleMinimumage, String auditlogRuleTypes, Handler<AsyncResult<ComAdobeCqAuditPurgeDamInfo>> handler);
    
    //comAdobeCqAuditPurgePages
    void comAdobeCqAuditPurgePages(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String auditlogRuleName, String auditlogRuleContentpath, Integer auditlogRuleMinimumage, String auditlogRuleTypes, Handler<AsyncResult<ComAdobeCqAuditPurgePagesInfo>> handler);
    
    //comAdobeCqAuditPurgeReplication
    void comAdobeCqAuditPurgeReplication(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String auditlogRuleName, String auditlogRuleContentpath, Integer auditlogRuleMinimumage, String auditlogRuleTypes, Handler<AsyncResult<ComAdobeCqAuditPurgeReplicationInfo>> handler);
    
    //comAdobeCqCdnRewriterImplAWSCloudFrontRewriter
    void comAdobeCqCdnRewriterImplAWSCloudFrontRewriter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String keypairId, String keypairAlias, List<String> cdnrewriterAttributes, String cdnRewriterDistributionDomain, Handler<AsyncResult<ComAdobeCqCdnRewriterImplAWSCloudFrontRewriterInfo>> handler);
    
    //comAdobeCqCdnRewriterImplCDNConfigServiceImpl
    void comAdobeCqCdnRewriterImplCDNConfigServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String cdnConfigDistributionDomain, Boolean cdnConfigEnableRewriting, List<String> cdnConfigPathPrefixes, Integer cdnConfigCdnttl, String cdnConfigApplicationProtocol, Handler<AsyncResult<ComAdobeCqCdnRewriterImplCDNConfigServiceImplInfo>> handler);
    
    //comAdobeCqCdnRewriterImplCDNRewriter
    void comAdobeCqCdnRewriterImplCDNRewriter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, List<String> cdnrewriterAttributes, String cdnRewriterDistributionDomain, Handler<AsyncResult<ComAdobeCqCdnRewriterImplCDNRewriterInfo>> handler);
    
    //comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle
    void comAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandle(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> flushAgents, Handler<AsyncResult<ComAdobeCqCloudconfigCoreImplConfigurationReplicationEventHandleInfo>> handler);
    
    //comAdobeCqCommerceImplAssetDynamicImageHandler
    void comAdobeCqCommerceImplAssetDynamicImageHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqCommerceAssetHandlerActive, String cqCommerceAssetHandlerName, Handler<AsyncResult<ComAdobeCqCommerceImplAssetDynamicImageHandlerInfo>> handler);
    
    //comAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl
    void comAdobeCqCommerceImplAssetProductAssetHandlerProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String cqCommerceAssetHandlerFallback, Handler<AsyncResult<ComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplInfo>> handler);
    
    //comAdobeCqCommerceImplAssetStaticImageHandler
    void comAdobeCqCommerceImplAssetStaticImageHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqCommerceAssetHandlerActive, String cqCommerceAssetHandlerName, Handler<AsyncResult<ComAdobeCqCommerceImplAssetStaticImageHandlerInfo>> handler);
    
    //comAdobeCqCommerceImplAssetVideoHandler
    void comAdobeCqCommerceImplAssetVideoHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqCommerceAssetHandlerActive, String cqCommerceAssetHandlerName, Handler<AsyncResult<ComAdobeCqCommerceImplAssetVideoHandlerInfo>> handler);
    
    //comAdobeCqCommerceImplPromotionPromotionManagerImpl
    void comAdobeCqCommerceImplPromotionPromotionManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String cqCommercePromotionRoot, Handler<AsyncResult<ComAdobeCqCommerceImplPromotionPromotionManagerImplInfo>> handler);
    
    //comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl
    void comAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqCommerceCataloggeneratorBucketsize, String cqCommerceCataloggeneratorBucketname, List<String> cqCommerceCataloggeneratorExcludedtemplateproperties, Handler<AsyncResult<ComAdobeCqCommercePimImplCataloggeneratorCatalogGeneratorImplInfo>> handler);
    
    //comAdobeCqCommercePimImplPageEventListener
    void comAdobeCqCommercePimImplPageEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqCommercePageeventlistenerEnabled, Handler<AsyncResult<ComAdobeCqCommercePimImplPageEventListenerInfo>> handler);
    
    //comAdobeCqCommercePimImplProductfeedProductFeedServiceImpl
    void comAdobeCqCommercePimImplProductfeedProductFeedServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String feedGeneratorAlgorithm, Handler<AsyncResult<ComAdobeCqCommercePimImplProductfeedProductFeedServiceImplInfo>> handler);
    
    //comAdobeCqContentinsightImplReportingServicesSettingsProvider
    void comAdobeCqContentinsightImplReportingServicesSettingsProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String reportingservicesUrl, Handler<AsyncResult<ComAdobeCqContentinsightImplReportingServicesSettingsProviderInfo>> handler);
    
    //comAdobeCqContentinsightImplServletsBrightEdgeProxyServlet
    void comAdobeCqContentinsightImplServletsBrightEdgeProxyServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String brightedgeUrl, Handler<AsyncResult<ComAdobeCqContentinsightImplServletsBrightEdgeProxyServletInfo>> handler);
    
    //comAdobeCqContentinsightImplServletsReportingServicesProxyServle
    void comAdobeCqContentinsightImplServletsReportingServicesProxyServle(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> reportingservicesProxyWhitelist, Handler<AsyncResult<ComAdobeCqContentinsightImplServletsReportingServicesProxyServleInfo>> handler);
    
    //comAdobeCqDamCfmImplComponentComponentConfigImpl
    void comAdobeCqDamCfmImplComponentComponentConfigImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String damCfmComponentResourceType, String damCfmComponentFileReferenceProp, String damCfmComponentElementsProp, String damCfmComponentVariationProp, Handler<AsyncResult<ComAdobeCqDamCfmImplComponentComponentConfigImplInfo>> handler);
    
    //comAdobeCqDamCfmImplConfFeatureConfigImpl
    void comAdobeCqDamCfmImplConfFeatureConfigImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> damCfmResourceTypes, List<String> damCfmReferenceProperties, Handler<AsyncResult<ComAdobeCqDamCfmImplConfFeatureConfigImplInfo>> handler);
    
    //comAdobeCqDamCfmImplContentRewriterAssetProcessor
    void comAdobeCqDamCfmImplContentRewriterAssetProcessor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String pipelineType, Handler<AsyncResult<ComAdobeCqDamCfmImplContentRewriterAssetProcessorInfo>> handler);
    
    //comAdobeCqDamCfmImplContentRewriterParRangeFilter
    void comAdobeCqDamCfmImplContentRewriterParRangeFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String pipelineType, Handler<AsyncResult<ComAdobeCqDamCfmImplContentRewriterParRangeFilterInfo>> handler);
    
    //comAdobeCqDamCfmImplContentRewriterPayloadFilter
    void comAdobeCqDamCfmImplContentRewriterPayloadFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String pipelineType, Handler<AsyncResult<ComAdobeCqDamCfmImplContentRewriterPayloadFilterInfo>> handler);
    
    //comAdobeCqDamDmProcessImagePTiffManagerImpl
    void comAdobeCqDamDmProcessImagePTiffManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxMemory, Handler<AsyncResult<ComAdobeCqDamDmProcessImagePTiffManagerImplInfo>> handler);
    
    //comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker
    void comAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorker(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean dmreplicateonmodifyEnabled, Boolean dmreplicateonmodifyForcesyncdeletes, Handler<AsyncResult<ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerInfo>> handler);
    
    //comAdobeCqDamMacSyncHelperImplMACSyncClientImpl
    void comAdobeCqDamMacSyncHelperImplMACSyncClientImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer comAdobeDamMacSyncClientSoTimeout, Handler<AsyncResult<ComAdobeCqDamMacSyncHelperImplMACSyncClientImplInfo>> handler);
    
    //comAdobeCqDamMacSyncImplDAMSyncServiceImpl
    void comAdobeCqDamMacSyncImplDAMSyncServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> comAdobeCqDamMacSyncDamsyncserviceRegisteredPaths, Boolean comAdobeCqDamMacSyncDamsyncserviceSyncRenditions, Integer comAdobeCqDamMacSyncDamsyncserviceReplicateThreadWaitMs, String comAdobeCqDamMacSyncDamsyncservicePlatform, Handler<AsyncResult<ComAdobeCqDamMacSyncImplDAMSyncServiceImplInfo>> handler);
    
    //comAdobeCqDamProcessorNuiImplNuiAssetProcessor
    void comAdobeCqDamProcessorNuiImplNuiAssetProcessor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean nuiEnabled, String nuiServiceUrl, String nuiApiKey, Handler<AsyncResult<ComAdobeCqDamProcessorNuiImplNuiAssetProcessorInfo>> handler);
    
    //comAdobeCqDamS7imagingImplIsImageServerComponent
    void comAdobeCqDamS7imagingImplIsImageServerComponent(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String tcpPort, Boolean allowRemoteAccess, String maxRenderRgnPixels, String maxMessageSize, Integer randomAccessUrlTimeout, Integer workerThreads, Handler<AsyncResult<ComAdobeCqDamS7imagingImplIsImageServerComponentInfo>> handler);
    
    //comAdobeCqDamS7imagingImplPsPlatformServerServlet
    void comAdobeCqDamS7imagingImplPsPlatformServerServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cacheEnable, List<String> cacheRootPaths, Integer cacheMaxSize, Integer cacheMaxEntries, Handler<AsyncResult<ComAdobeCqDamS7imagingImplPsPlatformServerServletInfo>> handler);
    
    //comAdobeCqDamWebdavImplIoAssetIOHandler
    void comAdobeCqDamWebdavImplIoAssetIOHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String pathPrefix, Boolean createVersion, Handler<AsyncResult<ComAdobeCqDamWebdavImplIoAssetIOHandlerInfo>> handler);
    
    //comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob
    void comAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJob(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamWebdavVersionLinkingEnable, Integer cqDamWebdavVersionLinkingSchedulerPeriod, Integer cqDamWebdavVersionLinkingStagingTimeout, Handler<AsyncResult<ComAdobeCqDamWebdavImplIoDamWebdavVersionLinkingJobInfo>> handler);
    
    //comAdobeCqDamWebdavImplIoSpecialFilesHandler
    void comAdobeCqDamWebdavImplIoSpecialFilesHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> comDayCqDamCoreImplIoSpecialFilesHandlerFilepatters, Handler<AsyncResult<ComAdobeCqDamWebdavImplIoSpecialFilesHandlerInfo>> handler);
    
    //comAdobeCqDeserfwImplDeserializationFirewallImpl
    void comAdobeCqDeserfwImplDeserializationFirewallImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> firewallDeserializationWhitelist, List<String> firewallDeserializationBlacklist, String firewallDeserializationDiagnostics, Handler<AsyncResult<ComAdobeCqDeserfwImplDeserializationFirewallImplInfo>> handler);
    
    //comAdobeCqDtmImplServiceDTMWebServiceImpl
    void comAdobeCqDtmImplServiceDTMWebServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer connectionTimeout, Integer socketTimeout, Handler<AsyncResult<ComAdobeCqDtmImplServiceDTMWebServiceImplInfo>> handler);
    
    //comAdobeCqDtmImplServletsDTMDeployHookServlet
    void comAdobeCqDtmImplServletsDTMDeployHookServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> dtmStagingIpWhitelist, List<String> dtmProductionIpWhitelist, Handler<AsyncResult<ComAdobeCqDtmImplServletsDTMDeployHookServletInfo>> handler);
    
    //comAdobeCqDtmReactorImplServiceWebServiceImpl
    void comAdobeCqDtmReactorImplServiceWebServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String endpointUri, Integer connectionTimeout, Integer socketTimeout, Handler<AsyncResult<ComAdobeCqDtmReactorImplServiceWebServiceImplInfo>> handler);
    
    //comAdobeCqExperiencelogImplExperienceLogConfigServlet
    void comAdobeCqExperiencelogImplExperienceLogConfigServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, List<String> disabledForGroups, Handler<AsyncResult<ComAdobeCqExperiencelogImplExperienceLogConfigServletInfo>> handler);
    
    //comAdobeCqHcContentPackagesHealthCheck
    void comAdobeCqHcContentPackagesHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String hcName, List<String> hcTags, String hcMbeanName, List<String> packageNames, Handler<AsyncResult<ComAdobeCqHcContentPackagesHealthCheckInfo>> handler);
    
    //comAdobeCqHistoryImplHistoryRequestFilter
    void comAdobeCqHistoryImplHistoryRequestFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> historyRequestFilterExcludedSelectors, List<String> historyRequestFilterExcludedExtensions, Handler<AsyncResult<ComAdobeCqHistoryImplHistoryRequestFilterInfo>> handler);
    
    //comAdobeCqHistoryImplHistoryServiceImpl
    void comAdobeCqHistoryImplHistoryServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> historyServiceResourceTypes, List<String> historyServicePathFilter, Handler<AsyncResult<ComAdobeCqHistoryImplHistoryServiceImplInfo>> handler);
    
    //comAdobeCqInboxImplTypeproviderItemTypeProvider
    void comAdobeCqInboxImplTypeproviderItemTypeProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> inboxImplTypeproviderRegistrypaths, List<String> inboxImplTypeproviderLegacypaths, String inboxImplTypeproviderDefaulturlFailureitem, String inboxImplTypeproviderDefaulturlWorkitem, String inboxImplTypeproviderDefaulturlTask, Handler<AsyncResult<ComAdobeCqInboxImplTypeproviderItemTypeProviderInfo>> handler);
    
    //comAdobeCqProjectsImplServletProjectImageServlet
    void comAdobeCqProjectsImplServletProjectImageServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String imageQuality, String imageSupportedResolutions, Handler<AsyncResult<ComAdobeCqProjectsImplServletProjectImageServletInfo>> handler);
    
    //comAdobeCqProjectsPurgeScheduler
    void comAdobeCqProjectsPurgeScheduler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String scheduledpurgeName, Boolean scheduledpurgePurgeActive, List<String> scheduledpurgeTemplates, Boolean scheduledpurgePurgeGroups, Boolean scheduledpurgePurgeAssets, Boolean scheduledpurgeTerminateRunningWorkflows, Integer scheduledpurgeDaysold, Integer scheduledpurgeSaveThreshold, Handler<AsyncResult<ComAdobeCqProjectsPurgeSchedulerInfo>> handler);
    
    //comAdobeCqScheduledExporterImplScheduledExporterImpl
    void comAdobeCqScheduledExporterImplScheduledExporterImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> includePaths, String exporterUser, Handler<AsyncResult<ComAdobeCqScheduledExporterImplScheduledExporterImplInfo>> handler);
    
    //comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl
    void comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String comAdobeCqScreensAnalyticsImplUrl, String comAdobeCqScreensAnalyticsImplApikey, String comAdobeCqScreensAnalyticsImplProject, String comAdobeCqScreensAnalyticsImplEnvironment, Integer comAdobeCqScreensAnalyticsImplSendFrequency, Handler<AsyncResult<ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplInfo>> handler);
    
    //comAdobeCqScreensDeviceImplDeviceService
    void comAdobeCqScreensDeviceImplDeviceService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer comAdobeAemScreensPlayerPingfrequency, String comAdobeAemScreensDevicePaswordSpecialchars, Integer comAdobeAemScreensDevicePaswordMinlowercasechars, Integer comAdobeAemScreensDevicePaswordMinuppercasechars, Integer comAdobeAemScreensDevicePaswordMinnumberchars, Integer comAdobeAemScreensDevicePaswordMinspecialchars, Integer comAdobeAemScreensDevicePaswordMinlength, Handler<AsyncResult<ComAdobeCqScreensDeviceImplDeviceServiceInfo>> handler);
    
    //comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl
    void comAdobeCqScreensDeviceRegistrationImplRegistrationServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer deviceRegistrationTimeout, Handler<AsyncResult<ComAdobeCqScreensDeviceRegistrationImplRegistrationServiceImplInfo>> handler);
    
    //comAdobeCqScreensImplHandlerChannelsUpdateHandler
    void comAdobeCqScreensImplHandlerChannelsUpdateHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqPagesupdatehandlerImageresourcetypes, List<String> cqPagesupdatehandlerProductresourcetypes, List<String> cqPagesupdatehandlerVideoresourcetypes, List<String> cqPagesupdatehandlerDynamicsequenceresourcetypes, List<String> cqPagesupdatehandlerPreviewmodepaths, Handler<AsyncResult<ComAdobeCqScreensImplHandlerChannelsUpdateHandlerInfo>> handler);
    
    //comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob
    void comAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJob(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, Handler<AsyncResult<ComAdobeCqScreensImplJobsDistributedDevicesStatiUpdateJobInfo>> handler);
    
    //comAdobeCqScreensImplRemoteImplDistributedHttpClientImpl
    void comAdobeCqScreensImplRemoteImplDistributedHttpClientImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer comAdobeAemScreensImplRemoteRequestTimeout, Handler<AsyncResult<ComAdobeCqScreensImplRemoteImplDistributedHttpClientImplInfo>> handler);
    
    //comAdobeCqScreensImplScreensChannelPostProcessor
    void comAdobeCqScreensImplScreensChannelPostProcessor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> screensChannelsPropertiesToRemove, Handler<AsyncResult<ComAdobeCqScreensImplScreensChannelPostProcessorInfo>> handler);
    
    //comAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl
    void comAdobeCqScreensMonitoringImplScreensMonitoringServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath, String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency, Integer comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout, String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients, String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver, Integer comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport, Boolean comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls, String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername, String comAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword, Handler<AsyncResult<ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo>> handler);
    
    //comAdobeCqScreensMqActivemqImplArtemisJMSProvider
    void comAdobeCqScreensMqActivemqImplArtemisJMSProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, Integer globalSize, Integer maxDiskUsage, Boolean persistenceEnabled, Integer threadPoolMaxSize, Integer scheduledThreadPoolMaxSize, Integer gracefulShutdownTimeout, List<String> queues, List<String> topics, Integer addressesMaxDeliveryAttempts, Integer addressesExpiryDelay, String addressesAddressFullMessagePolicy, Integer addressesMaxSizeBytes, Integer addressesPageSizeBytes, Integer addressesPageCacheMaxSize, String clusterUser, String clusterPassword, Integer clusterCallTimeout, Integer clusterCallFailoverTimeout, Integer clusterClientFailureCheckPeriod, Integer clusterNotificationAttempts, Integer clusterNotificationInterval, Integer idCacheSize, Integer clusterConfirmationWindowSize, Integer clusterConnectionTtl, Boolean clusterDuplicateDetection, Integer clusterInitialConnectAttempts, Integer clusterMaxRetryInterval, Integer clusterMinLargeMessageSize, Integer clusterProducerWindowSize, Integer clusterReconnectAttempts, Integer clusterRetryInterval, BigDecimal clusterRetryIntervalMultiplier, Handler<AsyncResult<ComAdobeCqScreensMqActivemqImplArtemisJMSProviderInfo>> handler);
    
    //comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl
    void comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProjectPath, String comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplScheduleFrequency, Handler<AsyncResult<ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplInfo>> handler);
    
    //comAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl
    void comAdobeCqScreensOfflinecontentImplOfflineContentServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean disableSmartSync, Handler<AsyncResult<ComAdobeCqScreensOfflinecontentImplOfflineContentServiceImplInfo>> handler);
    
    //comAdobeCqScreensSegmentationImplSegmentationFeatureFlag
    void comAdobeCqScreensSegmentationImplSegmentationFeatureFlag(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enableDataTriggeredContent, Handler<AsyncResult<ComAdobeCqScreensSegmentationImplSegmentationFeatureFlagInfo>> handler);
    
    //comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh
    void comAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthCh(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeCqSecurityHcBundlesImplHtmlLibraryManagerConfigHealthChInfo>> handler);
    
    //comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck
    void comAdobeCqSecurityHcBundlesImplWcmFilterHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeCqSecurityHcBundlesImplWcmFilterHealthCheckInfo>> handler);
    
    //comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck
    void comAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, String dispatcherAddress, List<String> dispatcherFilterAllowed, List<String> dispatcherFilterBlocked, Handler<AsyncResult<ComAdobeCqSecurityHcDispatcherImplDispatcherAccessHealthCheckInfo>> handler);
    
    //comAdobeCqSecurityHcPackagesImplExampleContentHealthCheck
    void comAdobeCqSecurityHcPackagesImplExampleContentHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeCqSecurityHcPackagesImplExampleContentHealthCheckInfo>> handler);
    
    //comAdobeCqSecurityHcWebserverImplClickjackingHealthCheck
    void comAdobeCqSecurityHcWebserverImplClickjackingHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, String webserverAddress, Handler<AsyncResult<ComAdobeCqSecurityHcWebserverImplClickjackingHealthCheckInfo>> handler);
    
    //comAdobeCqSocialAccountverificationImplAccountManagementConfigIm
    void comAdobeCqSocialAccountverificationImplAccountManagementConfigIm(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enable, Integer ttl1, Integer ttl2, Handler<AsyncResult<ComAdobeCqSocialAccountverificationImplAccountManagementConfigImInfo>> handler);
    
    //comAdobeCqSocialActivitystreamsClientImplSocialActivityComponen
    void comAdobeCqSocialActivitystreamsClientImplSocialActivityComponen(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priority, Handler<AsyncResult<ComAdobeCqSocialActivitystreamsClientImplSocialActivityComponenInfo>> handler);
    
    //comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo
    void comAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCo(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priority, Handler<AsyncResult<ComAdobeCqSocialActivitystreamsClientImplSocialActivityStreamCoInfo>> handler);
    
    //comAdobeCqSocialActivitystreamsListenerImplEventListenerHandler
    void comAdobeCqSocialActivitystreamsListenerImplEventListenerHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventTopics, String eventFilter, Handler<AsyncResult<ComAdobeCqSocialActivitystreamsListenerImplEventListenerHandlerInfo>> handler);
    
    //comAdobeCqSocialActivitystreamsListenerImplModerationEventExten
    void comAdobeCqSocialActivitystreamsListenerImplModerationEventExten(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean accepted, Integer ranked, Handler<AsyncResult<ComAdobeCqSocialActivitystreamsListenerImplModerationEventExtenInfo>> handler);
    
    //comAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS
    void comAdobeCqSocialActivitystreamsListenerImplRatingEventActivityS(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer ranking, Boolean enable, Handler<AsyncResult<ComAdobeCqSocialActivitystreamsListenerImplRatingEventActivitySInfo>> handler);
    
    //comAdobeCqSocialActivitystreamsListenerImplResourceActivityStre
    void comAdobeCqSocialActivitystreamsListenerImplResourceActivityStre(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String streamPath, String streamName, Handler<AsyncResult<ComAdobeCqSocialActivitystreamsListenerImplResourceActivityStreInfo>> handler);
    
    //comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI
    void comAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsI(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxRetry, List<String> fieldWhitelist, List<String> attachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialCalendarClientEndpointsImplCalendarOperationsIInfo>> handler);
    
    //comAdobeCqSocialCalendarClientOperationextensionsEventAttachmen
    void comAdobeCqSocialCalendarClientOperationextensionsEventAttachmen(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String attachmentTypeBlacklist, Integer extensionOrder, Handler<AsyncResult<ComAdobeCqSocialCalendarClientOperationextensionsEventAttachmenInfo>> handler);
    
    //comAdobeCqSocialCalendarServletsTimeZoneServlet
    void comAdobeCqSocialCalendarServletsTimeZoneServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer timezonesExpirytime, Handler<AsyncResult<ComAdobeCqSocialCalendarServletsTimeZoneServletInfo>> handler);
    
    //comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent
    void comAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEvent(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer ranking, Handler<AsyncResult<ComAdobeCqSocialCommonsCommentsEndpointsImplCommentDeleteEventInfo>> handler);
    
    //comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe
    void comAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSe(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, List<String> attachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialCommonsCommentsEndpointsImplCommentOperationSeInfo>> handler);
    
    //comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati
    void comAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperati(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, List<String> attachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialCommonsCommentsEndpointsImplTranslationOperatiInfo>> handler);
    
    //comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC
    void comAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialC(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer numUserLimit, Handler<AsyncResult<ComAdobeCqSocialCommonsCommentsListingImplSearchCommentSocialCInfo>> handler);
    
    //comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos
    void comAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPos(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enableScheduledPostsSearch, Integer numberOfMinutes, Integer maxSearchLimit, Handler<AsyncResult<ComAdobeCqSocialCommonsCommentsSchedulerImplSearchScheduledPosInfo>> handler);
    
    //comAdobeCqSocialCommonsCorsCORSAuthenticationFilter
    void comAdobeCqSocialCommonsCorsCORSAuthenticationFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean corsEnabling, Handler<AsyncResult<ComAdobeCqSocialCommonsCorsCORSAuthenticationFilterInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider
    void comAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priorityOrder, List<String> replyEmailPatterns, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplAndroidEmailClientProviderInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl
    void comAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String contextPath, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplCommentEmailBuilderImplInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener
    void comAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventTopics, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplCommentEmailEventListenerInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider
    void comAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priorityOrder, List<String> replyEmailPatterns, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplCustomEmailClientProviderInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp
    void comAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImp(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String patternTime, String patternNewline, String patternDayOfMonth, String patternMonth, String patternYear, String patternDate, String patternDateTime, String patternEmail, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp
    void comAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImp(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String emailName, Boolean emailCreatePostFromReply, String emailAddCommentIdTo, Integer emailSubjectMaximumLength, String emailReplyToAddress, String emailReplyToDelimiter, String emailTrackerIdPrefixInSubject, String emailTrackerIdPrefixInBody, Boolean emailAsHTML, String emailDefaultUserName, String emailTemplatesRootPath, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter
    void comAdobeCqSocialCommonsEmailreplyImplEmailReplyImporter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String connectProtocol, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplEmailReplyImporterInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider
    void comAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priorityOrder, List<String> replyEmailPatterns, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplGmailEmailClientProviderInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider
    void comAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priorityOrder, List<String> replyEmailPatterns, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplIOSEmailClientProviderInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider
    void comAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priorityOrder, List<String> replyEmailPatterns, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplMacmailEmailClientProviderInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider
    void comAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priorityOrder, List<String> replyEmailPatterns, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplOutLookEmailClientProviderInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider
    void comAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> replyEmailPatterns, Integer priorityOrder, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplUnknownEmailClientProviderInfo>> handler);
    
    //comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider
    void comAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priorityOrder, List<String> replyEmailPatterns, Handler<AsyncResult<ComAdobeCqSocialCommonsEmailreplyImplYahooEmailClientProviderInfo>> handler);
    
    //comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload
    void comAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUpload(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer numberOfDays, Integer ageOfFile, Handler<AsyncResult<ComAdobeCqSocialCommonsMaintainanceImplDeleteTempUGCImageUploadInfo>> handler);
    
    //comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl
    void comAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventTopics, String eventFilter, List<String> verbs, Handler<AsyncResult<ComAdobeCqSocialCommonsUgclimiterImplUGCLimiterServiceImplInfo>> handler);
    
    //comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit
    void comAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimit(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enable, Integer ugCLimit, Integer ugcLimitDuration, List<String> domains, List<String> toList, Handler<AsyncResult<ComAdobeCqSocialCommonsUgclimitsconfigImplCommunityUserUGCLimitInfo>> handler);
    
    //comAdobeCqSocialConnectOauthImplFacebookProviderImpl
    void comAdobeCqSocialConnectOauthImplFacebookProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthProviderId, String oauthCloudConfigRoot, String providerConfigRoot, Boolean providerConfigCreateTagsEnabled, String providerConfigUserFolder, Boolean providerConfigFacebookFetchFields, List<String> providerConfigFacebookFields, Boolean providerConfigRefreshUserdataEnabled, Handler<AsyncResult<ComAdobeCqSocialConnectOauthImplFacebookProviderImplInfo>> handler);
    
    //comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle
    void comAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandle(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> path, Integer serviceRanking, Handler<AsyncResult<ComAdobeCqSocialConnectOauthImplSocialOAuthAuthenticationHandleInfo>> handler);
    
    //comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper
    void comAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapper(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> facebook, List<String> twitter, String providerConfigUserFolder, Handler<AsyncResult<ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperInfo>> handler);
    
    //comAdobeCqSocialConnectOauthImplTwitterProviderImpl
    void comAdobeCqSocialConnectOauthImplTwitterProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthProviderId, String oauthCloudConfigRoot, String providerConfigRoot, String providerConfigUserFolder, Boolean providerConfigTwitterEnableParams, List<String> providerConfigTwitterParams, Boolean providerConfigRefreshUserdataEnabled, Handler<AsyncResult<ComAdobeCqSocialConnectOauthImplTwitterProviderImplInfo>> handler);
    
    //comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen
    void comAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmen(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqSocialContentFragmentsServicesEnabled, Integer cqSocialContentFragmentsServicesWaitTimeSeconds, Handler<AsyncResult<ComAdobeCqSocialContentFragmentsServicesImplCommunitiesFragmenInfo>> handler);
    
    //comAdobeCqSocialDatastoreAsImplASResourceProviderFactory
    void comAdobeCqSocialDatastoreAsImplASResourceProviderFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String versionId, Boolean cacheOn, Integer concurrencyLevel, Integer cacheStartSize, Integer cacheTtl, Integer cacheSize, Integer timeLimit, Handler<AsyncResult<ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryInfo>> handler);
    
    //comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory
    void comAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String solrZkTimeout, String solrCommit, Boolean cacheOn, Integer concurrencyLevel, Integer cacheStartSize, Integer cacheTtl, Integer cacheSize, Handler<AsyncResult<ComAdobeCqSocialDatastoreOpImplSocialMSResourceProviderFactoryInfo>> handler);
    
    //comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor
    void comAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String solrZkTimeout, String solrCommit, Boolean cacheOn, Integer concurrencyLevel, Integer cacheStartSize, Integer cacheTtl, Integer cacheSize, Handler<AsyncResult<ComAdobeCqSocialDatastoreRdbImplSocialRDBResourceProviderFactorInfo>> handler);
    
    //comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF
    void comAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorF(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean isMemberCheck, Handler<AsyncResult<ComAdobeCqSocialEnablementAdaptorsEnablementLearningPathAdaptorFInfo>> handler);
    
    //comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto
    void comAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFacto(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean isMemberCheck, Handler<AsyncResult<ComAdobeCqSocialEnablementAdaptorsEnablementResourceAdaptorFactoInfo>> handler);
    
    //comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL
    void comAdobeCqSocialEnablementLearningpathEndpointsImplEnablementL(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, Handler<AsyncResult<ComAdobeCqSocialEnablementLearningpathEndpointsImplEnablementLInfo>> handler);
    
    //comAdobeCqSocialEnablementResourceEndpointsImplEnablementResou
    void comAdobeCqSocialEnablementResourceEndpointsImplEnablementResou(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, Handler<AsyncResult<ComAdobeCqSocialEnablementResourceEndpointsImplEnablementResouInfo>> handler);
    
    //comAdobeCqSocialEnablementServicesImplAuthorMarkerImpl
    void comAdobeCqSocialEnablementServicesImplAuthorMarkerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, Handler<AsyncResult<ComAdobeCqSocialEnablementServicesImplAuthorMarkerImplInfo>> handler);
    
    //comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe
    void comAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGe(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingServletSelectors, String slingServletExtensions, Handler<AsyncResult<ComAdobeCqSocialFilelibraryClientEndpointsFilelibraryDownloadGeInfo>> handler);
    
    //comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera
    void comAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOpera(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, List<String> attachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialFilelibraryClientEndpointsImplFileLibraryOperaInfo>> handler);
    
    //comAdobeCqSocialForumClientEndpointsImplForumOperationsService
    void comAdobeCqSocialForumClientEndpointsImplForumOperationsService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, List<String> attachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialForumClientEndpointsImplForumOperationsServiceInfo>> handler);
    
    //comAdobeCqSocialForumDispatcherImplFlushOperations
    void comAdobeCqSocialForumDispatcherImplFlushOperations(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer extensionOrder, Boolean flushForumontopic, Handler<AsyncResult<ComAdobeCqSocialForumDispatcherImplFlushOperationsInfo>> handler);
    
    //comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen
    void comAdobeCqSocialGroupClientImplCommunityGroupCollectionComponen(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean groupListingPaginationEnable, Boolean groupListingLazyloadingEnable, Integer pageSize, Integer priority, Handler<AsyncResult<ComAdobeCqSocialGroupClientImplCommunityGroupCollectionComponenInfo>> handler);
    
    //comAdobeCqSocialGroupImplGroupServiceImpl
    void comAdobeCqSocialGroupImplGroupServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxWaitTime, Integer minWaitBetweenRetries, Handler<AsyncResult<ComAdobeCqSocialGroupImplGroupServiceImplInfo>> handler);
    
    //comAdobeCqSocialHandlebarsGuavaTemplateCacheImpl
    void comAdobeCqSocialHandlebarsGuavaTemplateCacheImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean parameterGuavaCacheEnabled, String parameterGuavaCacheParams, Boolean parameterGuavaCacheReload, Integer serviceRanking, Handler<AsyncResult<ComAdobeCqSocialHandlebarsGuavaTemplateCacheImplInfo>> handler);
    
    //comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS
    void comAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsS(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, List<String> attachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialIdeationClientEndpointsImplIdeationOperationsSInfo>> handler);
    
    //comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer
    void comAdobeCqSocialJournalClientEndpointsImplJournalOperationsSer(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, List<String> attachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialJournalClientEndpointsImplJournalOperationsSerInfo>> handler);
    
    //comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile
    void comAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfile(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, Handler<AsyncResult<ComAdobeCqSocialMembersEndpointsImplCommunityMemberGroupProfileInfo>> handler);
    
    //comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO
    void comAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileO(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, Handler<AsyncResult<ComAdobeCqSocialMembersEndpointsImplCommunityMemberUserProfileOInfo>> handler);
    
    //comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF
    void comAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentF(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer everyoneLimit, Integer priority, Handler<AsyncResult<ComAdobeCqSocialMembersImplCommunityMemberGroupProfileComponentFInfo>> handler);
    
    //comAdobeCqSocialMessagingClientEndpointsImplMessagingOperation
    void comAdobeCqSocialMessagingClientEndpointsImplMessagingOperation(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> messageProperties, Integer messageBoxSizeLimit, Integer messageCountLimit, Boolean notifyFailure, String failureMessageFrom, String failureTemplatePath, Integer maxRetries, Integer minWaitBetweenRetries, Integer countUpdatePoolSize, String inboxPath, String sentitemsPath, Boolean supportAttachments, Boolean supportGroupMessaging, Integer maxTotalRecipients, Integer batchSize, Integer maxTotalAttachmentSize, List<String> attachmentTypeBlacklist, List<String> allowedAttachmentTypes, String serviceSelector, List<String> fieldWhitelist, Handler<AsyncResult<ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationInfo>> handler);
    
    //comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen
    void comAdobeCqSocialModerationDashboardApiFilterGroupSocialComponen(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> resourceTypeFilters, Integer priority, Handler<AsyncResult<ComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenInfo>> handler);
    
    //comAdobeCqSocialModerationDashboardApiModerationDashboardSocial
    void comAdobeCqSocialModerationDashboardApiModerationDashboardSocial(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priority, Handler<AsyncResult<ComAdobeCqSocialModerationDashboardApiModerationDashboardSocialInfo>> handler);
    
    //comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen
    void comAdobeCqSocialModerationDashboardApiUserDetailsSocialComponen(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priority, Handler<AsyncResult<ComAdobeCqSocialModerationDashboardApiUserDetailsSocialComponenInfo>> handler);
    
    //comAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci
    void comAdobeCqSocialModerationDashboardInternalImplFilterGroupSoci(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> resourceTypeFilters, Integer priority, Handler<AsyncResult<ComAdobeCqSocialModerationDashboardInternalImplFilterGroupSociInfo>> handler);
    
    //comAdobeCqSocialNotificationsImplMentionsRouter
    void comAdobeCqSocialNotificationsImplMentionsRouter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventTopics, String eventFilter, Handler<AsyncResult<ComAdobeCqSocialNotificationsImplMentionsRouterInfo>> handler);
    
    //comAdobeCqSocialNotificationsImplNotificationManagerImpl
    void comAdobeCqSocialNotificationsImplNotificationManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxUnreadNotificationCount, Handler<AsyncResult<ComAdobeCqSocialNotificationsImplNotificationManagerImplInfo>> handler);
    
    //comAdobeCqSocialNotificationsImplNotificationsRouter
    void comAdobeCqSocialNotificationsImplNotificationsRouter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventTopics, String eventFilter, Handler<AsyncResult<ComAdobeCqSocialNotificationsImplNotificationsRouterInfo>> handler);
    
    //comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic
    void comAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServic(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, List<String> attachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialQnaClientEndpointsImplQnaForumOperationsServicInfo>> handler);
    
    //comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI
    void comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportI(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqSocialReportingAnalyticsPollingImporterInterval, Integer cqSocialReportingAnalyticsPollingImporterPageSize, Handler<AsyncResult<ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportIInfo>> handler);
    
    //comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM
    void comAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportM(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer reportFetchDelay, Handler<AsyncResult<ComAdobeCqSocialReportingAnalyticsServicesImplAnalyticsReportMInfo>> handler);
    
    //comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS
    void comAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportS(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqSocialConsoleAnalyticsSitesMapping, Integer priority, Handler<AsyncResult<ComAdobeCqSocialReportingAnalyticsServicesImplSiteTrendReportSInfo>> handler);
    
    //comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi
    void comAdobeCqSocialReviewClientEndpointsImplReviewOperationsServi(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, List<String> attachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialReviewClientEndpointsImplReviewOperationsServiInfo>> handler);
    
    //comAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet
    void comAdobeCqSocialScfCoreOperationsImplSocialOperationsServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingServletSelectors, String slingServletExtensions, Handler<AsyncResult<ComAdobeCqSocialScfCoreOperationsImplSocialOperationsServletInfo>> handler);
    
    //comAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet
    void comAdobeCqSocialScfEndpointsImplDefaultSocialGetServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> slingServletSelectors, String slingServletExtensions, Handler<AsyncResult<ComAdobeCqSocialScfEndpointsImplDefaultSocialGetServletInfo>> handler);
    
    //comAdobeCqSocialScoringImplScoringEventListener
    void comAdobeCqSocialScoringImplScoringEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventTopics, String eventFilter, Handler<AsyncResult<ComAdobeCqSocialScoringImplScoringEventListenerInfo>> handler);
    
    //comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl
    void comAdobeCqSocialServiceusersInternalImplServiceUserWrapperImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enableFallback, Handler<AsyncResult<ComAdobeCqSocialServiceusersInternalImplServiceUserWrapperImplInfo>> handler);
    
    //comAdobeCqSocialSiteEndpointsImplSiteOperationService
    void comAdobeCqSocialSiteEndpointsImplSiteOperationService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fieldWhitelist, List<String> sitePathFilters, String sitePackageGroup, Handler<AsyncResult<ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceInfo>> handler);
    
    //comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm
    void comAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceIm(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqSocialConsoleAnalyticsComponents, Handler<AsyncResult<ComAdobeCqSocialSiteImplAnalyticsComponentConfigurationServiceImInfo>> handler);
    
    //comAdobeCqSocialSiteImplSiteConfiguratorImpl
    void comAdobeCqSocialSiteImplSiteConfiguratorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> componentsUsingTags, Handler<AsyncResult<ComAdobeCqSocialSiteImplSiteConfiguratorImplInfo>> handler);
    
    //comAdobeCqSocialSrpImplSocialSolrConnector
    void comAdobeCqSocialSrpImplSocialSolrConnector(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String srpType, Handler<AsyncResult<ComAdobeCqSocialSrpImplSocialSolrConnectorInfo>> handler);
    
    //comAdobeCqSocialSyncImplDiffChangesObserver
    void comAdobeCqSocialSyncImplDiffChangesObserver(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, String agentName, String diffPath, String propertyNames, Handler<AsyncResult<ComAdobeCqSocialSyncImplDiffChangesObserverInfo>> handler);
    
    //comAdobeCqSocialSyncImplGroupSyncListenerImpl
    void comAdobeCqSocialSyncImplGroupSyncListenerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> nodetypes, List<String> ignorableprops, String ignorablenodes, Boolean enabled, String distfolders, Handler<AsyncResult<ComAdobeCqSocialSyncImplGroupSyncListenerImplInfo>> handler);
    
    //comAdobeCqSocialSyncImplPublisherSyncServiceImpl
    void comAdobeCqSocialSyncImplPublisherSyncServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> activeRunModes, Handler<AsyncResult<ComAdobeCqSocialSyncImplPublisherSyncServiceImplInfo>> handler);
    
    //comAdobeCqSocialSyncImplUserSyncListenerImpl
    void comAdobeCqSocialSyncImplUserSyncListenerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> nodetypes, List<String> ignorableprops, List<String> ignorablenodes, Boolean enabled, List<String> distfolders, Handler<AsyncResult<ComAdobeCqSocialSyncImplUserSyncListenerImplInfo>> handler);
    
    //comAdobeCqSocialTranslationImplTranslationServiceConfigManager
    void comAdobeCqSocialTranslationImplTranslationServiceConfigManager(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String translateLanguage, String translateDisplay, Boolean translateAttribution, String translateCaching, String translateSmartRendering, String translateCachingDuration, String translateSessionSaveInterval, String translateSessionSaveBatchLimit, Handler<AsyncResult<ComAdobeCqSocialTranslationImplTranslationServiceConfigManagerInfo>> handler);
    
    //comAdobeCqSocialTranslationImplUGCLanguageDetector
    void comAdobeCqSocialTranslationImplUGCLanguageDetector(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventTopics, String eventFilter, List<String> translateListenerType, List<String> translatePropertyList, Integer poolSize, Integer maxPoolSize, Integer queueSize, Integer keepAliveTime, Handler<AsyncResult<ComAdobeCqSocialTranslationImplUGCLanguageDetectorInfo>> handler);
    
    //comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl
    void comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer threadPoolSize, Integer delayTime, Integer workerSleepTime, Handler<AsyncResult<ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplInfo>> handler);
    
    //comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl
    void comAdobeCqSocialUgcbaseImplAysncReverseReplicatorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer poolSize, Integer maxPoolSize, Integer queueSize, Integer keepAliveTime, Handler<AsyncResult<ComAdobeCqSocialUgcbaseImplAysncReverseReplicatorImplInfo>> handler);
    
    //comAdobeCqSocialUgcbaseImplPublisherConfigurationImpl
    void comAdobeCqSocialUgcbaseImplPublisherConfigurationImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean isPrimaryPublisher, Handler<AsyncResult<ComAdobeCqSocialUgcbaseImplPublisherConfigurationImplInfo>> handler);
    
    //comAdobeCqSocialUgcbaseImplSocialUtilsImpl
    void comAdobeCqSocialUgcbaseImplSocialUtilsImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean legacyCloudUGCPathMapping, Handler<AsyncResult<ComAdobeCqSocialUgcbaseImplSocialUtilsImplInfo>> handler);
    
    //comAdobeCqSocialUgcbaseModerationImplAutoModerationImpl
    void comAdobeCqSocialUgcbaseModerationImplAutoModerationImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> automoderationSequence, Boolean automoderationOnfailurestop, Handler<AsyncResult<ComAdobeCqSocialUgcbaseModerationImplAutoModerationImplInfo>> handler);
    
    //comAdobeCqSocialUgcbaseModerationImplSentimentProcess
    void comAdobeCqSocialUgcbaseModerationImplSentimentProcess(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> watchwordsPositive, List<String> watchwordsNegative, String watchwordsPath, String sentimentPath, Handler<AsyncResult<ComAdobeCqSocialUgcbaseModerationImplSentimentProcessInfo>> handler);
    
    //comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli
    void comAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackli(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> defaultAttachmentTypeBlacklist, List<String> baselineAttachmentTypeBlacklist, Handler<AsyncResult<ComAdobeCqSocialUgcbaseSecurityImplDefaultAttachmentTypeBlackliInfo>> handler);
    
    //comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl
    void comAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> parameterWhitelist, List<String> parameterWhitelistPrefixes, List<String> binaryParameterWhitelist, List<String> modifierWhitelist, List<String> operationWhitelist, List<String> operationWhitelistPrefixes, List<String> typehintWhitelist, List<String> resourcetypeWhitelist, Handler<AsyncResult<ComAdobeCqSocialUgcbaseSecurityImplSaferSlingPostValidatorImplInfo>> handler);
    
    //comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet
    void comAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingServletExtensions, String slingServletPaths, String slingServletMethods, Handler<AsyncResult<ComAdobeCqSocialUserEndpointsImplUsersGroupFromPublishServletInfo>> handler);
    
    //comAdobeCqSocialUserImplTransportHttpToPublisher
    void comAdobeCqSocialUserImplTransportHttpToPublisher(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enable, List<String> agentConfiguration, String contextPath, List<String> disabledCipherSuites, List<String> enabledCipherSuites, Handler<AsyncResult<ComAdobeCqSocialUserImplTransportHttpToPublisherInfo>> handler);
    
    //comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact
    void comAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFact(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> resourceTypes, Handler<AsyncResult<ComAdobeCqUiWcmCommonsInternalServletsRteRTEFilterServletFactInfo>> handler);
    
    //comAdobeCqUpgradesCleanupImplUpgradeContentCleanup
    void comAdobeCqUpgradesCleanupImplUpgradeContentCleanup(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> deletePathRegexps, String deleteSql2Query, Handler<AsyncResult<ComAdobeCqUpgradesCleanupImplUpgradeContentCleanupInfo>> handler);
    
    //comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup
    void comAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanup(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> deleteNameRegexps, Handler<AsyncResult<ComAdobeCqUpgradesCleanupImplUpgradeInstallFolderCleanupInfo>> handler);
    
    //comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService
    void comAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer threshold, String jobTopicName, Boolean emailEnabled, Handler<AsyncResult<ComAdobeCqWcmJobsAsyncImplAsyncDeleteConfigProviderServiceInfo>> handler);
    
    //comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask
    void comAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, Integer jobPurgeThreshold, Integer jobPurgeMaxJobs, Handler<AsyncResult<ComAdobeCqWcmJobsAsyncImplAsyncJobCleanUpTaskInfo>> handler);
    
    //comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService
    void comAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer threshold, String jobTopicName, Boolean emailEnabled, Handler<AsyncResult<ComAdobeCqWcmJobsAsyncImplAsyncMoveConfigProviderServiceInfo>> handler);
    
    //comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService
    void comAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer threshold, String jobTopicName, Boolean emailEnabled, Handler<AsyncResult<ComAdobeCqWcmJobsAsyncImplAsyncPageMoveConfigProviderServiceInfo>> handler);
    
    //comAdobeCqWcmLaunchesImplLaunchesEventHandler
    void comAdobeCqWcmLaunchesImplLaunchesEventHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventFilter, Integer launchesEventhandlerThreadpoolMaxsize, String launchesEventhandlerThreadpoolPriority, Boolean launchesEventhandlerUpdatelastmodification, Handler<AsyncResult<ComAdobeCqWcmLaunchesImplLaunchesEventHandlerInfo>> handler);
    
    //comAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator
    void comAdobeCqWcmMobileQrcodeServletQRCodeImageGenerator(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqWcmQrcodeServletWhitelist, Handler<AsyncResult<ComAdobeCqWcmMobileQrcodeServletQRCodeImageGeneratorInfo>> handler);
    
    //comAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl
    void comAdobeCqWcmStyleInternalComponentStyleInfoCacheImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer size, Handler<AsyncResult<ComAdobeCqWcmStyleInternalComponentStyleInfoCacheImplInfo>> handler);
    
    //comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl
    void comAdobeCqWcmTranslationImplTranslationPlatformConfigurationImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String syncTranslationStateSchedulingFormat, String schedulingRepeatTranslationSchedulingFormat, String syncTranslationStateLockTimeoutInMinutes, String exportFormat, Handler<AsyncResult<ComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplInfo>> handler);
    
    //comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService
    void comAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> portalOutboxes, String draftDataService, String draftMetadataService, String submitDataService, String submitMetadataService, String pendingSignDataService, String pendingSignMetadataService, Handler<AsyncResult<ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceInfo>> handler);
    
    //comAdobeFdFpConfigFormsPortalSchedulerService
    void comAdobeFdFpConfigFormsPortalSchedulerService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String formportalInterval, Handler<AsyncResult<ComAdobeFdFpConfigFormsPortalSchedulerServiceInfo>> handler);
    
    //comAdobeFormsCommonServiceImplDefaultDataProvider
    void comAdobeFormsCommonServiceImplDefaultDataProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> alloweddataFileLocations, Handler<AsyncResult<ComAdobeFormsCommonServiceImplDefaultDataProviderInfo>> handler);
    
    //comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp
    void comAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImp(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String tempStorageConfig, Handler<AsyncResult<ComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpInfo>> handler);
    
    //comAdobeFormsCommonServletTempCleanUpTask
    void comAdobeFormsCommonServletTempCleanUpTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, String durationForTemporaryStorage, String durationForAnonymousStorage, Handler<AsyncResult<ComAdobeFormsCommonServletTempCleanUpTaskInfo>> handler);
    
    //comAdobeGraniteAcpPlatformPlatformServlet
    void comAdobeGraniteAcpPlatformPlatformServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer queryLimit, List<String> fileTypeExtensionMap, Handler<AsyncResult<ComAdobeGraniteAcpPlatformPlatformServletInfo>> handler);
    
    //comAdobeGraniteActivitystreamsImplActivityManagerImpl
    void comAdobeGraniteActivitystreamsImplActivityManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> aggregateRelationships, Boolean aggregateDescendVirtual, Handler<AsyncResult<ComAdobeGraniteActivitystreamsImplActivityManagerImplInfo>> handler);
    
    //comAdobeGraniteAnalyzerBaseSystemStatusServlet
    void comAdobeGraniteAnalyzerBaseSystemStatusServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean disabled, Handler<AsyncResult<ComAdobeGraniteAnalyzerBaseSystemStatusServletInfo>> handler);
    
    //comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet
    void comAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean disabled, Handler<AsyncResult<ComAdobeGraniteAnalyzerScriptsCompileAllScriptsCompilerServletInfo>> handler);
    
    //comAdobeGraniteApicontrollerFilterResolverHookFactory
    void comAdobeGraniteApicontrollerFilterResolverHookFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String comAdobeCqCdnCdnRewriter, String comAdobeCqCloudConfigComponents, String comAdobeCqCloudConfigCore, String comAdobeCqCloudConfigUi, String comAdobeCqComAdobeCqEditor, String comAdobeCqComAdobeCqProjectsCore, String comAdobeCqComAdobeCqProjectsWcmCore, String comAdobeCqComAdobeCqUiCommons, String comAdobeCqComAdobeCqWcmStyle, String comAdobeCqCqActivitymapIntegration, String comAdobeCqCqContexthubCommons, String comAdobeCqCqDtm, String comAdobeCqCqHealthcheck, String comAdobeCqCqMultisiteTargeting, String comAdobeCqCqPreUpgradeCleanup, String comAdobeCqCqProductInfoProvider, String comAdobeCqCqRestSites, String comAdobeCqCqSecurityHc, String comAdobeCqDamCqDamSvgHandler, String comAdobeCqDamCqScene7Imaging, String comAdobeCqDtmReactorCore, String comAdobeCqDtmReactorUi, String comAdobeCqExpJspelResolver, String comAdobeCqInboxCqInbox, String comAdobeCqJsonSchemaParser, String comAdobeCqMediaCqMediaPublishingDpsFpCore, String comAdobeCqMobileCqMobileCaas, String comAdobeCqMobileCqMobileIndexBuilder, String comAdobeCqMobileCqMobilePhonegapBuild, String comAdobeCqMyspell, String comAdobeCqSampleWeRetailCore, String comAdobeCqScreensComAdobeCqScreensDcc, String comAdobeCqScreensComAdobeCqScreensMqCore, String comAdobeCqSocialCqSocialAsProvider, String comAdobeCqSocialCqSocialBadgingBasicImpl, String comAdobeCqSocialCqSocialBadgingImpl, String comAdobeCqSocialCqSocialCalendarImpl, String comAdobeCqSocialCqSocialContentFragmentsImpl, String comAdobeCqSocialCqSocialEnablementImpl, String comAdobeCqSocialCqSocialGraphImpl, String comAdobeCqSocialCqSocialIdeationImpl, String comAdobeCqSocialCqSocialJcrProvider, String comAdobeCqSocialCqSocialMembersImpl, String comAdobeCqSocialCqSocialMsProvider, String comAdobeCqSocialCqSocialNotificationsChannelsWeb, String comAdobeCqSocialCqSocialNotificationsImpl, String comAdobeCqSocialCqSocialRdbProvider, String comAdobeCqSocialCqSocialScfImpl, String comAdobeCqSocialCqSocialScoringBasicImpl, String comAdobeCqSocialCqSocialScoringImpl, String comAdobeCqSocialCqSocialServiceusersImpl, String comAdobeCqSocialCqSocialSrpImpl, String comAdobeCqSocialCqSocialUgcbaseImpl, String comAdobeDamCqDamCfmImpl, String comAdobeFormsFoundationFormsFoundationBase, String comAdobeGraniteApicontroller, String comAdobeGraniteAssetCore, String comAdobeGraniteAuthSso, String comAdobeGraniteBundlesHcImpl, String comAdobeGraniteCompatRouter, String comAdobeGraniteConf, String comAdobeGraniteConfUiCore, String comAdobeGraniteCors, String comAdobeGraniteCrxExplorer, String comAdobeGraniteCrxdeLite, String comAdobeGraniteCryptoConfig, String comAdobeGraniteCryptoExtension, String comAdobeGraniteCryptoFile, String comAdobeGraniteCryptoJcr, String comAdobeGraniteCsrf, String comAdobeGraniteDistributionCore, String comAdobeGraniteDropwizardMetrics, String comAdobeGraniteFragsImpl, String comAdobeGraniteGibson, String comAdobeGraniteInfocollector, String comAdobeGraniteInstallerFactoryPackages, String comAdobeGraniteJettySsl, String comAdobeGraniteJobsAsync, String comAdobeGraniteMaintenanceOak, String comAdobeGraniteMonitoringCore, String comAdobeGraniteQueries, String comAdobeGraniteReplicationHcImpl, String comAdobeGraniteRepositoryChecker, String comAdobeGraniteRepositoryHcImpl, String comAdobeGraniteRestAssets, String comAdobeGraniteSecurityUi, String comAdobeGraniteStartup, String comAdobeGraniteTagsoup, String comAdobeGraniteTaskmanagementCore, String comAdobeGraniteTaskmanagementWorkflow, String comAdobeGraniteUiClientlibsCompilerLess, String comAdobeGraniteUiClientlibsProcessorGcc, String comAdobeGraniteWebconsolePlugins, String comAdobeGraniteWorkflowConsole, String comAdobeXmpWorkerFilesNativeFragmentLinux, String comAdobeXmpWorkerFilesNativeFragmentMacosx, String comAdobeXmpWorkerFilesNativeFragmentWin, String comDayCommonsOsgiWrapperSimpleJndi, String comDayCqCqAuthhandler, String comDayCqCqCompatConfigupdate, String comDayCqCqLicensebranding, String comDayCqCqNotifcationImpl, String comDayCqCqReplicationAudit, String comDayCqCqSearchExt, String comDayCqDamCqDamAnnotationPrint, String comDayCqDamCqDamAssetUsage, String comDayCqDamCqDamS7dam, String comDayCqDamCqDamSimilaritysearch, String comDayCqDamDamWebdavSupport, String comDayCqPreUpgradeTasks, String comDayCqReplicationExtensions, String comDayCqWcmCqMsmCore, String comDayCqWcmCqWcmTranslation, String dayCommonsJrawio, String orgApacheAriesJmxWhiteboard, String orgApacheFelixHttpSslfilter, String orgApacheFelixOrgApacheFelixThreaddump, String orgApacheFelixWebconsolePluginsDs, String orgApacheFelixWebconsolePluginsEvent, String orgApacheFelixWebconsolePluginsMemoryusage, String orgApacheFelixWebconsolePluginsPackageadmin, String orgApacheJackrabbitOakAuthLdap, String orgApacheJackrabbitOakSegmentTar, String orgApacheJackrabbitOakSolrOsgi, String orgApacheSlingBundleresourceImpl, String orgApacheSlingCommonsFsclassloader, String orgApacheSlingCommonsLogWebconsole, String orgApacheSlingDatasource, String orgApacheSlingDiscoveryBase, String orgApacheSlingDiscoveryOak, String orgApacheSlingDiscoverySupport, String orgApacheSlingDistributionApi, String orgApacheSlingDistributionCore, String orgApacheSlingExtensionsWebconsolesecurityprovider, String orgApacheSlingHcWebconsole, String orgApacheSlingInstallerConsole, String orgApacheSlingInstallerProviderFile, String orgApacheSlingInstallerProviderJcr, String orgApacheSlingJcrDavex, String orgApacheSlingJcrResourcesecurity, String orgApacheSlingJmxProvider, String orgApacheSlingLaunchpadInstaller, String orgApacheSlingModelsImpl, String orgApacheSlingRepoinitParser, String orgApacheSlingResourceInventory, String orgApacheSlingResourceresolver, String orgApacheSlingScriptingJavascript, String orgApacheSlingScriptingJst, String orgApacheSlingScriptingSightlyJsProvider, String orgApacheSlingScriptingSightlyModelsProvider, String orgApacheSlingSecurity, String orgApacheSlingServletsCompat, String orgApacheSlingServletsGet, String orgApacheSlingStartupfilterDisabler, String orgApacheSlingTracer, String weRetailClientAppCore, Handler<AsyncResult<ComAdobeGraniteApicontrollerFilterResolverHookFactoryInfo>> handler);
    
    //comAdobeGraniteAuthCertImplClientCertAuthHandler
    void comAdobeGraniteAuthCertImplClientCertAuthHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, Integer serviceRanking, Handler<AsyncResult<ComAdobeGraniteAuthCertImplClientCertAuthHandlerInfo>> handler);
    
    //comAdobeGraniteAuthIms
    void comAdobeGraniteAuthIms(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String configid, String scope, Handler<AsyncResult<ComAdobeGraniteAuthImsInfo>> handler);
    
    //comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension
    void comAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtension(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthProviderId, Handler<AsyncResult<ComAdobeGraniteAuthImsImplExternalUserIdMappingProviderExtensionInfo>> handler);
    
    //comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl
    void comAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String authImsClientSecret, String customizerType, Handler<AsyncResult<ComAdobeGraniteAuthImsImplIMSAccessTokenRequestCustomizerImplInfo>> handler);
    
    //comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator
    void comAdobeGraniteAuthImsImplIMSInstanceCredentialsValidator(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthProviderId, Handler<AsyncResult<ComAdobeGraniteAuthImsImplIMSInstanceCredentialsValidatorInfo>> handler);
    
    //comAdobeGraniteAuthImsImplIMSProviderImpl
    void comAdobeGraniteAuthImsImplIMSProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthProviderId, String oauthProviderImsAuthorizationUrl, String oauthProviderImsTokenUrl, String oauthProviderImsProfileUrl, List<String> oauthProviderImsExtendedDetailsUrls, String oauthProviderImsValidateTokenUrl, String oauthProviderImsSessionProperty, String oauthProviderImsServiceTokenClientId, String oauthProviderImsServiceTokenClientSecret, String oauthProviderImsServiceToken, String imsOrgRef, List<String> imsGroupMapping, Boolean oauthProviderImsOnlyLicenseGroup, Handler<AsyncResult<ComAdobeGraniteAuthImsImplIMSProviderImplInfo>> handler);
    
    //comAdobeGraniteAuthImsImplImsConfigProviderImpl
    void comAdobeGraniteAuthImsImplImsConfigProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthConfigmanagerImsConfigid, String imsOwningEntity, String aemInstanceId, String imsServiceCode, Handler<AsyncResult<ComAdobeGraniteAuthImsImplImsConfigProviderImplInfo>> handler);
    
    //comAdobeGraniteAuthOauthAccesstokenProvider
    void comAdobeGraniteAuthOauthAccesstokenProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String authTokenProviderTitle, List<String> authTokenProviderDefaultClaims, String authTokenProviderEndpoint, String authAccessTokenRequest, String authTokenProviderKeypairAlias, Integer authTokenProviderConnTimeout, Integer authTokenProviderSoTimeout, String authTokenProviderClientId, String authTokenProviderScope, Boolean authTokenProviderReuseAccessToken, Boolean authTokenProviderRelaxedSsl, String tokenRequestCustomizerType, String authTokenValidatorType, Handler<AsyncResult<ComAdobeGraniteAuthOauthAccesstokenProviderInfo>> handler);
    
    //comAdobeGraniteAuthOauthImplBearerAuthenticationHandler
    void comAdobeGraniteAuthOauthImplBearerAuthenticationHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, List<String> oauthClientIdsAllowed, Boolean authBearerSyncIms, String authTokenRequestParameter, String oauthBearerConfigid, Boolean oauthJwtSupport, Handler<AsyncResult<ComAdobeGraniteAuthOauthImplBearerAuthenticationHandlerInfo>> handler);
    
    //comAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl
    void comAdobeGraniteAuthOauthImplDefaultTokenValidatorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String authTokenValidatorType, Handler<AsyncResult<ComAdobeGraniteAuthOauthImplDefaultTokenValidatorImplInfo>> handler);
    
    //comAdobeGraniteAuthOauthImplFacebookProviderImpl
    void comAdobeGraniteAuthOauthImplFacebookProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthProviderId, Handler<AsyncResult<ComAdobeGraniteAuthOauthImplFacebookProviderImplInfo>> handler);
    
    //comAdobeGraniteAuthOauthImplGithubProviderImpl
    void comAdobeGraniteAuthOauthImplGithubProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthProviderId, String oauthProviderGithubAuthorizationUrl, String oauthProviderGithubTokenUrl, String oauthProviderGithubProfileUrl, Handler<AsyncResult<ComAdobeGraniteAuthOauthImplGithubProviderImplInfo>> handler);
    
    //comAdobeGraniteAuthOauthImplGraniteProvider
    void comAdobeGraniteAuthOauthImplGraniteProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthProviderId, String oauthProviderGraniteAuthorizationUrl, String oauthProviderGraniteTokenUrl, String oauthProviderGraniteProfileUrl, String oauthProviderGraniteExtendedDetailsUrls, Handler<AsyncResult<ComAdobeGraniteAuthOauthImplGraniteProviderInfo>> handler);
    
    //comAdobeGraniteAuthOauthImplHelperProviderConfigManager
    void comAdobeGraniteAuthOauthImplHelperProviderConfigManager(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthCookieLoginTimeout, String oauthCookieMaxAge, Handler<AsyncResult<ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInfo>> handler);
    
    //comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal
    void comAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternal(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthCookieLoginTimeout, String oauthCookieMaxAge, Handler<AsyncResult<ComAdobeGraniteAuthOauthImplHelperProviderConfigManagerInternalInfo>> handler);
    
    //comAdobeGraniteAuthOauthImplOAuthAuthenticationHandler
    void comAdobeGraniteAuthOauthImplOAuthAuthenticationHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, Handler<AsyncResult<ComAdobeGraniteAuthOauthImplOAuthAuthenticationHandlerInfo>> handler);
    
    //comAdobeGraniteAuthOauthImplTwitterProviderImpl
    void comAdobeGraniteAuthOauthImplTwitterProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthProviderId, Handler<AsyncResult<ComAdobeGraniteAuthOauthImplTwitterProviderImplInfo>> handler);
    
    //comAdobeGraniteAuthOauthProvider
    void comAdobeGraniteAuthOauthProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthConfigId, String oauthClientId, String oauthClientSecret, List<String> oauthScope, String oauthConfigProviderId, Boolean oauthCreateUsers, String oauthUseridProperty, Boolean forceStrictUsernameMatching, Boolean oauthEncodeUserids, Boolean oauthHashUserids, String oauthCallBackUrl, Boolean oauthAccessTokenPersist, Boolean oauthAccessTokenPersistCookie, Boolean oauthCsrfStateProtection, Boolean oauthRedirectRequestParams, Boolean oauthConfigSiblingsAllow, Handler<AsyncResult<ComAdobeGraniteAuthOauthProviderInfo>> handler);
    
    //comAdobeGraniteAuthRequirementImplDefaultRequirementHandler
    void comAdobeGraniteAuthRequirementImplDefaultRequirementHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> supportedPaths, Handler<AsyncResult<ComAdobeGraniteAuthRequirementImplDefaultRequirementHandlerInfo>> handler);
    
    //comAdobeGraniteAuthSamlSamlAuthenticationHandler
    void comAdobeGraniteAuthSamlSamlAuthenticationHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> path, Integer serviceRanking, String idpUrl, String idpCertAlias, Boolean idpHttpRedirect, String serviceProviderEntityId, String assertionConsumerServiceURL, String spPrivateKeyAlias, String keyStorePassword, String defaultRedirectUrl, String userIDAttribute, Boolean useEncryption, Boolean createUser, String userIntermediatePath, Boolean addGroupMemberships, String groupMembershipAttribute, List<String> defaultGroups, String nameIdFormat, List<String> synchronizeAttributes, Boolean handleLogout, String logoutUrl, Integer clockTolerance, String digestMethod, String signatureMethod, String identitySyncType, String idpIdentifier, Handler<AsyncResult<ComAdobeGraniteAuthSamlSamlAuthenticationHandlerInfo>> handler);
    
    //comAdobeGraniteAuthSsoImplSsoAuthenticationHandler
    void comAdobeGraniteAuthSsoImplSsoAuthenticationHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, Integer serviceRanking, String jaasControlFlag, String jaasRealmName, Integer jaasRanking, List<String> headers, List<String> cookies, List<String> parameters, List<String> usermap, String format, String trustedCredentialsAttribute, Handler<AsyncResult<ComAdobeGraniteAuthSsoImplSsoAuthenticationHandlerInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplCodeCacheHealthCheck
    void comAdobeGraniteBundlesHcImplCodeCacheHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Integer minimumCodeCacheSize, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplCodeCacheHealthCheckInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck
    void comAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplDavExBundleHealthCheck
    void comAdobeGraniteBundlesHcImplDavExBundleHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplDavExBundleHealthCheckInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck
    void comAdobeGraniteBundlesHcImplInactiveBundlesHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, List<String> ignoredBundles, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplJobsHealthCheck
    void comAdobeGraniteBundlesHcImplJobsHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Integer maxQueuedJobs, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplJobsHealthCheckInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplSlingGetServletHealthCheck
    void comAdobeGraniteBundlesHcImplSlingGetServletHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplSlingGetServletHealthCheckInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck
    void comAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplSlingJavaScriptHandlerHealthCheckInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck
    void comAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplSlingJspScriptHandlerHealthCheckInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck
    void comAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplSlingReferrerFilterHealthCheckInfo>> handler);
    
    //comAdobeGraniteBundlesHcImplWebDavBundleHealthCheck
    void comAdobeGraniteBundlesHcImplWebDavBundleHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteBundlesHcImplWebDavBundleHealthCheckInfo>> handler);
    
    //comAdobeGraniteCommentsInternalCommentReplicationContentFilterFac
    void comAdobeGraniteCommentsInternalCommentReplicationContentFilterFac(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> replicateCommentResourceTypes, Handler<AsyncResult<ComAdobeGraniteCommentsInternalCommentReplicationContentFilterFacInfo>> handler);
    
    //comAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl
    void comAdobeGraniteCompatrouterImplCompatSwitchingServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> compatgroups, Boolean enabled, Handler<AsyncResult<ComAdobeGraniteCompatrouterImplCompatSwitchingServiceImplInfo>> handler);
    
    //comAdobeGraniteCompatrouterImplRoutingConfig
    void comAdobeGraniteCompatrouterImplRoutingConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String id, String compatPath, String newPath, Handler<AsyncResult<ComAdobeGraniteCompatrouterImplRoutingConfigInfo>> handler);
    
    //comAdobeGraniteCompatrouterImplSwitchMappingConfig
    void comAdobeGraniteCompatrouterImplSwitchMappingConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String group, List<String> ids, Handler<AsyncResult<ComAdobeGraniteCompatrouterImplSwitchMappingConfigInfo>> handler);
    
    //comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving
    void comAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolving(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, List<String> fallbackPaths, Handler<AsyncResult<ComAdobeGraniteConfImplRuntimeAwareConfigurationResourceResolvingInfo>> handler);
    
    //comAdobeGraniteContexthubImplContextHubImpl
    void comAdobeGraniteContexthubImplContextHubImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean comAdobeGraniteContexthubSilentMode, Boolean comAdobeGraniteContexthubShowUi, Handler<AsyncResult<ComAdobeGraniteContexthubImplContextHubImplInfo>> handler);
    
    //comAdobeGraniteCorsImplCORSPolicyImpl
    void comAdobeGraniteCorsImplCORSPolicyImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> alloworigin, List<String> alloworiginregexp, List<String> allowedpaths, List<String> exposedheaders, Integer maxage, List<String> supportedheaders, List<String> supportedmethods, Boolean supportscredentials, Handler<AsyncResult<ComAdobeGraniteCorsImplCORSPolicyImplInfo>> handler);
    
    //comAdobeGraniteCsrfImplCSRFFilter
    void comAdobeGraniteCsrfImplCSRFFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> filterMethods, Boolean filterEnableSafeUserAgents, List<String> filterSafeUserAgents, List<String> filterExcludedPaths, Handler<AsyncResult<ComAdobeGraniteCsrfImplCSRFFilterInfo>> handler);
    
    //comAdobeGraniteCsrfImplCSRFServlet
    void comAdobeGraniteCsrfImplCSRFServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer csrfTokenExpiresIn, String slingAuthRequirements, Handler<AsyncResult<ComAdobeGraniteCsrfImplCSRFServletInfo>> handler);
    
    //comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe
    void comAdobeGraniteDistributionCoreImplCryptoDistributionTransportSe(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String username, String encryptedPassword, Handler<AsyncResult<ComAdobeGraniteDistributionCoreImplCryptoDistributionTransportSeInfo>> handler);
    
    //comAdobeGraniteDistributionCoreImplDiffDiffChangesObserver
    void comAdobeGraniteDistributionCoreImplDiffDiffChangesObserver(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, String agentName, String diffPath, String observedPath, String serviceName, String propertyNames, Integer distributionDelay, String serviceUserTarget, Handler<AsyncResult<ComAdobeGraniteDistributionCoreImplDiffDiffChangesObserverInfo>> handler);
    
    //comAdobeGraniteDistributionCoreImplDiffDiffEventListener
    void comAdobeGraniteDistributionCoreImplDiffDiffEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String diffPath, String serviceName, String serviceUserTarget, Handler<AsyncResult<ComAdobeGraniteDistributionCoreImplDiffDiffEventListenerInfo>> handler);
    
    //comAdobeGraniteDistributionCoreImplDistributionToReplicationEven
    void comAdobeGraniteDistributionCoreImplDistributionToReplicationEven(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> importerName, Handler<AsyncResult<ComAdobeGraniteDistributionCoreImplDistributionToReplicationEvenInfo>> handler);
    
    //comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat
    void comAdobeGraniteDistributionCoreImplReplicationAdaptersReplicat(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String providerName, Boolean forwardRequests, Handler<AsyncResult<ComAdobeGraniteDistributionCoreImplReplicationAdaptersReplicatInfo>> handler);
    
    //comAdobeGraniteDistributionCoreImplReplicationDistributionTrans
    void comAdobeGraniteDistributionCoreImplReplicationDistributionTrans(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean forwardRequests, Handler<AsyncResult<ComAdobeGraniteDistributionCoreImplReplicationDistributionTransInfo>> handler);
    
    //comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu
    void comAdobeGraniteDistributionCoreImplTransportAccessTokenDistribu(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String serviceName, String userId, String accessTokenProviderTarget, Handler<AsyncResult<ComAdobeGraniteDistributionCoreImplTransportAccessTokenDistribuInfo>> handler);
    
    //comAdobeGraniteFragsImplCheckHttpHeaderFlag
    void comAdobeGraniteFragsImplCheckHttpHeaderFlag(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String featureName, String featureDescription, String httpHeaderName, String httpHeaderValuepattern, Handler<AsyncResult<ComAdobeGraniteFragsImplCheckHttpHeaderFlagInfo>> handler);
    
    //comAdobeGraniteFragsImplRandomFeature
    void comAdobeGraniteFragsImplRandomFeature(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String featureName, String featureDescription, String activePercentage, String cookieName, Integer cookieMaxAge, Handler<AsyncResult<ComAdobeGraniteFragsImplRandomFeatureInfo>> handler);
    
    //comAdobeGraniteHttpcacheFileFileCacheStore
    void comAdobeGraniteHttpcacheFileFileCacheStore(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String comAdobeGraniteHttpcacheFileDocumentRoot, String comAdobeGraniteHttpcacheFileIncludeHost, Handler<AsyncResult<ComAdobeGraniteHttpcacheFileFileCacheStoreInfo>> handler);
    
    //comAdobeGraniteHttpcacheImplOuterCacheFilter
    void comAdobeGraniteHttpcacheImplOuterCacheFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> comAdobeGraniteHttpcacheUrlPaths, Handler<AsyncResult<ComAdobeGraniteHttpcacheImplOuterCacheFilterInfo>> handler);
    
    //comAdobeGraniteI18nImplBundlePseudoTranslations
    void comAdobeGraniteI18nImplBundlePseudoTranslations(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> pseudoPatterns, Handler<AsyncResult<ComAdobeGraniteI18nImplBundlePseudoTranslationsInfo>> handler);
    
    //comAdobeGraniteI18nImplPreferencesLocaleResolverService
    void comAdobeGraniteI18nImplPreferencesLocaleResolverService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String securityPreferencesName, Handler<AsyncResult<ComAdobeGraniteI18nImplPreferencesLocaleResolverServiceInfo>> handler);
    
    //comAdobeGraniteInfocollectorInfoCollector
    void comAdobeGraniteInfocollectorInfoCollector(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean graniteInfocollectorIncludeThreadDumps, Boolean graniteInfocollectorIncludeHeapDump, Handler<AsyncResult<ComAdobeGraniteInfocollectorInfoCollectorInfo>> handler);
    
    //comAdobeGraniteJettySslInternalGraniteSslConnectorFactory
    void comAdobeGraniteJettySslInternalGraniteSslConnectorFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer comAdobeGraniteJettySslPort, String comAdobeGraniteJettySslKeystoreUser, String comAdobeGraniteJettySslKeystorePassword, List<String> comAdobeGraniteJettySslCiphersuitesExcluded, List<String> comAdobeGraniteJettySslCiphersuitesIncluded, String comAdobeGraniteJettySslClientCertificate, Handler<AsyncResult<ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo>> handler);
    
    //comAdobeGraniteLicenseImplLicenseCheckFilter
    void comAdobeGraniteLicenseImplLicenseCheckFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer checkInternval, List<String> excludeIds, Boolean encryptPing, Handler<AsyncResult<ComAdobeGraniteLicenseImplLicenseCheckFilterInfo>> handler);
    
    //comAdobeGraniteLoggingImplLogAnalyserImpl
    void comAdobeGraniteLoggingImplLogAnalyserImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer messagesQueueSize, List<String> loggerConfig, Integer messagesSize, Handler<AsyncResult<ComAdobeGraniteLoggingImplLogAnalyserImplInfo>> handler);
    
    //comAdobeGraniteLoggingImplLogErrorHealthCheck
    void comAdobeGraniteLoggingImplLogErrorHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteLoggingImplLogErrorHealthCheckInfo>> handler);
    
    //comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask
    void comAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean graniteMaintenanceMandatory, String jobTopics, Handler<AsyncResult<ComAdobeGraniteMaintenanceCrxImplDataStoreGarbageCollectionTaskInfo>> handler);
    
    //comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask
    void comAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jobTopics, Handler<AsyncResult<ComAdobeGraniteMaintenanceCrxImplLuceneBinariesCleanupTaskInfo>> handler);
    
    //comAdobeGraniteMaintenanceCrxImplRevisionCleanupTask
    void comAdobeGraniteMaintenanceCrxImplRevisionCleanupTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fullGcDays, Handler<AsyncResult<ComAdobeGraniteMaintenanceCrxImplRevisionCleanupTaskInfo>> handler);
    
    //comAdobeGraniteMonitoringImplScriptConfigImpl
    void comAdobeGraniteMonitoringImplScriptConfigImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String scriptFilename, String scriptDisplay, String scriptPath, List<String> scriptPlatform, Integer interval, String jmxdomain, Handler<AsyncResult<ComAdobeGraniteMonitoringImplScriptConfigImplInfo>> handler);
    
    //comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan
    void comAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHan(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, String jaasControlFlag, String jaasRealmName, Integer jaasRanking, Boolean oauthOfflineValidation, Handler<AsyncResult<ComAdobeGraniteOauthServerAuthImplOAuth2ServerAuthenticationHanInfo>> handler);
    
    //comAdobeGraniteOauthServerImplAccessTokenCleanupTask
    void comAdobeGraniteOauthServerImplAccessTokenCleanupTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, Handler<AsyncResult<ComAdobeGraniteOauthServerImplAccessTokenCleanupTaskInfo>> handler);
    
    //comAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet
    void comAdobeGraniteOauthServerImplOAuth2ClientRevocationServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean oauthClientRevocationActive, Handler<AsyncResult<ComAdobeGraniteOauthServerImplOAuth2ClientRevocationServletInfo>> handler);
    
    //comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet
    void comAdobeGraniteOauthServerImplOAuth2RevocationEndpointServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingServletPaths, Boolean oauthRevocationActive, Handler<AsyncResult<ComAdobeGraniteOauthServerImplOAuth2RevocationEndpointServletInfo>> handler);
    
    //comAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet
    void comAdobeGraniteOauthServerImplOAuth2TokenEndpointServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String oauthIssuer, String oauthAccessTokenExpiresIn, String osgiHttpWhiteboardServletPattern, String osgiHttpWhiteboardContextSelect, Handler<AsyncResult<ComAdobeGraniteOauthServerImplOAuth2TokenEndpointServletInfo>> handler);
    
    //comAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet
    void comAdobeGraniteOauthServerImplOAuth2TokenRevocationServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean oauthTokenRevocationActive, Handler<AsyncResult<ComAdobeGraniteOauthServerImplOAuth2TokenRevocationServletInfo>> handler);
    
    //comAdobeGraniteOffloadingImplOffloadingConfigurator
    void comAdobeGraniteOffloadingImplOffloadingConfigurator(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String offloadingTransporter, Boolean offloadingCleanupPayload, Handler<AsyncResult<ComAdobeGraniteOffloadingImplOffloadingConfiguratorInfo>> handler);
    
    //comAdobeGraniteOffloadingImplOffloadingJobCloner
    void comAdobeGraniteOffloadingImplOffloadingJobCloner(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean offloadingJobclonerEnabled, Handler<AsyncResult<ComAdobeGraniteOffloadingImplOffloadingJobClonerInfo>> handler);
    
    //comAdobeGraniteOffloadingImplOffloadingJobOffloader
    void comAdobeGraniteOffloadingImplOffloadingJobOffloader(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean offloadingOffloaderEnabled, Handler<AsyncResult<ComAdobeGraniteOffloadingImplOffloadingJobOffloaderInfo>> handler);
    
    //comAdobeGraniteOffloadingImplTransporterOffloadingAgentManager
    void comAdobeGraniteOffloadingImplTransporterOffloadingAgentManager(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean offloadingAgentmanagerEnabled, Handler<AsyncResult<ComAdobeGraniteOffloadingImplTransporterOffloadingAgentManagerInfo>> handler);
    
    //comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo
    void comAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspo(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String defaultTransportAgentToWorkerPrefix, String defaultTransportAgentToMasterPrefix, String defaultTransportInputPackage, String defaultTransportOutputPackage, Boolean defaultTransportReplicationSynchronous, Boolean defaultTransportContentpackage, Boolean offloadingTransporterDefaultEnabled, Handler<AsyncResult<ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoInfo>> handler);
    
    //comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl
    void comAdobeGraniteOmnisearchImplCoreOmniSearchServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer omnisearchSuggestionRequiretextMin, Boolean omnisearchSuggestionSpellcheckRequire, Handler<AsyncResult<ComAdobeGraniteOmnisearchImplCoreOmniSearchServiceImplInfo>> handler);
    
    //comAdobeGraniteOptoutImplOptOutServiceImpl
    void comAdobeGraniteOptoutImplOptOutServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> optoutCookies, List<String> optoutHeaders, List<String> optoutWhitelistCookies, Handler<AsyncResult<ComAdobeGraniteOptoutImplOptOutServiceImplInfo>> handler);
    
    //comAdobeGraniteQueriesImplHcAsyncIndexHealthCheck
    void comAdobeGraniteQueriesImplHcAsyncIndexHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer indexingCriticalThreshold, Integer indexingWarnThreshold, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteQueriesImplHcAsyncIndexHealthCheckInfo>> handler);
    
    //comAdobeGraniteQueriesImplHcLargeIndexHealthCheck
    void comAdobeGraniteQueriesImplHcLargeIndexHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer largeIndexCriticalThreshold, Integer largeIndexWarnThreshold, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteQueriesImplHcLargeIndexHealthCheckInfo>> handler);
    
    //comAdobeGraniteQueriesImplHcQueriesStatusHealthCheck
    void comAdobeGraniteQueriesImplHcQueriesStatusHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteQueriesImplHcQueriesStatusHealthCheckInfo>> handler);
    
    //comAdobeGraniteQueriesImplHcQueryHealthCheckMetrics
    void comAdobeGraniteQueriesImplHcQueryHealthCheckMetrics(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer getPeriod, Handler<AsyncResult<ComAdobeGraniteQueriesImplHcQueryHealthCheckMetricsInfo>> handler);
    
    //comAdobeGraniteQueriesImplHcQueryLimitsHealthCheck
    void comAdobeGraniteQueriesImplHcQueryLimitsHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteQueriesImplHcQueryLimitsHealthCheckInfo>> handler);
    
    //comAdobeGraniteReplicationHcImplReplicationQueueHealthCheck
    void comAdobeGraniteReplicationHcImplReplicationQueueHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer numberOfRetriesAllowed, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteReplicationHcImplReplicationQueueHealthCheckInfo>> handler);
    
    //comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC
    void comAdobeGraniteReplicationHcImplReplicationTransportUsersHealthC(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteReplicationHcImplReplicationTransportUsersHealthCInfo>> handler);
    
    //comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck
    void comAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteRepositoryHcImplAuthorizableNodeNameHealthCheckInfo>> handler);
    
    //comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC
    void comAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthC(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, List<String> excludeSearchPath, Handler<AsyncResult<ComAdobeGraniteRepositoryHcImplContentSlingSlingContentHealthCInfo>> handler);
    
    //comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck
    void comAdobeGraniteRepositoryHcImplContinuousRGCHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteRepositoryHcImplContinuousRGCHealthCheckInfo>> handler);
    
    //comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe
    void comAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthChe(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteRepositoryHcImplDefaultAccessUserProfileHealthCheInfo>> handler);
    
    //comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck
    void comAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, List<String> accountLogins, List<String> consoleLogins, Handler<AsyncResult<ComAdobeGraniteRepositoryHcImplDefaultLoginsHealthCheckInfo>> handler);
    
    //comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck
    void comAdobeGraniteRepositoryHcImplDiskSpaceHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Integer diskSpaceWarnThreshold, Integer diskSpaceErrorThreshold, Handler<AsyncResult<ComAdobeGraniteRepositoryHcImplDiskSpaceHealthCheckInfo>> handler);
    
    //comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck
    void comAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteRepositoryHcImplObservationQueueLengthHealthCheckInfo>> handler);
    
    //comAdobeGraniteRepositoryImplCommitStatsConfig
    void comAdobeGraniteRepositoryImplCommitStatsConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, Integer intervalSeconds, Integer commitsPerIntervalThreshold, Integer maxLocationLength, Integer maxDetailsShown, Integer minDetailsPercentage, List<String> threadMatchers, Integer maxGreedyDepth, String greedyStackMatchers, List<String> stackFilters, List<String> stackMatchers, List<String> stackCategorizers, List<String> stackShorteners, Handler<AsyncResult<ComAdobeGraniteRepositoryImplCommitStatsConfigInfo>> handler);
    
    //comAdobeGraniteRepositoryServiceUserConfiguration
    void comAdobeGraniteRepositoryServiceUserConfiguration(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, Boolean serviceusersSimpleSubjectPopulation, List<String> serviceusersList, Handler<AsyncResult<ComAdobeGraniteRepositoryServiceUserConfigurationInfo>> handler);
    
    //comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm
    void comAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckIm(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteRequestsLoggingImplHcRequestsStatusHealthCheckImInfo>> handler);
    
    //comAdobeGraniteResourcestatusImplCompositeStatusType
    void comAdobeGraniteResourcestatusImplCompositeStatusType(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, List<String> types, Handler<AsyncResult<ComAdobeGraniteResourcestatusImplCompositeStatusTypeInfo>> handler);
    
    //comAdobeGraniteResourcestatusImplStatusResourceProviderImpl
    void comAdobeGraniteResourcestatusImplStatusResourceProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String providerRoot, Handler<AsyncResult<ComAdobeGraniteResourcestatusImplStatusResourceProviderImplInfo>> handler);
    
    //comAdobeGraniteRestAssetsImplAssetContentDispositionFilter
    void comAdobeGraniteRestAssetsImplAssetContentDispositionFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean mimeAllowEmpty, List<String> mimeAllowed, Handler<AsyncResult<ComAdobeGraniteRestAssetsImplAssetContentDispositionFilterInfo>> handler);
    
    //comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl
    void comAdobeGraniteRestImplApiEndpointResourceProviderFactoryImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String providerRoots, Handler<AsyncResult<ComAdobeGraniteRestImplApiEndpointResourceProviderFactoryImplInfo>> handler);
    
    //comAdobeGraniteRestImplServletDefaultGETServlet
    void comAdobeGraniteRestImplServletDefaultGETServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer defaultLimit, Boolean useAbsoluteUri, Handler<AsyncResult<ComAdobeGraniteRestImplServletDefaultGETServletInfo>> handler);
    
    //comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS
    void comAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationS(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> hcTags, Handler<AsyncResult<ComAdobeGraniteSecurityUserUiInternalServletsSSLConfigurationSInfo>> handler);
    
    //comAdobeGraniteSecurityUserUserPropertiesService
    void comAdobeGraniteSecurityUserUserPropertiesService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String adapterCondition, List<String> graniteUserpropertiesNodetypes, List<String> graniteUserpropertiesResourcetypes, Handler<AsyncResult<ComAdobeGraniteSecurityUserUserPropertiesServiceInfo>> handler);
    
    //comAdobeGraniteSocialgraphImplSocialGraphFactoryImpl
    void comAdobeGraniteSocialgraphImplSocialGraphFactoryImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String group2memberRelationshipOutgoing, List<String> group2memberExcludedOutgoing, String group2memberRelationshipIncoming, List<String> group2memberExcludedIncoming, Handler<AsyncResult<ComAdobeGraniteSocialgraphImplSocialGraphFactoryImplInfo>> handler);
    
    //comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl
    void comAdobeGraniteSystemMonitoringImplSystemStatsMBeanImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, String jmxObjectname, Handler<AsyncResult<ComAdobeGraniteSystemMonitoringImplSystemStatsMBeanImplInfo>> handler);
    
    //comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory
    void comAdobeGraniteTaskmanagementImplJcrTaskAdapterFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String adapterCondition, Handler<AsyncResult<ComAdobeGraniteTaskmanagementImplJcrTaskAdapterFactoryInfo>> handler);
    
    //comAdobeGraniteTaskmanagementImplJcrTaskArchiveService
    void comAdobeGraniteTaskmanagementImplJcrTaskArchiveService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean archivingEnabled, String schedulerExpression, Integer archiveSinceDaysCompleted, Handler<AsyncResult<ComAdobeGraniteTaskmanagementImplJcrTaskArchiveServiceInfo>> handler);
    
    //comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask
    void comAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean purgeCompleted, Integer completedAge, Boolean purgeActive, Integer activeAge, Integer saveThreshold, Handler<AsyncResult<ComAdobeGraniteTaskmanagementImplPurgeTaskPurgeMaintenanceTaskInfo>> handler);
    
    //comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor
    void comAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String adapterCondition, List<String> taskmanagerAdmingroups, Handler<AsyncResult<ComAdobeGraniteTaskmanagementImplServiceTaskManagerAdapterFactorInfo>> handler);
    
    //comAdobeGraniteThreaddumpThreadDumpCollector
    void comAdobeGraniteThreaddumpThreadDumpCollector(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer schedulerPeriod, String schedulerRunOn, Boolean graniteThreaddumpEnabled, Integer graniteThreaddumpDumpsPerFile, Boolean graniteThreaddumpEnableGzipCompression, Boolean graniteThreaddumpEnableDirectoriesCompression, Boolean graniteThreaddumpEnableJStack, Integer graniteThreaddumpMaxBackupDays, String graniteThreaddumpBackupCleanTrigger, Handler<AsyncResult<ComAdobeGraniteThreaddumpThreadDumpCollectorInfo>> handler);
    
    //comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl
    void comAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTransl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String translationFactory, String defaultConnectorLabel, String defaultConnectorAttribution, String defaultConnectorWorkspaceId, String defaultConnectorSubscriptionKey, String languageMapLocation, String categoryMapLocation, Integer retryAttempts, Integer timeoutCount, Handler<AsyncResult<ComAdobeGraniteTranslationConnectorMsftCoreImplMicrosoftTranslInfo>> handler);
    
    //comAdobeGraniteTranslationCoreImplTranslationManagerImpl
    void comAdobeGraniteTranslationCoreImplTranslationManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String defaultConnectorName, String defaultCategory, Handler<AsyncResult<ComAdobeGraniteTranslationCoreImplTranslationManagerImplInfo>> handler);
    
    //comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl
    void comAdobeGraniteUiClientlibsImplHtmlLibraryManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean htmllibmanagerTiming, String htmllibmanagerDebugInitJs, Boolean htmllibmanagerMinify, Boolean htmllibmanagerDebug, Boolean htmllibmanagerGzip, Integer htmllibmanagerMaxDataUriSize, Integer htmllibmanagerMaxage, Boolean htmllibmanagerForceCQUrlInfo, String htmllibmanagerDefaultthemename, String htmllibmanagerDefaultuserthemename, String htmllibmanagerClientmanager, List<String> htmllibmanagerPathList, List<String> htmllibmanagerExcludedPathList, List<String> htmllibmanagerProcessorJs, List<String> htmllibmanagerProcessorCss, List<String> htmllibmanagerLongcachePatterns, String htmllibmanagerLongcacheFormat, Boolean htmllibmanagerUseFileSystemOutputCache, String htmllibmanagerFileSystemOutputCacheLocation, List<String> htmllibmanagerDisableReplacement, Handler<AsyncResult<ComAdobeGraniteUiClientlibsImplHtmlLibraryManagerImplInfo>> handler);
    
    //comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature
    void comAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeature(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, Handler<AsyncResult<ComAdobeGraniteWorkflowConsoleFragsWorkflowWithdrawFeatureInfo>> handler);
    
    //comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService
    void comAdobeGraniteWorkflowConsolePublishWorkflowPublishEventService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean graniteWorkflowWorkflowPublishEventServiceEnabled, Handler<AsyncResult<ComAdobeGraniteWorkflowConsolePublishWorkflowPublishEventServiceInfo>> handler);
    
    //comAdobeGraniteWorkflowCoreJcrWorkflowBucketManager
    void comAdobeGraniteWorkflowCoreJcrWorkflowBucketManager(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer bucketSize, Handler<AsyncResult<ComAdobeGraniteWorkflowCoreJcrWorkflowBucketManagerInfo>> handler);
    
    //comAdobeGraniteWorkflowCoreJobExternalProcessJobHandler
    void comAdobeGraniteWorkflowCoreJobExternalProcessJobHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer defaultTimeout, Integer maxTimeout, Integer defaultPeriod, Handler<AsyncResult<ComAdobeGraniteWorkflowCoreJobExternalProcessJobHandlerInfo>> handler);
    
    //comAdobeGraniteWorkflowCoreJobJobHandler
    void comAdobeGraniteWorkflowCoreJobJobHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> jobTopics, Boolean allowSelfProcessTermination, Handler<AsyncResult<ComAdobeGraniteWorkflowCoreJobJobHandlerInfo>> handler);
    
    //comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum
    void comAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsum(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jobTopics, Handler<AsyncResult<ComAdobeGraniteWorkflowCoreOffloadingWorkflowOffloadingJobConsumInfo>> handler);
    
    //comAdobeGraniteWorkflowCorePayloadMapCache
    void comAdobeGraniteWorkflowCorePayloadMapCache(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> getSystemWorkflowModels, String getPackageRootPath, Handler<AsyncResult<ComAdobeGraniteWorkflowCorePayloadMapCacheInfo>> handler);
    
    //comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener
    void comAdobeGraniteWorkflowCorePayloadmapPayloadMoveListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> payloadMoveWhiteList, Boolean payloadMoveHandleFromWorkflowProcess, Handler<AsyncResult<ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo>> handler);
    
    //comAdobeGraniteWorkflowCoreWorkflowConfig
    void comAdobeGraniteWorkflowCoreWorkflowConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqWorkflowConfigWorkflowPackagesRootPath, Boolean cqWorkflowConfigWorkflowProcessLegacyMode, Boolean cqWorkflowConfigAllowLocking, Handler<AsyncResult<ComAdobeGraniteWorkflowCoreWorkflowConfigInfo>> handler);
    
    //comAdobeGraniteWorkflowCoreWorkflowSessionFactory
    void comAdobeGraniteWorkflowCoreWorkflowSessionFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String graniteWorkflowinboxSortPropertyName, String graniteWorkflowinboxSortOrder, Integer cqWorkflowJobRetry, List<String> cqWorkflowSuperuser, Integer graniteWorkflowInboxQuerySize, Boolean graniteWorkflowAdminUserGroupFilter, Boolean graniteWorkflowEnforceWorkitemAssigneePermissions, Boolean graniteWorkflowEnforceWorkflowInitiatorPermissions, Boolean graniteWorkflowInjectTenantIdInJobTopics, Integer graniteWorkflowMaxPurgeSaveThreshold, Integer graniteWorkflowMaxPurgeQueryCount, Handler<AsyncResult<ComAdobeGraniteWorkflowCoreWorkflowSessionFactoryInfo>> handler);
    
    //comAdobeGraniteWorkflowPurgeScheduler
    void comAdobeGraniteWorkflowPurgeScheduler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String scheduledpurgeName, String scheduledpurgeWorkflowStatus, List<String> scheduledpurgeModelIds, Integer scheduledpurgeDaysold, Handler<AsyncResult<ComAdobeGraniteWorkflowPurgeSchedulerInfo>> handler);
    
    //comAdobeOctopusNcommBootstrap
    void comAdobeOctopusNcommBootstrap(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxConnections, Integer maxRequests, Integer requestTimeout, Integer requestRetries, Integer launchTimeout, Handler<AsyncResult<ComAdobeOctopusNcommBootstrapInfo>> handler);
    
    //comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS
    void comAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullS(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String communitiesIntegrationLivefyreSlingEventFilter, Handler<AsyncResult<ComAdobeSocialIntegrationsLivefyreUserPingforpullImplPingPullSInfo>> handler);
    
    //comAdobeXmpWorkerFilesNcommXMPFilesNComm
    void comAdobeXmpWorkerFilesNcommXMPFilesNComm(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String maxConnections, String maxRequests, String requestTimeout, String logDir, Handler<AsyncResult<ComAdobeXmpWorkerFilesNcommXMPFilesNCommInfo>> handler);
    
    //comDayCommonsDatasourceJdbcpoolJdbcPoolService
    void comDayCommonsDatasourceJdbcpoolJdbcPoolService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jdbcDriverClass, String jdbcConnectionUri, String jdbcUsername, String jdbcPassword, String jdbcValidationQuery, Boolean defaultReadonly, Boolean defaultAutocommit, Integer poolSize, Integer poolMaxWaitMsec, String datasourceName, List<String> datasourceSvcProperties, Handler<AsyncResult<ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceInfo>> handler);
    
    //comDayCommonsHttpclient
    void comDayCommonsHttpclient(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean proxyEnabled, String proxyHost, String proxyUser, String proxyPassword, String proxyNtlmHost, String proxyNtlmDomain, List<String> proxyExceptions, Handler<AsyncResult<ComDayCommonsHttpclientInfo>> handler);
    
    //comDayCqAnalyticsImplStorePropertiesChangeListener
    void comDayCqAnalyticsImplStorePropertiesChangeListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqStoreListenerAdditionalStorePaths, Handler<AsyncResult<ComDayCqAnalyticsImplStorePropertiesChangeListenerInfo>> handler);
    
    //comDayCqAnalyticsSitecatalystImplExporterClassificationsExporte
    void comDayCqAnalyticsSitecatalystImplExporterClassificationsExporte(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> allowedPaths, Integer cqAnalyticsSaintExporterPagesize, Handler<AsyncResult<ComDayCqAnalyticsSitecatalystImplExporterClassificationsExporteInfo>> handler);
    
    //comDayCqAnalyticsSitecatalystImplImporterReportImporter
    void comDayCqAnalyticsSitecatalystImplImporterReportImporter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer reportFetchAttempts, Integer reportFetchDelay, Handler<AsyncResult<ComDayCqAnalyticsSitecatalystImplImporterReportImporterInfo>> handler);
    
    //comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory
    void comDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqAnalyticsAdapterfactoryContextstores, Handler<AsyncResult<ComDayCqAnalyticsSitecatalystImplSitecatalystAdapterFactoryInfo>> handler);
    
    //comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl
    void comDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqAnalyticsSitecatalystServiceDatacenterUrl, List<String> devhostnamepatterns, Integer connectionTimeout, Integer socketTimeout, Handler<AsyncResult<ComDayCqAnalyticsSitecatalystImplSitecatalystHttpClientImplInfo>> handler);
    
    //comDayCqAnalyticsTestandtargetImplAccountOptionsUpdater
    void comDayCqAnalyticsTestandtargetImplAccountOptionsUpdater(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqAnalyticsTestandtargetAccountoptionsupdaterEnabled, Handler<AsyncResult<ComDayCqAnalyticsTestandtargetImplAccountOptionsUpdaterInfo>> handler);
    
    //comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener
    void comDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqAnalyticsTestandtargetDeleteauthoractivitylistenerEnabled, Handler<AsyncResult<ComDayCqAnalyticsTestandtargetImplDeleteAuthorActivityListenerInfo>> handler);
    
    //comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener
    void comDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqAnalyticsTestandtargetPushauthorcampaignpagelistenerEnabled, Handler<AsyncResult<ComDayCqAnalyticsTestandtargetImplPushAuthorCampaignPageListenerInfo>> handler);
    
    //comDayCqAnalyticsTestandtargetImplSegmentImporter
    void comDayCqAnalyticsTestandtargetImplSegmentImporter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqAnalyticsTestandtargetSegmentimporterEnabled, Handler<AsyncResult<ComDayCqAnalyticsTestandtargetImplSegmentImporterInfo>> handler);
    
    //comDayCqAnalyticsTestandtargetImplServiceWebServiceImpl
    void comDayCqAnalyticsTestandtargetImplServiceWebServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String endpointUri, Integer connectionTimeout, Integer socketTimeout, Handler<AsyncResult<ComDayCqAnalyticsTestandtargetImplServiceWebServiceImplInfo>> handler);
    
    //comDayCqAnalyticsTestandtargetImplServletsAdminServerServlet
    void comDayCqAnalyticsTestandtargetImplServletsAdminServerServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String testandtargetEndpointUrl, Handler<AsyncResult<ComDayCqAnalyticsTestandtargetImplServletsAdminServerServletInfo>> handler);
    
    //comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl
    void comDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String cqAnalyticsTestandtargetApiUrl, Integer cqAnalyticsTestandtargetTimeout, Integer cqAnalyticsTestandtargetSockettimeout, String cqAnalyticsTestandtargetRecommendationsUrlReplace, String cqAnalyticsTestandtargetRecommendationsUrlReplacewith, Handler<AsyncResult<ComDayCqAnalyticsTestandtargetImplTestandtargetHttpClientImplInfo>> handler);
    
    //comDayCqAuthImplCugCugSupportImpl
    void comDayCqAuthImplCugCugSupportImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cugExemptedPrincipals, Boolean cugEnabled, String cugPrincipalsRegex, String cugPrincipalsReplacement, Handler<AsyncResult<ComDayCqAuthImplCugCugSupportImplInfo>> handler);
    
    //comDayCqAuthImplLoginSelectorHandler
    void comDayCqAuthImplLoginSelectorHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, Integer serviceRanking, List<String> authLoginselectorMappings, List<String> authLoginselectorChangepwMappings, String authLoginselectorDefaultloginpage, String authLoginselectorDefaultchangepwpage, List<String> authLoginselectorHandle, Boolean authLoginselectorHandleAllExtensions, Handler<AsyncResult<ComDayCqAuthImplLoginSelectorHandlerInfo>> handler);
    
    //comDayCqCommonsImplExternalizerImpl
    void comDayCqCommonsImplExternalizerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> externalizerDomains, String externalizerHost, String externalizerContextpath, Boolean externalizerEncodedpath, Handler<AsyncResult<ComDayCqCommonsImplExternalizerImplInfo>> handler);
    
    //comDayCqCommonsServletsRootMappingServlet
    void comDayCqCommonsServletsRootMappingServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String rootmappingTarget, Handler<AsyncResult<ComDayCqCommonsServletsRootMappingServletInfo>> handler);
    
    //comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke
    void comDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionChecke(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> codeupgradetasks, List<String> codeupgradetaskfilters, Handler<AsyncResult<ComDayCqCompatCodeupgradeImplCodeUpgradeExecutionConditionCheckeInfo>> handler);
    
    //comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList
    void comDayCqCompatCodeupgradeImplUpgradeTaskIgnoreList(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> upgradeTaskIgnoreList, Handler<AsyncResult<ComDayCqCompatCodeupgradeImplUpgradeTaskIgnoreListInfo>> handler);
    
    //comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist
    void comDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelist(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String effectiveBundleListPath, Handler<AsyncResult<ComDayCqCompatCodeupgradeImplVersionRangeTaskIgnorelistInfo>> handler);
    
    //comDayCqContentsyncImplContentSyncManagerImpl
    void comDayCqContentsyncImplContentSyncManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String contentsyncFallbackAuthorizable, String contentsyncFallbackUpdateuser, Handler<AsyncResult<ComDayCqContentsyncImplContentSyncManagerImplInfo>> handler);
    
    //comDayCqDamCommonsHandlerStandardImageHandler
    void comDayCqDamCommonsHandlerStandardImageHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer largeFileThreshold, Integer largeCommentThreshold, Boolean cqDamEnableExtMetaExtraction, Handler<AsyncResult<ComDayCqDamCommonsHandlerStandardImageHandlerInfo>> handler);
    
    //comDayCqDamCommonsMetadataXmpFilterBlackWhite
    void comDayCqDamCommonsMetadataXmpFilterBlackWhite(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean xmpFilterApplyWhitelist, List<String> xmpFilterWhitelist, Boolean xmpFilterApplyBlacklist, List<String> xmpFilterBlacklist, Handler<AsyncResult<ComDayCqDamCommonsMetadataXmpFilterBlackWhiteInfo>> handler);
    
    //comDayCqDamCommonsUtilImplAssetCacheImpl
    void comDayCqDamCommonsUtilImplAssetCacheImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer largeFileMin, Boolean cacheApply, List<String> mimeTypes, Handler<AsyncResult<ComDayCqDamCommonsUtilImplAssetCacheImplInfo>> handler);
    
    //comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig
    void comDayCqDamCoreImplAnnotationPdfAnnotationPdfConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqDamConfigAnnotationPdfDocumentWidth, Integer cqDamConfigAnnotationPdfDocumentHeight, Integer cqDamConfigAnnotationPdfDocumentPaddingHorizontal, Integer cqDamConfigAnnotationPdfDocumentPaddingVertical, Integer cqDamConfigAnnotationPdfFontSize, String cqDamConfigAnnotationPdfFontColor, String cqDamConfigAnnotationPdfFontFamily, String cqDamConfigAnnotationPdfFontLight, Integer cqDamConfigAnnotationPdfMarginTextImage, Integer cqDamConfigAnnotationPdfMinImageHeight, Integer cqDamConfigAnnotationPdfReviewStatusWidth, String cqDamConfigAnnotationPdfReviewStatusColorApproved, String cqDamConfigAnnotationPdfReviewStatusColorRejected, String cqDamConfigAnnotationPdfReviewStatusColorChangesRequested, Integer cqDamConfigAnnotationPdfAnnotationMarkerWidth, Integer cqDamConfigAnnotationPdfAssetMinheight, Handler<AsyncResult<ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigInfo>> handler);
    
    //comDayCqDamCoreImplAssetMoveListener
    void comDayCqDamCoreImplAssetMoveListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, Handler<AsyncResult<ComDayCqDamCoreImplAssetMoveListenerInfo>> handler);
    
    //comDayCqDamCoreImplAssethomeAssetHomePageConfiguration
    void comDayCqDamCoreImplAssethomeAssetHomePageConfiguration(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean isEnabled, Handler<AsyncResult<ComDayCqDamCoreImplAssethomeAssetHomePageConfigurationInfo>> handler);
    
    //comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet
    void comDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqDamAdhocAssetSharePrezipMaxcontentsize, Handler<AsyncResult<ComDayCqDamCoreImplAssetlinkshareAdhocAssetShareProxyServletInfo>> handler);
    
    //comDayCqDamCoreImplCacheCQBufferedImageCache
    void comDayCqDamCoreImplCacheCQBufferedImageCache(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqDamImageCacheMaxMemory, Integer cqDamImageCacheMaxAge, String cqDamImageCacheMaxDimension, Handler<AsyncResult<ComDayCqDamCoreImplCacheCQBufferedImageCacheInfo>> handler);
    
    //comDayCqDamCoreImplDamChangeEventListener
    void comDayCqDamCoreImplDamChangeEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> changeeventlistenerObservedPaths, Handler<AsyncResult<ComDayCqDamCoreImplDamChangeEventListenerInfo>> handler);
    
    //comDayCqDamCoreImplDamEventPurgeService
    void comDayCqDamCoreImplDamEventPurgeService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, Integer maxSavedActivities, Integer saveInterval, Boolean enableActivityPurge, String eventTypes, Handler<AsyncResult<ComDayCqDamCoreImplDamEventPurgeServiceInfo>> handler);
    
    //comDayCqDamCoreImplDamEventRecorderImpl
    void comDayCqDamCoreImplDamEventRecorderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventFilter, Integer eventQueueLength, Boolean eventrecorderEnabled, List<String> eventrecorderBlacklist, String eventrecorderEventtypes, Handler<AsyncResult<ComDayCqDamCoreImplDamEventRecorderImplInfo>> handler);
    
    //comDayCqDamCoreImplEventDamEventAuditListener
    void comDayCqDamCoreImplEventDamEventAuditListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventFilter, Boolean enabled, Handler<AsyncResult<ComDayCqDamCoreImplEventDamEventAuditListenerInfo>> handler);
    
    //comDayCqDamCoreImplExpiryNotificationJobImpl
    void comDayCqDamCoreImplExpiryNotificationJobImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamExpiryNotificationSchedulerIstimebased, String cqDamExpiryNotificationSchedulerTimebasedRule, Integer cqDamExpiryNotificationSchedulerPeriodRule, Boolean sendEmail, Integer assetExpiredLimit, Integer priorNotificationSeconds, String cqDamExpiryNotificationUrlProtocol, Handler<AsyncResult<ComDayCqDamCoreImplExpiryNotificationJobImplInfo>> handler);
    
    //comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat
    void comDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeat(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean isEnabled, Handler<AsyncResult<ComDayCqDamCoreImplFoldermetadataschemaFolderMetadataSchemaFeatInfo>> handler);
    
    //comDayCqDamCoreImplGfxCommonsGfxRenderer
    void comDayCqDamCoreImplGfxCommonsGfxRenderer(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean skipBufferedcache, Handler<AsyncResult<ComDayCqDamCoreImplGfxCommonsGfxRendererInfo>> handler);
    
    //comDayCqDamCoreImplHandlerEPSFormatHandler
    void comDayCqDamCoreImplHandlerEPSFormatHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String mimetype, Handler<AsyncResult<ComDayCqDamCoreImplHandlerEPSFormatHandlerInfo>> handler);
    
    //comDayCqDamCoreImplHandlerIndesignFormatHandler
    void comDayCqDamCoreImplHandlerIndesignFormatHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> mimetype, Handler<AsyncResult<ComDayCqDamCoreImplHandlerIndesignFormatHandlerInfo>> handler);
    
    //comDayCqDamCoreImplHandlerJpegHandler
    void comDayCqDamCoreImplHandlerJpegHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamEnableExtMetaExtraction, Integer largeFileThreshold, Integer largeCommentThreshold, Handler<AsyncResult<ComDayCqDamCoreImplHandlerJpegHandlerInfo>> handler);
    
    //comDayCqDamCoreImplHandlerXmpNCommXMPHandler
    void comDayCqDamCoreImplHandlerXmpNCommXMPHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> xmphandlerCqFormats, Handler<AsyncResult<ComDayCqDamCoreImplHandlerXmpNCommXMPHandlerInfo>> handler);
    
    //comDayCqDamCoreImplJmxAssetIndexUpdateMonitor
    void comDayCqDamCoreImplJmxAssetIndexUpdateMonitor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jmxObjectname, Boolean propertyMeasureEnabled, String propertyName, Integer propertyMaxWaitMs, BigDecimal propertyMaxRate, Boolean fulltextMeasureEnabled, String fulltextName, Integer fulltextMaxWaitMs, BigDecimal fulltextMaxRate, Handler<AsyncResult<ComDayCqDamCoreImplJmxAssetIndexUpdateMonitorInfo>> handler);
    
    //comDayCqDamCoreImplJmxAssetMigrationMBeanImpl
    void comDayCqDamCoreImplJmxAssetMigrationMBeanImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jmxObjectname, Handler<AsyncResult<ComDayCqDamCoreImplJmxAssetMigrationMBeanImplInfo>> handler);
    
    //comDayCqDamCoreImplJmxAssetUpdateMonitorImpl
    void comDayCqDamCoreImplJmxAssetUpdateMonitorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jmxObjectname, Boolean active, Handler<AsyncResult<ComDayCqDamCoreImplJmxAssetUpdateMonitorImplInfo>> handler);
    
    //comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig
    void comDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String operation, Boolean emailEnabled, Handler<AsyncResult<ComDayCqDamCoreImplJobsMetadataexportAsyncMetadataExportConfigInfo>> handler);
    
    //comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig
    void comDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String operation, String operationIcon, String topicName, Boolean emailEnabled, Handler<AsyncResult<ComDayCqDamCoreImplJobsMetadataimportAsyncMetadataImportConfigInfo>> handler);
    
    //comDayCqDamCoreImplLightboxLightboxServlet
    void comDayCqDamCoreImplLightboxLightboxServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingServletPaths, List<String> slingServletMethods, Boolean cqDamEnableAnonymous, Handler<AsyncResult<ComDayCqDamCoreImplLightboxLightboxServletInfo>> handler);
    
    //comDayCqDamCoreImplMetadataEditorSelectComponentHandler
    void comDayCqDamCoreImplMetadataEditorSelectComponentHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> graniteColonData, Handler<AsyncResult<ComDayCqDamCoreImplMetadataEditorSelectComponentHandlerInfo>> handler);
    
    //comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper
    void comDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelper(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamAllowAllMime, List<String> cqDamAllowedAssetMimes, Handler<AsyncResult<ComDayCqDamCoreImplMimeTypeAssetUploadRestrictionHelperInfo>> handler);
    
    //comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl
    void comDayCqDamCoreImplMimeTypeDamMimeTypeServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamDetectAssetMimeFromContent, Handler<AsyncResult<ComDayCqDamCoreImplMimeTypeDamMimeTypeServiceImplInfo>> handler);
    
    //comDayCqDamCoreImplMissingMetadataNotificationJob
    void comDayCqDamCoreImplMissingMetadataNotificationJob(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamMissingmetadataNotificationSchedulerIstimebased, String cqDamMissingmetadataNotificationSchedulerTimebasedRule, Integer cqDamMissingmetadataNotificationSchedulerPeriodRule, String cqDamMissingmetadataNotificationRecipient, Handler<AsyncResult<ComDayCqDamCoreImplMissingMetadataNotificationJobInfo>> handler);
    
    //comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr
    void comDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPr(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String processLabel, Boolean notifyOnComplete, Handler<AsyncResult<ComDayCqDamCoreImplProcessSendTransientWorkflowCompletedEmailPrInfo>> handler);
    
    //comDayCqDamCoreImplProcessTextExtractionProcess
    void comDayCqDamCoreImplProcessTextExtractionProcess(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> mimeTypes, Integer maxExtract, Handler<AsyncResult<ComDayCqDamCoreImplProcessTextExtractionProcessInfo>> handler);
    
    //comDayCqDamCoreImplRenditionMakerImpl
    void comDayCqDamCoreImplRenditionMakerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean xmpPropagate, List<String> xmpExcludes, Handler<AsyncResult<ComDayCqDamCoreImplRenditionMakerImplInfo>> handler);
    
    //comDayCqDamCoreImplReportsReportExportService
    void comDayCqDamCoreImplReportsReportExportService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer queryBatchSize, Handler<AsyncResult<ComDayCqDamCoreImplReportsReportExportServiceInfo>> handler);
    
    //comDayCqDamCoreImplReportsReportPurgeService
    void comDayCqDamCoreImplReportsReportPurgeService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, Integer maxSavedReports, Integer timeDuration, Boolean enableReportPurge, Handler<AsyncResult<ComDayCqDamCoreImplReportsReportPurgeServiceInfo>> handler);
    
    //comDayCqDamCoreImplServletAssetDownloadServlet
    void comDayCqDamCoreImplServletAssetDownloadServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, Handler<AsyncResult<ComDayCqDamCoreImplServletAssetDownloadServletInfo>> handler);
    
    //comDayCqDamCoreImplServletAssetStatusServlet
    void comDayCqDamCoreImplServletAssetStatusServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqDamBatchStatusMaxassets, Handler<AsyncResult<ComDayCqDamCoreImplServletAssetStatusServletInfo>> handler);
    
    //comDayCqDamCoreImplServletAssetXMPSearchServlet
    void comDayCqDamCoreImplServletAssetXMPSearchServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqDamBatchIndesignMaxassets, Handler<AsyncResult<ComDayCqDamCoreImplServletAssetXMPSearchServletInfo>> handler);
    
    //comDayCqDamCoreImplServletBatchMetadataServlet
    void comDayCqDamCoreImplServletBatchMetadataServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqDamBatchMetadataAssetDefault, List<String> cqDamBatchMetadataCollectionDefault, Integer cqDamBatchMetadataMaxresources, Handler<AsyncResult<ComDayCqDamCoreImplServletBatchMetadataServletInfo>> handler);
    
    //comDayCqDamCoreImplServletBinaryProviderServlet
    void comDayCqDamCoreImplServletBinaryProviderServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> slingServletResourceTypes, List<String> slingServletMethods, Boolean cqDamDrmEnable, Handler<AsyncResult<ComDayCqDamCoreImplServletBinaryProviderServletInfo>> handler);
    
    //comDayCqDamCoreImplServletCollectionServlet
    void comDayCqDamCoreImplServletCollectionServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqDamBatchCollectionProperties, Integer cqDamBatchCollectionMaxcollections, Handler<AsyncResult<ComDayCqDamCoreImplServletCollectionServletInfo>> handler);
    
    //comDayCqDamCoreImplServletCollectionsServlet
    void comDayCqDamCoreImplServletCollectionsServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqDamBatchCollectionsProperties, Integer cqDamBatchCollectionsLimit, Handler<AsyncResult<ComDayCqDamCoreImplServletCollectionsServletInfo>> handler);
    
    //comDayCqDamCoreImplServletCompanionServlet
    void comDayCqDamCoreImplServletCompanionServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String moreInfo, String slashMntSlashOverlaySlashDamSlashGuiSlashContentSlashAssetsSlashMoreinfoHtmlSlash$LeftCurlyBracketPathRightCurlyBracket, Handler<AsyncResult<ComDayCqDamCoreImplServletCompanionServletInfo>> handler);
    
    //comDayCqDamCoreImplServletCreateAssetServlet
    void comDayCqDamCoreImplServletCreateAssetServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean detectDuplicate, Handler<AsyncResult<ComDayCqDamCoreImplServletCreateAssetServletInfo>> handler);
    
    //comDayCqDamCoreImplServletDamContentDispositionFilter
    void comDayCqDamCoreImplServletDamContentDispositionFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqMimeTypeBlacklist, Boolean cqDamEmptyMime, Handler<AsyncResult<ComDayCqDamCoreImplServletDamContentDispositionFilterInfo>> handler);
    
    //comDayCqDamCoreImplServletGuidLookupFilter
    void comDayCqDamCoreImplServletGuidLookupFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamCoreGuidlookupfilterEnabled, Handler<AsyncResult<ComDayCqDamCoreImplServletGuidLookupFilterInfo>> handler);
    
    //comDayCqDamCoreImplServletHealthCheckServlet
    void comDayCqDamCoreImplServletHealthCheckServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String cqDamSyncWorkflowId, List<String> cqDamSyncFolderTypes, Handler<AsyncResult<ComDayCqDamCoreImplServletHealthCheckServletInfo>> handler);
    
    //comDayCqDamCoreImplServletMetadataGetServlet
    void comDayCqDamCoreImplServletMetadataGetServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingServletResourceTypes, String slingServletMethods, String slingServletExtensions, String slingServletSelectors, Handler<AsyncResult<ComDayCqDamCoreImplServletMetadataGetServletInfo>> handler);
    
    //comDayCqDamCoreImplServletMultipleLicenseAcceptServlet
    void comDayCqDamCoreImplServletMultipleLicenseAcceptServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamDrmEnable, Handler<AsyncResult<ComDayCqDamCoreImplServletMultipleLicenseAcceptServletInfo>> handler);
    
    //comDayCqDamCoreImplServletResourceCollectionServlet
    void comDayCqDamCoreImplServletResourceCollectionServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> slingServletResourceTypes, String slingServletMethods, String slingServletSelectors, String downloadConfig, String viewSelector, Boolean sendEmail, Handler<AsyncResult<ComDayCqDamCoreImplServletResourceCollectionServletInfo>> handler);
    
    //comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl
    void comDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean createPreviewEnabled, Boolean updatePreviewEnabled, Integer queueSize, String folderPreviewRenditionRegex, Handler<AsyncResult<ComDayCqDamCoreImplUiPreviewFolderPreviewUpdaterImplInfo>> handler);
    
    //comDayCqDamCoreImplUnzipUnzipConfig
    void comDayCqDamCoreImplUnzipUnzipConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqDamConfigUnzipMaxuncompressedsize, String cqDamConfigUnzipEncoding, Handler<AsyncResult<ComDayCqDamCoreImplUnzipUnzipConfigInfo>> handler);
    
    //comDayCqDamCoreProcessExifToolExtractMetadataProcess
    void comDayCqDamCoreProcessExifToolExtractMetadataProcess(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String processLabel, Boolean cqDamEnableSha1, Handler<AsyncResult<ComDayCqDamCoreProcessExifToolExtractMetadataProcessInfo>> handler);
    
    //comDayCqDamCoreProcessExtractMetadataProcess
    void comDayCqDamCoreProcessExtractMetadataProcess(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String processLabel, Boolean cqDamEnableSha1, Handler<AsyncResult<ComDayCqDamCoreProcessExtractMetadataProcessInfo>> handler);
    
    //comDayCqDamCoreProcessMetadataProcessorProcess
    void comDayCqDamCoreProcessMetadataProcessorProcess(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String processLabel, Boolean cqDamEnableSha1, List<String> cqDamMetadataXssprotectedProperties, Handler<AsyncResult<ComDayCqDamCoreProcessMetadataProcessorProcessInfo>> handler);
    
    //comDayCqDamHandlerFfmpegLocatorImpl
    void comDayCqDamHandlerFfmpegLocatorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> executableSearchpath, Handler<AsyncResult<ComDayCqDamHandlerFfmpegLocatorImplInfo>> handler);
    
    //comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl
    void comDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventFilter, List<String> fontmgrSystemFontDir, String fontmgrAdobeFontDir, String fontmgrCustomerFontDir, Handler<AsyncResult<ComDayCqDamHandlerGibsonFontmanagerImplFontManagerServiceImplInfo>> handler);
    
    //comDayCqDamHandlerStandardPdfPdfHandler
    void comDayCqDamHandlerStandardPdfPdfHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean rasterAnnotation, Handler<AsyncResult<ComDayCqDamHandlerStandardPdfPdfHandlerInfo>> handler);
    
    //comDayCqDamHandlerStandardPsPostScriptHandler
    void comDayCqDamHandlerStandardPsPostScriptHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean rasterAnnotation, Handler<AsyncResult<ComDayCqDamHandlerStandardPsPostScriptHandlerInfo>> handler);
    
    //comDayCqDamHandlerStandardPsdPsdHandler
    void comDayCqDamHandlerStandardPsdPsdHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer largeFileThreshold, Handler<AsyncResult<ComDayCqDamHandlerStandardPsdPsdHandlerInfo>> handler);
    
    //comDayCqDamIdsImplIDSJobProcessor
    void comDayCqDamIdsImplIDSJobProcessor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enableMultisession, Boolean idsCcEnable, Boolean enableRetry, Boolean enableRetryScripterror, String externalizerDomainCqhost, String externalizerDomainHttp, Handler<AsyncResult<ComDayCqDamIdsImplIDSJobProcessorInfo>> handler);
    
    //comDayCqDamIdsImplIDSPoolManagerImpl
    void comDayCqDamIdsImplIDSPoolManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxErrorsToBlacklist, Integer retryIntervalToWhitelist, Integer connectTimeout, Integer socketTimeout, String processLabel, Integer connectionUseMax, Handler<AsyncResult<ComDayCqDamIdsImplIDSPoolManagerImplInfo>> handler);
    
    //comDayCqDamInddImplHandlerIndesignXMPHandler
    void comDayCqDamInddImplHandlerIndesignXMPHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String processLabel, Boolean extractPages, Handler<AsyncResult<ComDayCqDamInddImplHandlerIndesignXMPHandlerInfo>> handler);
    
    //comDayCqDamInddImplServletSnippetCreationServlet
    void comDayCqDamInddImplServletSnippetCreationServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer snippetcreationMaxcollections, Handler<AsyncResult<ComDayCqDamInddImplServletSnippetCreationServletInfo>> handler);
    
    //comDayCqDamInddProcessINDDMediaExtractProcess
    void comDayCqDamInddProcessINDDMediaExtractProcess(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String processLabel, String cqDamInddPagesRegex, Boolean idsJobDecoupled, String idsJobWorkflowModel, Handler<AsyncResult<ComDayCqDamInddProcessINDDMediaExtractProcessInfo>> handler);
    
    //comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl
    void comDayCqDamPerformanceInternalAssetPerformanceDataHandlerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer batchCommitSize, Handler<AsyncResult<ComDayCqDamPerformanceInternalAssetPerformanceDataHandlerImplInfo>> handler);
    
    //comDayCqDamPerformanceInternalAssetPerformanceReportSyncJob
    void comDayCqDamPerformanceInternalAssetPerformanceReportSyncJob(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, Handler<AsyncResult<ComDayCqDamPerformanceInternalAssetPerformanceReportSyncJobInfo>> handler);
    
    //comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro
    void comDayCqDamPimImplSourcingUploadProcessProductAssetsUploadPro(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean deleteZipFile, Handler<AsyncResult<ComDayCqDamPimImplSourcingUploadProcessProductAssetsUploadProInfo>> handler);
    
    //comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven
    void comDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEven(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamS7damDynamicmediaconfigeventlistenerEnabled, Handler<AsyncResult<ComDayCqDamS7damCommonAnalyticsImplS7damDynamicMediaConfigEvenInfo>> handler);
    
    //comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner
    void comDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunner(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, Boolean schedulerConcurrent, Handler<AsyncResult<ComDayCqDamS7damCommonAnalyticsImplSiteCatalystReportRunnerInfo>> handler);
    
    //comDayCqDamS7damCommonPostServletsSetCreateHandler
    void comDayCqDamS7damCommonPostServletsSetCreateHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingPostOperation, String slingServletMethods, Handler<AsyncResult<ComDayCqDamS7damCommonPostServletsSetCreateHandlerInfo>> handler);
    
    //comDayCqDamS7damCommonPostServletsSetModifyHandler
    void comDayCqDamS7damCommonPostServletsSetModifyHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingPostOperation, String slingServletMethods, Handler<AsyncResult<ComDayCqDamS7damCommonPostServletsSetModifyHandlerInfo>> handler);
    
    //comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess
    void comDayCqDamS7damCommonProcessVideoThumbnailDownloadProcess(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String processLabel, Handler<AsyncResult<ComDayCqDamS7damCommonProcessVideoThumbnailDownloadProcessInfo>> handler);
    
    //comDayCqDamS7damCommonS7damDamChangeEventListener
    void comDayCqDamS7damCommonS7damDamChangeEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamS7damDamchangeeventlistenerEnabled, Handler<AsyncResult<ComDayCqDamS7damCommonS7damDamChangeEventListenerInfo>> handler);
    
    //comDayCqDamS7damCommonServletsS7damProductInfoServlet
    void comDayCqDamS7damCommonServletsS7damProductInfoServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingServletPaths, String slingServletMethods, Handler<AsyncResult<ComDayCqDamS7damCommonServletsS7damProductInfoServletInfo>> handler);
    
    //comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl
    void comDayCqDamS7damCommonVideoImplVideoProxyClientServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqDamS7damVideoproxyclientserviceMultipartuploadMinsizeName, Integer cqDamS7damVideoproxyclientserviceMultipartuploadPartsizeName, Integer cqDamS7damVideoproxyclientserviceMultipartuploadNumthreadName, Integer cqDamS7damVideoproxyclientserviceHttpReadtimeoutName, Integer cqDamS7damVideoproxyclientserviceHttpConnectiontimeoutName, Integer cqDamS7damVideoproxyclientserviceHttpMaxretrycountName, Integer cqDamS7damVideoproxyclientserviceUploadprogressIntervalName, Handler<AsyncResult<ComDayCqDamS7damCommonVideoImplVideoProxyClientServiceImplInfo>> handler);
    
    //comDayCqDamScene7ImplScene7APIClientImpl
    void comDayCqDamScene7ImplScene7APIClientImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqDamScene7ApiclientRecordsperpageNofilterName, Integer cqDamScene7ApiclientRecordsperpageWithfilterName, Handler<AsyncResult<ComDayCqDamScene7ImplScene7APIClientImplInfo>> handler);
    
    //comDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl
    void comDayCqDamScene7ImplScene7AssetMimeTypeServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqDamScene7AssetmimetypeserviceMapping, Handler<AsyncResult<ComDayCqDamScene7ImplScene7AssetMimeTypeServiceImplInfo>> handler);
    
    //comDayCqDamScene7ImplScene7ConfigurationEventListener
    void comDayCqDamScene7ImplScene7ConfigurationEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamScene7ConfigurationeventlistenerEnabled, Handler<AsyncResult<ComDayCqDamScene7ImplScene7ConfigurationEventListenerInfo>> handler);
    
    //comDayCqDamScene7ImplScene7DamChangeEventListener
    void comDayCqDamScene7ImplScene7DamChangeEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqDamScene7DamchangeeventlistenerEnabled, List<String> cqDamScene7DamchangeeventlistenerObservedPaths, Handler<AsyncResult<ComDayCqDamScene7ImplScene7DamChangeEventListenerInfo>> handler);
    
    //comDayCqDamScene7ImplScene7FlashTemplatesServiceImpl
    void comDayCqDamScene7ImplScene7FlashTemplatesServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String scene7FlashTemplatesRti, String scene7FlashTemplatesRsi, String scene7FlashTemplatesRb, String scene7FlashTemplatesRurl, String scene7FlashTemplateUrlFormatParameter, Handler<AsyncResult<ComDayCqDamScene7ImplScene7FlashTemplatesServiceImplInfo>> handler);
    
    //comDayCqDamScene7ImplScene7UploadServiceImpl
    void comDayCqDamScene7ImplScene7UploadServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer cqDamScene7UploadserviceActivejobtimeoutLabel, Integer cqDamScene7UploadserviceConnectionmaxperrouteLabel, Handler<AsyncResult<ComDayCqDamScene7ImplScene7UploadServiceImplInfo>> handler);
    
    //comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer
    void comDayCqDamStockIntegrationImplCacheStockCacheConfigurationSer(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String getCacheExpirationUnit, Integer getCacheExpirationValue, Handler<AsyncResult<ComDayCqDamStockIntegrationImplCacheStockCacheConfigurationSerInfo>> handler);
    
    //comDayCqDamStockIntegrationImplConfigurationStockConfiguration
    void comDayCqDamStockIntegrationImplConfigurationStockConfiguration(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String locale, String imsConfig, Handler<AsyncResult<ComDayCqDamStockIntegrationImplConfigurationStockConfigurationInfo>> handler);
    
    //comDayCqDamVideoImplServletVideoTestServlet
    void comDayCqDamVideoImplServletVideoTestServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, Handler<AsyncResult<ComDayCqDamVideoImplServletVideoTestServletInfo>> handler);
    
    //comDayCqExtwidgetServletsImageSpriteServlet
    void comDayCqExtwidgetServletsImageSpriteServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxWidth, Integer maxHeight, Handler<AsyncResult<ComDayCqExtwidgetServletsImageSpriteServletInfo>> handler);
    
    //comDayCqImageInternalFontFontHelper
    void comDayCqImageInternalFontFontHelper(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> fontpath, Integer oversamplingFactor, Handler<AsyncResult<ComDayCqImageInternalFontFontHelperInfo>> handler);
    
    //comDayCqJcrclustersupportClusterStartLevelController
    void comDayCqJcrclustersupportClusterStartLevelController(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean clusterLevelEnable, Integer clusterMasterLevel, Integer clusterSlaveLevel, Handler<AsyncResult<ComDayCqJcrclustersupportClusterStartLevelControllerInfo>> handler);
    
    //comDayCqMailerDefaultMailService
    void comDayCqMailerDefaultMailService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String smtpHost, Integer smtpPort, String smtpUser, String smtpPassword, String fromAddress, Boolean smtpSsl, Boolean smtpStarttls, Boolean debugEmail, Handler<AsyncResult<ComDayCqMailerDefaultMailServiceInfo>> handler);
    
    //comDayCqMailerImplCqMailingService
    void comDayCqMailerImplCqMailingService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String maxRecipientCount, Handler<AsyncResult<ComDayCqMailerImplCqMailingServiceInfo>> handler);
    
    //comDayCqMailerImplEmailCqEmailTemplateFactory
    void comDayCqMailerImplEmailCqEmailTemplateFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String mailerEmailCharset, Handler<AsyncResult<ComDayCqMailerImplEmailCqEmailTemplateFactoryInfo>> handler);
    
    //comDayCqMailerImplEmailCqRetrieverTemplateFactory
    void comDayCqMailerImplEmailCqRetrieverTemplateFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean mailerEmailEmbed, String mailerEmailCharset, String mailerEmailRetrieverUserID, String mailerEmailRetrieverUserPWD, Handler<AsyncResult<ComDayCqMailerImplEmailCqRetrieverTemplateFactoryInfo>> handler);
    
    //comDayCqMcmCampaignImplIntegrationConfigImpl
    void comDayCqMcmCampaignImplIntegrationConfigImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> aemMcmCampaignFormConstraints, String aemMcmCampaignPublicUrl, Boolean aemMcmCampaignRelaxedSSL, Handler<AsyncResult<ComDayCqMcmCampaignImplIntegrationConfigImplInfo>> handler);
    
    //comDayCqMcmCampaignImporterPersonalizedTextHandlerFactory
    void comDayCqMcmCampaignImporterPersonalizedTextHandlerFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqMcmCampaignImporterPersonalizedTextHandlerFactoryInfo>> handler);
    
    //comDayCqMcmCoreNewsletterNewsletterEmailServiceImpl
    void comDayCqMcmCoreNewsletterNewsletterEmailServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String fromAddress, String senderHost, String maxBounceCount, Handler<AsyncResult<ComDayCqMcmCoreNewsletterNewsletterEmailServiceImplInfo>> handler);
    
    //comDayCqMcmImplMCMConfiguration
    void comDayCqMcmImplMCMConfiguration(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> experienceIndirection, List<String> touchpointIndirection, Handler<AsyncResult<ComDayCqMcmImplMCMConfigurationInfo>> handler);
    
    //comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen
    void comDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponen(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, String componentResourceType, Handler<AsyncResult<ComDayCqMcmLandingpageParserTaghandlersCtaClickThroughComponenInfo>> handler);
    
    //comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug
    void comDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThroug(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, String componentResourceType, Handler<AsyncResult<ComDayCqMcmLandingpageParserTaghandlersCtaGraphicalClickThrougInfo>> handler);
    
    //comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent
    void comDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponent(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqMcmLandingpageParserTaghandlersCtaLeadFormCTAComponentInfo>> handler);
    
    //comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa
    void comDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHa(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqMcmLandingpageParserTaghandlersMboxMBoxExperienceTagHaInfo>> handler);
    
    //comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH
    void comDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagH(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, String componentResourceType, Handler<AsyncResult<ComDayCqMcmLandingpageParserTaghandlersMboxTargetComponentTagHInfo>> handler);
    
    //comDayCqNotificationImplNotificationServiceImpl
    void comDayCqNotificationImplNotificationServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventFilter, Handler<AsyncResult<ComDayCqNotificationImplNotificationServiceImplInfo>> handler);
    
    //comDayCqPersonalizationImplServletsTargetingConfigurationServlet
    void comDayCqPersonalizationImplServletsTargetingConfigurationServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean forcelocation, Handler<AsyncResult<ComDayCqPersonalizationImplServletsTargetingConfigurationServletInfo>> handler);
    
    //comDayCqPollingImporterImplManagedPollConfigImpl
    void comDayCqPollingImporterImplManagedPollConfigImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String id, Boolean enabled, Boolean reference, Integer interval, String expression, String source, String target, String login, String password, Handler<AsyncResult<ComDayCqPollingImporterImplManagedPollConfigImplInfo>> handler);
    
    //comDayCqPollingImporterImplManagedPollingImporterImpl
    void comDayCqPollingImporterImplManagedPollingImporterImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String importerUser, Handler<AsyncResult<ComDayCqPollingImporterImplManagedPollingImporterImplInfo>> handler);
    
    //comDayCqPollingImporterImplPollingImporterImpl
    void comDayCqPollingImporterImplPollingImporterImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer importerMinInterval, String importerUser, List<String> excludePaths, List<String> includePaths, Handler<AsyncResult<ComDayCqPollingImporterImplPollingImporterImplInfo>> handler);
    
    //comDayCqReplicationAuditReplicationEventListener
    void comDayCqReplicationAuditReplicationEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, Handler<AsyncResult<ComDayCqReplicationAuditReplicationEventListenerInfo>> handler);
    
    //comDayCqReplicationContentStaticContentBuilder
    void comDayCqReplicationContentStaticContentBuilder(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String host, Integer port, Handler<AsyncResult<ComDayCqReplicationContentStaticContentBuilderInfo>> handler);
    
    //comDayCqReplicationImplAgentManagerImpl
    void comDayCqReplicationImplAgentManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jobTopics, String serviceUserTarget, String agentProviderTarget, Handler<AsyncResult<ComDayCqReplicationImplAgentManagerImplInfo>> handler);
    
    //comDayCqReplicationImplContentDurboBinaryLessContentBuilder
    void comDayCqReplicationImplContentDurboBinaryLessContentBuilder(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer binaryThreshold, Handler<AsyncResult<ComDayCqReplicationImplContentDurboBinaryLessContentBuilderInfo>> handler);
    
    //comDayCqReplicationImplContentDurboDurboImportConfigurationProv
    void comDayCqReplicationImplContentDurboDurboImportConfigurationProv(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean preserveHierarchyNodes, Boolean ignoreVersioning, Boolean importAcl, Integer saveThreshold, Boolean preserveUserPaths, Boolean preserveUuid, List<String> preserveUuidNodetypes, List<String> preserveUuidSubtrees, Boolean autoCommit, Handler<AsyncResult<ComDayCqReplicationImplContentDurboDurboImportConfigurationProvInfo>> handler);
    
    //comDayCqReplicationImplReplicationContentFactoryProviderImpl
    void comDayCqReplicationImplReplicationContentFactoryProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean replicationContentUseFileStorage, Integer replicationContentMaxCommitAttempts, Handler<AsyncResult<ComDayCqReplicationImplReplicationContentFactoryProviderImplInfo>> handler);
    
    //comDayCqReplicationImplReplicationReceiverImpl
    void comDayCqReplicationImplReplicationReceiverImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer receiverTmpfileThreshold, Boolean receiverPackagesUseInstall, Handler<AsyncResult<ComDayCqReplicationImplReplicationReceiverImplInfo>> handler);
    
    //comDayCqReplicationImplReplicatorImpl
    void comDayCqReplicationImplReplicatorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean distributeEvents, Handler<AsyncResult<ComDayCqReplicationImplReplicatorImplInfo>> handler);
    
    //comDayCqReplicationImplReverseReplicator
    void comDayCqReplicationImplReverseReplicator(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer schedulerPeriod, Handler<AsyncResult<ComDayCqReplicationImplReverseReplicatorInfo>> handler);
    
    //comDayCqReplicationImplTransportBinaryLessTransportHandler
    void comDayCqReplicationImplTransportBinaryLessTransportHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> disabledCipherSuites, List<String> enabledCipherSuites, Handler<AsyncResult<ComDayCqReplicationImplTransportBinaryLessTransportHandlerInfo>> handler);
    
    //comDayCqReplicationImplTransportHttp
    void comDayCqReplicationImplTransportHttp(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> disabledCipherSuites, List<String> enabledCipherSuites, Handler<AsyncResult<ComDayCqReplicationImplTransportHttpInfo>> handler);
    
    //comDayCqReportingImplCacheCacheImpl
    void comDayCqReportingImplCacheCacheImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean repcacheEnable, Integer repcacheTtl, Integer repcacheMax, Handler<AsyncResult<ComDayCqReportingImplCacheCacheImplInfo>> handler);
    
    //comDayCqReportingImplConfigServiceImpl
    void comDayCqReportingImplConfigServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String repconfTimezone, String repconfLocale, String repconfSnapshots, String repconfRepdir, Integer repconfHourofday, Integer repconfMinofhour, Integer repconfMaxrows, Boolean repconfFakedata, String repconfSnapshotuser, Boolean repconfEnforcesnapshotuser, Handler<AsyncResult<ComDayCqReportingImplConfigServiceImplInfo>> handler);
    
    //comDayCqReportingImplRLogAnalyzer
    void comDayCqReportingImplRLogAnalyzer(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String requestLogOutput, Handler<AsyncResult<ComDayCqReportingImplRLogAnalyzerInfo>> handler);
    
    //comDayCqRewriterLinkcheckerImplLinkCheckerImpl
    void comDayCqRewriterLinkcheckerImplLinkCheckerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer schedulerPeriod, Boolean schedulerConcurrent, Integer serviceBadLinkToleranceInterval, List<String> serviceCheckOverridePatterns, Boolean serviceCacheBrokenInternalLinks, List<String> serviceSpecialLinkPrefix, List<String> serviceSpecialLinkPatterns, Handler<AsyncResult<ComDayCqRewriterLinkcheckerImplLinkCheckerImplInfo>> handler);
    
    //comDayCqRewriterLinkcheckerImplLinkCheckerTask
    void comDayCqRewriterLinkcheckerImplLinkCheckerTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer schedulerPeriod, Boolean schedulerConcurrent, Integer goodLinkTestInterval, Integer badLinkTestInterval, Integer linkUnusedInterval, Integer connectionTimeout, Handler<AsyncResult<ComDayCqRewriterLinkcheckerImplLinkCheckerTaskInfo>> handler);
    
    //comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory
    void comDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean linkcheckertransformerDisableRewriting, Boolean linkcheckertransformerDisableChecking, Integer linkcheckertransformerMapCacheSize, Boolean linkcheckertransformerStrictExtensionCheck, Boolean linkcheckertransformerStripHtmltExtension, List<String> linkcheckertransformerRewriteElements, List<String> linkcheckertransformerStripExtensionPathBlacklist, Handler<AsyncResult<ComDayCqRewriterLinkcheckerImplLinkCheckerTransformerFactoryInfo>> handler);
    
    //comDayCqRewriterLinkcheckerImplLinkInfoStorageImpl
    void comDayCqRewriterLinkcheckerImplLinkInfoStorageImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceMaxLinksPerHost, Boolean serviceSaveExternalLinkReferences, Handler<AsyncResult<ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplInfo>> handler);
    
    //comDayCqRewriterProcessorImplHtmlParserFactory
    void comDayCqRewriterProcessorImplHtmlParserFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> htmlparserProcessTags, Boolean htmlparserPreserveCamelCase, Handler<AsyncResult<ComDayCqRewriterProcessorImplHtmlParserFactoryInfo>> handler);
    
    //comDayCqSearchImplBuilderQueryBuilderImpl
    void comDayCqSearchImplBuilderQueryBuilderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> excerptProperties, Integer cacheMaxEntries, Integer cacheEntryLifetime, Boolean xpathUnion, Handler<AsyncResult<ComDayCqSearchImplBuilderQueryBuilderImplInfo>> handler);
    
    //comDayCqSearchSuggestImplSuggestionIndexManagerImpl
    void comDayCqSearchSuggestImplSuggestionIndexManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String pathBuilderTarget, String suggestBasepath, Handler<AsyncResult<ComDayCqSearchSuggestImplSuggestionIndexManagerImplInfo>> handler);
    
    //comDayCqSearchpromoteImplPublishSearchPromoteConfigHandler
    void comDayCqSearchpromoteImplPublishSearchPromoteConfigHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqSearchpromoteConfighandlerEnabled, Handler<AsyncResult<ComDayCqSearchpromoteImplPublishSearchPromoteConfigHandlerInfo>> handler);
    
    //comDayCqSearchpromoteImplSearchPromoteServiceImpl
    void comDayCqSearchpromoteImplSearchPromoteServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String cqSearchpromoteConfigurationServerUri, String cqSearchpromoteConfigurationEnvironment, Integer connectionTimeout, Integer socketTimeout, Handler<AsyncResult<ComDayCqSearchpromoteImplSearchPromoteServiceImplInfo>> handler);
    
    //comDayCqSecurityACLSetup
    void comDayCqSecurityACLSetup(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqAclsetupRules, Handler<AsyncResult<ComDayCqSecurityACLSetupInfo>> handler);
    
    //comDayCqStatisticsImplStatisticsServiceImpl
    void comDayCqStatisticsImplStatisticsServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer schedulerPeriod, Boolean schedulerConcurrent, String path, String workspace, String keywordsPath, Boolean asyncEntries, Handler<AsyncResult<ComDayCqStatisticsImplStatisticsServiceImplInfo>> handler);
    
    //comDayCqTaggingImplJcrTagManagerFactoryImpl
    void comDayCqTaggingImplJcrTagManagerFactoryImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean validationEnabled, Handler<AsyncResult<ComDayCqTaggingImplJcrTagManagerFactoryImplInfo>> handler);
    
    //comDayCqTaggingImplSearchTagPredicateEvaluator
    void comDayCqTaggingImplSearchTagPredicateEvaluator(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean ignorePath, Handler<AsyncResult<ComDayCqTaggingImplSearchTagPredicateEvaluatorInfo>> handler);
    
    //comDayCqTaggingImplTagGarbageCollector
    void comDayCqTaggingImplTagGarbageCollector(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, Handler<AsyncResult<ComDayCqTaggingImplTagGarbageCollectorInfo>> handler);
    
    //comDayCqWcmContentsyncImplHandlerPagesUpdateHandler
    void comDayCqWcmContentsyncImplHandlerPagesUpdateHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqPagesupdatehandlerImageresourcetypes, Handler<AsyncResult<ComDayCqWcmContentsyncImplHandlerPagesUpdateHandlerInfo>> handler);
    
    //comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor
    void comDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqContentsyncPathrewritertransformerMappingLinks, List<String> cqContentsyncPathrewritertransformerMappingClientlibs, List<String> cqContentsyncPathrewritertransformerMappingImages, String cqContentsyncPathrewritertransformerAttributePattern, String cqContentsyncPathrewritertransformerClientlibraryPattern, String cqContentsyncPathrewritertransformerClientlibraryReplace, Handler<AsyncResult<ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorInfo>> handler);
    
    //comDayCqWcmCoreImplAuthoringUIModeServiceImpl
    void comDayCqWcmCoreImplAuthoringUIModeServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String authoringUIModeServiceDefault, Handler<AsyncResult<ComDayCqWcmCoreImplAuthoringUIModeServiceImplInfo>> handler);
    
    //comDayCqWcmCoreImplCommandsWCMCommandServlet
    void comDayCqWcmCoreImplCommandsWCMCommandServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> wcmcommandservletDeleteWhitelist, Handler<AsyncResult<ComDayCqWcmCoreImplCommandsWCMCommandServletInfo>> handler);
    
    //comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl
    void comDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String dimDefaultMode, Boolean dimAppcacheEnabled, Handler<AsyncResult<ComDayCqWcmCoreImplDevicedetectionDeviceIdentificationModeImplInfo>> handler);
    
    //comDayCqWcmCoreImplEventPageEventAuditListener
    void comDayCqWcmCoreImplEventPageEventAuditListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String configured, Handler<AsyncResult<ComDayCqWcmCoreImplEventPageEventAuditListenerInfo>> handler);
    
    //comDayCqWcmCoreImplEventPagePostProcessor
    void comDayCqWcmCoreImplEventPagePostProcessor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> paths, Handler<AsyncResult<ComDayCqWcmCoreImplEventPagePostProcessorInfo>> handler);
    
    //comDayCqWcmCoreImplEventRepositoryChangeEventListener
    void comDayCqWcmCoreImplEventRepositoryChangeEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> paths, List<String> excludedPaths, Handler<AsyncResult<ComDayCqWcmCoreImplEventRepositoryChangeEventListenerInfo>> handler);
    
    //comDayCqWcmCoreImplEventTemplatePostProcessor
    void comDayCqWcmCoreImplEventTemplatePostProcessor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String paths, Handler<AsyncResult<ComDayCqWcmCoreImplEventTemplatePostProcessorInfo>> handler);
    
    //comDayCqWcmCoreImplLanguageManagerImpl
    void comDayCqWcmCoreImplLanguageManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String langmgrListPath, List<String> langmgrCountryDefault, Handler<AsyncResult<ComDayCqWcmCoreImplLanguageManagerImplInfo>> handler);
    
    //comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl
    void comDayCqWcmCoreImplLinkCheckerConfigurationFactoryImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String linkExpiredPrefix, Boolean linkExpiredRemove, String linkExpiredSuffix, String linkInvalidPrefix, Boolean linkInvalidRemove, String linkInvalidSuffix, String linkPredatedPrefix, Boolean linkPredatedRemove, String linkPredatedSuffix, List<String> linkWcmmodes, Handler<AsyncResult<ComDayCqWcmCoreImplLinkCheckerConfigurationFactoryImplInfo>> handler);
    
    //comDayCqWcmCoreImplPagePageInfoAggregatorImpl
    void comDayCqWcmCoreImplPagePageInfoAggregatorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String pageInfoProviderPropertyRegexDefault, String pageInfoProviderPropertyName, Handler<AsyncResult<ComDayCqWcmCoreImplPagePageInfoAggregatorImplInfo>> handler);
    
    //comDayCqWcmCoreImplPagePageManagerFactoryImpl
    void comDayCqWcmCoreImplPagePageManagerFactoryImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String illegalCharMapping, Boolean pageSubTreeActivationCheck, Handler<AsyncResult<ComDayCqWcmCoreImplPagePageManagerFactoryImplInfo>> handler);
    
    //comDayCqWcmCoreImplReferencesContentContentReferenceConfig
    void comDayCqWcmCoreImplReferencesContentContentReferenceConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> contentReferenceConfigResourceTypes, Handler<AsyncResult<ComDayCqWcmCoreImplReferencesContentContentReferenceConfigInfo>> handler);
    
    //comDayCqWcmCoreImplServletsContentfinderAssetViewHandler
    void comDayCqWcmCoreImplServletsContentfinderAssetViewHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean damShowexpired, Boolean damShowhidden, Boolean tagTitleSearch, String guessTotal, String damExpiryProperty, Handler<AsyncResult<ComDayCqWcmCoreImplServletsContentfinderAssetViewHandlerInfo>> handler);
    
    //comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie
    void comDayCqWcmCoreImplServletsContentfinderConnectorConnectorVie(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> itemResourceTypes, Handler<AsyncResult<ComDayCqWcmCoreImplServletsContentfinderConnectorConnectorVieInfo>> handler);
    
    //comDayCqWcmCoreImplServletsContentfinderPageViewHandler
    void comDayCqWcmCoreImplServletsContentfinderPageViewHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String guessTotal, Boolean tagTitleSearch, Handler<AsyncResult<ComDayCqWcmCoreImplServletsContentfinderPageViewHandlerInfo>> handler);
    
    //comDayCqWcmCoreImplServletsFindReplaceServlet
    void comDayCqWcmCoreImplServletsFindReplaceServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> scope, Handler<AsyncResult<ComDayCqWcmCoreImplServletsFindReplaceServletInfo>> handler);
    
    //comDayCqWcmCoreImplServletsReferenceSearchServlet
    void comDayCqWcmCoreImplServletsReferenceSearchServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer referencesearchservletMaxReferencesPerPage, Integer referencesearchservletMaxPages, Handler<AsyncResult<ComDayCqWcmCoreImplServletsReferenceSearchServletInfo>> handler);
    
    //comDayCqWcmCoreImplServletsThumbnailServlet
    void comDayCqWcmCoreImplServletsThumbnailServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String workspace, List<String> dimensions, Handler<AsyncResult<ComDayCqWcmCoreImplServletsThumbnailServletInfo>> handler);
    
    //comDayCqWcmCoreImplUtilsDefaultPageNameValidator
    void comDayCqWcmCoreImplUtilsDefaultPageNameValidator(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String nonValidChars, Handler<AsyncResult<ComDayCqWcmCoreImplUtilsDefaultPageNameValidatorInfo>> handler);
    
    //comDayCqWcmCoreImplVariantsPageVariantsProviderImpl
    void comDayCqWcmCoreImplVariantsPageVariantsProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String defaultExternalizerDomain, Handler<AsyncResult<ComDayCqWcmCoreImplVariantsPageVariantsProviderImplInfo>> handler);
    
    //comDayCqWcmCoreImplVersionManagerImpl
    void comDayCqWcmCoreImplVersionManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean versionmanagerCreateVersionOnActivation, Boolean versionmanagerPurgingEnabled, List<String> versionmanagerPurgePaths, List<String> versionmanagerIvPaths, Integer versionmanagerMaxAgeDays, Integer versionmanagerMaxNumberVersions, Integer versionmanagerMinNumberVersions, Handler<AsyncResult<ComDayCqWcmCoreImplVersionManagerImplInfo>> handler);
    
    //comDayCqWcmCoreImplVersionPurgeTask
    void comDayCqWcmCoreImplVersionPurgeTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> versionpurgePaths, Boolean versionpurgeRecursive, Integer versionpurgeMaxVersions, Integer versionpurgeMinVersions, Integer versionpurgeMaxAgeDays, Handler<AsyncResult<ComDayCqWcmCoreImplVersionPurgeTaskInfo>> handler);
    
    //comDayCqWcmCoreImplWCMDebugFilter
    void comDayCqWcmCoreImplWCMDebugFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean wcmdbgfilterEnabled, Boolean wcmdbgfilterJspDebug, Handler<AsyncResult<ComDayCqWcmCoreImplWCMDebugFilterInfo>> handler);
    
    //comDayCqWcmCoreImplWCMDeveloperModeFilter
    void comDayCqWcmCoreImplWCMDeveloperModeFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean wcmdevmodefilterEnabled, Handler<AsyncResult<ComDayCqWcmCoreImplWCMDeveloperModeFilterInfo>> handler);
    
    //comDayCqWcmCoreImplWarpTimeWarpFilter
    void comDayCqWcmCoreImplWarpTimeWarpFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String filterOrder, String filterScope, Handler<AsyncResult<ComDayCqWcmCoreImplWarpTimeWarpFilterInfo>> handler);
    
    //comDayCqWcmCoreMvtMVTStatisticsImpl
    void comDayCqWcmCoreMvtMVTStatisticsImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String mvtstatisticsTrackingurl, Handler<AsyncResult<ComDayCqWcmCoreMvtMVTStatisticsImplInfo>> handler);
    
    //comDayCqWcmCoreStatsPageViewStatisticsImpl
    void comDayCqWcmCoreStatsPageViewStatisticsImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String pageviewstatisticsTrackingurl, String pageviewstatisticsTrackingscriptEnabled, Handler<AsyncResult<ComDayCqWcmCoreStatsPageViewStatisticsImplInfo>> handler);
    
    //comDayCqWcmCoreWCMRequestFilter
    void comDayCqWcmCoreWCMRequestFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String wcmfilterMode, Handler<AsyncResult<ComDayCqWcmCoreWCMRequestFilterInfo>> handler);
    
    //comDayCqWcmDesignimporterDesignPackageImporter
    void comDayCqWcmDesignimporterDesignPackageImporter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> extractFilter, Handler<AsyncResult<ComDayCqWcmDesignimporterDesignPackageImporterInfo>> handler);
    
    //comDayCqWcmDesignimporterImplCanvasBuilderImpl
    void comDayCqWcmDesignimporterImplCanvasBuilderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String filepattern, Boolean buildPageNodes, Boolean buildClientLibs, Boolean buildCanvasComponent, Handler<AsyncResult<ComDayCqWcmDesignimporterImplCanvasBuilderImplInfo>> handler);
    
    //comDayCqWcmDesignimporterImplCanvasPageDeleteHandler
    void comDayCqWcmDesignimporterImplCanvasPageDeleteHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer minThreadPoolSize, Integer maxThreadPoolSize, Handler<AsyncResult<ComDayCqWcmDesignimporterImplCanvasPageDeleteHandlerInfo>> handler);
    
    //comDayCqWcmDesignimporterImplEntryPreprocessorImpl
    void comDayCqWcmDesignimporterImplEntryPreprocessorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String searchPattern, String replacePattern, Handler<AsyncResult<ComDayCqWcmDesignimporterImplEntryPreprocessorImplInfo>> handler);
    
    //comDayCqWcmDesignimporterImplMobileCanvasBuilderImpl
    void comDayCqWcmDesignimporterImplMobileCanvasBuilderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String filepattern, List<String> deviceGroups, Boolean buildPageNodes, Boolean buildClientLibs, Boolean buildCanvasComponent, Handler<AsyncResult<ComDayCqWcmDesignimporterImplMobileCanvasBuilderImplInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone
    void comDayCqWcmDesignimporterParserTaghandlersFactoryCanvasCompone(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryCanvasComponeInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon
    void comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultCompon(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultComponInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan
    void comDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHan(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryDefaultTagHanInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle
    void comDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandle(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryHeadTagHandleInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand
    void comDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHand(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryIFrameTagHandInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen
    void comDayCqWcmDesignimporterParserTaghandlersFactoryImageComponen(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, String componentResourceType, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryImageComponenInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler
    void comDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryImgTagHandlerInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT
    void comDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptT(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryInlineScriptTInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle
    void comDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandle(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryLinkTagHandleInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle
    void comDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandle(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryMetaTagHandleInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH
    void comDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagH(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryNonScriptTagHInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone
    void comDayCqWcmDesignimporterParserTaghandlersFactoryParsysCompone(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, String componentResourceType, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryParsysComponeInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand
    void comDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHand(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryScriptTagHandInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl
    void comDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryStyleTagHandlInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent
    void comDayCqWcmDesignimporterParserTaghandlersFactoryTextComponent(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, String componentResourceType, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryTextComponentInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen
    void comDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponen(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, String componentResourceType, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleComponenInfo>> handler);
    
    //comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl
    void comDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String tagpattern, Handler<AsyncResult<ComDayCqWcmDesignimporterParserTaghandlersFactoryTitleTagHandlInfo>> handler);
    
    //comDayCqWcmFoundationFormsImplFormChooserServlet
    void comDayCqWcmFoundationFormsImplFormChooserServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String serviceName, String slingServletResourceTypes, String slingServletSelectors, List<String> slingServletMethods, Boolean formsFormchooserservletAdvansesearchRequire, Handler<AsyncResult<ComDayCqWcmFoundationFormsImplFormChooserServletInfo>> handler);
    
    //comDayCqWcmFoundationFormsImplFormParagraphPostProcessor
    void comDayCqWcmFoundationFormsImplFormParagraphPostProcessor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean formsFormparagraphpostprocessorEnabled, List<String> formsFormparagraphpostprocessorFormresourcetypes, Handler<AsyncResult<ComDayCqWcmFoundationFormsImplFormParagraphPostProcessorInfo>> handler);
    
    //comDayCqWcmFoundationFormsImplFormsHandlingServlet
    void comDayCqWcmFoundationFormsImplFormsHandlingServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String nameWhitelist, Boolean allowExpressions, Handler<AsyncResult<ComDayCqWcmFoundationFormsImplFormsHandlingServletInfo>> handler);
    
    //comDayCqWcmFoundationFormsImplMailServlet
    void comDayCqWcmFoundationFormsImplMailServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingServletResourceTypes, String slingServletSelectors, List<String> resourceWhitelist, String resourceBlacklist, Handler<AsyncResult<ComDayCqWcmFoundationFormsImplMailServletInfo>> handler);
    
    //comDayCqWcmFoundationImplAdaptiveImageComponentServlet
    void comDayCqWcmFoundationImplAdaptiveImageComponentServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> adaptSupportedWidths, Handler<AsyncResult<ComDayCqWcmFoundationImplAdaptiveImageComponentServletInfo>> handler);
    
    //comDayCqWcmFoundationImplHTTPAuthHandler
    void comDayCqWcmFoundationImplHTTPAuthHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, Boolean authHttpNologin, String authHttpRealm, String authDefaultLoginpage, List<String> authCredForm, List<String> authCredUtf8, Handler<AsyncResult<ComDayCqWcmFoundationImplHTTPAuthHandlerInfo>> handler);
    
    //comDayCqWcmFoundationImplPageImpressionsTracker
    void comDayCqWcmFoundationImplPageImpressionsTracker(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingAuthRequirements, Handler<AsyncResult<ComDayCqWcmFoundationImplPageImpressionsTrackerInfo>> handler);
    
    //comDayCqWcmFoundationImplPageRedirectServlet
    void comDayCqWcmFoundationImplPageRedirectServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> excludedResourceTypes, Handler<AsyncResult<ComDayCqWcmFoundationImplPageRedirectServletInfo>> handler);
    
    //comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist
    void comDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklist(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> defaultAttachmentTypeBlacklist, List<String> baselineAttachmentTypeBlacklist, Handler<AsyncResult<ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistInfo>> handler);
    
    //comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl
    void comDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> parameterWhitelist, List<String> parameterWhitelistPrefixes, List<String> binaryParameterWhitelist, List<String> modifierWhitelist, List<String> operationWhitelist, List<String> operationWhitelistPrefixes, List<String> typehintWhitelist, List<String> resourcetypeWhitelist, Handler<AsyncResult<ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplInfo>> handler);
    
    //comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory
    void comDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean deviceInfoTransformerEnabled, String deviceInfoTransformerCssStyle, Handler<AsyncResult<ComDayCqWcmMobileCoreImplDeviceDeviceInfoTransformerFactoryInfo>> handler);
    
    //comDayCqWcmMobileCoreImplRedirectRedirectFilter
    void comDayCqWcmMobileCoreImplRedirectRedirectFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean redirectEnabled, Boolean redirectStatsEnabled, List<String> redirectExtensions, List<String> redirectPaths, Handler<AsyncResult<ComDayCqWcmMobileCoreImplRedirectRedirectFilterInfo>> handler);
    
    //comDayCqWcmMsmImplActionsContentCopyActionFactory
    void comDayCqWcmMsmImplActionsContentCopyActionFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqWcmMsmActionExcludednodetypes, List<String> cqWcmMsmActionExcludedparagraphitems, List<String> cqWcmMsmActionExcludedprops, String contentcopyactionOrderStyle, Handler<AsyncResult<ComDayCqWcmMsmImplActionsContentCopyActionFactoryInfo>> handler);
    
    //comDayCqWcmMsmImplActionsContentDeleteActionFactory
    void comDayCqWcmMsmImplActionsContentDeleteActionFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqWcmMsmActionExcludednodetypes, List<String> cqWcmMsmActionExcludedparagraphitems, List<String> cqWcmMsmActionExcludedprops, Handler<AsyncResult<ComDayCqWcmMsmImplActionsContentDeleteActionFactoryInfo>> handler);
    
    //comDayCqWcmMsmImplActionsContentUpdateActionFactory
    void comDayCqWcmMsmImplActionsContentUpdateActionFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqWcmMsmActionExcludednodetypes, List<String> cqWcmMsmActionExcludedparagraphitems, List<String> cqWcmMsmActionExcludedprops, List<String> cqWcmMsmActionIgnoredMixin, Handler<AsyncResult<ComDayCqWcmMsmImplActionsContentUpdateActionFactoryInfo>> handler);
    
    //comDayCqWcmMsmImplActionsOrderChildrenActionFactory
    void comDayCqWcmMsmImplActionsOrderChildrenActionFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqWcmMsmActionExcludednodetypes, List<String> cqWcmMsmActionExcludedparagraphitems, List<String> cqWcmMsmActionExcludedprops, Handler<AsyncResult<ComDayCqWcmMsmImplActionsOrderChildrenActionFactoryInfo>> handler);
    
    //comDayCqWcmMsmImplActionsPageMoveActionFactory
    void comDayCqWcmMsmImplActionsPageMoveActionFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqWcmMsmActionExcludednodetypes, List<String> cqWcmMsmActionExcludedparagraphitems, List<String> cqWcmMsmActionExcludedprops, Boolean cqWcmMsmImplActionsPagemovePropReferenceUpdate, Handler<AsyncResult<ComDayCqWcmMsmImplActionsPageMoveActionFactoryInfo>> handler);
    
    //comDayCqWcmMsmImplActionsReferencesUpdateActionFactory
    void comDayCqWcmMsmImplActionsReferencesUpdateActionFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqWcmMsmActionExcludednodetypes, List<String> cqWcmMsmActionExcludedparagraphitems, List<String> cqWcmMsmActionExcludedprops, Boolean cqWcmMsmImplActionReferencesupdatePropUpdateNested, Handler<AsyncResult<ComDayCqWcmMsmImplActionsReferencesUpdateActionFactoryInfo>> handler);
    
    //comDayCqWcmMsmImplActionsVersionCopyActionFactory
    void comDayCqWcmMsmImplActionsVersionCopyActionFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cqWcmMsmActionExcludednodetypes, List<String> cqWcmMsmActionExcludedparagraphitems, List<String> cqWcmMsmActionExcludedprops, Handler<AsyncResult<ComDayCqWcmMsmImplActionsVersionCopyActionFactoryInfo>> handler);
    
    //comDayCqWcmMsmImplLiveRelationshipManagerImpl
    void comDayCqWcmMsmImplLiveRelationshipManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String liverelationshipmgrRelationsconfigDefault, Handler<AsyncResult<ComDayCqWcmMsmImplLiveRelationshipManagerImplInfo>> handler);
    
    //comDayCqWcmMsmImplRolloutManagerImpl
    void comDayCqWcmMsmImplRolloutManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventFilter, List<String> rolloutmgrExcludedpropsDefault, List<String> rolloutmgrExcludedparagraphpropsDefault, List<String> rolloutmgrExcludednodetypesDefault, Integer rolloutmgrThreadpoolMaxsize, Integer rolloutmgrThreadpoolMaxshutdowntime, String rolloutmgrThreadpoolPriority, Integer rolloutmgrCommitSize, Boolean rolloutmgrConflicthandlingEnabled, Handler<AsyncResult<ComDayCqWcmMsmImplRolloutManagerImplInfo>> handler);
    
    //comDayCqWcmMsmImplServletsAuditLogServlet
    void comDayCqWcmMsmImplServletsAuditLogServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer auditlogservletDefaultEventsCount, String auditlogservletDefaultPath, Handler<AsyncResult<ComDayCqWcmMsmImplServletsAuditLogServletInfo>> handler);
    
    //comDayCqWcmNotificationEmailImplEmailChannel
    void comDayCqWcmNotificationEmailImplEmailChannel(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String emailFrom, Handler<AsyncResult<ComDayCqWcmNotificationEmailImplEmailChannelInfo>> handler);
    
    //comDayCqWcmNotificationImplNotificationManagerImpl
    void comDayCqWcmNotificationImplNotificationManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> eventTopics, Handler<AsyncResult<ComDayCqWcmNotificationImplNotificationManagerImplInfo>> handler);
    
    //comDayCqWcmScriptingImplBVPManager
    void comDayCqWcmScriptingImplBVPManager(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> comDayCqWcmScriptingBvpScriptEngines, Handler<AsyncResult<ComDayCqWcmScriptingImplBVPManagerInfo>> handler);
    
    //comDayCqWcmUndoUndoConfig
    void comDayCqWcmUndoUndoConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean cqWcmUndoEnabled, String cqWcmUndoPath, Integer cqWcmUndoValidity, Integer cqWcmUndoSteps, String cqWcmUndoPersistence, Boolean cqWcmUndoPersistenceMode, String cqWcmUndoMarkermode, List<String> cqWcmUndoWhitelist, List<String> cqWcmUndoBlacklist, Handler<AsyncResult<ComDayCqWcmUndoUndoConfigInfo>> handler);
    
    //comDayCqWcmWebservicesupportImplReplicationEventListener
    void comDayCqWcmWebservicesupportImplReplicationEventListener(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> flushAgents, Handler<AsyncResult<ComDayCqWcmWebservicesupportImplReplicationEventListenerInfo>> handler);
    
    //comDayCqWcmWorkflowImplWcmWorkflowServiceImpl
    void comDayCqWcmWorkflowImplWcmWorkflowServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String eventFilter, Integer minThreadPoolSize, Integer maxThreadPoolSize, Boolean cqWcmWorkflowTerminateOnActivate, List<String> cqWcmWorklfowTerminateExclusionList, Handler<AsyncResult<ComDayCqWcmWorkflowImplWcmWorkflowServiceImplInfo>> handler);
    
    //comDayCqWcmWorkflowImplWorkflowPackageInfoProvider
    void comDayCqWcmWorkflowImplWorkflowPackageInfoProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> workflowpackageinfoproviderFilter, String workflowpackageinfoproviderFilterRootpath, Handler<AsyncResult<ComDayCqWcmWorkflowImplWorkflowPackageInfoProviderInfo>> handler);
    
    //comDayCqWidgetImplHtmlLibraryManagerImpl
    void comDayCqWidgetImplHtmlLibraryManagerImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String htmllibmanagerClientmanager, Boolean htmllibmanagerDebug, Boolean htmllibmanagerDebugConsole, String htmllibmanagerDebugInitJs, String htmllibmanagerDefaultthemename, String htmllibmanagerDefaultuserthemename, String htmllibmanagerFirebuglitePath, Boolean htmllibmanagerForceCQUrlInfo, Boolean htmllibmanagerGzip, Integer htmllibmanagerMaxage, Integer htmllibmanagerMaxDataUriSize, Boolean htmllibmanagerMinify, List<String> htmllibmanagerPathList, Boolean htmllibmanagerTiming, Handler<AsyncResult<ComDayCqWidgetImplHtmlLibraryManagerImplInfo>> handler);
    
    //comDayCqWidgetImplWidgetExtensionProviderImpl
    void comDayCqWidgetImplWidgetExtensionProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> extendableWidgets, Boolean widgetextensionproviderDebug, Handler<AsyncResult<ComDayCqWidgetImplWidgetExtensionProviderImplInfo>> handler);
    
    //comDayCqWorkflowImplEmailEMailNotificationService
    void comDayCqWorkflowImplEmailEMailNotificationService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String fromAddress, String hostPrefix, Boolean notifyOnabort, Boolean notifyOncomplete, Boolean notifyOncontainercomplete, Boolean notifyUseronly, Handler<AsyncResult<ComDayCqWorkflowImplEmailEMailNotificationServiceInfo>> handler);
    
    //comDayCqWorkflowImplEmailTaskEMailNotificationService
    void comDayCqWorkflowImplEmailTaskEMailNotificationService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean notifyOnupdate, Boolean notifyOncomplete, Handler<AsyncResult<ComDayCqWorkflowImplEmailTaskEMailNotificationServiceInfo>> handler);
    
    //comDayCrxSecurityTokenImplImplTokenAuthenticationHandler
    void comDayCrxSecurityTokenImplImplTokenAuthenticationHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, String tokenRequiredAttr, String tokenAlternateUrl, Boolean tokenEncapsulated, List<String> skipTokenRefresh, Handler<AsyncResult<ComDayCrxSecurityTokenImplImplTokenAuthenticationHandlerInfo>> handler);
    
    //comDayCrxSecurityTokenImplTokenCleanupTask
    void comDayCrxSecurityTokenImplTokenCleanupTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enableTokenCleanupTask, String schedulerExpression, Integer batchSize, Handler<AsyncResult<ComDayCrxSecurityTokenImplTokenCleanupTaskInfo>> handler);
    
    //guideLocalizationService
    void guideLocalizationService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> supportedLocales, List<String> localizableProperties, Handler<AsyncResult<GuideLocalizationServiceInfo>> handler);
    
    //MessagingUserComponentFactory
    void messagingUserComponentFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer priority, Handler<AsyncResult<MessagingUserComponentFactoryInfo>> handler);
    
    //orgApacheAriesJmxFrameworkStateConfig
    void orgApacheAriesJmxFrameworkStateConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean attributeChangeNotificationEnabled, Handler<AsyncResult<OrgApacheAriesJmxFrameworkStateConfigInfo>> handler);
    
    //orgApacheFelixEventadminImplEventAdmin
    void orgApacheFelixEventadminImplEventAdmin(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer orgApacheFelixEventadminThreadPoolSize, BigDecimal orgApacheFelixEventadminAsyncToSyncThreadRatio, Integer orgApacheFelixEventadminTimeout, Boolean orgApacheFelixEventadminRequireTopic, List<String> orgApacheFelixEventadminIgnoreTimeout, List<String> orgApacheFelixEventadminIgnoreTopic, Handler<AsyncResult<OrgApacheFelixEventadminImplEventAdminInfo>> handler);
    
    //orgApacheFelixHttp
    void orgApacheFelixHttp(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String orgApacheFelixHttpHost, Boolean orgApacheFelixHttpEnable, Integer orgOsgiServiceHttpPort, Integer orgApacheFelixHttpTimeout, Boolean orgApacheFelixHttpsEnable, Integer orgOsgiServiceHttpPortSecure, String orgApacheFelixHttpsKeystore, String orgApacheFelixHttpsKeystorePassword, String orgApacheFelixHttpsKeystoreKeyPassword, String orgApacheFelixHttpsTruststore, String orgApacheFelixHttpsTruststorePassword, String orgApacheFelixHttpsClientcertificate, String orgApacheFelixHttpContextPath, Boolean orgApacheFelixHttpMbeans, Integer orgApacheFelixHttpSessionTimeout, Integer orgApacheFelixHttpJettyThreadpoolMax, Integer orgApacheFelixHttpJettyAcceptors, Integer orgApacheFelixHttpJettySelectors, Integer orgApacheFelixHttpJettyHeaderBufferSize, Integer orgApacheFelixHttpJettyRequestBufferSize, Integer orgApacheFelixHttpJettyResponseBufferSize, Integer orgApacheFelixHttpJettyMaxFormSize, List<String> orgApacheFelixHttpPathExclusions, List<String> orgApacheFelixHttpsJettyCiphersuitesExcluded, List<String> orgApacheFelixHttpsJettyCiphersuitesIncluded, Boolean orgApacheFelixHttpJettySendServerHeader, List<String> orgApacheFelixHttpsJettyProtocolsIncluded, List<String> orgApacheFelixHttpsJettyProtocolsExcluded, Boolean orgApacheFelixProxyLoadBalancerConnectionEnable, Boolean orgApacheFelixHttpsJettyRenegotiateAllowed, Boolean orgApacheFelixHttpsJettySessionCookieHttpOnly, Boolean orgApacheFelixHttpsJettySessionCookieSecure, String orgEclipseJettyServletSessionIdPathParameterName, Boolean orgEclipseJettyServletCheckingRemoteSessionIdEncoding, String orgEclipseJettyServletSessionCookie, String orgEclipseJettyServletSessionDomain, String orgEclipseJettyServletSessionPath, Integer orgEclipseJettyServletMaxAge, String orgApacheFelixHttpName, Boolean orgApacheFelixJettyGziphandlerEnable, Integer orgApacheFelixJettyGzipMinGzipSize, Integer orgApacheFelixJettyGzipCompressionLevel, Integer orgApacheFelixJettyGzipInflateBufferSize, Boolean orgApacheFelixJettyGzipSyncFlush, List<String> orgApacheFelixJettyGzipExcludedUserAgents, List<String> orgApacheFelixJettyGzipIncludedMethods, List<String> orgApacheFelixJettyGzipExcludedMethods, List<String> orgApacheFelixJettyGzipIncludedPaths, List<String> orgApacheFelixJettyGzipExcludedPaths, List<String> orgApacheFelixJettyGzipIncludedMimeTypes, List<String> orgApacheFelixJettyGzipExcludedMimeTypes, Boolean orgApacheFelixHttpSessionInvalidate, Boolean orgApacheFelixHttpSessionUniqueid, Handler<AsyncResult<OrgApacheFelixHttpInfo>> handler);
    
    //orgApacheFelixHttpSslfilterSslFilter
    void orgApacheFelixHttpSslfilterSslFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String sslForwardHeader, String sslForwardValue, String sslForwardCertHeader, Boolean rewriteAbsoluteUrls, Handler<AsyncResult<OrgApacheFelixHttpSslfilterSslFilterInfo>> handler);
    
    //orgApacheFelixJaasConfigurationFactory
    void orgApacheFelixJaasConfigurationFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jaasControlFlag, Integer jaasRanking, String jaasRealmName, String jaasClassname, List<String> jaasOptions, Handler<AsyncResult<OrgApacheFelixJaasConfigurationFactoryInfo>> handler);
    
    //orgApacheFelixJaasConfigurationSpi
    void orgApacheFelixJaasConfigurationSpi(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jaasDefaultRealmName, String jaasConfigProviderName, String jaasGlobalConfigPolicy, Handler<AsyncResult<OrgApacheFelixJaasConfigurationSpiInfo>> handler);
    
    //orgApacheFelixScrScrService
    void orgApacheFelixScrScrService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer dsLoglevel, Boolean dsFactoryEnabled, Boolean dsDelayedKeepInstances, Integer dsLockTimeoutMilliseconds, Integer dsStopTimeoutMilliseconds, Boolean dsGlobalExtender, Handler<AsyncResult<OrgApacheFelixScrScrServiceInfo>> handler);
    
    //orgApacheFelixSystemreadyImplComponentsCheck
    void orgApacheFelixSystemreadyImplComponentsCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> componentsList, String type, Handler<AsyncResult<OrgApacheFelixSystemreadyImplComponentsCheckInfo>> handler);
    
    //orgApacheFelixSystemreadyImplFrameworkStartCheck
    void orgApacheFelixSystemreadyImplFrameworkStartCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer timeout, Integer targetStartLevel, String targetStartLevelPropName, String type, Handler<AsyncResult<OrgApacheFelixSystemreadyImplFrameworkStartCheckInfo>> handler);
    
    //orgApacheFelixSystemreadyImplServicesCheck
    void orgApacheFelixSystemreadyImplServicesCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> servicesList, String type, Handler<AsyncResult<OrgApacheFelixSystemreadyImplServicesCheckInfo>> handler);
    
    //orgApacheFelixSystemreadyImplServletSystemAliveServlet
    void orgApacheFelixSystemreadyImplServletSystemAliveServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String osgiHttpWhiteboardServletPattern, String osgiHttpWhiteboardContextSelect, Handler<AsyncResult<OrgApacheFelixSystemreadyImplServletSystemAliveServletInfo>> handler);
    
    //orgApacheFelixSystemreadyImplServletSystemReadyServlet
    void orgApacheFelixSystemreadyImplServletSystemReadyServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String osgiHttpWhiteboardServletPattern, String osgiHttpWhiteboardContextSelect, Handler<AsyncResult<OrgApacheFelixSystemreadyImplServletSystemReadyServletInfo>> handler);
    
    //orgApacheFelixSystemreadySystemReadyMonitor
    void orgApacheFelixSystemreadySystemReadyMonitor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer pollInterval, Handler<AsyncResult<OrgApacheFelixSystemreadySystemReadyMonitorInfo>> handler);
    
    //orgApacheFelixWebconsoleInternalServletOsgiManager
    void orgApacheFelixWebconsoleInternalServletOsgiManager(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String managerRoot, String httpServiceFilter, String defaultRender, String realm, String username, String password, String category, String locale, Integer loglevel, String plugins, Handler<AsyncResult<OrgApacheFelixWebconsoleInternalServletOsgiManagerInfo>> handler);
    
    //orgApacheFelixWebconsolePluginsEventInternalPluginServlet
    void orgApacheFelixWebconsolePluginsEventInternalPluginServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxSize, Handler<AsyncResult<OrgApacheFelixWebconsolePluginsEventInternalPluginServletInfo>> handler);
    
    //orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo
    void orgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCo(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer felixMemoryusageDumpThreshold, Integer felixMemoryusageDumpInterval, String felixMemoryusageDumpLocation, Handler<AsyncResult<OrgApacheFelixWebconsolePluginsMemoryusageInternalMemoryUsageCoInfo>> handler);
    
    //orgApacheHttpProxyconfigurator
    void orgApacheHttpProxyconfigurator(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean proxyEnabled, String proxyHost, Integer proxyPort, String proxyUser, String proxyPassword, List<String> proxyExceptions, Handler<AsyncResult<OrgApacheHttpProxyconfiguratorInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider
    void orgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String dir, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsBlobDatastoreDataStoreTextProviderInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore
    void orgApacheJackrabbitOakPluginsBlobDatastoreFileDataStore(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsBlobDatastoreFileDataStoreInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService
    void orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String mongouri, String db, Boolean socketKeepAlive, Integer cache, Integer nodeCachePercentage, Integer prevDocCachePercentage, Integer childrenCachePercentage, Integer diffCachePercentage, Integer cacheSegmentCount, Integer cacheStackMoveDistance, Integer blobCacheSize, String persistentCache, String journalCache, Boolean customBlobStore, Integer journalGCInterval, Integer journalGCMaxAge, Boolean prefetchExternalChanges, String role, Integer versionGcMaxAgeInSecs, String versionGCExpression, Integer versionGCTimeLimitInSecs, Integer blobGcMaxAgeInSecs, Integer blobTrackSnapshotIntervalInSecs, String repositoryHome, Integer maxReplicationLagInSecs, String documentStoreType, Boolean bundlingDisabled, Integer updateLimit, List<String> persistentCacheIncludes, String leaseCheckMode, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServiceInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre
    void orgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePre(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> persistentCacheIncludes, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsDocumentDocumentNodeStoreServicePreInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac
    void orgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCac(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> includedPaths, Boolean enableAsyncObserver, Integer observerQueueSize, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsDocumentSecondarySecondaryStoreCacInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsIndexAsyncIndexerService
    void orgApacheJackrabbitOakPluginsIndexAsyncIndexerService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> asyncConfigs, Integer leaseTimeOutMinutes, Integer failingIndexTimeoutSeconds, Integer errorWarnIntervalSeconds, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsIndexAsyncIndexerServiceInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ
    void orgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServ(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean disabled, Boolean debug, String localIndexDir, Boolean enableOpenIndexAsync, Integer threadPoolSize, Boolean prefetchIndexFiles, Integer extractedTextCacheSizeInMB, Integer extractedTextCacheExpiryInSecs, Boolean alwaysUsePreExtractedCache, Integer booleanClauseLimit, Boolean enableHybridIndexing, Integer hybridQueueSize, Boolean disableStoredIndexDefinition, Boolean deletedBlobsCollectionEnabled, Integer propIndexCleanerIntervalInSecs, Boolean enableSingleBlobIndexFiles, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo
    void orgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCo(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String solrHomePath, String solrCoreName, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsIndexSolrOsgiEmbeddedSolrServerCoInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers
    void orgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServers(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsIndexSolrOsgiNodeStateSolrServersInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration
    void orgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfiguration(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String pathDescField, String pathChildField, String pathParentField, String pathExactField, String catchAllField, String collapsedPathField, String pathDepthField, String commitPolicy, Integer rows, Boolean pathRestrictions, Boolean propertyRestrictions, Boolean primarytypesRestrictions, List<String> ignoredProperties, List<String> usedProperties, List<String> typeMappings, List<String> propertyMappings, Boolean collapseJcrcontentNodes, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsIndexSolrOsgiOakSolrConfigurationInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf
    void orgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConf(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String solrHttpUrl, String solrZkHost, String solrCollection, Integer solrSocketTimeout, Integer solrConnectionTimeout, Integer solrShardsNo, Integer solrReplicationFactor, String solrConfDir, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsIndexSolrOsgiRemoteSolrServerConfInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid
    void orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvid(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean queryAggregation, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrQueryIndexProvidInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe
    void orgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSe(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String serverType, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsIndexSolrOsgiSolrServerProviderSeInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory
    void orgApacheJackrabbitOakPluginsMetricStatisticsProviderFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String providerType, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsMetricStatisticsProviderFactoryInfo>> handler);
    
    //orgApacheJackrabbitOakPluginsObservationChangeCollectorProvider
    void orgApacheJackrabbitOakPluginsObservationChangeCollectorProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxItems, Integer maxPathDepth, Boolean enabled, Handler<AsyncResult<OrgApacheJackrabbitOakPluginsObservationChangeCollectorProviderInfo>> handler);
    
    //orgApacheJackrabbitOakQueryQueryEngineSettingsService
    void orgApacheJackrabbitOakQueryQueryEngineSettingsService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer queryLimitInMemory, Integer queryLimitReads, Boolean queryFailTraversal, Boolean fastQuerySize, Handler<AsyncResult<OrgApacheJackrabbitOakQueryQueryEngineSettingsServiceInfo>> handler);
    
    //orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig
    void orgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String orgApacheJackrabbitOakAuthenticationAppName, String orgApacheJackrabbitOakAuthenticationConfigSpiName, Handler<AsyncResult<OrgApacheJackrabbitOakSecurityAuthenticationAuthenticationConfigInfo>> handler);
    
    //orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti
    void orgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdenti(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String providerName, String hostName, Integer hostPort, Boolean hostSsl, Boolean hostTls, Boolean hostNoCertCheck, String bindDn, String bindPassword, String searchTimeout, Integer adminPoolMaxActive, Boolean adminPoolLookupOnValidate, Integer userPoolMaxActive, Boolean userPoolLookupOnValidate, String userBaseDN, List<String> userObjectclass, String userIdAttribute, String userExtraFilter, Boolean userMakeDnPath, String groupBaseDN, List<String> groupObjectclass, String groupNameAttribute, String groupExtraFilter, Boolean groupMakeDnPath, String groupMemberAttribute, Boolean useUidForExtId, List<String> customattributes, Handler<AsyncResult<OrgApacheJackrabbitOakSecurityAuthenticationLdapImplLdapIdentiInfo>> handler);
    
    //orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura
    void orgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfigura(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String tokenExpiration, String tokenLength, Boolean tokenRefresh, Integer tokenCleanupThreshold, String passwordHashAlgorithm, Integer passwordHashIterations, Integer passwordSaltSize, Handler<AsyncResult<OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraInfo>> handler);
    
    //orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur
    void orgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigur(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String permissionsJr2, String importBehavior, List<String> readPaths, List<String> administrativePrincipals, Integer configurationRanking, Handler<AsyncResult<OrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurInfo>> handler);
    
    //orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati
    void orgApacheJackrabbitOakSecurityInternalSecurityProviderRegistrati(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> requiredServicePids, String authorizationCompositionType, Handler<AsyncResult<OrgApacheJackrabbitOakSecurityInternalSecurityProviderRegistratiInfo>> handler);
    
    //orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName
    void orgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeName(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer length, Handler<AsyncResult<OrgApacheJackrabbitOakSecurityUserRandomAuthorizableNodeNameInfo>> handler);
    
    //orgApacheJackrabbitOakSecurityUserUserConfigurationImpl
    void orgApacheJackrabbitOakSecurityUserUserConfigurationImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String usersPath, String groupsPath, String systemRelativePath, Integer defaultDepth, String importBehavior, String passwordHashAlgorithm, Integer passwordHashIterations, Integer passwordSaltSize, Boolean omitAdminPw, Boolean supportAutoSave, Integer passwordMaxAge, Boolean initialPasswordChange, Integer passwordHistorySize, Boolean passwordExpiryForAdmin, Integer cacheExpiration, Boolean enableRFC7613UsercaseMappedProfile, Handler<AsyncResult<OrgApacheJackrabbitOakSecurityUserUserConfigurationImplInfo>> handler);
    
    //orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService
    void orgApacheJackrabbitOakSegmentAzureAzureSegmentStoreService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String accountName, String containerName, String accessKey, String rootPath, String connectionURL, Handler<AsyncResult<OrgApacheJackrabbitOakSegmentAzureAzureSegmentStoreServiceInfo>> handler);
    
    //orgApacheJackrabbitOakSegmentSegmentNodeStoreFactory
    void orgApacheJackrabbitOakSegmentSegmentNodeStoreFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String repositoryHome, String tarmkMode, Integer tarmkSize, Integer segmentCacheSize, Integer stringCacheSize, Integer templateCacheSize, Integer stringDeduplicationCacheSize, Integer templateDeduplicationCacheSize, Integer nodeDeduplicationCacheSize, Boolean pauseCompaction, Integer compactionRetryCount, Integer compactionForceTimeout, Integer compactionSizeDeltaEstimation, Boolean compactionDisableEstimation, Integer compactionRetainedGenerations, Integer compactionMemoryThreshold, Integer compactionProgressLog, Boolean standby, Boolean customBlobStore, Boolean customSegmentStore, Boolean splitPersistence, String repositoryBackupDir, Integer blobGcMaxAgeInSecs, Integer blobTrackSnapshotIntervalInSecs, String role, Boolean registerDescriptors, Boolean dispatchChanges, Handler<AsyncResult<OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryInfo>> handler);
    
    //orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService
    void orgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> commitsTrackerWriterGroups, Handler<AsyncResult<OrgApacheJackrabbitOakSegmentSegmentNodeStoreMonitorServiceInfo>> handler);
    
    //orgApacheJackrabbitOakSegmentSegmentNodeStoreService
    void orgApacheJackrabbitOakSegmentSegmentNodeStoreService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String repositoryHome, String tarmkMode, Integer tarmkSize, Integer segmentCacheSize, Integer stringCacheSize, Integer templateCacheSize, Integer stringDeduplicationCacheSize, Integer templateDeduplicationCacheSize, Integer nodeDeduplicationCacheSize, Boolean pauseCompaction, Integer compactionRetryCount, Integer compactionForceTimeout, Integer compactionSizeDeltaEstimation, Boolean compactionDisableEstimation, Integer compactionRetainedGenerations, Integer compactionMemoryThreshold, Integer compactionProgressLog, Boolean standby, Boolean customBlobStore, Boolean customSegmentStore, Boolean splitPersistence, String repositoryBackupDir, Integer blobGcMaxAgeInSecs, Integer blobTrackSnapshotIntervalInSecs, Handler<AsyncResult<OrgApacheJackrabbitOakSegmentSegmentNodeStoreServiceInfo>> handler);
    
    //orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService
    void orgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean orgApacheSlingInstallerConfigurationPersist, String mode, Integer port, String primaryHost, Integer interval, List<String> primaryAllowedClientIpRanges, Boolean secure, Integer standbyReadtimeout, Boolean standbyAutoclean, Handler<AsyncResult<OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceInfo>> handler);
    
    //orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe
    void orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDe(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String handlerName, String userExpirationTime, List<String> userAutoMembership, List<String> userPropertyMapping, String userPathPrefix, String userMembershipExpTime, Integer userMembershipNestingDepth, Boolean userDynamicMembership, Boolean userDisableMissing, String groupExpirationTime, List<String> groupAutoMembership, List<String> groupPropertyMapping, String groupPathPrefix, Boolean enableRFC7613UsercaseMappedProfile, Handler<AsyncResult<OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplDeInfo>> handler);
    
    //orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx
    void orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplEx(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer jaasRanking, String jaasControlFlag, String jaasRealmName, String idpName, String syncHandlerName, Handler<AsyncResult<OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExInfo>> handler);
    
    //orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr
    void orgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPr(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean protectExternalId, Handler<AsyncResult<OrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplPrInfo>> handler);
    
    //orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi
    void orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfi(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> cugSupportedPaths, Boolean cugEnabled, Integer configurationRanking, Handler<AsyncResult<OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugConfiInfo>> handler);
    
    //orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu
    void orgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExclu(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> principalNames, Handler<AsyncResult<OrgApacheJackrabbitOakSpiSecurityAuthorizationCugImplCugExcluInfo>> handler);
    
    //orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable
    void orgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizable(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String enabledActions, List<String> userPrivilegeNames, List<String> groupPrivilegeNames, String constraint, Handler<AsyncResult<OrgApacheJackrabbitOakSpiSecurityUserActionDefaultAuthorizableInfo>> handler);
    
    //orgApacheJackrabbitVaultPackagingImplPackagingImpl
    void orgApacheJackrabbitVaultPackagingImplPackagingImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> packageRoots, Handler<AsyncResult<OrgApacheJackrabbitVaultPackagingImplPackagingImplInfo>> handler);
    
    //orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry
    void orgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistry(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String homePath, Handler<AsyncResult<OrgApacheJackrabbitVaultPackagingRegistryImplFSPackageRegistryInfo>> handler);
    
    //orgApacheSlingAuthCoreImplLogoutServlet
    void orgApacheSlingAuthCoreImplLogoutServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> slingServletMethods, String slingServletPaths, Handler<AsyncResult<OrgApacheSlingAuthCoreImplLogoutServletInfo>> handler);
    
    //orgApacheSlingCaconfigImplConfigurationBindingsValueProvider
    void orgApacheSlingCaconfigImplConfigurationBindingsValueProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, Handler<AsyncResult<OrgApacheSlingCaconfigImplConfigurationBindingsValueProviderInfo>> handler);
    
    //orgApacheSlingCaconfigImplConfigurationResolverImpl
    void orgApacheSlingCaconfigImplConfigurationResolverImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> configBucketNames, Handler<AsyncResult<OrgApacheSlingCaconfigImplConfigurationResolverImplInfo>> handler);
    
    //orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra
    void orgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStra(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, List<String> configPropertyInheritancePropertyNames, Handler<AsyncResult<OrgApacheSlingCaconfigImplDefDefaultConfigurationInheritanceStraInfo>> handler);
    
    //orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra
    void orgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStra(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, Handler<AsyncResult<OrgApacheSlingCaconfigImplDefDefaultConfigurationPersistenceStraInfo>> handler);
    
    //orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi
    void orgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProvi(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String description, List<String> overrides, Boolean enabled, Integer serviceRanking, Handler<AsyncResult<OrgApacheSlingCaconfigImplOverrideOsgiConfigurationOverrideProviInfo>> handler);
    
    //orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve
    void orgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOve(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, Integer serviceRanking, Handler<AsyncResult<OrgApacheSlingCaconfigImplOverrideSystemPropertyConfigurationOveInfo>> handler);
    
    //orgApacheSlingCaconfigManagementImplConfigurationManagementSetti
    void orgApacheSlingCaconfigManagementImplConfigurationManagementSetti(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> ignorePropertyNameRegex, List<String> configCollectionPropertiesResourceNames, Handler<AsyncResult<OrgApacheSlingCaconfigManagementImplConfigurationManagementSettiInfo>> handler);
    
    //orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour
    void orgApacheSlingCaconfigResourceImplDefDefaultConfigurationResour(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, String configPath, List<String> fallbackPaths, List<String> configCollectionInheritancePropertyNames, Handler<AsyncResult<OrgApacheSlingCaconfigResourceImplDefDefaultConfigurationResourInfo>> handler);
    
    //orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy
    void orgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategy(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean enabled, List<String> configRefResourceNames, List<String> configRefPropertyNames, Integer serviceRanking, Handler<AsyncResult<OrgApacheSlingCaconfigResourceImplDefDefaultContextPathStrategyInfo>> handler);
    
    //orgApacheSlingCommonsHtmlInternalTagsoupHtmlParser
    void orgApacheSlingCommonsHtmlInternalTagsoupHtmlParser(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> parserFeatures, Handler<AsyncResult<OrgApacheSlingCommonsHtmlInternalTagsoupHtmlParserInfo>> handler);
    
    //orgApacheSlingCommonsLogLogManager
    void orgApacheSlingCommonsLogLogManager(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String orgApacheSlingCommonsLogLevel, String orgApacheSlingCommonsLogFile, Integer orgApacheSlingCommonsLogFileNumber, String orgApacheSlingCommonsLogFileSize, String orgApacheSlingCommonsLogPattern, String orgApacheSlingCommonsLogConfigurationFile, Boolean orgApacheSlingCommonsLogPackagingDataEnabled, Integer orgApacheSlingCommonsLogMaxCallerDataDepth, Integer orgApacheSlingCommonsLogMaxOldFileCountInDump, Integer orgApacheSlingCommonsLogNumOfLines, Handler<AsyncResult<OrgApacheSlingCommonsLogLogManagerInfo>> handler);
    
    //orgApacheSlingCommonsLogLogManagerFactoryConfig
    void orgApacheSlingCommonsLogLogManagerFactoryConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String orgApacheSlingCommonsLogLevel, String orgApacheSlingCommonsLogFile, String orgApacheSlingCommonsLogPattern, List<String> orgApacheSlingCommonsLogNames, Boolean orgApacheSlingCommonsLogAdditiv, Handler<AsyncResult<OrgApacheSlingCommonsLogLogManagerFactoryConfigInfo>> handler);
    
    //orgApacheSlingCommonsLogLogManagerFactoryWriter
    void orgApacheSlingCommonsLogLogManagerFactoryWriter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String orgApacheSlingCommonsLogFile, Integer orgApacheSlingCommonsLogFileNumber, String orgApacheSlingCommonsLogFileSize, Boolean orgApacheSlingCommonsLogFileBuffered, Handler<AsyncResult<OrgApacheSlingCommonsLogLogManagerFactoryWriterInfo>> handler);
    
    //orgApacheSlingCommonsMetricsInternalLogReporter
    void orgApacheSlingCommonsMetricsInternalLogReporter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer period, String timeUnit, String level, String loggerName, String prefix, String pattern, String registryName, Handler<AsyncResult<OrgApacheSlingCommonsMetricsInternalLogReporterInfo>> handler);
    
    //orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter
    void orgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> datasources, Integer step, List<String> archives, String path, Handler<AsyncResult<OrgApacheSlingCommonsMetricsRrd4jImplCodahaleMetricsReporterInfo>> handler);
    
    //orgApacheSlingCommonsMimeInternalMimeTypeServiceImpl
    void orgApacheSlingCommonsMimeInternalMimeTypeServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> mimeTypes, Handler<AsyncResult<OrgApacheSlingCommonsMimeInternalMimeTypeServiceImplInfo>> handler);
    
    //orgApacheSlingCommonsSchedulerImplQuartzScheduler
    void orgApacheSlingCommonsSchedulerImplQuartzScheduler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String poolName, List<String> allowedPoolNames, Boolean schedulerUseleaderforsingle, List<String> metricsFilters, Integer slowThresholdMillis, Handler<AsyncResult<OrgApacheSlingCommonsSchedulerImplQuartzSchedulerInfo>> handler);
    
    //orgApacheSlingCommonsSchedulerImplSchedulerHealthCheck
    void orgApacheSlingCommonsSchedulerImplSchedulerHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxQuartzJobDurationAcceptable, Handler<AsyncResult<OrgApacheSlingCommonsSchedulerImplSchedulerHealthCheckInfo>> handler);
    
    //orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory
    void orgApacheSlingCommonsThreadsImplDefaultThreadPoolFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, Integer minPoolSize, Integer maxPoolSize, Integer queueSize, Integer maxThreadAge, Integer keepAliveTime, String blockPolicy, Boolean shutdownGraceful, Boolean daemon, Integer shutdownWaitTime, String priority, Handler<AsyncResult<OrgApacheSlingCommonsThreadsImplDefaultThreadPoolFactoryInfo>> handler);
    
    //orgApacheSlingDatasourceDataSourceFactory
    void orgApacheSlingDatasourceDataSourceFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String datasourceName, String datasourceSvcPropName, String driverClassName, String url, String username, String password, String defaultAutoCommit, String defaultReadOnly, String defaultTransactionIsolation, String defaultCatalog, Integer maxActive, Integer maxIdle, Integer minIdle, Integer initialSize, Integer maxWait, Integer maxAge, Boolean testOnBorrow, Boolean testOnReturn, Boolean testWhileIdle, String validationQuery, Integer validationQueryTimeout, Integer timeBetweenEvictionRunsMillis, Integer minEvictableIdleTimeMillis, String connectionProperties, String initSQL, String jdbcInterceptors, Integer validationInterval, Boolean logValidationErrors, List<String> datasourceSvcProperties, Handler<AsyncResult<OrgApacheSlingDatasourceDataSourceFactoryInfo>> handler);
    
    //orgApacheSlingDatasourceJNDIDataSourceFactory
    void orgApacheSlingDatasourceJNDIDataSourceFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String datasourceName, String datasourceSvcPropName, String datasourceJndiName, List<String> jndiProperties, Handler<AsyncResult<OrgApacheSlingDatasourceJNDIDataSourceFactoryInfo>> handler);
    
    //orgApacheSlingDiscoveryOakConfig
    void orgApacheSlingDiscoveryOakConfig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer connectorPingTimeout, Integer connectorPingInterval, Integer discoveryLiteCheckInterval, Integer clusterSyncServiceTimeout, Integer clusterSyncServiceInterval, Boolean enableSyncToken, Integer minEventDelay, Integer socketConnectTimeout, Integer soTimeout, List<String> topologyConnectorUrls, List<String> topologyConnectorWhitelist, Boolean autoStopLocalLoopEnabled, Boolean gzipConnectorRequestsEnabled, Boolean hmacEnabled, Boolean enableEncryption, String sharedKey, Integer hmacSharedKeyTTL, String backoffStandbyFactor, String backoffStableFactor, Handler<AsyncResult<OrgApacheSlingDiscoveryOakConfigInfo>> handler);
    
    //orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck
    void orgApacheSlingDiscoveryOakSynchronizedClocksHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String hcName, List<String> hcTags, String hcMbeanName, Handler<AsyncResult<OrgApacheSlingDiscoveryOakSynchronizedClocksHealthCheckInfo>> handler);
    
    //orgApacheSlingDistributionAgentImplForwardDistributionAgentFacto
    void orgApacheSlingDistributionAgentImplForwardDistributionAgentFacto(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String title, String details, Boolean enabled, String serviceName, String logLevel, List<String> allowedRoots, Boolean queueProcessingEnabled, List<String> packageImporterEndpoints, List<String> passiveQueues, List<String> priorityQueues, String retryStrategy, Integer retryAttempts, String requestAuthorizationStrategyTarget, String transportSecretProviderTarget, String packageBuilderTarget, String triggersTarget, String queueProvider, Boolean asyncDelivery, Integer httpConnTimeout, Handler<AsyncResult<OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoInfo>> handler);
    
    //orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA
    void orgApacheSlingDistributionAgentImplPrivilegeDistributionRequestA(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String jcrPrivilege, Handler<AsyncResult<OrgApacheSlingDistributionAgentImplPrivilegeDistributionRequestAInfo>> handler);
    
    //orgApacheSlingDistributionAgentImplQueueDistributionAgentFactory
    void orgApacheSlingDistributionAgentImplQueueDistributionAgentFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String title, String details, Boolean enabled, String serviceName, String logLevel, List<String> allowedRoots, String requestAuthorizationStrategyTarget, String queueProviderFactoryTarget, String packageBuilderTarget, String triggersTarget, List<String> priorityQueues, Handler<AsyncResult<OrgApacheSlingDistributionAgentImplQueueDistributionAgentFactoryInfo>> handler);
    
    //orgApacheSlingDistributionAgentImplReverseDistributionAgentFacto
    void orgApacheSlingDistributionAgentImplReverseDistributionAgentFacto(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String title, String details, Boolean enabled, String serviceName, String logLevel, Boolean queueProcessingEnabled, List<String> packageExporterEndpoints, Integer pullItems, Integer httpConnTimeout, String requestAuthorizationStrategyTarget, String transportSecretProviderTarget, String packageBuilderTarget, String triggersTarget, Handler<AsyncResult<OrgApacheSlingDistributionAgentImplReverseDistributionAgentFactoInfo>> handler);
    
    //orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor
    void orgApacheSlingDistributionAgentImplSimpleDistributionAgentFactor(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String title, String details, Boolean enabled, String serviceName, String logLevel, Boolean queueProcessingEnabled, String packageExporterTarget, String packageImporterTarget, String requestAuthorizationStrategyTarget, String triggersTarget, Handler<AsyncResult<OrgApacheSlingDistributionAgentImplSimpleDistributionAgentFactorInfo>> handler);
    
    //orgApacheSlingDistributionAgentImplSyncDistributionAgentFactory
    void orgApacheSlingDistributionAgentImplSyncDistributionAgentFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String title, String details, Boolean enabled, String serviceName, String logLevel, Boolean queueProcessingEnabled, List<String> passiveQueues, List<String> packageExporterEndpoints, List<String> packageImporterEndpoints, String retryStrategy, Integer retryAttempts, Integer pullItems, Integer httpConnTimeout, String requestAuthorizationStrategyTarget, String transportSecretProviderTarget, String packageBuilderTarget, String triggersTarget, Handler<AsyncResult<OrgApacheSlingDistributionAgentImplSyncDistributionAgentFactoryInfo>> handler);
    
    //orgApacheSlingDistributionMonitorDistributionQueueHealthCheck
    void orgApacheSlingDistributionMonitorDistributionQueueHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String hcName, List<String> hcTags, String hcMbeanName, Integer numberOfRetriesAllowed, Handler<AsyncResult<OrgApacheSlingDistributionMonitorDistributionQueueHealthCheckInfo>> handler);
    
    //orgApacheSlingDistributionPackagingImplExporterAgentDistributio
    void orgApacheSlingDistributionPackagingImplExporterAgentDistributio(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String queue, Boolean dropInvalidItems, String agentTarget, Handler<AsyncResult<OrgApacheSlingDistributionPackagingImplExporterAgentDistributioInfo>> handler);
    
    //orgApacheSlingDistributionPackagingImplExporterLocalDistributio
    void orgApacheSlingDistributionPackagingImplExporterLocalDistributio(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String packageBuilderTarget, Handler<AsyncResult<OrgApacheSlingDistributionPackagingImplExporterLocalDistributioInfo>> handler);
    
    //orgApacheSlingDistributionPackagingImplExporterRemoteDistributi
    void orgApacheSlingDistributionPackagingImplExporterRemoteDistributi(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, List<String> endpoints, Integer pullItems, String packageBuilderTarget, String transportSecretProviderTarget, Handler<AsyncResult<OrgApacheSlingDistributionPackagingImplExporterRemoteDistributiInfo>> handler);
    
    //orgApacheSlingDistributionPackagingImplImporterLocalDistributio
    void orgApacheSlingDistributionPackagingImplImporterLocalDistributio(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String packageBuilderTarget, Handler<AsyncResult<OrgApacheSlingDistributionPackagingImplImporterLocalDistributioInfo>> handler);
    
    //orgApacheSlingDistributionPackagingImplImporterRemoteDistributi
    void orgApacheSlingDistributionPackagingImplImporterRemoteDistributi(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, List<String> endpoints, String transportSecretProviderTarget, Handler<AsyncResult<OrgApacheSlingDistributionPackagingImplImporterRemoteDistributiInfo>> handler);
    
    //orgApacheSlingDistributionPackagingImplImporterRepositoryDistri
    void orgApacheSlingDistributionPackagingImplImporterRepositoryDistri(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String serviceName, String path, String privilegeName, Handler<AsyncResult<OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriInfo>> handler);
    
    //orgApacheSlingDistributionResourcesImplDistributionConfiguration
    void orgApacheSlingDistributionResourcesImplDistributionConfiguration(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String providerRoots, String kind, Handler<AsyncResult<OrgApacheSlingDistributionResourcesImplDistributionConfigurationInfo>> handler);
    
    //orgApacheSlingDistributionResourcesImplDistributionServiceResour
    void orgApacheSlingDistributionResourcesImplDistributionServiceResour(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String providerRoots, String kind, Handler<AsyncResult<OrgApacheSlingDistributionResourcesImplDistributionServiceResourInfo>> handler);
    
    //orgApacheSlingDistributionSerializationImplDistributionPackageBu
    void orgApacheSlingDistributionSerializationImplDistributionPackageBu(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String type, String formatTarget, String tempFsFolder, Integer fileThreshold, String memoryUnit, Boolean useOffHeapMemory, String digestAlgorithm, Integer monitoringQueueSize, Integer cleanupDelay, List<String> packageFilters, List<String> propertyFilters, Handler<AsyncResult<OrgApacheSlingDistributionSerializationImplDistributionPackageBuInfo>> handler);
    
    //orgApacheSlingDistributionSerializationImplVltVaultDistribution
    void orgApacheSlingDistributionSerializationImplVltVaultDistribution(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String type, String importMode, String aclHandling, String packageRoots, List<String> packageFilters, List<String> propertyFilters, String tempFsFolder, Boolean useBinaryReferences, Integer autoSaveThreshold, Integer cleanupDelay, Integer fileThreshold, String MEGA_BYTES, Boolean useOffHeapMemory, String digestAlgorithm, Integer monitoringQueueSize, List<String> pathsMapping, Boolean strictImport, Handler<AsyncResult<OrgApacheSlingDistributionSerializationImplVltVaultDistributionInfo>> handler);
    
    //orgApacheSlingDistributionTransportImplUserCredentialsDistributi
    void orgApacheSlingDistributionTransportImplUserCredentialsDistributi(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String username, String password, Handler<AsyncResult<OrgApacheSlingDistributionTransportImplUserCredentialsDistributiInfo>> handler);
    
    //orgApacheSlingDistributionTriggerImplDistributionEventDistribute
    void orgApacheSlingDistributionTriggerImplDistributionEventDistribute(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String path, Handler<AsyncResult<OrgApacheSlingDistributionTriggerImplDistributionEventDistributeInfo>> handler);
    
    //orgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger
    void orgApacheSlingDistributionTriggerImplJcrEventDistributionTrigger(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String path, List<String> ignoredPathsPatterns, String serviceName, Boolean deep, Handler<AsyncResult<OrgApacheSlingDistributionTriggerImplJcrEventDistributionTriggerInfo>> handler);
    
    //orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi
    void orgApacheSlingDistributionTriggerImplPersistedJcrEventDistributi(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String path, String serviceName, String nuggetsPath, Handler<AsyncResult<OrgApacheSlingDistributionTriggerImplPersistedJcrEventDistributiInfo>> handler);
    
    //orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig
    void orgApacheSlingDistributionTriggerImplRemoteEventDistributionTrig(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String endpoint, String transportSecretProviderTarget, Handler<AsyncResult<OrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigInfo>> handler);
    
    //orgApacheSlingDistributionTriggerImplResourceEventDistributionTr
    void orgApacheSlingDistributionTriggerImplResourceEventDistributionTr(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String path, Handler<AsyncResult<OrgApacheSlingDistributionTriggerImplResourceEventDistributionTrInfo>> handler);
    
    //orgApacheSlingDistributionTriggerImplScheduledDistributionTrigge
    void orgApacheSlingDistributionTriggerImplScheduledDistributionTrigge(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String path, String seconds, String serviceName, Handler<AsyncResult<OrgApacheSlingDistributionTriggerImplScheduledDistributionTriggeInfo>> handler);
    
    //orgApacheSlingEngineImplAuthSlingAuthenticator
    void orgApacheSlingEngineImplAuthSlingAuthenticator(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String osgiHttpWhiteboardContextSelect, String osgiHttpWhiteboardListener, String authSudoCookie, String authSudoParameter, Boolean authAnnonymous, List<String> slingAuthRequirements, String slingAuthAnonymousUser, String slingAuthAnonymousPassword, String authHttp, String authHttpRealm, List<String> authUriSuffix, Handler<AsyncResult<OrgApacheSlingEngineImplAuthSlingAuthenticatorInfo>> handler);
    
    //orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter
    void orgApacheSlingEngineImplDebugRequestProgressTrackerLogFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> extensions, Integer minDurationMs, Integer maxDurationMs, Boolean compactLogFormat, Handler<AsyncResult<OrgApacheSlingEngineImplDebugRequestProgressTrackerLogFilterInfo>> handler);
    
    //orgApacheSlingEngineImplLogRequestLogger
    void orgApacheSlingEngineImplLogRequestLogger(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String requestLogOutput, Integer requestLogOutputtype, Boolean requestLogEnabled, String accessLogOutput, Integer accessLogOutputtype, Boolean accessLogEnabled, Handler<AsyncResult<OrgApacheSlingEngineImplLogRequestLoggerInfo>> handler);
    
    //orgApacheSlingEngineImplLogRequestLoggerService
    void orgApacheSlingEngineImplLogRequestLoggerService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String requestLogServiceFormat, String requestLogServiceOutput, Integer requestLogServiceOutputtype, Boolean requestLogServiceOnentry, Handler<AsyncResult<OrgApacheSlingEngineImplLogRequestLoggerServiceInfo>> handler);
    
    //orgApacheSlingEngineImplSlingMainServlet
    void orgApacheSlingEngineImplSlingMainServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer slingMaxCalls, Integer slingMaxInclusions, Boolean slingTraceAllow, Integer slingMaxRecordRequests, List<String> slingStorePatternRequests, String slingServerinfo, List<String> slingAdditionalResponseHeaders, Handler<AsyncResult<OrgApacheSlingEngineImplSlingMainServletInfo>> handler);
    
    //orgApacheSlingEngineParameters
    void orgApacheSlingEngineParameters(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingDefaultParameterEncoding, Integer slingDefaultMaxParameters, String fileLocation, Integer fileThreshold, Integer fileMax, Integer requestMax, Boolean slingDefaultParameterCheckForAdditionalContainerParameters, Handler<AsyncResult<OrgApacheSlingEngineParametersInfo>> handler);
    
    //orgApacheSlingEventImplEventingThreadPool
    void orgApacheSlingEventImplEventingThreadPool(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer minPoolSize, Handler<AsyncResult<OrgApacheSlingEventImplEventingThreadPoolInfo>> handler);
    
    //orgApacheSlingEventImplJobsDefaultJobManager
    void orgApacheSlingEventImplJobsDefaultJobManager(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String queuePriority, Integer queueRetries, Integer queueRetrydelay, Integer queueMaxparallel, Handler<AsyncResult<OrgApacheSlingEventImplJobsDefaultJobManagerInfo>> handler);
    
    //orgApacheSlingEventImplJobsJcrPersistenceHandler
    void orgApacheSlingEventImplJobsJcrPersistenceHandler(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean jobConsumermanagerDisableDistribution, Integer startupDelay, Integer cleanupPeriod, Handler<AsyncResult<OrgApacheSlingEventImplJobsJcrPersistenceHandlerInfo>> handler);
    
    //orgApacheSlingEventImplJobsJobConsumerManager
    void orgApacheSlingEventImplJobsJobConsumerManager(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean orgApacheSlingInstallerConfigurationPersist, List<String> jobConsumermanagerWhitelist, List<String> jobConsumermanagerBlacklist, Handler<AsyncResult<OrgApacheSlingEventImplJobsJobConsumerManagerInfo>> handler);
    
    //orgApacheSlingEventJobsQueueConfiguration
    void orgApacheSlingEventJobsQueueConfiguration(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String queueName, List<String> queueTopics, String queueType, String queuePriority, Integer queueRetries, Integer queueRetrydelay, BigDecimal queueMaxparallel, Boolean queueKeepJobs, Boolean queuePreferRunOnCreationInstance, Integer queueThreadPoolSize, Integer serviceRanking, Handler<AsyncResult<OrgApacheSlingEventJobsQueueConfigurationInfo>> handler);
    
    //orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW
    void orgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingW(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> users, List<String> groups, Handler<AsyncResult<OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWInfo>> handler);
    
    //orgApacheSlingFeatureflagsFeature
    void orgApacheSlingFeatureflagsFeature(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String description, Boolean enabled, Handler<AsyncResult<OrgApacheSlingFeatureflagsFeatureInfo>> handler);
    
    //orgApacheSlingFeatureflagsImplConfiguredFeature
    void orgApacheSlingFeatureflagsImplConfiguredFeature(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String name, String description, Boolean enabled, Handler<AsyncResult<OrgApacheSlingFeatureflagsImplConfiguredFeatureInfo>> handler);
    
    //orgApacheSlingHapiImplHApiUtilImpl
    void orgApacheSlingHapiImplHApiUtilImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String orgApacheSlingHapiToolsResourcetype, String orgApacheSlingHapiToolsCollectionresourcetype, List<String> orgApacheSlingHapiToolsSearchpaths, String orgApacheSlingHapiToolsExternalurl, Boolean orgApacheSlingHapiToolsEnabled, Handler<AsyncResult<OrgApacheSlingHapiImplHApiUtilImplInfo>> handler);
    
    //orgApacheSlingHcCoreImplCompositeHealthCheck
    void orgApacheSlingHcCoreImplCompositeHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String hcName, List<String> hcTags, String hcMbeanName, List<String> filterTags, Boolean filterCombineTagsWithOr, Handler<AsyncResult<OrgApacheSlingHcCoreImplCompositeHealthCheckInfo>> handler);
    
    //orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl
    void orgApacheSlingHcCoreImplExecutorHealthCheckExecutorImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer timeoutInMs, Integer longRunningFutureThresholdForCriticalMs, Integer resultCacheTtlInMs, Handler<AsyncResult<OrgApacheSlingHcCoreImplExecutorHealthCheckExecutorImplInfo>> handler);
    
    //orgApacheSlingHcCoreImplJmxAttributeHealthCheck
    void orgApacheSlingHcCoreImplJmxAttributeHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String hcName, List<String> hcTags, String hcMbeanName, String mbeanName, String attributeName, String attributeValueConstraint, Handler<AsyncResult<OrgApacheSlingHcCoreImplJmxAttributeHealthCheckInfo>> handler);
    
    //orgApacheSlingHcCoreImplScriptableHealthCheck
    void orgApacheSlingHcCoreImplScriptableHealthCheck(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String hcName, List<String> hcTags, String hcMbeanName, String expression, String languageExtension, Handler<AsyncResult<OrgApacheSlingHcCoreImplScriptableHealthCheckInfo>> handler);
    
    //orgApacheSlingHcCoreImplServletHealthCheckExecutorServlet
    void orgApacheSlingHcCoreImplServletHealthCheckExecutorServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String servletPath, Boolean disabled, String corsAccessControlAllowOrigin, Handler<AsyncResult<OrgApacheSlingHcCoreImplServletHealthCheckExecutorServletInfo>> handler);
    
    //orgApacheSlingHcCoreImplServletResultTxtVerboseSerializer
    void orgApacheSlingHcCoreImplServletResultTxtVerboseSerializer(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer totalWidth, Integer colWidthName, Integer colWidthResult, Integer colWidthTiming, Handler<AsyncResult<OrgApacheSlingHcCoreImplServletResultTxtVerboseSerializerInfo>> handler);
    
    //orgApacheSlingI18nImplI18NFilter
    void orgApacheSlingI18nImplI18NFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, List<String> slingFilterScope, Handler<AsyncResult<OrgApacheSlingI18nImplI18NFilterInfo>> handler);
    
    //orgApacheSlingI18nImplJcrResourceBundleProvider
    void orgApacheSlingI18nImplJcrResourceBundleProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String localeDefault, Boolean preloadBundles, Integer invalidationDelay, Handler<AsyncResult<OrgApacheSlingI18nImplJcrResourceBundleProviderInfo>> handler);
    
    //orgApacheSlingInstallerProviderJcrImplJcrInstaller
    void orgApacheSlingInstallerProviderJcrImplJcrInstaller(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> handlerSchemes, String slingJcrinstallFolderNameRegexp, Integer slingJcrinstallFolderMaxDepth, List<String> slingJcrinstallSearchPath, String slingJcrinstallNewConfigPath, String slingJcrinstallSignalPath, Boolean slingJcrinstallEnableWriteback, Handler<AsyncResult<OrgApacheSlingInstallerProviderJcrImplJcrInstallerInfo>> handler);
    
    //orgApacheSlingJcrBaseInternalLoginAdminWhitelist
    void orgApacheSlingJcrBaseInternalLoginAdminWhitelist(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean whitelistBypass, String whitelistBundlesRegexp, Handler<AsyncResult<OrgApacheSlingJcrBaseInternalLoginAdminWhitelistInfo>> handler);
    
    //orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment
    void orgApacheSlingJcrBaseInternalLoginAdminWhitelistFragment(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String whitelistName, List<String> whitelistBundles, Handler<AsyncResult<OrgApacheSlingJcrBaseInternalLoginAdminWhitelistFragmentInfo>> handler);
    
    //orgApacheSlingJcrDavexImplServletsSlingDavExServlet
    void orgApacheSlingJcrDavexImplServletsSlingDavExServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String alias, Boolean davCreateAbsoluteUri, String davProtectedhandlers, Handler<AsyncResult<OrgApacheSlingJcrDavexImplServletsSlingDavExServletInfo>> handler);
    
    //orgApacheSlingJcrJackrabbitServerJndiRegistrationSupport
    void orgApacheSlingJcrJackrabbitServerJndiRegistrationSupport(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String javaNamingFactoryInitial, String javaNamingProviderUrl, Handler<AsyncResult<OrgApacheSlingJcrJackrabbitServerJndiRegistrationSupportInfo>> handler);
    
    //orgApacheSlingJcrJackrabbitServerRmiRegistrationSupport
    void orgApacheSlingJcrJackrabbitServerRmiRegistrationSupport(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer port, Handler<AsyncResult<OrgApacheSlingJcrJackrabbitServerRmiRegistrationSupportInfo>> handler);
    
    //orgApacheSlingJcrRepoinitImplRepositoryInitializer
    void orgApacheSlingJcrRepoinitImplRepositoryInitializer(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> references, Handler<AsyncResult<OrgApacheSlingJcrRepoinitImplRepositoryInitializerInfo>> handler);
    
    //orgApacheSlingJcrRepoinitRepositoryInitializer
    void orgApacheSlingJcrRepoinitRepositoryInitializer(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> references, List<String> scripts, Handler<AsyncResult<OrgApacheSlingJcrRepoinitRepositoryInitializerInfo>> handler);
    
    //orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl
    void orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> resourceResolverSearchpath, Boolean resourceResolverManglenamespaces, Boolean resourceResolverAllowDirect, List<String> resourceResolverRequiredProviders, List<String> resourceResolverRequiredProvidernames, List<String> resourceResolverVirtual, List<String> resourceResolverMapping, String resourceResolverMapLocation, List<String> resourceResolverMapObservation, Integer resourceResolverDefaultVanityRedirectStatus, Boolean resourceResolverEnableVanitypath, Integer resourceResolverVanitypathMaxEntries, Boolean resourceResolverVanitypathMaxEntriesStartup, Integer resourceResolverVanitypathBloomfilterMaxBytes, Boolean resourceResolverOptimizeAliasResolution, List<String> resourceResolverVanitypathWhitelist, List<String> resourceResolverVanitypathBlacklist, Boolean resourceResolverVanityPrecedence, Boolean resourceResolverProviderhandlingParanoid, Boolean resourceResolverLogClosing, Boolean resourceResolverLogUnclosed, Handler<AsyncResult<OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplInfo>> handler);
    
    //orgApacheSlingJcrResourceInternalJcrSystemUserValidator
    void orgApacheSlingJcrResourceInternalJcrSystemUserValidator(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean allowOnlySystemUser, Handler<AsyncResult<OrgApacheSlingJcrResourceInternalJcrSystemUserValidatorInfo>> handler);
    
    //orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory
    void orgApacheSlingJcrResourcesecurityImplResourceAccessGateFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String path, String checkpathPrefix, String jcrPath, Handler<AsyncResult<OrgApacheSlingJcrResourcesecurityImplResourceAccessGateFactoryInfo>> handler);
    
    //orgApacheSlingJcrWebdavImplHandlerDefaultHandlerService
    void orgApacheSlingJcrWebdavImplHandlerDefaultHandlerService(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, String typeCollections, String typeNoncollections, String typeContent, Handler<AsyncResult<OrgApacheSlingJcrWebdavImplHandlerDefaultHandlerServiceInfo>> handler);
    
    //orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic
    void orgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServic(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, Handler<AsyncResult<OrgApacheSlingJcrWebdavImplHandlerDirListingExportHandlerServicInfo>> handler);
    
    //orgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet
    void orgApacheSlingJcrWebdavImplServletsSimpleWebDavServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String davRoot, Boolean davCreateAbsoluteUri, String davRealm, List<String> collectionTypes, List<String> filterPrefixes, String filterTypes, String filterUris, String typeCollections, String typeNoncollections, String typeContent, Handler<AsyncResult<OrgApacheSlingJcrWebdavImplServletsSimpleWebDavServletInfo>> handler);
    
    //orgApacheSlingJmxProviderImplJMXResourceProvider
    void orgApacheSlingJmxProviderImplJMXResourceProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String providerRoots, Handler<AsyncResult<OrgApacheSlingJmxProviderImplJMXResourceProviderInfo>> handler);
    
    //orgApacheSlingModelsImplModelAdapterFactory
    void orgApacheSlingModelsImplModelAdapterFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String osgiHttpWhiteboardListener, String osgiHttpWhiteboardContextSelect, Integer maxRecursionDepth, Integer cleanupJobPeriod, Handler<AsyncResult<OrgApacheSlingModelsImplModelAdapterFactoryInfo>> handler);
    
    //orgApacheSlingModelsJacksonexporterImplResourceModuleProvider
    void orgApacheSlingModelsJacksonexporterImplResourceModuleProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer maxRecursionLevels, Handler<AsyncResult<OrgApacheSlingModelsJacksonexporterImplResourceModuleProviderInfo>> handler);
    
    //orgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto
    void orgApacheSlingResourceInventoryImplResourceInventoryPrinterFacto(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String felixInventoryPrinterName, String felixInventoryPrinterTitle, String path, Handler<AsyncResult<OrgApacheSlingResourceInventoryImplResourceInventoryPrinterFactoInfo>> handler);
    
    //orgApacheSlingResourcemergerImplMergedResourceProviderFactory
    void orgApacheSlingResourcemergerImplMergedResourceProviderFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String mergeRoot, Boolean mergeReadOnly, Handler<AsyncResult<OrgApacheSlingResourcemergerImplMergedResourceProviderFactoryInfo>> handler);
    
    //orgApacheSlingResourcemergerPickerOverriding
    void orgApacheSlingResourcemergerPickerOverriding(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String mergeRoot, Boolean mergeReadOnly, Handler<AsyncResult<OrgApacheSlingResourcemergerPickerOverridingInfo>> handler);
    
    //orgApacheSlingScriptingCoreImplScriptCacheImpl
    void orgApacheSlingScriptingCoreImplScriptCacheImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer orgApacheSlingScriptingCacheSize, List<String> orgApacheSlingScriptingCacheAdditionalExtensions, Handler<AsyncResult<OrgApacheSlingScriptingCoreImplScriptCacheImplInfo>> handler);
    
    //orgApacheSlingScriptingCoreImplScriptingResourceResolverProvider
    void orgApacheSlingScriptingCoreImplScriptingResourceResolverProvider(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean logStacktraceOnclose, Handler<AsyncResult<OrgApacheSlingScriptingCoreImplScriptingResourceResolverProviderInfo>> handler);
    
    //orgApacheSlingScriptingJavaImplJavaScriptEngineFactory
    void orgApacheSlingScriptingJavaImplJavaScriptEngineFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean javaClassdebuginfo, String javaJavaEncoding, String javaCompilerSourceVM, String javaCompilerTargetVM, Handler<AsyncResult<OrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryInfo>> handler);
    
    //orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa
    void orgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFa(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer orgApacheSlingScriptingJavascriptRhinoOptLevel, Handler<AsyncResult<OrgApacheSlingScriptingJavascriptInternalRhinoJavaScriptEngineFaInfo>> handler);
    
    //orgApacheSlingScriptingJspJspScriptEngineFactory
    void orgApacheSlingScriptingJspJspScriptEngineFactory(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String jasperCompilerTargetVM, String jasperCompilerSourceVM, Boolean jasperClassdebuginfo, Boolean jasperEnablePooling, String jasperIeClassId, Boolean jasperGenStringAsCharArray, Boolean jasperKeepgenerated, Boolean jasperMappedfile, Boolean jasperTrimSpaces, Boolean jasperDisplaySourceFragments, Boolean defaultIsSession, Handler<AsyncResult<OrgApacheSlingScriptingJspJspScriptEngineFactoryInfo>> handler);
    
    //orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv
    void orgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProv(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> orgApacheSlingScriptingSightlyJsBindings, Handler<AsyncResult<OrgApacheSlingScriptingSightlyJsImplJsapiSlyBindingsValuesProvInfo>> handler);
    
    //orgApacheSlingSecurityImplContentDispositionFilter
    void orgApacheSlingSecurityImplContentDispositionFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> slingContentDispositionPaths, List<String> slingContentDispositionExcludedPaths, Boolean slingContentDispositionAllPaths, Handler<AsyncResult<OrgApacheSlingSecurityImplContentDispositionFilterInfo>> handler);
    
    //orgApacheSlingSecurityImplReferrerFilter
    void orgApacheSlingSecurityImplReferrerFilter(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean allowEmpty, List<String> allowHosts, List<String> allowHostsRegexp, List<String> filterMethods, List<String> excludeAgentsRegexp, Handler<AsyncResult<OrgApacheSlingSecurityImplReferrerFilterInfo>> handler);
    
    //orgApacheSlingServiceusermappingImplServiceUserMapperImpl
    void orgApacheSlingServiceusermappingImplServiceUserMapperImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> userMapping, String userDefault, Boolean userEnableDefaultMapping, Boolean requireValidation, Handler<AsyncResult<OrgApacheSlingServiceusermappingImplServiceUserMapperImplInfo>> handler);
    
    //orgApacheSlingServiceusermappingImplServiceUserMapperImplAmended
    void orgApacheSlingServiceusermappingImplServiceUserMapperImplAmended(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Integer serviceRanking, List<String> userMapping, Handler<AsyncResult<OrgApacheSlingServiceusermappingImplServiceUserMapperImplAmendedInfo>> handler);
    
    //orgApacheSlingServletsGetDefaultGetServlet
    void orgApacheSlingServletsGetDefaultGetServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> aliases, Boolean index, List<String> indexFiles, Boolean enableHtml, Boolean enableJson, Boolean enableTxt, Boolean enableXml, Integer jsonMaximumresults, Boolean ecmaSuport, Handler<AsyncResult<OrgApacheSlingServletsGetDefaultGetServletInfo>> handler);
    
    //orgApacheSlingServletsGetImplVersionVersionInfoServlet
    void orgApacheSlingServletsGetImplVersionVersionInfoServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> slingServletSelectors, Boolean ecmaSuport, Handler<AsyncResult<OrgApacheSlingServletsGetImplVersionVersionInfoServletInfo>> handler);
    
    //orgApacheSlingServletsPostImplHelperChunkCleanUpTask
    void orgApacheSlingServletsPostImplHelperChunkCleanUpTask(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String schedulerExpression, Boolean schedulerConcurrent, Integer chunkCleanupAge, Handler<AsyncResult<OrgApacheSlingServletsPostImplHelperChunkCleanUpTaskInfo>> handler);
    
    //orgApacheSlingServletsPostImplSlingPostServlet
    void orgApacheSlingServletsPostImplSlingPostServlet(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> servletPostDateFormats, List<String> servletPostNodeNameHints, Integer servletPostNodeNameMaxLength, Boolean servletPostCheckinNewVersionableNodes, Boolean servletPostAutoCheckout, Boolean servletPostAutoCheckin, String servletPostIgnorePattern, Handler<AsyncResult<OrgApacheSlingServletsPostImplSlingPostServletInfo>> handler);
    
    //orgApacheSlingServletsResolverSlingServletResolver
    void orgApacheSlingServletsResolverSlingServletResolver(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String servletresolverServletRoot, Integer servletresolverCacheSize, List<String> servletresolverPaths, List<String> servletresolverDefaultExtensions, Handler<AsyncResult<OrgApacheSlingServletsResolverSlingServletResolverInfo>> handler);
    
    //orgApacheSlingSettingsImplSlingSettingsServiceImpl
    void orgApacheSlingSettingsImplSlingSettingsServiceImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String slingName, String slingDescription, Handler<AsyncResult<OrgApacheSlingSettingsImplSlingSettingsServiceImplInfo>> handler);
    
    //orgApacheSlingStartupfilterImplStartupFilterImpl
    void orgApacheSlingStartupfilterImplStartupFilterImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, Boolean activeByDefault, String defaultMessage, Handler<AsyncResult<OrgApacheSlingStartupfilterImplStartupFilterImplInfo>> handler);
    
    //orgApacheSlingTenantInternalTenantProviderImpl
    void orgApacheSlingTenantInternalTenantProviderImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String tenantRoot, List<String> tenantPathMatcher, Handler<AsyncResult<OrgApacheSlingTenantInternalTenantProviderImplInfo>> handler);
    
    //orgApacheSlingTracerInternalLogTracer
    void orgApacheSlingTracerInternalLogTracer(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, List<String> tracerSets, Boolean enabled, Boolean servletEnabled, Integer recordingCacheSizeInMB, Integer recordingCacheDurationInSecs, Boolean recordingCompressionEnabled, Boolean gzipResponse, Handler<AsyncResult<OrgApacheSlingTracerInternalLogTracerInfo>> handler);
    
    //orgApacheSlingXssImplXSSFilterImpl
    void orgApacheSlingXssImplXSSFilterImpl(Boolean post, Boolean apply, Boolean delete, String action, String $location, List<String> propertylist, String policyPath, Handler<AsyncResult<OrgApacheSlingXssImplXSSFilterImplInfo>> handler);
    
}
