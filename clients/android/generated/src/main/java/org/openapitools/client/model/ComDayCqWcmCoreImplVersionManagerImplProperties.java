/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComDayCqWcmCoreImplVersionManagerImplProperties {
  
  @SerializedName("versionmanager.createVersionOnActivation")
  private ConfigNodePropertyBoolean versionmanagerCreateVersionOnActivation = null;
  @SerializedName("versionmanager.purgingEnabled")
  private ConfigNodePropertyBoolean versionmanagerPurgingEnabled = null;
  @SerializedName("versionmanager.purgePaths")
  private ConfigNodePropertyArray versionmanagerPurgePaths = null;
  @SerializedName("versionmanager.ivPaths")
  private ConfigNodePropertyArray versionmanagerIvPaths = null;
  @SerializedName("versionmanager.maxAgeDays")
  private ConfigNodePropertyInteger versionmanagerMaxAgeDays = null;
  @SerializedName("versionmanager.maxNumberVersions")
  private ConfigNodePropertyInteger versionmanagerMaxNumberVersions = null;
  @SerializedName("versionmanager.minNumberVersions")
  private ConfigNodePropertyInteger versionmanagerMinNumberVersions = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getVersionmanagerCreateVersionOnActivation() {
    return versionmanagerCreateVersionOnActivation;
  }
  public void setVersionmanagerCreateVersionOnActivation(ConfigNodePropertyBoolean versionmanagerCreateVersionOnActivation) {
    this.versionmanagerCreateVersionOnActivation = versionmanagerCreateVersionOnActivation;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getVersionmanagerPurgingEnabled() {
    return versionmanagerPurgingEnabled;
  }
  public void setVersionmanagerPurgingEnabled(ConfigNodePropertyBoolean versionmanagerPurgingEnabled) {
    this.versionmanagerPurgingEnabled = versionmanagerPurgingEnabled;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getVersionmanagerPurgePaths() {
    return versionmanagerPurgePaths;
  }
  public void setVersionmanagerPurgePaths(ConfigNodePropertyArray versionmanagerPurgePaths) {
    this.versionmanagerPurgePaths = versionmanagerPurgePaths;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getVersionmanagerIvPaths() {
    return versionmanagerIvPaths;
  }
  public void setVersionmanagerIvPaths(ConfigNodePropertyArray versionmanagerIvPaths) {
    this.versionmanagerIvPaths = versionmanagerIvPaths;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getVersionmanagerMaxAgeDays() {
    return versionmanagerMaxAgeDays;
  }
  public void setVersionmanagerMaxAgeDays(ConfigNodePropertyInteger versionmanagerMaxAgeDays) {
    this.versionmanagerMaxAgeDays = versionmanagerMaxAgeDays;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getVersionmanagerMaxNumberVersions() {
    return versionmanagerMaxNumberVersions;
  }
  public void setVersionmanagerMaxNumberVersions(ConfigNodePropertyInteger versionmanagerMaxNumberVersions) {
    this.versionmanagerMaxNumberVersions = versionmanagerMaxNumberVersions;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getVersionmanagerMinNumberVersions() {
    return versionmanagerMinNumberVersions;
  }
  public void setVersionmanagerMinNumberVersions(ConfigNodePropertyInteger versionmanagerMinNumberVersions) {
    this.versionmanagerMinNumberVersions = versionmanagerMinNumberVersions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComDayCqWcmCoreImplVersionManagerImplProperties comDayCqWcmCoreImplVersionManagerImplProperties = (ComDayCqWcmCoreImplVersionManagerImplProperties) o;
    return (this.versionmanagerCreateVersionOnActivation == null ? comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerCreateVersionOnActivation == null : this.versionmanagerCreateVersionOnActivation.equals(comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerCreateVersionOnActivation)) &&
        (this.versionmanagerPurgingEnabled == null ? comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerPurgingEnabled == null : this.versionmanagerPurgingEnabled.equals(comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerPurgingEnabled)) &&
        (this.versionmanagerPurgePaths == null ? comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerPurgePaths == null : this.versionmanagerPurgePaths.equals(comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerPurgePaths)) &&
        (this.versionmanagerIvPaths == null ? comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerIvPaths == null : this.versionmanagerIvPaths.equals(comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerIvPaths)) &&
        (this.versionmanagerMaxAgeDays == null ? comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMaxAgeDays == null : this.versionmanagerMaxAgeDays.equals(comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMaxAgeDays)) &&
        (this.versionmanagerMaxNumberVersions == null ? comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMaxNumberVersions == null : this.versionmanagerMaxNumberVersions.equals(comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMaxNumberVersions)) &&
        (this.versionmanagerMinNumberVersions == null ? comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMinNumberVersions == null : this.versionmanagerMinNumberVersions.equals(comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMinNumberVersions));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.versionmanagerCreateVersionOnActivation == null ? 0: this.versionmanagerCreateVersionOnActivation.hashCode());
    result = 31 * result + (this.versionmanagerPurgingEnabled == null ? 0: this.versionmanagerPurgingEnabled.hashCode());
    result = 31 * result + (this.versionmanagerPurgePaths == null ? 0: this.versionmanagerPurgePaths.hashCode());
    result = 31 * result + (this.versionmanagerIvPaths == null ? 0: this.versionmanagerIvPaths.hashCode());
    result = 31 * result + (this.versionmanagerMaxAgeDays == null ? 0: this.versionmanagerMaxAgeDays.hashCode());
    result = 31 * result + (this.versionmanagerMaxNumberVersions == null ? 0: this.versionmanagerMaxNumberVersions.hashCode());
    result = 31 * result + (this.versionmanagerMinNumberVersions == null ? 0: this.versionmanagerMinNumberVersions.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComDayCqWcmCoreImplVersionManagerImplProperties {\n");
    
    sb.append("  versionmanagerCreateVersionOnActivation: ").append(versionmanagerCreateVersionOnActivation).append("\n");
    sb.append("  versionmanagerPurgingEnabled: ").append(versionmanagerPurgingEnabled).append("\n");
    sb.append("  versionmanagerPurgePaths: ").append(versionmanagerPurgePaths).append("\n");
    sb.append("  versionmanagerIvPaths: ").append(versionmanagerIvPaths).append("\n");
    sb.append("  versionmanagerMaxAgeDays: ").append(versionmanagerMaxAgeDays).append("\n");
    sb.append("  versionmanagerMaxNumberVersions: ").append(versionmanagerMaxNumberVersions).append("\n");
    sb.append("  versionmanagerMinNumberVersions: ").append(versionmanagerMinNumberVersions).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
