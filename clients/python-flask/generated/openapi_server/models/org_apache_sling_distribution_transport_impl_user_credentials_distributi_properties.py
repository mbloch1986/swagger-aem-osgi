# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: ConfigNodePropertyString=None, username: ConfigNodePropertyString=None, password: ConfigNodePropertyString=None):  # noqa: E501
        """OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties - a model defined in OpenAPI

        :param name: The name of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.  # noqa: E501
        :type name: ConfigNodePropertyString
        :param username: The username of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.  # noqa: E501
        :type username: ConfigNodePropertyString
        :param password: The password of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.  # noqa: E501
        :type password: ConfigNodePropertyString
        """
        self.openapi_types = {
            'name': ConfigNodePropertyString,
            'username': ConfigNodePropertyString,
            'password': ConfigNodePropertyString
        }

        self.attribute_map = {
            'name': 'name',
            'username': 'username',
            'password': 'password'
        }

        self._name = name
        self._username = username
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.  # noqa: E501
        :rtype: OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> ConfigNodePropertyString:
        """Gets the name of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.


        :return: The name of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._name

    @name.setter
    def name(self, name: ConfigNodePropertyString):
        """Sets the name of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.


        :param name: The name of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.
        :type name: ConfigNodePropertyString
        """

        self._name = name

    @property
    def username(self) -> ConfigNodePropertyString:
        """Gets the username of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.


        :return: The username of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._username

    @username.setter
    def username(self, username: ConfigNodePropertyString):
        """Sets the username of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.


        :param username: The username of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.
        :type username: ConfigNodePropertyString
        """

        self._username = username

    @property
    def password(self) -> ConfigNodePropertyString:
        """Gets the password of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.


        :return: The password of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._password

    @password.setter
    def password(self, password: ConfigNodePropertyString):
        """Sets the password of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.


        :param password: The password of this OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties.
        :type password: ConfigNodePropertyString
        """

        self._password = password
