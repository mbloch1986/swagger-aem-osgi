/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties() {
    init();
}

OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::~OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties() {
    this->cleanup();
}

void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::init() {
    com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path = new OAIConfigNodePropertyArray();
    m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path_isSet = false;
    com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency = new OAIConfigNodePropertyString();
    m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency_isSet = false;
    com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout = new OAIConfigNodePropertyInteger();
    m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout_isSet = false;
    com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients = new OAIConfigNodePropertyString();
    m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients_isSet = false;
    com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver = new OAIConfigNodePropertyString();
    m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver_isSet = false;
    com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport = new OAIConfigNodePropertyInteger();
    m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport_isSet = false;
    com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls = new OAIConfigNodePropertyBoolean();
    m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls_isSet = false;
    com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username = new OAIConfigNodePropertyString();
    m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username_isSet = false;
    com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password = new OAIConfigNodePropertyString();
    m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password_isSet = false;
}

void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::cleanup() {
    if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path != nullptr) { 
        delete com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path;
    }
    if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency != nullptr) { 
        delete com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency;
    }
    if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout != nullptr) { 
        delete com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout;
    }
    if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients != nullptr) { 
        delete com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients;
    }
    if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver != nullptr) { 
        delete com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver;
    }
    if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport != nullptr) { 
        delete com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport;
    }
    if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls != nullptr) { 
        delete com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls;
    }
    if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username != nullptr) { 
        delete com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username;
    }
    if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password != nullptr) { 
        delete com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password;
    }
}

OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path, pJson["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency, pJson["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout, pJson["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients, pJson["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver, pJson["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport, pJson["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls, pJson["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username, pJson["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password, pJson["com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::asJsonObject() {
    QJsonObject obj;
    if((com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path != nullptr) && (com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath"), com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency != nullptr) && (com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency"), com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency, obj, QString("OAIConfigNodePropertyString"));
    }
    if((com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout != nullptr) && (com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout"), com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients != nullptr) && (com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients"), com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients, obj, QString("OAIConfigNodePropertyString"));
    }
    if((com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver != nullptr) && (com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver"), com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver, obj, QString("OAIConfigNodePropertyString"));
    }
    if((com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport != nullptr) && (com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport"), com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls != nullptr) && (com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls"), com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username != nullptr) && (com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username"), com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username, obj, QString("OAIConfigNodePropertyString"));
    }
    if((com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password != nullptr) && (com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password->isSet())){
        toJsonValue(QString("com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password"), com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath() {
    return com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path;
}
void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath(OAIConfigNodePropertyArray* com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path) {
    this->com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path = com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path;
    this->m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency() {
    return com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency;
}
void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency(OAIConfigNodePropertyString* com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency) {
    this->com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency = com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency;
    this->m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout() {
    return com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout;
}
void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout(OAIConfigNodePropertyInteger* com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout) {
    this->com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout = com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout;
    this->m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients() {
    return com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients;
}
void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients(OAIConfigNodePropertyString* com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients) {
    this->com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients = com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients;
    this->m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver() {
    return com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver;
}
void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver(OAIConfigNodePropertyString* com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver) {
    this->com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver = com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver;
    this->m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport() {
    return com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport;
}
void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport(OAIConfigNodePropertyInteger* com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport) {
    this->com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport = com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport;
    this->m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls() {
    return com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls;
}
void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls(OAIConfigNodePropertyBoolean* com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls) {
    this->com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls = com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls;
    this->m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername() {
    return com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username;
}
void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername(OAIConfigNodePropertyString* com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username) {
    this->com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username = com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username;
    this->m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword() {
    return com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password;
}
void
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword(OAIConfigNodePropertyString* com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password) {
    this->com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password = com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password;
    this->m_com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password_isSet = true;
}


bool
OAIComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path != nullptr && com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_project_path->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency != nullptr && com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_schedule_frequency->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout != nullptr && com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_ping_timeout->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients != nullptr && com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_recipients->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver != nullptr && com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpserver->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport != nullptr && com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_smtpport->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls != nullptr && com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_usetls->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username != nullptr && com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_username->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password != nullptr && com_adobe_cq_screens_monitoring_impl_screens_monitoring_service_impl_password->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

