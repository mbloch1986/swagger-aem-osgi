/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyDropDown;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoProperties
 */
public class OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoPropertiesTest {
    private final OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoProperties model = new OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoProperties();

    /**
     * Model tests for OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoProperties
     */
    @Test
    public void testOrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoProperties() {
        // TODO: test OrgApacheSlingDistributionAgentImplForwardDistributionAgentFactoProperties
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'details'
     */
    @Test
    public void detailsTest() {
        // TODO: test details
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'serviceName'
     */
    @Test
    public void serviceNameTest() {
        // TODO: test serviceName
    }

    /**
     * Test the property 'logLevel'
     */
    @Test
    public void logLevelTest() {
        // TODO: test logLevel
    }

    /**
     * Test the property 'allowedRoots'
     */
    @Test
    public void allowedRootsTest() {
        // TODO: test allowedRoots
    }

    /**
     * Test the property 'queueProcessingEnabled'
     */
    @Test
    public void queueProcessingEnabledTest() {
        // TODO: test queueProcessingEnabled
    }

    /**
     * Test the property 'packageImporterEndpoints'
     */
    @Test
    public void packageImporterEndpointsTest() {
        // TODO: test packageImporterEndpoints
    }

    /**
     * Test the property 'passiveQueues'
     */
    @Test
    public void passiveQueuesTest() {
        // TODO: test passiveQueues
    }

    /**
     * Test the property 'priorityQueues'
     */
    @Test
    public void priorityQueuesTest() {
        // TODO: test priorityQueues
    }

    /**
     * Test the property 'retryStrategy'
     */
    @Test
    public void retryStrategyTest() {
        // TODO: test retryStrategy
    }

    /**
     * Test the property 'retryAttempts'
     */
    @Test
    public void retryAttemptsTest() {
        // TODO: test retryAttempts
    }

    /**
     * Test the property 'requestAuthorizationStrategyTarget'
     */
    @Test
    public void requestAuthorizationStrategyTargetTest() {
        // TODO: test requestAuthorizationStrategyTarget
    }

    /**
     * Test the property 'transportSecretProviderTarget'
     */
    @Test
    public void transportSecretProviderTargetTest() {
        // TODO: test transportSecretProviderTarget
    }

    /**
     * Test the property 'packageBuilderTarget'
     */
    @Test
    public void packageBuilderTargetTest() {
        // TODO: test packageBuilderTarget
    }

    /**
     * Test the property 'triggersTarget'
     */
    @Test
    public void triggersTargetTest() {
        // TODO: test triggersTarget
    }

    /**
     * Test the property 'queueProvider'
     */
    @Test
    public void queueProviderTest() {
        // TODO: test queueProvider
    }

    /**
     * Test the property 'asyncDelivery'
     */
    @Test
    public void asyncDeliveryTest() {
        // TODO: test asyncDelivery
    }

    /**
     * Test the property 'httpConnTimeout'
     */
    @Test
    public void httpConnTimeoutTest() {
        // TODO: test httpConnTimeout
    }

}
