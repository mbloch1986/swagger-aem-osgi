/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteAuthOauthProviderProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteAuthOauthProviderProperties_H_
#define OAIComAdobeGraniteAuthOauthProviderProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteAuthOauthProviderProperties: public OAIObject {
public:
    OAIComAdobeGraniteAuthOauthProviderProperties();
    OAIComAdobeGraniteAuthOauthProviderProperties(QString json);
    ~OAIComAdobeGraniteAuthOauthProviderProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeGraniteAuthOauthProviderProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getOauthConfigId();
    void setOauthConfigId(OAIConfigNodePropertyString* oauth_config_id);

    OAIConfigNodePropertyString* getOauthClientId();
    void setOauthClientId(OAIConfigNodePropertyString* oauth_client_id);

    OAIConfigNodePropertyString* getOauthClientSecret();
    void setOauthClientSecret(OAIConfigNodePropertyString* oauth_client_secret);

    OAIConfigNodePropertyArray* getOauthScope();
    void setOauthScope(OAIConfigNodePropertyArray* oauth_scope);

    OAIConfigNodePropertyString* getOauthConfigProviderId();
    void setOauthConfigProviderId(OAIConfigNodePropertyString* oauth_config_provider_id);

    OAIConfigNodePropertyBoolean* getOauthCreateUsers();
    void setOauthCreateUsers(OAIConfigNodePropertyBoolean* oauth_create_users);

    OAIConfigNodePropertyString* getOauthUseridProperty();
    void setOauthUseridProperty(OAIConfigNodePropertyString* oauth_userid_property);

    OAIConfigNodePropertyBoolean* getForceStrictUsernameMatching();
    void setForceStrictUsernameMatching(OAIConfigNodePropertyBoolean* force_strict_username_matching);

    OAIConfigNodePropertyBoolean* getOauthEncodeUserids();
    void setOauthEncodeUserids(OAIConfigNodePropertyBoolean* oauth_encode_userids);

    OAIConfigNodePropertyBoolean* getOauthHashUserids();
    void setOauthHashUserids(OAIConfigNodePropertyBoolean* oauth_hash_userids);

    OAIConfigNodePropertyString* getOauthCallBackUrl();
    void setOauthCallBackUrl(OAIConfigNodePropertyString* oauth_call_back_url);

    OAIConfigNodePropertyBoolean* getOauthAccessTokenPersist();
    void setOauthAccessTokenPersist(OAIConfigNodePropertyBoolean* oauth_access_token_persist);

    OAIConfigNodePropertyBoolean* getOauthAccessTokenPersistCookie();
    void setOauthAccessTokenPersistCookie(OAIConfigNodePropertyBoolean* oauth_access_token_persist_cookie);

    OAIConfigNodePropertyBoolean* getOauthCsrfStateProtection();
    void setOauthCsrfStateProtection(OAIConfigNodePropertyBoolean* oauth_csrf_state_protection);

    OAIConfigNodePropertyBoolean* getOauthRedirectRequestParams();
    void setOauthRedirectRequestParams(OAIConfigNodePropertyBoolean* oauth_redirect_request_params);

    OAIConfigNodePropertyBoolean* getOauthConfigSiblingsAllow();
    void setOauthConfigSiblingsAllow(OAIConfigNodePropertyBoolean* oauth_config_siblings_allow);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* oauth_config_id;
    bool m_oauth_config_id_isSet;

    OAIConfigNodePropertyString* oauth_client_id;
    bool m_oauth_client_id_isSet;

    OAIConfigNodePropertyString* oauth_client_secret;
    bool m_oauth_client_secret_isSet;

    OAIConfigNodePropertyArray* oauth_scope;
    bool m_oauth_scope_isSet;

    OAIConfigNodePropertyString* oauth_config_provider_id;
    bool m_oauth_config_provider_id_isSet;

    OAIConfigNodePropertyBoolean* oauth_create_users;
    bool m_oauth_create_users_isSet;

    OAIConfigNodePropertyString* oauth_userid_property;
    bool m_oauth_userid_property_isSet;

    OAIConfigNodePropertyBoolean* force_strict_username_matching;
    bool m_force_strict_username_matching_isSet;

    OAIConfigNodePropertyBoolean* oauth_encode_userids;
    bool m_oauth_encode_userids_isSet;

    OAIConfigNodePropertyBoolean* oauth_hash_userids;
    bool m_oauth_hash_userids_isSet;

    OAIConfigNodePropertyString* oauth_call_back_url;
    bool m_oauth_call_back_url_isSet;

    OAIConfigNodePropertyBoolean* oauth_access_token_persist;
    bool m_oauth_access_token_persist_isSet;

    OAIConfigNodePropertyBoolean* oauth_access_token_persist_cookie;
    bool m_oauth_access_token_persist_cookie_isSet;

    OAIConfigNodePropertyBoolean* oauth_csrf_state_protection;
    bool m_oauth_csrf_state_protection_isSet;

    OAIConfigNodePropertyBoolean* oauth_redirect_request_params;
    bool m_oauth_redirect_request_params_isSet;

    OAIConfigNodePropertyBoolean* oauth_config_siblings_allow;
    bool m_oauth_config_siblings_allow_isSet;

};

}

#endif /* OAIComAdobeGraniteAuthOauthProviderProperties_H_ */
