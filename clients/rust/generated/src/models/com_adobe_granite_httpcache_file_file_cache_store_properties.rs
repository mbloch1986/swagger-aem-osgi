/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteHttpcacheFileFileCacheStoreProperties {
  #[serde(rename = "com.adobe.granite.httpcache.file.documentRoot")]
  com_adobe_granite_httpcache_file_document_root: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "com.adobe.granite.httpcache.file.includeHost")]
  com_adobe_granite_httpcache_file_include_host: Option<::models::ConfigNodePropertyString>
}

impl ComAdobeGraniteHttpcacheFileFileCacheStoreProperties {
  pub fn new() -> ComAdobeGraniteHttpcacheFileFileCacheStoreProperties {
    ComAdobeGraniteHttpcacheFileFileCacheStoreProperties {
      com_adobe_granite_httpcache_file_document_root: None,
      com_adobe_granite_httpcache_file_include_host: None
    }
  }

  pub fn set_com_adobe_granite_httpcache_file_document_root(&mut self, com_adobe_granite_httpcache_file_document_root: ::models::ConfigNodePropertyString) {
    self.com_adobe_granite_httpcache_file_document_root = Some(com_adobe_granite_httpcache_file_document_root);
  }

  pub fn with_com_adobe_granite_httpcache_file_document_root(mut self, com_adobe_granite_httpcache_file_document_root: ::models::ConfigNodePropertyString) -> ComAdobeGraniteHttpcacheFileFileCacheStoreProperties {
    self.com_adobe_granite_httpcache_file_document_root = Some(com_adobe_granite_httpcache_file_document_root);
    self
  }

  pub fn com_adobe_granite_httpcache_file_document_root(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.com_adobe_granite_httpcache_file_document_root.as_ref()
  }

  pub fn reset_com_adobe_granite_httpcache_file_document_root(&mut self) {
    self.com_adobe_granite_httpcache_file_document_root = None;
  }

  pub fn set_com_adobe_granite_httpcache_file_include_host(&mut self, com_adobe_granite_httpcache_file_include_host: ::models::ConfigNodePropertyString) {
    self.com_adobe_granite_httpcache_file_include_host = Some(com_adobe_granite_httpcache_file_include_host);
  }

  pub fn with_com_adobe_granite_httpcache_file_include_host(mut self, com_adobe_granite_httpcache_file_include_host: ::models::ConfigNodePropertyString) -> ComAdobeGraniteHttpcacheFileFileCacheStoreProperties {
    self.com_adobe_granite_httpcache_file_include_host = Some(com_adobe_granite_httpcache_file_include_host);
    self
  }

  pub fn com_adobe_granite_httpcache_file_include_host(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.com_adobe_granite_httpcache_file_include_host.as_ref()
  }

  pub fn reset_com_adobe_granite_httpcache_file_include_host(&mut self) {
    self.com_adobe_granite_httpcache_file_include_host = None;
  }

}



