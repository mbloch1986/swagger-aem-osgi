/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties.h
 *
 * 
 */

#ifndef ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties_H_
#define ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties_H_



#include "ConfigNodePropertyArray.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties
{
public:
    ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties();
    virtual ~ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getParameterWhitelist() const;
    void setParameterWhitelist(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getParameterWhitelistPrefixes() const;
    void setParameterWhitelistPrefixes(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getBinaryParameterWhitelist() const;
    void setBinaryParameterWhitelist(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getModifierWhitelist() const;
    void setModifierWhitelist(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOperationWhitelist() const;
    void setOperationWhitelist(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getOperationWhitelistPrefixes() const;
    void setOperationWhitelistPrefixes(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getTypehintWhitelist() const;
    void setTypehintWhitelist(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getResourcetypeWhitelist() const;
    void setResourcetypeWhitelist(std::shared_ptr<ConfigNodePropertyArray> value);

protected:
    std::shared_ptr<ConfigNodePropertyArray> m_Parameter_whitelist;
    std::shared_ptr<ConfigNodePropertyArray> m_Parameter_whitelist_prefixes;
    std::shared_ptr<ConfigNodePropertyArray> m_Binary_parameter_whitelist;
    std::shared_ptr<ConfigNodePropertyArray> m_Modifier_whitelist;
    std::shared_ptr<ConfigNodePropertyArray> m_Operation_whitelist;
    std::shared_ptr<ConfigNodePropertyArray> m_Operation_whitelist_prefixes;
    std::shared_ptr<ConfigNodePropertyArray> m_Typehint_whitelist;
    std::shared_ptr<ConfigNodePropertyArray> m_Resourcetype_whitelist;
};

}
}
}
}

#endif /* ComDayCqWcmFoundationSecurityImplSaferSlingPostValidatorImplProperties_H_ */
