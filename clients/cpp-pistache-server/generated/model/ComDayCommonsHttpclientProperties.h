/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCommonsHttpclientProperties.h
 *
 * 
 */

#ifndef ComDayCommonsHttpclientProperties_H_
#define ComDayCommonsHttpclientProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCommonsHttpclientProperties
    : public ModelBase
{
public:
    ComDayCommonsHttpclientProperties();
    virtual ~ComDayCommonsHttpclientProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCommonsHttpclientProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getProxyEnabled() const;
    void setProxyEnabled(ConfigNodePropertyBoolean const& value);
    bool proxyEnabledIsSet() const;
    void unsetProxy_enabled();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getProxyHost() const;
    void setProxyHost(ConfigNodePropertyString const& value);
    bool proxyHostIsSet() const;
    void unsetProxy_host();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getProxyUser() const;
    void setProxyUser(ConfigNodePropertyString const& value);
    bool proxyUserIsSet() const;
    void unsetProxy_user();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getProxyPassword() const;
    void setProxyPassword(ConfigNodePropertyString const& value);
    bool proxyPasswordIsSet() const;
    void unsetProxy_password();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getProxyNtlmHost() const;
    void setProxyNtlmHost(ConfigNodePropertyString const& value);
    bool proxyNtlmHostIsSet() const;
    void unsetProxy_ntlm_host();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getProxyNtlmDomain() const;
    void setProxyNtlmDomain(ConfigNodePropertyString const& value);
    bool proxyNtlmDomainIsSet() const;
    void unsetProxy_ntlm_domain();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getProxyExceptions() const;
    void setProxyExceptions(ConfigNodePropertyArray const& value);
    bool proxyExceptionsIsSet() const;
    void unsetProxy_exceptions();

protected:
    ConfigNodePropertyBoolean m_Proxy_enabled;
    bool m_Proxy_enabledIsSet;
    ConfigNodePropertyString m_Proxy_host;
    bool m_Proxy_hostIsSet;
    ConfigNodePropertyString m_Proxy_user;
    bool m_Proxy_userIsSet;
    ConfigNodePropertyString m_Proxy_password;
    bool m_Proxy_passwordIsSet;
    ConfigNodePropertyString m_Proxy_ntlm_host;
    bool m_Proxy_ntlm_hostIsSet;
    ConfigNodePropertyString m_Proxy_ntlm_domain;
    bool m_Proxy_ntlm_domainIsSet;
    ConfigNodePropertyArray m_Proxy_exceptions;
    bool m_Proxy_exceptionsIsSet;
};

}
}
}
}

#endif /* ComDayCommonsHttpclientProperties_H_ */
