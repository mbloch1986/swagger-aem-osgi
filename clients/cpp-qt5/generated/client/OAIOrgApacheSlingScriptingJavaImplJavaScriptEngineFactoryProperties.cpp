/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties() {
    init();
}

OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::~OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties() {
    this->cleanup();
}

void
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::init() {
    java_classdebuginfo = new OAIConfigNodePropertyBoolean();
    m_java_classdebuginfo_isSet = false;
    java_java_encoding = new OAIConfigNodePropertyString();
    m_java_java_encoding_isSet = false;
    java_compiler_source_vm = new OAIConfigNodePropertyString();
    m_java_compiler_source_vm_isSet = false;
    java_compiler_target_vm = new OAIConfigNodePropertyString();
    m_java_compiler_target_vm_isSet = false;
}

void
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::cleanup() {
    if(java_classdebuginfo != nullptr) { 
        delete java_classdebuginfo;
    }
    if(java_java_encoding != nullptr) { 
        delete java_java_encoding;
    }
    if(java_compiler_source_vm != nullptr) { 
        delete java_compiler_source_vm;
    }
    if(java_compiler_target_vm != nullptr) { 
        delete java_compiler_target_vm;
    }
}

OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties*
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&java_classdebuginfo, pJson["java.classdebuginfo"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&java_java_encoding, pJson["java.javaEncoding"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&java_compiler_source_vm, pJson["java.compilerSourceVM"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&java_compiler_target_vm, pJson["java.compilerTargetVM"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::asJsonObject() {
    QJsonObject obj;
    if((java_classdebuginfo != nullptr) && (java_classdebuginfo->isSet())){
        toJsonValue(QString("java.classdebuginfo"), java_classdebuginfo, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((java_java_encoding != nullptr) && (java_java_encoding->isSet())){
        toJsonValue(QString("java.javaEncoding"), java_java_encoding, obj, QString("OAIConfigNodePropertyString"));
    }
    if((java_compiler_source_vm != nullptr) && (java_compiler_source_vm->isSet())){
        toJsonValue(QString("java.compilerSourceVM"), java_compiler_source_vm, obj, QString("OAIConfigNodePropertyString"));
    }
    if((java_compiler_target_vm != nullptr) && (java_compiler_target_vm->isSet())){
        toJsonValue(QString("java.compilerTargetVM"), java_compiler_target_vm, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::getJavaClassdebuginfo() {
    return java_classdebuginfo;
}
void
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::setJavaClassdebuginfo(OAIConfigNodePropertyBoolean* java_classdebuginfo) {
    this->java_classdebuginfo = java_classdebuginfo;
    this->m_java_classdebuginfo_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::getJavaJavaEncoding() {
    return java_java_encoding;
}
void
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::setJavaJavaEncoding(OAIConfigNodePropertyString* java_java_encoding) {
    this->java_java_encoding = java_java_encoding;
    this->m_java_java_encoding_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::getJavaCompilerSourceVm() {
    return java_compiler_source_vm;
}
void
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::setJavaCompilerSourceVm(OAIConfigNodePropertyString* java_compiler_source_vm) {
    this->java_compiler_source_vm = java_compiler_source_vm;
    this->m_java_compiler_source_vm_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::getJavaCompilerTargetVm() {
    return java_compiler_target_vm;
}
void
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::setJavaCompilerTargetVm(OAIConfigNodePropertyString* java_compiler_target_vm) {
    this->java_compiler_target_vm = java_compiler_target_vm;
    this->m_java_compiler_target_vm_isSet = true;
}


bool
OAIOrgApacheSlingScriptingJavaImplJavaScriptEngineFactoryProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(java_classdebuginfo != nullptr && java_classdebuginfo->isSet()){ isObjectUpdated = true; break;}
        if(java_java_encoding != nullptr && java_java_encoding->isSet()){ isObjectUpdated = true; break;}
        if(java_compiler_source_vm != nullptr && java_compiler_source_vm->isSet()){ isObjectUpdated = true; break;}
        if(java_compiler_target_vm != nullptr && java_compiler_target_vm->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

