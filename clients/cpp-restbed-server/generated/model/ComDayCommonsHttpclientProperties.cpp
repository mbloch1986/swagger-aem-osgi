/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComDayCommonsHttpclientProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCommonsHttpclientProperties::ComDayCommonsHttpclientProperties()
{
    
}

ComDayCommonsHttpclientProperties::~ComDayCommonsHttpclientProperties()
{
}

std::string ComDayCommonsHttpclientProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComDayCommonsHttpclientProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyBoolean> ComDayCommonsHttpclientProperties::getProxyEnabled() const
{
    return m_Proxy_enabled;
}
void ComDayCommonsHttpclientProperties::setProxyEnabled(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Proxy_enabled = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCommonsHttpclientProperties::getProxyHost() const
{
    return m_Proxy_host;
}
void ComDayCommonsHttpclientProperties::setProxyHost(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Proxy_host = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCommonsHttpclientProperties::getProxyUser() const
{
    return m_Proxy_user;
}
void ComDayCommonsHttpclientProperties::setProxyUser(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Proxy_user = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCommonsHttpclientProperties::getProxyPassword() const
{
    return m_Proxy_password;
}
void ComDayCommonsHttpclientProperties::setProxyPassword(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Proxy_password = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCommonsHttpclientProperties::getProxyNtlmHost() const
{
    return m_Proxy_ntlm_host;
}
void ComDayCommonsHttpclientProperties::setProxyNtlmHost(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Proxy_ntlm_host = value;
}
std::shared_ptr<ConfigNodePropertyString> ComDayCommonsHttpclientProperties::getProxyNtlmDomain() const
{
    return m_Proxy_ntlm_domain;
}
void ComDayCommonsHttpclientProperties::setProxyNtlmDomain(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Proxy_ntlm_domain = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComDayCommonsHttpclientProperties::getProxyExceptions() const
{
    return m_Proxy_exceptions;
}
void ComDayCommonsHttpclientProperties::setProxyExceptions(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Proxy_exceptions = value;
}

}
}
}
}

