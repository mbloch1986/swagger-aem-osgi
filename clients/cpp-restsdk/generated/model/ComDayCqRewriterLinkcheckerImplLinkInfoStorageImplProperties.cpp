/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties()
{
    m_Service_max_links_per_hostIsSet = false;
    m_Service_save_external_link_referencesIsSet = false;
}

ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::~ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties()
{
}

void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::validate()
{
    // TODO: implement validation
}

web::json::value ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Service_max_links_per_hostIsSet)
    {
        val[utility::conversions::to_string_t("service.max_links_per_host")] = ModelBase::toJson(m_Service_max_links_per_host);
    }
    if(m_Service_save_external_link_referencesIsSet)
    {
        val[utility::conversions::to_string_t("service.save_external_link_references")] = ModelBase::toJson(m_Service_save_external_link_references);
    }

    return val;
}

void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("service.max_links_per_host")))
    {
        if(!val[utility::conversions::to_string_t("service.max_links_per_host")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyInteger> newItem(new ConfigNodePropertyInteger());
            newItem->fromJson(val[utility::conversions::to_string_t("service.max_links_per_host")]);
            setServiceMaxLinksPerHost( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("service.save_external_link_references")))
    {
        if(!val[utility::conversions::to_string_t("service.save_external_link_references")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromJson(val[utility::conversions::to_string_t("service.save_external_link_references")]);
            setServiceSaveExternalLinkReferences( newItem );
        }
    }
}

void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Service_max_links_per_hostIsSet)
    {
        if (m_Service_max_links_per_host.get())
        {
            m_Service_max_links_per_host->toMultipart(multipart, utility::conversions::to_string_t("service.max_links_per_host."));
        }
    }
    if(m_Service_save_external_link_referencesIsSet)
    {
        if (m_Service_save_external_link_references.get())
        {
            m_Service_save_external_link_references->toMultipart(multipart, utility::conversions::to_string_t("service.save_external_link_references."));
        }
    }
}

void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("service.max_links_per_host")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("service.max_links_per_host")))
        {
            std::shared_ptr<ConfigNodePropertyInteger> newItem(new ConfigNodePropertyInteger());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("service.max_links_per_host."));
            setServiceMaxLinksPerHost( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("service.save_external_link_references")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("service.save_external_link_references")))
        {
            std::shared_ptr<ConfigNodePropertyBoolean> newItem(new ConfigNodePropertyBoolean());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("service.save_external_link_references."));
            setServiceSaveExternalLinkReferences( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyInteger> ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::getServiceMaxLinksPerHost() const
{
    return m_Service_max_links_per_host;
}


void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::setServiceMaxLinksPerHost(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Service_max_links_per_host = value;
    m_Service_max_links_per_hostIsSet = true;
}
bool ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::serviceMaxLinksPerHostIsSet() const
{
    return m_Service_max_links_per_hostIsSet;
}

void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::unsetService_max_links_per_host()
{
    m_Service_max_links_per_hostIsSet = false;
}

std::shared_ptr<ConfigNodePropertyBoolean> ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::getServiceSaveExternalLinkReferences() const
{
    return m_Service_save_external_link_references;
}


void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::setServiceSaveExternalLinkReferences(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Service_save_external_link_references = value;
    m_Service_save_external_link_referencesIsSet = true;
}
bool ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::serviceSaveExternalLinkReferencesIsSet() const
{
    return m_Service_save_external_link_referencesIsSet;
}

void ComDayCqRewriterLinkcheckerImplLinkInfoStorageImplProperties::unsetService_save_external_link_references()
{
    m_Service_save_external_link_referencesIsSet = false;
}

}
}
}
}

