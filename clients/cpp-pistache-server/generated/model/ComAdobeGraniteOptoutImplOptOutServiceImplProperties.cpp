/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteOptoutImplOptOutServiceImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteOptoutImplOptOutServiceImplProperties::ComAdobeGraniteOptoutImplOptOutServiceImplProperties()
{
    m_Optout_cookiesIsSet = false;
    m_Optout_headersIsSet = false;
    m_Optout_whitelist_cookiesIsSet = false;
    
}

ComAdobeGraniteOptoutImplOptOutServiceImplProperties::~ComAdobeGraniteOptoutImplOptOutServiceImplProperties()
{
}

void ComAdobeGraniteOptoutImplOptOutServiceImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteOptoutImplOptOutServiceImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Optout_cookiesIsSet)
    {
        val["optout.cookies"] = ModelBase::toJson(m_Optout_cookies);
    }
    if(m_Optout_headersIsSet)
    {
        val["optout.headers"] = ModelBase::toJson(m_Optout_headers);
    }
    if(m_Optout_whitelist_cookiesIsSet)
    {
        val["optout.whitelist.cookies"] = ModelBase::toJson(m_Optout_whitelist_cookies);
    }
    

    return val;
}

void ComAdobeGraniteOptoutImplOptOutServiceImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("optout.cookies") != val.end())
    {
        if(!val["optout.cookies"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["optout.cookies"]);
            setOptoutCookies( newItem );
        }
        
    }
    if(val.find("optout.headers") != val.end())
    {
        if(!val["optout.headers"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["optout.headers"]);
            setOptoutHeaders( newItem );
        }
        
    }
    if(val.find("optout.whitelist.cookies") != val.end())
    {
        if(!val["optout.whitelist.cookies"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["optout.whitelist.cookies"]);
            setOptoutWhitelistCookies( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeGraniteOptoutImplOptOutServiceImplProperties::getOptoutCookies() const
{
    return m_Optout_cookies;
}
void ComAdobeGraniteOptoutImplOptOutServiceImplProperties::setOptoutCookies(ConfigNodePropertyArray const& value)
{
    m_Optout_cookies = value;
    m_Optout_cookiesIsSet = true;
}
bool ComAdobeGraniteOptoutImplOptOutServiceImplProperties::optoutCookiesIsSet() const
{
    return m_Optout_cookiesIsSet;
}
void ComAdobeGraniteOptoutImplOptOutServiceImplProperties::unsetOptout_cookies()
{
    m_Optout_cookiesIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteOptoutImplOptOutServiceImplProperties::getOptoutHeaders() const
{
    return m_Optout_headers;
}
void ComAdobeGraniteOptoutImplOptOutServiceImplProperties::setOptoutHeaders(ConfigNodePropertyArray const& value)
{
    m_Optout_headers = value;
    m_Optout_headersIsSet = true;
}
bool ComAdobeGraniteOptoutImplOptOutServiceImplProperties::optoutHeadersIsSet() const
{
    return m_Optout_headersIsSet;
}
void ComAdobeGraniteOptoutImplOptOutServiceImplProperties::unsetOptout_headers()
{
    m_Optout_headersIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteOptoutImplOptOutServiceImplProperties::getOptoutWhitelistCookies() const
{
    return m_Optout_whitelist_cookies;
}
void ComAdobeGraniteOptoutImplOptOutServiceImplProperties::setOptoutWhitelistCookies(ConfigNodePropertyArray const& value)
{
    m_Optout_whitelist_cookies = value;
    m_Optout_whitelist_cookiesIsSet = true;
}
bool ComAdobeGraniteOptoutImplOptOutServiceImplProperties::optoutWhitelistCookiesIsSet() const
{
    return m_Optout_whitelist_cookiesIsSet;
}
void ComAdobeGraniteOptoutImplOptOutServiceImplProperties::unsetOptout_whitelist_cookies()
{
    m_Optout_whitelist_cookiesIsSet = false;
}

}
}
}
}

