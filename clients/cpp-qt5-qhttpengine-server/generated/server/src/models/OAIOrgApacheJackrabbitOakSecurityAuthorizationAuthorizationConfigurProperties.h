/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties_H
#define OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyInteger.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties: public OAIObject {
public:
    OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties();
    OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties(QString json);
    ~OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyDropDown getPermissionsJr2() const;
    void setPermissionsJr2(const OAIConfigNodePropertyDropDown &permissions_jr2);

    OAIConfigNodePropertyDropDown getImportBehavior() const;
    void setImportBehavior(const OAIConfigNodePropertyDropDown &import_behavior);

    OAIConfigNodePropertyArray getReadPaths() const;
    void setReadPaths(const OAIConfigNodePropertyArray &read_paths);

    OAIConfigNodePropertyArray getAdministrativePrincipals() const;
    void setAdministrativePrincipals(const OAIConfigNodePropertyArray &administrative_principals);

    OAIConfigNodePropertyInteger getConfigurationRanking() const;
    void setConfigurationRanking(const OAIConfigNodePropertyInteger &configuration_ranking);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyDropDown permissions_jr2;
    bool m_permissions_jr2_isSet;

    OAIConfigNodePropertyDropDown import_behavior;
    bool m_import_behavior_isSet;

    OAIConfigNodePropertyArray read_paths;
    bool m_read_paths_isSet;

    OAIConfigNodePropertyArray administrative_principals;
    bool m_administrative_principals_isSet;

    OAIConfigNodePropertyInteger configuration_ranking;
    bool m_configuration_ranking_isSet;

};

}

#endif // OAIOrgApacheJackrabbitOakSecurityAuthorizationAuthorizationConfigurProperties_H
