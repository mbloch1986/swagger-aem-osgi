/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties
    /// </summary>
    [DataContract]
    public partial class ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties :  IEquatable<ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties" /> class.
        /// </summary>
        /// <param name="cqContentsyncPathrewritertransformerMappingLinks">cqContentsyncPathrewritertransformerMappingLinks.</param>
        /// <param name="cqContentsyncPathrewritertransformerMappingClientlibs">cqContentsyncPathrewritertransformerMappingClientlibs.</param>
        /// <param name="cqContentsyncPathrewritertransformerMappingImages">cqContentsyncPathrewritertransformerMappingImages.</param>
        /// <param name="cqContentsyncPathrewritertransformerAttributePattern">cqContentsyncPathrewritertransformerAttributePattern.</param>
        /// <param name="cqContentsyncPathrewritertransformerClientlibraryPattern">cqContentsyncPathrewritertransformerClientlibraryPattern.</param>
        /// <param name="cqContentsyncPathrewritertransformerClientlibraryReplace">cqContentsyncPathrewritertransformerClientlibraryReplace.</param>
        public ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties(ConfigNodePropertyArray cqContentsyncPathrewritertransformerMappingLinks = default(ConfigNodePropertyArray), ConfigNodePropertyArray cqContentsyncPathrewritertransformerMappingClientlibs = default(ConfigNodePropertyArray), ConfigNodePropertyArray cqContentsyncPathrewritertransformerMappingImages = default(ConfigNodePropertyArray), ConfigNodePropertyString cqContentsyncPathrewritertransformerAttributePattern = default(ConfigNodePropertyString), ConfigNodePropertyString cqContentsyncPathrewritertransformerClientlibraryPattern = default(ConfigNodePropertyString), ConfigNodePropertyString cqContentsyncPathrewritertransformerClientlibraryReplace = default(ConfigNodePropertyString))
        {
            this.CqContentsyncPathrewritertransformerMappingLinks = cqContentsyncPathrewritertransformerMappingLinks;
            this.CqContentsyncPathrewritertransformerMappingClientlibs = cqContentsyncPathrewritertransformerMappingClientlibs;
            this.CqContentsyncPathrewritertransformerMappingImages = cqContentsyncPathrewritertransformerMappingImages;
            this.CqContentsyncPathrewritertransformerAttributePattern = cqContentsyncPathrewritertransformerAttributePattern;
            this.CqContentsyncPathrewritertransformerClientlibraryPattern = cqContentsyncPathrewritertransformerClientlibraryPattern;
            this.CqContentsyncPathrewritertransformerClientlibraryReplace = cqContentsyncPathrewritertransformerClientlibraryReplace;
        }
        
        /// <summary>
        /// Gets or Sets CqContentsyncPathrewritertransformerMappingLinks
        /// </summary>
        [DataMember(Name="cq.contentsync.pathrewritertransformer.mapping.links", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqContentsyncPathrewritertransformerMappingLinks { get; set; }

        /// <summary>
        /// Gets or Sets CqContentsyncPathrewritertransformerMappingClientlibs
        /// </summary>
        [DataMember(Name="cq.contentsync.pathrewritertransformer.mapping.clientlibs", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqContentsyncPathrewritertransformerMappingClientlibs { get; set; }

        /// <summary>
        /// Gets or Sets CqContentsyncPathrewritertransformerMappingImages
        /// </summary>
        [DataMember(Name="cq.contentsync.pathrewritertransformer.mapping.images", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqContentsyncPathrewritertransformerMappingImages { get; set; }

        /// <summary>
        /// Gets or Sets CqContentsyncPathrewritertransformerAttributePattern
        /// </summary>
        [DataMember(Name="cq.contentsync.pathrewritertransformer.attribute.pattern", EmitDefaultValue=false)]
        public ConfigNodePropertyString CqContentsyncPathrewritertransformerAttributePattern { get; set; }

        /// <summary>
        /// Gets or Sets CqContentsyncPathrewritertransformerClientlibraryPattern
        /// </summary>
        [DataMember(Name="cq.contentsync.pathrewritertransformer.clientlibrary.pattern", EmitDefaultValue=false)]
        public ConfigNodePropertyString CqContentsyncPathrewritertransformerClientlibraryPattern { get; set; }

        /// <summary>
        /// Gets or Sets CqContentsyncPathrewritertransformerClientlibraryReplace
        /// </summary>
        [DataMember(Name="cq.contentsync.pathrewritertransformer.clientlibrary.replace", EmitDefaultValue=false)]
        public ConfigNodePropertyString CqContentsyncPathrewritertransformerClientlibraryReplace { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties {\n");
            sb.Append("  CqContentsyncPathrewritertransformerMappingLinks: ").Append(CqContentsyncPathrewritertransformerMappingLinks).Append("\n");
            sb.Append("  CqContentsyncPathrewritertransformerMappingClientlibs: ").Append(CqContentsyncPathrewritertransformerMappingClientlibs).Append("\n");
            sb.Append("  CqContentsyncPathrewritertransformerMappingImages: ").Append(CqContentsyncPathrewritertransformerMappingImages).Append("\n");
            sb.Append("  CqContentsyncPathrewritertransformerAttributePattern: ").Append(CqContentsyncPathrewritertransformerAttributePattern).Append("\n");
            sb.Append("  CqContentsyncPathrewritertransformerClientlibraryPattern: ").Append(CqContentsyncPathrewritertransformerClientlibraryPattern).Append("\n");
            sb.Append("  CqContentsyncPathrewritertransformerClientlibraryReplace: ").Append(CqContentsyncPathrewritertransformerClientlibraryReplace).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties);
        }

        /// <summary>
        /// Returns true if ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCqWcmContentsyncImplRewriterPathRewriterTransformerFactorProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CqContentsyncPathrewritertransformerMappingLinks == input.CqContentsyncPathrewritertransformerMappingLinks ||
                    (this.CqContentsyncPathrewritertransformerMappingLinks != null &&
                    this.CqContentsyncPathrewritertransformerMappingLinks.Equals(input.CqContentsyncPathrewritertransformerMappingLinks))
                ) && 
                (
                    this.CqContentsyncPathrewritertransformerMappingClientlibs == input.CqContentsyncPathrewritertransformerMappingClientlibs ||
                    (this.CqContentsyncPathrewritertransformerMappingClientlibs != null &&
                    this.CqContentsyncPathrewritertransformerMappingClientlibs.Equals(input.CqContentsyncPathrewritertransformerMappingClientlibs))
                ) && 
                (
                    this.CqContentsyncPathrewritertransformerMappingImages == input.CqContentsyncPathrewritertransformerMappingImages ||
                    (this.CqContentsyncPathrewritertransformerMappingImages != null &&
                    this.CqContentsyncPathrewritertransformerMappingImages.Equals(input.CqContentsyncPathrewritertransformerMappingImages))
                ) && 
                (
                    this.CqContentsyncPathrewritertransformerAttributePattern == input.CqContentsyncPathrewritertransformerAttributePattern ||
                    (this.CqContentsyncPathrewritertransformerAttributePattern != null &&
                    this.CqContentsyncPathrewritertransformerAttributePattern.Equals(input.CqContentsyncPathrewritertransformerAttributePattern))
                ) && 
                (
                    this.CqContentsyncPathrewritertransformerClientlibraryPattern == input.CqContentsyncPathrewritertransformerClientlibraryPattern ||
                    (this.CqContentsyncPathrewritertransformerClientlibraryPattern != null &&
                    this.CqContentsyncPathrewritertransformerClientlibraryPattern.Equals(input.CqContentsyncPathrewritertransformerClientlibraryPattern))
                ) && 
                (
                    this.CqContentsyncPathrewritertransformerClientlibraryReplace == input.CqContentsyncPathrewritertransformerClientlibraryReplace ||
                    (this.CqContentsyncPathrewritertransformerClientlibraryReplace != null &&
                    this.CqContentsyncPathrewritertransformerClientlibraryReplace.Equals(input.CqContentsyncPathrewritertransformerClientlibraryReplace))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CqContentsyncPathrewritertransformerMappingLinks != null)
                    hashCode = hashCode * 59 + this.CqContentsyncPathrewritertransformerMappingLinks.GetHashCode();
                if (this.CqContentsyncPathrewritertransformerMappingClientlibs != null)
                    hashCode = hashCode * 59 + this.CqContentsyncPathrewritertransformerMappingClientlibs.GetHashCode();
                if (this.CqContentsyncPathrewritertransformerMappingImages != null)
                    hashCode = hashCode * 59 + this.CqContentsyncPathrewritertransformerMappingImages.GetHashCode();
                if (this.CqContentsyncPathrewritertransformerAttributePattern != null)
                    hashCode = hashCode * 59 + this.CqContentsyncPathrewritertransformerAttributePattern.GetHashCode();
                if (this.CqContentsyncPathrewritertransformerClientlibraryPattern != null)
                    hashCode = hashCode * 59 + this.CqContentsyncPathrewritertransformerClientlibraryPattern.GetHashCode();
                if (this.CqContentsyncPathrewritertransformerClientlibraryReplace != null)
                    hashCode = hashCode * 59 + this.CqContentsyncPathrewritertransformerClientlibraryReplace.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
