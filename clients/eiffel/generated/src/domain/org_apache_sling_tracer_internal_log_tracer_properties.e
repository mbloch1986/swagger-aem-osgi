note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_SLING_TRACER_INTERNAL_LOG_TRACER_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    tracer_sets: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    enabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    servlet_enabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    recording_cache_size_in_mb: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    recording_cache_duration_in_secs: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    recording_compression_enabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    gzip_response: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_tracer_sets (a_name: like tracer_sets)
        -- Set 'tracer_sets' with 'a_name'.
      do
        tracer_sets := a_name
      ensure
        tracer_sets_set: tracer_sets = a_name		
      end

    set_enabled (a_name: like enabled)
        -- Set 'enabled' with 'a_name'.
      do
        enabled := a_name
      ensure
        enabled_set: enabled = a_name		
      end

    set_servlet_enabled (a_name: like servlet_enabled)
        -- Set 'servlet_enabled' with 'a_name'.
      do
        servlet_enabled := a_name
      ensure
        servlet_enabled_set: servlet_enabled = a_name		
      end

    set_recording_cache_size_in_mb (a_name: like recording_cache_size_in_mb)
        -- Set 'recording_cache_size_in_mb' with 'a_name'.
      do
        recording_cache_size_in_mb := a_name
      ensure
        recording_cache_size_in_mb_set: recording_cache_size_in_mb = a_name		
      end

    set_recording_cache_duration_in_secs (a_name: like recording_cache_duration_in_secs)
        -- Set 'recording_cache_duration_in_secs' with 'a_name'.
      do
        recording_cache_duration_in_secs := a_name
      ensure
        recording_cache_duration_in_secs_set: recording_cache_duration_in_secs = a_name		
      end

    set_recording_compression_enabled (a_name: like recording_compression_enabled)
        -- Set 'recording_compression_enabled' with 'a_name'.
      do
        recording_compression_enabled := a_name
      ensure
        recording_compression_enabled_set: recording_compression_enabled = a_name		
      end

    set_gzip_response (a_name: like gzip_response)
        -- Set 'gzip_response' with 'a_name'.
      do
        gzip_response := a_name
      ensure
        gzip_response_set: gzip_response = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_SLING_TRACER_INTERNAL_LOG_TRACER_PROPERTIES%N")
        if attached tracer_sets as l_tracer_sets then
          Result.append ("%Ntracer_sets:")
          Result.append (l_tracer_sets.out)
          Result.append ("%N")    
        end  
        if attached enabled as l_enabled then
          Result.append ("%Nenabled:")
          Result.append (l_enabled.out)
          Result.append ("%N")    
        end  
        if attached servlet_enabled as l_servlet_enabled then
          Result.append ("%Nservlet_enabled:")
          Result.append (l_servlet_enabled.out)
          Result.append ("%N")    
        end  
        if attached recording_cache_size_in_mb as l_recording_cache_size_in_mb then
          Result.append ("%Nrecording_cache_size_in_mb:")
          Result.append (l_recording_cache_size_in_mb.out)
          Result.append ("%N")    
        end  
        if attached recording_cache_duration_in_secs as l_recording_cache_duration_in_secs then
          Result.append ("%Nrecording_cache_duration_in_secs:")
          Result.append (l_recording_cache_duration_in_secs.out)
          Result.append ("%N")    
        end  
        if attached recording_compression_enabled as l_recording_compression_enabled then
          Result.append ("%Nrecording_compression_enabled:")
          Result.append (l_recording_compression_enabled.out)
          Result.append ("%N")    
        end  
        if attached gzip_response as l_gzip_response then
          Result.append ("%Ngzip_response:")
          Result.append (l_gzip_response.out)
          Result.append ("%N")    
        end  
      end
end


