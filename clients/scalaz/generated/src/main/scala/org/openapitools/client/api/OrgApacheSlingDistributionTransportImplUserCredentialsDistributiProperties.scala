package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties._

case class OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties (
  name: Option[ConfigNodePropertyString],
username: Option[ConfigNodePropertyString],
password: Option[ConfigNodePropertyString])

object OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties {
  import DateTimeCodecs._

  implicit val OrgApacheSlingDistributionTransportImplUserCredentialsDistributiPropertiesCodecJson: CodecJson[OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties] = CodecJson.derive[OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties]
  implicit val OrgApacheSlingDistributionTransportImplUserCredentialsDistributiPropertiesDecoder: EntityDecoder[OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties] = jsonOf[OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties]
  implicit val OrgApacheSlingDistributionTransportImplUserCredentialsDistributiPropertiesEncoder: EntityEncoder[OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties] = jsonEncoderOf[OrgApacheSlingDistributionTransportImplUserCredentialsDistributiProperties]
}
