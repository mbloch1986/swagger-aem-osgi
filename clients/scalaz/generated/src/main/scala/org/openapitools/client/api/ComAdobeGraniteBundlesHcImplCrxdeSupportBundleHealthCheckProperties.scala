package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties._

case class ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties (
  hcTags: Option[ConfigNodePropertyArray])

object ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckPropertiesCodecJson: CodecJson[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties] = CodecJson.derive[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties]
  implicit val ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckPropertiesDecoder: EntityDecoder[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties] = jsonOf[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties]
  implicit val ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckPropertiesEncoder: EntityEncoder[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties] = jsonEncoderOf[ComAdobeGraniteBundlesHcImplCrxdeSupportBundleHealthCheckProperties]
}
