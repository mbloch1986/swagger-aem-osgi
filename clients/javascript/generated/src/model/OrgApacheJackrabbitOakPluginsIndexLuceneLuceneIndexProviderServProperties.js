/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ConfigNodePropertyBoolean', 'model/ConfigNodePropertyInteger', 'model/ConfigNodePropertyString'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ConfigNodePropertyBoolean'), require('./ConfigNodePropertyInteger'), require('./ConfigNodePropertyString'));
  } else {
    // Browser globals (root is window)
    if (!root.NodeSwaggerAemOsgi) {
      root.NodeSwaggerAemOsgi = {};
    }
    root.NodeSwaggerAemOsgi.OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties = factory(root.NodeSwaggerAemOsgi.ApiClient, root.NodeSwaggerAemOsgi.ConfigNodePropertyBoolean, root.NodeSwaggerAemOsgi.ConfigNodePropertyInteger, root.NodeSwaggerAemOsgi.ConfigNodePropertyString);
  }
}(this, function(ApiClient, ConfigNodePropertyBoolean, ConfigNodePropertyInteger, ConfigNodePropertyString) {
  'use strict';




  /**
   * The OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties model module.
   * @module model/OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties</code>.
   * @alias module:model/OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties
   * @class
   */
  var exports = function() {
    var _this = this;

















  };

  /**
   * Constructs a <code>OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties} obj Optional instance to populate.
   * @return {module:model/OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties} The populated <code>OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('disabled')) {
        obj['disabled'] = ConfigNodePropertyBoolean.constructFromObject(data['disabled']);
      }
      if (data.hasOwnProperty('debug')) {
        obj['debug'] = ConfigNodePropertyBoolean.constructFromObject(data['debug']);
      }
      if (data.hasOwnProperty('localIndexDir')) {
        obj['localIndexDir'] = ConfigNodePropertyString.constructFromObject(data['localIndexDir']);
      }
      if (data.hasOwnProperty('enableOpenIndexAsync')) {
        obj['enableOpenIndexAsync'] = ConfigNodePropertyBoolean.constructFromObject(data['enableOpenIndexAsync']);
      }
      if (data.hasOwnProperty('threadPoolSize')) {
        obj['threadPoolSize'] = ConfigNodePropertyInteger.constructFromObject(data['threadPoolSize']);
      }
      if (data.hasOwnProperty('prefetchIndexFiles')) {
        obj['prefetchIndexFiles'] = ConfigNodePropertyBoolean.constructFromObject(data['prefetchIndexFiles']);
      }
      if (data.hasOwnProperty('extractedTextCacheSizeInMB')) {
        obj['extractedTextCacheSizeInMB'] = ConfigNodePropertyInteger.constructFromObject(data['extractedTextCacheSizeInMB']);
      }
      if (data.hasOwnProperty('extractedTextCacheExpiryInSecs')) {
        obj['extractedTextCacheExpiryInSecs'] = ConfigNodePropertyInteger.constructFromObject(data['extractedTextCacheExpiryInSecs']);
      }
      if (data.hasOwnProperty('alwaysUsePreExtractedCache')) {
        obj['alwaysUsePreExtractedCache'] = ConfigNodePropertyBoolean.constructFromObject(data['alwaysUsePreExtractedCache']);
      }
      if (data.hasOwnProperty('booleanClauseLimit')) {
        obj['booleanClauseLimit'] = ConfigNodePropertyInteger.constructFromObject(data['booleanClauseLimit']);
      }
      if (data.hasOwnProperty('enableHybridIndexing')) {
        obj['enableHybridIndexing'] = ConfigNodePropertyBoolean.constructFromObject(data['enableHybridIndexing']);
      }
      if (data.hasOwnProperty('hybridQueueSize')) {
        obj['hybridQueueSize'] = ConfigNodePropertyInteger.constructFromObject(data['hybridQueueSize']);
      }
      if (data.hasOwnProperty('disableStoredIndexDefinition')) {
        obj['disableStoredIndexDefinition'] = ConfigNodePropertyBoolean.constructFromObject(data['disableStoredIndexDefinition']);
      }
      if (data.hasOwnProperty('deletedBlobsCollectionEnabled')) {
        obj['deletedBlobsCollectionEnabled'] = ConfigNodePropertyBoolean.constructFromObject(data['deletedBlobsCollectionEnabled']);
      }
      if (data.hasOwnProperty('propIndexCleanerIntervalInSecs')) {
        obj['propIndexCleanerIntervalInSecs'] = ConfigNodePropertyInteger.constructFromObject(data['propIndexCleanerIntervalInSecs']);
      }
      if (data.hasOwnProperty('enableSingleBlobIndexFiles')) {
        obj['enableSingleBlobIndexFiles'] = ConfigNodePropertyBoolean.constructFromObject(data['enableSingleBlobIndexFiles']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ConfigNodePropertyBoolean} disabled
   */
  exports.prototype['disabled'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} debug
   */
  exports.prototype['debug'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} localIndexDir
   */
  exports.prototype['localIndexDir'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} enableOpenIndexAsync
   */
  exports.prototype['enableOpenIndexAsync'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} threadPoolSize
   */
  exports.prototype['threadPoolSize'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} prefetchIndexFiles
   */
  exports.prototype['prefetchIndexFiles'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} extractedTextCacheSizeInMB
   */
  exports.prototype['extractedTextCacheSizeInMB'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} extractedTextCacheExpiryInSecs
   */
  exports.prototype['extractedTextCacheExpiryInSecs'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} alwaysUsePreExtractedCache
   */
  exports.prototype['alwaysUsePreExtractedCache'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} booleanClauseLimit
   */
  exports.prototype['booleanClauseLimit'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} enableHybridIndexing
   */
  exports.prototype['enableHybridIndexing'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} hybridQueueSize
   */
  exports.prototype['hybridQueueSize'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} disableStoredIndexDefinition
   */
  exports.prototype['disableStoredIndexDefinition'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} deletedBlobsCollectionEnabled
   */
  exports.prototype['deletedBlobsCollectionEnabled'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} propIndexCleanerIntervalInSecs
   */
  exports.prototype['propIndexCleanerIntervalInSecs'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} enableSingleBlobIndexFiles
   */
  exports.prototype['enableSingleBlobIndexFiles'] = undefined;



  return exports;
}));


