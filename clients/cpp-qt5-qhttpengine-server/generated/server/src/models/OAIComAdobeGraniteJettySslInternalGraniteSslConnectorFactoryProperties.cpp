/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties() {
    this->init();
}

OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::~OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties() {
    
}

void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::init() {
    m_com_adobe_granite_jetty_ssl_port_isSet = false;
    m_com_adobe_granite_jetty_ssl_keystore_user_isSet = false;
    m_com_adobe_granite_jetty_ssl_keystore_password_isSet = false;
    m_com_adobe_granite_jetty_ssl_ciphersuites_excluded_isSet = false;
    m_com_adobe_granite_jetty_ssl_ciphersuites_included_isSet = false;
    m_com_adobe_granite_jetty_ssl_client_certificate_isSet = false;
}

void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(com_adobe_granite_jetty_ssl_port, json[QString("com.adobe.granite.jetty.ssl.port")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_jetty_ssl_keystore_user, json[QString("com.adobe.granite.jetty.ssl.keystore.user")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_jetty_ssl_keystore_password, json[QString("com.adobe.granite.jetty.ssl.keystore.password")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_jetty_ssl_ciphersuites_excluded, json[QString("com.adobe.granite.jetty.ssl.ciphersuites.excluded")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_jetty_ssl_ciphersuites_included, json[QString("com.adobe.granite.jetty.ssl.ciphersuites.included")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_jetty_ssl_client_certificate, json[QString("com.adobe.granite.jetty.ssl.client.certificate")]);
    
}

QString
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::asJsonObject() const {
    QJsonObject obj;
	if(com_adobe_granite_jetty_ssl_port.isSet()){
        obj.insert(QString("com.adobe.granite.jetty.ssl.port"), ::OpenAPI::toJsonValue(com_adobe_granite_jetty_ssl_port));
    }
	if(com_adobe_granite_jetty_ssl_keystore_user.isSet()){
        obj.insert(QString("com.adobe.granite.jetty.ssl.keystore.user"), ::OpenAPI::toJsonValue(com_adobe_granite_jetty_ssl_keystore_user));
    }
	if(com_adobe_granite_jetty_ssl_keystore_password.isSet()){
        obj.insert(QString("com.adobe.granite.jetty.ssl.keystore.password"), ::OpenAPI::toJsonValue(com_adobe_granite_jetty_ssl_keystore_password));
    }
	if(com_adobe_granite_jetty_ssl_ciphersuites_excluded.isSet()){
        obj.insert(QString("com.adobe.granite.jetty.ssl.ciphersuites.excluded"), ::OpenAPI::toJsonValue(com_adobe_granite_jetty_ssl_ciphersuites_excluded));
    }
	if(com_adobe_granite_jetty_ssl_ciphersuites_included.isSet()){
        obj.insert(QString("com.adobe.granite.jetty.ssl.ciphersuites.included"), ::OpenAPI::toJsonValue(com_adobe_granite_jetty_ssl_ciphersuites_included));
    }
	if(com_adobe_granite_jetty_ssl_client_certificate.isSet()){
        obj.insert(QString("com.adobe.granite.jetty.ssl.client.certificate"), ::OpenAPI::toJsonValue(com_adobe_granite_jetty_ssl_client_certificate));
    }
    return obj;
}

OAIConfigNodePropertyInteger
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslPort() const {
    return com_adobe_granite_jetty_ssl_port;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslPort(const OAIConfigNodePropertyInteger &com_adobe_granite_jetty_ssl_port) {
    this->com_adobe_granite_jetty_ssl_port = com_adobe_granite_jetty_ssl_port;
    this->m_com_adobe_granite_jetty_ssl_port_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslKeystoreUser() const {
    return com_adobe_granite_jetty_ssl_keystore_user;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslKeystoreUser(const OAIConfigNodePropertyString &com_adobe_granite_jetty_ssl_keystore_user) {
    this->com_adobe_granite_jetty_ssl_keystore_user = com_adobe_granite_jetty_ssl_keystore_user;
    this->m_com_adobe_granite_jetty_ssl_keystore_user_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslKeystorePassword() const {
    return com_adobe_granite_jetty_ssl_keystore_password;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslKeystorePassword(const OAIConfigNodePropertyString &com_adobe_granite_jetty_ssl_keystore_password) {
    this->com_adobe_granite_jetty_ssl_keystore_password = com_adobe_granite_jetty_ssl_keystore_password;
    this->m_com_adobe_granite_jetty_ssl_keystore_password_isSet = true;
}

OAIConfigNodePropertyArray
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslCiphersuitesExcluded() const {
    return com_adobe_granite_jetty_ssl_ciphersuites_excluded;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslCiphersuitesExcluded(const OAIConfigNodePropertyArray &com_adobe_granite_jetty_ssl_ciphersuites_excluded) {
    this->com_adobe_granite_jetty_ssl_ciphersuites_excluded = com_adobe_granite_jetty_ssl_ciphersuites_excluded;
    this->m_com_adobe_granite_jetty_ssl_ciphersuites_excluded_isSet = true;
}

OAIConfigNodePropertyArray
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslCiphersuitesIncluded() const {
    return com_adobe_granite_jetty_ssl_ciphersuites_included;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslCiphersuitesIncluded(const OAIConfigNodePropertyArray &com_adobe_granite_jetty_ssl_ciphersuites_included) {
    this->com_adobe_granite_jetty_ssl_ciphersuites_included = com_adobe_granite_jetty_ssl_ciphersuites_included;
    this->m_com_adobe_granite_jetty_ssl_ciphersuites_included_isSet = true;
}

OAIConfigNodePropertyDropDown
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslClientCertificate() const {
    return com_adobe_granite_jetty_ssl_client_certificate;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslClientCertificate(const OAIConfigNodePropertyDropDown &com_adobe_granite_jetty_ssl_client_certificate) {
    this->com_adobe_granite_jetty_ssl_client_certificate = com_adobe_granite_jetty_ssl_client_certificate;
    this->m_com_adobe_granite_jetty_ssl_client_certificate_isSet = true;
}


bool
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(com_adobe_granite_jetty_ssl_port.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_jetty_ssl_keystore_user.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_jetty_ssl_keystore_password.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_jetty_ssl_ciphersuites_excluded.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_jetty_ssl_ciphersuites_included.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_jetty_ssl_client_certificate.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

