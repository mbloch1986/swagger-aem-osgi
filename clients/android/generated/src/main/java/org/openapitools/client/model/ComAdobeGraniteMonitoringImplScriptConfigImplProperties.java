/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyArray;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeGraniteMonitoringImplScriptConfigImplProperties {
  
  @SerializedName("script.filename")
  private ConfigNodePropertyString scriptFilename = null;
  @SerializedName("script.display")
  private ConfigNodePropertyString scriptDisplay = null;
  @SerializedName("script.path")
  private ConfigNodePropertyString scriptPath = null;
  @SerializedName("script.platform")
  private ConfigNodePropertyArray scriptPlatform = null;
  @SerializedName("interval")
  private ConfigNodePropertyInteger interval = null;
  @SerializedName("jmxdomain")
  private ConfigNodePropertyString jmxdomain = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getScriptFilename() {
    return scriptFilename;
  }
  public void setScriptFilename(ConfigNodePropertyString scriptFilename) {
    this.scriptFilename = scriptFilename;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getScriptDisplay() {
    return scriptDisplay;
  }
  public void setScriptDisplay(ConfigNodePropertyString scriptDisplay) {
    this.scriptDisplay = scriptDisplay;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getScriptPath() {
    return scriptPath;
  }
  public void setScriptPath(ConfigNodePropertyString scriptPath) {
    this.scriptPath = scriptPath;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyArray getScriptPlatform() {
    return scriptPlatform;
  }
  public void setScriptPlatform(ConfigNodePropertyArray scriptPlatform) {
    this.scriptPlatform = scriptPlatform;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getInterval() {
    return interval;
  }
  public void setInterval(ConfigNodePropertyInteger interval) {
    this.interval = interval;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getJmxdomain() {
    return jmxdomain;
  }
  public void setJmxdomain(ConfigNodePropertyString jmxdomain) {
    this.jmxdomain = jmxdomain;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeGraniteMonitoringImplScriptConfigImplProperties comAdobeGraniteMonitoringImplScriptConfigImplProperties = (ComAdobeGraniteMonitoringImplScriptConfigImplProperties) o;
    return (this.scriptFilename == null ? comAdobeGraniteMonitoringImplScriptConfigImplProperties.scriptFilename == null : this.scriptFilename.equals(comAdobeGraniteMonitoringImplScriptConfigImplProperties.scriptFilename)) &&
        (this.scriptDisplay == null ? comAdobeGraniteMonitoringImplScriptConfigImplProperties.scriptDisplay == null : this.scriptDisplay.equals(comAdobeGraniteMonitoringImplScriptConfigImplProperties.scriptDisplay)) &&
        (this.scriptPath == null ? comAdobeGraniteMonitoringImplScriptConfigImplProperties.scriptPath == null : this.scriptPath.equals(comAdobeGraniteMonitoringImplScriptConfigImplProperties.scriptPath)) &&
        (this.scriptPlatform == null ? comAdobeGraniteMonitoringImplScriptConfigImplProperties.scriptPlatform == null : this.scriptPlatform.equals(comAdobeGraniteMonitoringImplScriptConfigImplProperties.scriptPlatform)) &&
        (this.interval == null ? comAdobeGraniteMonitoringImplScriptConfigImplProperties.interval == null : this.interval.equals(comAdobeGraniteMonitoringImplScriptConfigImplProperties.interval)) &&
        (this.jmxdomain == null ? comAdobeGraniteMonitoringImplScriptConfigImplProperties.jmxdomain == null : this.jmxdomain.equals(comAdobeGraniteMonitoringImplScriptConfigImplProperties.jmxdomain));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.scriptFilename == null ? 0: this.scriptFilename.hashCode());
    result = 31 * result + (this.scriptDisplay == null ? 0: this.scriptDisplay.hashCode());
    result = 31 * result + (this.scriptPath == null ? 0: this.scriptPath.hashCode());
    result = 31 * result + (this.scriptPlatform == null ? 0: this.scriptPlatform.hashCode());
    result = 31 * result + (this.interval == null ? 0: this.interval.hashCode());
    result = 31 * result + (this.jmxdomain == null ? 0: this.jmxdomain.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeGraniteMonitoringImplScriptConfigImplProperties {\n");
    
    sb.append("  scriptFilename: ").append(scriptFilename).append("\n");
    sb.append("  scriptDisplay: ").append(scriptDisplay).append("\n");
    sb.append("  scriptPath: ").append(scriptPath).append("\n");
    sb.append("  scriptPlatform: ").append(scriptPlatform).append("\n");
    sb.append("  interval: ").append(interval).append("\n");
    sb.append("  jmxdomain: ").append(jmxdomain).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
