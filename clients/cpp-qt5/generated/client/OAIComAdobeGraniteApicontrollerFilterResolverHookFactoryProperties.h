/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties_H_
#define OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties: public OAIObject {
public:
    OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties();
    OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties(QString json);
    ~OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getComAdobeCqCdnCdnRewriter();
    void setComAdobeCqCdnCdnRewriter(OAIConfigNodePropertyString* com_adobe_cq_cdn_cdn_rewriter);

    OAIConfigNodePropertyString* getComAdobeCqCloudConfigComponents();
    void setComAdobeCqCloudConfigComponents(OAIConfigNodePropertyString* com_adobe_cq_cloud_config_components);

    OAIConfigNodePropertyString* getComAdobeCqCloudConfigCore();
    void setComAdobeCqCloudConfigCore(OAIConfigNodePropertyString* com_adobe_cq_cloud_config_core);

    OAIConfigNodePropertyString* getComAdobeCqCloudConfigUi();
    void setComAdobeCqCloudConfigUi(OAIConfigNodePropertyString* com_adobe_cq_cloud_config_ui);

    OAIConfigNodePropertyString* getComAdobeCqComAdobeCqEditor();
    void setComAdobeCqComAdobeCqEditor(OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_editor);

    OAIConfigNodePropertyString* getComAdobeCqComAdobeCqProjectsCore();
    void setComAdobeCqComAdobeCqProjectsCore(OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_projects_core);

    OAIConfigNodePropertyString* getComAdobeCqComAdobeCqProjectsWcmCore();
    void setComAdobeCqComAdobeCqProjectsWcmCore(OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_projects_wcm_core);

    OAIConfigNodePropertyString* getComAdobeCqComAdobeCqUiCommons();
    void setComAdobeCqComAdobeCqUiCommons(OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_ui_commons);

    OAIConfigNodePropertyString* getComAdobeCqComAdobeCqWcmStyle();
    void setComAdobeCqComAdobeCqWcmStyle(OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_wcm_style);

    OAIConfigNodePropertyString* getComAdobeCqCqActivitymapIntegration();
    void setComAdobeCqCqActivitymapIntegration(OAIConfigNodePropertyString* com_adobe_cq_cq_activitymap_integration);

    OAIConfigNodePropertyString* getComAdobeCqCqContexthubCommons();
    void setComAdobeCqCqContexthubCommons(OAIConfigNodePropertyString* com_adobe_cq_cq_contexthub_commons);

    OAIConfigNodePropertyString* getComAdobeCqCqDtm();
    void setComAdobeCqCqDtm(OAIConfigNodePropertyString* com_adobe_cq_cq_dtm);

    OAIConfigNodePropertyString* getComAdobeCqCqHealthcheck();
    void setComAdobeCqCqHealthcheck(OAIConfigNodePropertyString* com_adobe_cq_cq_healthcheck);

    OAIConfigNodePropertyString* getComAdobeCqCqMultisiteTargeting();
    void setComAdobeCqCqMultisiteTargeting(OAIConfigNodePropertyString* com_adobe_cq_cq_multisite_targeting);

    OAIConfigNodePropertyString* getComAdobeCqCqPreUpgradeCleanup();
    void setComAdobeCqCqPreUpgradeCleanup(OAIConfigNodePropertyString* com_adobe_cq_cq_pre_upgrade_cleanup);

    OAIConfigNodePropertyString* getComAdobeCqCqProductInfoProvider();
    void setComAdobeCqCqProductInfoProvider(OAIConfigNodePropertyString* com_adobe_cq_cq_product_info_provider);

    OAIConfigNodePropertyString* getComAdobeCqCqRestSites();
    void setComAdobeCqCqRestSites(OAIConfigNodePropertyString* com_adobe_cq_cq_rest_sites);

    OAIConfigNodePropertyString* getComAdobeCqCqSecurityHc();
    void setComAdobeCqCqSecurityHc(OAIConfigNodePropertyString* com_adobe_cq_cq_security_hc);

    OAIConfigNodePropertyString* getComAdobeCqDamCqDamSvgHandler();
    void setComAdobeCqDamCqDamSvgHandler(OAIConfigNodePropertyString* com_adobe_cq_dam_cq_dam_svg_handler);

    OAIConfigNodePropertyString* getComAdobeCqDamCqScene7Imaging();
    void setComAdobeCqDamCqScene7Imaging(OAIConfigNodePropertyString* com_adobe_cq_dam_cq_scene7_imaging);

    OAIConfigNodePropertyString* getComAdobeCqDtmReactorCore();
    void setComAdobeCqDtmReactorCore(OAIConfigNodePropertyString* com_adobe_cq_dtm_reactor_core);

    OAIConfigNodePropertyString* getComAdobeCqDtmReactorUi();
    void setComAdobeCqDtmReactorUi(OAIConfigNodePropertyString* com_adobe_cq_dtm_reactor_ui);

    OAIConfigNodePropertyString* getComAdobeCqExpJspelResolver();
    void setComAdobeCqExpJspelResolver(OAIConfigNodePropertyString* com_adobe_cq_exp_jspel_resolver);

    OAIConfigNodePropertyString* getComAdobeCqInboxCqInbox();
    void setComAdobeCqInboxCqInbox(OAIConfigNodePropertyString* com_adobe_cq_inbox_cq_inbox);

    OAIConfigNodePropertyString* getComAdobeCqJsonSchemaParser();
    void setComAdobeCqJsonSchemaParser(OAIConfigNodePropertyString* com_adobe_cq_json_schema_parser);

    OAIConfigNodePropertyString* getComAdobeCqMediaCqMediaPublishingDpsFpCore();
    void setComAdobeCqMediaCqMediaPublishingDpsFpCore(OAIConfigNodePropertyString* com_adobe_cq_media_cq_media_publishing_dps_fp_core);

    OAIConfigNodePropertyString* getComAdobeCqMobileCqMobileCaas();
    void setComAdobeCqMobileCqMobileCaas(OAIConfigNodePropertyString* com_adobe_cq_mobile_cq_mobile_caas);

    OAIConfigNodePropertyString* getComAdobeCqMobileCqMobileIndexBuilder();
    void setComAdobeCqMobileCqMobileIndexBuilder(OAIConfigNodePropertyString* com_adobe_cq_mobile_cq_mobile_index_builder);

    OAIConfigNodePropertyString* getComAdobeCqMobileCqMobilePhonegapBuild();
    void setComAdobeCqMobileCqMobilePhonegapBuild(OAIConfigNodePropertyString* com_adobe_cq_mobile_cq_mobile_phonegap_build);

    OAIConfigNodePropertyString* getComAdobeCqMyspell();
    void setComAdobeCqMyspell(OAIConfigNodePropertyString* com_adobe_cq_myspell);

    OAIConfigNodePropertyString* getComAdobeCqSampleWeRetailCore();
    void setComAdobeCqSampleWeRetailCore(OAIConfigNodePropertyString* com_adobe_cq_sample_we_retail_core);

    OAIConfigNodePropertyString* getComAdobeCqScreensComAdobeCqScreensDcc();
    void setComAdobeCqScreensComAdobeCqScreensDcc(OAIConfigNodePropertyString* com_adobe_cq_screens_com_adobe_cq_screens_dcc);

    OAIConfigNodePropertyString* getComAdobeCqScreensComAdobeCqScreensMqCore();
    void setComAdobeCqScreensComAdobeCqScreensMqCore(OAIConfigNodePropertyString* com_adobe_cq_screens_com_adobe_cq_screens_mq_core);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialAsProvider();
    void setComAdobeCqSocialCqSocialAsProvider(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_as_provider);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialBadgingBasicImpl();
    void setComAdobeCqSocialCqSocialBadgingBasicImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_badging_basic_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialBadgingImpl();
    void setComAdobeCqSocialCqSocialBadgingImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_badging_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialCalendarImpl();
    void setComAdobeCqSocialCqSocialCalendarImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_calendar_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialContentFragmentsImpl();
    void setComAdobeCqSocialCqSocialContentFragmentsImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_content_fragments_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialEnablementImpl();
    void setComAdobeCqSocialCqSocialEnablementImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_enablement_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialGraphImpl();
    void setComAdobeCqSocialCqSocialGraphImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_graph_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialIdeationImpl();
    void setComAdobeCqSocialCqSocialIdeationImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_ideation_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialJcrProvider();
    void setComAdobeCqSocialCqSocialJcrProvider(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_jcr_provider);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialMembersImpl();
    void setComAdobeCqSocialCqSocialMembersImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_members_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialMsProvider();
    void setComAdobeCqSocialCqSocialMsProvider(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_ms_provider);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialNotificationsChannelsWeb();
    void setComAdobeCqSocialCqSocialNotificationsChannelsWeb(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_notifications_channels_web);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialNotificationsImpl();
    void setComAdobeCqSocialCqSocialNotificationsImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_notifications_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialRdbProvider();
    void setComAdobeCqSocialCqSocialRdbProvider(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_rdb_provider);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialScfImpl();
    void setComAdobeCqSocialCqSocialScfImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_scf_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialScoringBasicImpl();
    void setComAdobeCqSocialCqSocialScoringBasicImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_scoring_basic_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialScoringImpl();
    void setComAdobeCqSocialCqSocialScoringImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_scoring_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialServiceusersImpl();
    void setComAdobeCqSocialCqSocialServiceusersImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_serviceusers_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialSrpImpl();
    void setComAdobeCqSocialCqSocialSrpImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_srp_impl);

    OAIConfigNodePropertyString* getComAdobeCqSocialCqSocialUgcbaseImpl();
    void setComAdobeCqSocialCqSocialUgcbaseImpl(OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_ugcbase_impl);

    OAIConfigNodePropertyString* getComAdobeDamCqDamCfmImpl();
    void setComAdobeDamCqDamCfmImpl(OAIConfigNodePropertyString* com_adobe_dam_cq_dam_cfm_impl);

    OAIConfigNodePropertyString* getComAdobeFormsFoundationFormsFoundationBase();
    void setComAdobeFormsFoundationFormsFoundationBase(OAIConfigNodePropertyString* com_adobe_forms_foundation_forms_foundation_base);

    OAIConfigNodePropertyString* getComAdobeGraniteApicontroller();
    void setComAdobeGraniteApicontroller(OAIConfigNodePropertyString* com_adobe_granite_apicontroller);

    OAIConfigNodePropertyString* getComAdobeGraniteAssetCore();
    void setComAdobeGraniteAssetCore(OAIConfigNodePropertyString* com_adobe_granite_asset_core);

    OAIConfigNodePropertyString* getComAdobeGraniteAuthSso();
    void setComAdobeGraniteAuthSso(OAIConfigNodePropertyString* com_adobe_granite_auth_sso);

    OAIConfigNodePropertyString* getComAdobeGraniteBundlesHcImpl();
    void setComAdobeGraniteBundlesHcImpl(OAIConfigNodePropertyString* com_adobe_granite_bundles_hc_impl);

    OAIConfigNodePropertyString* getComAdobeGraniteCompatRouter();
    void setComAdobeGraniteCompatRouter(OAIConfigNodePropertyString* com_adobe_granite_compat_router);

    OAIConfigNodePropertyString* getComAdobeGraniteConf();
    void setComAdobeGraniteConf(OAIConfigNodePropertyString* com_adobe_granite_conf);

    OAIConfigNodePropertyString* getComAdobeGraniteConfUiCore();
    void setComAdobeGraniteConfUiCore(OAIConfigNodePropertyString* com_adobe_granite_conf_ui_core);

    OAIConfigNodePropertyString* getComAdobeGraniteCors();
    void setComAdobeGraniteCors(OAIConfigNodePropertyString* com_adobe_granite_cors);

    OAIConfigNodePropertyString* getComAdobeGraniteCrxExplorer();
    void setComAdobeGraniteCrxExplorer(OAIConfigNodePropertyString* com_adobe_granite_crx_explorer);

    OAIConfigNodePropertyString* getComAdobeGraniteCrxdeLite();
    void setComAdobeGraniteCrxdeLite(OAIConfigNodePropertyString* com_adobe_granite_crxde_lite);

    OAIConfigNodePropertyString* getComAdobeGraniteCryptoConfig();
    void setComAdobeGraniteCryptoConfig(OAIConfigNodePropertyString* com_adobe_granite_crypto_config);

    OAIConfigNodePropertyString* getComAdobeGraniteCryptoExtension();
    void setComAdobeGraniteCryptoExtension(OAIConfigNodePropertyString* com_adobe_granite_crypto_extension);

    OAIConfigNodePropertyString* getComAdobeGraniteCryptoFile();
    void setComAdobeGraniteCryptoFile(OAIConfigNodePropertyString* com_adobe_granite_crypto_file);

    OAIConfigNodePropertyString* getComAdobeGraniteCryptoJcr();
    void setComAdobeGraniteCryptoJcr(OAIConfigNodePropertyString* com_adobe_granite_crypto_jcr);

    OAIConfigNodePropertyString* getComAdobeGraniteCsrf();
    void setComAdobeGraniteCsrf(OAIConfigNodePropertyString* com_adobe_granite_csrf);

    OAIConfigNodePropertyString* getComAdobeGraniteDistributionCore();
    void setComAdobeGraniteDistributionCore(OAIConfigNodePropertyString* com_adobe_granite_distribution_core);

    OAIConfigNodePropertyString* getComAdobeGraniteDropwizardMetrics();
    void setComAdobeGraniteDropwizardMetrics(OAIConfigNodePropertyString* com_adobe_granite_dropwizard_metrics);

    OAIConfigNodePropertyString* getComAdobeGraniteFragsImpl();
    void setComAdobeGraniteFragsImpl(OAIConfigNodePropertyString* com_adobe_granite_frags_impl);

    OAIConfigNodePropertyString* getComAdobeGraniteGibson();
    void setComAdobeGraniteGibson(OAIConfigNodePropertyString* com_adobe_granite_gibson);

    OAIConfigNodePropertyString* getComAdobeGraniteInfocollector();
    void setComAdobeGraniteInfocollector(OAIConfigNodePropertyString* com_adobe_granite_infocollector);

    OAIConfigNodePropertyString* getComAdobeGraniteInstallerFactoryPackages();
    void setComAdobeGraniteInstallerFactoryPackages(OAIConfigNodePropertyString* com_adobe_granite_installer_factory_packages);

    OAIConfigNodePropertyString* getComAdobeGraniteJettySsl();
    void setComAdobeGraniteJettySsl(OAIConfigNodePropertyString* com_adobe_granite_jetty_ssl);

    OAIConfigNodePropertyString* getComAdobeGraniteJobsAsync();
    void setComAdobeGraniteJobsAsync(OAIConfigNodePropertyString* com_adobe_granite_jobs_async);

    OAIConfigNodePropertyString* getComAdobeGraniteMaintenanceOak();
    void setComAdobeGraniteMaintenanceOak(OAIConfigNodePropertyString* com_adobe_granite_maintenance_oak);

    OAIConfigNodePropertyString* getComAdobeGraniteMonitoringCore();
    void setComAdobeGraniteMonitoringCore(OAIConfigNodePropertyString* com_adobe_granite_monitoring_core);

    OAIConfigNodePropertyString* getComAdobeGraniteQueries();
    void setComAdobeGraniteQueries(OAIConfigNodePropertyString* com_adobe_granite_queries);

    OAIConfigNodePropertyString* getComAdobeGraniteReplicationHcImpl();
    void setComAdobeGraniteReplicationHcImpl(OAIConfigNodePropertyString* com_adobe_granite_replication_hc_impl);

    OAIConfigNodePropertyString* getComAdobeGraniteRepositoryChecker();
    void setComAdobeGraniteRepositoryChecker(OAIConfigNodePropertyString* com_adobe_granite_repository_checker);

    OAIConfigNodePropertyString* getComAdobeGraniteRepositoryHcImpl();
    void setComAdobeGraniteRepositoryHcImpl(OAIConfigNodePropertyString* com_adobe_granite_repository_hc_impl);

    OAIConfigNodePropertyString* getComAdobeGraniteRestAssets();
    void setComAdobeGraniteRestAssets(OAIConfigNodePropertyString* com_adobe_granite_rest_assets);

    OAIConfigNodePropertyString* getComAdobeGraniteSecurityUi();
    void setComAdobeGraniteSecurityUi(OAIConfigNodePropertyString* com_adobe_granite_security_ui);

    OAIConfigNodePropertyString* getComAdobeGraniteStartup();
    void setComAdobeGraniteStartup(OAIConfigNodePropertyString* com_adobe_granite_startup);

    OAIConfigNodePropertyString* getComAdobeGraniteTagsoup();
    void setComAdobeGraniteTagsoup(OAIConfigNodePropertyString* com_adobe_granite_tagsoup);

    OAIConfigNodePropertyString* getComAdobeGraniteTaskmanagementCore();
    void setComAdobeGraniteTaskmanagementCore(OAIConfigNodePropertyString* com_adobe_granite_taskmanagement_core);

    OAIConfigNodePropertyString* getComAdobeGraniteTaskmanagementWorkflow();
    void setComAdobeGraniteTaskmanagementWorkflow(OAIConfigNodePropertyString* com_adobe_granite_taskmanagement_workflow);

    OAIConfigNodePropertyString* getComAdobeGraniteUiClientlibsCompilerLess();
    void setComAdobeGraniteUiClientlibsCompilerLess(OAIConfigNodePropertyString* com_adobe_granite_ui_clientlibs_compiler_less);

    OAIConfigNodePropertyString* getComAdobeGraniteUiClientlibsProcessorGcc();
    void setComAdobeGraniteUiClientlibsProcessorGcc(OAIConfigNodePropertyString* com_adobe_granite_ui_clientlibs_processor_gcc);

    OAIConfigNodePropertyString* getComAdobeGraniteWebconsolePlugins();
    void setComAdobeGraniteWebconsolePlugins(OAIConfigNodePropertyString* com_adobe_granite_webconsole_plugins);

    OAIConfigNodePropertyString* getComAdobeGraniteWorkflowConsole();
    void setComAdobeGraniteWorkflowConsole(OAIConfigNodePropertyString* com_adobe_granite_workflow_console);

    OAIConfigNodePropertyString* getComAdobeXmpWorkerFilesNativeFragmentLinux();
    void setComAdobeXmpWorkerFilesNativeFragmentLinux(OAIConfigNodePropertyString* com_adobe_xmp_worker_files_native_fragment_linux);

    OAIConfigNodePropertyString* getComAdobeXmpWorkerFilesNativeFragmentMacosx();
    void setComAdobeXmpWorkerFilesNativeFragmentMacosx(OAIConfigNodePropertyString* com_adobe_xmp_worker_files_native_fragment_macosx);

    OAIConfigNodePropertyString* getComAdobeXmpWorkerFilesNativeFragmentWin();
    void setComAdobeXmpWorkerFilesNativeFragmentWin(OAIConfigNodePropertyString* com_adobe_xmp_worker_files_native_fragment_win);

    OAIConfigNodePropertyString* getComDayCommonsOsgiWrapperSimpleJndi();
    void setComDayCommonsOsgiWrapperSimpleJndi(OAIConfigNodePropertyString* com_day_commons_osgi_wrapper_simple_jndi);

    OAIConfigNodePropertyString* getComDayCqCqAuthhandler();
    void setComDayCqCqAuthhandler(OAIConfigNodePropertyString* com_day_cq_cq_authhandler);

    OAIConfigNodePropertyString* getComDayCqCqCompatConfigupdate();
    void setComDayCqCqCompatConfigupdate(OAIConfigNodePropertyString* com_day_cq_cq_compat_configupdate);

    OAIConfigNodePropertyString* getComDayCqCqLicensebranding();
    void setComDayCqCqLicensebranding(OAIConfigNodePropertyString* com_day_cq_cq_licensebranding);

    OAIConfigNodePropertyString* getComDayCqCqNotifcationImpl();
    void setComDayCqCqNotifcationImpl(OAIConfigNodePropertyString* com_day_cq_cq_notifcation_impl);

    OAIConfigNodePropertyString* getComDayCqCqReplicationAudit();
    void setComDayCqCqReplicationAudit(OAIConfigNodePropertyString* com_day_cq_cq_replication_audit);

    OAIConfigNodePropertyString* getComDayCqCqSearchExt();
    void setComDayCqCqSearchExt(OAIConfigNodePropertyString* com_day_cq_cq_search_ext);

    OAIConfigNodePropertyString* getComDayCqDamCqDamAnnotationPrint();
    void setComDayCqDamCqDamAnnotationPrint(OAIConfigNodePropertyString* com_day_cq_dam_cq_dam_annotation_print);

    OAIConfigNodePropertyString* getComDayCqDamCqDamAssetUsage();
    void setComDayCqDamCqDamAssetUsage(OAIConfigNodePropertyString* com_day_cq_dam_cq_dam_asset_usage);

    OAIConfigNodePropertyString* getComDayCqDamCqDamS7dam();
    void setComDayCqDamCqDamS7dam(OAIConfigNodePropertyString* com_day_cq_dam_cq_dam_s7dam);

    OAIConfigNodePropertyString* getComDayCqDamCqDamSimilaritysearch();
    void setComDayCqDamCqDamSimilaritysearch(OAIConfigNodePropertyString* com_day_cq_dam_cq_dam_similaritysearch);

    OAIConfigNodePropertyString* getComDayCqDamDamWebdavSupport();
    void setComDayCqDamDamWebdavSupport(OAIConfigNodePropertyString* com_day_cq_dam_dam_webdav_support);

    OAIConfigNodePropertyString* getComDayCqPreUpgradeTasks();
    void setComDayCqPreUpgradeTasks(OAIConfigNodePropertyString* com_day_cq_pre_upgrade_tasks);

    OAIConfigNodePropertyString* getComDayCqReplicationExtensions();
    void setComDayCqReplicationExtensions(OAIConfigNodePropertyString* com_day_cq_replication_extensions);

    OAIConfigNodePropertyString* getComDayCqWcmCqMsmCore();
    void setComDayCqWcmCqMsmCore(OAIConfigNodePropertyString* com_day_cq_wcm_cq_msm_core);

    OAIConfigNodePropertyString* getComDayCqWcmCqWcmTranslation();
    void setComDayCqWcmCqWcmTranslation(OAIConfigNodePropertyString* com_day_cq_wcm_cq_wcm_translation);

    OAIConfigNodePropertyString* getDayCommonsJrawio();
    void setDayCommonsJrawio(OAIConfigNodePropertyString* day_commons_jrawio);

    OAIConfigNodePropertyString* getOrgApacheAriesJmxWhiteboard();
    void setOrgApacheAriesJmxWhiteboard(OAIConfigNodePropertyString* org_apache_aries_jmx_whiteboard);

    OAIConfigNodePropertyString* getOrgApacheFelixHttpSslfilter();
    void setOrgApacheFelixHttpSslfilter(OAIConfigNodePropertyString* org_apache_felix_http_sslfilter);

    OAIConfigNodePropertyString* getOrgApacheFelixOrgApacheFelixThreaddump();
    void setOrgApacheFelixOrgApacheFelixThreaddump(OAIConfigNodePropertyString* org_apache_felix_org_apache_felix_threaddump);

    OAIConfigNodePropertyString* getOrgApacheFelixWebconsolePluginsDs();
    void setOrgApacheFelixWebconsolePluginsDs(OAIConfigNodePropertyString* org_apache_felix_webconsole_plugins_ds);

    OAIConfigNodePropertyString* getOrgApacheFelixWebconsolePluginsEvent();
    void setOrgApacheFelixWebconsolePluginsEvent(OAIConfigNodePropertyString* org_apache_felix_webconsole_plugins_event);

    OAIConfigNodePropertyString* getOrgApacheFelixWebconsolePluginsMemoryusage();
    void setOrgApacheFelixWebconsolePluginsMemoryusage(OAIConfigNodePropertyString* org_apache_felix_webconsole_plugins_memoryusage);

    OAIConfigNodePropertyString* getOrgApacheFelixWebconsolePluginsPackageadmin();
    void setOrgApacheFelixWebconsolePluginsPackageadmin(OAIConfigNodePropertyString* org_apache_felix_webconsole_plugins_packageadmin);

    OAIConfigNodePropertyString* getOrgApacheJackrabbitOakAuthLdap();
    void setOrgApacheJackrabbitOakAuthLdap(OAIConfigNodePropertyString* org_apache_jackrabbit_oak_auth_ldap);

    OAIConfigNodePropertyString* getOrgApacheJackrabbitOakSegmentTar();
    void setOrgApacheJackrabbitOakSegmentTar(OAIConfigNodePropertyString* org_apache_jackrabbit_oak_segment_tar);

    OAIConfigNodePropertyString* getOrgApacheJackrabbitOakSolrOsgi();
    void setOrgApacheJackrabbitOakSolrOsgi(OAIConfigNodePropertyString* org_apache_jackrabbit_oak_solr_osgi);

    OAIConfigNodePropertyString* getOrgApacheSlingBundleresourceImpl();
    void setOrgApacheSlingBundleresourceImpl(OAIConfigNodePropertyString* org_apache_sling_bundleresource_impl);

    OAIConfigNodePropertyString* getOrgApacheSlingCommonsFsclassloader();
    void setOrgApacheSlingCommonsFsclassloader(OAIConfigNodePropertyString* org_apache_sling_commons_fsclassloader);

    OAIConfigNodePropertyString* getOrgApacheSlingCommonsLogWebconsole();
    void setOrgApacheSlingCommonsLogWebconsole(OAIConfigNodePropertyString* org_apache_sling_commons_log_webconsole);

    OAIConfigNodePropertyString* getOrgApacheSlingDatasource();
    void setOrgApacheSlingDatasource(OAIConfigNodePropertyString* org_apache_sling_datasource);

    OAIConfigNodePropertyString* getOrgApacheSlingDiscoveryBase();
    void setOrgApacheSlingDiscoveryBase(OAIConfigNodePropertyString* org_apache_sling_discovery_base);

    OAIConfigNodePropertyString* getOrgApacheSlingDiscoveryOak();
    void setOrgApacheSlingDiscoveryOak(OAIConfigNodePropertyString* org_apache_sling_discovery_oak);

    OAIConfigNodePropertyString* getOrgApacheSlingDiscoverySupport();
    void setOrgApacheSlingDiscoverySupport(OAIConfigNodePropertyString* org_apache_sling_discovery_support);

    OAIConfigNodePropertyString* getOrgApacheSlingDistributionApi();
    void setOrgApacheSlingDistributionApi(OAIConfigNodePropertyString* org_apache_sling_distribution_api);

    OAIConfigNodePropertyString* getOrgApacheSlingDistributionCore();
    void setOrgApacheSlingDistributionCore(OAIConfigNodePropertyString* org_apache_sling_distribution_core);

    OAIConfigNodePropertyString* getOrgApacheSlingExtensionsWebconsolesecurityprovider();
    void setOrgApacheSlingExtensionsWebconsolesecurityprovider(OAIConfigNodePropertyString* org_apache_sling_extensions_webconsolesecurityprovider);

    OAIConfigNodePropertyString* getOrgApacheSlingHcWebconsole();
    void setOrgApacheSlingHcWebconsole(OAIConfigNodePropertyString* org_apache_sling_hc_webconsole);

    OAIConfigNodePropertyString* getOrgApacheSlingInstallerConsole();
    void setOrgApacheSlingInstallerConsole(OAIConfigNodePropertyString* org_apache_sling_installer_console);

    OAIConfigNodePropertyString* getOrgApacheSlingInstallerProviderFile();
    void setOrgApacheSlingInstallerProviderFile(OAIConfigNodePropertyString* org_apache_sling_installer_provider_file);

    OAIConfigNodePropertyString* getOrgApacheSlingInstallerProviderJcr();
    void setOrgApacheSlingInstallerProviderJcr(OAIConfigNodePropertyString* org_apache_sling_installer_provider_jcr);

    OAIConfigNodePropertyString* getOrgApacheSlingJcrDavex();
    void setOrgApacheSlingJcrDavex(OAIConfigNodePropertyString* org_apache_sling_jcr_davex);

    OAIConfigNodePropertyString* getOrgApacheSlingJcrResourcesecurity();
    void setOrgApacheSlingJcrResourcesecurity(OAIConfigNodePropertyString* org_apache_sling_jcr_resourcesecurity);

    OAIConfigNodePropertyString* getOrgApacheSlingJmxProvider();
    void setOrgApacheSlingJmxProvider(OAIConfigNodePropertyString* org_apache_sling_jmx_provider);

    OAIConfigNodePropertyString* getOrgApacheSlingLaunchpadInstaller();
    void setOrgApacheSlingLaunchpadInstaller(OAIConfigNodePropertyString* org_apache_sling_launchpad_installer);

    OAIConfigNodePropertyString* getOrgApacheSlingModelsImpl();
    void setOrgApacheSlingModelsImpl(OAIConfigNodePropertyString* org_apache_sling_models_impl);

    OAIConfigNodePropertyString* getOrgApacheSlingRepoinitParser();
    void setOrgApacheSlingRepoinitParser(OAIConfigNodePropertyString* org_apache_sling_repoinit_parser);

    OAIConfigNodePropertyString* getOrgApacheSlingResourceInventory();
    void setOrgApacheSlingResourceInventory(OAIConfigNodePropertyString* org_apache_sling_resource_inventory);

    OAIConfigNodePropertyString* getOrgApacheSlingResourceresolver();
    void setOrgApacheSlingResourceresolver(OAIConfigNodePropertyString* org_apache_sling_resourceresolver);

    OAIConfigNodePropertyString* getOrgApacheSlingScriptingJavascript();
    void setOrgApacheSlingScriptingJavascript(OAIConfigNodePropertyString* org_apache_sling_scripting_javascript);

    OAIConfigNodePropertyString* getOrgApacheSlingScriptingJst();
    void setOrgApacheSlingScriptingJst(OAIConfigNodePropertyString* org_apache_sling_scripting_jst);

    OAIConfigNodePropertyString* getOrgApacheSlingScriptingSightlyJsProvider();
    void setOrgApacheSlingScriptingSightlyJsProvider(OAIConfigNodePropertyString* org_apache_sling_scripting_sightly_js_provider);

    OAIConfigNodePropertyString* getOrgApacheSlingScriptingSightlyModelsProvider();
    void setOrgApacheSlingScriptingSightlyModelsProvider(OAIConfigNodePropertyString* org_apache_sling_scripting_sightly_models_provider);

    OAIConfigNodePropertyString* getOrgApacheSlingSecurity();
    void setOrgApacheSlingSecurity(OAIConfigNodePropertyString* org_apache_sling_security);

    OAIConfigNodePropertyString* getOrgApacheSlingServletsCompat();
    void setOrgApacheSlingServletsCompat(OAIConfigNodePropertyString* org_apache_sling_servlets_compat);

    OAIConfigNodePropertyString* getOrgApacheSlingServletsGet();
    void setOrgApacheSlingServletsGet(OAIConfigNodePropertyString* org_apache_sling_servlets_get);

    OAIConfigNodePropertyString* getOrgApacheSlingStartupfilterDisabler();
    void setOrgApacheSlingStartupfilterDisabler(OAIConfigNodePropertyString* org_apache_sling_startupfilter_disabler);

    OAIConfigNodePropertyString* getOrgApacheSlingTracer();
    void setOrgApacheSlingTracer(OAIConfigNodePropertyString* org_apache_sling_tracer);

    OAIConfigNodePropertyString* getWeRetailClientAppCore();
    void setWeRetailClientAppCore(OAIConfigNodePropertyString* we_retail_client_app_core);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* com_adobe_cq_cdn_cdn_rewriter;
    bool m_com_adobe_cq_cdn_cdn_rewriter_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cloud_config_components;
    bool m_com_adobe_cq_cloud_config_components_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cloud_config_core;
    bool m_com_adobe_cq_cloud_config_core_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cloud_config_ui;
    bool m_com_adobe_cq_cloud_config_ui_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_editor;
    bool m_com_adobe_cq_com_adobe_cq_editor_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_projects_core;
    bool m_com_adobe_cq_com_adobe_cq_projects_core_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_projects_wcm_core;
    bool m_com_adobe_cq_com_adobe_cq_projects_wcm_core_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_ui_commons;
    bool m_com_adobe_cq_com_adobe_cq_ui_commons_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_com_adobe_cq_wcm_style;
    bool m_com_adobe_cq_com_adobe_cq_wcm_style_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cq_activitymap_integration;
    bool m_com_adobe_cq_cq_activitymap_integration_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cq_contexthub_commons;
    bool m_com_adobe_cq_cq_contexthub_commons_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cq_dtm;
    bool m_com_adobe_cq_cq_dtm_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cq_healthcheck;
    bool m_com_adobe_cq_cq_healthcheck_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cq_multisite_targeting;
    bool m_com_adobe_cq_cq_multisite_targeting_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cq_pre_upgrade_cleanup;
    bool m_com_adobe_cq_cq_pre_upgrade_cleanup_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cq_product_info_provider;
    bool m_com_adobe_cq_cq_product_info_provider_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cq_rest_sites;
    bool m_com_adobe_cq_cq_rest_sites_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_cq_security_hc;
    bool m_com_adobe_cq_cq_security_hc_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_dam_cq_dam_svg_handler;
    bool m_com_adobe_cq_dam_cq_dam_svg_handler_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_dam_cq_scene7_imaging;
    bool m_com_adobe_cq_dam_cq_scene7_imaging_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_dtm_reactor_core;
    bool m_com_adobe_cq_dtm_reactor_core_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_dtm_reactor_ui;
    bool m_com_adobe_cq_dtm_reactor_ui_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_exp_jspel_resolver;
    bool m_com_adobe_cq_exp_jspel_resolver_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_inbox_cq_inbox;
    bool m_com_adobe_cq_inbox_cq_inbox_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_json_schema_parser;
    bool m_com_adobe_cq_json_schema_parser_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_media_cq_media_publishing_dps_fp_core;
    bool m_com_adobe_cq_media_cq_media_publishing_dps_fp_core_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_mobile_cq_mobile_caas;
    bool m_com_adobe_cq_mobile_cq_mobile_caas_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_mobile_cq_mobile_index_builder;
    bool m_com_adobe_cq_mobile_cq_mobile_index_builder_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_mobile_cq_mobile_phonegap_build;
    bool m_com_adobe_cq_mobile_cq_mobile_phonegap_build_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_myspell;
    bool m_com_adobe_cq_myspell_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_sample_we_retail_core;
    bool m_com_adobe_cq_sample_we_retail_core_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_screens_com_adobe_cq_screens_dcc;
    bool m_com_adobe_cq_screens_com_adobe_cq_screens_dcc_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_screens_com_adobe_cq_screens_mq_core;
    bool m_com_adobe_cq_screens_com_adobe_cq_screens_mq_core_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_as_provider;
    bool m_com_adobe_cq_social_cq_social_as_provider_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_badging_basic_impl;
    bool m_com_adobe_cq_social_cq_social_badging_basic_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_badging_impl;
    bool m_com_adobe_cq_social_cq_social_badging_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_calendar_impl;
    bool m_com_adobe_cq_social_cq_social_calendar_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_content_fragments_impl;
    bool m_com_adobe_cq_social_cq_social_content_fragments_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_enablement_impl;
    bool m_com_adobe_cq_social_cq_social_enablement_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_graph_impl;
    bool m_com_adobe_cq_social_cq_social_graph_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_ideation_impl;
    bool m_com_adobe_cq_social_cq_social_ideation_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_jcr_provider;
    bool m_com_adobe_cq_social_cq_social_jcr_provider_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_members_impl;
    bool m_com_adobe_cq_social_cq_social_members_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_ms_provider;
    bool m_com_adobe_cq_social_cq_social_ms_provider_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_notifications_channels_web;
    bool m_com_adobe_cq_social_cq_social_notifications_channels_web_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_notifications_impl;
    bool m_com_adobe_cq_social_cq_social_notifications_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_rdb_provider;
    bool m_com_adobe_cq_social_cq_social_rdb_provider_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_scf_impl;
    bool m_com_adobe_cq_social_cq_social_scf_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_scoring_basic_impl;
    bool m_com_adobe_cq_social_cq_social_scoring_basic_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_scoring_impl;
    bool m_com_adobe_cq_social_cq_social_scoring_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_serviceusers_impl;
    bool m_com_adobe_cq_social_cq_social_serviceusers_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_srp_impl;
    bool m_com_adobe_cq_social_cq_social_srp_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_cq_social_cq_social_ugcbase_impl;
    bool m_com_adobe_cq_social_cq_social_ugcbase_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_dam_cq_dam_cfm_impl;
    bool m_com_adobe_dam_cq_dam_cfm_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_forms_foundation_forms_foundation_base;
    bool m_com_adobe_forms_foundation_forms_foundation_base_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_apicontroller;
    bool m_com_adobe_granite_apicontroller_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_asset_core;
    bool m_com_adobe_granite_asset_core_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_auth_sso;
    bool m_com_adobe_granite_auth_sso_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_bundles_hc_impl;
    bool m_com_adobe_granite_bundles_hc_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_compat_router;
    bool m_com_adobe_granite_compat_router_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_conf;
    bool m_com_adobe_granite_conf_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_conf_ui_core;
    bool m_com_adobe_granite_conf_ui_core_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_cors;
    bool m_com_adobe_granite_cors_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_crx_explorer;
    bool m_com_adobe_granite_crx_explorer_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_crxde_lite;
    bool m_com_adobe_granite_crxde_lite_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_crypto_config;
    bool m_com_adobe_granite_crypto_config_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_crypto_extension;
    bool m_com_adobe_granite_crypto_extension_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_crypto_file;
    bool m_com_adobe_granite_crypto_file_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_crypto_jcr;
    bool m_com_adobe_granite_crypto_jcr_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_csrf;
    bool m_com_adobe_granite_csrf_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_distribution_core;
    bool m_com_adobe_granite_distribution_core_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_dropwizard_metrics;
    bool m_com_adobe_granite_dropwizard_metrics_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_frags_impl;
    bool m_com_adobe_granite_frags_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_gibson;
    bool m_com_adobe_granite_gibson_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_infocollector;
    bool m_com_adobe_granite_infocollector_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_installer_factory_packages;
    bool m_com_adobe_granite_installer_factory_packages_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_jetty_ssl;
    bool m_com_adobe_granite_jetty_ssl_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_jobs_async;
    bool m_com_adobe_granite_jobs_async_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_maintenance_oak;
    bool m_com_adobe_granite_maintenance_oak_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_monitoring_core;
    bool m_com_adobe_granite_monitoring_core_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_queries;
    bool m_com_adobe_granite_queries_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_replication_hc_impl;
    bool m_com_adobe_granite_replication_hc_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_repository_checker;
    bool m_com_adobe_granite_repository_checker_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_repository_hc_impl;
    bool m_com_adobe_granite_repository_hc_impl_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_rest_assets;
    bool m_com_adobe_granite_rest_assets_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_security_ui;
    bool m_com_adobe_granite_security_ui_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_startup;
    bool m_com_adobe_granite_startup_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_tagsoup;
    bool m_com_adobe_granite_tagsoup_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_taskmanagement_core;
    bool m_com_adobe_granite_taskmanagement_core_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_taskmanagement_workflow;
    bool m_com_adobe_granite_taskmanagement_workflow_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_ui_clientlibs_compiler_less;
    bool m_com_adobe_granite_ui_clientlibs_compiler_less_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_ui_clientlibs_processor_gcc;
    bool m_com_adobe_granite_ui_clientlibs_processor_gcc_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_webconsole_plugins;
    bool m_com_adobe_granite_webconsole_plugins_isSet;

    OAIConfigNodePropertyString* com_adobe_granite_workflow_console;
    bool m_com_adobe_granite_workflow_console_isSet;

    OAIConfigNodePropertyString* com_adobe_xmp_worker_files_native_fragment_linux;
    bool m_com_adobe_xmp_worker_files_native_fragment_linux_isSet;

    OAIConfigNodePropertyString* com_adobe_xmp_worker_files_native_fragment_macosx;
    bool m_com_adobe_xmp_worker_files_native_fragment_macosx_isSet;

    OAIConfigNodePropertyString* com_adobe_xmp_worker_files_native_fragment_win;
    bool m_com_adobe_xmp_worker_files_native_fragment_win_isSet;

    OAIConfigNodePropertyString* com_day_commons_osgi_wrapper_simple_jndi;
    bool m_com_day_commons_osgi_wrapper_simple_jndi_isSet;

    OAIConfigNodePropertyString* com_day_cq_cq_authhandler;
    bool m_com_day_cq_cq_authhandler_isSet;

    OAIConfigNodePropertyString* com_day_cq_cq_compat_configupdate;
    bool m_com_day_cq_cq_compat_configupdate_isSet;

    OAIConfigNodePropertyString* com_day_cq_cq_licensebranding;
    bool m_com_day_cq_cq_licensebranding_isSet;

    OAIConfigNodePropertyString* com_day_cq_cq_notifcation_impl;
    bool m_com_day_cq_cq_notifcation_impl_isSet;

    OAIConfigNodePropertyString* com_day_cq_cq_replication_audit;
    bool m_com_day_cq_cq_replication_audit_isSet;

    OAIConfigNodePropertyString* com_day_cq_cq_search_ext;
    bool m_com_day_cq_cq_search_ext_isSet;

    OAIConfigNodePropertyString* com_day_cq_dam_cq_dam_annotation_print;
    bool m_com_day_cq_dam_cq_dam_annotation_print_isSet;

    OAIConfigNodePropertyString* com_day_cq_dam_cq_dam_asset_usage;
    bool m_com_day_cq_dam_cq_dam_asset_usage_isSet;

    OAIConfigNodePropertyString* com_day_cq_dam_cq_dam_s7dam;
    bool m_com_day_cq_dam_cq_dam_s7dam_isSet;

    OAIConfigNodePropertyString* com_day_cq_dam_cq_dam_similaritysearch;
    bool m_com_day_cq_dam_cq_dam_similaritysearch_isSet;

    OAIConfigNodePropertyString* com_day_cq_dam_dam_webdav_support;
    bool m_com_day_cq_dam_dam_webdav_support_isSet;

    OAIConfigNodePropertyString* com_day_cq_pre_upgrade_tasks;
    bool m_com_day_cq_pre_upgrade_tasks_isSet;

    OAIConfigNodePropertyString* com_day_cq_replication_extensions;
    bool m_com_day_cq_replication_extensions_isSet;

    OAIConfigNodePropertyString* com_day_cq_wcm_cq_msm_core;
    bool m_com_day_cq_wcm_cq_msm_core_isSet;

    OAIConfigNodePropertyString* com_day_cq_wcm_cq_wcm_translation;
    bool m_com_day_cq_wcm_cq_wcm_translation_isSet;

    OAIConfigNodePropertyString* day_commons_jrawio;
    bool m_day_commons_jrawio_isSet;

    OAIConfigNodePropertyString* org_apache_aries_jmx_whiteboard;
    bool m_org_apache_aries_jmx_whiteboard_isSet;

    OAIConfigNodePropertyString* org_apache_felix_http_sslfilter;
    bool m_org_apache_felix_http_sslfilter_isSet;

    OAIConfigNodePropertyString* org_apache_felix_org_apache_felix_threaddump;
    bool m_org_apache_felix_org_apache_felix_threaddump_isSet;

    OAIConfigNodePropertyString* org_apache_felix_webconsole_plugins_ds;
    bool m_org_apache_felix_webconsole_plugins_ds_isSet;

    OAIConfigNodePropertyString* org_apache_felix_webconsole_plugins_event;
    bool m_org_apache_felix_webconsole_plugins_event_isSet;

    OAIConfigNodePropertyString* org_apache_felix_webconsole_plugins_memoryusage;
    bool m_org_apache_felix_webconsole_plugins_memoryusage_isSet;

    OAIConfigNodePropertyString* org_apache_felix_webconsole_plugins_packageadmin;
    bool m_org_apache_felix_webconsole_plugins_packageadmin_isSet;

    OAIConfigNodePropertyString* org_apache_jackrabbit_oak_auth_ldap;
    bool m_org_apache_jackrabbit_oak_auth_ldap_isSet;

    OAIConfigNodePropertyString* org_apache_jackrabbit_oak_segment_tar;
    bool m_org_apache_jackrabbit_oak_segment_tar_isSet;

    OAIConfigNodePropertyString* org_apache_jackrabbit_oak_solr_osgi;
    bool m_org_apache_jackrabbit_oak_solr_osgi_isSet;

    OAIConfigNodePropertyString* org_apache_sling_bundleresource_impl;
    bool m_org_apache_sling_bundleresource_impl_isSet;

    OAIConfigNodePropertyString* org_apache_sling_commons_fsclassloader;
    bool m_org_apache_sling_commons_fsclassloader_isSet;

    OAIConfigNodePropertyString* org_apache_sling_commons_log_webconsole;
    bool m_org_apache_sling_commons_log_webconsole_isSet;

    OAIConfigNodePropertyString* org_apache_sling_datasource;
    bool m_org_apache_sling_datasource_isSet;

    OAIConfigNodePropertyString* org_apache_sling_discovery_base;
    bool m_org_apache_sling_discovery_base_isSet;

    OAIConfigNodePropertyString* org_apache_sling_discovery_oak;
    bool m_org_apache_sling_discovery_oak_isSet;

    OAIConfigNodePropertyString* org_apache_sling_discovery_support;
    bool m_org_apache_sling_discovery_support_isSet;

    OAIConfigNodePropertyString* org_apache_sling_distribution_api;
    bool m_org_apache_sling_distribution_api_isSet;

    OAIConfigNodePropertyString* org_apache_sling_distribution_core;
    bool m_org_apache_sling_distribution_core_isSet;

    OAIConfigNodePropertyString* org_apache_sling_extensions_webconsolesecurityprovider;
    bool m_org_apache_sling_extensions_webconsolesecurityprovider_isSet;

    OAIConfigNodePropertyString* org_apache_sling_hc_webconsole;
    bool m_org_apache_sling_hc_webconsole_isSet;

    OAIConfigNodePropertyString* org_apache_sling_installer_console;
    bool m_org_apache_sling_installer_console_isSet;

    OAIConfigNodePropertyString* org_apache_sling_installer_provider_file;
    bool m_org_apache_sling_installer_provider_file_isSet;

    OAIConfigNodePropertyString* org_apache_sling_installer_provider_jcr;
    bool m_org_apache_sling_installer_provider_jcr_isSet;

    OAIConfigNodePropertyString* org_apache_sling_jcr_davex;
    bool m_org_apache_sling_jcr_davex_isSet;

    OAIConfigNodePropertyString* org_apache_sling_jcr_resourcesecurity;
    bool m_org_apache_sling_jcr_resourcesecurity_isSet;

    OAIConfigNodePropertyString* org_apache_sling_jmx_provider;
    bool m_org_apache_sling_jmx_provider_isSet;

    OAIConfigNodePropertyString* org_apache_sling_launchpad_installer;
    bool m_org_apache_sling_launchpad_installer_isSet;

    OAIConfigNodePropertyString* org_apache_sling_models_impl;
    bool m_org_apache_sling_models_impl_isSet;

    OAIConfigNodePropertyString* org_apache_sling_repoinit_parser;
    bool m_org_apache_sling_repoinit_parser_isSet;

    OAIConfigNodePropertyString* org_apache_sling_resource_inventory;
    bool m_org_apache_sling_resource_inventory_isSet;

    OAIConfigNodePropertyString* org_apache_sling_resourceresolver;
    bool m_org_apache_sling_resourceresolver_isSet;

    OAIConfigNodePropertyString* org_apache_sling_scripting_javascript;
    bool m_org_apache_sling_scripting_javascript_isSet;

    OAIConfigNodePropertyString* org_apache_sling_scripting_jst;
    bool m_org_apache_sling_scripting_jst_isSet;

    OAIConfigNodePropertyString* org_apache_sling_scripting_sightly_js_provider;
    bool m_org_apache_sling_scripting_sightly_js_provider_isSet;

    OAIConfigNodePropertyString* org_apache_sling_scripting_sightly_models_provider;
    bool m_org_apache_sling_scripting_sightly_models_provider_isSet;

    OAIConfigNodePropertyString* org_apache_sling_security;
    bool m_org_apache_sling_security_isSet;

    OAIConfigNodePropertyString* org_apache_sling_servlets_compat;
    bool m_org_apache_sling_servlets_compat_isSet;

    OAIConfigNodePropertyString* org_apache_sling_servlets_get;
    bool m_org_apache_sling_servlets_get_isSet;

    OAIConfigNodePropertyString* org_apache_sling_startupfilter_disabler;
    bool m_org_apache_sling_startupfilter_disabler_isSet;

    OAIConfigNodePropertyString* org_apache_sling_tracer;
    bool m_org_apache_sling_tracer_isSet;

    OAIConfigNodePropertyString* we_retail_client_app_core;
    bool m_we_retail_client_app_core_isSet;

};

}

#endif /* OAIComAdobeGraniteApicontrollerFilterResolverHookFactoryProperties_H_ */
