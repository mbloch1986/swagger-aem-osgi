<?php
/**
 * OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'orgApacheJackrabbitOakSegmentSegmentNodeStoreFactoryProperties';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'repository_home' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'tarmk_mode' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'tarmk_size' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'segment_cache_size' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'string_cache_size' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'template_cache_size' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'string_deduplication_cache_size' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'template_deduplication_cache_size' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'node_deduplication_cache_size' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'pause_compaction' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'compaction_retry_count' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'compaction_force_timeout' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'compaction_size_delta_estimation' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'compaction_disable_estimation' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'compaction_retained_generations' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'compaction_memory_threshold' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'compaction_progress_log' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'standby' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'custom_blob_store' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'custom_segment_store' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'split_persistence' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'repository_backup_dir' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'blob_gc_max_age_in_secs' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'blob_track_snapshot_interval_in_secs' => '\OpenAPI\Client\Model\ConfigNodePropertyInteger',
        'role' => '\OpenAPI\Client\Model\ConfigNodePropertyString',
        'register_descriptors' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean',
        'dispatch_changes' => '\OpenAPI\Client\Model\ConfigNodePropertyBoolean'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'repository_home' => null,
        'tarmk_mode' => null,
        'tarmk_size' => null,
        'segment_cache_size' => null,
        'string_cache_size' => null,
        'template_cache_size' => null,
        'string_deduplication_cache_size' => null,
        'template_deduplication_cache_size' => null,
        'node_deduplication_cache_size' => null,
        'pause_compaction' => null,
        'compaction_retry_count' => null,
        'compaction_force_timeout' => null,
        'compaction_size_delta_estimation' => null,
        'compaction_disable_estimation' => null,
        'compaction_retained_generations' => null,
        'compaction_memory_threshold' => null,
        'compaction_progress_log' => null,
        'standby' => null,
        'custom_blob_store' => null,
        'custom_segment_store' => null,
        'split_persistence' => null,
        'repository_backup_dir' => null,
        'blob_gc_max_age_in_secs' => null,
        'blob_track_snapshot_interval_in_secs' => null,
        'role' => null,
        'register_descriptors' => null,
        'dispatch_changes' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'repository_home' => 'repository.home',
        'tarmk_mode' => 'tarmk.mode',
        'tarmk_size' => 'tarmk.size',
        'segment_cache_size' => 'segmentCache.size',
        'string_cache_size' => 'stringCache.size',
        'template_cache_size' => 'templateCache.size',
        'string_deduplication_cache_size' => 'stringDeduplicationCache.size',
        'template_deduplication_cache_size' => 'templateDeduplicationCache.size',
        'node_deduplication_cache_size' => 'nodeDeduplicationCache.size',
        'pause_compaction' => 'pauseCompaction',
        'compaction_retry_count' => 'compaction.retryCount',
        'compaction_force_timeout' => 'compaction.force.timeout',
        'compaction_size_delta_estimation' => 'compaction.sizeDeltaEstimation',
        'compaction_disable_estimation' => 'compaction.disableEstimation',
        'compaction_retained_generations' => 'compaction.retainedGenerations',
        'compaction_memory_threshold' => 'compaction.memoryThreshold',
        'compaction_progress_log' => 'compaction.progressLog',
        'standby' => 'standby',
        'custom_blob_store' => 'customBlobStore',
        'custom_segment_store' => 'customSegmentStore',
        'split_persistence' => 'splitPersistence',
        'repository_backup_dir' => 'repository.backup.dir',
        'blob_gc_max_age_in_secs' => 'blobGcMaxAgeInSecs',
        'blob_track_snapshot_interval_in_secs' => 'blobTrackSnapshotIntervalInSecs',
        'role' => 'role',
        'register_descriptors' => 'registerDescriptors',
        'dispatch_changes' => 'dispatchChanges'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'repository_home' => 'setRepositoryHome',
        'tarmk_mode' => 'setTarmkMode',
        'tarmk_size' => 'setTarmkSize',
        'segment_cache_size' => 'setSegmentCacheSize',
        'string_cache_size' => 'setStringCacheSize',
        'template_cache_size' => 'setTemplateCacheSize',
        'string_deduplication_cache_size' => 'setStringDeduplicationCacheSize',
        'template_deduplication_cache_size' => 'setTemplateDeduplicationCacheSize',
        'node_deduplication_cache_size' => 'setNodeDeduplicationCacheSize',
        'pause_compaction' => 'setPauseCompaction',
        'compaction_retry_count' => 'setCompactionRetryCount',
        'compaction_force_timeout' => 'setCompactionForceTimeout',
        'compaction_size_delta_estimation' => 'setCompactionSizeDeltaEstimation',
        'compaction_disable_estimation' => 'setCompactionDisableEstimation',
        'compaction_retained_generations' => 'setCompactionRetainedGenerations',
        'compaction_memory_threshold' => 'setCompactionMemoryThreshold',
        'compaction_progress_log' => 'setCompactionProgressLog',
        'standby' => 'setStandby',
        'custom_blob_store' => 'setCustomBlobStore',
        'custom_segment_store' => 'setCustomSegmentStore',
        'split_persistence' => 'setSplitPersistence',
        'repository_backup_dir' => 'setRepositoryBackupDir',
        'blob_gc_max_age_in_secs' => 'setBlobGcMaxAgeInSecs',
        'blob_track_snapshot_interval_in_secs' => 'setBlobTrackSnapshotIntervalInSecs',
        'role' => 'setRole',
        'register_descriptors' => 'setRegisterDescriptors',
        'dispatch_changes' => 'setDispatchChanges'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'repository_home' => 'getRepositoryHome',
        'tarmk_mode' => 'getTarmkMode',
        'tarmk_size' => 'getTarmkSize',
        'segment_cache_size' => 'getSegmentCacheSize',
        'string_cache_size' => 'getStringCacheSize',
        'template_cache_size' => 'getTemplateCacheSize',
        'string_deduplication_cache_size' => 'getStringDeduplicationCacheSize',
        'template_deduplication_cache_size' => 'getTemplateDeduplicationCacheSize',
        'node_deduplication_cache_size' => 'getNodeDeduplicationCacheSize',
        'pause_compaction' => 'getPauseCompaction',
        'compaction_retry_count' => 'getCompactionRetryCount',
        'compaction_force_timeout' => 'getCompactionForceTimeout',
        'compaction_size_delta_estimation' => 'getCompactionSizeDeltaEstimation',
        'compaction_disable_estimation' => 'getCompactionDisableEstimation',
        'compaction_retained_generations' => 'getCompactionRetainedGenerations',
        'compaction_memory_threshold' => 'getCompactionMemoryThreshold',
        'compaction_progress_log' => 'getCompactionProgressLog',
        'standby' => 'getStandby',
        'custom_blob_store' => 'getCustomBlobStore',
        'custom_segment_store' => 'getCustomSegmentStore',
        'split_persistence' => 'getSplitPersistence',
        'repository_backup_dir' => 'getRepositoryBackupDir',
        'blob_gc_max_age_in_secs' => 'getBlobGcMaxAgeInSecs',
        'blob_track_snapshot_interval_in_secs' => 'getBlobTrackSnapshotIntervalInSecs',
        'role' => 'getRole',
        'register_descriptors' => 'getRegisterDescriptors',
        'dispatch_changes' => 'getDispatchChanges'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['repository_home'] = isset($data['repository_home']) ? $data['repository_home'] : null;
        $this->container['tarmk_mode'] = isset($data['tarmk_mode']) ? $data['tarmk_mode'] : null;
        $this->container['tarmk_size'] = isset($data['tarmk_size']) ? $data['tarmk_size'] : null;
        $this->container['segment_cache_size'] = isset($data['segment_cache_size']) ? $data['segment_cache_size'] : null;
        $this->container['string_cache_size'] = isset($data['string_cache_size']) ? $data['string_cache_size'] : null;
        $this->container['template_cache_size'] = isset($data['template_cache_size']) ? $data['template_cache_size'] : null;
        $this->container['string_deduplication_cache_size'] = isset($data['string_deduplication_cache_size']) ? $data['string_deduplication_cache_size'] : null;
        $this->container['template_deduplication_cache_size'] = isset($data['template_deduplication_cache_size']) ? $data['template_deduplication_cache_size'] : null;
        $this->container['node_deduplication_cache_size'] = isset($data['node_deduplication_cache_size']) ? $data['node_deduplication_cache_size'] : null;
        $this->container['pause_compaction'] = isset($data['pause_compaction']) ? $data['pause_compaction'] : null;
        $this->container['compaction_retry_count'] = isset($data['compaction_retry_count']) ? $data['compaction_retry_count'] : null;
        $this->container['compaction_force_timeout'] = isset($data['compaction_force_timeout']) ? $data['compaction_force_timeout'] : null;
        $this->container['compaction_size_delta_estimation'] = isset($data['compaction_size_delta_estimation']) ? $data['compaction_size_delta_estimation'] : null;
        $this->container['compaction_disable_estimation'] = isset($data['compaction_disable_estimation']) ? $data['compaction_disable_estimation'] : null;
        $this->container['compaction_retained_generations'] = isset($data['compaction_retained_generations']) ? $data['compaction_retained_generations'] : null;
        $this->container['compaction_memory_threshold'] = isset($data['compaction_memory_threshold']) ? $data['compaction_memory_threshold'] : null;
        $this->container['compaction_progress_log'] = isset($data['compaction_progress_log']) ? $data['compaction_progress_log'] : null;
        $this->container['standby'] = isset($data['standby']) ? $data['standby'] : null;
        $this->container['custom_blob_store'] = isset($data['custom_blob_store']) ? $data['custom_blob_store'] : null;
        $this->container['custom_segment_store'] = isset($data['custom_segment_store']) ? $data['custom_segment_store'] : null;
        $this->container['split_persistence'] = isset($data['split_persistence']) ? $data['split_persistence'] : null;
        $this->container['repository_backup_dir'] = isset($data['repository_backup_dir']) ? $data['repository_backup_dir'] : null;
        $this->container['blob_gc_max_age_in_secs'] = isset($data['blob_gc_max_age_in_secs']) ? $data['blob_gc_max_age_in_secs'] : null;
        $this->container['blob_track_snapshot_interval_in_secs'] = isset($data['blob_track_snapshot_interval_in_secs']) ? $data['blob_track_snapshot_interval_in_secs'] : null;
        $this->container['role'] = isset($data['role']) ? $data['role'] : null;
        $this->container['register_descriptors'] = isset($data['register_descriptors']) ? $data['register_descriptors'] : null;
        $this->container['dispatch_changes'] = isset($data['dispatch_changes']) ? $data['dispatch_changes'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets repository_home
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getRepositoryHome()
    {
        return $this->container['repository_home'];
    }

    /**
     * Sets repository_home
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $repository_home repository_home
     *
     * @return $this
     */
    public function setRepositoryHome($repository_home)
    {
        $this->container['repository_home'] = $repository_home;

        return $this;
    }

    /**
     * Gets tarmk_mode
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getTarmkMode()
    {
        return $this->container['tarmk_mode'];
    }

    /**
     * Sets tarmk_mode
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $tarmk_mode tarmk_mode
     *
     * @return $this
     */
    public function setTarmkMode($tarmk_mode)
    {
        $this->container['tarmk_mode'] = $tarmk_mode;

        return $this;
    }

    /**
     * Gets tarmk_size
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getTarmkSize()
    {
        return $this->container['tarmk_size'];
    }

    /**
     * Sets tarmk_size
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $tarmk_size tarmk_size
     *
     * @return $this
     */
    public function setTarmkSize($tarmk_size)
    {
        $this->container['tarmk_size'] = $tarmk_size;

        return $this;
    }

    /**
     * Gets segment_cache_size
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getSegmentCacheSize()
    {
        return $this->container['segment_cache_size'];
    }

    /**
     * Sets segment_cache_size
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $segment_cache_size segment_cache_size
     *
     * @return $this
     */
    public function setSegmentCacheSize($segment_cache_size)
    {
        $this->container['segment_cache_size'] = $segment_cache_size;

        return $this;
    }

    /**
     * Gets string_cache_size
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getStringCacheSize()
    {
        return $this->container['string_cache_size'];
    }

    /**
     * Sets string_cache_size
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $string_cache_size string_cache_size
     *
     * @return $this
     */
    public function setStringCacheSize($string_cache_size)
    {
        $this->container['string_cache_size'] = $string_cache_size;

        return $this;
    }

    /**
     * Gets template_cache_size
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getTemplateCacheSize()
    {
        return $this->container['template_cache_size'];
    }

    /**
     * Sets template_cache_size
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $template_cache_size template_cache_size
     *
     * @return $this
     */
    public function setTemplateCacheSize($template_cache_size)
    {
        $this->container['template_cache_size'] = $template_cache_size;

        return $this;
    }

    /**
     * Gets string_deduplication_cache_size
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getStringDeduplicationCacheSize()
    {
        return $this->container['string_deduplication_cache_size'];
    }

    /**
     * Sets string_deduplication_cache_size
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $string_deduplication_cache_size string_deduplication_cache_size
     *
     * @return $this
     */
    public function setStringDeduplicationCacheSize($string_deduplication_cache_size)
    {
        $this->container['string_deduplication_cache_size'] = $string_deduplication_cache_size;

        return $this;
    }

    /**
     * Gets template_deduplication_cache_size
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getTemplateDeduplicationCacheSize()
    {
        return $this->container['template_deduplication_cache_size'];
    }

    /**
     * Sets template_deduplication_cache_size
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $template_deduplication_cache_size template_deduplication_cache_size
     *
     * @return $this
     */
    public function setTemplateDeduplicationCacheSize($template_deduplication_cache_size)
    {
        $this->container['template_deduplication_cache_size'] = $template_deduplication_cache_size;

        return $this;
    }

    /**
     * Gets node_deduplication_cache_size
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getNodeDeduplicationCacheSize()
    {
        return $this->container['node_deduplication_cache_size'];
    }

    /**
     * Sets node_deduplication_cache_size
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $node_deduplication_cache_size node_deduplication_cache_size
     *
     * @return $this
     */
    public function setNodeDeduplicationCacheSize($node_deduplication_cache_size)
    {
        $this->container['node_deduplication_cache_size'] = $node_deduplication_cache_size;

        return $this;
    }

    /**
     * Gets pause_compaction
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getPauseCompaction()
    {
        return $this->container['pause_compaction'];
    }

    /**
     * Sets pause_compaction
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $pause_compaction pause_compaction
     *
     * @return $this
     */
    public function setPauseCompaction($pause_compaction)
    {
        $this->container['pause_compaction'] = $pause_compaction;

        return $this;
    }

    /**
     * Gets compaction_retry_count
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getCompactionRetryCount()
    {
        return $this->container['compaction_retry_count'];
    }

    /**
     * Sets compaction_retry_count
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $compaction_retry_count compaction_retry_count
     *
     * @return $this
     */
    public function setCompactionRetryCount($compaction_retry_count)
    {
        $this->container['compaction_retry_count'] = $compaction_retry_count;

        return $this;
    }

    /**
     * Gets compaction_force_timeout
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getCompactionForceTimeout()
    {
        return $this->container['compaction_force_timeout'];
    }

    /**
     * Sets compaction_force_timeout
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $compaction_force_timeout compaction_force_timeout
     *
     * @return $this
     */
    public function setCompactionForceTimeout($compaction_force_timeout)
    {
        $this->container['compaction_force_timeout'] = $compaction_force_timeout;

        return $this;
    }

    /**
     * Gets compaction_size_delta_estimation
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getCompactionSizeDeltaEstimation()
    {
        return $this->container['compaction_size_delta_estimation'];
    }

    /**
     * Sets compaction_size_delta_estimation
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $compaction_size_delta_estimation compaction_size_delta_estimation
     *
     * @return $this
     */
    public function setCompactionSizeDeltaEstimation($compaction_size_delta_estimation)
    {
        $this->container['compaction_size_delta_estimation'] = $compaction_size_delta_estimation;

        return $this;
    }

    /**
     * Gets compaction_disable_estimation
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getCompactionDisableEstimation()
    {
        return $this->container['compaction_disable_estimation'];
    }

    /**
     * Sets compaction_disable_estimation
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $compaction_disable_estimation compaction_disable_estimation
     *
     * @return $this
     */
    public function setCompactionDisableEstimation($compaction_disable_estimation)
    {
        $this->container['compaction_disable_estimation'] = $compaction_disable_estimation;

        return $this;
    }

    /**
     * Gets compaction_retained_generations
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getCompactionRetainedGenerations()
    {
        return $this->container['compaction_retained_generations'];
    }

    /**
     * Sets compaction_retained_generations
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $compaction_retained_generations compaction_retained_generations
     *
     * @return $this
     */
    public function setCompactionRetainedGenerations($compaction_retained_generations)
    {
        $this->container['compaction_retained_generations'] = $compaction_retained_generations;

        return $this;
    }

    /**
     * Gets compaction_memory_threshold
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getCompactionMemoryThreshold()
    {
        return $this->container['compaction_memory_threshold'];
    }

    /**
     * Sets compaction_memory_threshold
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $compaction_memory_threshold compaction_memory_threshold
     *
     * @return $this
     */
    public function setCompactionMemoryThreshold($compaction_memory_threshold)
    {
        $this->container['compaction_memory_threshold'] = $compaction_memory_threshold;

        return $this;
    }

    /**
     * Gets compaction_progress_log
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getCompactionProgressLog()
    {
        return $this->container['compaction_progress_log'];
    }

    /**
     * Sets compaction_progress_log
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $compaction_progress_log compaction_progress_log
     *
     * @return $this
     */
    public function setCompactionProgressLog($compaction_progress_log)
    {
        $this->container['compaction_progress_log'] = $compaction_progress_log;

        return $this;
    }

    /**
     * Gets standby
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getStandby()
    {
        return $this->container['standby'];
    }

    /**
     * Sets standby
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $standby standby
     *
     * @return $this
     */
    public function setStandby($standby)
    {
        $this->container['standby'] = $standby;

        return $this;
    }

    /**
     * Gets custom_blob_store
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getCustomBlobStore()
    {
        return $this->container['custom_blob_store'];
    }

    /**
     * Sets custom_blob_store
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $custom_blob_store custom_blob_store
     *
     * @return $this
     */
    public function setCustomBlobStore($custom_blob_store)
    {
        $this->container['custom_blob_store'] = $custom_blob_store;

        return $this;
    }

    /**
     * Gets custom_segment_store
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getCustomSegmentStore()
    {
        return $this->container['custom_segment_store'];
    }

    /**
     * Sets custom_segment_store
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $custom_segment_store custom_segment_store
     *
     * @return $this
     */
    public function setCustomSegmentStore($custom_segment_store)
    {
        $this->container['custom_segment_store'] = $custom_segment_store;

        return $this;
    }

    /**
     * Gets split_persistence
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getSplitPersistence()
    {
        return $this->container['split_persistence'];
    }

    /**
     * Sets split_persistence
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $split_persistence split_persistence
     *
     * @return $this
     */
    public function setSplitPersistence($split_persistence)
    {
        $this->container['split_persistence'] = $split_persistence;

        return $this;
    }

    /**
     * Gets repository_backup_dir
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getRepositoryBackupDir()
    {
        return $this->container['repository_backup_dir'];
    }

    /**
     * Sets repository_backup_dir
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $repository_backup_dir repository_backup_dir
     *
     * @return $this
     */
    public function setRepositoryBackupDir($repository_backup_dir)
    {
        $this->container['repository_backup_dir'] = $repository_backup_dir;

        return $this;
    }

    /**
     * Gets blob_gc_max_age_in_secs
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getBlobGcMaxAgeInSecs()
    {
        return $this->container['blob_gc_max_age_in_secs'];
    }

    /**
     * Sets blob_gc_max_age_in_secs
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $blob_gc_max_age_in_secs blob_gc_max_age_in_secs
     *
     * @return $this
     */
    public function setBlobGcMaxAgeInSecs($blob_gc_max_age_in_secs)
    {
        $this->container['blob_gc_max_age_in_secs'] = $blob_gc_max_age_in_secs;

        return $this;
    }

    /**
     * Gets blob_track_snapshot_interval_in_secs
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyInteger|null
     */
    public function getBlobTrackSnapshotIntervalInSecs()
    {
        return $this->container['blob_track_snapshot_interval_in_secs'];
    }

    /**
     * Sets blob_track_snapshot_interval_in_secs
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyInteger|null $blob_track_snapshot_interval_in_secs blob_track_snapshot_interval_in_secs
     *
     * @return $this
     */
    public function setBlobTrackSnapshotIntervalInSecs($blob_track_snapshot_interval_in_secs)
    {
        $this->container['blob_track_snapshot_interval_in_secs'] = $blob_track_snapshot_interval_in_secs;

        return $this;
    }

    /**
     * Gets role
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyString|null
     */
    public function getRole()
    {
        return $this->container['role'];
    }

    /**
     * Sets role
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyString|null $role role
     *
     * @return $this
     */
    public function setRole($role)
    {
        $this->container['role'] = $role;

        return $this;
    }

    /**
     * Gets register_descriptors
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getRegisterDescriptors()
    {
        return $this->container['register_descriptors'];
    }

    /**
     * Sets register_descriptors
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $register_descriptors register_descriptors
     *
     * @return $this
     */
    public function setRegisterDescriptors($register_descriptors)
    {
        $this->container['register_descriptors'] = $register_descriptors;

        return $this;
    }

    /**
     * Gets dispatch_changes
     *
     * @return \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null
     */
    public function getDispatchChanges()
    {
        return $this->container['dispatch_changes'];
    }

    /**
     * Sets dispatch_changes
     *
     * @param \OpenAPI\Client\Model\ConfigNodePropertyBoolean|null $dispatch_changes dispatch_changes
     *
     * @return $this
     */
    public function setDispatchChanges($dispatch_changes)
    {
        $this->container['dispatch_changes'] = $dispatch_changes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


