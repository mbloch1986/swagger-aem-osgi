package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties._

case class ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties (
  facebook: Option[ConfigNodePropertyArray],
twitter: Option[ConfigNodePropertyArray],
providerConfigUserFolder: Option[ConfigNodePropertyString])

object ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperPropertiesCodecJson: CodecJson[ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties] = CodecJson.derive[ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties]
  implicit val ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperPropertiesDecoder: EntityDecoder[ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties] = jsonOf[ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties]
  implicit val ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperPropertiesEncoder: EntityEncoder[ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties] = jsonEncoderOf[ComAdobeCqSocialConnectOauthImplSocialOAuthUserProfileMapperProperties]
}
