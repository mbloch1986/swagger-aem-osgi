/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteRestImplServletDefaultGETServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::OAIComAdobeGraniteRestImplServletDefaultGETServletProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::OAIComAdobeGraniteRestImplServletDefaultGETServletProperties() {
    init();
}

OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::~OAIComAdobeGraniteRestImplServletDefaultGETServletProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::init() {
    default_limit = new OAIConfigNodePropertyInteger();
    m_default_limit_isSet = false;
    use_absolute_uri = new OAIConfigNodePropertyBoolean();
    m_use_absolute_uri_isSet = false;
}

void
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::cleanup() {
    if(default_limit != nullptr) { 
        delete default_limit;
    }
    if(use_absolute_uri != nullptr) { 
        delete use_absolute_uri;
    }
}

OAIComAdobeGraniteRestImplServletDefaultGETServletProperties*
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&default_limit, pJson["default.limit"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&use_absolute_uri, pJson["use.absolute.uri"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::asJsonObject() {
    QJsonObject obj;
    if((default_limit != nullptr) && (default_limit->isSet())){
        toJsonValue(QString("default.limit"), default_limit, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((use_absolute_uri != nullptr) && (use_absolute_uri->isSet())){
        toJsonValue(QString("use.absolute.uri"), use_absolute_uri, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::getDefaultLimit() {
    return default_limit;
}
void
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::setDefaultLimit(OAIConfigNodePropertyInteger* default_limit) {
    this->default_limit = default_limit;
    this->m_default_limit_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::getUseAbsoluteUri() {
    return use_absolute_uri;
}
void
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::setUseAbsoluteUri(OAIConfigNodePropertyBoolean* use_absolute_uri) {
    this->use_absolute_uri = use_absolute_uri;
    this->m_use_absolute_uri_isSet = true;
}


bool
OAIComAdobeGraniteRestImplServletDefaultGETServletProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(default_limit != nullptr && default_limit->isSet()){ isObjectUpdated = true; break;}
        if(use_absolute_uri != nullptr && use_absolute_uri->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

