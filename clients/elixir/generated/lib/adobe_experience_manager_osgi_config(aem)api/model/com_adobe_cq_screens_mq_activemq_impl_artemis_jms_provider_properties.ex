# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdobeExperienceManagerOSGIConfig(AEM)API.Model.ComAdobeCqScreensMqActivemqImplArtemisJmsProviderProperties do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"service.ranking",
    :"global.size",
    :"max.disk.usage",
    :"persistence.enabled",
    :"thread.pool.max.size",
    :"scheduled.thread.pool.max.size",
    :"graceful.shutdown.timeout",
    :"queues",
    :"topics",
    :"addresses.max.delivery.attempts",
    :"addresses.expiry.delay",
    :"addresses.address.full.message.policy",
    :"addresses.max.size.bytes",
    :"addresses.page.size.bytes",
    :"addresses.page.cache.max.size",
    :"cluster.user",
    :"cluster.password",
    :"cluster.call.timeout",
    :"cluster.call.failover.timeout",
    :"cluster.client.failure.check.period",
    :"cluster.notification.attempts",
    :"cluster.notification.interval",
    :"id.cache.size",
    :"cluster.confirmation.window.size",
    :"cluster.connection.ttl",
    :"cluster.duplicate.detection",
    :"cluster.initial.connect.attempts",
    :"cluster.max.retry.interval",
    :"cluster.min.large.message.size",
    :"cluster.producer.window.size",
    :"cluster.reconnect.attempts",
    :"cluster.retry.interval",
    :"cluster.retry.interval.multiplier"
  ]

  @type t :: %__MODULE__{
    :"service.ranking" => ConfigNodePropertyInteger,
    :"global.size" => ConfigNodePropertyInteger,
    :"max.disk.usage" => ConfigNodePropertyInteger,
    :"persistence.enabled" => ConfigNodePropertyBoolean,
    :"thread.pool.max.size" => ConfigNodePropertyInteger,
    :"scheduled.thread.pool.max.size" => ConfigNodePropertyInteger,
    :"graceful.shutdown.timeout" => ConfigNodePropertyInteger,
    :"queues" => ConfigNodePropertyArray,
    :"topics" => ConfigNodePropertyArray,
    :"addresses.max.delivery.attempts" => ConfigNodePropertyInteger,
    :"addresses.expiry.delay" => ConfigNodePropertyInteger,
    :"addresses.address.full.message.policy" => ConfigNodePropertyDropDown,
    :"addresses.max.size.bytes" => ConfigNodePropertyInteger,
    :"addresses.page.size.bytes" => ConfigNodePropertyInteger,
    :"addresses.page.cache.max.size" => ConfigNodePropertyInteger,
    :"cluster.user" => ConfigNodePropertyString,
    :"cluster.password" => ConfigNodePropertyString,
    :"cluster.call.timeout" => ConfigNodePropertyInteger,
    :"cluster.call.failover.timeout" => ConfigNodePropertyInteger,
    :"cluster.client.failure.check.period" => ConfigNodePropertyInteger,
    :"cluster.notification.attempts" => ConfigNodePropertyInteger,
    :"cluster.notification.interval" => ConfigNodePropertyInteger,
    :"id.cache.size" => ConfigNodePropertyInteger,
    :"cluster.confirmation.window.size" => ConfigNodePropertyInteger,
    :"cluster.connection.ttl" => ConfigNodePropertyInteger,
    :"cluster.duplicate.detection" => ConfigNodePropertyBoolean,
    :"cluster.initial.connect.attempts" => ConfigNodePropertyInteger,
    :"cluster.max.retry.interval" => ConfigNodePropertyInteger,
    :"cluster.min.large.message.size" => ConfigNodePropertyInteger,
    :"cluster.producer.window.size" => ConfigNodePropertyInteger,
    :"cluster.reconnect.attempts" => ConfigNodePropertyInteger,
    :"cluster.retry.interval" => ConfigNodePropertyInteger,
    :"cluster.retry.interval.multiplier" => ConfigNodePropertyFloat
  }
end

defimpl Poison.Decoder, for: AdobeExperienceManagerOSGIConfig(AEM)API.Model.ComAdobeCqScreensMqActivemqImplArtemisJmsProviderProperties do
  import AdobeExperienceManagerOSGIConfig(AEM)API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"service.ranking", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"global.size", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"max.disk.usage", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"persistence.enabled", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"thread.pool.max.size", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"scheduled.thread.pool.max.size", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"graceful.shutdown.timeout", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"queues", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"topics", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyArray, options)
    |> deserialize(:"addresses.max.delivery.attempts", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"addresses.expiry.delay", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"addresses.address.full.message.policy", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyDropDown, options)
    |> deserialize(:"addresses.max.size.bytes", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"addresses.page.size.bytes", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"addresses.page.cache.max.size", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.user", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"cluster.password", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"cluster.call.timeout", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.call.failover.timeout", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.client.failure.check.period", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.notification.attempts", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.notification.interval", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"id.cache.size", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.confirmation.window.size", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.connection.ttl", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.duplicate.detection", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"cluster.initial.connect.attempts", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.max.retry.interval", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.min.large.message.size", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.producer.window.size", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.reconnect.attempts", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.retry.interval", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyInteger, options)
    |> deserialize(:"cluster.retry.interval.multiplier", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyFloat, options)
  end
end

