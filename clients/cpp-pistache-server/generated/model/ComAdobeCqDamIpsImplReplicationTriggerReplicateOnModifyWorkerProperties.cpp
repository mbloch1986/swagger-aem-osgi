/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties()
{
    m_Dmreplicateonmodify_enabledIsSet = false;
    m_Dmreplicateonmodify_forcesyncdeletesIsSet = false;
    
}

ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::~ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties()
{
}

void ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Dmreplicateonmodify_enabledIsSet)
    {
        val["dmreplicateonmodify.enabled"] = ModelBase::toJson(m_Dmreplicateonmodify_enabled);
    }
    if(m_Dmreplicateonmodify_forcesyncdeletesIsSet)
    {
        val["dmreplicateonmodify.forcesyncdeletes"] = ModelBase::toJson(m_Dmreplicateonmodify_forcesyncdeletes);
    }
    

    return val;
}

void ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::fromJson(nlohmann::json& val)
{
    if(val.find("dmreplicateonmodify.enabled") != val.end())
    {
        if(!val["dmreplicateonmodify.enabled"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["dmreplicateonmodify.enabled"]);
            setDmreplicateonmodifyEnabled( newItem );
        }
        
    }
    if(val.find("dmreplicateonmodify.forcesyncdeletes") != val.end())
    {
        if(!val["dmreplicateonmodify.forcesyncdeletes"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["dmreplicateonmodify.forcesyncdeletes"]);
            setDmreplicateonmodifyForcesyncdeletes( newItem );
        }
        
    }
    
}


ConfigNodePropertyBoolean ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::getDmreplicateonmodifyEnabled() const
{
    return m_Dmreplicateonmodify_enabled;
}
void ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::setDmreplicateonmodifyEnabled(ConfigNodePropertyBoolean const& value)
{
    m_Dmreplicateonmodify_enabled = value;
    m_Dmreplicateonmodify_enabledIsSet = true;
}
bool ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::dmreplicateonmodifyEnabledIsSet() const
{
    return m_Dmreplicateonmodify_enabledIsSet;
}
void ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::unsetDmreplicateonmodify_enabled()
{
    m_Dmreplicateonmodify_enabledIsSet = false;
}
ConfigNodePropertyBoolean ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::getDmreplicateonmodifyForcesyncdeletes() const
{
    return m_Dmreplicateonmodify_forcesyncdeletes;
}
void ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::setDmreplicateonmodifyForcesyncdeletes(ConfigNodePropertyBoolean const& value)
{
    m_Dmreplicateonmodify_forcesyncdeletes = value;
    m_Dmreplicateonmodify_forcesyncdeletesIsSet = true;
}
bool ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::dmreplicateonmodifyForcesyncdeletesIsSet() const
{
    return m_Dmreplicateonmodify_forcesyncdeletesIsSet;
}
void ComAdobeCqDamIpsImplReplicationTriggerReplicateOnModifyWorkerProperties::unsetDmreplicateonmodify_forcesyncdeletes()
{
    m_Dmreplicateonmodify_forcesyncdeletesIsSet = false;
}

}
}
}
}

