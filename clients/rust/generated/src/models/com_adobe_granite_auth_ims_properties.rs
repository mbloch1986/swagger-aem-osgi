/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteAuthImsProperties {
  #[serde(rename = "configid")]
  configid: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "scope")]
  scope: Option<::models::ConfigNodePropertyString>
}

impl ComAdobeGraniteAuthImsProperties {
  pub fn new() -> ComAdobeGraniteAuthImsProperties {
    ComAdobeGraniteAuthImsProperties {
      configid: None,
      scope: None
    }
  }

  pub fn set_configid(&mut self, configid: ::models::ConfigNodePropertyString) {
    self.configid = Some(configid);
  }

  pub fn with_configid(mut self, configid: ::models::ConfigNodePropertyString) -> ComAdobeGraniteAuthImsProperties {
    self.configid = Some(configid);
    self
  }

  pub fn configid(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.configid.as_ref()
  }

  pub fn reset_configid(&mut self) {
    self.configid = None;
  }

  pub fn set_scope(&mut self, scope: ::models::ConfigNodePropertyString) {
    self.scope = Some(scope);
  }

  pub fn with_scope(mut self, scope: ::models::ConfigNodePropertyString) -> ComAdobeGraniteAuthImsProperties {
    self.scope = Some(scope);
    self
  }

  pub fn scope(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.scope.as_ref()
  }

  pub fn reset_scope(&mut self) {
    self.scope = None;
  }

}



