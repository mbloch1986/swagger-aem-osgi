/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties()
{
    m_Hc_tagsIsSet = false;
    m_Ignored_bundlesIsSet = false;
    
}

ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::~ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties()
{
}

void ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Hc_tagsIsSet)
    {
        val["hc.tags"] = ModelBase::toJson(m_Hc_tags);
    }
    if(m_Ignored_bundlesIsSet)
    {
        val["ignored.bundles"] = ModelBase::toJson(m_Ignored_bundles);
    }
    

    return val;
}

void ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::fromJson(nlohmann::json& val)
{
    if(val.find("hc.tags") != val.end())
    {
        if(!val["hc.tags"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["hc.tags"]);
            setHcTags( newItem );
        }
        
    }
    if(val.find("ignored.bundles") != val.end())
    {
        if(!val["ignored.bundles"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["ignored.bundles"]);
            setIgnoredBundles( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::getHcTags() const
{
    return m_Hc_tags;
}
void ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::setHcTags(ConfigNodePropertyArray const& value)
{
    m_Hc_tags = value;
    m_Hc_tagsIsSet = true;
}
bool ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::hcTagsIsSet() const
{
    return m_Hc_tagsIsSet;
}
void ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::unsetHc_tags()
{
    m_Hc_tagsIsSet = false;
}
ConfigNodePropertyArray ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::getIgnoredBundles() const
{
    return m_Ignored_bundles;
}
void ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::setIgnoredBundles(ConfigNodePropertyArray const& value)
{
    m_Ignored_bundles = value;
    m_Ignored_bundlesIsSet = true;
}
bool ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::ignoredBundlesIsSet() const
{
    return m_Ignored_bundlesIsSet;
}
void ComAdobeGraniteBundlesHcImplInactiveBundlesHealthCheckProperties::unsetIgnored_bundles()
{
    m_Ignored_bundlesIsSet = false;
}

}
}
}
}

