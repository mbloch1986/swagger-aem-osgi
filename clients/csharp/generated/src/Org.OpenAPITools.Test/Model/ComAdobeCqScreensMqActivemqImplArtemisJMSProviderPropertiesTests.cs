/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ComAdobeCqScreensMqActivemqImplArtemisJMSProviderPropertiesTests
    {
        // TODO uncomment below to declare an instance variable for ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties
        //private ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties
            //instance = new ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties
        /// </summary>
        [Test]
        public void ComAdobeCqScreensMqActivemqImplArtemisJMSProviderPropertiesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties
            //Assert.IsInstanceOfType<ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties> (instance, "variable 'instance' is a ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties");
        }


        /// <summary>
        /// Test the property 'ServiceRanking'
        /// </summary>
        [Test]
        public void ServiceRankingTest()
        {
            // TODO unit test for the property 'ServiceRanking'
        }
        /// <summary>
        /// Test the property 'GlobalSize'
        /// </summary>
        [Test]
        public void GlobalSizeTest()
        {
            // TODO unit test for the property 'GlobalSize'
        }
        /// <summary>
        /// Test the property 'MaxDiskUsage'
        /// </summary>
        [Test]
        public void MaxDiskUsageTest()
        {
            // TODO unit test for the property 'MaxDiskUsage'
        }
        /// <summary>
        /// Test the property 'PersistenceEnabled'
        /// </summary>
        [Test]
        public void PersistenceEnabledTest()
        {
            // TODO unit test for the property 'PersistenceEnabled'
        }
        /// <summary>
        /// Test the property 'ThreadPoolMaxSize'
        /// </summary>
        [Test]
        public void ThreadPoolMaxSizeTest()
        {
            // TODO unit test for the property 'ThreadPoolMaxSize'
        }
        /// <summary>
        /// Test the property 'ScheduledThreadPoolMaxSize'
        /// </summary>
        [Test]
        public void ScheduledThreadPoolMaxSizeTest()
        {
            // TODO unit test for the property 'ScheduledThreadPoolMaxSize'
        }
        /// <summary>
        /// Test the property 'GracefulShutdownTimeout'
        /// </summary>
        [Test]
        public void GracefulShutdownTimeoutTest()
        {
            // TODO unit test for the property 'GracefulShutdownTimeout'
        }
        /// <summary>
        /// Test the property 'Queues'
        /// </summary>
        [Test]
        public void QueuesTest()
        {
            // TODO unit test for the property 'Queues'
        }
        /// <summary>
        /// Test the property 'Topics'
        /// </summary>
        [Test]
        public void TopicsTest()
        {
            // TODO unit test for the property 'Topics'
        }
        /// <summary>
        /// Test the property 'AddressesMaxDeliveryAttempts'
        /// </summary>
        [Test]
        public void AddressesMaxDeliveryAttemptsTest()
        {
            // TODO unit test for the property 'AddressesMaxDeliveryAttempts'
        }
        /// <summary>
        /// Test the property 'AddressesExpiryDelay'
        /// </summary>
        [Test]
        public void AddressesExpiryDelayTest()
        {
            // TODO unit test for the property 'AddressesExpiryDelay'
        }
        /// <summary>
        /// Test the property 'AddressesAddressFullMessagePolicy'
        /// </summary>
        [Test]
        public void AddressesAddressFullMessagePolicyTest()
        {
            // TODO unit test for the property 'AddressesAddressFullMessagePolicy'
        }
        /// <summary>
        /// Test the property 'AddressesMaxSizeBytes'
        /// </summary>
        [Test]
        public void AddressesMaxSizeBytesTest()
        {
            // TODO unit test for the property 'AddressesMaxSizeBytes'
        }
        /// <summary>
        /// Test the property 'AddressesPageSizeBytes'
        /// </summary>
        [Test]
        public void AddressesPageSizeBytesTest()
        {
            // TODO unit test for the property 'AddressesPageSizeBytes'
        }
        /// <summary>
        /// Test the property 'AddressesPageCacheMaxSize'
        /// </summary>
        [Test]
        public void AddressesPageCacheMaxSizeTest()
        {
            // TODO unit test for the property 'AddressesPageCacheMaxSize'
        }
        /// <summary>
        /// Test the property 'ClusterUser'
        /// </summary>
        [Test]
        public void ClusterUserTest()
        {
            // TODO unit test for the property 'ClusterUser'
        }
        /// <summary>
        /// Test the property 'ClusterPassword'
        /// </summary>
        [Test]
        public void ClusterPasswordTest()
        {
            // TODO unit test for the property 'ClusterPassword'
        }
        /// <summary>
        /// Test the property 'ClusterCallTimeout'
        /// </summary>
        [Test]
        public void ClusterCallTimeoutTest()
        {
            // TODO unit test for the property 'ClusterCallTimeout'
        }
        /// <summary>
        /// Test the property 'ClusterCallFailoverTimeout'
        /// </summary>
        [Test]
        public void ClusterCallFailoverTimeoutTest()
        {
            // TODO unit test for the property 'ClusterCallFailoverTimeout'
        }
        /// <summary>
        /// Test the property 'ClusterClientFailureCheckPeriod'
        /// </summary>
        [Test]
        public void ClusterClientFailureCheckPeriodTest()
        {
            // TODO unit test for the property 'ClusterClientFailureCheckPeriod'
        }
        /// <summary>
        /// Test the property 'ClusterNotificationAttempts'
        /// </summary>
        [Test]
        public void ClusterNotificationAttemptsTest()
        {
            // TODO unit test for the property 'ClusterNotificationAttempts'
        }
        /// <summary>
        /// Test the property 'ClusterNotificationInterval'
        /// </summary>
        [Test]
        public void ClusterNotificationIntervalTest()
        {
            // TODO unit test for the property 'ClusterNotificationInterval'
        }
        /// <summary>
        /// Test the property 'IdCacheSize'
        /// </summary>
        [Test]
        public void IdCacheSizeTest()
        {
            // TODO unit test for the property 'IdCacheSize'
        }
        /// <summary>
        /// Test the property 'ClusterConfirmationWindowSize'
        /// </summary>
        [Test]
        public void ClusterConfirmationWindowSizeTest()
        {
            // TODO unit test for the property 'ClusterConfirmationWindowSize'
        }
        /// <summary>
        /// Test the property 'ClusterConnectionTtl'
        /// </summary>
        [Test]
        public void ClusterConnectionTtlTest()
        {
            // TODO unit test for the property 'ClusterConnectionTtl'
        }
        /// <summary>
        /// Test the property 'ClusterDuplicateDetection'
        /// </summary>
        [Test]
        public void ClusterDuplicateDetectionTest()
        {
            // TODO unit test for the property 'ClusterDuplicateDetection'
        }
        /// <summary>
        /// Test the property 'ClusterInitialConnectAttempts'
        /// </summary>
        [Test]
        public void ClusterInitialConnectAttemptsTest()
        {
            // TODO unit test for the property 'ClusterInitialConnectAttempts'
        }
        /// <summary>
        /// Test the property 'ClusterMaxRetryInterval'
        /// </summary>
        [Test]
        public void ClusterMaxRetryIntervalTest()
        {
            // TODO unit test for the property 'ClusterMaxRetryInterval'
        }
        /// <summary>
        /// Test the property 'ClusterMinLargeMessageSize'
        /// </summary>
        [Test]
        public void ClusterMinLargeMessageSizeTest()
        {
            // TODO unit test for the property 'ClusterMinLargeMessageSize'
        }
        /// <summary>
        /// Test the property 'ClusterProducerWindowSize'
        /// </summary>
        [Test]
        public void ClusterProducerWindowSizeTest()
        {
            // TODO unit test for the property 'ClusterProducerWindowSize'
        }
        /// <summary>
        /// Test the property 'ClusterReconnectAttempts'
        /// </summary>
        [Test]
        public void ClusterReconnectAttemptsTest()
        {
            // TODO unit test for the property 'ClusterReconnectAttempts'
        }
        /// <summary>
        /// Test the property 'ClusterRetryInterval'
        /// </summary>
        [Test]
        public void ClusterRetryIntervalTest()
        {
            // TODO unit test for the property 'ClusterRetryInterval'
        }
        /// <summary>
        /// Test the property 'ClusterRetryIntervalMultiplier'
        /// </summary>
        [Test]
        public void ClusterRetryIntervalMultiplierTest()
        {
            // TODO unit test for the property 'ClusterRetryIntervalMultiplier'
        }

    }

}
