<?php
/**
 * ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("com.adobe.cq.screens.analytics.impl.url")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $comAdobeCqScreensAnalyticsImplUrl;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("com.adobe.cq.screens.analytics.impl.apikey")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $comAdobeCqScreensAnalyticsImplApikey;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("com.adobe.cq.screens.analytics.impl.project")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $comAdobeCqScreensAnalyticsImplProject;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     * @SerializedName("com.adobe.cq.screens.analytics.impl.environment")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     */
    protected $comAdobeCqScreensAnalyticsImplEnvironment;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("com.adobe.cq.screens.analytics.impl.sendFrequency")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $comAdobeCqScreensAnalyticsImplSendFrequency;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->comAdobeCqScreensAnalyticsImplUrl = isset($data['comAdobeCqScreensAnalyticsImplUrl']) ? $data['comAdobeCqScreensAnalyticsImplUrl'] : null;
        $this->comAdobeCqScreensAnalyticsImplApikey = isset($data['comAdobeCqScreensAnalyticsImplApikey']) ? $data['comAdobeCqScreensAnalyticsImplApikey'] : null;
        $this->comAdobeCqScreensAnalyticsImplProject = isset($data['comAdobeCqScreensAnalyticsImplProject']) ? $data['comAdobeCqScreensAnalyticsImplProject'] : null;
        $this->comAdobeCqScreensAnalyticsImplEnvironment = isset($data['comAdobeCqScreensAnalyticsImplEnvironment']) ? $data['comAdobeCqScreensAnalyticsImplEnvironment'] : null;
        $this->comAdobeCqScreensAnalyticsImplSendFrequency = isset($data['comAdobeCqScreensAnalyticsImplSendFrequency']) ? $data['comAdobeCqScreensAnalyticsImplSendFrequency'] : null;
    }

    /**
     * Gets comAdobeCqScreensAnalyticsImplUrl.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getComAdobeCqScreensAnalyticsImplUrl()
    {
        return $this->comAdobeCqScreensAnalyticsImplUrl;
    }

    /**
     * Sets comAdobeCqScreensAnalyticsImplUrl.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $comAdobeCqScreensAnalyticsImplUrl
     *
     * @return $this
     */
    public function setComAdobeCqScreensAnalyticsImplUrl(ConfigNodePropertyString $comAdobeCqScreensAnalyticsImplUrl = null)
    {
        $this->comAdobeCqScreensAnalyticsImplUrl = $comAdobeCqScreensAnalyticsImplUrl;

        return $this;
    }

    /**
     * Gets comAdobeCqScreensAnalyticsImplApikey.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getComAdobeCqScreensAnalyticsImplApikey()
    {
        return $this->comAdobeCqScreensAnalyticsImplApikey;
    }

    /**
     * Sets comAdobeCqScreensAnalyticsImplApikey.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $comAdobeCqScreensAnalyticsImplApikey
     *
     * @return $this
     */
    public function setComAdobeCqScreensAnalyticsImplApikey(ConfigNodePropertyString $comAdobeCqScreensAnalyticsImplApikey = null)
    {
        $this->comAdobeCqScreensAnalyticsImplApikey = $comAdobeCqScreensAnalyticsImplApikey;

        return $this;
    }

    /**
     * Gets comAdobeCqScreensAnalyticsImplProject.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getComAdobeCqScreensAnalyticsImplProject()
    {
        return $this->comAdobeCqScreensAnalyticsImplProject;
    }

    /**
     * Sets comAdobeCqScreensAnalyticsImplProject.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $comAdobeCqScreensAnalyticsImplProject
     *
     * @return $this
     */
    public function setComAdobeCqScreensAnalyticsImplProject(ConfigNodePropertyString $comAdobeCqScreensAnalyticsImplProject = null)
    {
        $this->comAdobeCqScreensAnalyticsImplProject = $comAdobeCqScreensAnalyticsImplProject;

        return $this;
    }

    /**
     * Gets comAdobeCqScreensAnalyticsImplEnvironment.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     */
    public function getComAdobeCqScreensAnalyticsImplEnvironment()
    {
        return $this->comAdobeCqScreensAnalyticsImplEnvironment;
    }

    /**
     * Sets comAdobeCqScreensAnalyticsImplEnvironment.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyDropDown|null $comAdobeCqScreensAnalyticsImplEnvironment
     *
     * @return $this
     */
    public function setComAdobeCqScreensAnalyticsImplEnvironment(ConfigNodePropertyDropDown $comAdobeCqScreensAnalyticsImplEnvironment = null)
    {
        $this->comAdobeCqScreensAnalyticsImplEnvironment = $comAdobeCqScreensAnalyticsImplEnvironment;

        return $this;
    }

    /**
     * Gets comAdobeCqScreensAnalyticsImplSendFrequency.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getComAdobeCqScreensAnalyticsImplSendFrequency()
    {
        return $this->comAdobeCqScreensAnalyticsImplSendFrequency;
    }

    /**
     * Sets comAdobeCqScreensAnalyticsImplSendFrequency.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $comAdobeCqScreensAnalyticsImplSendFrequency
     *
     * @return $this
     */
    public function setComAdobeCqScreensAnalyticsImplSendFrequency(ConfigNodePropertyInteger $comAdobeCqScreensAnalyticsImplSendFrequency = null)
    {
        $this->comAdobeCqScreensAnalyticsImplSendFrequency = $comAdobeCqScreensAnalyticsImplSendFrequency;

        return $this;
    }
}


