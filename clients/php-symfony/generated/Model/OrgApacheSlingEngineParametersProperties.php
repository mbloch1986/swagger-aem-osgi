<?php
/**
 * OrgApacheSlingEngineParametersProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheSlingEngineParametersProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheSlingEngineParametersProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("sling.default.parameter.encoding")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $slingDefaultParameterEncoding;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("sling.default.max.parameters")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $slingDefaultMaxParameters;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("file.location")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $fileLocation;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("file.threshold")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $fileThreshold;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("file.max")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $fileMax;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("request.max")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $requestMax;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("sling.default.parameter.checkForAdditionalContainerParameters")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $slingDefaultParameterCheckForAdditionalContainerParameters;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->slingDefaultParameterEncoding = isset($data['slingDefaultParameterEncoding']) ? $data['slingDefaultParameterEncoding'] : null;
        $this->slingDefaultMaxParameters = isset($data['slingDefaultMaxParameters']) ? $data['slingDefaultMaxParameters'] : null;
        $this->fileLocation = isset($data['fileLocation']) ? $data['fileLocation'] : null;
        $this->fileThreshold = isset($data['fileThreshold']) ? $data['fileThreshold'] : null;
        $this->fileMax = isset($data['fileMax']) ? $data['fileMax'] : null;
        $this->requestMax = isset($data['requestMax']) ? $data['requestMax'] : null;
        $this->slingDefaultParameterCheckForAdditionalContainerParameters = isset($data['slingDefaultParameterCheckForAdditionalContainerParameters']) ? $data['slingDefaultParameterCheckForAdditionalContainerParameters'] : null;
    }

    /**
     * Gets slingDefaultParameterEncoding.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSlingDefaultParameterEncoding()
    {
        return $this->slingDefaultParameterEncoding;
    }

    /**
     * Sets slingDefaultParameterEncoding.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $slingDefaultParameterEncoding
     *
     * @return $this
     */
    public function setSlingDefaultParameterEncoding(ConfigNodePropertyString $slingDefaultParameterEncoding = null)
    {
        $this->slingDefaultParameterEncoding = $slingDefaultParameterEncoding;

        return $this;
    }

    /**
     * Gets slingDefaultMaxParameters.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getSlingDefaultMaxParameters()
    {
        return $this->slingDefaultMaxParameters;
    }

    /**
     * Sets slingDefaultMaxParameters.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $slingDefaultMaxParameters
     *
     * @return $this
     */
    public function setSlingDefaultMaxParameters(ConfigNodePropertyInteger $slingDefaultMaxParameters = null)
    {
        $this->slingDefaultMaxParameters = $slingDefaultMaxParameters;

        return $this;
    }

    /**
     * Gets fileLocation.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getFileLocation()
    {
        return $this->fileLocation;
    }

    /**
     * Sets fileLocation.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $fileLocation
     *
     * @return $this
     */
    public function setFileLocation(ConfigNodePropertyString $fileLocation = null)
    {
        $this->fileLocation = $fileLocation;

        return $this;
    }

    /**
     * Gets fileThreshold.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getFileThreshold()
    {
        return $this->fileThreshold;
    }

    /**
     * Sets fileThreshold.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $fileThreshold
     *
     * @return $this
     */
    public function setFileThreshold(ConfigNodePropertyInteger $fileThreshold = null)
    {
        $this->fileThreshold = $fileThreshold;

        return $this;
    }

    /**
     * Gets fileMax.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getFileMax()
    {
        return $this->fileMax;
    }

    /**
     * Sets fileMax.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $fileMax
     *
     * @return $this
     */
    public function setFileMax(ConfigNodePropertyInteger $fileMax = null)
    {
        $this->fileMax = $fileMax;

        return $this;
    }

    /**
     * Gets requestMax.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getRequestMax()
    {
        return $this->requestMax;
    }

    /**
     * Sets requestMax.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $requestMax
     *
     * @return $this
     */
    public function setRequestMax(ConfigNodePropertyInteger $requestMax = null)
    {
        $this->requestMax = $requestMax;

        return $this;
    }

    /**
     * Gets slingDefaultParameterCheckForAdditionalContainerParameters.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getSlingDefaultParameterCheckForAdditionalContainerParameters()
    {
        return $this->slingDefaultParameterCheckForAdditionalContainerParameters;
    }

    /**
     * Sets slingDefaultParameterCheckForAdditionalContainerParameters.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $slingDefaultParameterCheckForAdditionalContainerParameters
     *
     * @return $this
     */
    public function setSlingDefaultParameterCheckForAdditionalContainerParameters(ConfigNodePropertyBoolean $slingDefaultParameterCheckForAdditionalContainerParameters = null)
    {
        $this->slingDefaultParameterCheckForAdditionalContainerParameters = $slingDefaultParameterCheckForAdditionalContainerParameters;

        return $this;
    }
}


