/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqScheduledExporterImplScheduledExporterImplProperties {
  #[serde(rename = "include.paths")]
  include_paths: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "exporter.user")]
  exporter_user: Option<::models::ConfigNodePropertyString>
}

impl ComAdobeCqScheduledExporterImplScheduledExporterImplProperties {
  pub fn new() -> ComAdobeCqScheduledExporterImplScheduledExporterImplProperties {
    ComAdobeCqScheduledExporterImplScheduledExporterImplProperties {
      include_paths: None,
      exporter_user: None
    }
  }

  pub fn set_include_paths(&mut self, include_paths: ::models::ConfigNodePropertyArray) {
    self.include_paths = Some(include_paths);
  }

  pub fn with_include_paths(mut self, include_paths: ::models::ConfigNodePropertyArray) -> ComAdobeCqScheduledExporterImplScheduledExporterImplProperties {
    self.include_paths = Some(include_paths);
    self
  }

  pub fn include_paths(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.include_paths.as_ref()
  }

  pub fn reset_include_paths(&mut self) {
    self.include_paths = None;
  }

  pub fn set_exporter_user(&mut self, exporter_user: ::models::ConfigNodePropertyString) {
    self.exporter_user = Some(exporter_user);
  }

  pub fn with_exporter_user(mut self, exporter_user: ::models::ConfigNodePropertyString) -> ComAdobeCqScheduledExporterImplScheduledExporterImplProperties {
    self.exporter_user = Some(exporter_user);
    self
  }

  pub fn exporter_user(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.exporter_user.as_ref()
  }

  pub fn reset_exporter_user(&mut self) {
    self.exporter_user = None;
  }

}



