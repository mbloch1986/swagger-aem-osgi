/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComAdobeGraniteAuthOauthImplGithu
 */
public class OASComAdobeGraniteAuthOauthImplGithu implements OAS.MappedProperties {
    /**
     * Get oauthProviderId
     * @return oauthProviderId
     */
    public OASConfigNodePropertyString oauthProviderId { get; set; }

    /**
     * Get oauthProviderGithubAuthorizationUrl
     * @return oauthProviderGithubAuthorizationUrl
     */
    public OASConfigNodePropertyString oauthProviderGithubAuthorizationUrl { get; set; }

    /**
     * Get oauthProviderGithubTokenUrl
     * @return oauthProviderGithubTokenUrl
     */
    public OASConfigNodePropertyString oauthProviderGithubTokenUrl { get; set; }

    /**
     * Get oauthProviderGithubProfileUrl
     * @return oauthProviderGithubProfileUrl
     */
    public OASConfigNodePropertyString oauthProviderGithubProfileUrl { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'oauth.provider.id' => 'oauthProviderId',
        'oauth.provider.github.authorization.url' => 'oauthProviderGithubAuthorizationUrl',
        'oauth.provider.github.token.url' => 'oauthProviderGithubTokenUrl',
        'oauth.provider.github.profile.url' => 'oauthProviderGithubProfileUrl'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComAdobeGraniteAuthOauthImplGithu getExample() {
        OASComAdobeGraniteAuthOauthImplGithu comAdobeGraniteAuthOauthImplGithubProviderImplProperties = new OASComAdobeGraniteAuthOauthImplGithu();
          comAdobeGraniteAuthOauthImplGithubProviderImplProperties.oauthProviderId = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthOauthImplGithubProviderImplProperties.oauthProviderGithubAuthorizationUrl = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthOauthImplGithubProviderImplProperties.oauthProviderGithubTokenUrl = OASConfigNodePropertyString.getExample();
          comAdobeGraniteAuthOauthImplGithubProviderImplProperties.oauthProviderGithubProfileUrl = OASConfigNodePropertyString.getExample();
        return comAdobeGraniteAuthOauthImplGithubProviderImplProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComAdobeGraniteAuthOauthImplGithu) {           
            OASComAdobeGraniteAuthOauthImplGithu comAdobeGraniteAuthOauthImplGithubProviderImplProperties = (OASComAdobeGraniteAuthOauthImplGithu) obj;
            return this.oauthProviderId == comAdobeGraniteAuthOauthImplGithubProviderImplProperties.oauthProviderId
                && this.oauthProviderGithubAuthorizationUrl == comAdobeGraniteAuthOauthImplGithubProviderImplProperties.oauthProviderGithubAuthorizationUrl
                && this.oauthProviderGithubTokenUrl == comAdobeGraniteAuthOauthImplGithubProviderImplProperties.oauthProviderGithubTokenUrl
                && this.oauthProviderGithubProfileUrl == comAdobeGraniteAuthOauthImplGithubProviderImplProperties.oauthProviderGithubProfileUrl;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (oauthProviderId == null ? 0 : System.hashCode(oauthProviderId));
        hashCode = (17 * hashCode) + (oauthProviderGithubAuthorizationUrl == null ? 0 : System.hashCode(oauthProviderGithubAuthorizationUrl));
        hashCode = (17 * hashCode) + (oauthProviderGithubTokenUrl == null ? 0 : System.hashCode(oauthProviderGithubTokenUrl));
        hashCode = (17 * hashCode) + (oauthProviderGithubProfileUrl == null ? 0 : System.hashCode(oauthProviderGithubProfileUrl));
        return hashCode;
    }
}

