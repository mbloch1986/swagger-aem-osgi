note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_FELIX_SCR_SCR_SERVICE_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    ds_loglevel: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    ds_factory_enabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    ds_delayed_keep_instances: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    ds_lock_timeout_milliseconds: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    ds_stop_timeout_milliseconds: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    ds_global_extender: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_ds_loglevel (a_name: like ds_loglevel)
        -- Set 'ds_loglevel' with 'a_name'.
      do
        ds_loglevel := a_name
      ensure
        ds_loglevel_set: ds_loglevel = a_name		
      end

    set_ds_factory_enabled (a_name: like ds_factory_enabled)
        -- Set 'ds_factory_enabled' with 'a_name'.
      do
        ds_factory_enabled := a_name
      ensure
        ds_factory_enabled_set: ds_factory_enabled = a_name		
      end

    set_ds_delayed_keep_instances (a_name: like ds_delayed_keep_instances)
        -- Set 'ds_delayed_keep_instances' with 'a_name'.
      do
        ds_delayed_keep_instances := a_name
      ensure
        ds_delayed_keep_instances_set: ds_delayed_keep_instances = a_name		
      end

    set_ds_lock_timeout_milliseconds (a_name: like ds_lock_timeout_milliseconds)
        -- Set 'ds_lock_timeout_milliseconds' with 'a_name'.
      do
        ds_lock_timeout_milliseconds := a_name
      ensure
        ds_lock_timeout_milliseconds_set: ds_lock_timeout_milliseconds = a_name		
      end

    set_ds_stop_timeout_milliseconds (a_name: like ds_stop_timeout_milliseconds)
        -- Set 'ds_stop_timeout_milliseconds' with 'a_name'.
      do
        ds_stop_timeout_milliseconds := a_name
      ensure
        ds_stop_timeout_milliseconds_set: ds_stop_timeout_milliseconds = a_name		
      end

    set_ds_global_extender (a_name: like ds_global_extender)
        -- Set 'ds_global_extender' with 'a_name'.
      do
        ds_global_extender := a_name
      ensure
        ds_global_extender_set: ds_global_extender = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_FELIX_SCR_SCR_SERVICE_PROPERTIES%N")
        if attached ds_loglevel as l_ds_loglevel then
          Result.append ("%Nds_loglevel:")
          Result.append (l_ds_loglevel.out)
          Result.append ("%N")    
        end  
        if attached ds_factory_enabled as l_ds_factory_enabled then
          Result.append ("%Nds_factory_enabled:")
          Result.append (l_ds_factory_enabled.out)
          Result.append ("%N")    
        end  
        if attached ds_delayed_keep_instances as l_ds_delayed_keep_instances then
          Result.append ("%Nds_delayed_keep_instances:")
          Result.append (l_ds_delayed_keep_instances.out)
          Result.append ("%N")    
        end  
        if attached ds_lock_timeout_milliseconds as l_ds_lock_timeout_milliseconds then
          Result.append ("%Nds_lock_timeout_milliseconds:")
          Result.append (l_ds_lock_timeout_milliseconds.out)
          Result.append ("%N")    
        end  
        if attached ds_stop_timeout_milliseconds as l_ds_stop_timeout_milliseconds then
          Result.append ("%Nds_stop_timeout_milliseconds:")
          Result.append (l_ds_stop_timeout_milliseconds.out)
          Result.append ("%N")    
        end  
        if attached ds_global_extender as l_ds_global_extender then
          Result.append ("%Nds_global_extender:")
          Result.append (l_ds_global_extender.out)
          Result.append ("%N")    
        end  
      end
end


