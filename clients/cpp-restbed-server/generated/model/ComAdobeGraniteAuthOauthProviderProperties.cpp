/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteAuthOauthProviderProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteAuthOauthProviderProperties::ComAdobeGraniteAuthOauthProviderProperties()
{
    
}

ComAdobeGraniteAuthOauthProviderProperties::~ComAdobeGraniteAuthOauthProviderProperties()
{
}

std::string ComAdobeGraniteAuthOauthProviderProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComAdobeGraniteAuthOauthProviderProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthProviderProperties::getOauthConfigId() const
{
    return m_Oauth_config_id;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthConfigId(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_config_id = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthProviderProperties::getOauthClientId() const
{
    return m_Oauth_client_id;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthClientId(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_client_id = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthProviderProperties::getOauthClientSecret() const
{
    return m_Oauth_client_secret;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthClientSecret(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_client_secret = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteAuthOauthProviderProperties::getOauthScope() const
{
    return m_Oauth_scope;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthScope(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Oauth_scope = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthProviderProperties::getOauthConfigProviderId() const
{
    return m_Oauth_config_provider_id;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthConfigProviderId(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_config_provider_id = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthProviderProperties::getOauthCreateUsers() const
{
    return m_Oauth_create_users;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthCreateUsers(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Oauth_create_users = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthProviderProperties::getOauthUseridProperty() const
{
    return m_Oauth_userid_property;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthUseridProperty(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_userid_property = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthProviderProperties::getForceStrictUsernameMatching() const
{
    return m_Force_strict_username_matching;
}
void ComAdobeGraniteAuthOauthProviderProperties::setForceStrictUsernameMatching(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Force_strict_username_matching = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthProviderProperties::getOauthEncodeUserids() const
{
    return m_Oauth_encode_userids;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthEncodeUserids(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Oauth_encode_userids = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthProviderProperties::getOauthHashUserids() const
{
    return m_Oauth_hash_userids;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthHashUserids(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Oauth_hash_userids = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthProviderProperties::getOauthCallBackUrl() const
{
    return m_Oauth_callBackUrl;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthCallBackUrl(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_callBackUrl = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthProviderProperties::getOauthAccessTokenPersist() const
{
    return m_Oauth_access_token_persist;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthAccessTokenPersist(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Oauth_access_token_persist = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthProviderProperties::getOauthAccessTokenPersistCookie() const
{
    return m_Oauth_access_token_persist_cookie;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthAccessTokenPersistCookie(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Oauth_access_token_persist_cookie = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthProviderProperties::getOauthCsrfStateProtection() const
{
    return m_Oauth_csrf_state_protection;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthCsrfStateProtection(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Oauth_csrf_state_protection = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthProviderProperties::getOauthRedirectRequestParams() const
{
    return m_Oauth_redirect_request_params;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthRedirectRequestParams(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Oauth_redirect_request_params = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteAuthOauthProviderProperties::getOauthConfigSiblingsAllow() const
{
    return m_Oauth_config_siblings_allow;
}
void ComAdobeGraniteAuthOauthProviderProperties::setOauthConfigSiblingsAllow(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Oauth_config_siblings_allow = value;
}

}
}
}
}

