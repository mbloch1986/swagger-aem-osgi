/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ConfigNodePropertyDropDown_type.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ConfigNodePropertyDropDown_type::ConfigNodePropertyDropDown_type()
{
    m_LabelsIsSet = false;
    m_ValuesIsSet = false;
    
}

ConfigNodePropertyDropDown_type::~ConfigNodePropertyDropDown_type()
{
}

void ConfigNodePropertyDropDown_type::validate()
{
    // TODO: implement validation
}

nlohmann::json ConfigNodePropertyDropDown_type::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_LabelsIsSet)
    {
        val["labels"] = ModelBase::toJson(m_Labels);
    }
    if(m_ValuesIsSet)
    {
        val["values"] = ModelBase::toJson(m_Values);
    }
    

    return val;
}

void ConfigNodePropertyDropDown_type::fromJson(nlohmann::json& val)
{
    if(val.find("labels") != val.end())
    {
        if(!val["labels"].is_null())
        {
            Object newItem;
            newItem.fromJson(val["labels"]);
            setLabels( newItem );
        }
        
    }
    if(val.find("values") != val.end())
    {
        if(!val["values"].is_null())
        {
            Object newItem;
            newItem.fromJson(val["values"]);
            setValues( newItem );
        }
        
    }
    
}


Object ConfigNodePropertyDropDown_type::getLabels() const
{
    return m_Labels;
}
void ConfigNodePropertyDropDown_type::setLabels(Object const& value)
{
    m_Labels = value;
    m_LabelsIsSet = true;
}
bool ConfigNodePropertyDropDown_type::labelsIsSet() const
{
    return m_LabelsIsSet;
}
void ConfigNodePropertyDropDown_type::unsetLabels()
{
    m_LabelsIsSet = false;
}
Object ConfigNodePropertyDropDown_type::getValues() const
{
    return m_Values;
}
void ConfigNodePropertyDropDown_type::setValues(Object const& value)
{
    m_Values = value;
    m_ValuesIsSet = true;
}
bool ConfigNodePropertyDropDown_type::valuesIsSet() const
{
    return m_ValuesIsSet;
}
void ConfigNodePropertyDropDown_type::unsetValues()
{
    m_ValuesIsSet = false;
}

}
}
}
}

