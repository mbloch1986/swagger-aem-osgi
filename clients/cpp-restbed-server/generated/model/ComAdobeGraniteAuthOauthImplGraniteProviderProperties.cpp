/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteAuthOauthImplGraniteProviderProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteAuthOauthImplGraniteProviderProperties::ComAdobeGraniteAuthOauthImplGraniteProviderProperties()
{
    
}

ComAdobeGraniteAuthOauthImplGraniteProviderProperties::~ComAdobeGraniteAuthOauthImplGraniteProviderProperties()
{
}

std::string ComAdobeGraniteAuthOauthImplGraniteProviderProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComAdobeGraniteAuthOauthImplGraniteProviderProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthImplGraniteProviderProperties::getOauthProviderId() const
{
    return m_Oauth_provider_id;
}
void ComAdobeGraniteAuthOauthImplGraniteProviderProperties::setOauthProviderId(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_provider_id = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthImplGraniteProviderProperties::getOauthProviderGraniteAuthorizationUrl() const
{
    return m_Oauth_provider_granite_authorization_url;
}
void ComAdobeGraniteAuthOauthImplGraniteProviderProperties::setOauthProviderGraniteAuthorizationUrl(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_provider_granite_authorization_url = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthImplGraniteProviderProperties::getOauthProviderGraniteTokenUrl() const
{
    return m_Oauth_provider_granite_token_url;
}
void ComAdobeGraniteAuthOauthImplGraniteProviderProperties::setOauthProviderGraniteTokenUrl(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_provider_granite_token_url = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthImplGraniteProviderProperties::getOauthProviderGraniteProfileUrl() const
{
    return m_Oauth_provider_granite_profile_url;
}
void ComAdobeGraniteAuthOauthImplGraniteProviderProperties::setOauthProviderGraniteProfileUrl(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_provider_granite_profile_url = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeGraniteAuthOauthImplGraniteProviderProperties::getOauthProviderGraniteExtendedDetailsUrls() const
{
    return m_Oauth_provider_granite_extended_details_urls;
}
void ComAdobeGraniteAuthOauthImplGraniteProviderProperties::setOauthProviderGraniteExtendedDetailsUrls(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Oauth_provider_granite_extended_details_urls = value;
}

}
}
}
}

