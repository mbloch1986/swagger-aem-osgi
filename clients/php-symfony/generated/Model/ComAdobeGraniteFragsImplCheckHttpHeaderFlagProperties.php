<?php
/**
 * ComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeGraniteFragsImplCheckHttpHeaderFlagProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("feature.name")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $featureName;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("feature.description")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $featureDescription;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("http.header.name")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $httpHeaderName;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("http.header.valuepattern")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $httpHeaderValuepattern;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->featureName = isset($data['featureName']) ? $data['featureName'] : null;
        $this->featureDescription = isset($data['featureDescription']) ? $data['featureDescription'] : null;
        $this->httpHeaderName = isset($data['httpHeaderName']) ? $data['httpHeaderName'] : null;
        $this->httpHeaderValuepattern = isset($data['httpHeaderValuepattern']) ? $data['httpHeaderValuepattern'] : null;
    }

    /**
     * Gets featureName.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getFeatureName()
    {
        return $this->featureName;
    }

    /**
     * Sets featureName.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $featureName
     *
     * @return $this
     */
    public function setFeatureName(ConfigNodePropertyString $featureName = null)
    {
        $this->featureName = $featureName;

        return $this;
    }

    /**
     * Gets featureDescription.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getFeatureDescription()
    {
        return $this->featureDescription;
    }

    /**
     * Sets featureDescription.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $featureDescription
     *
     * @return $this
     */
    public function setFeatureDescription(ConfigNodePropertyString $featureDescription = null)
    {
        $this->featureDescription = $featureDescription;

        return $this;
    }

    /**
     * Gets httpHeaderName.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getHttpHeaderName()
    {
        return $this->httpHeaderName;
    }

    /**
     * Sets httpHeaderName.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $httpHeaderName
     *
     * @return $this
     */
    public function setHttpHeaderName(ConfigNodePropertyString $httpHeaderName = null)
    {
        $this->httpHeaderName = $httpHeaderName;

        return $this;
    }

    /**
     * Gets httpHeaderValuepattern.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getHttpHeaderValuepattern()
    {
        return $this->httpHeaderValuepattern;
    }

    /**
     * Sets httpHeaderValuepattern.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $httpHeaderValuepattern
     *
     * @return $this
     */
    public function setHttpHeaderValuepattern(ConfigNodePropertyString $httpHeaderValuepattern = null)
    {
        $this->httpHeaderValuepattern = $httpHeaderValuepattern;

        return $this;
    }
}


