/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ConfigNodePropertyArray', 'model/ConfigNodePropertyBoolean', 'model/ConfigNodePropertyInteger', 'model/ConfigNodePropertyString'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ConfigNodePropertyArray'), require('./ConfigNodePropertyBoolean'), require('./ConfigNodePropertyInteger'), require('./ConfigNodePropertyString'));
  } else {
    // Browser globals (root is window)
    if (!root.NodeSwaggerAemOsgi) {
      root.NodeSwaggerAemOsgi = {};
    }
    root.NodeSwaggerAemOsgi.ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties = factory(root.NodeSwaggerAemOsgi.ApiClient, root.NodeSwaggerAemOsgi.ConfigNodePropertyArray, root.NodeSwaggerAemOsgi.ConfigNodePropertyBoolean, root.NodeSwaggerAemOsgi.ConfigNodePropertyInteger, root.NodeSwaggerAemOsgi.ConfigNodePropertyString);
  }
}(this, function(ApiClient, ConfigNodePropertyArray, ConfigNodePropertyBoolean, ConfigNodePropertyInteger, ConfigNodePropertyString) {
  'use strict';




  /**
   * The ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties model module.
   * @module model/ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties</code>.
   * @alias module:model/ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties
   * @class
   */
  var exports = function() {
    var _this = this;





















  };

  /**
   * Constructs a <code>ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties} obj Optional instance to populate.
   * @return {module:model/ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties} The populated <code>ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('message.properties')) {
        obj['message.properties'] = ConfigNodePropertyArray.constructFromObject(data['message.properties']);
      }
      if (data.hasOwnProperty('messageBoxSizeLimit')) {
        obj['messageBoxSizeLimit'] = ConfigNodePropertyInteger.constructFromObject(data['messageBoxSizeLimit']);
      }
      if (data.hasOwnProperty('messageCountLimit')) {
        obj['messageCountLimit'] = ConfigNodePropertyInteger.constructFromObject(data['messageCountLimit']);
      }
      if (data.hasOwnProperty('notifyFailure')) {
        obj['notifyFailure'] = ConfigNodePropertyBoolean.constructFromObject(data['notifyFailure']);
      }
      if (data.hasOwnProperty('failureMessageFrom')) {
        obj['failureMessageFrom'] = ConfigNodePropertyString.constructFromObject(data['failureMessageFrom']);
      }
      if (data.hasOwnProperty('failureTemplatePath')) {
        obj['failureTemplatePath'] = ConfigNodePropertyString.constructFromObject(data['failureTemplatePath']);
      }
      if (data.hasOwnProperty('maxRetries')) {
        obj['maxRetries'] = ConfigNodePropertyInteger.constructFromObject(data['maxRetries']);
      }
      if (data.hasOwnProperty('minWaitBetweenRetries')) {
        obj['minWaitBetweenRetries'] = ConfigNodePropertyInteger.constructFromObject(data['minWaitBetweenRetries']);
      }
      if (data.hasOwnProperty('countUpdatePoolSize')) {
        obj['countUpdatePoolSize'] = ConfigNodePropertyInteger.constructFromObject(data['countUpdatePoolSize']);
      }
      if (data.hasOwnProperty('inbox.path')) {
        obj['inbox.path'] = ConfigNodePropertyString.constructFromObject(data['inbox.path']);
      }
      if (data.hasOwnProperty('sentitems.path')) {
        obj['sentitems.path'] = ConfigNodePropertyString.constructFromObject(data['sentitems.path']);
      }
      if (data.hasOwnProperty('supportAttachments')) {
        obj['supportAttachments'] = ConfigNodePropertyBoolean.constructFromObject(data['supportAttachments']);
      }
      if (data.hasOwnProperty('supportGroupMessaging')) {
        obj['supportGroupMessaging'] = ConfigNodePropertyBoolean.constructFromObject(data['supportGroupMessaging']);
      }
      if (data.hasOwnProperty('maxTotalRecipients')) {
        obj['maxTotalRecipients'] = ConfigNodePropertyInteger.constructFromObject(data['maxTotalRecipients']);
      }
      if (data.hasOwnProperty('batchSize')) {
        obj['batchSize'] = ConfigNodePropertyInteger.constructFromObject(data['batchSize']);
      }
      if (data.hasOwnProperty('maxTotalAttachmentSize')) {
        obj['maxTotalAttachmentSize'] = ConfigNodePropertyInteger.constructFromObject(data['maxTotalAttachmentSize']);
      }
      if (data.hasOwnProperty('attachmentTypeBlacklist')) {
        obj['attachmentTypeBlacklist'] = ConfigNodePropertyArray.constructFromObject(data['attachmentTypeBlacklist']);
      }
      if (data.hasOwnProperty('allowedAttachmentTypes')) {
        obj['allowedAttachmentTypes'] = ConfigNodePropertyArray.constructFromObject(data['allowedAttachmentTypes']);
      }
      if (data.hasOwnProperty('serviceSelector')) {
        obj['serviceSelector'] = ConfigNodePropertyString.constructFromObject(data['serviceSelector']);
      }
      if (data.hasOwnProperty('fieldWhitelist')) {
        obj['fieldWhitelist'] = ConfigNodePropertyArray.constructFromObject(data['fieldWhitelist']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ConfigNodePropertyArray} message.properties
   */
  exports.prototype['message.properties'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} messageBoxSizeLimit
   */
  exports.prototype['messageBoxSizeLimit'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} messageCountLimit
   */
  exports.prototype['messageCountLimit'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} notifyFailure
   */
  exports.prototype['notifyFailure'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} failureMessageFrom
   */
  exports.prototype['failureMessageFrom'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} failureTemplatePath
   */
  exports.prototype['failureTemplatePath'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} maxRetries
   */
  exports.prototype['maxRetries'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} minWaitBetweenRetries
   */
  exports.prototype['minWaitBetweenRetries'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} countUpdatePoolSize
   */
  exports.prototype['countUpdatePoolSize'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} inbox.path
   */
  exports.prototype['inbox.path'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} sentitems.path
   */
  exports.prototype['sentitems.path'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} supportAttachments
   */
  exports.prototype['supportAttachments'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyBoolean} supportGroupMessaging
   */
  exports.prototype['supportGroupMessaging'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} maxTotalRecipients
   */
  exports.prototype['maxTotalRecipients'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} batchSize
   */
  exports.prototype['batchSize'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyInteger} maxTotalAttachmentSize
   */
  exports.prototype['maxTotalAttachmentSize'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} attachmentTypeBlacklist
   */
  exports.prototype['attachmentTypeBlacklist'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} allowedAttachmentTypes
   */
  exports.prototype['allowedAttachmentTypes'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyString} serviceSelector
   */
  exports.prototype['serviceSelector'] = undefined;
  /**
   * @member {module:model/ConfigNodePropertyArray} fieldWhitelist
   */
  exports.prototype['fieldWhitelist'] = undefined;



  return exports;
}));


