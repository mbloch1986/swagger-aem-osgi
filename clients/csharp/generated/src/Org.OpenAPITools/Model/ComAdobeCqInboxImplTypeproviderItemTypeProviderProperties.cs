/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties
    /// </summary>
    [DataContract]
    public partial class ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties :  IEquatable<ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties" /> class.
        /// </summary>
        /// <param name="inboxImplTypeproviderRegistrypaths">inboxImplTypeproviderRegistrypaths.</param>
        /// <param name="inboxImplTypeproviderLegacypaths">inboxImplTypeproviderLegacypaths.</param>
        /// <param name="inboxImplTypeproviderDefaulturlFailureitem">inboxImplTypeproviderDefaulturlFailureitem.</param>
        /// <param name="inboxImplTypeproviderDefaulturlWorkitem">inboxImplTypeproviderDefaulturlWorkitem.</param>
        /// <param name="inboxImplTypeproviderDefaulturlTask">inboxImplTypeproviderDefaulturlTask.</param>
        public ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties(ConfigNodePropertyArray inboxImplTypeproviderRegistrypaths = default(ConfigNodePropertyArray), ConfigNodePropertyArray inboxImplTypeproviderLegacypaths = default(ConfigNodePropertyArray), ConfigNodePropertyString inboxImplTypeproviderDefaulturlFailureitem = default(ConfigNodePropertyString), ConfigNodePropertyString inboxImplTypeproviderDefaulturlWorkitem = default(ConfigNodePropertyString), ConfigNodePropertyString inboxImplTypeproviderDefaulturlTask = default(ConfigNodePropertyString))
        {
            this.InboxImplTypeproviderRegistrypaths = inboxImplTypeproviderRegistrypaths;
            this.InboxImplTypeproviderLegacypaths = inboxImplTypeproviderLegacypaths;
            this.InboxImplTypeproviderDefaulturlFailureitem = inboxImplTypeproviderDefaulturlFailureitem;
            this.InboxImplTypeproviderDefaulturlWorkitem = inboxImplTypeproviderDefaulturlWorkitem;
            this.InboxImplTypeproviderDefaulturlTask = inboxImplTypeproviderDefaulturlTask;
        }
        
        /// <summary>
        /// Gets or Sets InboxImplTypeproviderRegistrypaths
        /// </summary>
        [DataMember(Name="inbox.impl.typeprovider.registrypaths", EmitDefaultValue=false)]
        public ConfigNodePropertyArray InboxImplTypeproviderRegistrypaths { get; set; }

        /// <summary>
        /// Gets or Sets InboxImplTypeproviderLegacypaths
        /// </summary>
        [DataMember(Name="inbox.impl.typeprovider.legacypaths", EmitDefaultValue=false)]
        public ConfigNodePropertyArray InboxImplTypeproviderLegacypaths { get; set; }

        /// <summary>
        /// Gets or Sets InboxImplTypeproviderDefaulturlFailureitem
        /// </summary>
        [DataMember(Name="inbox.impl.typeprovider.defaulturl.failureitem", EmitDefaultValue=false)]
        public ConfigNodePropertyString InboxImplTypeproviderDefaulturlFailureitem { get; set; }

        /// <summary>
        /// Gets or Sets InboxImplTypeproviderDefaulturlWorkitem
        /// </summary>
        [DataMember(Name="inbox.impl.typeprovider.defaulturl.workitem", EmitDefaultValue=false)]
        public ConfigNodePropertyString InboxImplTypeproviderDefaulturlWorkitem { get; set; }

        /// <summary>
        /// Gets or Sets InboxImplTypeproviderDefaulturlTask
        /// </summary>
        [DataMember(Name="inbox.impl.typeprovider.defaulturl.task", EmitDefaultValue=false)]
        public ConfigNodePropertyString InboxImplTypeproviderDefaulturlTask { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties {\n");
            sb.Append("  InboxImplTypeproviderRegistrypaths: ").Append(InboxImplTypeproviderRegistrypaths).Append("\n");
            sb.Append("  InboxImplTypeproviderLegacypaths: ").Append(InboxImplTypeproviderLegacypaths).Append("\n");
            sb.Append("  InboxImplTypeproviderDefaulturlFailureitem: ").Append(InboxImplTypeproviderDefaulturlFailureitem).Append("\n");
            sb.Append("  InboxImplTypeproviderDefaulturlWorkitem: ").Append(InboxImplTypeproviderDefaulturlWorkitem).Append("\n");
            sb.Append("  InboxImplTypeproviderDefaulturlTask: ").Append(InboxImplTypeproviderDefaulturlTask).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties);
        }

        /// <summary>
        /// Returns true if ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComAdobeCqInboxImplTypeproviderItemTypeProviderProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.InboxImplTypeproviderRegistrypaths == input.InboxImplTypeproviderRegistrypaths ||
                    (this.InboxImplTypeproviderRegistrypaths != null &&
                    this.InboxImplTypeproviderRegistrypaths.Equals(input.InboxImplTypeproviderRegistrypaths))
                ) && 
                (
                    this.InboxImplTypeproviderLegacypaths == input.InboxImplTypeproviderLegacypaths ||
                    (this.InboxImplTypeproviderLegacypaths != null &&
                    this.InboxImplTypeproviderLegacypaths.Equals(input.InboxImplTypeproviderLegacypaths))
                ) && 
                (
                    this.InboxImplTypeproviderDefaulturlFailureitem == input.InboxImplTypeproviderDefaulturlFailureitem ||
                    (this.InboxImplTypeproviderDefaulturlFailureitem != null &&
                    this.InboxImplTypeproviderDefaulturlFailureitem.Equals(input.InboxImplTypeproviderDefaulturlFailureitem))
                ) && 
                (
                    this.InboxImplTypeproviderDefaulturlWorkitem == input.InboxImplTypeproviderDefaulturlWorkitem ||
                    (this.InboxImplTypeproviderDefaulturlWorkitem != null &&
                    this.InboxImplTypeproviderDefaulturlWorkitem.Equals(input.InboxImplTypeproviderDefaulturlWorkitem))
                ) && 
                (
                    this.InboxImplTypeproviderDefaulturlTask == input.InboxImplTypeproviderDefaulturlTask ||
                    (this.InboxImplTypeproviderDefaulturlTask != null &&
                    this.InboxImplTypeproviderDefaulturlTask.Equals(input.InboxImplTypeproviderDefaulturlTask))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.InboxImplTypeproviderRegistrypaths != null)
                    hashCode = hashCode * 59 + this.InboxImplTypeproviderRegistrypaths.GetHashCode();
                if (this.InboxImplTypeproviderLegacypaths != null)
                    hashCode = hashCode * 59 + this.InboxImplTypeproviderLegacypaths.GetHashCode();
                if (this.InboxImplTypeproviderDefaulturlFailureitem != null)
                    hashCode = hashCode * 59 + this.InboxImplTypeproviderDefaulturlFailureitem.GetHashCode();
                if (this.InboxImplTypeproviderDefaulturlWorkitem != null)
                    hashCode = hashCode * 59 + this.InboxImplTypeproviderDefaulturlWorkitem.GetHashCode();
                if (this.InboxImplTypeproviderDefaulturlTask != null)
                    hashCode = hashCode * 59 + this.InboxImplTypeproviderDefaulturlTask.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
