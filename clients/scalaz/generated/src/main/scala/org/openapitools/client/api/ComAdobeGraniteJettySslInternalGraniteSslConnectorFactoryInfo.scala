package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo._

case class ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties],
additionalProperties: Option[String],
bundleLocation: Option[String],
serviceLocation: Option[String])

object ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfoCodecJson: CodecJson[ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo] = CodecJson.derive[ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo]
  implicit val ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfoDecoder: EntityDecoder[ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo] = jsonOf[ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo]
  implicit val ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfoEncoder: EntityEncoder[ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo] = jsonEncoderOf[ComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryInfo]
}
