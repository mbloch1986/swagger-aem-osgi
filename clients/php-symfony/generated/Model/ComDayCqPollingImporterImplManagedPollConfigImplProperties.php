<?php
/**
 * ComDayCqPollingImporterImplManagedPollConfigImplProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComDayCqPollingImporterImplManagedPollConfigImplProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComDayCqPollingImporterImplManagedPollConfigImplProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("id")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $id;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("enabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $enabled;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("reference")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $reference;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("interval")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $interval;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("expression")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $expression;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("source")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $source;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("target")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $target;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("login")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $login;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("password")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $password;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->enabled = isset($data['enabled']) ? $data['enabled'] : null;
        $this->reference = isset($data['reference']) ? $data['reference'] : null;
        $this->interval = isset($data['interval']) ? $data['interval'] : null;
        $this->expression = isset($data['expression']) ? $data['expression'] : null;
        $this->source = isset($data['source']) ? $data['source'] : null;
        $this->target = isset($data['target']) ? $data['target'] : null;
        $this->login = isset($data['login']) ? $data['login'] : null;
        $this->password = isset($data['password']) ? $data['password'] : null;
    }

    /**
     * Gets id.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $id
     *
     * @return $this
     */
    public function setId(ConfigNodePropertyString $id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets enabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * Sets enabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $enabled
     *
     * @return $this
     */
    public function setEnabled(ConfigNodePropertyBoolean $enabled = null)
    {
        $this->enabled = $enabled;

        return $this;
    }

    /**
     * Gets reference.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getReference()
    {
        return $this->reference;
    }

    /**
     * Sets reference.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $reference
     *
     * @return $this
     */
    public function setReference(ConfigNodePropertyBoolean $reference = null)
    {
        $this->reference = $reference;

        return $this;
    }

    /**
     * Gets interval.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getInterval()
    {
        return $this->interval;
    }

    /**
     * Sets interval.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $interval
     *
     * @return $this
     */
    public function setInterval(ConfigNodePropertyInteger $interval = null)
    {
        $this->interval = $interval;

        return $this;
    }

    /**
     * Gets expression.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getExpression()
    {
        return $this->expression;
    }

    /**
     * Sets expression.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $expression
     *
     * @return $this
     */
    public function setExpression(ConfigNodePropertyString $expression = null)
    {
        $this->expression = $expression;

        return $this;
    }

    /**
     * Gets source.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * Sets source.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $source
     *
     * @return $this
     */
    public function setSource(ConfigNodePropertyString $source = null)
    {
        $this->source = $source;

        return $this;
    }

    /**
     * Gets target.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getTarget()
    {
        return $this->target;
    }

    /**
     * Sets target.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $target
     *
     * @return $this
     */
    public function setTarget(ConfigNodePropertyString $target = null)
    {
        $this->target = $target;

        return $this;
    }

    /**
     * Gets login.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getLogin()
    {
        return $this->login;
    }

    /**
     * Sets login.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $login
     *
     * @return $this
     */
    public function setLogin(ConfigNodePropertyString $login = null)
    {
        $this->login = $login;

        return $this;
    }

    /**
     * Gets password.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Sets password.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $password
     *
     * @return $this
     */
    public function setPassword(ConfigNodePropertyString $password = null)
    {
        $this->password = $password;

        return $this;
    }
}


