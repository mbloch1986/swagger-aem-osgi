note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_SLING_DISTRIBUTION_AGENT_IMPL_SYNC_DISTRIBUTION_AGENT_FACTORY_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    name: detachable CONFIG_NODE_PROPERTY_STRING 
      
    title: detachable CONFIG_NODE_PROPERTY_STRING 
      
    details: detachable CONFIG_NODE_PROPERTY_STRING 
      
    enabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    service_name: detachable CONFIG_NODE_PROPERTY_STRING 
      
    log_level: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    queue_processing_enabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    passive_queues: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    package_exporter_endpoints: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    package_importer_endpoints: detachable CONFIG_NODE_PROPERTY_ARRAY 
      
    retry_strategy: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    retry_attempts: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    pull_items: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    http_conn_timeout: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    request_authorization_strategy_target: detachable CONFIG_NODE_PROPERTY_STRING 
      
    transport_secret_provider_target: detachable CONFIG_NODE_PROPERTY_STRING 
      
    package_builder_target: detachable CONFIG_NODE_PROPERTY_STRING 
      
    triggers_target: detachable CONFIG_NODE_PROPERTY_STRING 
      

feature -- Change Element  
 
    set_name (a_name: like name)
        -- Set 'name' with 'a_name'.
      do
        name := a_name
      ensure
        name_set: name = a_name		
      end

    set_title (a_name: like title)
        -- Set 'title' with 'a_name'.
      do
        title := a_name
      ensure
        title_set: title = a_name		
      end

    set_details (a_name: like details)
        -- Set 'details' with 'a_name'.
      do
        details := a_name
      ensure
        details_set: details = a_name		
      end

    set_enabled (a_name: like enabled)
        -- Set 'enabled' with 'a_name'.
      do
        enabled := a_name
      ensure
        enabled_set: enabled = a_name		
      end

    set_service_name (a_name: like service_name)
        -- Set 'service_name' with 'a_name'.
      do
        service_name := a_name
      ensure
        service_name_set: service_name = a_name		
      end

    set_log_level (a_name: like log_level)
        -- Set 'log_level' with 'a_name'.
      do
        log_level := a_name
      ensure
        log_level_set: log_level = a_name		
      end

    set_queue_processing_enabled (a_name: like queue_processing_enabled)
        -- Set 'queue_processing_enabled' with 'a_name'.
      do
        queue_processing_enabled := a_name
      ensure
        queue_processing_enabled_set: queue_processing_enabled = a_name		
      end

    set_passive_queues (a_name: like passive_queues)
        -- Set 'passive_queues' with 'a_name'.
      do
        passive_queues := a_name
      ensure
        passive_queues_set: passive_queues = a_name		
      end

    set_package_exporter_endpoints (a_name: like package_exporter_endpoints)
        -- Set 'package_exporter_endpoints' with 'a_name'.
      do
        package_exporter_endpoints := a_name
      ensure
        package_exporter_endpoints_set: package_exporter_endpoints = a_name		
      end

    set_package_importer_endpoints (a_name: like package_importer_endpoints)
        -- Set 'package_importer_endpoints' with 'a_name'.
      do
        package_importer_endpoints := a_name
      ensure
        package_importer_endpoints_set: package_importer_endpoints = a_name		
      end

    set_retry_strategy (a_name: like retry_strategy)
        -- Set 'retry_strategy' with 'a_name'.
      do
        retry_strategy := a_name
      ensure
        retry_strategy_set: retry_strategy = a_name		
      end

    set_retry_attempts (a_name: like retry_attempts)
        -- Set 'retry_attempts' with 'a_name'.
      do
        retry_attempts := a_name
      ensure
        retry_attempts_set: retry_attempts = a_name		
      end

    set_pull_items (a_name: like pull_items)
        -- Set 'pull_items' with 'a_name'.
      do
        pull_items := a_name
      ensure
        pull_items_set: pull_items = a_name		
      end

    set_http_conn_timeout (a_name: like http_conn_timeout)
        -- Set 'http_conn_timeout' with 'a_name'.
      do
        http_conn_timeout := a_name
      ensure
        http_conn_timeout_set: http_conn_timeout = a_name		
      end

    set_request_authorization_strategy_target (a_name: like request_authorization_strategy_target)
        -- Set 'request_authorization_strategy_target' with 'a_name'.
      do
        request_authorization_strategy_target := a_name
      ensure
        request_authorization_strategy_target_set: request_authorization_strategy_target = a_name		
      end

    set_transport_secret_provider_target (a_name: like transport_secret_provider_target)
        -- Set 'transport_secret_provider_target' with 'a_name'.
      do
        transport_secret_provider_target := a_name
      ensure
        transport_secret_provider_target_set: transport_secret_provider_target = a_name		
      end

    set_package_builder_target (a_name: like package_builder_target)
        -- Set 'package_builder_target' with 'a_name'.
      do
        package_builder_target := a_name
      ensure
        package_builder_target_set: package_builder_target = a_name		
      end

    set_triggers_target (a_name: like triggers_target)
        -- Set 'triggers_target' with 'a_name'.
      do
        triggers_target := a_name
      ensure
        triggers_target_set: triggers_target = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_SLING_DISTRIBUTION_AGENT_IMPL_SYNC_DISTRIBUTION_AGENT_FACTORY_PROPERTIES%N")
        if attached name as l_name then
          Result.append ("%Nname:")
          Result.append (l_name.out)
          Result.append ("%N")    
        end  
        if attached title as l_title then
          Result.append ("%Ntitle:")
          Result.append (l_title.out)
          Result.append ("%N")    
        end  
        if attached details as l_details then
          Result.append ("%Ndetails:")
          Result.append (l_details.out)
          Result.append ("%N")    
        end  
        if attached enabled as l_enabled then
          Result.append ("%Nenabled:")
          Result.append (l_enabled.out)
          Result.append ("%N")    
        end  
        if attached service_name as l_service_name then
          Result.append ("%Nservice_name:")
          Result.append (l_service_name.out)
          Result.append ("%N")    
        end  
        if attached log_level as l_log_level then
          Result.append ("%Nlog_level:")
          Result.append (l_log_level.out)
          Result.append ("%N")    
        end  
        if attached queue_processing_enabled as l_queue_processing_enabled then
          Result.append ("%Nqueue_processing_enabled:")
          Result.append (l_queue_processing_enabled.out)
          Result.append ("%N")    
        end  
        if attached passive_queues as l_passive_queues then
          Result.append ("%Npassive_queues:")
          Result.append (l_passive_queues.out)
          Result.append ("%N")    
        end  
        if attached package_exporter_endpoints as l_package_exporter_endpoints then
          Result.append ("%Npackage_exporter_endpoints:")
          Result.append (l_package_exporter_endpoints.out)
          Result.append ("%N")    
        end  
        if attached package_importer_endpoints as l_package_importer_endpoints then
          Result.append ("%Npackage_importer_endpoints:")
          Result.append (l_package_importer_endpoints.out)
          Result.append ("%N")    
        end  
        if attached retry_strategy as l_retry_strategy then
          Result.append ("%Nretry_strategy:")
          Result.append (l_retry_strategy.out)
          Result.append ("%N")    
        end  
        if attached retry_attempts as l_retry_attempts then
          Result.append ("%Nretry_attempts:")
          Result.append (l_retry_attempts.out)
          Result.append ("%N")    
        end  
        if attached pull_items as l_pull_items then
          Result.append ("%Npull_items:")
          Result.append (l_pull_items.out)
          Result.append ("%N")    
        end  
        if attached http_conn_timeout as l_http_conn_timeout then
          Result.append ("%Nhttp_conn_timeout:")
          Result.append (l_http_conn_timeout.out)
          Result.append ("%N")    
        end  
        if attached request_authorization_strategy_target as l_request_authorization_strategy_target then
          Result.append ("%Nrequest_authorization_strategy_target:")
          Result.append (l_request_authorization_strategy_target.out)
          Result.append ("%N")    
        end  
        if attached transport_secret_provider_target as l_transport_secret_provider_target then
          Result.append ("%Ntransport_secret_provider_target:")
          Result.append (l_transport_secret_provider_target.out)
          Result.append ("%N")    
        end  
        if attached package_builder_target as l_package_builder_target then
          Result.append ("%Npackage_builder_target:")
          Result.append (l_package_builder_target.out)
          Result.append ("%N")    
        end  
        if attached triggers_target as l_triggers_target then
          Result.append ("%Ntriggers_target:")
          Result.append (l_triggers_target.out)
          Result.append ("%N")    
        end  
      end
end


