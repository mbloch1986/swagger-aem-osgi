/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeGraniteCorsImplCORSPolicyImplProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeGraniteCorsImplCORSPolicyImplProperties::ComAdobeGraniteCorsImplCORSPolicyImplProperties()
{
    
}

ComAdobeGraniteCorsImplCORSPolicyImplProperties::~ComAdobeGraniteCorsImplCORSPolicyImplProperties()
{
}

std::string ComAdobeGraniteCorsImplCORSPolicyImplProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComAdobeGraniteCorsImplCORSPolicyImplProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteCorsImplCORSPolicyImplProperties::getAlloworigin() const
{
    return m_Alloworigin;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setAlloworigin(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Alloworigin = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteCorsImplCORSPolicyImplProperties::getAlloworiginregexp() const
{
    return m_Alloworiginregexp;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setAlloworiginregexp(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Alloworiginregexp = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteCorsImplCORSPolicyImplProperties::getAllowedpaths() const
{
    return m_Allowedpaths;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setAllowedpaths(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Allowedpaths = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteCorsImplCORSPolicyImplProperties::getExposedheaders() const
{
    return m_Exposedheaders;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setExposedheaders(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Exposedheaders = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeGraniteCorsImplCORSPolicyImplProperties::getMaxage() const
{
    return m_Maxage;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setMaxage(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Maxage = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteCorsImplCORSPolicyImplProperties::getSupportedheaders() const
{
    return m_Supportedheaders;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setSupportedheaders(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Supportedheaders = value;
}
std::shared_ptr<ConfigNodePropertyArray> ComAdobeGraniteCorsImplCORSPolicyImplProperties::getSupportedmethods() const
{
    return m_Supportedmethods;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setSupportedmethods(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Supportedmethods = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeGraniteCorsImplCORSPolicyImplProperties::getSupportscredentials() const
{
    return m_Supportscredentials;
}
void ComAdobeGraniteCorsImplCORSPolicyImplProperties::setSupportscredentials(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Supportscredentials = value;
}

}
}
}
}

