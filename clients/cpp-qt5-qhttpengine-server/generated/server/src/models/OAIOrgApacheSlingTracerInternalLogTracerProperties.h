/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingTracerInternalLogTracerProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingTracerInternalLogTracerProperties_H
#define OAIOrgApacheSlingTracerInternalLogTracerProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingTracerInternalLogTracerProperties: public OAIObject {
public:
    OAIOrgApacheSlingTracerInternalLogTracerProperties();
    OAIOrgApacheSlingTracerInternalLogTracerProperties(QString json);
    ~OAIOrgApacheSlingTracerInternalLogTracerProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyArray getTracerSets() const;
    void setTracerSets(const OAIConfigNodePropertyArray &tracer_sets);

    OAIConfigNodePropertyBoolean getEnabled() const;
    void setEnabled(const OAIConfigNodePropertyBoolean &enabled);

    OAIConfigNodePropertyBoolean getServletEnabled() const;
    void setServletEnabled(const OAIConfigNodePropertyBoolean &servlet_enabled);

    OAIConfigNodePropertyInteger getRecordingCacheSizeInMb() const;
    void setRecordingCacheSizeInMb(const OAIConfigNodePropertyInteger &recording_cache_size_in_mb);

    OAIConfigNodePropertyInteger getRecordingCacheDurationInSecs() const;
    void setRecordingCacheDurationInSecs(const OAIConfigNodePropertyInteger &recording_cache_duration_in_secs);

    OAIConfigNodePropertyBoolean getRecordingCompressionEnabled() const;
    void setRecordingCompressionEnabled(const OAIConfigNodePropertyBoolean &recording_compression_enabled);

    OAIConfigNodePropertyBoolean getGzipResponse() const;
    void setGzipResponse(const OAIConfigNodePropertyBoolean &gzip_response);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyArray tracer_sets;
    bool m_tracer_sets_isSet;

    OAIConfigNodePropertyBoolean enabled;
    bool m_enabled_isSet;

    OAIConfigNodePropertyBoolean servlet_enabled;
    bool m_servlet_enabled_isSet;

    OAIConfigNodePropertyInteger recording_cache_size_in_mb;
    bool m_recording_cache_size_in_mb_isSet;

    OAIConfigNodePropertyInteger recording_cache_duration_in_secs;
    bool m_recording_cache_duration_in_secs_isSet;

    OAIConfigNodePropertyBoolean recording_compression_enabled;
    bool m_recording_compression_enabled_isSet;

    OAIConfigNodePropertyBoolean gzip_response;
    bool m_gzip_response_isSet;

};

}

#endif // OAIOrgApacheSlingTracerInternalLogTracerProperties_H
