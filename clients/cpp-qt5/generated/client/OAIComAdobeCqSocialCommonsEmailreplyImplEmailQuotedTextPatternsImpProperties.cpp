/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties() {
    init();
}

OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::~OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties() {
    this->cleanup();
}

void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::init() {
    pattern_time = new OAIConfigNodePropertyString();
    m_pattern_time_isSet = false;
    pattern_newline = new OAIConfigNodePropertyString();
    m_pattern_newline_isSet = false;
    pattern_day_of_month = new OAIConfigNodePropertyString();
    m_pattern_day_of_month_isSet = false;
    pattern_month = new OAIConfigNodePropertyString();
    m_pattern_month_isSet = false;
    pattern_year = new OAIConfigNodePropertyString();
    m_pattern_year_isSet = false;
    pattern_date = new OAIConfigNodePropertyString();
    m_pattern_date_isSet = false;
    pattern_date_time = new OAIConfigNodePropertyString();
    m_pattern_date_time_isSet = false;
    pattern_email = new OAIConfigNodePropertyString();
    m_pattern_email_isSet = false;
}

void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::cleanup() {
    if(pattern_time != nullptr) { 
        delete pattern_time;
    }
    if(pattern_newline != nullptr) { 
        delete pattern_newline;
    }
    if(pattern_day_of_month != nullptr) { 
        delete pattern_day_of_month;
    }
    if(pattern_month != nullptr) { 
        delete pattern_month;
    }
    if(pattern_year != nullptr) { 
        delete pattern_year;
    }
    if(pattern_date != nullptr) { 
        delete pattern_date;
    }
    if(pattern_date_time != nullptr) { 
        delete pattern_date_time;
    }
    if(pattern_email != nullptr) { 
        delete pattern_email;
    }
}

OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties*
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&pattern_time, pJson["pattern.time"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&pattern_newline, pJson["pattern.newline"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&pattern_day_of_month, pJson["pattern.dayOfMonth"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&pattern_month, pJson["pattern.month"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&pattern_year, pJson["pattern.year"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&pattern_date, pJson["pattern.date"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&pattern_date_time, pJson["pattern.dateTime"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&pattern_email, pJson["pattern.email"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::asJsonObject() {
    QJsonObject obj;
    if((pattern_time != nullptr) && (pattern_time->isSet())){
        toJsonValue(QString("pattern.time"), pattern_time, obj, QString("OAIConfigNodePropertyString"));
    }
    if((pattern_newline != nullptr) && (pattern_newline->isSet())){
        toJsonValue(QString("pattern.newline"), pattern_newline, obj, QString("OAIConfigNodePropertyString"));
    }
    if((pattern_day_of_month != nullptr) && (pattern_day_of_month->isSet())){
        toJsonValue(QString("pattern.dayOfMonth"), pattern_day_of_month, obj, QString("OAIConfigNodePropertyString"));
    }
    if((pattern_month != nullptr) && (pattern_month->isSet())){
        toJsonValue(QString("pattern.month"), pattern_month, obj, QString("OAIConfigNodePropertyString"));
    }
    if((pattern_year != nullptr) && (pattern_year->isSet())){
        toJsonValue(QString("pattern.year"), pattern_year, obj, QString("OAIConfigNodePropertyString"));
    }
    if((pattern_date != nullptr) && (pattern_date->isSet())){
        toJsonValue(QString("pattern.date"), pattern_date, obj, QString("OAIConfigNodePropertyString"));
    }
    if((pattern_date_time != nullptr) && (pattern_date_time->isSet())){
        toJsonValue(QString("pattern.dateTime"), pattern_date_time, obj, QString("OAIConfigNodePropertyString"));
    }
    if((pattern_email != nullptr) && (pattern_email->isSet())){
        toJsonValue(QString("pattern.email"), pattern_email, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternTime() {
    return pattern_time;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternTime(OAIConfigNodePropertyString* pattern_time) {
    this->pattern_time = pattern_time;
    this->m_pattern_time_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternNewline() {
    return pattern_newline;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternNewline(OAIConfigNodePropertyString* pattern_newline) {
    this->pattern_newline = pattern_newline;
    this->m_pattern_newline_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternDayOfMonth() {
    return pattern_day_of_month;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternDayOfMonth(OAIConfigNodePropertyString* pattern_day_of_month) {
    this->pattern_day_of_month = pattern_day_of_month;
    this->m_pattern_day_of_month_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternMonth() {
    return pattern_month;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternMonth(OAIConfigNodePropertyString* pattern_month) {
    this->pattern_month = pattern_month;
    this->m_pattern_month_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternYear() {
    return pattern_year;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternYear(OAIConfigNodePropertyString* pattern_year) {
    this->pattern_year = pattern_year;
    this->m_pattern_year_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternDate() {
    return pattern_date;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternDate(OAIConfigNodePropertyString* pattern_date) {
    this->pattern_date = pattern_date;
    this->m_pattern_date_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternDateTime() {
    return pattern_date_time;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternDateTime(OAIConfigNodePropertyString* pattern_date_time) {
    this->pattern_date_time = pattern_date_time;
    this->m_pattern_date_time_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::getPatternEmail() {
    return pattern_email;
}
void
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::setPatternEmail(OAIConfigNodePropertyString* pattern_email) {
    this->pattern_email = pattern_email;
    this->m_pattern_email_isSet = true;
}


bool
OAIComAdobeCqSocialCommonsEmailreplyImplEmailQuotedTextPatternsImpProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(pattern_time != nullptr && pattern_time->isSet()){ isObjectUpdated = true; break;}
        if(pattern_newline != nullptr && pattern_newline->isSet()){ isObjectUpdated = true; break;}
        if(pattern_day_of_month != nullptr && pattern_day_of_month->isSet()){ isObjectUpdated = true; break;}
        if(pattern_month != nullptr && pattern_month->isSet()){ isObjectUpdated = true; break;}
        if(pattern_year != nullptr && pattern_year->isSet()){ isObjectUpdated = true; break;}
        if(pattern_date != nullptr && pattern_date->isSet()){ isObjectUpdated = true; break;}
        if(pattern_date_time != nullptr && pattern_date_time->isSet()){ isObjectUpdated = true; break;}
        if(pattern_email != nullptr && pattern_email->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

