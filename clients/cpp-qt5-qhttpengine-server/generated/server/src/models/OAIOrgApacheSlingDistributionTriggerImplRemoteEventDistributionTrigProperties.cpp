/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties(QString json) {
    this->fromJson(json);
}

OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties() {
    this->init();
}

OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::~OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties() {
    
}

void
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::init() {
    m_name_isSet = false;
    m_endpoint_isSet = false;
    m_transport_secret_provider_target_isSet = false;
}

void
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    
    ::OpenAPI::fromJsonValue(endpoint, json[QString("endpoint")]);
    
    ::OpenAPI::fromJsonValue(transport_secret_provider_target, json[QString("transportSecretProvider.target")]);
    
}

QString
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::asJsonObject() const {
    QJsonObject obj;
	if(name.isSet()){
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
	if(endpoint.isSet()){
        obj.insert(QString("endpoint"), ::OpenAPI::toJsonValue(endpoint));
    }
	if(transport_secret_provider_target.isSet()){
        obj.insert(QString("transportSecretProvider.target"), ::OpenAPI::toJsonValue(transport_secret_provider_target));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::getName() const {
    return name;
}
void
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::setName(const OAIConfigNodePropertyString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::getEndpoint() const {
    return endpoint;
}
void
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::setEndpoint(const OAIConfigNodePropertyString &endpoint) {
    this->endpoint = endpoint;
    this->m_endpoint_isSet = true;
}

OAIConfigNodePropertyString
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::getTransportSecretProviderTarget() const {
    return transport_secret_provider_target;
}
void
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::setTransportSecretProviderTarget(const OAIConfigNodePropertyString &transport_secret_provider_target) {
    this->transport_secret_provider_target = transport_secret_provider_target;
    this->m_transport_secret_provider_target_isSet = true;
}


bool
OAIOrgApacheSlingDistributionTriggerImplRemoteEventDistributionTrigProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(name.isSet()){ isObjectUpdated = true; break;}
    
        if(endpoint.isSet()){ isObjectUpdated = true; break;}
    
        if(transport_secret_provider_target.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

