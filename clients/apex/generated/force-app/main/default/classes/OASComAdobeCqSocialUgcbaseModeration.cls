/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComAdobeCqSocialUgcbaseModeration
 */
public class OASComAdobeCqSocialUgcbaseModeration implements OAS.MappedProperties {
    /**
     * Get watchwordsPositive
     * @return watchwordsPositive
     */
    public OASConfigNodePropertyArray watchwordsPositive { get; set; }

    /**
     * Get watchwordsNegative
     * @return watchwordsNegative
     */
    public OASConfigNodePropertyArray watchwordsNegative { get; set; }

    /**
     * Get watchwordsPath
     * @return watchwordsPath
     */
    public OASConfigNodePropertyString watchwordsPath { get; set; }

    /**
     * Get sentimentPath
     * @return sentimentPath
     */
    public OASConfigNodePropertyString sentimentPath { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'watchwords.positive' => 'watchwordsPositive',
        'watchwords.negative' => 'watchwordsNegative',
        'watchwords.path' => 'watchwordsPath',
        'sentiment.path' => 'sentimentPath'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComAdobeCqSocialUgcbaseModeration getExample() {
        OASComAdobeCqSocialUgcbaseModeration comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties = new OASComAdobeCqSocialUgcbaseModeration();
          comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.watchwordsPositive = OASConfigNodePropertyArray.getExample();
          comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.watchwordsNegative = OASConfigNodePropertyArray.getExample();
          comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.watchwordsPath = OASConfigNodePropertyString.getExample();
          comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.sentimentPath = OASConfigNodePropertyString.getExample();
        return comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComAdobeCqSocialUgcbaseModeration) {           
            OASComAdobeCqSocialUgcbaseModeration comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties = (OASComAdobeCqSocialUgcbaseModeration) obj;
            return this.watchwordsPositive == comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.watchwordsPositive
                && this.watchwordsNegative == comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.watchwordsNegative
                && this.watchwordsPath == comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.watchwordsPath
                && this.sentimentPath == comAdobeCqSocialUgcbaseModerationImplSentimentProcessProperties.sentimentPath;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (watchwordsPositive == null ? 0 : System.hashCode(watchwordsPositive));
        hashCode = (17 * hashCode) + (watchwordsNegative == null ? 0 : System.hashCode(watchwordsNegative));
        hashCode = (17 * hashCode) + (watchwordsPath == null ? 0 : System.hashCode(watchwordsPath));
        hashCode = (17 * hashCode) + (sentimentPath == null ? 0 : System.hashCode(sentimentPath));
        return hashCode;
    }
}

