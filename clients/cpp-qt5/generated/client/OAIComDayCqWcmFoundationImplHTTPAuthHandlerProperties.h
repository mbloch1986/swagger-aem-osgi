/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties.h
 *
 * 
 */

#ifndef OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties_H_
#define OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties: public OAIObject {
public:
    OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties();
    OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties(QString json);
    ~OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getPath();
    void setPath(OAIConfigNodePropertyString* path);

    OAIConfigNodePropertyBoolean* getAuthHttpNologin();
    void setAuthHttpNologin(OAIConfigNodePropertyBoolean* auth_http_nologin);

    OAIConfigNodePropertyString* getAuthHttpRealm();
    void setAuthHttpRealm(OAIConfigNodePropertyString* auth_http_realm);

    OAIConfigNodePropertyString* getAuthDefaultLoginpage();
    void setAuthDefaultLoginpage(OAIConfigNodePropertyString* auth_default_loginpage);

    OAIConfigNodePropertyArray* getAuthCredForm();
    void setAuthCredForm(OAIConfigNodePropertyArray* auth_cred_form);

    OAIConfigNodePropertyArray* getAuthCredUtf8();
    void setAuthCredUtf8(OAIConfigNodePropertyArray* auth_cred_utf8);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* path;
    bool m_path_isSet;

    OAIConfigNodePropertyBoolean* auth_http_nologin;
    bool m_auth_http_nologin_isSet;

    OAIConfigNodePropertyString* auth_http_realm;
    bool m_auth_http_realm_isSet;

    OAIConfigNodePropertyString* auth_default_loginpage;
    bool m_auth_default_loginpage_isSet;

    OAIConfigNodePropertyArray* auth_cred_form;
    bool m_auth_cred_form_isSet;

    OAIConfigNodePropertyArray* auth_cred_utf8;
    bool m_auth_cred_utf8_isSet;

};

}

#endif /* OAIComDayCqWcmFoundationImplHTTPAuthHandlerProperties_H_ */
