/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteContexthubImplContextHubImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteContexthubImplContextHubImplProperties::OAIComAdobeGraniteContexthubImplContextHubImplProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeGraniteContexthubImplContextHubImplProperties::OAIComAdobeGraniteContexthubImplContextHubImplProperties() {
    this->init();
}

OAIComAdobeGraniteContexthubImplContextHubImplProperties::~OAIComAdobeGraniteContexthubImplContextHubImplProperties() {
    
}

void
OAIComAdobeGraniteContexthubImplContextHubImplProperties::init() {
    m_com_adobe_granite_contexthub_silent_mode_isSet = false;
    m_com_adobe_granite_contexthub_show_ui_isSet = false;
}

void
OAIComAdobeGraniteContexthubImplContextHubImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeGraniteContexthubImplContextHubImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(com_adobe_granite_contexthub_silent_mode, json[QString("com.adobe.granite.contexthub.silent_mode")]);
    
    ::OpenAPI::fromJsonValue(com_adobe_granite_contexthub_show_ui, json[QString("com.adobe.granite.contexthub.show_ui")]);
    
}

QString
OAIComAdobeGraniteContexthubImplContextHubImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteContexthubImplContextHubImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(com_adobe_granite_contexthub_silent_mode.isSet()){
        obj.insert(QString("com.adobe.granite.contexthub.silent_mode"), ::OpenAPI::toJsonValue(com_adobe_granite_contexthub_silent_mode));
    }
	if(com_adobe_granite_contexthub_show_ui.isSet()){
        obj.insert(QString("com.adobe.granite.contexthub.show_ui"), ::OpenAPI::toJsonValue(com_adobe_granite_contexthub_show_ui));
    }
    return obj;
}

OAIConfigNodePropertyBoolean
OAIComAdobeGraniteContexthubImplContextHubImplProperties::getComAdobeGraniteContexthubSilentMode() const {
    return com_adobe_granite_contexthub_silent_mode;
}
void
OAIComAdobeGraniteContexthubImplContextHubImplProperties::setComAdobeGraniteContexthubSilentMode(const OAIConfigNodePropertyBoolean &com_adobe_granite_contexthub_silent_mode) {
    this->com_adobe_granite_contexthub_silent_mode = com_adobe_granite_contexthub_silent_mode;
    this->m_com_adobe_granite_contexthub_silent_mode_isSet = true;
}

OAIConfigNodePropertyBoolean
OAIComAdobeGraniteContexthubImplContextHubImplProperties::getComAdobeGraniteContexthubShowUi() const {
    return com_adobe_granite_contexthub_show_ui;
}
void
OAIComAdobeGraniteContexthubImplContextHubImplProperties::setComAdobeGraniteContexthubShowUi(const OAIConfigNodePropertyBoolean &com_adobe_granite_contexthub_show_ui) {
    this->com_adobe_granite_contexthub_show_ui = com_adobe_granite_contexthub_show_ui;
    this->m_com_adobe_granite_contexthub_show_ui_isSet = true;
}


bool
OAIComAdobeGraniteContexthubImplContextHubImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(com_adobe_granite_contexthub_silent_mode.isSet()){ isObjectUpdated = true; break;}
    
        if(com_adobe_granite_contexthub_show_ui.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

