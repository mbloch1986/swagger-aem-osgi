/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqDamCfmImplConfFeatureConfigImplProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::ComAdobeCqDamCfmImplConfFeatureConfigImplProperties()
{
    m_Dam_cfm_resourceTypesIsSet = false;
    m_Dam_cfm_referencePropertiesIsSet = false;
    
}

ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::~ComAdobeCqDamCfmImplConfFeatureConfigImplProperties()
{
}

void ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Dam_cfm_resourceTypesIsSet)
    {
        val["dam.cfm.resourceTypes"] = ModelBase::toJson(m_Dam_cfm_resourceTypes);
    }
    if(m_Dam_cfm_referencePropertiesIsSet)
    {
        val["dam.cfm.referenceProperties"] = ModelBase::toJson(m_Dam_cfm_referenceProperties);
    }
    

    return val;
}

void ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::fromJson(nlohmann::json& val)
{
    if(val.find("dam.cfm.resourceTypes") != val.end())
    {
        if(!val["dam.cfm.resourceTypes"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["dam.cfm.resourceTypes"]);
            setDamCfmResourceTypes( newItem );
        }
        
    }
    if(val.find("dam.cfm.referenceProperties") != val.end())
    {
        if(!val["dam.cfm.referenceProperties"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["dam.cfm.referenceProperties"]);
            setDamCfmReferenceProperties( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::getDamCfmResourceTypes() const
{
    return m_Dam_cfm_resourceTypes;
}
void ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::setDamCfmResourceTypes(ConfigNodePropertyArray const& value)
{
    m_Dam_cfm_resourceTypes = value;
    m_Dam_cfm_resourceTypesIsSet = true;
}
bool ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::damCfmResourceTypesIsSet() const
{
    return m_Dam_cfm_resourceTypesIsSet;
}
void ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::unsetDam_cfm_resourceTypes()
{
    m_Dam_cfm_resourceTypesIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::getDamCfmReferenceProperties() const
{
    return m_Dam_cfm_referenceProperties;
}
void ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::setDamCfmReferenceProperties(ConfigNodePropertyArray const& value)
{
    m_Dam_cfm_referenceProperties = value;
    m_Dam_cfm_referencePropertiesIsSet = true;
}
bool ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::damCfmReferencePropertiesIsSet() const
{
    return m_Dam_cfm_referencePropertiesIsSet;
}
void ComAdobeCqDamCfmImplConfFeatureConfigImplProperties::unsetDam_cfm_referenceProperties()
{
    m_Dam_cfm_referencePropertiesIsSet = false;
}

}
}
}
}

