/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqReplicationImplReplicationReceiverImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqReplicationImplReplicationReceiverImplProperties::OAIComDayCqReplicationImplReplicationReceiverImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqReplicationImplReplicationReceiverImplProperties::OAIComDayCqReplicationImplReplicationReceiverImplProperties() {
    init();
}

OAIComDayCqReplicationImplReplicationReceiverImplProperties::~OAIComDayCqReplicationImplReplicationReceiverImplProperties() {
    this->cleanup();
}

void
OAIComDayCqReplicationImplReplicationReceiverImplProperties::init() {
    receiver_tmpfile_threshold = new OAIConfigNodePropertyInteger();
    m_receiver_tmpfile_threshold_isSet = false;
    receiver_packages_use_install = new OAIConfigNodePropertyBoolean();
    m_receiver_packages_use_install_isSet = false;
}

void
OAIComDayCqReplicationImplReplicationReceiverImplProperties::cleanup() {
    if(receiver_tmpfile_threshold != nullptr) { 
        delete receiver_tmpfile_threshold;
    }
    if(receiver_packages_use_install != nullptr) { 
        delete receiver_packages_use_install;
    }
}

OAIComDayCqReplicationImplReplicationReceiverImplProperties*
OAIComDayCqReplicationImplReplicationReceiverImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqReplicationImplReplicationReceiverImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&receiver_tmpfile_threshold, pJson["receiver.tmpfile.threshold"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&receiver_packages_use_install, pJson["receiver.packages.use.install"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqReplicationImplReplicationReceiverImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqReplicationImplReplicationReceiverImplProperties::asJsonObject() {
    QJsonObject obj;
    if((receiver_tmpfile_threshold != nullptr) && (receiver_tmpfile_threshold->isSet())){
        toJsonValue(QString("receiver.tmpfile.threshold"), receiver_tmpfile_threshold, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((receiver_packages_use_install != nullptr) && (receiver_packages_use_install->isSet())){
        toJsonValue(QString("receiver.packages.use.install"), receiver_packages_use_install, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComDayCqReplicationImplReplicationReceiverImplProperties::getReceiverTmpfileThreshold() {
    return receiver_tmpfile_threshold;
}
void
OAIComDayCqReplicationImplReplicationReceiverImplProperties::setReceiverTmpfileThreshold(OAIConfigNodePropertyInteger* receiver_tmpfile_threshold) {
    this->receiver_tmpfile_threshold = receiver_tmpfile_threshold;
    this->m_receiver_tmpfile_threshold_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqReplicationImplReplicationReceiverImplProperties::getReceiverPackagesUseInstall() {
    return receiver_packages_use_install;
}
void
OAIComDayCqReplicationImplReplicationReceiverImplProperties::setReceiverPackagesUseInstall(OAIConfigNodePropertyBoolean* receiver_packages_use_install) {
    this->receiver_packages_use_install = receiver_packages_use_install;
    this->m_receiver_packages_use_install_isSet = true;
}


bool
OAIComDayCqReplicationImplReplicationReceiverImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(receiver_tmpfile_threshold != nullptr && receiver_tmpfile_threshold->isSet()){ isObjectUpdated = true; break;}
        if(receiver_packages_use_install != nullptr && receiver_packages_use_install->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

