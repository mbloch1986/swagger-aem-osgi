/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties()
{
    m_UsersIsSet = false;
    m_GroupsIsSet = false;
    
}

OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::~OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties()
{
}

void OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_UsersIsSet)
    {
        val["users"] = ModelBase::toJson(m_Users);
    }
    if(m_GroupsIsSet)
    {
        val["groups"] = ModelBase::toJson(m_Groups);
    }
    

    return val;
}

void OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::fromJson(nlohmann::json& val)
{
    if(val.find("users") != val.end())
    {
        if(!val["users"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["users"]);
            setUsers( newItem );
        }
        
    }
    if(val.find("groups") != val.end())
    {
        if(!val["groups"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["groups"]);
            setGroups( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::getUsers() const
{
    return m_Users;
}
void OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::setUsers(ConfigNodePropertyArray const& value)
{
    m_Users = value;
    m_UsersIsSet = true;
}
bool OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::usersIsSet() const
{
    return m_UsersIsSet;
}
void OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::unsetUsers()
{
    m_UsersIsSet = false;
}
ConfigNodePropertyArray OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::getGroups() const
{
    return m_Groups;
}
void OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::setGroups(ConfigNodePropertyArray const& value)
{
    m_Groups = value;
    m_GroupsIsSet = true;
}
bool OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::groupsIsSet() const
{
    return m_GroupsIsSet;
}
void OrgApacheSlingExtensionsWebconsolesecurityproviderInternalSlingWProperties::unsetGroups()
{
    m_GroupsIsSet = false;
}

}
}
}
}

