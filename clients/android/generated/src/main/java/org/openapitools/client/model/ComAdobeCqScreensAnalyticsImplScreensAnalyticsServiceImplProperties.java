/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyDropDown;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import org.openapitools.client.model.ConfigNodePropertyString;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties {
  
  @SerializedName("com.adobe.cq.screens.analytics.impl.url")
  private ConfigNodePropertyString comAdobeCqScreensAnalyticsImplUrl = null;
  @SerializedName("com.adobe.cq.screens.analytics.impl.apikey")
  private ConfigNodePropertyString comAdobeCqScreensAnalyticsImplApikey = null;
  @SerializedName("com.adobe.cq.screens.analytics.impl.project")
  private ConfigNodePropertyString comAdobeCqScreensAnalyticsImplProject = null;
  @SerializedName("com.adobe.cq.screens.analytics.impl.environment")
  private ConfigNodePropertyDropDown comAdobeCqScreensAnalyticsImplEnvironment = null;
  @SerializedName("com.adobe.cq.screens.analytics.impl.sendFrequency")
  private ConfigNodePropertyInteger comAdobeCqScreensAnalyticsImplSendFrequency = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getComAdobeCqScreensAnalyticsImplUrl() {
    return comAdobeCqScreensAnalyticsImplUrl;
  }
  public void setComAdobeCqScreensAnalyticsImplUrl(ConfigNodePropertyString comAdobeCqScreensAnalyticsImplUrl) {
    this.comAdobeCqScreensAnalyticsImplUrl = comAdobeCqScreensAnalyticsImplUrl;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getComAdobeCqScreensAnalyticsImplApikey() {
    return comAdobeCqScreensAnalyticsImplApikey;
  }
  public void setComAdobeCqScreensAnalyticsImplApikey(ConfigNodePropertyString comAdobeCqScreensAnalyticsImplApikey) {
    this.comAdobeCqScreensAnalyticsImplApikey = comAdobeCqScreensAnalyticsImplApikey;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyString getComAdobeCqScreensAnalyticsImplProject() {
    return comAdobeCqScreensAnalyticsImplProject;
  }
  public void setComAdobeCqScreensAnalyticsImplProject(ConfigNodePropertyString comAdobeCqScreensAnalyticsImplProject) {
    this.comAdobeCqScreensAnalyticsImplProject = comAdobeCqScreensAnalyticsImplProject;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getComAdobeCqScreensAnalyticsImplEnvironment() {
    return comAdobeCqScreensAnalyticsImplEnvironment;
  }
  public void setComAdobeCqScreensAnalyticsImplEnvironment(ConfigNodePropertyDropDown comAdobeCqScreensAnalyticsImplEnvironment) {
    this.comAdobeCqScreensAnalyticsImplEnvironment = comAdobeCqScreensAnalyticsImplEnvironment;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getComAdobeCqScreensAnalyticsImplSendFrequency() {
    return comAdobeCqScreensAnalyticsImplSendFrequency;
  }
  public void setComAdobeCqScreensAnalyticsImplSendFrequency(ConfigNodePropertyInteger comAdobeCqScreensAnalyticsImplSendFrequency) {
    this.comAdobeCqScreensAnalyticsImplSendFrequency = comAdobeCqScreensAnalyticsImplSendFrequency;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties = (ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties) o;
    return (this.comAdobeCqScreensAnalyticsImplUrl == null ? comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplUrl == null : this.comAdobeCqScreensAnalyticsImplUrl.equals(comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplUrl)) &&
        (this.comAdobeCqScreensAnalyticsImplApikey == null ? comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplApikey == null : this.comAdobeCqScreensAnalyticsImplApikey.equals(comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplApikey)) &&
        (this.comAdobeCqScreensAnalyticsImplProject == null ? comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplProject == null : this.comAdobeCqScreensAnalyticsImplProject.equals(comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplProject)) &&
        (this.comAdobeCqScreensAnalyticsImplEnvironment == null ? comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplEnvironment == null : this.comAdobeCqScreensAnalyticsImplEnvironment.equals(comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplEnvironment)) &&
        (this.comAdobeCqScreensAnalyticsImplSendFrequency == null ? comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplSendFrequency == null : this.comAdobeCqScreensAnalyticsImplSendFrequency.equals(comAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties.comAdobeCqScreensAnalyticsImplSendFrequency));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.comAdobeCqScreensAnalyticsImplUrl == null ? 0: this.comAdobeCqScreensAnalyticsImplUrl.hashCode());
    result = 31 * result + (this.comAdobeCqScreensAnalyticsImplApikey == null ? 0: this.comAdobeCqScreensAnalyticsImplApikey.hashCode());
    result = 31 * result + (this.comAdobeCqScreensAnalyticsImplProject == null ? 0: this.comAdobeCqScreensAnalyticsImplProject.hashCode());
    result = 31 * result + (this.comAdobeCqScreensAnalyticsImplEnvironment == null ? 0: this.comAdobeCqScreensAnalyticsImplEnvironment.hashCode());
    result = 31 * result + (this.comAdobeCqScreensAnalyticsImplSendFrequency == null ? 0: this.comAdobeCqScreensAnalyticsImplSendFrequency.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeCqScreensAnalyticsImplScreensAnalyticsServiceImplProperties {\n");
    
    sb.append("  comAdobeCqScreensAnalyticsImplUrl: ").append(comAdobeCqScreensAnalyticsImplUrl).append("\n");
    sb.append("  comAdobeCqScreensAnalyticsImplApikey: ").append(comAdobeCqScreensAnalyticsImplApikey).append("\n");
    sb.append("  comAdobeCqScreensAnalyticsImplProject: ").append(comAdobeCqScreensAnalyticsImplProject).append("\n");
    sb.append("  comAdobeCqScreensAnalyticsImplEnvironment: ").append(comAdobeCqScreensAnalyticsImplEnvironment).append("\n");
    sb.append("  comAdobeCqScreensAnalyticsImplSendFrequency: ").append(comAdobeCqScreensAnalyticsImplSendFrequency).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
