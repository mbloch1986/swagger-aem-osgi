package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo._

case class ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties])

object ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo {
  import DateTimeCodecs._

  implicit val ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfoCodecJson: CodecJson[ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo] = CodecJson.derive[ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo]
  implicit val ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfoDecoder: EntityDecoder[ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo] = jsonOf[ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo]
  implicit val ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfoEncoder: EntityEncoder[ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo] = jsonEncoderOf[ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerInfo]
}
