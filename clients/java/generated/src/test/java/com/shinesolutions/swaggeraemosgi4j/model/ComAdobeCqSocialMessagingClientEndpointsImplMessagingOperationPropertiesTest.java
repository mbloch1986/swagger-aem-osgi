/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties
 */
public class ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationPropertiesTest {
    private final ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties model = new ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties();

    /**
     * Model tests for ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties
     */
    @Test
    public void testComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties() {
        // TODO: test ComAdobeCqSocialMessagingClientEndpointsImplMessagingOperationProperties
    }

    /**
     * Test the property 'messageProperties'
     */
    @Test
    public void messagePropertiesTest() {
        // TODO: test messageProperties
    }

    /**
     * Test the property 'messageBoxSizeLimit'
     */
    @Test
    public void messageBoxSizeLimitTest() {
        // TODO: test messageBoxSizeLimit
    }

    /**
     * Test the property 'messageCountLimit'
     */
    @Test
    public void messageCountLimitTest() {
        // TODO: test messageCountLimit
    }

    /**
     * Test the property 'notifyFailure'
     */
    @Test
    public void notifyFailureTest() {
        // TODO: test notifyFailure
    }

    /**
     * Test the property 'failureMessageFrom'
     */
    @Test
    public void failureMessageFromTest() {
        // TODO: test failureMessageFrom
    }

    /**
     * Test the property 'failureTemplatePath'
     */
    @Test
    public void failureTemplatePathTest() {
        // TODO: test failureTemplatePath
    }

    /**
     * Test the property 'maxRetries'
     */
    @Test
    public void maxRetriesTest() {
        // TODO: test maxRetries
    }

    /**
     * Test the property 'minWaitBetweenRetries'
     */
    @Test
    public void minWaitBetweenRetriesTest() {
        // TODO: test minWaitBetweenRetries
    }

    /**
     * Test the property 'countUpdatePoolSize'
     */
    @Test
    public void countUpdatePoolSizeTest() {
        // TODO: test countUpdatePoolSize
    }

    /**
     * Test the property 'inboxPath'
     */
    @Test
    public void inboxPathTest() {
        // TODO: test inboxPath
    }

    /**
     * Test the property 'sentitemsPath'
     */
    @Test
    public void sentitemsPathTest() {
        // TODO: test sentitemsPath
    }

    /**
     * Test the property 'supportAttachments'
     */
    @Test
    public void supportAttachmentsTest() {
        // TODO: test supportAttachments
    }

    /**
     * Test the property 'supportGroupMessaging'
     */
    @Test
    public void supportGroupMessagingTest() {
        // TODO: test supportGroupMessaging
    }

    /**
     * Test the property 'maxTotalRecipients'
     */
    @Test
    public void maxTotalRecipientsTest() {
        // TODO: test maxTotalRecipients
    }

    /**
     * Test the property 'batchSize'
     */
    @Test
    public void batchSizeTest() {
        // TODO: test batchSize
    }

    /**
     * Test the property 'maxTotalAttachmentSize'
     */
    @Test
    public void maxTotalAttachmentSizeTest() {
        // TODO: test maxTotalAttachmentSize
    }

    /**
     * Test the property 'attachmentTypeBlacklist'
     */
    @Test
    public void attachmentTypeBlacklistTest() {
        // TODO: test attachmentTypeBlacklist
    }

    /**
     * Test the property 'allowedAttachmentTypes'
     */
    @Test
    public void allowedAttachmentTypesTest() {
        // TODO: test allowedAttachmentTypes
    }

    /**
     * Test the property 'serviceSelector'
     */
    @Test
    public void serviceSelectorTest() {
        // TODO: test serviceSelector
    }

    /**
     * Test the property 'fieldWhitelist'
     */
    @Test
    public void fieldWhitelistTest() {
        // TODO: test fieldWhitelist
    }

}
