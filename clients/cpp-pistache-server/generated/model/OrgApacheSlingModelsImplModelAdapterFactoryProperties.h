/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * OrgApacheSlingModelsImplModelAdapterFactoryProperties.h
 *
 * 
 */

#ifndef OrgApacheSlingModelsImplModelAdapterFactoryProperties_H_
#define OrgApacheSlingModelsImplModelAdapterFactoryProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingModelsImplModelAdapterFactoryProperties
    : public ModelBase
{
public:
    OrgApacheSlingModelsImplModelAdapterFactoryProperties();
    virtual ~OrgApacheSlingModelsImplModelAdapterFactoryProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingModelsImplModelAdapterFactoryProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getOsgiHttpWhiteboardListener() const;
    void setOsgiHttpWhiteboardListener(ConfigNodePropertyString const& value);
    bool osgiHttpWhiteboardListenerIsSet() const;
    void unsetOsgi_http_whiteboard_listener();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getOsgiHttpWhiteboardContextSelect() const;
    void setOsgiHttpWhiteboardContextSelect(ConfigNodePropertyString const& value);
    bool osgiHttpWhiteboardContextSelectIsSet() const;
    void unsetOsgi_http_whiteboard_context_select();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getMaxRecursionDepth() const;
    void setMaxRecursionDepth(ConfigNodePropertyInteger const& value);
    bool maxRecursionDepthIsSet() const;
    void unsetMax_recursion_depth();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getCleanupJobPeriod() const;
    void setCleanupJobPeriod(ConfigNodePropertyInteger const& value);
    bool cleanupJobPeriodIsSet() const;
    void unsetCleanup_job_period();

protected:
    ConfigNodePropertyString m_Osgi_http_whiteboard_listener;
    bool m_Osgi_http_whiteboard_listenerIsSet;
    ConfigNodePropertyString m_Osgi_http_whiteboard_context_select;
    bool m_Osgi_http_whiteboard_context_selectIsSet;
    ConfigNodePropertyInteger m_Max_recursion_depth;
    bool m_Max_recursion_depthIsSet;
    ConfigNodePropertyInteger m_Cleanup_job_period;
    bool m_Cleanup_job_periodIsSet;
};

}
}
}
}

#endif /* OrgApacheSlingModelsImplModelAdapterFactoryProperties_H_ */
