//
// ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public class ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties: JSONEncodable {
    public var cqDamConfigAnnotationPdfDocumentWidth: ConfigNodePropertyInteger?
    public var cqDamConfigAnnotationPdfDocumentHeight: ConfigNodePropertyInteger?
    public var cqDamConfigAnnotationPdfDocumentPaddingHorizontal: ConfigNodePropertyInteger?
    public var cqDamConfigAnnotationPdfDocumentPaddingVertical: ConfigNodePropertyInteger?
    public var cqDamConfigAnnotationPdfFontSize: ConfigNodePropertyInteger?
    public var cqDamConfigAnnotationPdfFontColor: ConfigNodePropertyString?
    public var cqDamConfigAnnotationPdfFontFamily: ConfigNodePropertyString?
    public var cqDamConfigAnnotationPdfFontLight: ConfigNodePropertyString?
    public var cqDamConfigAnnotationPdfMarginTextImage: ConfigNodePropertyInteger?
    public var cqDamConfigAnnotationPdfMinImageHeight: ConfigNodePropertyInteger?
    public var cqDamConfigAnnotationPdfReviewStatusWidth: ConfigNodePropertyInteger?
    public var cqDamConfigAnnotationPdfReviewStatusColorApproved: ConfigNodePropertyString?
    public var cqDamConfigAnnotationPdfReviewStatusColorRejected: ConfigNodePropertyString?
    public var cqDamConfigAnnotationPdfReviewStatusColorChangesRequested: ConfigNodePropertyString?
    public var cqDamConfigAnnotationPdfAnnotationMarkerWidth: ConfigNodePropertyInteger?
    public var cqDamConfigAnnotationPdfAssetMinheight: ConfigNodePropertyInteger?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["cq.dam.config.annotation.pdf.document.width"] = self.cqDamConfigAnnotationPdfDocumentWidth?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.document.height"] = self.cqDamConfigAnnotationPdfDocumentHeight?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.document.padding.horizontal"] = self.cqDamConfigAnnotationPdfDocumentPaddingHorizontal?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.document.padding.vertical"] = self.cqDamConfigAnnotationPdfDocumentPaddingVertical?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.font.size"] = self.cqDamConfigAnnotationPdfFontSize?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.font.color"] = self.cqDamConfigAnnotationPdfFontColor?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.font.family"] = self.cqDamConfigAnnotationPdfFontFamily?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.font.light"] = self.cqDamConfigAnnotationPdfFontLight?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.marginTextImage"] = self.cqDamConfigAnnotationPdfMarginTextImage?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.minImageHeight"] = self.cqDamConfigAnnotationPdfMinImageHeight?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.reviewStatus.width"] = self.cqDamConfigAnnotationPdfReviewStatusWidth?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.reviewStatus.color.approved"] = self.cqDamConfigAnnotationPdfReviewStatusColorApproved?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.reviewStatus.color.rejected"] = self.cqDamConfigAnnotationPdfReviewStatusColorRejected?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested"] = self.cqDamConfigAnnotationPdfReviewStatusColorChangesRequested?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.annotationMarker.width"] = self.cqDamConfigAnnotationPdfAnnotationMarkerWidth?.encodeToJSON()
        nillableDictionary["cq.dam.config.annotation.pdf.asset.minheight"] = self.cqDamConfigAnnotationPdfAssetMinheight?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
