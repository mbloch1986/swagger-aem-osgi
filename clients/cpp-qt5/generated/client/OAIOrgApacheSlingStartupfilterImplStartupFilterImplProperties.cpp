/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties() {
    init();
}

OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::~OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties() {
    this->cleanup();
}

void
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::init() {
    active_by_default = new OAIConfigNodePropertyBoolean();
    m_active_by_default_isSet = false;
    default_message = new OAIConfigNodePropertyString();
    m_default_message_isSet = false;
}

void
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::cleanup() {
    if(active_by_default != nullptr) { 
        delete active_by_default;
    }
    if(default_message != nullptr) { 
        delete default_message;
    }
}

OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties*
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&active_by_default, pJson["active.by.default"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&default_message, pJson["default.message"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::asJsonObject() {
    QJsonObject obj;
    if((active_by_default != nullptr) && (active_by_default->isSet())){
        toJsonValue(QString("active.by.default"), active_by_default, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((default_message != nullptr) && (default_message->isSet())){
        toJsonValue(QString("default.message"), default_message, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::getActiveByDefault() {
    return active_by_default;
}
void
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::setActiveByDefault(OAIConfigNodePropertyBoolean* active_by_default) {
    this->active_by_default = active_by_default;
    this->m_active_by_default_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::getDefaultMessage() {
    return default_message;
}
void
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::setDefaultMessage(OAIConfigNodePropertyString* default_message) {
    this->default_message = default_message;
    this->m_default_message_isSet = true;
}


bool
OAIOrgApacheSlingStartupfilterImplStartupFilterImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(active_by_default != nullptr && active_by_default->isSet()){ isObjectUpdated = true; break;}
        if(default_message != nullptr && default_message->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

