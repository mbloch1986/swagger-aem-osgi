/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties {
  #[serde(rename = "payload.move.white.list")]
  payload_move_white_list: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "payload.move.handle.from.workflow.process")]
  payload_move_handle_from_workflow_process: Option<::models::ConfigNodePropertyBoolean>
}

impl ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties {
  pub fn new() -> ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties {
    ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties {
      payload_move_white_list: None,
      payload_move_handle_from_workflow_process: None
    }
  }

  pub fn set_payload_move_white_list(&mut self, payload_move_white_list: ::models::ConfigNodePropertyArray) {
    self.payload_move_white_list = Some(payload_move_white_list);
  }

  pub fn with_payload_move_white_list(mut self, payload_move_white_list: ::models::ConfigNodePropertyArray) -> ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties {
    self.payload_move_white_list = Some(payload_move_white_list);
    self
  }

  pub fn payload_move_white_list(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.payload_move_white_list.as_ref()
  }

  pub fn reset_payload_move_white_list(&mut self) {
    self.payload_move_white_list = None;
  }

  pub fn set_payload_move_handle_from_workflow_process(&mut self, payload_move_handle_from_workflow_process: ::models::ConfigNodePropertyBoolean) {
    self.payload_move_handle_from_workflow_process = Some(payload_move_handle_from_workflow_process);
  }

  pub fn with_payload_move_handle_from_workflow_process(mut self, payload_move_handle_from_workflow_process: ::models::ConfigNodePropertyBoolean) -> ComAdobeGraniteWorkflowCorePayloadmapPayloadMoveListenerProperties {
    self.payload_move_handle_from_workflow_process = Some(payload_move_handle_from_workflow_process);
    self
  }

  pub fn payload_move_handle_from_workflow_process(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.payload_move_handle_from_workflow_process.as_ref()
  }

  pub fn reset_payload_move_handle_from_workflow_process(&mut self) {
    self.payload_move_handle_from_workflow_process = None;
  }

}



