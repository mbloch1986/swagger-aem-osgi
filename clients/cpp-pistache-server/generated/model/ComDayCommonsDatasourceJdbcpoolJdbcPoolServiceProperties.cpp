/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties()
{
    m_Jdbc_driver_classIsSet = false;
    m_Jdbc_connection_uriIsSet = false;
    m_Jdbc_usernameIsSet = false;
    m_Jdbc_passwordIsSet = false;
    m_Jdbc_validation_queryIsSet = false;
    m_Default_readonlyIsSet = false;
    m_Default_autocommitIsSet = false;
    m_Pool_sizeIsSet = false;
    m_Pool_max_wait_msecIsSet = false;
    m_Datasource_nameIsSet = false;
    m_Datasource_svc_propertiesIsSet = false;
    
}

ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::~ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties()
{
}

void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Jdbc_driver_classIsSet)
    {
        val["jdbc.driver.class"] = ModelBase::toJson(m_Jdbc_driver_class);
    }
    if(m_Jdbc_connection_uriIsSet)
    {
        val["jdbc.connection.uri"] = ModelBase::toJson(m_Jdbc_connection_uri);
    }
    if(m_Jdbc_usernameIsSet)
    {
        val["jdbc.username"] = ModelBase::toJson(m_Jdbc_username);
    }
    if(m_Jdbc_passwordIsSet)
    {
        val["jdbc.password"] = ModelBase::toJson(m_Jdbc_password);
    }
    if(m_Jdbc_validation_queryIsSet)
    {
        val["jdbc.validation.query"] = ModelBase::toJson(m_Jdbc_validation_query);
    }
    if(m_Default_readonlyIsSet)
    {
        val["default.readonly"] = ModelBase::toJson(m_Default_readonly);
    }
    if(m_Default_autocommitIsSet)
    {
        val["default.autocommit"] = ModelBase::toJson(m_Default_autocommit);
    }
    if(m_Pool_sizeIsSet)
    {
        val["pool.size"] = ModelBase::toJson(m_Pool_size);
    }
    if(m_Pool_max_wait_msecIsSet)
    {
        val["pool.max.wait.msec"] = ModelBase::toJson(m_Pool_max_wait_msec);
    }
    if(m_Datasource_nameIsSet)
    {
        val["datasource.name"] = ModelBase::toJson(m_Datasource_name);
    }
    if(m_Datasource_svc_propertiesIsSet)
    {
        val["datasource.svc.properties"] = ModelBase::toJson(m_Datasource_svc_properties);
    }
    

    return val;
}

void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::fromJson(nlohmann::json& val)
{
    if(val.find("jdbc.driver.class") != val.end())
    {
        if(!val["jdbc.driver.class"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jdbc.driver.class"]);
            setJdbcDriverClass( newItem );
        }
        
    }
    if(val.find("jdbc.connection.uri") != val.end())
    {
        if(!val["jdbc.connection.uri"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jdbc.connection.uri"]);
            setJdbcConnectionUri( newItem );
        }
        
    }
    if(val.find("jdbc.username") != val.end())
    {
        if(!val["jdbc.username"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jdbc.username"]);
            setJdbcUsername( newItem );
        }
        
    }
    if(val.find("jdbc.password") != val.end())
    {
        if(!val["jdbc.password"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jdbc.password"]);
            setJdbcPassword( newItem );
        }
        
    }
    if(val.find("jdbc.validation.query") != val.end())
    {
        if(!val["jdbc.validation.query"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["jdbc.validation.query"]);
            setJdbcValidationQuery( newItem );
        }
        
    }
    if(val.find("default.readonly") != val.end())
    {
        if(!val["default.readonly"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["default.readonly"]);
            setDefaultReadonly( newItem );
        }
        
    }
    if(val.find("default.autocommit") != val.end())
    {
        if(!val["default.autocommit"].is_null())
        {
            ConfigNodePropertyBoolean newItem;
            newItem.fromJson(val["default.autocommit"]);
            setDefaultAutocommit( newItem );
        }
        
    }
    if(val.find("pool.size") != val.end())
    {
        if(!val["pool.size"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["pool.size"]);
            setPoolSize( newItem );
        }
        
    }
    if(val.find("pool.max.wait.msec") != val.end())
    {
        if(!val["pool.max.wait.msec"].is_null())
        {
            ConfigNodePropertyInteger newItem;
            newItem.fromJson(val["pool.max.wait.msec"]);
            setPoolMaxWaitMsec( newItem );
        }
        
    }
    if(val.find("datasource.name") != val.end())
    {
        if(!val["datasource.name"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["datasource.name"]);
            setDatasourceName( newItem );
        }
        
    }
    if(val.find("datasource.svc.properties") != val.end())
    {
        if(!val["datasource.svc.properties"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["datasource.svc.properties"]);
            setDatasourceSvcProperties( newItem );
        }
        
    }
    
}


ConfigNodePropertyString ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getJdbcDriverClass() const
{
    return m_Jdbc_driver_class;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setJdbcDriverClass(ConfigNodePropertyString const& value)
{
    m_Jdbc_driver_class = value;
    m_Jdbc_driver_classIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::jdbcDriverClassIsSet() const
{
    return m_Jdbc_driver_classIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetJdbc_driver_class()
{
    m_Jdbc_driver_classIsSet = false;
}
ConfigNodePropertyString ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getJdbcConnectionUri() const
{
    return m_Jdbc_connection_uri;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setJdbcConnectionUri(ConfigNodePropertyString const& value)
{
    m_Jdbc_connection_uri = value;
    m_Jdbc_connection_uriIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::jdbcConnectionUriIsSet() const
{
    return m_Jdbc_connection_uriIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetJdbc_connection_uri()
{
    m_Jdbc_connection_uriIsSet = false;
}
ConfigNodePropertyString ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getJdbcUsername() const
{
    return m_Jdbc_username;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setJdbcUsername(ConfigNodePropertyString const& value)
{
    m_Jdbc_username = value;
    m_Jdbc_usernameIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::jdbcUsernameIsSet() const
{
    return m_Jdbc_usernameIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetJdbc_username()
{
    m_Jdbc_usernameIsSet = false;
}
ConfigNodePropertyString ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getJdbcPassword() const
{
    return m_Jdbc_password;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setJdbcPassword(ConfigNodePropertyString const& value)
{
    m_Jdbc_password = value;
    m_Jdbc_passwordIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::jdbcPasswordIsSet() const
{
    return m_Jdbc_passwordIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetJdbc_password()
{
    m_Jdbc_passwordIsSet = false;
}
ConfigNodePropertyString ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getJdbcValidationQuery() const
{
    return m_Jdbc_validation_query;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setJdbcValidationQuery(ConfigNodePropertyString const& value)
{
    m_Jdbc_validation_query = value;
    m_Jdbc_validation_queryIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::jdbcValidationQueryIsSet() const
{
    return m_Jdbc_validation_queryIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetJdbc_validation_query()
{
    m_Jdbc_validation_queryIsSet = false;
}
ConfigNodePropertyBoolean ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getDefaultReadonly() const
{
    return m_Default_readonly;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setDefaultReadonly(ConfigNodePropertyBoolean const& value)
{
    m_Default_readonly = value;
    m_Default_readonlyIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::defaultReadonlyIsSet() const
{
    return m_Default_readonlyIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetDefault_readonly()
{
    m_Default_readonlyIsSet = false;
}
ConfigNodePropertyBoolean ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getDefaultAutocommit() const
{
    return m_Default_autocommit;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setDefaultAutocommit(ConfigNodePropertyBoolean const& value)
{
    m_Default_autocommit = value;
    m_Default_autocommitIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::defaultAutocommitIsSet() const
{
    return m_Default_autocommitIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetDefault_autocommit()
{
    m_Default_autocommitIsSet = false;
}
ConfigNodePropertyInteger ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getPoolSize() const
{
    return m_Pool_size;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setPoolSize(ConfigNodePropertyInteger const& value)
{
    m_Pool_size = value;
    m_Pool_sizeIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::poolSizeIsSet() const
{
    return m_Pool_sizeIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetPool_size()
{
    m_Pool_sizeIsSet = false;
}
ConfigNodePropertyInteger ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getPoolMaxWaitMsec() const
{
    return m_Pool_max_wait_msec;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setPoolMaxWaitMsec(ConfigNodePropertyInteger const& value)
{
    m_Pool_max_wait_msec = value;
    m_Pool_max_wait_msecIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::poolMaxWaitMsecIsSet() const
{
    return m_Pool_max_wait_msecIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetPool_max_wait_msec()
{
    m_Pool_max_wait_msecIsSet = false;
}
ConfigNodePropertyString ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getDatasourceName() const
{
    return m_Datasource_name;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setDatasourceName(ConfigNodePropertyString const& value)
{
    m_Datasource_name = value;
    m_Datasource_nameIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::datasourceNameIsSet() const
{
    return m_Datasource_nameIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetDatasource_name()
{
    m_Datasource_nameIsSet = false;
}
ConfigNodePropertyArray ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::getDatasourceSvcProperties() const
{
    return m_Datasource_svc_properties;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::setDatasourceSvcProperties(ConfigNodePropertyArray const& value)
{
    m_Datasource_svc_properties = value;
    m_Datasource_svc_propertiesIsSet = true;
}
bool ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::datasourceSvcPropertiesIsSet() const
{
    return m_Datasource_svc_propertiesIsSet;
}
void ComDayCommonsDatasourceJdbcpoolJdbcPoolServiceProperties::unsetDatasource_svc_properties()
{
    m_Datasource_svc_propertiesIsSet = false;
}

}
}
}
}

