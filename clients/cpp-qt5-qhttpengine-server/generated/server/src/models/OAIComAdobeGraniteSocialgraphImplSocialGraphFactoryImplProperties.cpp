/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties(QString json) {
    this->fromJson(json);
}

OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties() {
    this->init();
}

OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::~OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties() {
    
}

void
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::init() {
    m_group2member_relationship_outgoing_isSet = false;
    m_group2member_excluded_outgoing_isSet = false;
    m_group2member_relationship_incoming_isSet = false;
    m_group2member_excluded_incoming_isSet = false;
}

void
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(group2member_relationship_outgoing, json[QString("group2member.relationship.outgoing")]);
    
    ::OpenAPI::fromJsonValue(group2member_excluded_outgoing, json[QString("group2member.excluded.outgoing")]);
    
    ::OpenAPI::fromJsonValue(group2member_relationship_incoming, json[QString("group2member.relationship.incoming")]);
    
    ::OpenAPI::fromJsonValue(group2member_excluded_incoming, json[QString("group2member.excluded.incoming")]);
    
}

QString
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(group2member_relationship_outgoing.isSet()){
        obj.insert(QString("group2member.relationship.outgoing"), ::OpenAPI::toJsonValue(group2member_relationship_outgoing));
    }
	if(group2member_excluded_outgoing.isSet()){
        obj.insert(QString("group2member.excluded.outgoing"), ::OpenAPI::toJsonValue(group2member_excluded_outgoing));
    }
	if(group2member_relationship_incoming.isSet()){
        obj.insert(QString("group2member.relationship.incoming"), ::OpenAPI::toJsonValue(group2member_relationship_incoming));
    }
	if(group2member_excluded_incoming.isSet()){
        obj.insert(QString("group2member.excluded.incoming"), ::OpenAPI::toJsonValue(group2member_excluded_incoming));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::getGroup2memberRelationshipOutgoing() const {
    return group2member_relationship_outgoing;
}
void
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::setGroup2memberRelationshipOutgoing(const OAIConfigNodePropertyString &group2member_relationship_outgoing) {
    this->group2member_relationship_outgoing = group2member_relationship_outgoing;
    this->m_group2member_relationship_outgoing_isSet = true;
}

OAIConfigNodePropertyArray
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::getGroup2memberExcludedOutgoing() const {
    return group2member_excluded_outgoing;
}
void
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::setGroup2memberExcludedOutgoing(const OAIConfigNodePropertyArray &group2member_excluded_outgoing) {
    this->group2member_excluded_outgoing = group2member_excluded_outgoing;
    this->m_group2member_excluded_outgoing_isSet = true;
}

OAIConfigNodePropertyString
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::getGroup2memberRelationshipIncoming() const {
    return group2member_relationship_incoming;
}
void
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::setGroup2memberRelationshipIncoming(const OAIConfigNodePropertyString &group2member_relationship_incoming) {
    this->group2member_relationship_incoming = group2member_relationship_incoming;
    this->m_group2member_relationship_incoming_isSet = true;
}

OAIConfigNodePropertyArray
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::getGroup2memberExcludedIncoming() const {
    return group2member_excluded_incoming;
}
void
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::setGroup2memberExcludedIncoming(const OAIConfigNodePropertyArray &group2member_excluded_incoming) {
    this->group2member_excluded_incoming = group2member_excluded_incoming;
    this->m_group2member_excluded_incoming_isSet = true;
}


bool
OAIComAdobeGraniteSocialgraphImplSocialGraphFactoryImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(group2member_relationship_outgoing.isSet()){ isObjectUpdated = true; break;}
    
        if(group2member_excluded_outgoing.isSet()){ isObjectUpdated = true; break;}
    
        if(group2member_relationship_incoming.isSet()){ isObjectUpdated = true; break;}
    
        if(group2member_excluded_incoming.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

