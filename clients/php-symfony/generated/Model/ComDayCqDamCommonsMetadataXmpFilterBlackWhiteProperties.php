<?php
/**
 * ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("xmp.filter.apply_whitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $xmpFilterApplyWhitelist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("xmp.filter.whitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $xmpFilterWhitelist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("xmp.filter.apply_blacklist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $xmpFilterApplyBlacklist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("xmp.filter.blacklist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $xmpFilterBlacklist;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->xmpFilterApplyWhitelist = isset($data['xmpFilterApplyWhitelist']) ? $data['xmpFilterApplyWhitelist'] : null;
        $this->xmpFilterWhitelist = isset($data['xmpFilterWhitelist']) ? $data['xmpFilterWhitelist'] : null;
        $this->xmpFilterApplyBlacklist = isset($data['xmpFilterApplyBlacklist']) ? $data['xmpFilterApplyBlacklist'] : null;
        $this->xmpFilterBlacklist = isset($data['xmpFilterBlacklist']) ? $data['xmpFilterBlacklist'] : null;
    }

    /**
     * Gets xmpFilterApplyWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getXmpFilterApplyWhitelist()
    {
        return $this->xmpFilterApplyWhitelist;
    }

    /**
     * Sets xmpFilterApplyWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $xmpFilterApplyWhitelist
     *
     * @return $this
     */
    public function setXmpFilterApplyWhitelist(ConfigNodePropertyBoolean $xmpFilterApplyWhitelist = null)
    {
        $this->xmpFilterApplyWhitelist = $xmpFilterApplyWhitelist;

        return $this;
    }

    /**
     * Gets xmpFilterWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getXmpFilterWhitelist()
    {
        return $this->xmpFilterWhitelist;
    }

    /**
     * Sets xmpFilterWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $xmpFilterWhitelist
     *
     * @return $this
     */
    public function setXmpFilterWhitelist(ConfigNodePropertyArray $xmpFilterWhitelist = null)
    {
        $this->xmpFilterWhitelist = $xmpFilterWhitelist;

        return $this;
    }

    /**
     * Gets xmpFilterApplyBlacklist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getXmpFilterApplyBlacklist()
    {
        return $this->xmpFilterApplyBlacklist;
    }

    /**
     * Sets xmpFilterApplyBlacklist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $xmpFilterApplyBlacklist
     *
     * @return $this
     */
    public function setXmpFilterApplyBlacklist(ConfigNodePropertyBoolean $xmpFilterApplyBlacklist = null)
    {
        $this->xmpFilterApplyBlacklist = $xmpFilterApplyBlacklist;

        return $this;
    }

    /**
     * Gets xmpFilterBlacklist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getXmpFilterBlacklist()
    {
        return $this->xmpFilterBlacklist;
    }

    /**
     * Sets xmpFilterBlacklist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $xmpFilterBlacklist
     *
     * @return $this
     */
    public function setXmpFilterBlacklist(ConfigNodePropertyArray $xmpFilterBlacklist = null)
    {
        $this->xmpFilterBlacklist = $xmpFilterBlacklist;

        return $this;
    }
}


