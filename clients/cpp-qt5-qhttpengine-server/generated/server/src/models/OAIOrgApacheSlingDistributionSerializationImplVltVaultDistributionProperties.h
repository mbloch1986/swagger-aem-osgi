/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties_H
#define OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties: public OAIObject {
public:
    OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties();
    OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties(QString json);
    ~OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyString getName() const;
    void setName(const OAIConfigNodePropertyString &name);

    OAIConfigNodePropertyDropDown getType() const;
    void setType(const OAIConfigNodePropertyDropDown &type);

    OAIConfigNodePropertyString getImportMode() const;
    void setImportMode(const OAIConfigNodePropertyString &import_mode);

    OAIConfigNodePropertyString getAclHandling() const;
    void setAclHandling(const OAIConfigNodePropertyString &acl_handling);

    OAIConfigNodePropertyString getPackageRoots() const;
    void setPackageRoots(const OAIConfigNodePropertyString &package_roots);

    OAIConfigNodePropertyArray getPackageFilters() const;
    void setPackageFilters(const OAIConfigNodePropertyArray &package_filters);

    OAIConfigNodePropertyArray getPropertyFilters() const;
    void setPropertyFilters(const OAIConfigNodePropertyArray &property_filters);

    OAIConfigNodePropertyString getTempFsFolder() const;
    void setTempFsFolder(const OAIConfigNodePropertyString &temp_fs_folder);

    OAIConfigNodePropertyBoolean getUseBinaryReferences() const;
    void setUseBinaryReferences(const OAIConfigNodePropertyBoolean &use_binary_references);

    OAIConfigNodePropertyInteger getAutoSaveThreshold() const;
    void setAutoSaveThreshold(const OAIConfigNodePropertyInteger &auto_save_threshold);

    OAIConfigNodePropertyInteger getCleanupDelay() const;
    void setCleanupDelay(const OAIConfigNodePropertyInteger &cleanup_delay);

    OAIConfigNodePropertyInteger getFileThreshold() const;
    void setFileThreshold(const OAIConfigNodePropertyInteger &file_threshold);

    OAIConfigNodePropertyDropDown getMegaBytes() const;
    void setMegaBytes(const OAIConfigNodePropertyDropDown &mega_bytes);

    OAIConfigNodePropertyBoolean getUseOffHeapMemory() const;
    void setUseOffHeapMemory(const OAIConfigNodePropertyBoolean &use_off_heap_memory);

    OAIConfigNodePropertyDropDown getDigestAlgorithm() const;
    void setDigestAlgorithm(const OAIConfigNodePropertyDropDown &digest_algorithm);

    OAIConfigNodePropertyInteger getMonitoringQueueSize() const;
    void setMonitoringQueueSize(const OAIConfigNodePropertyInteger &monitoring_queue_size);

    OAIConfigNodePropertyArray getPathsMapping() const;
    void setPathsMapping(const OAIConfigNodePropertyArray &paths_mapping);

    OAIConfigNodePropertyBoolean getStrictImport() const;
    void setStrictImport(const OAIConfigNodePropertyBoolean &strict_import);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyString name;
    bool m_name_isSet;

    OAIConfigNodePropertyDropDown type;
    bool m_type_isSet;

    OAIConfigNodePropertyString import_mode;
    bool m_import_mode_isSet;

    OAIConfigNodePropertyString acl_handling;
    bool m_acl_handling_isSet;

    OAIConfigNodePropertyString package_roots;
    bool m_package_roots_isSet;

    OAIConfigNodePropertyArray package_filters;
    bool m_package_filters_isSet;

    OAIConfigNodePropertyArray property_filters;
    bool m_property_filters_isSet;

    OAIConfigNodePropertyString temp_fs_folder;
    bool m_temp_fs_folder_isSet;

    OAIConfigNodePropertyBoolean use_binary_references;
    bool m_use_binary_references_isSet;

    OAIConfigNodePropertyInteger auto_save_threshold;
    bool m_auto_save_threshold_isSet;

    OAIConfigNodePropertyInteger cleanup_delay;
    bool m_cleanup_delay_isSet;

    OAIConfigNodePropertyInteger file_threshold;
    bool m_file_threshold_isSet;

    OAIConfigNodePropertyDropDown mega_bytes;
    bool m_mega_bytes_isSet;

    OAIConfigNodePropertyBoolean use_off_heap_memory;
    bool m_use_off_heap_memory_isSet;

    OAIConfigNodePropertyDropDown digest_algorithm;
    bool m_digest_algorithm_isSet;

    OAIConfigNodePropertyInteger monitoring_queue_size;
    bool m_monitoring_queue_size_isSet;

    OAIConfigNodePropertyArray paths_mapping;
    bool m_paths_mapping_isSet;

    OAIConfigNodePropertyBoolean strict_import;
    bool m_strict_import_isSet;

};

}

#endif // OAIOrgApacheSlingDistributionSerializationImplVltVaultDistributionProperties_H
