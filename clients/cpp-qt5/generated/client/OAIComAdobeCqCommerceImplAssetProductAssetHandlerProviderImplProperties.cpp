/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties() {
    init();
}

OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::~OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties() {
    this->cleanup();
}

void
OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::init() {
    cq_commerce_asset_handler_fallback = new OAIConfigNodePropertyString();
    m_cq_commerce_asset_handler_fallback_isSet = false;
}

void
OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::cleanup() {
    if(cq_commerce_asset_handler_fallback != nullptr) { 
        delete cq_commerce_asset_handler_fallback;
    }
}

OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties*
OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&cq_commerce_asset_handler_fallback, pJson["cq.commerce.asset.handler.fallback"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::asJsonObject() {
    QJsonObject obj;
    if((cq_commerce_asset_handler_fallback != nullptr) && (cq_commerce_asset_handler_fallback->isSet())){
        toJsonValue(QString("cq.commerce.asset.handler.fallback"), cq_commerce_asset_handler_fallback, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::getCqCommerceAssetHandlerFallback() {
    return cq_commerce_asset_handler_fallback;
}
void
OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::setCqCommerceAssetHandlerFallback(OAIConfigNodePropertyString* cq_commerce_asset_handler_fallback) {
    this->cq_commerce_asset_handler_fallback = cq_commerce_asset_handler_fallback;
    this->m_cq_commerce_asset_handler_fallback_isSet = true;
}


bool
OAIComAdobeCqCommerceImplAssetProductAssetHandlerProviderImplProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(cq_commerce_asset_handler_fallback != nullptr && cq_commerce_asset_handler_fallback->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

