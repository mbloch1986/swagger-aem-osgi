/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyBoolean;
import org.openapitools.client.model.ConfigNodePropertyDropDown;
import org.openapitools.client.model.ConfigNodePropertyInteger;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties {
  
  @SerializedName("showPlaceholder")
  private ConfigNodePropertyBoolean showPlaceholder = null;
  @SerializedName("maximumCacheEntries")
  private ConfigNodePropertyInteger maximumCacheEntries = null;
  @SerializedName("af.scripting.compatversion")
  private ConfigNodePropertyDropDown afScriptingCompatversion = null;
  @SerializedName("makeFileNameUnique")
  private ConfigNodePropertyBoolean makeFileNameUnique = null;
  @SerializedName("generatingCompliantData")
  private ConfigNodePropertyBoolean generatingCompliantData = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getShowPlaceholder() {
    return showPlaceholder;
  }
  public void setShowPlaceholder(ConfigNodePropertyBoolean showPlaceholder) {
    this.showPlaceholder = showPlaceholder;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getMaximumCacheEntries() {
    return maximumCacheEntries;
  }
  public void setMaximumCacheEntries(ConfigNodePropertyInteger maximumCacheEntries) {
    this.maximumCacheEntries = maximumCacheEntries;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyDropDown getAfScriptingCompatversion() {
    return afScriptingCompatversion;
  }
  public void setAfScriptingCompatversion(ConfigNodePropertyDropDown afScriptingCompatversion) {
    this.afScriptingCompatversion = afScriptingCompatversion;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getMakeFileNameUnique() {
    return makeFileNameUnique;
  }
  public void setMakeFileNameUnique(ConfigNodePropertyBoolean makeFileNameUnique) {
    this.makeFileNameUnique = makeFileNameUnique;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyBoolean getGeneratingCompliantData() {
    return generatingCompliantData;
  }
  public void setGeneratingCompliantData(ConfigNodePropertyBoolean generatingCompliantData) {
    this.generatingCompliantData = generatingCompliantData;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties = (AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties) o;
    return (this.showPlaceholder == null ? adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.showPlaceholder == null : this.showPlaceholder.equals(adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.showPlaceholder)) &&
        (this.maximumCacheEntries == null ? adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.maximumCacheEntries == null : this.maximumCacheEntries.equals(adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.maximumCacheEntries)) &&
        (this.afScriptingCompatversion == null ? adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.afScriptingCompatversion == null : this.afScriptingCompatversion.equals(adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.afScriptingCompatversion)) &&
        (this.makeFileNameUnique == null ? adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.makeFileNameUnique == null : this.makeFileNameUnique.equals(adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.makeFileNameUnique)) &&
        (this.generatingCompliantData == null ? adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.generatingCompliantData == null : this.generatingCompliantData.equals(adaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties.generatingCompliantData));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.showPlaceholder == null ? 0: this.showPlaceholder.hashCode());
    result = 31 * result + (this.maximumCacheEntries == null ? 0: this.maximumCacheEntries.hashCode());
    result = 31 * result + (this.afScriptingCompatversion == null ? 0: this.afScriptingCompatversion.hashCode());
    result = 31 * result + (this.makeFileNameUnique == null ? 0: this.makeFileNameUnique.hashCode());
    result = 31 * result + (this.generatingCompliantData == null ? 0: this.generatingCompliantData.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdaptiveFormAndInteractiveCommunicationWebChannelConfigurationProperties {\n");
    
    sb.append("  showPlaceholder: ").append(showPlaceholder).append("\n");
    sb.append("  maximumCacheEntries: ").append(maximumCacheEntries).append("\n");
    sb.append("  afScriptingCompatversion: ").append(afScriptingCompatversion).append("\n");
    sb.append("  makeFileNameUnique: ").append(makeFileNameUnique).append("\n");
    sb.append("  generatingCompliantData: ").append(generatingCompliantData).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
