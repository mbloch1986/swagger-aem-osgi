/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties() {
    init();
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::~OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties() {
    this->cleanup();
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::init() {
    jaas_ranking = new OAIConfigNodePropertyInteger();
    m_jaas_ranking_isSet = false;
    jaas_control_flag = new OAIConfigNodePropertyString();
    m_jaas_control_flag_isSet = false;
    jaas_realm_name = new OAIConfigNodePropertyString();
    m_jaas_realm_name_isSet = false;
    idp_name = new OAIConfigNodePropertyString();
    m_idp_name_isSet = false;
    sync_handler_name = new OAIConfigNodePropertyString();
    m_sync_handler_name_isSet = false;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::cleanup() {
    if(jaas_ranking != nullptr) { 
        delete jaas_ranking;
    }
    if(jaas_control_flag != nullptr) { 
        delete jaas_control_flag;
    }
    if(jaas_realm_name != nullptr) { 
        delete jaas_realm_name;
    }
    if(idp_name != nullptr) { 
        delete idp_name;
    }
    if(sync_handler_name != nullptr) { 
        delete sync_handler_name;
    }
}

OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&jaas_ranking, pJson["jaas.ranking"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&jaas_control_flag, pJson["jaas.controlFlag"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&jaas_realm_name, pJson["jaas.realmName"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&idp_name, pJson["idp.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&sync_handler_name, pJson["sync.handlerName"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
}

QString
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::asJsonObject() {
    QJsonObject obj;
    if((jaas_ranking != nullptr) && (jaas_ranking->isSet())){
        toJsonValue(QString("jaas.ranking"), jaas_ranking, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((jaas_control_flag != nullptr) && (jaas_control_flag->isSet())){
        toJsonValue(QString("jaas.controlFlag"), jaas_control_flag, obj, QString("OAIConfigNodePropertyString"));
    }
    if((jaas_realm_name != nullptr) && (jaas_realm_name->isSet())){
        toJsonValue(QString("jaas.realmName"), jaas_realm_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((idp_name != nullptr) && (idp_name->isSet())){
        toJsonValue(QString("idp.name"), idp_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((sync_handler_name != nullptr) && (sync_handler_name->isSet())){
        toJsonValue(QString("sync.handlerName"), sync_handler_name, obj, QString("OAIConfigNodePropertyString"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getJaasRanking() {
    return jaas_ranking;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setJaasRanking(OAIConfigNodePropertyInteger* jaas_ranking) {
    this->jaas_ranking = jaas_ranking;
    this->m_jaas_ranking_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getJaasControlFlag() {
    return jaas_control_flag;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setJaasControlFlag(OAIConfigNodePropertyString* jaas_control_flag) {
    this->jaas_control_flag = jaas_control_flag;
    this->m_jaas_control_flag_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getJaasRealmName() {
    return jaas_realm_name;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setJaasRealmName(OAIConfigNodePropertyString* jaas_realm_name) {
    this->jaas_realm_name = jaas_realm_name;
    this->m_jaas_realm_name_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getIdpName() {
    return idp_name;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setIdpName(OAIConfigNodePropertyString* idp_name) {
    this->idp_name = idp_name;
    this->m_idp_name_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::getSyncHandlerName() {
    return sync_handler_name;
}
void
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::setSyncHandlerName(OAIConfigNodePropertyString* sync_handler_name) {
    this->sync_handler_name = sync_handler_name;
    this->m_sync_handler_name_isSet = true;
}


bool
OAIOrgApacheJackrabbitOakSpiSecurityAuthenticationExternalImplExProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(jaas_ranking != nullptr && jaas_ranking->isSet()){ isObjectUpdated = true; break;}
        if(jaas_control_flag != nullptr && jaas_control_flag->isSet()){ isObjectUpdated = true; break;}
        if(jaas_realm_name != nullptr && jaas_realm_name->isSet()){ isObjectUpdated = true; break;}
        if(idp_name != nullptr && idp_name->isSet()){ isObjectUpdated = true; break;}
        if(sync_handler_name != nullptr && sync_handler_name->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

