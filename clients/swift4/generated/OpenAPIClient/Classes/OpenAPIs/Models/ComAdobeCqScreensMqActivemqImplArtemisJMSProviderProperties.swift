//
// ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



public struct ComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties: Codable {

    public var serviceRanking: ConfigNodePropertyInteger?
    public var globalSize: ConfigNodePropertyInteger?
    public var maxDiskUsage: ConfigNodePropertyInteger?
    public var persistenceEnabled: ConfigNodePropertyBoolean?
    public var threadPoolMaxSize: ConfigNodePropertyInteger?
    public var scheduledThreadPoolMaxSize: ConfigNodePropertyInteger?
    public var gracefulShutdownTimeout: ConfigNodePropertyInteger?
    public var queues: ConfigNodePropertyArray?
    public var topics: ConfigNodePropertyArray?
    public var addressesMaxDeliveryAttempts: ConfigNodePropertyInteger?
    public var addressesExpiryDelay: ConfigNodePropertyInteger?
    public var addressesAddressFullMessagePolicy: ConfigNodePropertyDropDown?
    public var addressesMaxSizeBytes: ConfigNodePropertyInteger?
    public var addressesPageSizeBytes: ConfigNodePropertyInteger?
    public var addressesPageCacheMaxSize: ConfigNodePropertyInteger?
    public var clusterUser: ConfigNodePropertyString?
    public var clusterPassword: ConfigNodePropertyString?
    public var clusterCallTimeout: ConfigNodePropertyInteger?
    public var clusterCallFailoverTimeout: ConfigNodePropertyInteger?
    public var clusterClientFailureCheckPeriod: ConfigNodePropertyInteger?
    public var clusterNotificationAttempts: ConfigNodePropertyInteger?
    public var clusterNotificationInterval: ConfigNodePropertyInteger?
    public var idCacheSize: ConfigNodePropertyInteger?
    public var clusterConfirmationWindowSize: ConfigNodePropertyInteger?
    public var clusterConnectionTtl: ConfigNodePropertyInteger?
    public var clusterDuplicateDetection: ConfigNodePropertyBoolean?
    public var clusterInitialConnectAttempts: ConfigNodePropertyInteger?
    public var clusterMaxRetryInterval: ConfigNodePropertyInteger?
    public var clusterMinLargeMessageSize: ConfigNodePropertyInteger?
    public var clusterProducerWindowSize: ConfigNodePropertyInteger?
    public var clusterReconnectAttempts: ConfigNodePropertyInteger?
    public var clusterRetryInterval: ConfigNodePropertyInteger?
    public var clusterRetryIntervalMultiplier: ConfigNodePropertyFloat?

    public init(serviceRanking: ConfigNodePropertyInteger?, globalSize: ConfigNodePropertyInteger?, maxDiskUsage: ConfigNodePropertyInteger?, persistenceEnabled: ConfigNodePropertyBoolean?, threadPoolMaxSize: ConfigNodePropertyInteger?, scheduledThreadPoolMaxSize: ConfigNodePropertyInteger?, gracefulShutdownTimeout: ConfigNodePropertyInteger?, queues: ConfigNodePropertyArray?, topics: ConfigNodePropertyArray?, addressesMaxDeliveryAttempts: ConfigNodePropertyInteger?, addressesExpiryDelay: ConfigNodePropertyInteger?, addressesAddressFullMessagePolicy: ConfigNodePropertyDropDown?, addressesMaxSizeBytes: ConfigNodePropertyInteger?, addressesPageSizeBytes: ConfigNodePropertyInteger?, addressesPageCacheMaxSize: ConfigNodePropertyInteger?, clusterUser: ConfigNodePropertyString?, clusterPassword: ConfigNodePropertyString?, clusterCallTimeout: ConfigNodePropertyInteger?, clusterCallFailoverTimeout: ConfigNodePropertyInteger?, clusterClientFailureCheckPeriod: ConfigNodePropertyInteger?, clusterNotificationAttempts: ConfigNodePropertyInteger?, clusterNotificationInterval: ConfigNodePropertyInteger?, idCacheSize: ConfigNodePropertyInteger?, clusterConfirmationWindowSize: ConfigNodePropertyInteger?, clusterConnectionTtl: ConfigNodePropertyInteger?, clusterDuplicateDetection: ConfigNodePropertyBoolean?, clusterInitialConnectAttempts: ConfigNodePropertyInteger?, clusterMaxRetryInterval: ConfigNodePropertyInteger?, clusterMinLargeMessageSize: ConfigNodePropertyInteger?, clusterProducerWindowSize: ConfigNodePropertyInteger?, clusterReconnectAttempts: ConfigNodePropertyInteger?, clusterRetryInterval: ConfigNodePropertyInteger?, clusterRetryIntervalMultiplier: ConfigNodePropertyFloat?) {
        self.serviceRanking = serviceRanking
        self.globalSize = globalSize
        self.maxDiskUsage = maxDiskUsage
        self.persistenceEnabled = persistenceEnabled
        self.threadPoolMaxSize = threadPoolMaxSize
        self.scheduledThreadPoolMaxSize = scheduledThreadPoolMaxSize
        self.gracefulShutdownTimeout = gracefulShutdownTimeout
        self.queues = queues
        self.topics = topics
        self.addressesMaxDeliveryAttempts = addressesMaxDeliveryAttempts
        self.addressesExpiryDelay = addressesExpiryDelay
        self.addressesAddressFullMessagePolicy = addressesAddressFullMessagePolicy
        self.addressesMaxSizeBytes = addressesMaxSizeBytes
        self.addressesPageSizeBytes = addressesPageSizeBytes
        self.addressesPageCacheMaxSize = addressesPageCacheMaxSize
        self.clusterUser = clusterUser
        self.clusterPassword = clusterPassword
        self.clusterCallTimeout = clusterCallTimeout
        self.clusterCallFailoverTimeout = clusterCallFailoverTimeout
        self.clusterClientFailureCheckPeriod = clusterClientFailureCheckPeriod
        self.clusterNotificationAttempts = clusterNotificationAttempts
        self.clusterNotificationInterval = clusterNotificationInterval
        self.idCacheSize = idCacheSize
        self.clusterConfirmationWindowSize = clusterConfirmationWindowSize
        self.clusterConnectionTtl = clusterConnectionTtl
        self.clusterDuplicateDetection = clusterDuplicateDetection
        self.clusterInitialConnectAttempts = clusterInitialConnectAttempts
        self.clusterMaxRetryInterval = clusterMaxRetryInterval
        self.clusterMinLargeMessageSize = clusterMinLargeMessageSize
        self.clusterProducerWindowSize = clusterProducerWindowSize
        self.clusterReconnectAttempts = clusterReconnectAttempts
        self.clusterRetryInterval = clusterRetryInterval
        self.clusterRetryIntervalMultiplier = clusterRetryIntervalMultiplier
    }

    public enum CodingKeys: String, CodingKey { 
        case serviceRanking = "service.ranking"
        case globalSize = "global.size"
        case maxDiskUsage = "max.disk.usage"
        case persistenceEnabled = "persistence.enabled"
        case threadPoolMaxSize = "thread.pool.max.size"
        case scheduledThreadPoolMaxSize = "scheduled.thread.pool.max.size"
        case gracefulShutdownTimeout = "graceful.shutdown.timeout"
        case queues
        case topics
        case addressesMaxDeliveryAttempts = "addresses.max.delivery.attempts"
        case addressesExpiryDelay = "addresses.expiry.delay"
        case addressesAddressFullMessagePolicy = "addresses.address.full.message.policy"
        case addressesMaxSizeBytes = "addresses.max.size.bytes"
        case addressesPageSizeBytes = "addresses.page.size.bytes"
        case addressesPageCacheMaxSize = "addresses.page.cache.max.size"
        case clusterUser = "cluster.user"
        case clusterPassword = "cluster.password"
        case clusterCallTimeout = "cluster.call.timeout"
        case clusterCallFailoverTimeout = "cluster.call.failover.timeout"
        case clusterClientFailureCheckPeriod = "cluster.client.failure.check.period"
        case clusterNotificationAttempts = "cluster.notification.attempts"
        case clusterNotificationInterval = "cluster.notification.interval"
        case idCacheSize = "id.cache.size"
        case clusterConfirmationWindowSize = "cluster.confirmation.window.size"
        case clusterConnectionTtl = "cluster.connection.ttl"
        case clusterDuplicateDetection = "cluster.duplicate.detection"
        case clusterInitialConnectAttempts = "cluster.initial.connect.attempts"
        case clusterMaxRetryInterval = "cluster.max.retry.interval"
        case clusterMinLargeMessageSize = "cluster.min.large.message.size"
        case clusterProducerWindowSize = "cluster.producer.window.size"
        case clusterReconnectAttempts = "cluster.reconnect.attempts"
        case clusterRetryInterval = "cluster.retry.interval"
        case clusterRetryIntervalMultiplier = "cluster.retry.interval.multiplier"
    }


}

