<?php
/**
 * ComDayCqDamCoreImplDamEventPurgeServiceProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComDayCqDamCoreImplDamEventPurgeServiceProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComDayCqDamCoreImplDamEventPurgeServiceProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("scheduler.expression")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $schedulerExpression;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("maxSavedActivities")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $maxSavedActivities;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("saveInterval")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $saveInterval;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("enableActivityPurge")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $enableActivityPurge;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     * @SerializedName("eventTypes")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyDropDown")
     */
    protected $eventTypes;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->schedulerExpression = isset($data['schedulerExpression']) ? $data['schedulerExpression'] : null;
        $this->maxSavedActivities = isset($data['maxSavedActivities']) ? $data['maxSavedActivities'] : null;
        $this->saveInterval = isset($data['saveInterval']) ? $data['saveInterval'] : null;
        $this->enableActivityPurge = isset($data['enableActivityPurge']) ? $data['enableActivityPurge'] : null;
        $this->eventTypes = isset($data['eventTypes']) ? $data['eventTypes'] : null;
    }

    /**
     * Gets schedulerExpression.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSchedulerExpression()
    {
        return $this->schedulerExpression;
    }

    /**
     * Sets schedulerExpression.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $schedulerExpression
     *
     * @return $this
     */
    public function setSchedulerExpression(ConfigNodePropertyString $schedulerExpression = null)
    {
        $this->schedulerExpression = $schedulerExpression;

        return $this;
    }

    /**
     * Gets maxSavedActivities.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMaxSavedActivities()
    {
        return $this->maxSavedActivities;
    }

    /**
     * Sets maxSavedActivities.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $maxSavedActivities
     *
     * @return $this
     */
    public function setMaxSavedActivities(ConfigNodePropertyInteger $maxSavedActivities = null)
    {
        $this->maxSavedActivities = $maxSavedActivities;

        return $this;
    }

    /**
     * Gets saveInterval.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getSaveInterval()
    {
        return $this->saveInterval;
    }

    /**
     * Sets saveInterval.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $saveInterval
     *
     * @return $this
     */
    public function setSaveInterval(ConfigNodePropertyInteger $saveInterval = null)
    {
        $this->saveInterval = $saveInterval;

        return $this;
    }

    /**
     * Gets enableActivityPurge.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getEnableActivityPurge()
    {
        return $this->enableActivityPurge;
    }

    /**
     * Sets enableActivityPurge.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $enableActivityPurge
     *
     * @return $this
     */
    public function setEnableActivityPurge(ConfigNodePropertyBoolean $enableActivityPurge = null)
    {
        $this->enableActivityPurge = $enableActivityPurge;

        return $this;
    }

    /**
     * Gets eventTypes.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyDropDown|null
     */
    public function getEventTypes()
    {
        return $this->eventTypes;
    }

    /**
     * Sets eventTypes.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyDropDown|null $eventTypes
     *
     * @return $this
     */
    public function setEventTypes(ConfigNodePropertyDropDown $eventTypes = null)
    {
        $this->eventTypes = $eventTypes;

        return $this;
    }
}


