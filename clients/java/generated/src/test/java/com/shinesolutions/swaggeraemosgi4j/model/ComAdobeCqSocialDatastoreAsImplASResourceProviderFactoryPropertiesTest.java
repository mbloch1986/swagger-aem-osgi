/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryProperties
 */
public class ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryPropertiesTest {
    private final ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryProperties model = new ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryProperties();

    /**
     * Model tests for ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryProperties
     */
    @Test
    public void testComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryProperties() {
        // TODO: test ComAdobeCqSocialDatastoreAsImplASResourceProviderFactoryProperties
    }

    /**
     * Test the property 'versionId'
     */
    @Test
    public void versionIdTest() {
        // TODO: test versionId
    }

    /**
     * Test the property 'cacheOn'
     */
    @Test
    public void cacheOnTest() {
        // TODO: test cacheOn
    }

    /**
     * Test the property 'concurrencyLevel'
     */
    @Test
    public void concurrencyLevelTest() {
        // TODO: test concurrencyLevel
    }

    /**
     * Test the property 'cacheStartSize'
     */
    @Test
    public void cacheStartSizeTest() {
        // TODO: test cacheStartSize
    }

    /**
     * Test the property 'cacheTtl'
     */
    @Test
    public void cacheTtlTest() {
        // TODO: test cacheTtl
    }

    /**
     * Test the property 'cacheSize'
     */
    @Test
    public void cacheSizeTest() {
        // TODO: test cacheSize
    }

    /**
     * Test the property 'timeLimit'
     */
    @Test
    public void timeLimitTest() {
        // TODO: test timeLimit
    }

}
