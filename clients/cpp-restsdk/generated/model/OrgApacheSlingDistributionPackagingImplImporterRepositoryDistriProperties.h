/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriProperties.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriProperties_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriProperties_H_


#include "../ModelBase.h"

#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriProperties
    : public ModelBase
{
public:
    OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriProperties();
    virtual ~OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getName() const;
    bool nameIsSet() const;
    void unsetName();
    void setName(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getServiceName() const;
    bool serviceNameIsSet() const;
    void unsetService_name();
    void setServiceName(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getPath() const;
    bool pathIsSet() const;
    void unsetPath();
    void setPath(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getPrivilegeName() const;
    bool privilegeNameIsSet() const;
    void unsetPrivilege_name();
    void setPrivilegeName(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyString> m_Name;
    bool m_NameIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Service_name;
    bool m_Service_nameIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Path;
    bool m_PathIsSet;
    std::shared_ptr<ConfigNodePropertyString> m_Privilege_name;
    bool m_Privilege_nameIsSet;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_OrgApacheSlingDistributionPackagingImplImporterRepositoryDistriProperties_H_ */
