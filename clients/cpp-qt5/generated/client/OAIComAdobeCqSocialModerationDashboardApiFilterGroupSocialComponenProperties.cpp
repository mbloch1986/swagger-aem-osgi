/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties() {
    init();
}

OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::~OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties() {
    this->cleanup();
}

void
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::init() {
    resource_type_filters = new OAIConfigNodePropertyArray();
    m_resource_type_filters_isSet = false;
    priority = new OAIConfigNodePropertyInteger();
    m_priority_isSet = false;
}

void
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::cleanup() {
    if(resource_type_filters != nullptr) { 
        delete resource_type_filters;
    }
    if(priority != nullptr) { 
        delete priority;
    }
}

OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties*
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&resource_type_filters, pJson["resourceType.filters"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&priority, pJson["priority"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::asJsonObject() {
    QJsonObject obj;
    if((resource_type_filters != nullptr) && (resource_type_filters->isSet())){
        toJsonValue(QString("resourceType.filters"), resource_type_filters, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((priority != nullptr) && (priority->isSet())){
        toJsonValue(QString("priority"), priority, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::getResourceTypeFilters() {
    return resource_type_filters;
}
void
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::setResourceTypeFilters(OAIConfigNodePropertyArray* resource_type_filters) {
    this->resource_type_filters = resource_type_filters;
    this->m_resource_type_filters_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::getPriority() {
    return priority;
}
void
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::setPriority(OAIConfigNodePropertyInteger* priority) {
    this->priority = priority;
    this->m_priority_isSet = true;
}


bool
OAIComAdobeCqSocialModerationDashboardApiFilterGroupSocialComponenProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(resource_type_filters != nullptr && resource_type_filters->isSet()){ isObjectUpdated = true; break;}
        if(priority != nullptr && priority->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

