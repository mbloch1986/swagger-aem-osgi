/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties() {
    this->init();
}

OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::~OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties() {
    
}

void
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::init() {
    m_filter_order_isSet = false;
    m_filter_scope_isSet = false;
}

void
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(filter_order, json[QString("filter.order")]);
    
    ::OpenAPI::fromJsonValue(filter_scope, json[QString("filter.scope")]);
    
}

QString
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::asJsonObject() const {
    QJsonObject obj;
	if(filter_order.isSet()){
        obj.insert(QString("filter.order"), ::OpenAPI::toJsonValue(filter_order));
    }
	if(filter_scope.isSet()){
        obj.insert(QString("filter.scope"), ::OpenAPI::toJsonValue(filter_scope));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::getFilterOrder() const {
    return filter_order;
}
void
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::setFilterOrder(const OAIConfigNodePropertyString &filter_order) {
    this->filter_order = filter_order;
    this->m_filter_order_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::getFilterScope() const {
    return filter_scope;
}
void
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::setFilterScope(const OAIConfigNodePropertyString &filter_scope) {
    this->filter_scope = filter_scope;
    this->m_filter_scope_isSet = true;
}


bool
OAIComDayCqWcmCoreImplWarpTimeWarpFilterProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(filter_order.isSet()){ isObjectUpdated = true; break;}
    
        if(filter_scope.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

