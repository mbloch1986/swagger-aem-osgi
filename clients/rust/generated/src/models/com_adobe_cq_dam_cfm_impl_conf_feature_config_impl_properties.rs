/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeCqDamCfmImplConfFeatureConfigImplProperties {
  #[serde(rename = "dam.cfm.resourceTypes")]
  dam_cfm_resource_types: Option<::models::ConfigNodePropertyArray>,
  #[serde(rename = "dam.cfm.referenceProperties")]
  dam_cfm_reference_properties: Option<::models::ConfigNodePropertyArray>
}

impl ComAdobeCqDamCfmImplConfFeatureConfigImplProperties {
  pub fn new() -> ComAdobeCqDamCfmImplConfFeatureConfigImplProperties {
    ComAdobeCqDamCfmImplConfFeatureConfigImplProperties {
      dam_cfm_resource_types: None,
      dam_cfm_reference_properties: None
    }
  }

  pub fn set_dam_cfm_resource_types(&mut self, dam_cfm_resource_types: ::models::ConfigNodePropertyArray) {
    self.dam_cfm_resource_types = Some(dam_cfm_resource_types);
  }

  pub fn with_dam_cfm_resource_types(mut self, dam_cfm_resource_types: ::models::ConfigNodePropertyArray) -> ComAdobeCqDamCfmImplConfFeatureConfigImplProperties {
    self.dam_cfm_resource_types = Some(dam_cfm_resource_types);
    self
  }

  pub fn dam_cfm_resource_types(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.dam_cfm_resource_types.as_ref()
  }

  pub fn reset_dam_cfm_resource_types(&mut self) {
    self.dam_cfm_resource_types = None;
  }

  pub fn set_dam_cfm_reference_properties(&mut self, dam_cfm_reference_properties: ::models::ConfigNodePropertyArray) {
    self.dam_cfm_reference_properties = Some(dam_cfm_reference_properties);
  }

  pub fn with_dam_cfm_reference_properties(mut self, dam_cfm_reference_properties: ::models::ConfigNodePropertyArray) -> ComAdobeCqDamCfmImplConfFeatureConfigImplProperties {
    self.dam_cfm_reference_properties = Some(dam_cfm_reference_properties);
    self
  }

  pub fn dam_cfm_reference_properties(&self) -> Option<&::models::ConfigNodePropertyArray> {
    self.dam_cfm_reference_properties.as_ref()
  }

  pub fn reset_dam_cfm_reference_properties(&mut self) {
    self.dam_cfm_reference_properties = None;
  }

}



