//
// OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public class OrgApacheSlingScriptingJspJspScriptEngineFactoryProperties: JSONEncodable {
    public var jasperCompilerTargetVM: ConfigNodePropertyString?
    public var jasperCompilerSourceVM: ConfigNodePropertyString?
    public var jasperClassdebuginfo: ConfigNodePropertyBoolean?
    public var jasperEnablePooling: ConfigNodePropertyBoolean?
    public var jasperIeClassId: ConfigNodePropertyString?
    public var jasperGenStringAsCharArray: ConfigNodePropertyBoolean?
    public var jasperKeepgenerated: ConfigNodePropertyBoolean?
    public var jasperMappedfile: ConfigNodePropertyBoolean?
    public var jasperTrimSpaces: ConfigNodePropertyBoolean?
    public var jasperDisplaySourceFragments: ConfigNodePropertyBoolean?
    public var defaultIsSession: ConfigNodePropertyBoolean?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["jasper.compilerTargetVM"] = self.jasperCompilerTargetVM?.encodeToJSON()
        nillableDictionary["jasper.compilerSourceVM"] = self.jasperCompilerSourceVM?.encodeToJSON()
        nillableDictionary["jasper.classdebuginfo"] = self.jasperClassdebuginfo?.encodeToJSON()
        nillableDictionary["jasper.enablePooling"] = self.jasperEnablePooling?.encodeToJSON()
        nillableDictionary["jasper.ieClassId"] = self.jasperIeClassId?.encodeToJSON()
        nillableDictionary["jasper.genStringAsCharArray"] = self.jasperGenStringAsCharArray?.encodeToJSON()
        nillableDictionary["jasper.keepgenerated"] = self.jasperKeepgenerated?.encodeToJSON()
        nillableDictionary["jasper.mappedfile"] = self.jasperMappedfile?.encodeToJSON()
        nillableDictionary["jasper.trimSpaces"] = self.jasperTrimSpaces?.encodeToJSON()
        nillableDictionary["jasper.displaySourceFragments"] = self.jasperDisplaySourceFragments?.encodeToJSON()
        nillableDictionary["default.is.session"] = self.defaultIsSession?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
