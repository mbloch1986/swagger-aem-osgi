/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComDayCqWcmCoreImplVersionManager
 */
public class OASComDayCqWcmCoreImplVersionManager implements OAS.MappedProperties {
    /**
     * Get versionmanagerCreateVersionOnActivation
     * @return versionmanagerCreateVersionOnActivation
     */
    public OASConfigNodePropertyBoolean versionmanagerCreateVersionOnActivation { get; set; }

    /**
     * Get versionmanagerPurgingEnabled
     * @return versionmanagerPurgingEnabled
     */
    public OASConfigNodePropertyBoolean versionmanagerPurgingEnabled { get; set; }

    /**
     * Get versionmanagerPurgePaths
     * @return versionmanagerPurgePaths
     */
    public OASConfigNodePropertyArray versionmanagerPurgePaths { get; set; }

    /**
     * Get versionmanagerIvPaths
     * @return versionmanagerIvPaths
     */
    public OASConfigNodePropertyArray versionmanagerIvPaths { get; set; }

    /**
     * Get versionmanagerMaxAgeDays
     * @return versionmanagerMaxAgeDays
     */
    public OASConfigNodePropertyInteger versionmanagerMaxAgeDays { get; set; }

    /**
     * Get versionmanagerMaxNumberVersions
     * @return versionmanagerMaxNumberVersions
     */
    public OASConfigNodePropertyInteger versionmanagerMaxNumberVersions { get; set; }

    /**
     * Get versionmanagerMinNumberVersions
     * @return versionmanagerMinNumberVersions
     */
    public OASConfigNodePropertyInteger versionmanagerMinNumberVersions { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'versionmanager.createVersionOnActivation' => 'versionmanagerCreateVersionOnActivation',
        'versionmanager.purgingEnabled' => 'versionmanagerPurgingEnabled',
        'versionmanager.purgePaths' => 'versionmanagerPurgePaths',
        'versionmanager.ivPaths' => 'versionmanagerIvPaths',
        'versionmanager.maxAgeDays' => 'versionmanagerMaxAgeDays',
        'versionmanager.maxNumberVersions' => 'versionmanagerMaxNumberVersions',
        'versionmanager.minNumberVersions' => 'versionmanagerMinNumberVersions'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComDayCqWcmCoreImplVersionManager getExample() {
        OASComDayCqWcmCoreImplVersionManager comDayCqWcmCoreImplVersionManagerImplProperties = new OASComDayCqWcmCoreImplVersionManager();
          comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerCreateVersionOnActivation = OASConfigNodePropertyBoolean.getExample();
          comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerPurgingEnabled = OASConfigNodePropertyBoolean.getExample();
          comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerPurgePaths = OASConfigNodePropertyArray.getExample();
          comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerIvPaths = OASConfigNodePropertyArray.getExample();
          comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMaxAgeDays = OASConfigNodePropertyInteger.getExample();
          comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMaxNumberVersions = OASConfigNodePropertyInteger.getExample();
          comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMinNumberVersions = OASConfigNodePropertyInteger.getExample();
        return comDayCqWcmCoreImplVersionManagerImplProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComDayCqWcmCoreImplVersionManager) {           
            OASComDayCqWcmCoreImplVersionManager comDayCqWcmCoreImplVersionManagerImplProperties = (OASComDayCqWcmCoreImplVersionManager) obj;
            return this.versionmanagerCreateVersionOnActivation == comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerCreateVersionOnActivation
                && this.versionmanagerPurgingEnabled == comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerPurgingEnabled
                && this.versionmanagerPurgePaths == comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerPurgePaths
                && this.versionmanagerIvPaths == comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerIvPaths
                && this.versionmanagerMaxAgeDays == comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMaxAgeDays
                && this.versionmanagerMaxNumberVersions == comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMaxNumberVersions
                && this.versionmanagerMinNumberVersions == comDayCqWcmCoreImplVersionManagerImplProperties.versionmanagerMinNumberVersions;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (versionmanagerCreateVersionOnActivation == null ? 0 : System.hashCode(versionmanagerCreateVersionOnActivation));
        hashCode = (17 * hashCode) + (versionmanagerPurgingEnabled == null ? 0 : System.hashCode(versionmanagerPurgingEnabled));
        hashCode = (17 * hashCode) + (versionmanagerPurgePaths == null ? 0 : System.hashCode(versionmanagerPurgePaths));
        hashCode = (17 * hashCode) + (versionmanagerIvPaths == null ? 0 : System.hashCode(versionmanagerIvPaths));
        hashCode = (17 * hashCode) + (versionmanagerMaxAgeDays == null ? 0 : System.hashCode(versionmanagerMaxAgeDays));
        hashCode = (17 * hashCode) + (versionmanagerMaxNumberVersions == null ? 0 : System.hashCode(versionmanagerMaxNumberVersions));
        hashCode = (17 * hashCode) + (versionmanagerMinNumberVersions == null ? 0 : System.hashCode(versionmanagerMinNumberVersions));
        return hashCode;
    }
}

