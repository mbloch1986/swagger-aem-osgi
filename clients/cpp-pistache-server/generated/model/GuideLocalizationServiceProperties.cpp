/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GuideLocalizationServiceProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

GuideLocalizationServiceProperties::GuideLocalizationServiceProperties()
{
    m_SupportedLocalesIsSet = false;
    m_Localizable_PropertiesIsSet = false;
    
}

GuideLocalizationServiceProperties::~GuideLocalizationServiceProperties()
{
}

void GuideLocalizationServiceProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json GuideLocalizationServiceProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_SupportedLocalesIsSet)
    {
        val["supportedLocales"] = ModelBase::toJson(m_SupportedLocales);
    }
    if(m_Localizable_PropertiesIsSet)
    {
        val["Localizable Properties"] = ModelBase::toJson(m_Localizable_Properties);
    }
    

    return val;
}

void GuideLocalizationServiceProperties::fromJson(nlohmann::json& val)
{
    if(val.find("supportedLocales") != val.end())
    {
        if(!val["supportedLocales"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["supportedLocales"]);
            setSupportedLocales( newItem );
        }
        
    }
    if(val.find("Localizable Properties") != val.end())
    {
        if(!val["Localizable Properties"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["Localizable Properties"]);
            setLocalizableProperties( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray GuideLocalizationServiceProperties::getSupportedLocales() const
{
    return m_SupportedLocales;
}
void GuideLocalizationServiceProperties::setSupportedLocales(ConfigNodePropertyArray const& value)
{
    m_SupportedLocales = value;
    m_SupportedLocalesIsSet = true;
}
bool GuideLocalizationServiceProperties::supportedLocalesIsSet() const
{
    return m_SupportedLocalesIsSet;
}
void GuideLocalizationServiceProperties::unsetSupportedLocales()
{
    m_SupportedLocalesIsSet = false;
}
ConfigNodePropertyArray GuideLocalizationServiceProperties::getLocalizableProperties() const
{
    return m_Localizable_Properties;
}
void GuideLocalizationServiceProperties::setLocalizableProperties(ConfigNodePropertyArray const& value)
{
    m_Localizable_Properties = value;
    m_Localizable_PropertiesIsSet = true;
}
bool GuideLocalizationServiceProperties::localizablePropertiesIsSet() const
{
    return m_Localizable_PropertiesIsSet;
}
void GuideLocalizationServiceProperties::unsetLocalizable_Properties()
{
    m_Localizable_PropertiesIsSet = false;
}

}
}
}
}

