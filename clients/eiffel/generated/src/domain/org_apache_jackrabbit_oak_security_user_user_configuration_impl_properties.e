note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_JACKRABBIT_OAK_SECURITY_USER_USER_CONFIGURATION_IMPL_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    users_path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    groups_path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    system_relative_path: detachable CONFIG_NODE_PROPERTY_STRING 
      
    default_depth: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    import_behavior: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    password_hash_algorithm: detachable CONFIG_NODE_PROPERTY_STRING 
      
    password_hash_iterations: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    password_salt_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    omit_admin_pw: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    support_auto_save: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    password_max_age: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    initial_password_change: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    password_history_size: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    password_expiry_for_admin: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    cache_expiration: detachable CONFIG_NODE_PROPERTY_INTEGER 
      
    enable_rf_c7613_usercase_mapped_profile: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_users_path (a_name: like users_path)
        -- Set 'users_path' with 'a_name'.
      do
        users_path := a_name
      ensure
        users_path_set: users_path = a_name		
      end

    set_groups_path (a_name: like groups_path)
        -- Set 'groups_path' with 'a_name'.
      do
        groups_path := a_name
      ensure
        groups_path_set: groups_path = a_name		
      end

    set_system_relative_path (a_name: like system_relative_path)
        -- Set 'system_relative_path' with 'a_name'.
      do
        system_relative_path := a_name
      ensure
        system_relative_path_set: system_relative_path = a_name		
      end

    set_default_depth (a_name: like default_depth)
        -- Set 'default_depth' with 'a_name'.
      do
        default_depth := a_name
      ensure
        default_depth_set: default_depth = a_name		
      end

    set_import_behavior (a_name: like import_behavior)
        -- Set 'import_behavior' with 'a_name'.
      do
        import_behavior := a_name
      ensure
        import_behavior_set: import_behavior = a_name		
      end

    set_password_hash_algorithm (a_name: like password_hash_algorithm)
        -- Set 'password_hash_algorithm' with 'a_name'.
      do
        password_hash_algorithm := a_name
      ensure
        password_hash_algorithm_set: password_hash_algorithm = a_name		
      end

    set_password_hash_iterations (a_name: like password_hash_iterations)
        -- Set 'password_hash_iterations' with 'a_name'.
      do
        password_hash_iterations := a_name
      ensure
        password_hash_iterations_set: password_hash_iterations = a_name		
      end

    set_password_salt_size (a_name: like password_salt_size)
        -- Set 'password_salt_size' with 'a_name'.
      do
        password_salt_size := a_name
      ensure
        password_salt_size_set: password_salt_size = a_name		
      end

    set_omit_admin_pw (a_name: like omit_admin_pw)
        -- Set 'omit_admin_pw' with 'a_name'.
      do
        omit_admin_pw := a_name
      ensure
        omit_admin_pw_set: omit_admin_pw = a_name		
      end

    set_support_auto_save (a_name: like support_auto_save)
        -- Set 'support_auto_save' with 'a_name'.
      do
        support_auto_save := a_name
      ensure
        support_auto_save_set: support_auto_save = a_name		
      end

    set_password_max_age (a_name: like password_max_age)
        -- Set 'password_max_age' with 'a_name'.
      do
        password_max_age := a_name
      ensure
        password_max_age_set: password_max_age = a_name		
      end

    set_initial_password_change (a_name: like initial_password_change)
        -- Set 'initial_password_change' with 'a_name'.
      do
        initial_password_change := a_name
      ensure
        initial_password_change_set: initial_password_change = a_name		
      end

    set_password_history_size (a_name: like password_history_size)
        -- Set 'password_history_size' with 'a_name'.
      do
        password_history_size := a_name
      ensure
        password_history_size_set: password_history_size = a_name		
      end

    set_password_expiry_for_admin (a_name: like password_expiry_for_admin)
        -- Set 'password_expiry_for_admin' with 'a_name'.
      do
        password_expiry_for_admin := a_name
      ensure
        password_expiry_for_admin_set: password_expiry_for_admin = a_name		
      end

    set_cache_expiration (a_name: like cache_expiration)
        -- Set 'cache_expiration' with 'a_name'.
      do
        cache_expiration := a_name
      ensure
        cache_expiration_set: cache_expiration = a_name		
      end

    set_enable_rf_c7613_usercase_mapped_profile (a_name: like enable_rf_c7613_usercase_mapped_profile)
        -- Set 'enable_rf_c7613_usercase_mapped_profile' with 'a_name'.
      do
        enable_rf_c7613_usercase_mapped_profile := a_name
      ensure
        enable_rf_c7613_usercase_mapped_profile_set: enable_rf_c7613_usercase_mapped_profile = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_JACKRABBIT_OAK_SECURITY_USER_USER_CONFIGURATION_IMPL_PROPERTIES%N")
        if attached users_path as l_users_path then
          Result.append ("%Nusers_path:")
          Result.append (l_users_path.out)
          Result.append ("%N")    
        end  
        if attached groups_path as l_groups_path then
          Result.append ("%Ngroups_path:")
          Result.append (l_groups_path.out)
          Result.append ("%N")    
        end  
        if attached system_relative_path as l_system_relative_path then
          Result.append ("%Nsystem_relative_path:")
          Result.append (l_system_relative_path.out)
          Result.append ("%N")    
        end  
        if attached default_depth as l_default_depth then
          Result.append ("%Ndefault_depth:")
          Result.append (l_default_depth.out)
          Result.append ("%N")    
        end  
        if attached import_behavior as l_import_behavior then
          Result.append ("%Nimport_behavior:")
          Result.append (l_import_behavior.out)
          Result.append ("%N")    
        end  
        if attached password_hash_algorithm as l_password_hash_algorithm then
          Result.append ("%Npassword_hash_algorithm:")
          Result.append (l_password_hash_algorithm.out)
          Result.append ("%N")    
        end  
        if attached password_hash_iterations as l_password_hash_iterations then
          Result.append ("%Npassword_hash_iterations:")
          Result.append (l_password_hash_iterations.out)
          Result.append ("%N")    
        end  
        if attached password_salt_size as l_password_salt_size then
          Result.append ("%Npassword_salt_size:")
          Result.append (l_password_salt_size.out)
          Result.append ("%N")    
        end  
        if attached omit_admin_pw as l_omit_admin_pw then
          Result.append ("%Nomit_admin_pw:")
          Result.append (l_omit_admin_pw.out)
          Result.append ("%N")    
        end  
        if attached support_auto_save as l_support_auto_save then
          Result.append ("%Nsupport_auto_save:")
          Result.append (l_support_auto_save.out)
          Result.append ("%N")    
        end  
        if attached password_max_age as l_password_max_age then
          Result.append ("%Npassword_max_age:")
          Result.append (l_password_max_age.out)
          Result.append ("%N")    
        end  
        if attached initial_password_change as l_initial_password_change then
          Result.append ("%Ninitial_password_change:")
          Result.append (l_initial_password_change.out)
          Result.append ("%N")    
        end  
        if attached password_history_size as l_password_history_size then
          Result.append ("%Npassword_history_size:")
          Result.append (l_password_history_size.out)
          Result.append ("%N")    
        end  
        if attached password_expiry_for_admin as l_password_expiry_for_admin then
          Result.append ("%Npassword_expiry_for_admin:")
          Result.append (l_password_expiry_for_admin.out)
          Result.append ("%N")    
        end  
        if attached cache_expiration as l_cache_expiration then
          Result.append ("%Ncache_expiration:")
          Result.append (l_cache_expiration.out)
          Result.append ("%N")    
        end  
        if attached enable_rf_c7613_usercase_mapped_profile as l_enable_rf_c7613_usercase_mapped_profile then
          Result.append ("%Nenable_rf_c7613_usercase_mapped_profile:")
          Result.append (l_enable_rf_c7613_usercase_mapped_profile.out)
          Result.append ("%N")    
        end  
      end
end


