/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties_H_
#define OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties: public OAIObject {
public:
    OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties();
    OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties(QString json);
    ~OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getSyncTranslationStateSchedulingFormat();
    void setSyncTranslationStateSchedulingFormat(OAIConfigNodePropertyString* sync_translation_state_scheduling_format);

    OAIConfigNodePropertyString* getSchedulingRepeatTranslationSchedulingFormat();
    void setSchedulingRepeatTranslationSchedulingFormat(OAIConfigNodePropertyString* scheduling_repeat_translation_scheduling_format);

    OAIConfigNodePropertyString* getSyncTranslationStateLockTimeoutInMinutes();
    void setSyncTranslationStateLockTimeoutInMinutes(OAIConfigNodePropertyString* sync_translation_state_lock_timeout_in_minutes);

    OAIConfigNodePropertyDropDown* getExportFormat();
    void setExportFormat(OAIConfigNodePropertyDropDown* export_format);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* sync_translation_state_scheduling_format;
    bool m_sync_translation_state_scheduling_format_isSet;

    OAIConfigNodePropertyString* scheduling_repeat_translation_scheduling_format;
    bool m_scheduling_repeat_translation_scheduling_format_isSet;

    OAIConfigNodePropertyString* sync_translation_state_lock_timeout_in_minutes;
    bool m_sync_translation_state_lock_timeout_in_minutes_isSet;

    OAIConfigNodePropertyDropDown* export_format;
    bool m_export_format_isSet;

};

}

#endif /* OAIComAdobeCqWcmTranslationImplTranslationPlatformConfigurationImplProperties_H_ */
