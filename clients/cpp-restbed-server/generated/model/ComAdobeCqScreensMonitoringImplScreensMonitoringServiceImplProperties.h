/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties.h
 *
 * 
 */

#ifndef ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties_H_
#define ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties_H_



#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties
{
public:
    ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties();
    virtual ~ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyArray> getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath() const;
    void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProjectPath(std::shared_ptr<ConfigNodePropertyArray> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency() const;
    void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplScheduleFrequency(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout() const;
    void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPingTimeout(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients() const;
    void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplRecipients(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver() const;
    void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpserver(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport() const;
    void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplSmtpport(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyBoolean> getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls() const;
    void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsetls(std::shared_ptr<ConfigNodePropertyBoolean> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername() const;
    void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplUsername(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword() const;
    void setComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplPassword(std::shared_ptr<ConfigNodePropertyString> value);

protected:
    std::shared_ptr<ConfigNodePropertyArray> m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_projectPath;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_scheduleFrequency;
    std::shared_ptr<ConfigNodePropertyInteger> m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_pingTimeout;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_recipients;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpserver;
    std::shared_ptr<ConfigNodePropertyInteger> m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_smtpport;
    std::shared_ptr<ConfigNodePropertyBoolean> m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_usetls;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_username;
    std::shared_ptr<ConfigNodePropertyString> m_Com_adobe_cq_screens_monitoring_impl_ScreensMonitoringServiceImpl_password;
};

}
}
}
}

#endif /* ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties_H_ */
