/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeGraniteCorsImplCORSPolicyImplProperties.h
 *
 * 
 */

#ifndef OAIComAdobeGraniteCorsImplCORSPolicyImplProperties_H
#define OAIComAdobeGraniteCorsImplCORSPolicyImplProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeGraniteCorsImplCORSPolicyImplProperties: public OAIObject {
public:
    OAIComAdobeGraniteCorsImplCORSPolicyImplProperties();
    OAIComAdobeGraniteCorsImplCORSPolicyImplProperties(QString json);
    ~OAIComAdobeGraniteCorsImplCORSPolicyImplProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyArray getAlloworigin() const;
    void setAlloworigin(const OAIConfigNodePropertyArray &alloworigin);

    OAIConfigNodePropertyArray getAlloworiginregexp() const;
    void setAlloworiginregexp(const OAIConfigNodePropertyArray &alloworiginregexp);

    OAIConfigNodePropertyArray getAllowedpaths() const;
    void setAllowedpaths(const OAIConfigNodePropertyArray &allowedpaths);

    OAIConfigNodePropertyArray getExposedheaders() const;
    void setExposedheaders(const OAIConfigNodePropertyArray &exposedheaders);

    OAIConfigNodePropertyInteger getMaxage() const;
    void setMaxage(const OAIConfigNodePropertyInteger &maxage);

    OAIConfigNodePropertyArray getSupportedheaders() const;
    void setSupportedheaders(const OAIConfigNodePropertyArray &supportedheaders);

    OAIConfigNodePropertyArray getSupportedmethods() const;
    void setSupportedmethods(const OAIConfigNodePropertyArray &supportedmethods);

    OAIConfigNodePropertyBoolean getSupportscredentials() const;
    void setSupportscredentials(const OAIConfigNodePropertyBoolean &supportscredentials);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyArray alloworigin;
    bool m_alloworigin_isSet;

    OAIConfigNodePropertyArray alloworiginregexp;
    bool m_alloworiginregexp_isSet;

    OAIConfigNodePropertyArray allowedpaths;
    bool m_allowedpaths_isSet;

    OAIConfigNodePropertyArray exposedheaders;
    bool m_exposedheaders_isSet;

    OAIConfigNodePropertyInteger maxage;
    bool m_maxage_isSet;

    OAIConfigNodePropertyArray supportedheaders;
    bool m_supportedheaders_isSet;

    OAIConfigNodePropertyArray supportedmethods;
    bool m_supportedmethods_isSet;

    OAIConfigNodePropertyBoolean supportscredentials;
    bool m_supportscredentials_isSet;

};

}

#endif // OAIComAdobeGraniteCorsImplCORSPolicyImplProperties_H
