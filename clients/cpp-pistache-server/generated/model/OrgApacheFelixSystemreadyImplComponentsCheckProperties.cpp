/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "OrgApacheFelixSystemreadyImplComponentsCheckProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheFelixSystemreadyImplComponentsCheckProperties::OrgApacheFelixSystemreadyImplComponentsCheckProperties()
{
    m_Components_listIsSet = false;
    m_TypeIsSet = false;
    
}

OrgApacheFelixSystemreadyImplComponentsCheckProperties::~OrgApacheFelixSystemreadyImplComponentsCheckProperties()
{
}

void OrgApacheFelixSystemreadyImplComponentsCheckProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json OrgApacheFelixSystemreadyImplComponentsCheckProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_Components_listIsSet)
    {
        val["components.list"] = ModelBase::toJson(m_Components_list);
    }
    if(m_TypeIsSet)
    {
        val["type"] = ModelBase::toJson(m_Type);
    }
    

    return val;
}

void OrgApacheFelixSystemreadyImplComponentsCheckProperties::fromJson(nlohmann::json& val)
{
    if(val.find("components.list") != val.end())
    {
        if(!val["components.list"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["components.list"]);
            setComponentsList( newItem );
        }
        
    }
    if(val.find("type") != val.end())
    {
        if(!val["type"].is_null())
        {
            ConfigNodePropertyDropDown newItem;
            newItem.fromJson(val["type"]);
            setType( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray OrgApacheFelixSystemreadyImplComponentsCheckProperties::getComponentsList() const
{
    return m_Components_list;
}
void OrgApacheFelixSystemreadyImplComponentsCheckProperties::setComponentsList(ConfigNodePropertyArray const& value)
{
    m_Components_list = value;
    m_Components_listIsSet = true;
}
bool OrgApacheFelixSystemreadyImplComponentsCheckProperties::componentsListIsSet() const
{
    return m_Components_listIsSet;
}
void OrgApacheFelixSystemreadyImplComponentsCheckProperties::unsetComponents_list()
{
    m_Components_listIsSet = false;
}
ConfigNodePropertyDropDown OrgApacheFelixSystemreadyImplComponentsCheckProperties::getType() const
{
    return m_Type;
}
void OrgApacheFelixSystemreadyImplComponentsCheckProperties::setType(ConfigNodePropertyDropDown const& value)
{
    m_Type = value;
    m_TypeIsSet = true;
}
bool OrgApacheFelixSystemreadyImplComponentsCheckProperties::typeIsSet() const
{
    return m_TypeIsSet;
}
void OrgApacheFelixSystemreadyImplComponentsCheckProperties::unsetType()
{
    m_TypeIsSet = false;
}

}
}
}
}

