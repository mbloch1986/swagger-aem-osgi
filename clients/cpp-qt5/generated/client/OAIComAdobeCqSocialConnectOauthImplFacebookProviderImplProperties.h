/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplProperties_H_
#define OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplProperties_H_

#include <QJsonObject>


#include "OAIOAIConfigNodePropertyArray.h"
#include "OAIOAIConfigNodePropertyBoolean.h"
#include "OAIOAIConfigNodePropertyDropDown.h"
#include "OAIOAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplProperties: public OAIObject {
public:
    OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplProperties();
    OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplProperties(QString json);
    ~OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplProperties();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplProperties* fromJson(QString jsonString) override;

    OAIConfigNodePropertyString* getOauthProviderId();
    void setOauthProviderId(OAIConfigNodePropertyString* oauth_provider_id);

    OAIConfigNodePropertyString* getOauthCloudConfigRoot();
    void setOauthCloudConfigRoot(OAIConfigNodePropertyString* oauth_cloud_config_root);

    OAIConfigNodePropertyString* getProviderConfigRoot();
    void setProviderConfigRoot(OAIConfigNodePropertyString* provider_config_root);

    OAIConfigNodePropertyBoolean* getProviderConfigCreateTagsEnabled();
    void setProviderConfigCreateTagsEnabled(OAIConfigNodePropertyBoolean* provider_config_create_tags_enabled);

    OAIConfigNodePropertyDropDown* getProviderConfigUserFolder();
    void setProviderConfigUserFolder(OAIConfigNodePropertyDropDown* provider_config_user_folder);

    OAIConfigNodePropertyBoolean* getProviderConfigFacebookFetchFields();
    void setProviderConfigFacebookFetchFields(OAIConfigNodePropertyBoolean* provider_config_facebook_fetch_fields);

    OAIConfigNodePropertyArray* getProviderConfigFacebookFields();
    void setProviderConfigFacebookFields(OAIConfigNodePropertyArray* provider_config_facebook_fields);

    OAIConfigNodePropertyBoolean* getProviderConfigRefreshUserdataEnabled();
    void setProviderConfigRefreshUserdataEnabled(OAIConfigNodePropertyBoolean* provider_config_refresh_userdata_enabled);


    virtual bool isSet() override;

private:
    OAIConfigNodePropertyString* oauth_provider_id;
    bool m_oauth_provider_id_isSet;

    OAIConfigNodePropertyString* oauth_cloud_config_root;
    bool m_oauth_cloud_config_root_isSet;

    OAIConfigNodePropertyString* provider_config_root;
    bool m_provider_config_root_isSet;

    OAIConfigNodePropertyBoolean* provider_config_create_tags_enabled;
    bool m_provider_config_create_tags_enabled_isSet;

    OAIConfigNodePropertyDropDown* provider_config_user_folder;
    bool m_provider_config_user_folder_isSet;

    OAIConfigNodePropertyBoolean* provider_config_facebook_fetch_fields;
    bool m_provider_config_facebook_fetch_fields_isSet;

    OAIConfigNodePropertyArray* provider_config_facebook_fields;
    bool m_provider_config_facebook_fields_isSet;

    OAIConfigNodePropertyBoolean* provider_config_refresh_userdata_enabled;
    bool m_provider_config_refresh_userdata_enabled_isSet;

};

}

#endif /* OAIComAdobeCqSocialConnectOauthImplFacebookProviderImplProperties_H_ */
