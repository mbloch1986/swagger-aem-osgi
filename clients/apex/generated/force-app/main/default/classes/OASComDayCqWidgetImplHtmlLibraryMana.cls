/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASComDayCqWidgetImplHtmlLibraryMana
 */
public class OASComDayCqWidgetImplHtmlLibraryMana implements OAS.MappedProperties {
    /**
     * Get htmllibmanagerClientmanager
     * @return htmllibmanagerClientmanager
     */
    public OASConfigNodePropertyString htmllibmanagerClientmanager { get; set; }

    /**
     * Get htmllibmanagerDebug
     * @return htmllibmanagerDebug
     */
    public OASConfigNodePropertyBoolean htmllibmanagerDebug { get; set; }

    /**
     * Get htmllibmanagerDebugConsole
     * @return htmllibmanagerDebugConsole
     */
    public OASConfigNodePropertyBoolean htmllibmanagerDebugConsole { get; set; }

    /**
     * Get htmllibmanagerDebugInitJs
     * @return htmllibmanagerDebugInitJs
     */
    public OASConfigNodePropertyString htmllibmanagerDebugInitJs { get; set; }

    /**
     * Get htmllibmanagerDefaultthemename
     * @return htmllibmanagerDefaultthemename
     */
    public OASConfigNodePropertyString htmllibmanagerDefaultthemename { get; set; }

    /**
     * Get htmllibmanagerDefaultuserthemename
     * @return htmllibmanagerDefaultuserthemename
     */
    public OASConfigNodePropertyString htmllibmanagerDefaultuserthemename { get; set; }

    /**
     * Get htmllibmanagerFirebuglitePath
     * @return htmllibmanagerFirebuglitePath
     */
    public OASConfigNodePropertyString htmllibmanagerFirebuglitePath { get; set; }

    /**
     * Get htmllibmanagerForceCQUrlInfo
     * @return htmllibmanagerForceCQUrlInfo
     */
    public OASConfigNodePropertyBoolean htmllibmanagerForceCQUrlInfo { get; set; }

    /**
     * Get htmllibmanagerGzip
     * @return htmllibmanagerGzip
     */
    public OASConfigNodePropertyBoolean htmllibmanagerGzip { get; set; }

    /**
     * Get htmllibmanagerMaxage
     * @return htmllibmanagerMaxage
     */
    public OASConfigNodePropertyInteger htmllibmanagerMaxage { get; set; }

    /**
     * Get htmllibmanagerMaxDataUriSize
     * @return htmllibmanagerMaxDataUriSize
     */
    public OASConfigNodePropertyInteger htmllibmanagerMaxDataUriSize { get; set; }

    /**
     * Get htmllibmanagerMinify
     * @return htmllibmanagerMinify
     */
    public OASConfigNodePropertyBoolean htmllibmanagerMinify { get; set; }

    /**
     * Get htmllibmanagerPathList
     * @return htmllibmanagerPathList
     */
    public OASConfigNodePropertyArray htmllibmanagerPathList { get; set; }

    /**
     * Get htmllibmanagerTiming
     * @return htmllibmanagerTiming
     */
    public OASConfigNodePropertyBoolean htmllibmanagerTiming { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'htmllibmanager.clientmanager' => 'htmllibmanagerClientmanager',
        'htmllibmanager.debug' => 'htmllibmanagerDebug',
        'htmllibmanager.debug.console' => 'htmllibmanagerDebugConsole',
        'htmllibmanager.debug.init.js' => 'htmllibmanagerDebugInitJs',
        'htmllibmanager.defaultthemename' => 'htmllibmanagerDefaultthemename',
        'htmllibmanager.defaultuserthemename' => 'htmllibmanagerDefaultuserthemename',
        'htmllibmanager.firebuglite.path' => 'htmllibmanagerFirebuglitePath',
        'htmllibmanager.forceCQUrlInfo' => 'htmllibmanagerForceCQUrlInfo',
        'htmllibmanager.gzip' => 'htmllibmanagerGzip',
        'htmllibmanager.maxage' => 'htmllibmanagerMaxage',
        'htmllibmanager.maxDataUriSize' => 'htmllibmanagerMaxDataUriSize',
        'htmllibmanager.minify' => 'htmllibmanagerMinify',
        'htmllibmanager.path.list' => 'htmllibmanagerPathList',
        'htmllibmanager.timing' => 'htmllibmanagerTiming'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASComDayCqWidgetImplHtmlLibraryMana getExample() {
        OASComDayCqWidgetImplHtmlLibraryMana comDayCqWidgetImplHtmlLibraryManagerImplProperties = new OASComDayCqWidgetImplHtmlLibraryMana();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerClientmanager = OASConfigNodePropertyString.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDebug = OASConfigNodePropertyBoolean.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDebugConsole = OASConfigNodePropertyBoolean.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDebugInitJs = OASConfigNodePropertyString.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDefaultthemename = OASConfigNodePropertyString.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDefaultuserthemename = OASConfigNodePropertyString.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerFirebuglitePath = OASConfigNodePropertyString.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerForceCQUrlInfo = OASConfigNodePropertyBoolean.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerGzip = OASConfigNodePropertyBoolean.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerMaxage = OASConfigNodePropertyInteger.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerMaxDataUriSize = OASConfigNodePropertyInteger.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerMinify = OASConfigNodePropertyBoolean.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerPathList = OASConfigNodePropertyArray.getExample();
          comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerTiming = OASConfigNodePropertyBoolean.getExample();
        return comDayCqWidgetImplHtmlLibraryManagerImplProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASComDayCqWidgetImplHtmlLibraryMana) {           
            OASComDayCqWidgetImplHtmlLibraryMana comDayCqWidgetImplHtmlLibraryManagerImplProperties = (OASComDayCqWidgetImplHtmlLibraryMana) obj;
            return this.htmllibmanagerClientmanager == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerClientmanager
                && this.htmllibmanagerDebug == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDebug
                && this.htmllibmanagerDebugConsole == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDebugConsole
                && this.htmllibmanagerDebugInitJs == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDebugInitJs
                && this.htmllibmanagerDefaultthemename == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDefaultthemename
                && this.htmllibmanagerDefaultuserthemename == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerDefaultuserthemename
                && this.htmllibmanagerFirebuglitePath == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerFirebuglitePath
                && this.htmllibmanagerForceCQUrlInfo == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerForceCQUrlInfo
                && this.htmllibmanagerGzip == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerGzip
                && this.htmllibmanagerMaxage == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerMaxage
                && this.htmllibmanagerMaxDataUriSize == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerMaxDataUriSize
                && this.htmllibmanagerMinify == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerMinify
                && this.htmllibmanagerPathList == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerPathList
                && this.htmllibmanagerTiming == comDayCqWidgetImplHtmlLibraryManagerImplProperties.htmllibmanagerTiming;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (htmllibmanagerClientmanager == null ? 0 : System.hashCode(htmllibmanagerClientmanager));
        hashCode = (17 * hashCode) + (htmllibmanagerDebug == null ? 0 : System.hashCode(htmllibmanagerDebug));
        hashCode = (17 * hashCode) + (htmllibmanagerDebugConsole == null ? 0 : System.hashCode(htmllibmanagerDebugConsole));
        hashCode = (17 * hashCode) + (htmllibmanagerDebugInitJs == null ? 0 : System.hashCode(htmllibmanagerDebugInitJs));
        hashCode = (17 * hashCode) + (htmllibmanagerDefaultthemename == null ? 0 : System.hashCode(htmllibmanagerDefaultthemename));
        hashCode = (17 * hashCode) + (htmllibmanagerDefaultuserthemename == null ? 0 : System.hashCode(htmllibmanagerDefaultuserthemename));
        hashCode = (17 * hashCode) + (htmllibmanagerFirebuglitePath == null ? 0 : System.hashCode(htmllibmanagerFirebuglitePath));
        hashCode = (17 * hashCode) + (htmllibmanagerForceCQUrlInfo == null ? 0 : System.hashCode(htmllibmanagerForceCQUrlInfo));
        hashCode = (17 * hashCode) + (htmllibmanagerGzip == null ? 0 : System.hashCode(htmllibmanagerGzip));
        hashCode = (17 * hashCode) + (htmllibmanagerMaxage == null ? 0 : System.hashCode(htmllibmanagerMaxage));
        hashCode = (17 * hashCode) + (htmllibmanagerMaxDataUriSize == null ? 0 : System.hashCode(htmllibmanagerMaxDataUriSize));
        hashCode = (17 * hashCode) + (htmllibmanagerMinify == null ? 0 : System.hashCode(htmllibmanagerMinify));
        hashCode = (17 * hashCode) + (htmllibmanagerPathList == null ? 0 : System.hashCode(htmllibmanagerPathList));
        hashCode = (17 * hashCode) + (htmllibmanagerTiming == null ? 0 : System.hashCode(htmllibmanagerTiming));
        return hashCode;
    }
}

