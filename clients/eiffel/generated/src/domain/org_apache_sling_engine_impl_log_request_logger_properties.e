note
 description:"[
		Adobe Experience Manager OSGI config (AEM) API
 		Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
  		OpenAPI spec version: 1.0.0-pre.0
 	    Contact: opensource@shinesolutions.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class ORG_APACHE_SLING_ENGINE_IMPL_LOG_REQUEST_LOGGER_PROPERTIES 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    request_log_output: detachable CONFIG_NODE_PROPERTY_STRING 
      
    request_log_outputtype: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    request_log_enabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      
    access_log_output: detachable CONFIG_NODE_PROPERTY_STRING 
      
    access_log_outputtype: detachable CONFIG_NODE_PROPERTY_DROP_DOWN 
      
    access_log_enabled: detachable CONFIG_NODE_PROPERTY_BOOLEAN 
      

feature -- Change Element  
 
    set_request_log_output (a_name: like request_log_output)
        -- Set 'request_log_output' with 'a_name'.
      do
        request_log_output := a_name
      ensure
        request_log_output_set: request_log_output = a_name		
      end

    set_request_log_outputtype (a_name: like request_log_outputtype)
        -- Set 'request_log_outputtype' with 'a_name'.
      do
        request_log_outputtype := a_name
      ensure
        request_log_outputtype_set: request_log_outputtype = a_name		
      end

    set_request_log_enabled (a_name: like request_log_enabled)
        -- Set 'request_log_enabled' with 'a_name'.
      do
        request_log_enabled := a_name
      ensure
        request_log_enabled_set: request_log_enabled = a_name		
      end

    set_access_log_output (a_name: like access_log_output)
        -- Set 'access_log_output' with 'a_name'.
      do
        access_log_output := a_name
      ensure
        access_log_output_set: access_log_output = a_name		
      end

    set_access_log_outputtype (a_name: like access_log_outputtype)
        -- Set 'access_log_outputtype' with 'a_name'.
      do
        access_log_outputtype := a_name
      ensure
        access_log_outputtype_set: access_log_outputtype = a_name		
      end

    set_access_log_enabled (a_name: like access_log_enabled)
        -- Set 'access_log_enabled' with 'a_name'.
      do
        access_log_enabled := a_name
      ensure
        access_log_enabled_set: access_log_enabled = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass ORG_APACHE_SLING_ENGINE_IMPL_LOG_REQUEST_LOGGER_PROPERTIES%N")
        if attached request_log_output as l_request_log_output then
          Result.append ("%Nrequest_log_output:")
          Result.append (l_request_log_output.out)
          Result.append ("%N")    
        end  
        if attached request_log_outputtype as l_request_log_outputtype then
          Result.append ("%Nrequest_log_outputtype:")
          Result.append (l_request_log_outputtype.out)
          Result.append ("%N")    
        end  
        if attached request_log_enabled as l_request_log_enabled then
          Result.append ("%Nrequest_log_enabled:")
          Result.append (l_request_log_enabled.out)
          Result.append ("%N")    
        end  
        if attached access_log_output as l_access_log_output then
          Result.append ("%Naccess_log_output:")
          Result.append (l_access_log_output.out)
          Result.append ("%N")    
        end  
        if attached access_log_outputtype as l_access_log_outputtype then
          Result.append ("%Naccess_log_outputtype:")
          Result.append (l_access_log_outputtype.out)
          Result.append ("%N")    
        end  
        if attached access_log_enabled as l_access_log_enabled then
          Result.append ("%Naccess_log_enabled:")
          Result.append (l_access_log_enabled.out)
          Result.append ("%N")    
        end  
      end
end


