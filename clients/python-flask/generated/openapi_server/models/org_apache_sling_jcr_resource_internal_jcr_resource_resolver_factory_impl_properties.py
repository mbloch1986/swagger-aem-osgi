# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_boolean import ConfigNodePropertyBoolean  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_resolver_searchpath: ConfigNodePropertyArray=None, resource_resolver_manglenamespaces: ConfigNodePropertyBoolean=None, resource_resolver_allow_direct: ConfigNodePropertyBoolean=None, resource_resolver_required_providers: ConfigNodePropertyArray=None, resource_resolver_required_providernames: ConfigNodePropertyArray=None, resource_resolver_virtual: ConfigNodePropertyArray=None, resource_resolver_mapping: ConfigNodePropertyArray=None, resource_resolver_map_location: ConfigNodePropertyString=None, resource_resolver_map_observation: ConfigNodePropertyArray=None, resource_resolver_default_vanity_redirect_status: ConfigNodePropertyInteger=None, resource_resolver_enable_vanitypath: ConfigNodePropertyBoolean=None, resource_resolver_vanitypath_max_entries: ConfigNodePropertyInteger=None, resource_resolver_vanitypath_max_entries_startup: ConfigNodePropertyBoolean=None, resource_resolver_vanitypath_bloomfilter_max_bytes: ConfigNodePropertyInteger=None, resource_resolver_optimize_alias_resolution: ConfigNodePropertyBoolean=None, resource_resolver_vanitypath_whitelist: ConfigNodePropertyArray=None, resource_resolver_vanitypath_blacklist: ConfigNodePropertyArray=None, resource_resolver_vanity_precedence: ConfigNodePropertyBoolean=None, resource_resolver_providerhandling_paranoid: ConfigNodePropertyBoolean=None, resource_resolver_log_closing: ConfigNodePropertyBoolean=None, resource_resolver_log_unclosed: ConfigNodePropertyBoolean=None):  # noqa: E501
        """OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties - a model defined in OpenAPI

        :param resource_resolver_searchpath: The resource_resolver_searchpath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_searchpath: ConfigNodePropertyArray
        :param resource_resolver_manglenamespaces: The resource_resolver_manglenamespaces of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_manglenamespaces: ConfigNodePropertyBoolean
        :param resource_resolver_allow_direct: The resource_resolver_allow_direct of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_allow_direct: ConfigNodePropertyBoolean
        :param resource_resolver_required_providers: The resource_resolver_required_providers of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_required_providers: ConfigNodePropertyArray
        :param resource_resolver_required_providernames: The resource_resolver_required_providernames of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_required_providernames: ConfigNodePropertyArray
        :param resource_resolver_virtual: The resource_resolver_virtual of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_virtual: ConfigNodePropertyArray
        :param resource_resolver_mapping: The resource_resolver_mapping of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_mapping: ConfigNodePropertyArray
        :param resource_resolver_map_location: The resource_resolver_map_location of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_map_location: ConfigNodePropertyString
        :param resource_resolver_map_observation: The resource_resolver_map_observation of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_map_observation: ConfigNodePropertyArray
        :param resource_resolver_default_vanity_redirect_status: The resource_resolver_default_vanity_redirect_status of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_default_vanity_redirect_status: ConfigNodePropertyInteger
        :param resource_resolver_enable_vanitypath: The resource_resolver_enable_vanitypath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_enable_vanitypath: ConfigNodePropertyBoolean
        :param resource_resolver_vanitypath_max_entries: The resource_resolver_vanitypath_max_entries of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_vanitypath_max_entries: ConfigNodePropertyInteger
        :param resource_resolver_vanitypath_max_entries_startup: The resource_resolver_vanitypath_max_entries_startup of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_vanitypath_max_entries_startup: ConfigNodePropertyBoolean
        :param resource_resolver_vanitypath_bloomfilter_max_bytes: The resource_resolver_vanitypath_bloomfilter_max_bytes of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_vanitypath_bloomfilter_max_bytes: ConfigNodePropertyInteger
        :param resource_resolver_optimize_alias_resolution: The resource_resolver_optimize_alias_resolution of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_optimize_alias_resolution: ConfigNodePropertyBoolean
        :param resource_resolver_vanitypath_whitelist: The resource_resolver_vanitypath_whitelist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_vanitypath_whitelist: ConfigNodePropertyArray
        :param resource_resolver_vanitypath_blacklist: The resource_resolver_vanitypath_blacklist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_vanitypath_blacklist: ConfigNodePropertyArray
        :param resource_resolver_vanity_precedence: The resource_resolver_vanity_precedence of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_vanity_precedence: ConfigNodePropertyBoolean
        :param resource_resolver_providerhandling_paranoid: The resource_resolver_providerhandling_paranoid of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_providerhandling_paranoid: ConfigNodePropertyBoolean
        :param resource_resolver_log_closing: The resource_resolver_log_closing of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_log_closing: ConfigNodePropertyBoolean
        :param resource_resolver_log_unclosed: The resource_resolver_log_unclosed of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :type resource_resolver_log_unclosed: ConfigNodePropertyBoolean
        """
        self.openapi_types = {
            'resource_resolver_searchpath': ConfigNodePropertyArray,
            'resource_resolver_manglenamespaces': ConfigNodePropertyBoolean,
            'resource_resolver_allow_direct': ConfigNodePropertyBoolean,
            'resource_resolver_required_providers': ConfigNodePropertyArray,
            'resource_resolver_required_providernames': ConfigNodePropertyArray,
            'resource_resolver_virtual': ConfigNodePropertyArray,
            'resource_resolver_mapping': ConfigNodePropertyArray,
            'resource_resolver_map_location': ConfigNodePropertyString,
            'resource_resolver_map_observation': ConfigNodePropertyArray,
            'resource_resolver_default_vanity_redirect_status': ConfigNodePropertyInteger,
            'resource_resolver_enable_vanitypath': ConfigNodePropertyBoolean,
            'resource_resolver_vanitypath_max_entries': ConfigNodePropertyInteger,
            'resource_resolver_vanitypath_max_entries_startup': ConfigNodePropertyBoolean,
            'resource_resolver_vanitypath_bloomfilter_max_bytes': ConfigNodePropertyInteger,
            'resource_resolver_optimize_alias_resolution': ConfigNodePropertyBoolean,
            'resource_resolver_vanitypath_whitelist': ConfigNodePropertyArray,
            'resource_resolver_vanitypath_blacklist': ConfigNodePropertyArray,
            'resource_resolver_vanity_precedence': ConfigNodePropertyBoolean,
            'resource_resolver_providerhandling_paranoid': ConfigNodePropertyBoolean,
            'resource_resolver_log_closing': ConfigNodePropertyBoolean,
            'resource_resolver_log_unclosed': ConfigNodePropertyBoolean
        }

        self.attribute_map = {
            'resource_resolver_searchpath': 'resource.resolver.searchpath',
            'resource_resolver_manglenamespaces': 'resource.resolver.manglenamespaces',
            'resource_resolver_allow_direct': 'resource.resolver.allowDirect',
            'resource_resolver_required_providers': 'resource.resolver.required.providers',
            'resource_resolver_required_providernames': 'resource.resolver.required.providernames',
            'resource_resolver_virtual': 'resource.resolver.virtual',
            'resource_resolver_mapping': 'resource.resolver.mapping',
            'resource_resolver_map_location': 'resource.resolver.map.location',
            'resource_resolver_map_observation': 'resource.resolver.map.observation',
            'resource_resolver_default_vanity_redirect_status': 'resource.resolver.default.vanity.redirect.status',
            'resource_resolver_enable_vanitypath': 'resource.resolver.enable.vanitypath',
            'resource_resolver_vanitypath_max_entries': 'resource.resolver.vanitypath.maxEntries',
            'resource_resolver_vanitypath_max_entries_startup': 'resource.resolver.vanitypath.maxEntries.startup',
            'resource_resolver_vanitypath_bloomfilter_max_bytes': 'resource.resolver.vanitypath.bloomfilter.maxBytes',
            'resource_resolver_optimize_alias_resolution': 'resource.resolver.optimize.alias.resolution',
            'resource_resolver_vanitypath_whitelist': 'resource.resolver.vanitypath.whitelist',
            'resource_resolver_vanitypath_blacklist': 'resource.resolver.vanitypath.blacklist',
            'resource_resolver_vanity_precedence': 'resource.resolver.vanity.precedence',
            'resource_resolver_providerhandling_paranoid': 'resource.resolver.providerhandling.paranoid',
            'resource_resolver_log_closing': 'resource.resolver.log.closing',
            'resource_resolver_log_unclosed': 'resource.resolver.log.unclosed'
        }

        self._resource_resolver_searchpath = resource_resolver_searchpath
        self._resource_resolver_manglenamespaces = resource_resolver_manglenamespaces
        self._resource_resolver_allow_direct = resource_resolver_allow_direct
        self._resource_resolver_required_providers = resource_resolver_required_providers
        self._resource_resolver_required_providernames = resource_resolver_required_providernames
        self._resource_resolver_virtual = resource_resolver_virtual
        self._resource_resolver_mapping = resource_resolver_mapping
        self._resource_resolver_map_location = resource_resolver_map_location
        self._resource_resolver_map_observation = resource_resolver_map_observation
        self._resource_resolver_default_vanity_redirect_status = resource_resolver_default_vanity_redirect_status
        self._resource_resolver_enable_vanitypath = resource_resolver_enable_vanitypath
        self._resource_resolver_vanitypath_max_entries = resource_resolver_vanitypath_max_entries
        self._resource_resolver_vanitypath_max_entries_startup = resource_resolver_vanitypath_max_entries_startup
        self._resource_resolver_vanitypath_bloomfilter_max_bytes = resource_resolver_vanitypath_bloomfilter_max_bytes
        self._resource_resolver_optimize_alias_resolution = resource_resolver_optimize_alias_resolution
        self._resource_resolver_vanitypath_whitelist = resource_resolver_vanitypath_whitelist
        self._resource_resolver_vanitypath_blacklist = resource_resolver_vanitypath_blacklist
        self._resource_resolver_vanity_precedence = resource_resolver_vanity_precedence
        self._resource_resolver_providerhandling_paranoid = resource_resolver_providerhandling_paranoid
        self._resource_resolver_log_closing = resource_resolver_log_closing
        self._resource_resolver_log_unclosed = resource_resolver_log_unclosed

    @classmethod
    def from_dict(cls, dikt) -> 'OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The orgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.  # noqa: E501
        :rtype: OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_resolver_searchpath(self) -> ConfigNodePropertyArray:
        """Gets the resource_resolver_searchpath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_searchpath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._resource_resolver_searchpath

    @resource_resolver_searchpath.setter
    def resource_resolver_searchpath(self, resource_resolver_searchpath: ConfigNodePropertyArray):
        """Sets the resource_resolver_searchpath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_searchpath: The resource_resolver_searchpath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_searchpath: ConfigNodePropertyArray
        """

        self._resource_resolver_searchpath = resource_resolver_searchpath

    @property
    def resource_resolver_manglenamespaces(self) -> ConfigNodePropertyBoolean:
        """Gets the resource_resolver_manglenamespaces of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_manglenamespaces of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._resource_resolver_manglenamespaces

    @resource_resolver_manglenamespaces.setter
    def resource_resolver_manglenamespaces(self, resource_resolver_manglenamespaces: ConfigNodePropertyBoolean):
        """Sets the resource_resolver_manglenamespaces of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_manglenamespaces: The resource_resolver_manglenamespaces of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_manglenamespaces: ConfigNodePropertyBoolean
        """

        self._resource_resolver_manglenamespaces = resource_resolver_manglenamespaces

    @property
    def resource_resolver_allow_direct(self) -> ConfigNodePropertyBoolean:
        """Gets the resource_resolver_allow_direct of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_allow_direct of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._resource_resolver_allow_direct

    @resource_resolver_allow_direct.setter
    def resource_resolver_allow_direct(self, resource_resolver_allow_direct: ConfigNodePropertyBoolean):
        """Sets the resource_resolver_allow_direct of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_allow_direct: The resource_resolver_allow_direct of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_allow_direct: ConfigNodePropertyBoolean
        """

        self._resource_resolver_allow_direct = resource_resolver_allow_direct

    @property
    def resource_resolver_required_providers(self) -> ConfigNodePropertyArray:
        """Gets the resource_resolver_required_providers of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_required_providers of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._resource_resolver_required_providers

    @resource_resolver_required_providers.setter
    def resource_resolver_required_providers(self, resource_resolver_required_providers: ConfigNodePropertyArray):
        """Sets the resource_resolver_required_providers of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_required_providers: The resource_resolver_required_providers of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_required_providers: ConfigNodePropertyArray
        """

        self._resource_resolver_required_providers = resource_resolver_required_providers

    @property
    def resource_resolver_required_providernames(self) -> ConfigNodePropertyArray:
        """Gets the resource_resolver_required_providernames of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_required_providernames of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._resource_resolver_required_providernames

    @resource_resolver_required_providernames.setter
    def resource_resolver_required_providernames(self, resource_resolver_required_providernames: ConfigNodePropertyArray):
        """Sets the resource_resolver_required_providernames of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_required_providernames: The resource_resolver_required_providernames of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_required_providernames: ConfigNodePropertyArray
        """

        self._resource_resolver_required_providernames = resource_resolver_required_providernames

    @property
    def resource_resolver_virtual(self) -> ConfigNodePropertyArray:
        """Gets the resource_resolver_virtual of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_virtual of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._resource_resolver_virtual

    @resource_resolver_virtual.setter
    def resource_resolver_virtual(self, resource_resolver_virtual: ConfigNodePropertyArray):
        """Sets the resource_resolver_virtual of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_virtual: The resource_resolver_virtual of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_virtual: ConfigNodePropertyArray
        """

        self._resource_resolver_virtual = resource_resolver_virtual

    @property
    def resource_resolver_mapping(self) -> ConfigNodePropertyArray:
        """Gets the resource_resolver_mapping of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_mapping of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._resource_resolver_mapping

    @resource_resolver_mapping.setter
    def resource_resolver_mapping(self, resource_resolver_mapping: ConfigNodePropertyArray):
        """Sets the resource_resolver_mapping of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_mapping: The resource_resolver_mapping of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_mapping: ConfigNodePropertyArray
        """

        self._resource_resolver_mapping = resource_resolver_mapping

    @property
    def resource_resolver_map_location(self) -> ConfigNodePropertyString:
        """Gets the resource_resolver_map_location of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_map_location of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._resource_resolver_map_location

    @resource_resolver_map_location.setter
    def resource_resolver_map_location(self, resource_resolver_map_location: ConfigNodePropertyString):
        """Sets the resource_resolver_map_location of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_map_location: The resource_resolver_map_location of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_map_location: ConfigNodePropertyString
        """

        self._resource_resolver_map_location = resource_resolver_map_location

    @property
    def resource_resolver_map_observation(self) -> ConfigNodePropertyArray:
        """Gets the resource_resolver_map_observation of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_map_observation of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._resource_resolver_map_observation

    @resource_resolver_map_observation.setter
    def resource_resolver_map_observation(self, resource_resolver_map_observation: ConfigNodePropertyArray):
        """Sets the resource_resolver_map_observation of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_map_observation: The resource_resolver_map_observation of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_map_observation: ConfigNodePropertyArray
        """

        self._resource_resolver_map_observation = resource_resolver_map_observation

    @property
    def resource_resolver_default_vanity_redirect_status(self) -> ConfigNodePropertyInteger:
        """Gets the resource_resolver_default_vanity_redirect_status of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_default_vanity_redirect_status of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._resource_resolver_default_vanity_redirect_status

    @resource_resolver_default_vanity_redirect_status.setter
    def resource_resolver_default_vanity_redirect_status(self, resource_resolver_default_vanity_redirect_status: ConfigNodePropertyInteger):
        """Sets the resource_resolver_default_vanity_redirect_status of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_default_vanity_redirect_status: The resource_resolver_default_vanity_redirect_status of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_default_vanity_redirect_status: ConfigNodePropertyInteger
        """

        self._resource_resolver_default_vanity_redirect_status = resource_resolver_default_vanity_redirect_status

    @property
    def resource_resolver_enable_vanitypath(self) -> ConfigNodePropertyBoolean:
        """Gets the resource_resolver_enable_vanitypath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_enable_vanitypath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._resource_resolver_enable_vanitypath

    @resource_resolver_enable_vanitypath.setter
    def resource_resolver_enable_vanitypath(self, resource_resolver_enable_vanitypath: ConfigNodePropertyBoolean):
        """Sets the resource_resolver_enable_vanitypath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_enable_vanitypath: The resource_resolver_enable_vanitypath of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_enable_vanitypath: ConfigNodePropertyBoolean
        """

        self._resource_resolver_enable_vanitypath = resource_resolver_enable_vanitypath

    @property
    def resource_resolver_vanitypath_max_entries(self) -> ConfigNodePropertyInteger:
        """Gets the resource_resolver_vanitypath_max_entries of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_vanitypath_max_entries of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._resource_resolver_vanitypath_max_entries

    @resource_resolver_vanitypath_max_entries.setter
    def resource_resolver_vanitypath_max_entries(self, resource_resolver_vanitypath_max_entries: ConfigNodePropertyInteger):
        """Sets the resource_resolver_vanitypath_max_entries of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_vanitypath_max_entries: The resource_resolver_vanitypath_max_entries of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_vanitypath_max_entries: ConfigNodePropertyInteger
        """

        self._resource_resolver_vanitypath_max_entries = resource_resolver_vanitypath_max_entries

    @property
    def resource_resolver_vanitypath_max_entries_startup(self) -> ConfigNodePropertyBoolean:
        """Gets the resource_resolver_vanitypath_max_entries_startup of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_vanitypath_max_entries_startup of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._resource_resolver_vanitypath_max_entries_startup

    @resource_resolver_vanitypath_max_entries_startup.setter
    def resource_resolver_vanitypath_max_entries_startup(self, resource_resolver_vanitypath_max_entries_startup: ConfigNodePropertyBoolean):
        """Sets the resource_resolver_vanitypath_max_entries_startup of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_vanitypath_max_entries_startup: The resource_resolver_vanitypath_max_entries_startup of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_vanitypath_max_entries_startup: ConfigNodePropertyBoolean
        """

        self._resource_resolver_vanitypath_max_entries_startup = resource_resolver_vanitypath_max_entries_startup

    @property
    def resource_resolver_vanitypath_bloomfilter_max_bytes(self) -> ConfigNodePropertyInteger:
        """Gets the resource_resolver_vanitypath_bloomfilter_max_bytes of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_vanitypath_bloomfilter_max_bytes of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._resource_resolver_vanitypath_bloomfilter_max_bytes

    @resource_resolver_vanitypath_bloomfilter_max_bytes.setter
    def resource_resolver_vanitypath_bloomfilter_max_bytes(self, resource_resolver_vanitypath_bloomfilter_max_bytes: ConfigNodePropertyInteger):
        """Sets the resource_resolver_vanitypath_bloomfilter_max_bytes of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_vanitypath_bloomfilter_max_bytes: The resource_resolver_vanitypath_bloomfilter_max_bytes of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_vanitypath_bloomfilter_max_bytes: ConfigNodePropertyInteger
        """

        self._resource_resolver_vanitypath_bloomfilter_max_bytes = resource_resolver_vanitypath_bloomfilter_max_bytes

    @property
    def resource_resolver_optimize_alias_resolution(self) -> ConfigNodePropertyBoolean:
        """Gets the resource_resolver_optimize_alias_resolution of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_optimize_alias_resolution of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._resource_resolver_optimize_alias_resolution

    @resource_resolver_optimize_alias_resolution.setter
    def resource_resolver_optimize_alias_resolution(self, resource_resolver_optimize_alias_resolution: ConfigNodePropertyBoolean):
        """Sets the resource_resolver_optimize_alias_resolution of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_optimize_alias_resolution: The resource_resolver_optimize_alias_resolution of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_optimize_alias_resolution: ConfigNodePropertyBoolean
        """

        self._resource_resolver_optimize_alias_resolution = resource_resolver_optimize_alias_resolution

    @property
    def resource_resolver_vanitypath_whitelist(self) -> ConfigNodePropertyArray:
        """Gets the resource_resolver_vanitypath_whitelist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_vanitypath_whitelist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._resource_resolver_vanitypath_whitelist

    @resource_resolver_vanitypath_whitelist.setter
    def resource_resolver_vanitypath_whitelist(self, resource_resolver_vanitypath_whitelist: ConfigNodePropertyArray):
        """Sets the resource_resolver_vanitypath_whitelist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_vanitypath_whitelist: The resource_resolver_vanitypath_whitelist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_vanitypath_whitelist: ConfigNodePropertyArray
        """

        self._resource_resolver_vanitypath_whitelist = resource_resolver_vanitypath_whitelist

    @property
    def resource_resolver_vanitypath_blacklist(self) -> ConfigNodePropertyArray:
        """Gets the resource_resolver_vanitypath_blacklist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_vanitypath_blacklist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._resource_resolver_vanitypath_blacklist

    @resource_resolver_vanitypath_blacklist.setter
    def resource_resolver_vanitypath_blacklist(self, resource_resolver_vanitypath_blacklist: ConfigNodePropertyArray):
        """Sets the resource_resolver_vanitypath_blacklist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_vanitypath_blacklist: The resource_resolver_vanitypath_blacklist of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_vanitypath_blacklist: ConfigNodePropertyArray
        """

        self._resource_resolver_vanitypath_blacklist = resource_resolver_vanitypath_blacklist

    @property
    def resource_resolver_vanity_precedence(self) -> ConfigNodePropertyBoolean:
        """Gets the resource_resolver_vanity_precedence of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_vanity_precedence of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._resource_resolver_vanity_precedence

    @resource_resolver_vanity_precedence.setter
    def resource_resolver_vanity_precedence(self, resource_resolver_vanity_precedence: ConfigNodePropertyBoolean):
        """Sets the resource_resolver_vanity_precedence of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_vanity_precedence: The resource_resolver_vanity_precedence of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_vanity_precedence: ConfigNodePropertyBoolean
        """

        self._resource_resolver_vanity_precedence = resource_resolver_vanity_precedence

    @property
    def resource_resolver_providerhandling_paranoid(self) -> ConfigNodePropertyBoolean:
        """Gets the resource_resolver_providerhandling_paranoid of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_providerhandling_paranoid of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._resource_resolver_providerhandling_paranoid

    @resource_resolver_providerhandling_paranoid.setter
    def resource_resolver_providerhandling_paranoid(self, resource_resolver_providerhandling_paranoid: ConfigNodePropertyBoolean):
        """Sets the resource_resolver_providerhandling_paranoid of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_providerhandling_paranoid: The resource_resolver_providerhandling_paranoid of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_providerhandling_paranoid: ConfigNodePropertyBoolean
        """

        self._resource_resolver_providerhandling_paranoid = resource_resolver_providerhandling_paranoid

    @property
    def resource_resolver_log_closing(self) -> ConfigNodePropertyBoolean:
        """Gets the resource_resolver_log_closing of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_log_closing of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._resource_resolver_log_closing

    @resource_resolver_log_closing.setter
    def resource_resolver_log_closing(self, resource_resolver_log_closing: ConfigNodePropertyBoolean):
        """Sets the resource_resolver_log_closing of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_log_closing: The resource_resolver_log_closing of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_log_closing: ConfigNodePropertyBoolean
        """

        self._resource_resolver_log_closing = resource_resolver_log_closing

    @property
    def resource_resolver_log_unclosed(self) -> ConfigNodePropertyBoolean:
        """Gets the resource_resolver_log_unclosed of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :return: The resource_resolver_log_unclosed of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :rtype: ConfigNodePropertyBoolean
        """
        return self._resource_resolver_log_unclosed

    @resource_resolver_log_unclosed.setter
    def resource_resolver_log_unclosed(self, resource_resolver_log_unclosed: ConfigNodePropertyBoolean):
        """Sets the resource_resolver_log_unclosed of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.


        :param resource_resolver_log_unclosed: The resource_resolver_log_unclosed of this OrgApacheSlingJcrResourceInternalJcrResourceResolverFactoryImplProperties.
        :type resource_resolver_log_unclosed: ConfigNodePropertyBoolean
        """

        self._resource_resolver_log_unclosed = resource_resolver_log_unclosed
