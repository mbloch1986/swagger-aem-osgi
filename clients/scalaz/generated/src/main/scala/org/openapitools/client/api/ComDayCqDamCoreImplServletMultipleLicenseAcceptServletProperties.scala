package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties._

case class ComDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties (
  cqDamDrmEnable: Option[ConfigNodePropertyBoolean])

object ComDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties {
  import DateTimeCodecs._

  implicit val ComDayCqDamCoreImplServletMultipleLicenseAcceptServletPropertiesCodecJson: CodecJson[ComDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties] = CodecJson.derive[ComDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties]
  implicit val ComDayCqDamCoreImplServletMultipleLicenseAcceptServletPropertiesDecoder: EntityDecoder[ComDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties] = jsonOf[ComDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties]
  implicit val ComDayCqDamCoreImplServletMultipleLicenseAcceptServletPropertiesEncoder: EntityEncoder[ComDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties] = jsonEncoderOf[ComDayCqDamCoreImplServletMultipleLicenseAcceptServletProperties]
}
