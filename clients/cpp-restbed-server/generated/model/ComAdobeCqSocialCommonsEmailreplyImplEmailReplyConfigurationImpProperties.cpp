/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties()
{
    
}

ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::~ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties()
{
}

std::string ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailName() const
{
    return m_Email_name;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Email_name = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailCreatePostFromReply() const
{
    return m_Email_createPostFromReply;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailCreatePostFromReply(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Email_createPostFromReply = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailAddCommentIdTo() const
{
    return m_Email_addCommentIdTo;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailAddCommentIdTo(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Email_addCommentIdTo = value;
}
std::shared_ptr<ConfigNodePropertyInteger> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailSubjectMaximumLength() const
{
    return m_Email_subjectMaximumLength;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailSubjectMaximumLength(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Email_subjectMaximumLength = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailReplyToAddress() const
{
    return m_Email_replyToAddress;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailReplyToAddress(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Email_replyToAddress = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailReplyToDelimiter() const
{
    return m_Email_replyToDelimiter;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailReplyToDelimiter(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Email_replyToDelimiter = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailTrackerIdPrefixInSubject() const
{
    return m_Email_trackerIdPrefixInSubject;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailTrackerIdPrefixInSubject(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Email_trackerIdPrefixInSubject = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailTrackerIdPrefixInBody() const
{
    return m_Email_trackerIdPrefixInBody;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailTrackerIdPrefixInBody(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Email_trackerIdPrefixInBody = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailAsHTML() const
{
    return m_Email_asHTML;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailAsHTML(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_Email_asHTML = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailDefaultUserName() const
{
    return m_Email_defaultUserName;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailDefaultUserName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Email_defaultUserName = value;
}
std::shared_ptr<ConfigNodePropertyString> ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::getEmailTemplatesRootPath() const
{
    return m_Email_templates_rootPath;
}
void ComAdobeCqSocialCommonsEmailreplyImplEmailReplyConfigurationImpProperties::setEmailTemplatesRootPath(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Email_templates_rootPath = value;
}

}
}
}
}

