<?php
/**
 * ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("default.transport.agent-to-worker.prefix")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $defaultTransportAgentToWorkerPrefix;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("default.transport.agent-to-master.prefix")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $defaultTransportAgentToMasterPrefix;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("default.transport.input.package")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $defaultTransportInputPackage;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("default.transport.output.package")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $defaultTransportOutputPackage;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("default.transport.replication.synchronous")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $defaultTransportReplicationSynchronous;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("default.transport.contentpackage")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $defaultTransportContentpackage;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("offloading.transporter.default.enabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $offloadingTransporterDefaultEnabled;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->defaultTransportAgentToWorkerPrefix = isset($data['defaultTransportAgentToWorkerPrefix']) ? $data['defaultTransportAgentToWorkerPrefix'] : null;
        $this->defaultTransportAgentToMasterPrefix = isset($data['defaultTransportAgentToMasterPrefix']) ? $data['defaultTransportAgentToMasterPrefix'] : null;
        $this->defaultTransportInputPackage = isset($data['defaultTransportInputPackage']) ? $data['defaultTransportInputPackage'] : null;
        $this->defaultTransportOutputPackage = isset($data['defaultTransportOutputPackage']) ? $data['defaultTransportOutputPackage'] : null;
        $this->defaultTransportReplicationSynchronous = isset($data['defaultTransportReplicationSynchronous']) ? $data['defaultTransportReplicationSynchronous'] : null;
        $this->defaultTransportContentpackage = isset($data['defaultTransportContentpackage']) ? $data['defaultTransportContentpackage'] : null;
        $this->offloadingTransporterDefaultEnabled = isset($data['offloadingTransporterDefaultEnabled']) ? $data['offloadingTransporterDefaultEnabled'] : null;
    }

    /**
     * Gets defaultTransportAgentToWorkerPrefix.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDefaultTransportAgentToWorkerPrefix()
    {
        return $this->defaultTransportAgentToWorkerPrefix;
    }

    /**
     * Sets defaultTransportAgentToWorkerPrefix.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $defaultTransportAgentToWorkerPrefix
     *
     * @return $this
     */
    public function setDefaultTransportAgentToWorkerPrefix(ConfigNodePropertyString $defaultTransportAgentToWorkerPrefix = null)
    {
        $this->defaultTransportAgentToWorkerPrefix = $defaultTransportAgentToWorkerPrefix;

        return $this;
    }

    /**
     * Gets defaultTransportAgentToMasterPrefix.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDefaultTransportAgentToMasterPrefix()
    {
        return $this->defaultTransportAgentToMasterPrefix;
    }

    /**
     * Sets defaultTransportAgentToMasterPrefix.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $defaultTransportAgentToMasterPrefix
     *
     * @return $this
     */
    public function setDefaultTransportAgentToMasterPrefix(ConfigNodePropertyString $defaultTransportAgentToMasterPrefix = null)
    {
        $this->defaultTransportAgentToMasterPrefix = $defaultTransportAgentToMasterPrefix;

        return $this;
    }

    /**
     * Gets defaultTransportInputPackage.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDefaultTransportInputPackage()
    {
        return $this->defaultTransportInputPackage;
    }

    /**
     * Sets defaultTransportInputPackage.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $defaultTransportInputPackage
     *
     * @return $this
     */
    public function setDefaultTransportInputPackage(ConfigNodePropertyString $defaultTransportInputPackage = null)
    {
        $this->defaultTransportInputPackage = $defaultTransportInputPackage;

        return $this;
    }

    /**
     * Gets defaultTransportOutputPackage.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getDefaultTransportOutputPackage()
    {
        return $this->defaultTransportOutputPackage;
    }

    /**
     * Sets defaultTransportOutputPackage.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $defaultTransportOutputPackage
     *
     * @return $this
     */
    public function setDefaultTransportOutputPackage(ConfigNodePropertyString $defaultTransportOutputPackage = null)
    {
        $this->defaultTransportOutputPackage = $defaultTransportOutputPackage;

        return $this;
    }

    /**
     * Gets defaultTransportReplicationSynchronous.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getDefaultTransportReplicationSynchronous()
    {
        return $this->defaultTransportReplicationSynchronous;
    }

    /**
     * Sets defaultTransportReplicationSynchronous.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $defaultTransportReplicationSynchronous
     *
     * @return $this
     */
    public function setDefaultTransportReplicationSynchronous(ConfigNodePropertyBoolean $defaultTransportReplicationSynchronous = null)
    {
        $this->defaultTransportReplicationSynchronous = $defaultTransportReplicationSynchronous;

        return $this;
    }

    /**
     * Gets defaultTransportContentpackage.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getDefaultTransportContentpackage()
    {
        return $this->defaultTransportContentpackage;
    }

    /**
     * Sets defaultTransportContentpackage.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $defaultTransportContentpackage
     *
     * @return $this
     */
    public function setDefaultTransportContentpackage(ConfigNodePropertyBoolean $defaultTransportContentpackage = null)
    {
        $this->defaultTransportContentpackage = $defaultTransportContentpackage;

        return $this;
    }

    /**
     * Gets offloadingTransporterDefaultEnabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getOffloadingTransporterDefaultEnabled()
    {
        return $this->offloadingTransporterDefaultEnabled;
    }

    /**
     * Sets offloadingTransporterDefaultEnabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $offloadingTransporterDefaultEnabled
     *
     * @return $this
     */
    public function setOffloadingTransporterDefaultEnabled(ConfigNodePropertyBoolean $offloadingTransporterDefaultEnabled = null)
    {
        $this->offloadingTransporterDefaultEnabled = $offloadingTransporterDefaultEnabled;

        return $this;
    }
}


