/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrgApacheFelixJaasConfigurationFactoryProperties
    /// </summary>
    [DataContract]
    public partial class OrgApacheFelixJaasConfigurationFactoryProperties :  IEquatable<OrgApacheFelixJaasConfigurationFactoryProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrgApacheFelixJaasConfigurationFactoryProperties" /> class.
        /// </summary>
        /// <param name="jaasControlFlag">jaasControlFlag.</param>
        /// <param name="jaasRanking">jaasRanking.</param>
        /// <param name="jaasRealmName">jaasRealmName.</param>
        /// <param name="jaasClassname">jaasClassname.</param>
        /// <param name="jaasOptions">jaasOptions.</param>
        public OrgApacheFelixJaasConfigurationFactoryProperties(ConfigNodePropertyDropDown jaasControlFlag = default(ConfigNodePropertyDropDown), ConfigNodePropertyInteger jaasRanking = default(ConfigNodePropertyInteger), ConfigNodePropertyString jaasRealmName = default(ConfigNodePropertyString), ConfigNodePropertyString jaasClassname = default(ConfigNodePropertyString), ConfigNodePropertyArray jaasOptions = default(ConfigNodePropertyArray))
        {
            this.JaasControlFlag = jaasControlFlag;
            this.JaasRanking = jaasRanking;
            this.JaasRealmName = jaasRealmName;
            this.JaasClassname = jaasClassname;
            this.JaasOptions = jaasOptions;
        }
        
        /// <summary>
        /// Gets or Sets JaasControlFlag
        /// </summary>
        [DataMember(Name="jaas.controlFlag", EmitDefaultValue=false)]
        public ConfigNodePropertyDropDown JaasControlFlag { get; set; }

        /// <summary>
        /// Gets or Sets JaasRanking
        /// </summary>
        [DataMember(Name="jaas.ranking", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger JaasRanking { get; set; }

        /// <summary>
        /// Gets or Sets JaasRealmName
        /// </summary>
        [DataMember(Name="jaas.realmName", EmitDefaultValue=false)]
        public ConfigNodePropertyString JaasRealmName { get; set; }

        /// <summary>
        /// Gets or Sets JaasClassname
        /// </summary>
        [DataMember(Name="jaas.classname", EmitDefaultValue=false)]
        public ConfigNodePropertyString JaasClassname { get; set; }

        /// <summary>
        /// Gets or Sets JaasOptions
        /// </summary>
        [DataMember(Name="jaas.options", EmitDefaultValue=false)]
        public ConfigNodePropertyArray JaasOptions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrgApacheFelixJaasConfigurationFactoryProperties {\n");
            sb.Append("  JaasControlFlag: ").Append(JaasControlFlag).Append("\n");
            sb.Append("  JaasRanking: ").Append(JaasRanking).Append("\n");
            sb.Append("  JaasRealmName: ").Append(JaasRealmName).Append("\n");
            sb.Append("  JaasClassname: ").Append(JaasClassname).Append("\n");
            sb.Append("  JaasOptions: ").Append(JaasOptions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrgApacheFelixJaasConfigurationFactoryProperties);
        }

        /// <summary>
        /// Returns true if OrgApacheFelixJaasConfigurationFactoryProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of OrgApacheFelixJaasConfigurationFactoryProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrgApacheFelixJaasConfigurationFactoryProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.JaasControlFlag == input.JaasControlFlag ||
                    (this.JaasControlFlag != null &&
                    this.JaasControlFlag.Equals(input.JaasControlFlag))
                ) && 
                (
                    this.JaasRanking == input.JaasRanking ||
                    (this.JaasRanking != null &&
                    this.JaasRanking.Equals(input.JaasRanking))
                ) && 
                (
                    this.JaasRealmName == input.JaasRealmName ||
                    (this.JaasRealmName != null &&
                    this.JaasRealmName.Equals(input.JaasRealmName))
                ) && 
                (
                    this.JaasClassname == input.JaasClassname ||
                    (this.JaasClassname != null &&
                    this.JaasClassname.Equals(input.JaasClassname))
                ) && 
                (
                    this.JaasOptions == input.JaasOptions ||
                    (this.JaasOptions != null &&
                    this.JaasOptions.Equals(input.JaasOptions))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.JaasControlFlag != null)
                    hashCode = hashCode * 59 + this.JaasControlFlag.GetHashCode();
                if (this.JaasRanking != null)
                    hashCode = hashCode * 59 + this.JaasRanking.GetHashCode();
                if (this.JaasRealmName != null)
                    hashCode = hashCode * 59 + this.JaasRealmName.GetHashCode();
                if (this.JaasClassname != null)
                    hashCode = hashCode * 59 + this.JaasClassname.GetHashCode();
                if (this.JaasOptions != null)
                    hashCode = hashCode * 59 + this.JaasOptions.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
