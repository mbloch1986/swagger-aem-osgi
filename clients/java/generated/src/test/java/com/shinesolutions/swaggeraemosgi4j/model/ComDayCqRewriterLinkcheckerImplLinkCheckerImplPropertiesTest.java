/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties
 */
public class ComDayCqRewriterLinkcheckerImplLinkCheckerImplPropertiesTest {
    private final ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties model = new ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties();

    /**
     * Model tests for ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties
     */
    @Test
    public void testComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties() {
        // TODO: test ComDayCqRewriterLinkcheckerImplLinkCheckerImplProperties
    }

    /**
     * Test the property 'schedulerPeriod'
     */
    @Test
    public void schedulerPeriodTest() {
        // TODO: test schedulerPeriod
    }

    /**
     * Test the property 'schedulerConcurrent'
     */
    @Test
    public void schedulerConcurrentTest() {
        // TODO: test schedulerConcurrent
    }

    /**
     * Test the property 'serviceBadLinkToleranceInterval'
     */
    @Test
    public void serviceBadLinkToleranceIntervalTest() {
        // TODO: test serviceBadLinkToleranceInterval
    }

    /**
     * Test the property 'serviceCheckOverridePatterns'
     */
    @Test
    public void serviceCheckOverridePatternsTest() {
        // TODO: test serviceCheckOverridePatterns
    }

    /**
     * Test the property 'serviceCacheBrokenInternalLinks'
     */
    @Test
    public void serviceCacheBrokenInternalLinksTest() {
        // TODO: test serviceCacheBrokenInternalLinks
    }

    /**
     * Test the property 'serviceSpecialLinkPrefix'
     */
    @Test
    public void serviceSpecialLinkPrefixTest() {
        // TODO: test serviceSpecialLinkPrefix
    }

    /**
     * Test the property 'serviceSpecialLinkPatterns'
     */
    @Test
    public void serviceSpecialLinkPatternsTest() {
        // TODO: test serviceSpecialLinkPatterns
    }

}
