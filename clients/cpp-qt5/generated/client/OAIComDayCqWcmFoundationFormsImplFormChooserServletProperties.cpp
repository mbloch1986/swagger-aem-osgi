/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties() {
    init();
}

OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::~OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::init() {
    service_name = new OAIConfigNodePropertyString();
    m_service_name_isSet = false;
    sling_servlet_resource_types = new OAIConfigNodePropertyString();
    m_sling_servlet_resource_types_isSet = false;
    sling_servlet_selectors = new OAIConfigNodePropertyString();
    m_sling_servlet_selectors_isSet = false;
    sling_servlet_methods = new OAIConfigNodePropertyArray();
    m_sling_servlet_methods_isSet = false;
    forms_formchooserservlet_advansesearch_require = new OAIConfigNodePropertyBoolean();
    m_forms_formchooserservlet_advansesearch_require_isSet = false;
}

void
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::cleanup() {
    if(service_name != nullptr) { 
        delete service_name;
    }
    if(sling_servlet_resource_types != nullptr) { 
        delete sling_servlet_resource_types;
    }
    if(sling_servlet_selectors != nullptr) { 
        delete sling_servlet_selectors;
    }
    if(sling_servlet_methods != nullptr) { 
        delete sling_servlet_methods;
    }
    if(forms_formchooserservlet_advansesearch_require != nullptr) { 
        delete forms_formchooserservlet_advansesearch_require;
    }
}

OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties*
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&service_name, pJson["service.name"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&sling_servlet_resource_types, pJson["sling.servlet.resourceTypes"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&sling_servlet_selectors, pJson["sling.servlet.selectors"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&sling_servlet_methods, pJson["sling.servlet.methods"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&forms_formchooserservlet_advansesearch_require, pJson["forms.formchooserservlet.advansesearch.require"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
}

QString
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::asJsonObject() {
    QJsonObject obj;
    if((service_name != nullptr) && (service_name->isSet())){
        toJsonValue(QString("service.name"), service_name, obj, QString("OAIConfigNodePropertyString"));
    }
    if((sling_servlet_resource_types != nullptr) && (sling_servlet_resource_types->isSet())){
        toJsonValue(QString("sling.servlet.resourceTypes"), sling_servlet_resource_types, obj, QString("OAIConfigNodePropertyString"));
    }
    if((sling_servlet_selectors != nullptr) && (sling_servlet_selectors->isSet())){
        toJsonValue(QString("sling.servlet.selectors"), sling_servlet_selectors, obj, QString("OAIConfigNodePropertyString"));
    }
    if((sling_servlet_methods != nullptr) && (sling_servlet_methods->isSet())){
        toJsonValue(QString("sling.servlet.methods"), sling_servlet_methods, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((forms_formchooserservlet_advansesearch_require != nullptr) && (forms_formchooserservlet_advansesearch_require->isSet())){
        toJsonValue(QString("forms.formchooserservlet.advansesearch.require"), forms_formchooserservlet_advansesearch_require, obj, QString("OAIConfigNodePropertyBoolean"));
    }

    return obj;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::getServiceName() {
    return service_name;
}
void
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::setServiceName(OAIConfigNodePropertyString* service_name) {
    this->service_name = service_name;
    this->m_service_name_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::getSlingServletResourceTypes() {
    return sling_servlet_resource_types;
}
void
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::setSlingServletResourceTypes(OAIConfigNodePropertyString* sling_servlet_resource_types) {
    this->sling_servlet_resource_types = sling_servlet_resource_types;
    this->m_sling_servlet_resource_types_isSet = true;
}

OAIConfigNodePropertyString*
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::getSlingServletSelectors() {
    return sling_servlet_selectors;
}
void
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::setSlingServletSelectors(OAIConfigNodePropertyString* sling_servlet_selectors) {
    this->sling_servlet_selectors = sling_servlet_selectors;
    this->m_sling_servlet_selectors_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::getSlingServletMethods() {
    return sling_servlet_methods;
}
void
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::setSlingServletMethods(OAIConfigNodePropertyArray* sling_servlet_methods) {
    this->sling_servlet_methods = sling_servlet_methods;
    this->m_sling_servlet_methods_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::getFormsFormchooserservletAdvansesearchRequire() {
    return forms_formchooserservlet_advansesearch_require;
}
void
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::setFormsFormchooserservletAdvansesearchRequire(OAIConfigNodePropertyBoolean* forms_formchooserservlet_advansesearch_require) {
    this->forms_formchooserservlet_advansesearch_require = forms_formchooserservlet_advansesearch_require;
    this->m_forms_formchooserservlet_advansesearch_require_isSet = true;
}


bool
OAIComDayCqWcmFoundationFormsImplFormChooserServletProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(service_name != nullptr && service_name->isSet()){ isObjectUpdated = true; break;}
        if(sling_servlet_resource_types != nullptr && sling_servlet_resource_types->isSet()){ isObjectUpdated = true; break;}
        if(sling_servlet_selectors != nullptr && sling_servlet_selectors->isSet()){ isObjectUpdated = true; break;}
        if(sling_servlet_methods != nullptr && sling_servlet_methods->isSet()){ isObjectUpdated = true; break;}
        if(forms_formchooserservlet_advansesearch_require != nullptr && forms_formchooserservlet_advansesearch_require->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

