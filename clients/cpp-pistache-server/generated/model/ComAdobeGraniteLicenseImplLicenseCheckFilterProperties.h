/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeGraniteLicenseImplLicenseCheckFilterProperties.h
 *
 * 
 */

#ifndef ComAdobeGraniteLicenseImplLicenseCheckFilterProperties_H_
#define ComAdobeGraniteLicenseImplLicenseCheckFilterProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeGraniteLicenseImplLicenseCheckFilterProperties
    : public ModelBase
{
public:
    ComAdobeGraniteLicenseImplLicenseCheckFilterProperties();
    virtual ~ComAdobeGraniteLicenseImplLicenseCheckFilterProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeGraniteLicenseImplLicenseCheckFilterProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getCheckInternval() const;
    void setCheckInternval(ConfigNodePropertyInteger const& value);
    bool checkInternvalIsSet() const;
    void unsetCheckInternval();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getExcludeIds() const;
    void setExcludeIds(ConfigNodePropertyArray const& value);
    bool excludeIdsIsSet() const;
    void unsetExcludeIds();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getEncryptPing() const;
    void setEncryptPing(ConfigNodePropertyBoolean const& value);
    bool encryptPingIsSet() const;
    void unsetEncryptPing();

protected:
    ConfigNodePropertyInteger m_CheckInternval;
    bool m_CheckInternvalIsSet;
    ConfigNodePropertyArray m_ExcludeIds;
    bool m_ExcludeIdsIsSet;
    ConfigNodePropertyBoolean m_EncryptPing;
    bool m_EncryptPingIsSet;
};

}
}
}
}

#endif /* ComAdobeGraniteLicenseImplLicenseCheckFilterProperties_H_ */
