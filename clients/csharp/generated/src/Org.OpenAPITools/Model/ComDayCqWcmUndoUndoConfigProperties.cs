/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// ComDayCqWcmUndoUndoConfigProperties
    /// </summary>
    [DataContract]
    public partial class ComDayCqWcmUndoUndoConfigProperties :  IEquatable<ComDayCqWcmUndoUndoConfigProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComDayCqWcmUndoUndoConfigProperties" /> class.
        /// </summary>
        /// <param name="cqWcmUndoEnabled">cqWcmUndoEnabled.</param>
        /// <param name="cqWcmUndoPath">cqWcmUndoPath.</param>
        /// <param name="cqWcmUndoValidity">cqWcmUndoValidity.</param>
        /// <param name="cqWcmUndoSteps">cqWcmUndoSteps.</param>
        /// <param name="cqWcmUndoPersistence">cqWcmUndoPersistence.</param>
        /// <param name="cqWcmUndoPersistenceMode">cqWcmUndoPersistenceMode.</param>
        /// <param name="cqWcmUndoMarkermode">cqWcmUndoMarkermode.</param>
        /// <param name="cqWcmUndoWhitelist">cqWcmUndoWhitelist.</param>
        /// <param name="cqWcmUndoBlacklist">cqWcmUndoBlacklist.</param>
        public ComDayCqWcmUndoUndoConfigProperties(ConfigNodePropertyBoolean cqWcmUndoEnabled = default(ConfigNodePropertyBoolean), ConfigNodePropertyString cqWcmUndoPath = default(ConfigNodePropertyString), ConfigNodePropertyInteger cqWcmUndoValidity = default(ConfigNodePropertyInteger), ConfigNodePropertyInteger cqWcmUndoSteps = default(ConfigNodePropertyInteger), ConfigNodePropertyString cqWcmUndoPersistence = default(ConfigNodePropertyString), ConfigNodePropertyBoolean cqWcmUndoPersistenceMode = default(ConfigNodePropertyBoolean), ConfigNodePropertyString cqWcmUndoMarkermode = default(ConfigNodePropertyString), ConfigNodePropertyArray cqWcmUndoWhitelist = default(ConfigNodePropertyArray), ConfigNodePropertyArray cqWcmUndoBlacklist = default(ConfigNodePropertyArray))
        {
            this.CqWcmUndoEnabled = cqWcmUndoEnabled;
            this.CqWcmUndoPath = cqWcmUndoPath;
            this.CqWcmUndoValidity = cqWcmUndoValidity;
            this.CqWcmUndoSteps = cqWcmUndoSteps;
            this.CqWcmUndoPersistence = cqWcmUndoPersistence;
            this.CqWcmUndoPersistenceMode = cqWcmUndoPersistenceMode;
            this.CqWcmUndoMarkermode = cqWcmUndoMarkermode;
            this.CqWcmUndoWhitelist = cqWcmUndoWhitelist;
            this.CqWcmUndoBlacklist = cqWcmUndoBlacklist;
        }
        
        /// <summary>
        /// Gets or Sets CqWcmUndoEnabled
        /// </summary>
        [DataMember(Name="cq.wcm.undo.enabled", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean CqWcmUndoEnabled { get; set; }

        /// <summary>
        /// Gets or Sets CqWcmUndoPath
        /// </summary>
        [DataMember(Name="cq.wcm.undo.path", EmitDefaultValue=false)]
        public ConfigNodePropertyString CqWcmUndoPath { get; set; }

        /// <summary>
        /// Gets or Sets CqWcmUndoValidity
        /// </summary>
        [DataMember(Name="cq.wcm.undo.validity", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger CqWcmUndoValidity { get; set; }

        /// <summary>
        /// Gets or Sets CqWcmUndoSteps
        /// </summary>
        [DataMember(Name="cq.wcm.undo.steps", EmitDefaultValue=false)]
        public ConfigNodePropertyInteger CqWcmUndoSteps { get; set; }

        /// <summary>
        /// Gets or Sets CqWcmUndoPersistence
        /// </summary>
        [DataMember(Name="cq.wcm.undo.persistence", EmitDefaultValue=false)]
        public ConfigNodePropertyString CqWcmUndoPersistence { get; set; }

        /// <summary>
        /// Gets or Sets CqWcmUndoPersistenceMode
        /// </summary>
        [DataMember(Name="cq.wcm.undo.persistence.mode", EmitDefaultValue=false)]
        public ConfigNodePropertyBoolean CqWcmUndoPersistenceMode { get; set; }

        /// <summary>
        /// Gets or Sets CqWcmUndoMarkermode
        /// </summary>
        [DataMember(Name="cq.wcm.undo.markermode", EmitDefaultValue=false)]
        public ConfigNodePropertyString CqWcmUndoMarkermode { get; set; }

        /// <summary>
        /// Gets or Sets CqWcmUndoWhitelist
        /// </summary>
        [DataMember(Name="cq.wcm.undo.whitelist", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqWcmUndoWhitelist { get; set; }

        /// <summary>
        /// Gets or Sets CqWcmUndoBlacklist
        /// </summary>
        [DataMember(Name="cq.wcm.undo.blacklist", EmitDefaultValue=false)]
        public ConfigNodePropertyArray CqWcmUndoBlacklist { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ComDayCqWcmUndoUndoConfigProperties {\n");
            sb.Append("  CqWcmUndoEnabled: ").Append(CqWcmUndoEnabled).Append("\n");
            sb.Append("  CqWcmUndoPath: ").Append(CqWcmUndoPath).Append("\n");
            sb.Append("  CqWcmUndoValidity: ").Append(CqWcmUndoValidity).Append("\n");
            sb.Append("  CqWcmUndoSteps: ").Append(CqWcmUndoSteps).Append("\n");
            sb.Append("  CqWcmUndoPersistence: ").Append(CqWcmUndoPersistence).Append("\n");
            sb.Append("  CqWcmUndoPersistenceMode: ").Append(CqWcmUndoPersistenceMode).Append("\n");
            sb.Append("  CqWcmUndoMarkermode: ").Append(CqWcmUndoMarkermode).Append("\n");
            sb.Append("  CqWcmUndoWhitelist: ").Append(CqWcmUndoWhitelist).Append("\n");
            sb.Append("  CqWcmUndoBlacklist: ").Append(CqWcmUndoBlacklist).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ComDayCqWcmUndoUndoConfigProperties);
        }

        /// <summary>
        /// Returns true if ComDayCqWcmUndoUndoConfigProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of ComDayCqWcmUndoUndoConfigProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ComDayCqWcmUndoUndoConfigProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CqWcmUndoEnabled == input.CqWcmUndoEnabled ||
                    (this.CqWcmUndoEnabled != null &&
                    this.CqWcmUndoEnabled.Equals(input.CqWcmUndoEnabled))
                ) && 
                (
                    this.CqWcmUndoPath == input.CqWcmUndoPath ||
                    (this.CqWcmUndoPath != null &&
                    this.CqWcmUndoPath.Equals(input.CqWcmUndoPath))
                ) && 
                (
                    this.CqWcmUndoValidity == input.CqWcmUndoValidity ||
                    (this.CqWcmUndoValidity != null &&
                    this.CqWcmUndoValidity.Equals(input.CqWcmUndoValidity))
                ) && 
                (
                    this.CqWcmUndoSteps == input.CqWcmUndoSteps ||
                    (this.CqWcmUndoSteps != null &&
                    this.CqWcmUndoSteps.Equals(input.CqWcmUndoSteps))
                ) && 
                (
                    this.CqWcmUndoPersistence == input.CqWcmUndoPersistence ||
                    (this.CqWcmUndoPersistence != null &&
                    this.CqWcmUndoPersistence.Equals(input.CqWcmUndoPersistence))
                ) && 
                (
                    this.CqWcmUndoPersistenceMode == input.CqWcmUndoPersistenceMode ||
                    (this.CqWcmUndoPersistenceMode != null &&
                    this.CqWcmUndoPersistenceMode.Equals(input.CqWcmUndoPersistenceMode))
                ) && 
                (
                    this.CqWcmUndoMarkermode == input.CqWcmUndoMarkermode ||
                    (this.CqWcmUndoMarkermode != null &&
                    this.CqWcmUndoMarkermode.Equals(input.CqWcmUndoMarkermode))
                ) && 
                (
                    this.CqWcmUndoWhitelist == input.CqWcmUndoWhitelist ||
                    (this.CqWcmUndoWhitelist != null &&
                    this.CqWcmUndoWhitelist.Equals(input.CqWcmUndoWhitelist))
                ) && 
                (
                    this.CqWcmUndoBlacklist == input.CqWcmUndoBlacklist ||
                    (this.CqWcmUndoBlacklist != null &&
                    this.CqWcmUndoBlacklist.Equals(input.CqWcmUndoBlacklist))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CqWcmUndoEnabled != null)
                    hashCode = hashCode * 59 + this.CqWcmUndoEnabled.GetHashCode();
                if (this.CqWcmUndoPath != null)
                    hashCode = hashCode * 59 + this.CqWcmUndoPath.GetHashCode();
                if (this.CqWcmUndoValidity != null)
                    hashCode = hashCode * 59 + this.CqWcmUndoValidity.GetHashCode();
                if (this.CqWcmUndoSteps != null)
                    hashCode = hashCode * 59 + this.CqWcmUndoSteps.GetHashCode();
                if (this.CqWcmUndoPersistence != null)
                    hashCode = hashCode * 59 + this.CqWcmUndoPersistence.GetHashCode();
                if (this.CqWcmUndoPersistenceMode != null)
                    hashCode = hashCode * 59 + this.CqWcmUndoPersistenceMode.GetHashCode();
                if (this.CqWcmUndoMarkermode != null)
                    hashCode = hashCode * 59 + this.CqWcmUndoMarkermode.GetHashCode();
                if (this.CqWcmUndoWhitelist != null)
                    hashCode = hashCode * 59 + this.CqWcmUndoWhitelist.GetHashCode();
                if (this.CqWcmUndoBlacklist != null)
                    hashCode = hashCode * 59 + this.CqWcmUndoBlacklist.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
