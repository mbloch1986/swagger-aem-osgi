/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OAS-api/OAS-codegen.git
 * Do not edit the class manually.
 */

/**
 * OASOrgApacheSlingServletsPostImplSli
 */
public class OASOrgApacheSlingServletsPostImplSli implements OAS.MappedProperties {
    /**
     * Get servletPostDateFormats
     * @return servletPostDateFormats
     */
    public OASConfigNodePropertyArray servletPostDateFormats { get; set; }

    /**
     * Get servletPostNodeNameHints
     * @return servletPostNodeNameHints
     */
    public OASConfigNodePropertyArray servletPostNodeNameHints { get; set; }

    /**
     * Get servletPostNodeNameMaxLength
     * @return servletPostNodeNameMaxLength
     */
    public OASConfigNodePropertyInteger servletPostNodeNameMaxLength { get; set; }

    /**
     * Get servletPostCheckinNewVersionableNodes
     * @return servletPostCheckinNewVersionableNodes
     */
    public OASConfigNodePropertyBoolean servletPostCheckinNewVersionableNodes { get; set; }

    /**
     * Get servletPostAutoCheckout
     * @return servletPostAutoCheckout
     */
    public OASConfigNodePropertyBoolean servletPostAutoCheckout { get; set; }

    /**
     * Get servletPostAutoCheckin
     * @return servletPostAutoCheckin
     */
    public OASConfigNodePropertyBoolean servletPostAutoCheckin { get; set; }

    /**
     * Get servletPostIgnorePattern
     * @return servletPostIgnorePattern
     */
    public OASConfigNodePropertyString servletPostIgnorePattern { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'servlet.post.dateFormats' => 'servletPostDateFormats',
        'servlet.post.nodeNameHints' => 'servletPostNodeNameHints',
        'servlet.post.nodeNameMaxLength' => 'servletPostNodeNameMaxLength',
        'servlet.post.checkinNewVersionableNodes' => 'servletPostCheckinNewVersionableNodes',
        'servlet.post.autoCheckout' => 'servletPostAutoCheckout',
        'servlet.post.autoCheckin' => 'servletPostAutoCheckin',
        'servlet.post.ignorePattern' => 'servletPostIgnorePattern'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASOrgApacheSlingServletsPostImplSli getExample() {
        OASOrgApacheSlingServletsPostImplSli orgApacheSlingServletsPostImplSlingPostServletProperties = new OASOrgApacheSlingServletsPostImplSli();
          orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostDateFormats = OASConfigNodePropertyArray.getExample();
          orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostNodeNameHints = OASConfigNodePropertyArray.getExample();
          orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostNodeNameMaxLength = OASConfigNodePropertyInteger.getExample();
          orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostCheckinNewVersionableNodes = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostAutoCheckout = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostAutoCheckin = OASConfigNodePropertyBoolean.getExample();
          orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostIgnorePattern = OASConfigNodePropertyString.getExample();
        return orgApacheSlingServletsPostImplSlingPostServletProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASOrgApacheSlingServletsPostImplSli) {           
            OASOrgApacheSlingServletsPostImplSli orgApacheSlingServletsPostImplSlingPostServletProperties = (OASOrgApacheSlingServletsPostImplSli) obj;
            return this.servletPostDateFormats == orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostDateFormats
                && this.servletPostNodeNameHints == orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostNodeNameHints
                && this.servletPostNodeNameMaxLength == orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostNodeNameMaxLength
                && this.servletPostCheckinNewVersionableNodes == orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostCheckinNewVersionableNodes
                && this.servletPostAutoCheckout == orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostAutoCheckout
                && this.servletPostAutoCheckin == orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostAutoCheckin
                && this.servletPostIgnorePattern == orgApacheSlingServletsPostImplSlingPostServletProperties.servletPostIgnorePattern;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (servletPostDateFormats == null ? 0 : System.hashCode(servletPostDateFormats));
        hashCode = (17 * hashCode) + (servletPostNodeNameHints == null ? 0 : System.hashCode(servletPostNodeNameHints));
        hashCode = (17 * hashCode) + (servletPostNodeNameMaxLength == null ? 0 : System.hashCode(servletPostNodeNameMaxLength));
        hashCode = (17 * hashCode) + (servletPostCheckinNewVersionableNodes == null ? 0 : System.hashCode(servletPostCheckinNewVersionableNodes));
        hashCode = (17 * hashCode) + (servletPostAutoCheckout == null ? 0 : System.hashCode(servletPostAutoCheckout));
        hashCode = (17 * hashCode) + (servletPostAutoCheckin == null ? 0 : System.hashCode(servletPostAutoCheckin));
        hashCode = (17 * hashCode) + (servletPostIgnorePattern == null ? 0 : System.hashCode(servletPostIgnorePattern));
        return hashCode;
    }
}

