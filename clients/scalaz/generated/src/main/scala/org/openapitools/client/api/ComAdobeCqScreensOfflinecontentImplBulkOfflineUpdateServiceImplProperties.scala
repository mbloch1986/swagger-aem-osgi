package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties._

case class ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties (
  comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProjectPath: Option[ConfigNodePropertyArray],
comAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplScheduleFrequency: Option[ConfigNodePropertyString])

object ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties {
  import DateTimeCodecs._

  implicit val ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplPropertiesCodecJson: CodecJson[ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties] = CodecJson.derive[ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties]
  implicit val ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplPropertiesDecoder: EntityDecoder[ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties] = jsonOf[ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties]
  implicit val ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplPropertiesEncoder: EntityEncoder[ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties] = jsonEncoderOf[ComAdobeCqScreensOfflinecontentImplBulkOfflineUpdateServiceImplProperties]
}
