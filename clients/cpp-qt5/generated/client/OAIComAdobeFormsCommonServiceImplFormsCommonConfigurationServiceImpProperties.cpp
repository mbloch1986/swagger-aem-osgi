/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties() {
    init();
}

OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::~OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties() {
    this->cleanup();
}

void
OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::init() {
    temp_storage_config = new OAIConfigNodePropertyDropDown();
    m_temp_storage_config_isSet = false;
}

void
OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::cleanup() {
    if(temp_storage_config != nullptr) { 
        delete temp_storage_config;
    }
}

OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties*
OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&temp_storage_config, pJson["tempStorageConfig"], "OAIConfigNodePropertyDropDown", "OAIConfigNodePropertyDropDown");
    
}

QString
OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::asJsonObject() {
    QJsonObject obj;
    if((temp_storage_config != nullptr) && (temp_storage_config->isSet())){
        toJsonValue(QString("tempStorageConfig"), temp_storage_config, obj, QString("OAIConfigNodePropertyDropDown"));
    }

    return obj;
}

OAIConfigNodePropertyDropDown*
OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::getTempStorageConfig() {
    return temp_storage_config;
}
void
OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::setTempStorageConfig(OAIConfigNodePropertyDropDown* temp_storage_config) {
    this->temp_storage_config = temp_storage_config;
    this->m_temp_storage_config_isSet = true;
}


bool
OAIComAdobeFormsCommonServiceImplFormsCommonConfigurationServiceImpProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(temp_storage_config != nullptr && temp_storage_config->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

