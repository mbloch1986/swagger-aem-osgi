package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo._

case class ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplProperties])

object ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo {
  import DateTimeCodecs._

  implicit val ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfoCodecJson: CodecJson[ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo] = CodecJson.derive[ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo]
  implicit val ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfoDecoder: EntityDecoder[ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo] = jsonOf[ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo]
  implicit val ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfoEncoder: EntityEncoder[ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo] = jsonEncoderOf[ComAdobeCqScreensMonitoringImplScreensMonitoringServiceImplInfo]
}
