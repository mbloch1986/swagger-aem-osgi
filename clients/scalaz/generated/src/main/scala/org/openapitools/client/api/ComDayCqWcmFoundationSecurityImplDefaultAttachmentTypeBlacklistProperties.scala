package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties._

case class ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties (
  defaultAttachmentTypeBlacklist: Option[ConfigNodePropertyArray],
baselineAttachmentTypeBlacklist: Option[ConfigNodePropertyArray])

object ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties {
  import DateTimeCodecs._

  implicit val ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistPropertiesCodecJson: CodecJson[ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties] = CodecJson.derive[ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties]
  implicit val ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistPropertiesDecoder: EntityDecoder[ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties] = jsonOf[ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties]
  implicit val ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistPropertiesEncoder: EntityEncoder[ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties] = jsonEncoderOf[ComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties]
}
