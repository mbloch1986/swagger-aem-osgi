# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_array import ConfigNodePropertyArray  # noqa: F401,E501
from openapi_server.models.config_node_property_integer import ConfigNodePropertyInteger  # noqa: F401,E501
from openapi_server import util


class ComAdobeGraniteLoggingImplLogAnalyserImplProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages_queue_size: ConfigNodePropertyInteger=None, logger_config: ConfigNodePropertyArray=None, messages_size: ConfigNodePropertyInteger=None):  # noqa: E501
        """ComAdobeGraniteLoggingImplLogAnalyserImplProperties - a model defined in OpenAPI

        :param messages_queue_size: The messages_queue_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.  # noqa: E501
        :type messages_queue_size: ConfigNodePropertyInteger
        :param logger_config: The logger_config of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.  # noqa: E501
        :type logger_config: ConfigNodePropertyArray
        :param messages_size: The messages_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.  # noqa: E501
        :type messages_size: ConfigNodePropertyInteger
        """
        self.openapi_types = {
            'messages_queue_size': ConfigNodePropertyInteger,
            'logger_config': ConfigNodePropertyArray,
            'messages_size': ConfigNodePropertyInteger
        }

        self.attribute_map = {
            'messages_queue_size': 'messages.queue.size',
            'logger_config': 'logger.config',
            'messages_size': 'messages.size'
        }

        self._messages_queue_size = messages_queue_size
        self._logger_config = logger_config
        self._messages_size = messages_size

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeGraniteLoggingImplLogAnalyserImplProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeGraniteLoggingImplLogAnalyserImplProperties of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.  # noqa: E501
        :rtype: ComAdobeGraniteLoggingImplLogAnalyserImplProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages_queue_size(self) -> ConfigNodePropertyInteger:
        """Gets the messages_queue_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.


        :return: The messages_queue_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._messages_queue_size

    @messages_queue_size.setter
    def messages_queue_size(self, messages_queue_size: ConfigNodePropertyInteger):
        """Sets the messages_queue_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.


        :param messages_queue_size: The messages_queue_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.
        :type messages_queue_size: ConfigNodePropertyInteger
        """

        self._messages_queue_size = messages_queue_size

    @property
    def logger_config(self) -> ConfigNodePropertyArray:
        """Gets the logger_config of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.


        :return: The logger_config of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.
        :rtype: ConfigNodePropertyArray
        """
        return self._logger_config

    @logger_config.setter
    def logger_config(self, logger_config: ConfigNodePropertyArray):
        """Sets the logger_config of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.


        :param logger_config: The logger_config of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.
        :type logger_config: ConfigNodePropertyArray
        """

        self._logger_config = logger_config

    @property
    def messages_size(self) -> ConfigNodePropertyInteger:
        """Gets the messages_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.


        :return: The messages_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.
        :rtype: ConfigNodePropertyInteger
        """
        return self._messages_size

    @messages_size.setter
    def messages_size(self, messages_size: ConfigNodePropertyInteger):
        """Sets the messages_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.


        :param messages_size: The messages_size of this ComAdobeGraniteLoggingImplLogAnalyserImplProperties.
        :type messages_size: ConfigNodePropertyInteger
        """

        self._messages_size = messages_size
