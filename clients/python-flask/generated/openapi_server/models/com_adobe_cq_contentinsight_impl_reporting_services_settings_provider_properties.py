# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config_node_property_string import ConfigNodePropertyString  # noqa: F401,E501
from openapi_server import util


class ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reportingservices_url: ConfigNodePropertyString=None):  # noqa: E501
        """ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties - a model defined in OpenAPI

        :param reportingservices_url: The reportingservices_url of this ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties.  # noqa: E501
        :type reportingservices_url: ConfigNodePropertyString
        """
        self.openapi_types = {
            'reportingservices_url': ConfigNodePropertyString
        }

        self.attribute_map = {
            'reportingservices_url': 'reportingservices.url'
        }

        self._reportingservices_url = reportingservices_url

    @classmethod
    def from_dict(cls, dikt) -> 'ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The comAdobeCqContentinsightImplReportingServicesSettingsProviderProperties of this ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties.  # noqa: E501
        :rtype: ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reportingservices_url(self) -> ConfigNodePropertyString:
        """Gets the reportingservices_url of this ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties.


        :return: The reportingservices_url of this ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties.
        :rtype: ConfigNodePropertyString
        """
        return self._reportingservices_url

    @reportingservices_url.setter
    def reportingservices_url(self, reportingservices_url: ConfigNodePropertyString):
        """Sets the reportingservices_url of this ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties.


        :param reportingservices_url: The reportingservices_url of this ComAdobeCqContentinsightImplReportingServicesSettingsProviderProperties.
        :type reportingservices_url: ConfigNodePropertyString
        """

        self._reportingservices_url = reportingservices_url
