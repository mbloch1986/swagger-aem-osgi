/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties.h
 *
 * 
 */

#ifndef ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties_H_
#define ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyArray.h"
#include "ConfigNodePropertyString.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties
    : public ModelBase
{
public:
    ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties();
    virtual ~ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getPortalOutboxes() const;
    void setPortalOutboxes(ConfigNodePropertyArray const& value);
    bool portalOutboxesIsSet() const;
    void unsetPortal_outboxes();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getDraftDataService() const;
    void setDraftDataService(ConfigNodePropertyString const& value);
    bool draftDataServiceIsSet() const;
    void unsetDraft_data_service();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getDraftMetadataService() const;
    void setDraftMetadataService(ConfigNodePropertyString const& value);
    bool draftMetadataServiceIsSet() const;
    void unsetDraft_metadata_service();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSubmitDataService() const;
    void setSubmitDataService(ConfigNodePropertyString const& value);
    bool submitDataServiceIsSet() const;
    void unsetSubmit_data_service();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getSubmitMetadataService() const;
    void setSubmitMetadataService(ConfigNodePropertyString const& value);
    bool submitMetadataServiceIsSet() const;
    void unsetSubmit_metadata_service();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getPendingSignDataService() const;
    void setPendingSignDataService(ConfigNodePropertyString const& value);
    bool pendingSignDataServiceIsSet() const;
    void unsetPendingSign_data_service();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyString getPendingSignMetadataService() const;
    void setPendingSignMetadataService(ConfigNodePropertyString const& value);
    bool pendingSignMetadataServiceIsSet() const;
    void unsetPendingSign_metadata_service();

protected:
    ConfigNodePropertyArray m_Portal_outboxes;
    bool m_Portal_outboxesIsSet;
    ConfigNodePropertyString m_Draft_data_service;
    bool m_Draft_data_serviceIsSet;
    ConfigNodePropertyString m_Draft_metadata_service;
    bool m_Draft_metadata_serviceIsSet;
    ConfigNodePropertyString m_Submit_data_service;
    bool m_Submit_data_serviceIsSet;
    ConfigNodePropertyString m_Submit_metadata_service;
    bool m_Submit_metadata_serviceIsSet;
    ConfigNodePropertyString m_PendingSign_data_service;
    bool m_PendingSign_data_serviceIsSet;
    ConfigNodePropertyString m_PendingSign_metadata_service;
    bool m_PendingSign_metadata_serviceIsSet;
};

}
}
}
}

#endif /* ComAdobeFdFpConfigFormsPortalDraftsandSubmissionConfigServiceProperties_H_ */
