<?php
/**
 * ComAdobeGraniteRepositoryImplCommitStatsConfigProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the ComAdobeGraniteRepositoryImplCommitStatsConfigProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class ComAdobeGraniteRepositoryImplCommitStatsConfigProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("enabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $enabled;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("intervalSeconds")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $intervalSeconds;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("commitsPerIntervalThreshold")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $commitsPerIntervalThreshold;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("maxLocationLength")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $maxLocationLength;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("maxDetailsShown")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $maxDetailsShown;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("minDetailsPercentage")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $minDetailsPercentage;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("threadMatchers")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $threadMatchers;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("maxGreedyDepth")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $maxGreedyDepth;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("greedyStackMatchers")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $greedyStackMatchers;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("stackFilters")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $stackFilters;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("stackMatchers")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $stackMatchers;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("stackCategorizers")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $stackCategorizers;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("stackShorteners")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $stackShorteners;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->enabled = isset($data['enabled']) ? $data['enabled'] : null;
        $this->intervalSeconds = isset($data['intervalSeconds']) ? $data['intervalSeconds'] : null;
        $this->commitsPerIntervalThreshold = isset($data['commitsPerIntervalThreshold']) ? $data['commitsPerIntervalThreshold'] : null;
        $this->maxLocationLength = isset($data['maxLocationLength']) ? $data['maxLocationLength'] : null;
        $this->maxDetailsShown = isset($data['maxDetailsShown']) ? $data['maxDetailsShown'] : null;
        $this->minDetailsPercentage = isset($data['minDetailsPercentage']) ? $data['minDetailsPercentage'] : null;
        $this->threadMatchers = isset($data['threadMatchers']) ? $data['threadMatchers'] : null;
        $this->maxGreedyDepth = isset($data['maxGreedyDepth']) ? $data['maxGreedyDepth'] : null;
        $this->greedyStackMatchers = isset($data['greedyStackMatchers']) ? $data['greedyStackMatchers'] : null;
        $this->stackFilters = isset($data['stackFilters']) ? $data['stackFilters'] : null;
        $this->stackMatchers = isset($data['stackMatchers']) ? $data['stackMatchers'] : null;
        $this->stackCategorizers = isset($data['stackCategorizers']) ? $data['stackCategorizers'] : null;
        $this->stackShorteners = isset($data['stackShorteners']) ? $data['stackShorteners'] : null;
    }

    /**
     * Gets enabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * Sets enabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $enabled
     *
     * @return $this
     */
    public function setEnabled(ConfigNodePropertyBoolean $enabled = null)
    {
        $this->enabled = $enabled;

        return $this;
    }

    /**
     * Gets intervalSeconds.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getIntervalSeconds()
    {
        return $this->intervalSeconds;
    }

    /**
     * Sets intervalSeconds.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $intervalSeconds
     *
     * @return $this
     */
    public function setIntervalSeconds(ConfigNodePropertyInteger $intervalSeconds = null)
    {
        $this->intervalSeconds = $intervalSeconds;

        return $this;
    }

    /**
     * Gets commitsPerIntervalThreshold.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getCommitsPerIntervalThreshold()
    {
        return $this->commitsPerIntervalThreshold;
    }

    /**
     * Sets commitsPerIntervalThreshold.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $commitsPerIntervalThreshold
     *
     * @return $this
     */
    public function setCommitsPerIntervalThreshold(ConfigNodePropertyInteger $commitsPerIntervalThreshold = null)
    {
        $this->commitsPerIntervalThreshold = $commitsPerIntervalThreshold;

        return $this;
    }

    /**
     * Gets maxLocationLength.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMaxLocationLength()
    {
        return $this->maxLocationLength;
    }

    /**
     * Sets maxLocationLength.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $maxLocationLength
     *
     * @return $this
     */
    public function setMaxLocationLength(ConfigNodePropertyInteger $maxLocationLength = null)
    {
        $this->maxLocationLength = $maxLocationLength;

        return $this;
    }

    /**
     * Gets maxDetailsShown.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMaxDetailsShown()
    {
        return $this->maxDetailsShown;
    }

    /**
     * Sets maxDetailsShown.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $maxDetailsShown
     *
     * @return $this
     */
    public function setMaxDetailsShown(ConfigNodePropertyInteger $maxDetailsShown = null)
    {
        $this->maxDetailsShown = $maxDetailsShown;

        return $this;
    }

    /**
     * Gets minDetailsPercentage.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMinDetailsPercentage()
    {
        return $this->minDetailsPercentage;
    }

    /**
     * Sets minDetailsPercentage.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $minDetailsPercentage
     *
     * @return $this
     */
    public function setMinDetailsPercentage(ConfigNodePropertyInteger $minDetailsPercentage = null)
    {
        $this->minDetailsPercentage = $minDetailsPercentage;

        return $this;
    }

    /**
     * Gets threadMatchers.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getThreadMatchers()
    {
        return $this->threadMatchers;
    }

    /**
     * Sets threadMatchers.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $threadMatchers
     *
     * @return $this
     */
    public function setThreadMatchers(ConfigNodePropertyArray $threadMatchers = null)
    {
        $this->threadMatchers = $threadMatchers;

        return $this;
    }

    /**
     * Gets maxGreedyDepth.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMaxGreedyDepth()
    {
        return $this->maxGreedyDepth;
    }

    /**
     * Sets maxGreedyDepth.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $maxGreedyDepth
     *
     * @return $this
     */
    public function setMaxGreedyDepth(ConfigNodePropertyInteger $maxGreedyDepth = null)
    {
        $this->maxGreedyDepth = $maxGreedyDepth;

        return $this;
    }

    /**
     * Gets greedyStackMatchers.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getGreedyStackMatchers()
    {
        return $this->greedyStackMatchers;
    }

    /**
     * Sets greedyStackMatchers.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $greedyStackMatchers
     *
     * @return $this
     */
    public function setGreedyStackMatchers(ConfigNodePropertyString $greedyStackMatchers = null)
    {
        $this->greedyStackMatchers = $greedyStackMatchers;

        return $this;
    }

    /**
     * Gets stackFilters.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getStackFilters()
    {
        return $this->stackFilters;
    }

    /**
     * Sets stackFilters.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $stackFilters
     *
     * @return $this
     */
    public function setStackFilters(ConfigNodePropertyArray $stackFilters = null)
    {
        $this->stackFilters = $stackFilters;

        return $this;
    }

    /**
     * Gets stackMatchers.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getStackMatchers()
    {
        return $this->stackMatchers;
    }

    /**
     * Sets stackMatchers.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $stackMatchers
     *
     * @return $this
     */
    public function setStackMatchers(ConfigNodePropertyArray $stackMatchers = null)
    {
        $this->stackMatchers = $stackMatchers;

        return $this;
    }

    /**
     * Gets stackCategorizers.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getStackCategorizers()
    {
        return $this->stackCategorizers;
    }

    /**
     * Sets stackCategorizers.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $stackCategorizers
     *
     * @return $this
     */
    public function setStackCategorizers(ConfigNodePropertyArray $stackCategorizers = null)
    {
        $this->stackCategorizers = $stackCategorizers;

        return $this;
    }

    /**
     * Gets stackShorteners.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getStackShorteners()
    {
        return $this->stackShorteners;
    }

    /**
     * Sets stackShorteners.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $stackShorteners
     *
     * @return $this
     */
    public function setStackShorteners(ConfigNodePropertyArray $stackShorteners = null)
    {
        $this->stackShorteners = $stackShorteners;

        return $this;
    }
}


