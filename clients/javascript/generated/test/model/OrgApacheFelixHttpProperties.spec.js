/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NodeSwaggerAemOsgi);
  }
}(this, function(expect, NodeSwaggerAemOsgi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrgApacheFelixHttpProperties', function() {
    it('should create an instance of OrgApacheFelixHttpProperties', function() {
      // uncomment below and update the code to test OrgApacheFelixHttpProperties
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be.a(NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties);
    });

    it('should have the property orgApacheFelixHttpHost (base name: "org.apache.felix.http.host")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpHost
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpEnable (base name: "org.apache.felix.http.enable")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpEnable
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgOsgiServiceHttpPort (base name: "org.osgi.service.http.port")', function() {
      // uncomment below and update the code to test the property orgOsgiServiceHttpPort
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpTimeout (base name: "org.apache.felix.http.timeout")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpTimeout
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsEnable (base name: "org.apache.felix.https.enable")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsEnable
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgOsgiServiceHttpPortSecure (base name: "org.osgi.service.http.port.secure")', function() {
      // uncomment below and update the code to test the property orgOsgiServiceHttpPortSecure
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsKeystore (base name: "org.apache.felix.https.keystore")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsKeystore
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsKeystorePassword (base name: "org.apache.felix.https.keystore.password")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsKeystorePassword
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsKeystoreKeyPassword (base name: "org.apache.felix.https.keystore.key.password")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsKeystoreKeyPassword
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsTruststore (base name: "org.apache.felix.https.truststore")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsTruststore
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsTruststorePassword (base name: "org.apache.felix.https.truststore.password")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsTruststorePassword
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsClientcertificate (base name: "org.apache.felix.https.clientcertificate")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsClientcertificate
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpContextPath (base name: "org.apache.felix.http.context_path")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpContextPath
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpMbeans (base name: "org.apache.felix.http.mbeans")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpMbeans
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpSessionTimeout (base name: "org.apache.felix.http.session.timeout")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpSessionTimeout
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpJettyThreadpoolMax (base name: "org.apache.felix.http.jetty.threadpool.max")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpJettyThreadpoolMax
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpJettyAcceptors (base name: "org.apache.felix.http.jetty.acceptors")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpJettyAcceptors
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpJettySelectors (base name: "org.apache.felix.http.jetty.selectors")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpJettySelectors
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpJettyHeaderBufferSize (base name: "org.apache.felix.http.jetty.headerBufferSize")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpJettyHeaderBufferSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpJettyRequestBufferSize (base name: "org.apache.felix.http.jetty.requestBufferSize")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpJettyRequestBufferSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpJettyResponseBufferSize (base name: "org.apache.felix.http.jetty.responseBufferSize")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpJettyResponseBufferSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpJettyMaxFormSize (base name: "org.apache.felix.http.jetty.maxFormSize")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpJettyMaxFormSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpPathExclusions (base name: "org.apache.felix.http.path_exclusions")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpPathExclusions
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsJettyCiphersuitesExcluded (base name: "org.apache.felix.https.jetty.ciphersuites.excluded")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsJettyCiphersuitesExcluded
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsJettyCiphersuitesIncluded (base name: "org.apache.felix.https.jetty.ciphersuites.included")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsJettyCiphersuitesIncluded
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpJettySendServerHeader (base name: "org.apache.felix.http.jetty.sendServerHeader")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpJettySendServerHeader
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsJettyProtocolsIncluded (base name: "org.apache.felix.https.jetty.protocols.included")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsJettyProtocolsIncluded
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsJettyProtocolsExcluded (base name: "org.apache.felix.https.jetty.protocols.excluded")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsJettyProtocolsExcluded
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixProxyLoadBalancerConnectionEnable (base name: "org.apache.felix.proxy.load.balancer.connection.enable")', function() {
      // uncomment below and update the code to test the property orgApacheFelixProxyLoadBalancerConnectionEnable
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsJettyRenegotiateAllowed (base name: "org.apache.felix.https.jetty.renegotiateAllowed")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsJettyRenegotiateAllowed
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsJettySessionCookieHttpOnly (base name: "org.apache.felix.https.jetty.session.cookie.httpOnly")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsJettySessionCookieHttpOnly
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpsJettySessionCookieSecure (base name: "org.apache.felix.https.jetty.session.cookie.secure")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpsJettySessionCookieSecure
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgEclipseJettyServletSessionIdPathParameterName (base name: "org.eclipse.jetty.servlet.SessionIdPathParameterName")', function() {
      // uncomment below and update the code to test the property orgEclipseJettyServletSessionIdPathParameterName
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgEclipseJettyServletCheckingRemoteSessionIdEncoding (base name: "org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding")', function() {
      // uncomment below and update the code to test the property orgEclipseJettyServletCheckingRemoteSessionIdEncoding
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgEclipseJettyServletSessionCookie (base name: "org.eclipse.jetty.servlet.SessionCookie")', function() {
      // uncomment below and update the code to test the property orgEclipseJettyServletSessionCookie
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgEclipseJettyServletSessionDomain (base name: "org.eclipse.jetty.servlet.SessionDomain")', function() {
      // uncomment below and update the code to test the property orgEclipseJettyServletSessionDomain
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgEclipseJettyServletSessionPath (base name: "org.eclipse.jetty.servlet.SessionPath")', function() {
      // uncomment below and update the code to test the property orgEclipseJettyServletSessionPath
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgEclipseJettyServletMaxAge (base name: "org.eclipse.jetty.servlet.MaxAge")', function() {
      // uncomment below and update the code to test the property orgEclipseJettyServletMaxAge
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpName (base name: "org.apache.felix.http.name")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpName
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGziphandlerEnable (base name: "org.apache.felix.jetty.gziphandler.enable")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGziphandlerEnable
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipMinGzipSize (base name: "org.apache.felix.jetty.gzip.minGzipSize")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipMinGzipSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipCompressionLevel (base name: "org.apache.felix.jetty.gzip.compressionLevel")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipCompressionLevel
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipInflateBufferSize (base name: "org.apache.felix.jetty.gzip.inflateBufferSize")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipInflateBufferSize
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipSyncFlush (base name: "org.apache.felix.jetty.gzip.syncFlush")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipSyncFlush
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipExcludedUserAgents (base name: "org.apache.felix.jetty.gzip.excludedUserAgents")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipExcludedUserAgents
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipIncludedMethods (base name: "org.apache.felix.jetty.gzip.includedMethods")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipIncludedMethods
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipExcludedMethods (base name: "org.apache.felix.jetty.gzip.excludedMethods")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipExcludedMethods
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipIncludedPaths (base name: "org.apache.felix.jetty.gzip.includedPaths")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipIncludedPaths
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipExcludedPaths (base name: "org.apache.felix.jetty.gzip.excludedPaths")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipExcludedPaths
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipIncludedMimeTypes (base name: "org.apache.felix.jetty.gzip.includedMimeTypes")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipIncludedMimeTypes
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixJettyGzipExcludedMimeTypes (base name: "org.apache.felix.jetty.gzip.excludedMimeTypes")', function() {
      // uncomment below and update the code to test the property orgApacheFelixJettyGzipExcludedMimeTypes
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpSessionInvalidate (base name: "org.apache.felix.http.session.invalidate")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpSessionInvalidate
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

    it('should have the property orgApacheFelixHttpSessionUniqueid (base name: "org.apache.felix.http.session.uniqueid")', function() {
      // uncomment below and update the code to test the property orgApacheFelixHttpSessionUniqueid
      //var instane = new NodeSwaggerAemOsgi.OrgApacheFelixHttpProperties();
      //expect(instance).to.be();
    });

  });

}));
