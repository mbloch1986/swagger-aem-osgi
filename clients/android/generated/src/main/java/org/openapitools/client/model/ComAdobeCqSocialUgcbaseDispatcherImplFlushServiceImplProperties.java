/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.ConfigNodePropertyInteger;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties {
  
  @SerializedName("threadPoolSize")
  private ConfigNodePropertyInteger threadPoolSize = null;
  @SerializedName("delayTime")
  private ConfigNodePropertyInteger delayTime = null;
  @SerializedName("workerSleepTime")
  private ConfigNodePropertyInteger workerSleepTime = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getThreadPoolSize() {
    return threadPoolSize;
  }
  public void setThreadPoolSize(ConfigNodePropertyInteger threadPoolSize) {
    this.threadPoolSize = threadPoolSize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getDelayTime() {
    return delayTime;
  }
  public void setDelayTime(ConfigNodePropertyInteger delayTime) {
    this.delayTime = delayTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ConfigNodePropertyInteger getWorkerSleepTime() {
    return workerSleepTime;
  }
  public void setWorkerSleepTime(ConfigNodePropertyInteger workerSleepTime) {
    this.workerSleepTime = workerSleepTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties = (ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties) o;
    return (this.threadPoolSize == null ? comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.threadPoolSize == null : this.threadPoolSize.equals(comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.threadPoolSize)) &&
        (this.delayTime == null ? comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.delayTime == null : this.delayTime.equals(comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.delayTime)) &&
        (this.workerSleepTime == null ? comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.workerSleepTime == null : this.workerSleepTime.equals(comAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties.workerSleepTime));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.threadPoolSize == null ? 0: this.threadPoolSize.hashCode());
    result = 31 * result + (this.delayTime == null ? 0: this.delayTime.hashCode());
    result = 31 * result + (this.workerSleepTime == null ? 0: this.workerSleepTime.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeCqSocialUgcbaseDispatcherImplFlushServiceImplProperties {\n");
    
    sb.append("  threadPoolSize: ").append(threadPoolSize).append("\n");
    sb.append("  delayTime: ").append(delayTime).append("\n");
    sb.append("  workerSleepTime: ").append(workerSleepTime).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
