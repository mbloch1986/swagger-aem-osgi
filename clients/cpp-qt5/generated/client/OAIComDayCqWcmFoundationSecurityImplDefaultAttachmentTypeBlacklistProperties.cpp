/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties() {
    init();
}

OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::~OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties() {
    this->cleanup();
}

void
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::init() {
    default_attachment_type_blacklist = new OAIConfigNodePropertyArray();
    m_default_attachment_type_blacklist_isSet = false;
    baseline_attachment_type_blacklist = new OAIConfigNodePropertyArray();
    m_baseline_attachment_type_blacklist_isSet = false;
}

void
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::cleanup() {
    if(default_attachment_type_blacklist != nullptr) { 
        delete default_attachment_type_blacklist;
    }
    if(baseline_attachment_type_blacklist != nullptr) { 
        delete baseline_attachment_type_blacklist;
    }
}

OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties*
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&default_attachment_type_blacklist, pJson["default.attachment.type.blacklist"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&baseline_attachment_type_blacklist, pJson["baseline.attachment.type.blacklist"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
}

QString
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::asJsonObject() {
    QJsonObject obj;
    if((default_attachment_type_blacklist != nullptr) && (default_attachment_type_blacklist->isSet())){
        toJsonValue(QString("default.attachment.type.blacklist"), default_attachment_type_blacklist, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((baseline_attachment_type_blacklist != nullptr) && (baseline_attachment_type_blacklist->isSet())){
        toJsonValue(QString("baseline.attachment.type.blacklist"), baseline_attachment_type_blacklist, obj, QString("OAIConfigNodePropertyArray"));
    }

    return obj;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::getDefaultAttachmentTypeBlacklist() {
    return default_attachment_type_blacklist;
}
void
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::setDefaultAttachmentTypeBlacklist(OAIConfigNodePropertyArray* default_attachment_type_blacklist) {
    this->default_attachment_type_blacklist = default_attachment_type_blacklist;
    this->m_default_attachment_type_blacklist_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::getBaselineAttachmentTypeBlacklist() {
    return baseline_attachment_type_blacklist;
}
void
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::setBaselineAttachmentTypeBlacklist(OAIConfigNodePropertyArray* baseline_attachment_type_blacklist) {
    this->baseline_attachment_type_blacklist = baseline_attachment_type_blacklist;
    this->m_baseline_attachment_type_blacklist_isSet = true;
}


bool
OAIComDayCqWcmFoundationSecurityImplDefaultAttachmentTypeBlacklistProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(default_attachment_type_blacklist != nullptr && default_attachment_type_blacklist->isSet()){ isObjectUpdated = true; break;}
        if(baseline_attachment_type_blacklist != nullptr && baseline_attachment_type_blacklist->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

