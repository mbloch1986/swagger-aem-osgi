/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIOrgApacheSlingCommonsLogLogManagerProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIOrgApacheSlingCommonsLogLogManagerProperties::OAIOrgApacheSlingCommonsLogLogManagerProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIOrgApacheSlingCommonsLogLogManagerProperties::OAIOrgApacheSlingCommonsLogLogManagerProperties() {
    init();
}

OAIOrgApacheSlingCommonsLogLogManagerProperties::~OAIOrgApacheSlingCommonsLogLogManagerProperties() {
    this->cleanup();
}

void
OAIOrgApacheSlingCommonsLogLogManagerProperties::init() {
    org_apache_sling_commons_log_level = new OAIConfigNodePropertyDropDown();
    m_org_apache_sling_commons_log_level_isSet = false;
    org_apache_sling_commons_log_file = new OAIConfigNodePropertyString();
    m_org_apache_sling_commons_log_file_isSet = false;
    org_apache_sling_commons_log_file_number = new OAIConfigNodePropertyInteger();
    m_org_apache_sling_commons_log_file_number_isSet = false;
    org_apache_sling_commons_log_file_size = new OAIConfigNodePropertyString();
    m_org_apache_sling_commons_log_file_size_isSet = false;
    org_apache_sling_commons_log_pattern = new OAIConfigNodePropertyString();
    m_org_apache_sling_commons_log_pattern_isSet = false;
    org_apache_sling_commons_log_configuration_file = new OAIConfigNodePropertyString();
    m_org_apache_sling_commons_log_configuration_file_isSet = false;
    org_apache_sling_commons_log_packaging_data_enabled = new OAIConfigNodePropertyBoolean();
    m_org_apache_sling_commons_log_packaging_data_enabled_isSet = false;
    org_apache_sling_commons_log_max_caller_data_depth = new OAIConfigNodePropertyInteger();
    m_org_apache_sling_commons_log_max_caller_data_depth_isSet = false;
    org_apache_sling_commons_log_max_old_file_count_in_dump = new OAIConfigNodePropertyInteger();
    m_org_apache_sling_commons_log_max_old_file_count_in_dump_isSet = false;
    org_apache_sling_commons_log_num_of_lines = new OAIConfigNodePropertyInteger();
    m_org_apache_sling_commons_log_num_of_lines_isSet = false;
}

void
OAIOrgApacheSlingCommonsLogLogManagerProperties::cleanup() {
    if(org_apache_sling_commons_log_level != nullptr) { 
        delete org_apache_sling_commons_log_level;
    }
    if(org_apache_sling_commons_log_file != nullptr) { 
        delete org_apache_sling_commons_log_file;
    }
    if(org_apache_sling_commons_log_file_number != nullptr) { 
        delete org_apache_sling_commons_log_file_number;
    }
    if(org_apache_sling_commons_log_file_size != nullptr) { 
        delete org_apache_sling_commons_log_file_size;
    }
    if(org_apache_sling_commons_log_pattern != nullptr) { 
        delete org_apache_sling_commons_log_pattern;
    }
    if(org_apache_sling_commons_log_configuration_file != nullptr) { 
        delete org_apache_sling_commons_log_configuration_file;
    }
    if(org_apache_sling_commons_log_packaging_data_enabled != nullptr) { 
        delete org_apache_sling_commons_log_packaging_data_enabled;
    }
    if(org_apache_sling_commons_log_max_caller_data_depth != nullptr) { 
        delete org_apache_sling_commons_log_max_caller_data_depth;
    }
    if(org_apache_sling_commons_log_max_old_file_count_in_dump != nullptr) { 
        delete org_apache_sling_commons_log_max_old_file_count_in_dump;
    }
    if(org_apache_sling_commons_log_num_of_lines != nullptr) { 
        delete org_apache_sling_commons_log_num_of_lines;
    }
}

OAIOrgApacheSlingCommonsLogLogManagerProperties*
OAIOrgApacheSlingCommonsLogLogManagerProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIOrgApacheSlingCommonsLogLogManagerProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&org_apache_sling_commons_log_level, pJson["org.apache.sling.commons.log.level"], "OAIConfigNodePropertyDropDown", "OAIConfigNodePropertyDropDown");
    
    ::OpenAPI::setValue(&org_apache_sling_commons_log_file, pJson["org.apache.sling.commons.log.file"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_sling_commons_log_file_number, pJson["org.apache.sling.commons.log.file.number"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_sling_commons_log_file_size, pJson["org.apache.sling.commons.log.file.size"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_sling_commons_log_pattern, pJson["org.apache.sling.commons.log.pattern"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_sling_commons_log_configuration_file, pJson["org.apache.sling.commons.log.configurationFile"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&org_apache_sling_commons_log_packaging_data_enabled, pJson["org.apache.sling.commons.log.packagingDataEnabled"], "OAIConfigNodePropertyBoolean", "OAIConfigNodePropertyBoolean");
    
    ::OpenAPI::setValue(&org_apache_sling_commons_log_max_caller_data_depth, pJson["org.apache.sling.commons.log.maxCallerDataDepth"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_sling_commons_log_max_old_file_count_in_dump, pJson["org.apache.sling.commons.log.maxOldFileCountInDump"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&org_apache_sling_commons_log_num_of_lines, pJson["org.apache.sling.commons.log.numOfLines"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
}

QString
OAIOrgApacheSlingCommonsLogLogManagerProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIOrgApacheSlingCommonsLogLogManagerProperties::asJsonObject() {
    QJsonObject obj;
    if((org_apache_sling_commons_log_level != nullptr) && (org_apache_sling_commons_log_level->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.level"), org_apache_sling_commons_log_level, obj, QString("OAIConfigNodePropertyDropDown"));
    }
    if((org_apache_sling_commons_log_file != nullptr) && (org_apache_sling_commons_log_file->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.file"), org_apache_sling_commons_log_file, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_sling_commons_log_file_number != nullptr) && (org_apache_sling_commons_log_file_number->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.file.number"), org_apache_sling_commons_log_file_number, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_sling_commons_log_file_size != nullptr) && (org_apache_sling_commons_log_file_size->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.file.size"), org_apache_sling_commons_log_file_size, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_sling_commons_log_pattern != nullptr) && (org_apache_sling_commons_log_pattern->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.pattern"), org_apache_sling_commons_log_pattern, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_sling_commons_log_configuration_file != nullptr) && (org_apache_sling_commons_log_configuration_file->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.configurationFile"), org_apache_sling_commons_log_configuration_file, obj, QString("OAIConfigNodePropertyString"));
    }
    if((org_apache_sling_commons_log_packaging_data_enabled != nullptr) && (org_apache_sling_commons_log_packaging_data_enabled->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.packagingDataEnabled"), org_apache_sling_commons_log_packaging_data_enabled, obj, QString("OAIConfigNodePropertyBoolean"));
    }
    if((org_apache_sling_commons_log_max_caller_data_depth != nullptr) && (org_apache_sling_commons_log_max_caller_data_depth->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.maxCallerDataDepth"), org_apache_sling_commons_log_max_caller_data_depth, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_sling_commons_log_max_old_file_count_in_dump != nullptr) && (org_apache_sling_commons_log_max_old_file_count_in_dump->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.maxOldFileCountInDump"), org_apache_sling_commons_log_max_old_file_count_in_dump, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((org_apache_sling_commons_log_num_of_lines != nullptr) && (org_apache_sling_commons_log_num_of_lines->isSet())){
        toJsonValue(QString("org.apache.sling.commons.log.numOfLines"), org_apache_sling_commons_log_num_of_lines, obj, QString("OAIConfigNodePropertyInteger"));
    }

    return obj;
}

OAIConfigNodePropertyDropDown*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogLevel() {
    return org_apache_sling_commons_log_level;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogLevel(OAIConfigNodePropertyDropDown* org_apache_sling_commons_log_level) {
    this->org_apache_sling_commons_log_level = org_apache_sling_commons_log_level;
    this->m_org_apache_sling_commons_log_level_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogFile() {
    return org_apache_sling_commons_log_file;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogFile(OAIConfigNodePropertyString* org_apache_sling_commons_log_file) {
    this->org_apache_sling_commons_log_file = org_apache_sling_commons_log_file;
    this->m_org_apache_sling_commons_log_file_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogFileNumber() {
    return org_apache_sling_commons_log_file_number;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogFileNumber(OAIConfigNodePropertyInteger* org_apache_sling_commons_log_file_number) {
    this->org_apache_sling_commons_log_file_number = org_apache_sling_commons_log_file_number;
    this->m_org_apache_sling_commons_log_file_number_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogFileSize() {
    return org_apache_sling_commons_log_file_size;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogFileSize(OAIConfigNodePropertyString* org_apache_sling_commons_log_file_size) {
    this->org_apache_sling_commons_log_file_size = org_apache_sling_commons_log_file_size;
    this->m_org_apache_sling_commons_log_file_size_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogPattern() {
    return org_apache_sling_commons_log_pattern;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogPattern(OAIConfigNodePropertyString* org_apache_sling_commons_log_pattern) {
    this->org_apache_sling_commons_log_pattern = org_apache_sling_commons_log_pattern;
    this->m_org_apache_sling_commons_log_pattern_isSet = true;
}

OAIConfigNodePropertyString*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogConfigurationFile() {
    return org_apache_sling_commons_log_configuration_file;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogConfigurationFile(OAIConfigNodePropertyString* org_apache_sling_commons_log_configuration_file) {
    this->org_apache_sling_commons_log_configuration_file = org_apache_sling_commons_log_configuration_file;
    this->m_org_apache_sling_commons_log_configuration_file_isSet = true;
}

OAIConfigNodePropertyBoolean*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogPackagingDataEnabled() {
    return org_apache_sling_commons_log_packaging_data_enabled;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogPackagingDataEnabled(OAIConfigNodePropertyBoolean* org_apache_sling_commons_log_packaging_data_enabled) {
    this->org_apache_sling_commons_log_packaging_data_enabled = org_apache_sling_commons_log_packaging_data_enabled;
    this->m_org_apache_sling_commons_log_packaging_data_enabled_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogMaxCallerDataDepth() {
    return org_apache_sling_commons_log_max_caller_data_depth;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogMaxCallerDataDepth(OAIConfigNodePropertyInteger* org_apache_sling_commons_log_max_caller_data_depth) {
    this->org_apache_sling_commons_log_max_caller_data_depth = org_apache_sling_commons_log_max_caller_data_depth;
    this->m_org_apache_sling_commons_log_max_caller_data_depth_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogMaxOldFileCountInDump() {
    return org_apache_sling_commons_log_max_old_file_count_in_dump;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogMaxOldFileCountInDump(OAIConfigNodePropertyInteger* org_apache_sling_commons_log_max_old_file_count_in_dump) {
    this->org_apache_sling_commons_log_max_old_file_count_in_dump = org_apache_sling_commons_log_max_old_file_count_in_dump;
    this->m_org_apache_sling_commons_log_max_old_file_count_in_dump_isSet = true;
}

OAIConfigNodePropertyInteger*
OAIOrgApacheSlingCommonsLogLogManagerProperties::getOrgApacheSlingCommonsLogNumOfLines() {
    return org_apache_sling_commons_log_num_of_lines;
}
void
OAIOrgApacheSlingCommonsLogLogManagerProperties::setOrgApacheSlingCommonsLogNumOfLines(OAIConfigNodePropertyInteger* org_apache_sling_commons_log_num_of_lines) {
    this->org_apache_sling_commons_log_num_of_lines = org_apache_sling_commons_log_num_of_lines;
    this->m_org_apache_sling_commons_log_num_of_lines_isSet = true;
}


bool
OAIOrgApacheSlingCommonsLogLogManagerProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(org_apache_sling_commons_log_level != nullptr && org_apache_sling_commons_log_level->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_sling_commons_log_file != nullptr && org_apache_sling_commons_log_file->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_sling_commons_log_file_number != nullptr && org_apache_sling_commons_log_file_number->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_sling_commons_log_file_size != nullptr && org_apache_sling_commons_log_file_size->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_sling_commons_log_pattern != nullptr && org_apache_sling_commons_log_pattern->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_sling_commons_log_configuration_file != nullptr && org_apache_sling_commons_log_configuration_file->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_sling_commons_log_packaging_data_enabled != nullptr && org_apache_sling_commons_log_packaging_data_enabled->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_sling_commons_log_max_caller_data_depth != nullptr && org_apache_sling_commons_log_max_caller_data_depth->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_sling_commons_log_max_old_file_count_in_dump != nullptr && org_apache_sling_commons_log_max_old_file_count_in_dump->isSet()){ isObjectUpdated = true; break;}
        if(org_apache_sling_commons_log_num_of_lines != nullptr && org_apache_sling_commons_log_num_of_lines->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

