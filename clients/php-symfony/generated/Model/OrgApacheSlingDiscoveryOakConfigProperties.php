<?php
/**
 * OrgApacheSlingDiscoveryOakConfigProperties
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the OrgApacheSlingDiscoveryOakConfigProperties model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class OrgApacheSlingDiscoveryOakConfigProperties 
{
        /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("connectorPingTimeout")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $connectorPingTimeout;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("connectorPingInterval")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $connectorPingInterval;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("discoveryLiteCheckInterval")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $discoveryLiteCheckInterval;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("clusterSyncServiceTimeout")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $clusterSyncServiceTimeout;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("clusterSyncServiceInterval")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $clusterSyncServiceInterval;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("enableSyncToken")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $enableSyncToken;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("minEventDelay")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $minEventDelay;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("socketConnectTimeout")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $socketConnectTimeout;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("soTimeout")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $soTimeout;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("topologyConnectorUrls")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $topologyConnectorUrls;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyArray|null
     * @SerializedName("topologyConnectorWhitelist")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyArray")
     */
    protected $topologyConnectorWhitelist;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("autoStopLocalLoopEnabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $autoStopLocalLoopEnabled;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("gzipConnectorRequestsEnabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $gzipConnectorRequestsEnabled;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("hmacEnabled")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $hmacEnabled;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     * @SerializedName("enableEncryption")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyBoolean")
     */
    protected $enableEncryption;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("sharedKey")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $sharedKey;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     * @SerializedName("hmacSharedKeyTTL")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyInteger")
     */
    protected $hmacSharedKeyTTL;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("backoffStandbyFactor")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $backoffStandbyFactor;

    /**
     * @var OpenAPI\Server\Model\ConfigNodePropertyString|null
     * @SerializedName("backoffStableFactor")
     * @Assert\Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     * @Type("OpenAPI\Server\Model\ConfigNodePropertyString")
     */
    protected $backoffStableFactor;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->connectorPingTimeout = isset($data['connectorPingTimeout']) ? $data['connectorPingTimeout'] : null;
        $this->connectorPingInterval = isset($data['connectorPingInterval']) ? $data['connectorPingInterval'] : null;
        $this->discoveryLiteCheckInterval = isset($data['discoveryLiteCheckInterval']) ? $data['discoveryLiteCheckInterval'] : null;
        $this->clusterSyncServiceTimeout = isset($data['clusterSyncServiceTimeout']) ? $data['clusterSyncServiceTimeout'] : null;
        $this->clusterSyncServiceInterval = isset($data['clusterSyncServiceInterval']) ? $data['clusterSyncServiceInterval'] : null;
        $this->enableSyncToken = isset($data['enableSyncToken']) ? $data['enableSyncToken'] : null;
        $this->minEventDelay = isset($data['minEventDelay']) ? $data['minEventDelay'] : null;
        $this->socketConnectTimeout = isset($data['socketConnectTimeout']) ? $data['socketConnectTimeout'] : null;
        $this->soTimeout = isset($data['soTimeout']) ? $data['soTimeout'] : null;
        $this->topologyConnectorUrls = isset($data['topologyConnectorUrls']) ? $data['topologyConnectorUrls'] : null;
        $this->topologyConnectorWhitelist = isset($data['topologyConnectorWhitelist']) ? $data['topologyConnectorWhitelist'] : null;
        $this->autoStopLocalLoopEnabled = isset($data['autoStopLocalLoopEnabled']) ? $data['autoStopLocalLoopEnabled'] : null;
        $this->gzipConnectorRequestsEnabled = isset($data['gzipConnectorRequestsEnabled']) ? $data['gzipConnectorRequestsEnabled'] : null;
        $this->hmacEnabled = isset($data['hmacEnabled']) ? $data['hmacEnabled'] : null;
        $this->enableEncryption = isset($data['enableEncryption']) ? $data['enableEncryption'] : null;
        $this->sharedKey = isset($data['sharedKey']) ? $data['sharedKey'] : null;
        $this->hmacSharedKeyTTL = isset($data['hmacSharedKeyTTL']) ? $data['hmacSharedKeyTTL'] : null;
        $this->backoffStandbyFactor = isset($data['backoffStandbyFactor']) ? $data['backoffStandbyFactor'] : null;
        $this->backoffStableFactor = isset($data['backoffStableFactor']) ? $data['backoffStableFactor'] : null;
    }

    /**
     * Gets connectorPingTimeout.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getConnectorPingTimeout()
    {
        return $this->connectorPingTimeout;
    }

    /**
     * Sets connectorPingTimeout.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $connectorPingTimeout
     *
     * @return $this
     */
    public function setConnectorPingTimeout(ConfigNodePropertyInteger $connectorPingTimeout = null)
    {
        $this->connectorPingTimeout = $connectorPingTimeout;

        return $this;
    }

    /**
     * Gets connectorPingInterval.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getConnectorPingInterval()
    {
        return $this->connectorPingInterval;
    }

    /**
     * Sets connectorPingInterval.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $connectorPingInterval
     *
     * @return $this
     */
    public function setConnectorPingInterval(ConfigNodePropertyInteger $connectorPingInterval = null)
    {
        $this->connectorPingInterval = $connectorPingInterval;

        return $this;
    }

    /**
     * Gets discoveryLiteCheckInterval.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getDiscoveryLiteCheckInterval()
    {
        return $this->discoveryLiteCheckInterval;
    }

    /**
     * Sets discoveryLiteCheckInterval.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $discoveryLiteCheckInterval
     *
     * @return $this
     */
    public function setDiscoveryLiteCheckInterval(ConfigNodePropertyInteger $discoveryLiteCheckInterval = null)
    {
        $this->discoveryLiteCheckInterval = $discoveryLiteCheckInterval;

        return $this;
    }

    /**
     * Gets clusterSyncServiceTimeout.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getClusterSyncServiceTimeout()
    {
        return $this->clusterSyncServiceTimeout;
    }

    /**
     * Sets clusterSyncServiceTimeout.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $clusterSyncServiceTimeout
     *
     * @return $this
     */
    public function setClusterSyncServiceTimeout(ConfigNodePropertyInteger $clusterSyncServiceTimeout = null)
    {
        $this->clusterSyncServiceTimeout = $clusterSyncServiceTimeout;

        return $this;
    }

    /**
     * Gets clusterSyncServiceInterval.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getClusterSyncServiceInterval()
    {
        return $this->clusterSyncServiceInterval;
    }

    /**
     * Sets clusterSyncServiceInterval.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $clusterSyncServiceInterval
     *
     * @return $this
     */
    public function setClusterSyncServiceInterval(ConfigNodePropertyInteger $clusterSyncServiceInterval = null)
    {
        $this->clusterSyncServiceInterval = $clusterSyncServiceInterval;

        return $this;
    }

    /**
     * Gets enableSyncToken.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getEnableSyncToken()
    {
        return $this->enableSyncToken;
    }

    /**
     * Sets enableSyncToken.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $enableSyncToken
     *
     * @return $this
     */
    public function setEnableSyncToken(ConfigNodePropertyBoolean $enableSyncToken = null)
    {
        $this->enableSyncToken = $enableSyncToken;

        return $this;
    }

    /**
     * Gets minEventDelay.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getMinEventDelay()
    {
        return $this->minEventDelay;
    }

    /**
     * Sets minEventDelay.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $minEventDelay
     *
     * @return $this
     */
    public function setMinEventDelay(ConfigNodePropertyInteger $minEventDelay = null)
    {
        $this->minEventDelay = $minEventDelay;

        return $this;
    }

    /**
     * Gets socketConnectTimeout.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getSocketConnectTimeout()
    {
        return $this->socketConnectTimeout;
    }

    /**
     * Sets socketConnectTimeout.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $socketConnectTimeout
     *
     * @return $this
     */
    public function setSocketConnectTimeout(ConfigNodePropertyInteger $socketConnectTimeout = null)
    {
        $this->socketConnectTimeout = $socketConnectTimeout;

        return $this;
    }

    /**
     * Gets soTimeout.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getSoTimeout()
    {
        return $this->soTimeout;
    }

    /**
     * Sets soTimeout.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $soTimeout
     *
     * @return $this
     */
    public function setSoTimeout(ConfigNodePropertyInteger $soTimeout = null)
    {
        $this->soTimeout = $soTimeout;

        return $this;
    }

    /**
     * Gets topologyConnectorUrls.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getTopologyConnectorUrls()
    {
        return $this->topologyConnectorUrls;
    }

    /**
     * Sets topologyConnectorUrls.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $topologyConnectorUrls
     *
     * @return $this
     */
    public function setTopologyConnectorUrls(ConfigNodePropertyArray $topologyConnectorUrls = null)
    {
        $this->topologyConnectorUrls = $topologyConnectorUrls;

        return $this;
    }

    /**
     * Gets topologyConnectorWhitelist.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyArray|null
     */
    public function getTopologyConnectorWhitelist()
    {
        return $this->topologyConnectorWhitelist;
    }

    /**
     * Sets topologyConnectorWhitelist.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyArray|null $topologyConnectorWhitelist
     *
     * @return $this
     */
    public function setTopologyConnectorWhitelist(ConfigNodePropertyArray $topologyConnectorWhitelist = null)
    {
        $this->topologyConnectorWhitelist = $topologyConnectorWhitelist;

        return $this;
    }

    /**
     * Gets autoStopLocalLoopEnabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getAutoStopLocalLoopEnabled()
    {
        return $this->autoStopLocalLoopEnabled;
    }

    /**
     * Sets autoStopLocalLoopEnabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $autoStopLocalLoopEnabled
     *
     * @return $this
     */
    public function setAutoStopLocalLoopEnabled(ConfigNodePropertyBoolean $autoStopLocalLoopEnabled = null)
    {
        $this->autoStopLocalLoopEnabled = $autoStopLocalLoopEnabled;

        return $this;
    }

    /**
     * Gets gzipConnectorRequestsEnabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getGzipConnectorRequestsEnabled()
    {
        return $this->gzipConnectorRequestsEnabled;
    }

    /**
     * Sets gzipConnectorRequestsEnabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $gzipConnectorRequestsEnabled
     *
     * @return $this
     */
    public function setGzipConnectorRequestsEnabled(ConfigNodePropertyBoolean $gzipConnectorRequestsEnabled = null)
    {
        $this->gzipConnectorRequestsEnabled = $gzipConnectorRequestsEnabled;

        return $this;
    }

    /**
     * Gets hmacEnabled.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getHmacEnabled()
    {
        return $this->hmacEnabled;
    }

    /**
     * Sets hmacEnabled.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $hmacEnabled
     *
     * @return $this
     */
    public function setHmacEnabled(ConfigNodePropertyBoolean $hmacEnabled = null)
    {
        $this->hmacEnabled = $hmacEnabled;

        return $this;
    }

    /**
     * Gets enableEncryption.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyBoolean|null
     */
    public function getEnableEncryption()
    {
        return $this->enableEncryption;
    }

    /**
     * Sets enableEncryption.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyBoolean|null $enableEncryption
     *
     * @return $this
     */
    public function setEnableEncryption(ConfigNodePropertyBoolean $enableEncryption = null)
    {
        $this->enableEncryption = $enableEncryption;

        return $this;
    }

    /**
     * Gets sharedKey.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getSharedKey()
    {
        return $this->sharedKey;
    }

    /**
     * Sets sharedKey.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $sharedKey
     *
     * @return $this
     */
    public function setSharedKey(ConfigNodePropertyString $sharedKey = null)
    {
        $this->sharedKey = $sharedKey;

        return $this;
    }

    /**
     * Gets hmacSharedKeyTTL.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyInteger|null
     */
    public function getHmacSharedKeyTTL()
    {
        return $this->hmacSharedKeyTTL;
    }

    /**
     * Sets hmacSharedKeyTTL.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyInteger|null $hmacSharedKeyTTL
     *
     * @return $this
     */
    public function setHmacSharedKeyTTL(ConfigNodePropertyInteger $hmacSharedKeyTTL = null)
    {
        $this->hmacSharedKeyTTL = $hmacSharedKeyTTL;

        return $this;
    }

    /**
     * Gets backoffStandbyFactor.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getBackoffStandbyFactor()
    {
        return $this->backoffStandbyFactor;
    }

    /**
     * Sets backoffStandbyFactor.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $backoffStandbyFactor
     *
     * @return $this
     */
    public function setBackoffStandbyFactor(ConfigNodePropertyString $backoffStandbyFactor = null)
    {
        $this->backoffStandbyFactor = $backoffStandbyFactor;

        return $this;
    }

    /**
     * Gets backoffStableFactor.
     *
     * @return OpenAPI\Server\Model\ConfigNodePropertyString|null
     */
    public function getBackoffStableFactor()
    {
        return $this->backoffStableFactor;
    }

    /**
     * Sets backoffStableFactor.
     *
     * @param OpenAPI\Server\Model\ConfigNodePropertyString|null $backoffStableFactor
     *
     * @return $this
     */
    public function setBackoffStableFactor(ConfigNodePropertyString $backoffStableFactor = null)
    {
        $this->backoffStableFactor = $backoffStableFactor;

        return $this;
    }
}


