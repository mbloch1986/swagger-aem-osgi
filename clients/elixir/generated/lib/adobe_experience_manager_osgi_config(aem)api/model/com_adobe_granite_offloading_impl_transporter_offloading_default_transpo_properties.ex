# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdobeExperienceManagerOSGIConfig(AEM)API.Model.ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"default.transport.agent-to-worker.prefix",
    :"default.transport.agent-to-master.prefix",
    :"default.transport.input.package",
    :"default.transport.output.package",
    :"default.transport.replication.synchronous",
    :"default.transport.contentpackage",
    :"offloading.transporter.default.enabled"
  ]

  @type t :: %__MODULE__{
    :"default.transport.agent-to-worker.prefix" => ConfigNodePropertyString,
    :"default.transport.agent-to-master.prefix" => ConfigNodePropertyString,
    :"default.transport.input.package" => ConfigNodePropertyString,
    :"default.transport.output.package" => ConfigNodePropertyString,
    :"default.transport.replication.synchronous" => ConfigNodePropertyBoolean,
    :"default.transport.contentpackage" => ConfigNodePropertyBoolean,
    :"offloading.transporter.default.enabled" => ConfigNodePropertyBoolean
  }
end

defimpl Poison.Decoder, for: AdobeExperienceManagerOSGIConfig(AEM)API.Model.ComAdobeGraniteOffloadingImplTransporterOffloadingDefaultTranspoProperties do
  import AdobeExperienceManagerOSGIConfig(AEM)API.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"default.transport.agent-to-worker.prefix", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"default.transport.agent-to-master.prefix", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"default.transport.input.package", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"default.transport.output.package", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyString, options)
    |> deserialize(:"default.transport.replication.synchronous", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"default.transport.contentpackage", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
    |> deserialize(:"offloading.transporter.default.enabled", :struct, AdobeExperienceManagerOSGIConfig(AEM)API.Model.ConfigNodePropertyBoolean, options)
  end
end

