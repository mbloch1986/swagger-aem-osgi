/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqWcmCoreImplVersionPurgeTaskProperties.h
 *
 * 
 */

#ifndef ComDayCqWcmCoreImplVersionPurgeTaskProperties_H_
#define ComDayCqWcmCoreImplVersionPurgeTaskProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqWcmCoreImplVersionPurgeTaskProperties
    : public ModelBase
{
public:
    ComDayCqWcmCoreImplVersionPurgeTaskProperties();
    virtual ~ComDayCqWcmCoreImplVersionPurgeTaskProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqWcmCoreImplVersionPurgeTaskProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getVersionpurgePaths() const;
    void setVersionpurgePaths(ConfigNodePropertyArray const& value);
    bool versionpurgePathsIsSet() const;
    void unsetVersionpurge_paths();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getVersionpurgeRecursive() const;
    void setVersionpurgeRecursive(ConfigNodePropertyBoolean const& value);
    bool versionpurgeRecursiveIsSet() const;
    void unsetVersionpurge_recursive();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getVersionpurgeMaxVersions() const;
    void setVersionpurgeMaxVersions(ConfigNodePropertyInteger const& value);
    bool versionpurgeMaxVersionsIsSet() const;
    void unsetVersionpurge_maxVersions();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getVersionpurgeMinVersions() const;
    void setVersionpurgeMinVersions(ConfigNodePropertyInteger const& value);
    bool versionpurgeMinVersionsIsSet() const;
    void unsetVersionpurge_minVersions();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyInteger getVersionpurgeMaxAgeDays() const;
    void setVersionpurgeMaxAgeDays(ConfigNodePropertyInteger const& value);
    bool versionpurgeMaxAgeDaysIsSet() const;
    void unsetVersionpurge_maxAgeDays();

protected:
    ConfigNodePropertyArray m_Versionpurge_paths;
    bool m_Versionpurge_pathsIsSet;
    ConfigNodePropertyBoolean m_Versionpurge_recursive;
    bool m_Versionpurge_recursiveIsSet;
    ConfigNodePropertyInteger m_Versionpurge_maxVersions;
    bool m_Versionpurge_maxVersionsIsSet;
    ConfigNodePropertyInteger m_Versionpurge_minVersions;
    bool m_Versionpurge_minVersionsIsSet;
    ConfigNodePropertyInteger m_Versionpurge_maxAgeDays;
    bool m_Versionpurge_maxAgeDaysIsSet;
};

}
}
}
}

#endif /* ComDayCqWcmCoreImplVersionPurgeTaskProperties_H_ */
