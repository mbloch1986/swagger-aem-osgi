package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties._

case class ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties (
  hcName: Option[ConfigNodePropertyString],
hcTags: Option[ConfigNodePropertyArray],
hcMbeanName: Option[ConfigNodePropertyString])

object ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties {
  import DateTimeCodecs._

  implicit val ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCPropertiesCodecJson: CodecJson[ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties] = CodecJson.derive[ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties]
  implicit val ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCPropertiesDecoder: EntityDecoder[ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties] = jsonOf[ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties]
  implicit val ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCPropertiesEncoder: EntityEncoder[ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties] = jsonEncoderOf[ComAdobeAemUpgradePrechecksHcImplReplicationAgentsDisabledHCProperties]
}
