/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties(QString json) {
    init();
    this->fromJson(json);
}

OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties() {
    init();
}

OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::~OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties() {
    this->cleanup();
}

void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::init() {
    com_adobe_granite_jetty_ssl_port = new OAIConfigNodePropertyInteger();
    m_com_adobe_granite_jetty_ssl_port_isSet = false;
    com_adobe_granite_jetty_ssl_keystore_user = new OAIConfigNodePropertyString();
    m_com_adobe_granite_jetty_ssl_keystore_user_isSet = false;
    com_adobe_granite_jetty_ssl_keystore_password = new OAIConfigNodePropertyString();
    m_com_adobe_granite_jetty_ssl_keystore_password_isSet = false;
    com_adobe_granite_jetty_ssl_ciphersuites_excluded = new OAIConfigNodePropertyArray();
    m_com_adobe_granite_jetty_ssl_ciphersuites_excluded_isSet = false;
    com_adobe_granite_jetty_ssl_ciphersuites_included = new OAIConfigNodePropertyArray();
    m_com_adobe_granite_jetty_ssl_ciphersuites_included_isSet = false;
    com_adobe_granite_jetty_ssl_client_certificate = new OAIConfigNodePropertyDropDown();
    m_com_adobe_granite_jetty_ssl_client_certificate_isSet = false;
}

void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::cleanup() {
    if(com_adobe_granite_jetty_ssl_port != nullptr) { 
        delete com_adobe_granite_jetty_ssl_port;
    }
    if(com_adobe_granite_jetty_ssl_keystore_user != nullptr) { 
        delete com_adobe_granite_jetty_ssl_keystore_user;
    }
    if(com_adobe_granite_jetty_ssl_keystore_password != nullptr) { 
        delete com_adobe_granite_jetty_ssl_keystore_password;
    }
    if(com_adobe_granite_jetty_ssl_ciphersuites_excluded != nullptr) { 
        delete com_adobe_granite_jetty_ssl_ciphersuites_excluded;
    }
    if(com_adobe_granite_jetty_ssl_ciphersuites_included != nullptr) { 
        delete com_adobe_granite_jetty_ssl_ciphersuites_included;
    }
    if(com_adobe_granite_jetty_ssl_client_certificate != nullptr) { 
        delete com_adobe_granite_jetty_ssl_client_certificate;
    }
}

OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties*
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&com_adobe_granite_jetty_ssl_port, pJson["com.adobe.granite.jetty.ssl.port"], "OAIConfigNodePropertyInteger", "OAIConfigNodePropertyInteger");
    
    ::OpenAPI::setValue(&com_adobe_granite_jetty_ssl_keystore_user, pJson["com.adobe.granite.jetty.ssl.keystore.user"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&com_adobe_granite_jetty_ssl_keystore_password, pJson["com.adobe.granite.jetty.ssl.keystore.password"], "OAIConfigNodePropertyString", "OAIConfigNodePropertyString");
    
    ::OpenAPI::setValue(&com_adobe_granite_jetty_ssl_ciphersuites_excluded, pJson["com.adobe.granite.jetty.ssl.ciphersuites.excluded"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&com_adobe_granite_jetty_ssl_ciphersuites_included, pJson["com.adobe.granite.jetty.ssl.ciphersuites.included"], "OAIConfigNodePropertyArray", "OAIConfigNodePropertyArray");
    
    ::OpenAPI::setValue(&com_adobe_granite_jetty_ssl_client_certificate, pJson["com.adobe.granite.jetty.ssl.client.certificate"], "OAIConfigNodePropertyDropDown", "OAIConfigNodePropertyDropDown");
    
}

QString
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::asJsonObject() {
    QJsonObject obj;
    if((com_adobe_granite_jetty_ssl_port != nullptr) && (com_adobe_granite_jetty_ssl_port->isSet())){
        toJsonValue(QString("com.adobe.granite.jetty.ssl.port"), com_adobe_granite_jetty_ssl_port, obj, QString("OAIConfigNodePropertyInteger"));
    }
    if((com_adobe_granite_jetty_ssl_keystore_user != nullptr) && (com_adobe_granite_jetty_ssl_keystore_user->isSet())){
        toJsonValue(QString("com.adobe.granite.jetty.ssl.keystore.user"), com_adobe_granite_jetty_ssl_keystore_user, obj, QString("OAIConfigNodePropertyString"));
    }
    if((com_adobe_granite_jetty_ssl_keystore_password != nullptr) && (com_adobe_granite_jetty_ssl_keystore_password->isSet())){
        toJsonValue(QString("com.adobe.granite.jetty.ssl.keystore.password"), com_adobe_granite_jetty_ssl_keystore_password, obj, QString("OAIConfigNodePropertyString"));
    }
    if((com_adobe_granite_jetty_ssl_ciphersuites_excluded != nullptr) && (com_adobe_granite_jetty_ssl_ciphersuites_excluded->isSet())){
        toJsonValue(QString("com.adobe.granite.jetty.ssl.ciphersuites.excluded"), com_adobe_granite_jetty_ssl_ciphersuites_excluded, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((com_adobe_granite_jetty_ssl_ciphersuites_included != nullptr) && (com_adobe_granite_jetty_ssl_ciphersuites_included->isSet())){
        toJsonValue(QString("com.adobe.granite.jetty.ssl.ciphersuites.included"), com_adobe_granite_jetty_ssl_ciphersuites_included, obj, QString("OAIConfigNodePropertyArray"));
    }
    if((com_adobe_granite_jetty_ssl_client_certificate != nullptr) && (com_adobe_granite_jetty_ssl_client_certificate->isSet())){
        toJsonValue(QString("com.adobe.granite.jetty.ssl.client.certificate"), com_adobe_granite_jetty_ssl_client_certificate, obj, QString("OAIConfigNodePropertyDropDown"));
    }

    return obj;
}

OAIConfigNodePropertyInteger*
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslPort() {
    return com_adobe_granite_jetty_ssl_port;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslPort(OAIConfigNodePropertyInteger* com_adobe_granite_jetty_ssl_port) {
    this->com_adobe_granite_jetty_ssl_port = com_adobe_granite_jetty_ssl_port;
    this->m_com_adobe_granite_jetty_ssl_port_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslKeystoreUser() {
    return com_adobe_granite_jetty_ssl_keystore_user;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslKeystoreUser(OAIConfigNodePropertyString* com_adobe_granite_jetty_ssl_keystore_user) {
    this->com_adobe_granite_jetty_ssl_keystore_user = com_adobe_granite_jetty_ssl_keystore_user;
    this->m_com_adobe_granite_jetty_ssl_keystore_user_isSet = true;
}

OAIConfigNodePropertyString*
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslKeystorePassword() {
    return com_adobe_granite_jetty_ssl_keystore_password;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslKeystorePassword(OAIConfigNodePropertyString* com_adobe_granite_jetty_ssl_keystore_password) {
    this->com_adobe_granite_jetty_ssl_keystore_password = com_adobe_granite_jetty_ssl_keystore_password;
    this->m_com_adobe_granite_jetty_ssl_keystore_password_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslCiphersuitesExcluded() {
    return com_adobe_granite_jetty_ssl_ciphersuites_excluded;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslCiphersuitesExcluded(OAIConfigNodePropertyArray* com_adobe_granite_jetty_ssl_ciphersuites_excluded) {
    this->com_adobe_granite_jetty_ssl_ciphersuites_excluded = com_adobe_granite_jetty_ssl_ciphersuites_excluded;
    this->m_com_adobe_granite_jetty_ssl_ciphersuites_excluded_isSet = true;
}

OAIConfigNodePropertyArray*
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslCiphersuitesIncluded() {
    return com_adobe_granite_jetty_ssl_ciphersuites_included;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslCiphersuitesIncluded(OAIConfigNodePropertyArray* com_adobe_granite_jetty_ssl_ciphersuites_included) {
    this->com_adobe_granite_jetty_ssl_ciphersuites_included = com_adobe_granite_jetty_ssl_ciphersuites_included;
    this->m_com_adobe_granite_jetty_ssl_ciphersuites_included_isSet = true;
}

OAIConfigNodePropertyDropDown*
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::getComAdobeGraniteJettySslClientCertificate() {
    return com_adobe_granite_jetty_ssl_client_certificate;
}
void
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::setComAdobeGraniteJettySslClientCertificate(OAIConfigNodePropertyDropDown* com_adobe_granite_jetty_ssl_client_certificate) {
    this->com_adobe_granite_jetty_ssl_client_certificate = com_adobe_granite_jetty_ssl_client_certificate;
    this->m_com_adobe_granite_jetty_ssl_client_certificate_isSet = true;
}


bool
OAIComAdobeGraniteJettySslInternalGraniteSslConnectorFactoryProperties::isSet(){
    bool isObjectUpdated = false;
    do{
        if(com_adobe_granite_jetty_ssl_port != nullptr && com_adobe_granite_jetty_ssl_port->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_granite_jetty_ssl_keystore_user != nullptr && com_adobe_granite_jetty_ssl_keystore_user->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_granite_jetty_ssl_keystore_password != nullptr && com_adobe_granite_jetty_ssl_keystore_password->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_granite_jetty_ssl_ciphersuites_excluded != nullptr && com_adobe_granite_jetty_ssl_ciphersuites_excluded->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_granite_jetty_ssl_ciphersuites_included != nullptr && com_adobe_granite_jetty_ssl_ciphersuites_included->isSet()){ isObjectUpdated = true; break;}
        if(com_adobe_granite_jetty_ssl_client_certificate != nullptr && com_adobe_granite_jetty_ssl_client_certificate->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

