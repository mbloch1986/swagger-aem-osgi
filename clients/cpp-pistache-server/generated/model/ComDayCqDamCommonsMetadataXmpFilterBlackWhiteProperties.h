/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties.h
 *
 * 
 */

#ifndef ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties_H_
#define ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties_H_


#include "ModelBase.h"

#include "ConfigNodePropertyBoolean.h"
#include "ConfigNodePropertyArray.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties
    : public ModelBase
{
public:
    ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties();
    virtual ~ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties members

    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getXmpFilterApplyWhitelist() const;
    void setXmpFilterApplyWhitelist(ConfigNodePropertyBoolean const& value);
    bool xmpFilterApplyWhitelistIsSet() const;
    void unsetXmp_filter_apply_whitelist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getXmpFilterWhitelist() const;
    void setXmpFilterWhitelist(ConfigNodePropertyArray const& value);
    bool xmpFilterWhitelistIsSet() const;
    void unsetXmp_filter_whitelist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyBoolean getXmpFilterApplyBlacklist() const;
    void setXmpFilterApplyBlacklist(ConfigNodePropertyBoolean const& value);
    bool xmpFilterApplyBlacklistIsSet() const;
    void unsetXmp_filter_apply_blacklist();
    /// <summary>
    /// 
    /// </summary>
    ConfigNodePropertyArray getXmpFilterBlacklist() const;
    void setXmpFilterBlacklist(ConfigNodePropertyArray const& value);
    bool xmpFilterBlacklistIsSet() const;
    void unsetXmp_filter_blacklist();

protected:
    ConfigNodePropertyBoolean m_Xmp_filter_apply_whitelist;
    bool m_Xmp_filter_apply_whitelistIsSet;
    ConfigNodePropertyArray m_Xmp_filter_whitelist;
    bool m_Xmp_filter_whitelistIsSet;
    ConfigNodePropertyBoolean m_Xmp_filter_apply_blacklist;
    bool m_Xmp_filter_apply_blacklistIsSet;
    ConfigNodePropertyArray m_Xmp_filter_blacklist;
    bool m_Xmp_filter_blacklistIsSet;
};

}
}
}
}

#endif /* ComDayCqDamCommonsMetadataXmpFilterBlackWhiteProperties_H_ */
