/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NodeSwaggerAemOsgi);
  }
}(this, function(expect, NodeSwaggerAemOsgi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ComAdobeGraniteAuthOauthAccesstokenProviderProperties', function() {
    it('should create an instance of ComAdobeGraniteAuthOauthAccesstokenProviderProperties', function() {
      // uncomment below and update the code to test ComAdobeGraniteAuthOauthAccesstokenProviderProperties
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be.a(NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderTitle (base name: "auth.token.provider.title")', function() {
      // uncomment below and update the code to test the property authTokenProviderTitle
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderDefaultClaims (base name: "auth.token.provider.default.claims")', function() {
      // uncomment below and update the code to test the property authTokenProviderDefaultClaims
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderEndpoint (base name: "auth.token.provider.endpoint")', function() {
      // uncomment below and update the code to test the property authTokenProviderEndpoint
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authAccessTokenRequest (base name: "auth.access.token.request")', function() {
      // uncomment below and update the code to test the property authAccessTokenRequest
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderKeypairAlias (base name: "auth.token.provider.keypair.alias")', function() {
      // uncomment below and update the code to test the property authTokenProviderKeypairAlias
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderConnTimeout (base name: "auth.token.provider.conn.timeout")', function() {
      // uncomment below and update the code to test the property authTokenProviderConnTimeout
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderSoTimeout (base name: "auth.token.provider.so.timeout")', function() {
      // uncomment below and update the code to test the property authTokenProviderSoTimeout
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderClientId (base name: "auth.token.provider.client.id")', function() {
      // uncomment below and update the code to test the property authTokenProviderClientId
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderScope (base name: "auth.token.provider.scope")', function() {
      // uncomment below and update the code to test the property authTokenProviderScope
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderReuseAccessToken (base name: "auth.token.provider.reuse.access.token")', function() {
      // uncomment below and update the code to test the property authTokenProviderReuseAccessToken
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenProviderRelaxedSsl (base name: "auth.token.provider.relaxed.ssl")', function() {
      // uncomment below and update the code to test the property authTokenProviderRelaxedSsl
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property tokenRequestCustomizerType (base name: "token.request.customizer.type")', function() {
      // uncomment below and update the code to test the property tokenRequestCustomizerType
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

    it('should have the property authTokenValidatorType (base name: "auth.token.validator.type")', function() {
      // uncomment below and update the code to test the property authTokenValidatorType
      //var instane = new NodeSwaggerAemOsgi.ComAdobeGraniteAuthOauthAccesstokenProviderProperties();
      //expect(instance).to.be();
    });

  });

}));
