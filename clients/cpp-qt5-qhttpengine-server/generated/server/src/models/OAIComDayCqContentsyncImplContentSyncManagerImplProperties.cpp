/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIComDayCqContentsyncImplContentSyncManagerImplProperties.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIComDayCqContentsyncImplContentSyncManagerImplProperties::OAIComDayCqContentsyncImplContentSyncManagerImplProperties(QString json) {
    this->fromJson(json);
}

OAIComDayCqContentsyncImplContentSyncManagerImplProperties::OAIComDayCqContentsyncImplContentSyncManagerImplProperties() {
    this->init();
}

OAIComDayCqContentsyncImplContentSyncManagerImplProperties::~OAIComDayCqContentsyncImplContentSyncManagerImplProperties() {
    
}

void
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::init() {
    m_contentsync_fallback_authorizable_isSet = false;
    m_contentsync_fallback_updateuser_isSet = false;
}

void
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(contentsync_fallback_authorizable, json[QString("contentsync.fallback.authorizable")]);
    
    ::OpenAPI::fromJsonValue(contentsync_fallback_updateuser, json[QString("contentsync.fallback.updateuser")]);
    
}

QString
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::asJsonObject() const {
    QJsonObject obj;
	if(contentsync_fallback_authorizable.isSet()){
        obj.insert(QString("contentsync.fallback.authorizable"), ::OpenAPI::toJsonValue(contentsync_fallback_authorizable));
    }
	if(contentsync_fallback_updateuser.isSet()){
        obj.insert(QString("contentsync.fallback.updateuser"), ::OpenAPI::toJsonValue(contentsync_fallback_updateuser));
    }
    return obj;
}

OAIConfigNodePropertyString
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::getContentsyncFallbackAuthorizable() const {
    return contentsync_fallback_authorizable;
}
void
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::setContentsyncFallbackAuthorizable(const OAIConfigNodePropertyString &contentsync_fallback_authorizable) {
    this->contentsync_fallback_authorizable = contentsync_fallback_authorizable;
    this->m_contentsync_fallback_authorizable_isSet = true;
}

OAIConfigNodePropertyString
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::getContentsyncFallbackUpdateuser() const {
    return contentsync_fallback_updateuser;
}
void
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::setContentsyncFallbackUpdateuser(const OAIConfigNodePropertyString &contentsync_fallback_updateuser) {
    this->contentsync_fallback_updateuser = contentsync_fallback_updateuser;
    this->m_contentsync_fallback_updateuser_isSet = true;
}


bool
OAIComDayCqContentsyncImplContentSyncManagerImplProperties::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(contentsync_fallback_authorizable.isSet()){ isObjectUpdated = true; break;}
    
        if(contentsync_fallback_updateuser.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

