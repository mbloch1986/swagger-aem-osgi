/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
  #[serde(rename = "oauth.provider.id")]
  oauth_provider_id: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "oauth.provider.granite.authorization.url")]
  oauth_provider_granite_authorization_url: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "oauth.provider.granite.token.url")]
  oauth_provider_granite_token_url: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "oauth.provider.granite.profile.url")]
  oauth_provider_granite_profile_url: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "oauth.provider.granite.extended.details.urls")]
  oauth_provider_granite_extended_details_urls: Option<::models::ConfigNodePropertyString>
}

impl ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
  pub fn new() -> ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
    ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
      oauth_provider_id: None,
      oauth_provider_granite_authorization_url: None,
      oauth_provider_granite_token_url: None,
      oauth_provider_granite_profile_url: None,
      oauth_provider_granite_extended_details_urls: None
    }
  }

  pub fn set_oauth_provider_id(&mut self, oauth_provider_id: ::models::ConfigNodePropertyString) {
    self.oauth_provider_id = Some(oauth_provider_id);
  }

  pub fn with_oauth_provider_id(mut self, oauth_provider_id: ::models::ConfigNodePropertyString) -> ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
    self.oauth_provider_id = Some(oauth_provider_id);
    self
  }

  pub fn oauth_provider_id(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.oauth_provider_id.as_ref()
  }

  pub fn reset_oauth_provider_id(&mut self) {
    self.oauth_provider_id = None;
  }

  pub fn set_oauth_provider_granite_authorization_url(&mut self, oauth_provider_granite_authorization_url: ::models::ConfigNodePropertyString) {
    self.oauth_provider_granite_authorization_url = Some(oauth_provider_granite_authorization_url);
  }

  pub fn with_oauth_provider_granite_authorization_url(mut self, oauth_provider_granite_authorization_url: ::models::ConfigNodePropertyString) -> ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
    self.oauth_provider_granite_authorization_url = Some(oauth_provider_granite_authorization_url);
    self
  }

  pub fn oauth_provider_granite_authorization_url(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.oauth_provider_granite_authorization_url.as_ref()
  }

  pub fn reset_oauth_provider_granite_authorization_url(&mut self) {
    self.oauth_provider_granite_authorization_url = None;
  }

  pub fn set_oauth_provider_granite_token_url(&mut self, oauth_provider_granite_token_url: ::models::ConfigNodePropertyString) {
    self.oauth_provider_granite_token_url = Some(oauth_provider_granite_token_url);
  }

  pub fn with_oauth_provider_granite_token_url(mut self, oauth_provider_granite_token_url: ::models::ConfigNodePropertyString) -> ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
    self.oauth_provider_granite_token_url = Some(oauth_provider_granite_token_url);
    self
  }

  pub fn oauth_provider_granite_token_url(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.oauth_provider_granite_token_url.as_ref()
  }

  pub fn reset_oauth_provider_granite_token_url(&mut self) {
    self.oauth_provider_granite_token_url = None;
  }

  pub fn set_oauth_provider_granite_profile_url(&mut self, oauth_provider_granite_profile_url: ::models::ConfigNodePropertyString) {
    self.oauth_provider_granite_profile_url = Some(oauth_provider_granite_profile_url);
  }

  pub fn with_oauth_provider_granite_profile_url(mut self, oauth_provider_granite_profile_url: ::models::ConfigNodePropertyString) -> ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
    self.oauth_provider_granite_profile_url = Some(oauth_provider_granite_profile_url);
    self
  }

  pub fn oauth_provider_granite_profile_url(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.oauth_provider_granite_profile_url.as_ref()
  }

  pub fn reset_oauth_provider_granite_profile_url(&mut self) {
    self.oauth_provider_granite_profile_url = None;
  }

  pub fn set_oauth_provider_granite_extended_details_urls(&mut self, oauth_provider_granite_extended_details_urls: ::models::ConfigNodePropertyString) {
    self.oauth_provider_granite_extended_details_urls = Some(oauth_provider_granite_extended_details_urls);
  }

  pub fn with_oauth_provider_granite_extended_details_urls(mut self, oauth_provider_granite_extended_details_urls: ::models::ConfigNodePropertyString) -> ComAdobeGraniteAuthOauthImplGraniteProviderProperties {
    self.oauth_provider_granite_extended_details_urls = Some(oauth_provider_granite_extended_details_urls);
    self
  }

  pub fn oauth_provider_granite_extended_details_urls(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.oauth_provider_granite_extended_details_urls.as_ref()
  }

  pub fn reset_oauth_provider_granite_extended_details_urls(&mut self) {
    self.oauth_provider_granite_extended_details_urls = None;
  }

}



