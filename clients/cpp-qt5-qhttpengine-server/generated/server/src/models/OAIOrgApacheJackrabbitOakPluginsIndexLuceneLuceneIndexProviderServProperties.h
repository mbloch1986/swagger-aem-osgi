/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.h
 *
 * 
 */

#ifndef OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties_H
#define OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties: public OAIObject {
public:
    OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties();
    OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties(QString json);
    ~OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyBoolean getDisabled() const;
    void setDisabled(const OAIConfigNodePropertyBoolean &disabled);

    OAIConfigNodePropertyBoolean getDebug() const;
    void setDebug(const OAIConfigNodePropertyBoolean &debug);

    OAIConfigNodePropertyString getLocalIndexDir() const;
    void setLocalIndexDir(const OAIConfigNodePropertyString &local_index_dir);

    OAIConfigNodePropertyBoolean getEnableOpenIndexAsync() const;
    void setEnableOpenIndexAsync(const OAIConfigNodePropertyBoolean &enable_open_index_async);

    OAIConfigNodePropertyInteger getThreadPoolSize() const;
    void setThreadPoolSize(const OAIConfigNodePropertyInteger &thread_pool_size);

    OAIConfigNodePropertyBoolean getPrefetchIndexFiles() const;
    void setPrefetchIndexFiles(const OAIConfigNodePropertyBoolean &prefetch_index_files);

    OAIConfigNodePropertyInteger getExtractedTextCacheSizeInMb() const;
    void setExtractedTextCacheSizeInMb(const OAIConfigNodePropertyInteger &extracted_text_cache_size_in_mb);

    OAIConfigNodePropertyInteger getExtractedTextCacheExpiryInSecs() const;
    void setExtractedTextCacheExpiryInSecs(const OAIConfigNodePropertyInteger &extracted_text_cache_expiry_in_secs);

    OAIConfigNodePropertyBoolean getAlwaysUsePreExtractedCache() const;
    void setAlwaysUsePreExtractedCache(const OAIConfigNodePropertyBoolean &always_use_pre_extracted_cache);

    OAIConfigNodePropertyInteger getBooleanClauseLimit() const;
    void setBooleanClauseLimit(const OAIConfigNodePropertyInteger &boolean_clause_limit);

    OAIConfigNodePropertyBoolean getEnableHybridIndexing() const;
    void setEnableHybridIndexing(const OAIConfigNodePropertyBoolean &enable_hybrid_indexing);

    OAIConfigNodePropertyInteger getHybridQueueSize() const;
    void setHybridQueueSize(const OAIConfigNodePropertyInteger &hybrid_queue_size);

    OAIConfigNodePropertyBoolean getDisableStoredIndexDefinition() const;
    void setDisableStoredIndexDefinition(const OAIConfigNodePropertyBoolean &disable_stored_index_definition);

    OAIConfigNodePropertyBoolean getDeletedBlobsCollectionEnabled() const;
    void setDeletedBlobsCollectionEnabled(const OAIConfigNodePropertyBoolean &deleted_blobs_collection_enabled);

    OAIConfigNodePropertyInteger getPropIndexCleanerIntervalInSecs() const;
    void setPropIndexCleanerIntervalInSecs(const OAIConfigNodePropertyInteger &prop_index_cleaner_interval_in_secs);

    OAIConfigNodePropertyBoolean getEnableSingleBlobIndexFiles() const;
    void setEnableSingleBlobIndexFiles(const OAIConfigNodePropertyBoolean &enable_single_blob_index_files);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyBoolean disabled;
    bool m_disabled_isSet;

    OAIConfigNodePropertyBoolean debug;
    bool m_debug_isSet;

    OAIConfigNodePropertyString local_index_dir;
    bool m_local_index_dir_isSet;

    OAIConfigNodePropertyBoolean enable_open_index_async;
    bool m_enable_open_index_async_isSet;

    OAIConfigNodePropertyInteger thread_pool_size;
    bool m_thread_pool_size_isSet;

    OAIConfigNodePropertyBoolean prefetch_index_files;
    bool m_prefetch_index_files_isSet;

    OAIConfigNodePropertyInteger extracted_text_cache_size_in_mb;
    bool m_extracted_text_cache_size_in_mb_isSet;

    OAIConfigNodePropertyInteger extracted_text_cache_expiry_in_secs;
    bool m_extracted_text_cache_expiry_in_secs_isSet;

    OAIConfigNodePropertyBoolean always_use_pre_extracted_cache;
    bool m_always_use_pre_extracted_cache_isSet;

    OAIConfigNodePropertyInteger boolean_clause_limit;
    bool m_boolean_clause_limit_isSet;

    OAIConfigNodePropertyBoolean enable_hybrid_indexing;
    bool m_enable_hybrid_indexing_isSet;

    OAIConfigNodePropertyInteger hybrid_queue_size;
    bool m_hybrid_queue_size_isSet;

    OAIConfigNodePropertyBoolean disable_stored_index_definition;
    bool m_disable_stored_index_definition_isSet;

    OAIConfigNodePropertyBoolean deleted_blobs_collection_enabled;
    bool m_deleted_blobs_collection_enabled_isSet;

    OAIConfigNodePropertyInteger prop_index_cleaner_interval_in_secs;
    bool m_prop_index_cleaner_interval_in_secs_isSet;

    OAIConfigNodePropertyBoolean enable_single_blob_index_files;
    bool m_enable_single_blob_index_files_isSet;

};

}

#endif // OAIOrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties_H
