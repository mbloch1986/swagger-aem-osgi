/* 
 * Adobe Experience Manager OSGI config (AEM) API
 *
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OrgApacheSlingEngineParametersProperties {
  #[serde(rename = "sling.default.parameter.encoding")]
  sling_default_parameter_encoding: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "sling.default.max.parameters")]
  sling_default_max_parameters: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "file.location")]
  file_location: Option<::models::ConfigNodePropertyString>,
  #[serde(rename = "file.threshold")]
  file_threshold: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "file.max")]
  file_max: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "request.max")]
  request_max: Option<::models::ConfigNodePropertyInteger>,
  #[serde(rename = "sling.default.parameter.checkForAdditionalContainerParameters")]
  sling_default_parameter_check_for_additional_container_parameters: Option<::models::ConfigNodePropertyBoolean>
}

impl OrgApacheSlingEngineParametersProperties {
  pub fn new() -> OrgApacheSlingEngineParametersProperties {
    OrgApacheSlingEngineParametersProperties {
      sling_default_parameter_encoding: None,
      sling_default_max_parameters: None,
      file_location: None,
      file_threshold: None,
      file_max: None,
      request_max: None,
      sling_default_parameter_check_for_additional_container_parameters: None
    }
  }

  pub fn set_sling_default_parameter_encoding(&mut self, sling_default_parameter_encoding: ::models::ConfigNodePropertyString) {
    self.sling_default_parameter_encoding = Some(sling_default_parameter_encoding);
  }

  pub fn with_sling_default_parameter_encoding(mut self, sling_default_parameter_encoding: ::models::ConfigNodePropertyString) -> OrgApacheSlingEngineParametersProperties {
    self.sling_default_parameter_encoding = Some(sling_default_parameter_encoding);
    self
  }

  pub fn sling_default_parameter_encoding(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.sling_default_parameter_encoding.as_ref()
  }

  pub fn reset_sling_default_parameter_encoding(&mut self) {
    self.sling_default_parameter_encoding = None;
  }

  pub fn set_sling_default_max_parameters(&mut self, sling_default_max_parameters: ::models::ConfigNodePropertyInteger) {
    self.sling_default_max_parameters = Some(sling_default_max_parameters);
  }

  pub fn with_sling_default_max_parameters(mut self, sling_default_max_parameters: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingEngineParametersProperties {
    self.sling_default_max_parameters = Some(sling_default_max_parameters);
    self
  }

  pub fn sling_default_max_parameters(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.sling_default_max_parameters.as_ref()
  }

  pub fn reset_sling_default_max_parameters(&mut self) {
    self.sling_default_max_parameters = None;
  }

  pub fn set_file_location(&mut self, file_location: ::models::ConfigNodePropertyString) {
    self.file_location = Some(file_location);
  }

  pub fn with_file_location(mut self, file_location: ::models::ConfigNodePropertyString) -> OrgApacheSlingEngineParametersProperties {
    self.file_location = Some(file_location);
    self
  }

  pub fn file_location(&self) -> Option<&::models::ConfigNodePropertyString> {
    self.file_location.as_ref()
  }

  pub fn reset_file_location(&mut self) {
    self.file_location = None;
  }

  pub fn set_file_threshold(&mut self, file_threshold: ::models::ConfigNodePropertyInteger) {
    self.file_threshold = Some(file_threshold);
  }

  pub fn with_file_threshold(mut self, file_threshold: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingEngineParametersProperties {
    self.file_threshold = Some(file_threshold);
    self
  }

  pub fn file_threshold(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.file_threshold.as_ref()
  }

  pub fn reset_file_threshold(&mut self) {
    self.file_threshold = None;
  }

  pub fn set_file_max(&mut self, file_max: ::models::ConfigNodePropertyInteger) {
    self.file_max = Some(file_max);
  }

  pub fn with_file_max(mut self, file_max: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingEngineParametersProperties {
    self.file_max = Some(file_max);
    self
  }

  pub fn file_max(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.file_max.as_ref()
  }

  pub fn reset_file_max(&mut self) {
    self.file_max = None;
  }

  pub fn set_request_max(&mut self, request_max: ::models::ConfigNodePropertyInteger) {
    self.request_max = Some(request_max);
  }

  pub fn with_request_max(mut self, request_max: ::models::ConfigNodePropertyInteger) -> OrgApacheSlingEngineParametersProperties {
    self.request_max = Some(request_max);
    self
  }

  pub fn request_max(&self) -> Option<&::models::ConfigNodePropertyInteger> {
    self.request_max.as_ref()
  }

  pub fn reset_request_max(&mut self) {
    self.request_max = None;
  }

  pub fn set_sling_default_parameter_check_for_additional_container_parameters(&mut self, sling_default_parameter_check_for_additional_container_parameters: ::models::ConfigNodePropertyBoolean) {
    self.sling_default_parameter_check_for_additional_container_parameters = Some(sling_default_parameter_check_for_additional_container_parameters);
  }

  pub fn with_sling_default_parameter_check_for_additional_container_parameters(mut self, sling_default_parameter_check_for_additional_container_parameters: ::models::ConfigNodePropertyBoolean) -> OrgApacheSlingEngineParametersProperties {
    self.sling_default_parameter_check_for_additional_container_parameters = Some(sling_default_parameter_check_for_additional_container_parameters);
    self
  }

  pub fn sling_default_parameter_check_for_additional_container_parameters(&self) -> Option<&::models::ConfigNodePropertyBoolean> {
    self.sling_default_parameter_check_for_additional_container_parameters.as_ref()
  }

  pub fn reset_sling_default_parameter_check_for_additional_container_parameters(&mut self) {
    self.sling_default_parameter_check_for_additional_container_parameters = None;
  }

}



