/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ComDayCqDamScene7ImplScene7APIClientImplProperties.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

ComDayCqDamScene7ImplScene7APIClientImplProperties::ComDayCqDamScene7ImplScene7APIClientImplProperties()
{
    m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_nameIsSet = false;
    m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_nameIsSet = false;
}

ComDayCqDamScene7ImplScene7APIClientImplProperties::~ComDayCqDamScene7ImplScene7APIClientImplProperties()
{
}

void ComDayCqDamScene7ImplScene7APIClientImplProperties::validate()
{
    // TODO: implement validation
}

web::json::value ComDayCqDamScene7ImplScene7APIClientImplProperties::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_nameIsSet)
    {
        val[utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.nofilter.name")] = ModelBase::toJson(m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_name);
    }
    if(m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_nameIsSet)
    {
        val[utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.withfilter.name")] = ModelBase::toJson(m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_name);
    }

    return val;
}

void ComDayCqDamScene7ImplScene7APIClientImplProperties::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.nofilter.name")))
    {
        if(!val[utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.nofilter.name")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyInteger> newItem(new ConfigNodePropertyInteger());
            newItem->fromJson(val[utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.nofilter.name")]);
            setCqDamScene7ApiclientRecordsperpageNofilterName( newItem );
        }
    }
    if(val.has_field(utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.withfilter.name")))
    {
        if(!val[utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.withfilter.name")].is_null())
        {
            std::shared_ptr<ConfigNodePropertyInteger> newItem(new ConfigNodePropertyInteger());
            newItem->fromJson(val[utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.withfilter.name")]);
            setCqDamScene7ApiclientRecordsperpageWithfilterName( newItem );
        }
    }
}

void ComDayCqDamScene7ImplScene7APIClientImplProperties::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_nameIsSet)
    {
        if (m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_name.get())
        {
            m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_name->toMultipart(multipart, utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.nofilter.name."));
        }
    }
    if(m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_nameIsSet)
    {
        if (m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_name.get())
        {
            m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_name->toMultipart(multipart, utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.withfilter.name."));
        }
    }
}

void ComDayCqDamScene7ImplScene7APIClientImplProperties::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.nofilter.name")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.nofilter.name")))
        {
            std::shared_ptr<ConfigNodePropertyInteger> newItem(new ConfigNodePropertyInteger());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.nofilter.name."));
            setCqDamScene7ApiclientRecordsperpageNofilterName( newItem );
        }
    }
    if(multipart->hasContent(utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.withfilter.name")))
    {
        if(multipart->hasContent(utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.withfilter.name")))
        {
            std::shared_ptr<ConfigNodePropertyInteger> newItem(new ConfigNodePropertyInteger());
            newItem->fromMultiPart(multipart, utility::conversions::to_string_t("cq.dam.scene7.apiclient.recordsperpage.withfilter.name."));
            setCqDamScene7ApiclientRecordsperpageWithfilterName( newItem );
        }
    }
}

std::shared_ptr<ConfigNodePropertyInteger> ComDayCqDamScene7ImplScene7APIClientImplProperties::getCqDamScene7ApiclientRecordsperpageNofilterName() const
{
    return m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_name;
}


void ComDayCqDamScene7ImplScene7APIClientImplProperties::setCqDamScene7ApiclientRecordsperpageNofilterName(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_name = value;
    m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_nameIsSet = true;
}
bool ComDayCqDamScene7ImplScene7APIClientImplProperties::cqDamScene7ApiclientRecordsperpageNofilterNameIsSet() const
{
    return m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_nameIsSet;
}

void ComDayCqDamScene7ImplScene7APIClientImplProperties::unsetCq_dam_scene7_apiclient_recordsperpage_nofilter_name()
{
    m_Cq_dam_scene7_apiclient_recordsperpage_nofilter_nameIsSet = false;
}

std::shared_ptr<ConfigNodePropertyInteger> ComDayCqDamScene7ImplScene7APIClientImplProperties::getCqDamScene7ApiclientRecordsperpageWithfilterName() const
{
    return m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_name;
}


void ComDayCqDamScene7ImplScene7APIClientImplProperties::setCqDamScene7ApiclientRecordsperpageWithfilterName(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_name = value;
    m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_nameIsSet = true;
}
bool ComDayCqDamScene7ImplScene7APIClientImplProperties::cqDamScene7ApiclientRecordsperpageWithfilterNameIsSet() const
{
    return m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_nameIsSet;
}

void ComDayCqDamScene7ImplScene7APIClientImplProperties::unsetCq_dam_scene7_apiclient_recordsperpage_withfilter_name()
{
    m_Cq_dam_scene7_apiclient_recordsperpage_withfilter_nameIsSet = false;
}

}
}
}
}

