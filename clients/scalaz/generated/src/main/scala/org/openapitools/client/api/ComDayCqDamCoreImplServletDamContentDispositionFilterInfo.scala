package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime
import ComDayCqDamCoreImplServletDamContentDispositionFilterInfo._

case class ComDayCqDamCoreImplServletDamContentDispositionFilterInfo (
  pid: Option[String],
title: Option[String],
description: Option[String],
properties: Option[ComDayCqDamCoreImplServletDamContentDispositionFilterProperties])

object ComDayCqDamCoreImplServletDamContentDispositionFilterInfo {
  import DateTimeCodecs._

  implicit val ComDayCqDamCoreImplServletDamContentDispositionFilterInfoCodecJson: CodecJson[ComDayCqDamCoreImplServletDamContentDispositionFilterInfo] = CodecJson.derive[ComDayCqDamCoreImplServletDamContentDispositionFilterInfo]
  implicit val ComDayCqDamCoreImplServletDamContentDispositionFilterInfoDecoder: EntityDecoder[ComDayCqDamCoreImplServletDamContentDispositionFilterInfo] = jsonOf[ComDayCqDamCoreImplServletDamContentDispositionFilterInfo]
  implicit val ComDayCqDamCoreImplServletDamContentDispositionFilterInfoEncoder: EntityEncoder[ComDayCqDamCoreImplServletDamContentDispositionFilterInfo] = jsonEncoderOf[ComDayCqDamCoreImplServletDamContentDispositionFilterInfo]
}
