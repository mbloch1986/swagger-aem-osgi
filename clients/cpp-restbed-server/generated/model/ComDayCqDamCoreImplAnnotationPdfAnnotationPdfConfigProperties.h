/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties.h
 *
 * 
 */

#ifndef ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties_H_
#define ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties_H_



#include "ConfigNodePropertyInteger.h"
#include "ConfigNodePropertyString.h"
#include <memory>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties
{
public:
    ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties();
    virtual ~ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties();
    
    std::string toJsonString();
    void fromJsonString(std::string const& jsonString);

    /////////////////////////////////////////////
    /// ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties members
    
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfDocumentWidth() const;
    void setCqDamConfigAnnotationPdfDocumentWidth(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfDocumentHeight() const;
    void setCqDamConfigAnnotationPdfDocumentHeight(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfDocumentPaddingHorizontal() const;
    void setCqDamConfigAnnotationPdfDocumentPaddingHorizontal(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfDocumentPaddingVertical() const;
    void setCqDamConfigAnnotationPdfDocumentPaddingVertical(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfFontSize() const;
    void setCqDamConfigAnnotationPdfFontSize(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getCqDamConfigAnnotationPdfFontColor() const;
    void setCqDamConfigAnnotationPdfFontColor(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getCqDamConfigAnnotationPdfFontFamily() const;
    void setCqDamConfigAnnotationPdfFontFamily(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getCqDamConfigAnnotationPdfFontLight() const;
    void setCqDamConfigAnnotationPdfFontLight(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfMarginTextImage() const;
    void setCqDamConfigAnnotationPdfMarginTextImage(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfMinImageHeight() const;
    void setCqDamConfigAnnotationPdfMinImageHeight(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfReviewStatusWidth() const;
    void setCqDamConfigAnnotationPdfReviewStatusWidth(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getCqDamConfigAnnotationPdfReviewStatusColorApproved() const;
    void setCqDamConfigAnnotationPdfReviewStatusColorApproved(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getCqDamConfigAnnotationPdfReviewStatusColorRejected() const;
    void setCqDamConfigAnnotationPdfReviewStatusColorRejected(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyString> getCqDamConfigAnnotationPdfReviewStatusColorChangesRequested() const;
    void setCqDamConfigAnnotationPdfReviewStatusColorChangesRequested(std::shared_ptr<ConfigNodePropertyString> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfAnnotationMarkerWidth() const;
    void setCqDamConfigAnnotationPdfAnnotationMarkerWidth(std::shared_ptr<ConfigNodePropertyInteger> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ConfigNodePropertyInteger> getCqDamConfigAnnotationPdfAssetMinheight() const;
    void setCqDamConfigAnnotationPdfAssetMinheight(std::shared_ptr<ConfigNodePropertyInteger> value);

protected:
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_document_width;
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_document_height;
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_document_padding_horizontal;
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_document_padding_vertical;
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_font_size;
    std::shared_ptr<ConfigNodePropertyString> m_Cq_dam_config_annotation_pdf_font_color;
    std::shared_ptr<ConfigNodePropertyString> m_Cq_dam_config_annotation_pdf_font_family;
    std::shared_ptr<ConfigNodePropertyString> m_Cq_dam_config_annotation_pdf_font_light;
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_marginTextImage;
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_minImageHeight;
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_reviewStatus_width;
    std::shared_ptr<ConfigNodePropertyString> m_Cq_dam_config_annotation_pdf_reviewStatus_color_approved;
    std::shared_ptr<ConfigNodePropertyString> m_Cq_dam_config_annotation_pdf_reviewStatus_color_rejected;
    std::shared_ptr<ConfigNodePropertyString> m_Cq_dam_config_annotation_pdf_reviewStatus_color_changesRequested;
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_annotationMarker_width;
    std::shared_ptr<ConfigNodePropertyInteger> m_Cq_dam_config_annotation_pdf_asset_minheight;
};

}
}
}
}

#endif /* ComDayCqDamCoreImplAnnotationPdfAnnotationPdfConfigProperties_H_ */
