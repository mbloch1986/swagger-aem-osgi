/**
* Adobe Experience Manager OSGI config (AEM) API
* Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
*
* OpenAPI spec version: 1.0.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties()
{
    m_FieldWhitelistIsSet = false;
    m_SitePathFiltersIsSet = false;
    m_SitePackageGroupIsSet = false;
    
}

ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::~ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties()
{
}

void ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::validate()
{
    // TODO: implement validation
}

nlohmann::json ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_FieldWhitelistIsSet)
    {
        val["fieldWhitelist"] = ModelBase::toJson(m_FieldWhitelist);
    }
    if(m_SitePathFiltersIsSet)
    {
        val["sitePathFilters"] = ModelBase::toJson(m_SitePathFilters);
    }
    if(m_SitePackageGroupIsSet)
    {
        val["sitePackageGroup"] = ModelBase::toJson(m_SitePackageGroup);
    }
    

    return val;
}

void ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::fromJson(nlohmann::json& val)
{
    if(val.find("fieldWhitelist") != val.end())
    {
        if(!val["fieldWhitelist"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["fieldWhitelist"]);
            setFieldWhitelist( newItem );
        }
        
    }
    if(val.find("sitePathFilters") != val.end())
    {
        if(!val["sitePathFilters"].is_null())
        {
            ConfigNodePropertyArray newItem;
            newItem.fromJson(val["sitePathFilters"]);
            setSitePathFilters( newItem );
        }
        
    }
    if(val.find("sitePackageGroup") != val.end())
    {
        if(!val["sitePackageGroup"].is_null())
        {
            ConfigNodePropertyString newItem;
            newItem.fromJson(val["sitePackageGroup"]);
            setSitePackageGroup( newItem );
        }
        
    }
    
}


ConfigNodePropertyArray ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::getFieldWhitelist() const
{
    return m_FieldWhitelist;
}
void ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::setFieldWhitelist(ConfigNodePropertyArray const& value)
{
    m_FieldWhitelist = value;
    m_FieldWhitelistIsSet = true;
}
bool ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::fieldWhitelistIsSet() const
{
    return m_FieldWhitelistIsSet;
}
void ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::unsetFieldWhitelist()
{
    m_FieldWhitelistIsSet = false;
}
ConfigNodePropertyArray ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::getSitePathFilters() const
{
    return m_SitePathFilters;
}
void ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::setSitePathFilters(ConfigNodePropertyArray const& value)
{
    m_SitePathFilters = value;
    m_SitePathFiltersIsSet = true;
}
bool ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::sitePathFiltersIsSet() const
{
    return m_SitePathFiltersIsSet;
}
void ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::unsetSitePathFilters()
{
    m_SitePathFiltersIsSet = false;
}
ConfigNodePropertyString ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::getSitePackageGroup() const
{
    return m_SitePackageGroup;
}
void ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::setSitePackageGroup(ConfigNodePropertyString const& value)
{
    m_SitePackageGroup = value;
    m_SitePackageGroupIsSet = true;
}
bool ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::sitePackageGroupIsSet() const
{
    return m_SitePackageGroupIsSet;
}
void ComAdobeCqSocialSiteEndpointsImplSiteOperationServiceProperties::unsetSitePackageGroup()
{
    m_SitePackageGroupIsSet = false;
}

}
}
}
}

