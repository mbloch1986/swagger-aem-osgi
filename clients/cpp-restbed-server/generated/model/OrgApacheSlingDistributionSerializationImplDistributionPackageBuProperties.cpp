/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties()
{
    
}

OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::~OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties()
{
}

std::string OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	write_json(ss, pt, false);
	return ss.str();
}

void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
}

std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getName() const
{
    return m_Name;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setName(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Name = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getType() const
{
    return m_Type;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setType(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_Type = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getFormatTarget() const
{
    return m_Format_target;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setFormatTarget(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_Format_target = value;
}
std::shared_ptr<ConfigNodePropertyString> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getTempFsFolder() const
{
    return m_TempFsFolder;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setTempFsFolder(std::shared_ptr<ConfigNodePropertyString> value)
{
    m_TempFsFolder = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getFileThreshold() const
{
    return m_FileThreshold;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setFileThreshold(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_FileThreshold = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getMemoryUnit() const
{
    return m_MemoryUnit;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setMemoryUnit(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_MemoryUnit = value;
}
std::shared_ptr<ConfigNodePropertyBoolean> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getUseOffHeapMemory() const
{
    return m_UseOffHeapMemory;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setUseOffHeapMemory(std::shared_ptr<ConfigNodePropertyBoolean> value)
{
    m_UseOffHeapMemory = value;
}
std::shared_ptr<ConfigNodePropertyDropDown> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getDigestAlgorithm() const
{
    return m_DigestAlgorithm;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setDigestAlgorithm(std::shared_ptr<ConfigNodePropertyDropDown> value)
{
    m_DigestAlgorithm = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getMonitoringQueueSize() const
{
    return m_MonitoringQueueSize;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setMonitoringQueueSize(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_MonitoringQueueSize = value;
}
std::shared_ptr<ConfigNodePropertyInteger> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getCleanupDelay() const
{
    return m_CleanupDelay;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setCleanupDelay(std::shared_ptr<ConfigNodePropertyInteger> value)
{
    m_CleanupDelay = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getPackageFilters() const
{
    return m_Package_filters;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setPackageFilters(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Package_filters = value;
}
std::shared_ptr<ConfigNodePropertyArray> OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::getPropertyFilters() const
{
    return m_Property_filters;
}
void OrgApacheSlingDistributionSerializationImplDistributionPackageBuProperties::setPropertyFilters(std::shared_ptr<ConfigNodePropertyArray> value)
{
    m_Property_filters = value;
}

}
}
}
}

