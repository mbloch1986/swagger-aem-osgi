/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * OpenAPI spec version: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties.h
 *
 * 
 */

#ifndef OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties_H
#define OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties_H

#include <QJsonObject>


#include "OAIConfigNodePropertyArray.h"
#include "OAIConfigNodePropertyBoolean.h"
#include "OAIConfigNodePropertyDropDown.h"
#include "OAIConfigNodePropertyFloat.h"
#include "OAIConfigNodePropertyInteger.h"
#include "OAIConfigNodePropertyString.h"

#include "OAIObject.h"

namespace OpenAPI {

class OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties: public OAIObject {
public:
    OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties();
    OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties(QString json);
    ~OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConfigNodePropertyInteger getServiceRanking() const;
    void setServiceRanking(const OAIConfigNodePropertyInteger &service_ranking);

    OAIConfigNodePropertyInteger getGlobalSize() const;
    void setGlobalSize(const OAIConfigNodePropertyInteger &global_size);

    OAIConfigNodePropertyInteger getMaxDiskUsage() const;
    void setMaxDiskUsage(const OAIConfigNodePropertyInteger &max_disk_usage);

    OAIConfigNodePropertyBoolean getPersistenceEnabled() const;
    void setPersistenceEnabled(const OAIConfigNodePropertyBoolean &persistence_enabled);

    OAIConfigNodePropertyInteger getThreadPoolMaxSize() const;
    void setThreadPoolMaxSize(const OAIConfigNodePropertyInteger &thread_pool_max_size);

    OAIConfigNodePropertyInteger getScheduledThreadPoolMaxSize() const;
    void setScheduledThreadPoolMaxSize(const OAIConfigNodePropertyInteger &scheduled_thread_pool_max_size);

    OAIConfigNodePropertyInteger getGracefulShutdownTimeout() const;
    void setGracefulShutdownTimeout(const OAIConfigNodePropertyInteger &graceful_shutdown_timeout);

    OAIConfigNodePropertyArray getQueues() const;
    void setQueues(const OAIConfigNodePropertyArray &queues);

    OAIConfigNodePropertyArray getTopics() const;
    void setTopics(const OAIConfigNodePropertyArray &topics);

    OAIConfigNodePropertyInteger getAddressesMaxDeliveryAttempts() const;
    void setAddressesMaxDeliveryAttempts(const OAIConfigNodePropertyInteger &addresses_max_delivery_attempts);

    OAIConfigNodePropertyInteger getAddressesExpiryDelay() const;
    void setAddressesExpiryDelay(const OAIConfigNodePropertyInteger &addresses_expiry_delay);

    OAIConfigNodePropertyDropDown getAddressesAddressFullMessagePolicy() const;
    void setAddressesAddressFullMessagePolicy(const OAIConfigNodePropertyDropDown &addresses_address_full_message_policy);

    OAIConfigNodePropertyInteger getAddressesMaxSizeBytes() const;
    void setAddressesMaxSizeBytes(const OAIConfigNodePropertyInteger &addresses_max_size_bytes);

    OAIConfigNodePropertyInteger getAddressesPageSizeBytes() const;
    void setAddressesPageSizeBytes(const OAIConfigNodePropertyInteger &addresses_page_size_bytes);

    OAIConfigNodePropertyInteger getAddressesPageCacheMaxSize() const;
    void setAddressesPageCacheMaxSize(const OAIConfigNodePropertyInteger &addresses_page_cache_max_size);

    OAIConfigNodePropertyString getClusterUser() const;
    void setClusterUser(const OAIConfigNodePropertyString &cluster_user);

    OAIConfigNodePropertyString getClusterPassword() const;
    void setClusterPassword(const OAIConfigNodePropertyString &cluster_password);

    OAIConfigNodePropertyInteger getClusterCallTimeout() const;
    void setClusterCallTimeout(const OAIConfigNodePropertyInteger &cluster_call_timeout);

    OAIConfigNodePropertyInteger getClusterCallFailoverTimeout() const;
    void setClusterCallFailoverTimeout(const OAIConfigNodePropertyInteger &cluster_call_failover_timeout);

    OAIConfigNodePropertyInteger getClusterClientFailureCheckPeriod() const;
    void setClusterClientFailureCheckPeriod(const OAIConfigNodePropertyInteger &cluster_client_failure_check_period);

    OAIConfigNodePropertyInteger getClusterNotificationAttempts() const;
    void setClusterNotificationAttempts(const OAIConfigNodePropertyInteger &cluster_notification_attempts);

    OAIConfigNodePropertyInteger getClusterNotificationInterval() const;
    void setClusterNotificationInterval(const OAIConfigNodePropertyInteger &cluster_notification_interval);

    OAIConfigNodePropertyInteger getIdCacheSize() const;
    void setIdCacheSize(const OAIConfigNodePropertyInteger &id_cache_size);

    OAIConfigNodePropertyInteger getClusterConfirmationWindowSize() const;
    void setClusterConfirmationWindowSize(const OAIConfigNodePropertyInteger &cluster_confirmation_window_size);

    OAIConfigNodePropertyInteger getClusterConnectionTtl() const;
    void setClusterConnectionTtl(const OAIConfigNodePropertyInteger &cluster_connection_ttl);

    OAIConfigNodePropertyBoolean getClusterDuplicateDetection() const;
    void setClusterDuplicateDetection(const OAIConfigNodePropertyBoolean &cluster_duplicate_detection);

    OAIConfigNodePropertyInteger getClusterInitialConnectAttempts() const;
    void setClusterInitialConnectAttempts(const OAIConfigNodePropertyInteger &cluster_initial_connect_attempts);

    OAIConfigNodePropertyInteger getClusterMaxRetryInterval() const;
    void setClusterMaxRetryInterval(const OAIConfigNodePropertyInteger &cluster_max_retry_interval);

    OAIConfigNodePropertyInteger getClusterMinLargeMessageSize() const;
    void setClusterMinLargeMessageSize(const OAIConfigNodePropertyInteger &cluster_min_large_message_size);

    OAIConfigNodePropertyInteger getClusterProducerWindowSize() const;
    void setClusterProducerWindowSize(const OAIConfigNodePropertyInteger &cluster_producer_window_size);

    OAIConfigNodePropertyInteger getClusterReconnectAttempts() const;
    void setClusterReconnectAttempts(const OAIConfigNodePropertyInteger &cluster_reconnect_attempts);

    OAIConfigNodePropertyInteger getClusterRetryInterval() const;
    void setClusterRetryInterval(const OAIConfigNodePropertyInteger &cluster_retry_interval);

    OAIConfigNodePropertyFloat getClusterRetryIntervalMultiplier() const;
    void setClusterRetryIntervalMultiplier(const OAIConfigNodePropertyFloat &cluster_retry_interval_multiplier);

    virtual bool isSet() const override;

private:
    OAIConfigNodePropertyInteger service_ranking;
    bool m_service_ranking_isSet;

    OAIConfigNodePropertyInteger global_size;
    bool m_global_size_isSet;

    OAIConfigNodePropertyInteger max_disk_usage;
    bool m_max_disk_usage_isSet;

    OAIConfigNodePropertyBoolean persistence_enabled;
    bool m_persistence_enabled_isSet;

    OAIConfigNodePropertyInteger thread_pool_max_size;
    bool m_thread_pool_max_size_isSet;

    OAIConfigNodePropertyInteger scheduled_thread_pool_max_size;
    bool m_scheduled_thread_pool_max_size_isSet;

    OAIConfigNodePropertyInteger graceful_shutdown_timeout;
    bool m_graceful_shutdown_timeout_isSet;

    OAIConfigNodePropertyArray queues;
    bool m_queues_isSet;

    OAIConfigNodePropertyArray topics;
    bool m_topics_isSet;

    OAIConfigNodePropertyInteger addresses_max_delivery_attempts;
    bool m_addresses_max_delivery_attempts_isSet;

    OAIConfigNodePropertyInteger addresses_expiry_delay;
    bool m_addresses_expiry_delay_isSet;

    OAIConfigNodePropertyDropDown addresses_address_full_message_policy;
    bool m_addresses_address_full_message_policy_isSet;

    OAIConfigNodePropertyInteger addresses_max_size_bytes;
    bool m_addresses_max_size_bytes_isSet;

    OAIConfigNodePropertyInteger addresses_page_size_bytes;
    bool m_addresses_page_size_bytes_isSet;

    OAIConfigNodePropertyInteger addresses_page_cache_max_size;
    bool m_addresses_page_cache_max_size_isSet;

    OAIConfigNodePropertyString cluster_user;
    bool m_cluster_user_isSet;

    OAIConfigNodePropertyString cluster_password;
    bool m_cluster_password_isSet;

    OAIConfigNodePropertyInteger cluster_call_timeout;
    bool m_cluster_call_timeout_isSet;

    OAIConfigNodePropertyInteger cluster_call_failover_timeout;
    bool m_cluster_call_failover_timeout_isSet;

    OAIConfigNodePropertyInteger cluster_client_failure_check_period;
    bool m_cluster_client_failure_check_period_isSet;

    OAIConfigNodePropertyInteger cluster_notification_attempts;
    bool m_cluster_notification_attempts_isSet;

    OAIConfigNodePropertyInteger cluster_notification_interval;
    bool m_cluster_notification_interval_isSet;

    OAIConfigNodePropertyInteger id_cache_size;
    bool m_id_cache_size_isSet;

    OAIConfigNodePropertyInteger cluster_confirmation_window_size;
    bool m_cluster_confirmation_window_size_isSet;

    OAIConfigNodePropertyInteger cluster_connection_ttl;
    bool m_cluster_connection_ttl_isSet;

    OAIConfigNodePropertyBoolean cluster_duplicate_detection;
    bool m_cluster_duplicate_detection_isSet;

    OAIConfigNodePropertyInteger cluster_initial_connect_attempts;
    bool m_cluster_initial_connect_attempts_isSet;

    OAIConfigNodePropertyInteger cluster_max_retry_interval;
    bool m_cluster_max_retry_interval_isSet;

    OAIConfigNodePropertyInteger cluster_min_large_message_size;
    bool m_cluster_min_large_message_size_isSet;

    OAIConfigNodePropertyInteger cluster_producer_window_size;
    bool m_cluster_producer_window_size_isSet;

    OAIConfigNodePropertyInteger cluster_reconnect_attempts;
    bool m_cluster_reconnect_attempts_isSet;

    OAIConfigNodePropertyInteger cluster_retry_interval;
    bool m_cluster_retry_interval_isSet;

    OAIConfigNodePropertyFloat cluster_retry_interval_multiplier;
    bool m_cluster_retry_interval_multiplier_isSet;

};

}

#endif // OAIComAdobeCqScreensMqActivemqImplArtemisJMSProviderProperties_H
